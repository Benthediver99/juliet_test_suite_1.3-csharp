„/
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_01 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	
{ii 	
IOkk 
.kk 
	WriteLinekk 
(kk 
(kk 
intkk 
)kk 
datakk "
)kk" #
;kk# $
}ll 	
}mm 
publicpp 

overridepp 
voidpp 
Goodpp 
(pp 
)pp 
{qq 
GoodG2Brr 
(rr 
)rr 
;rr 
}ss 
privatevv 
voidvv 
GoodG2Bvv 
(vv 
)vv 
{ww 
doublexx 
dataxx 
;xx 
datazz 
=zz 
$numzz 
;zz 
{{{ 	
IO}} 
.}} 
	WriteLine}} 
(}} 
(}} 
int}} 
)}} 
data}} "
)}}" #
;}}# $
}~~ 	
} 
}ÅÅ 
}ÇÇ Î9
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_02 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
if!! 

(!! 
true!! 
)!! 
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
inttt 
)tt 
datatt "
)tt" #
;tt# $
}uu 	
}vv 
privatezz 
voidzz 
GoodG2B1zz 
(zz 
)zz 
{{{ 
double|| 
data|| 
;|| 
if}} 

(}} 
false}} 
)}} 
{~~ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
else
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
{
àà 	
IO
ää 
.
ää 
	WriteLine
ää 
(
ää 
(
ää 
int
ää 
)
ää 
data
ää "
)
ää" #
;
ää# $
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
double
ëë 
data
ëë 
;
ëë 
if
íí 

(
íí 
true
íí 
)
íí 
{
ìì 	
data
ïï 
=
ïï 
$num
ïï 
;
ïï 
}
ññ 	
else
óó 
{
òò 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
{
ùù 	
IO
üü 
.
üü 
	WriteLine
üü 
(
üü 
(
üü 
int
üü 
)
üü 
data
üü "
)
üü" #
;
üü# $
}
†† 	
}
°° 
public
££ 

override
££ 
void
££ 
Good
££ 
(
££ 
)
££ 
{
§§ 
GoodG2B1
•• 
(
•• 
)
•• 
;
•• 
GoodG2B2
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
}
ßß 
}©© 
}™™ ‘:
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_03 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
if!! 

(!! 
$num!! 
==!! 
$num!! 
)!! 
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
inttt 
)tt 
datatt "
)tt" #
;tt# $
}uu 	
}vv 
privatezz 
voidzz 
GoodG2B1zz 
(zz 
)zz 
{{{ 
double|| 
data|| 
;|| 
if}} 

(}} 
$num}} 
!=}} 
$num}} 
)}} 
{~~ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
else
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
{
àà 	
IO
ää 
.
ää 
	WriteLine
ää 
(
ää 
(
ää 
int
ää 
)
ää 
data
ää "
)
ää" #
;
ää# $
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
double
ëë 
data
ëë 
;
ëë 
if
íí 

(
íí 
$num
íí 
==
íí 
$num
íí 
)
íí 
{
ìì 	
data
ïï 
=
ïï 
$num
ïï 
;
ïï 
}
ññ 	
else
óó 
{
òò 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
{
ùù 	
IO
üü 
.
üü 
	WriteLine
üü 
(
üü 
(
üü 
int
üü 
)
üü 
data
üü "
)
üü" #
;
üü# $
}
†† 	
}
°° 
public
££ 

override
££ 
void
££ 
Good
££ 
(
££ 
)
££ 
{
§§ 
GoodG2B1
•• 
(
•• 
)
•• 
;
•• 
GoodG2B2
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
}
ßß 
}©© 
}™™ «<
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_04 B
:C D
AbstractTestCaseE U
{ 
private!! 
const!! 
bool!! 
PRIVATE_CONST_TRUE!! )
=!!* +
true!!, 0
;!!0 1
private"" 
const"" 
bool"" 
PRIVATE_CONST_FALSE"" *
=""+ ,
false""- 2
;""2 3
public%% 

override%% 
void%% 
Bad%% 
(%% 
)%% 
{&& 
double'' 
data'' 
;'' 
if(( 

((( 
PRIVATE_CONST_TRUE(( 
)(( 
{)) 	
data** 
=** 
double** 
.** 
MinValue** "
;**" #
{,, 
TcpListener-- 
listener-- $
=--% &
null--' +
;--+ ,
	TcpClient.. 
tcpConn.. !
=.." #
null..$ (
;..( )
StreamReader// 
sr// 
=//  !
null//" &
;//& '
try11 
{22 
listener33 
=33 
new33 "
TcpListener33# .
(33. /
	IPAddress33/ 8
.338 9
Parse339 >
(33> ?
$str33? K
)33K L
,33L M
$num33N S
)33S T
;33T U
tcpConn44 
=44 
listener44 &
.44& '
AcceptTcpClient44' 6
(446 7
)447 8
;448 9
sr66 
=66 
new66 
StreamReader66 )
(66) *
tcpConn66* 1
.661 2
	GetStream662 ;
(66; <
)66< =
)66= >
;66> ?
string88 
stringNumber88 '
=88( )
sr88* ,
.88, -
ReadLine88- 5
(885 6
)886 7
;887 8
if99 
(99 
stringNumber99 $
!=99% '
null99( ,
)99, -
{:: 
try;; 
{<< 
data==  
===! "
double==# )
.==) *
Parse==* /
(==/ 0
stringNumber==0 <
.==< =
Trim=== A
(==A B
)==B C
)==C D
;==D E
}>> 
catch?? 
(?? 
FormatException?? -
exceptNumberFormat??. @
)??@ A
{@@ 
IOAA 
.AA 
LoggerAA %
.AA% &
LogAA& )
(AA) *
NLogAA* .
.AA. /
LogLevelAA/ 7
.AA7 8
WarnAA8 <
,AA< =
exceptNumberFormatAA> P
,AAP Q
$str	AAR Ñ
)
AAÑ Ö
;
AAÖ Ü
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE "
exceptIOEE# +
)EE+ ,
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG !
(GG! "
NLogGG" &
.GG& '
LogLevelGG' /
.GG/ 0
WarnGG0 4
,GG4 5
exceptIOGG6 >
,GG> ?
$strGG@ [
)GG[ \
;GG\ ]
}HH 
finallyII 
{JJ 
tryLL 
{MM 
ifNN 
(NN 
srNN 
!=NN !
nullNN" &
)NN& '
{OO 
srPP 
.PP 
ClosePP $
(PP$ %
)PP% &
;PP& '
}QQ 
}RR 
catchSS 
(SS 
IOExceptionSS &
exceptIOSS' /
)SS/ 0
{TT 
IOUU 
.UU 
LoggerUU !
.UU! "
LogUU" %
(UU% &
NLogUU& *
.UU* +
LogLevelUU+ 3
.UU3 4
WarnUU4 8
,UU8 9
exceptIOUU: B
,UUB C
$strUUD `
)UU` a
;UUa b
}VV 
tryYY 
{ZZ 
if[[ 
([[ 
tcpConn[[ #
!=[[$ &
null[[' +
)[[+ ,
{\\ 
tcpConn]] #
.]]# $
Close]]$ )
(]]) *
)]]* +
;]]+ ,
}^^ 
}__ 
catch`` 
(`` 
IOException`` &
exceptIO``' /
)``/ 0
{aa 
IObb 
.bb 
Loggerbb !
.bb! "
Logbb" %
(bb% &
NLogbb& *
.bb* +
LogLevelbb+ 3
.bb3 4
Warnbb4 8
,bb8 9
exceptIObb: B
,bbB C
$strbbD ]
)bb] ^
;bb^ _
}cc 
tryee 
{ff 
ifgg 
(gg 
listenergg $
!=gg% '
nullgg( ,
)gg, -
{hh 
listenerii $
.ii$ %
Stopii% )
(ii) *
)ii* +
;ii+ ,
}jj 
}kk 
catchll 
(ll 
IOExceptionll &
exceptIOll' /
)ll/ 0
{mm 
IOnn 
.nn 
Loggernn !
.nn! "
Lognn" %
(nn% &
NLognn& *
.nn* +
LogLevelnn+ 3
.nn3 4
Warnnn4 8
,nn8 9
exceptIOnn: B
,nnB C
$strnnD _
)nn_ `
;nn` a
}oo 
}pp 
}qq 
}rr 	
elsess 
{tt 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
int{{ 
){{ 
data{{ "
){{" #
;{{# $
}|| 	
}}} 
private
ÅÅ 
void
ÅÅ 
GoodG2B1
ÅÅ 
(
ÅÅ 
)
ÅÅ 
{
ÇÇ 
double
ÉÉ 
data
ÉÉ 
;
ÉÉ 
if
ÑÑ 

(
ÑÑ !
PRIVATE_CONST_FALSE
ÑÑ 
)
ÑÑ  
{
ÖÖ 	
data
àà 
=
àà 
$num
àà 
;
àà 
}
ââ 	
else
ää 
{
ãã 	
data
çç 
=
çç 
$num
çç 
;
çç 
}
éé 	
{
èè 	
IO
ëë 
.
ëë 
	WriteLine
ëë 
(
ëë 
(
ëë 
int
ëë 
)
ëë 
data
ëë "
)
ëë" #
;
ëë# $
}
íí 	
}
ìì 
private
ññ 
void
ññ 
GoodG2B2
ññ 
(
ññ 
)
ññ 
{
óó 
double
òò 
data
òò 
;
òò 
if
ôô 

(
ôô  
PRIVATE_CONST_TRUE
ôô 
)
ôô 
{
öö 	
data
úú 
=
úú 
$num
úú 
;
úú 
}
ùù 	
else
ûû 
{
üü 	
data
¢¢ 
=
¢¢ 
$num
¢¢ 
;
¢¢ 
}
££ 	
{
§§ 	
IO
¶¶ 
.
¶¶ 
	WriteLine
¶¶ 
(
¶¶ 
(
¶¶ 
int
¶¶ 
)
¶¶ 
data
¶¶ "
)
¶¶" #
;
¶¶# $
}
ßß 	
}
®® 
public
™™ 

override
™™ 
void
™™ 
Good
™™ 
(
™™ 
)
™™ 
{
´´ 
GoodG2B1
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨ 
GoodG2B2
≠≠ 
(
≠≠ 
)
≠≠ 
;
≠≠ 
}
ÆÆ 
}∞∞ 
}±± ˛;
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_05 B
:C D
AbstractTestCaseE U
{ 
private!! 
bool!! 
privateTrue!! 
=!! 
true!! #
;!!# $
private"" 
bool"" 
privateFalse"" 
="" 
false""  %
;""% &
public%% 

override%% 
void%% 
Bad%% 
(%% 
)%% 
{&& 
double'' 
data'' 
;'' 
if(( 

((( 
privateTrue(( 
)(( 
{)) 	
data** 
=** 
double** 
.** 
MinValue** "
;**" #
{,, 
TcpListener-- 
listener-- $
=--% &
null--' +
;--+ ,
	TcpClient.. 
tcpConn.. !
=.." #
null..$ (
;..( )
StreamReader// 
sr// 
=//  !
null//" &
;//& '
try11 
{22 
listener33 
=33 
new33 "
TcpListener33# .
(33. /
	IPAddress33/ 8
.338 9
Parse339 >
(33> ?
$str33? K
)33K L
,33L M
$num33N S
)33S T
;33T U
tcpConn44 
=44 
listener44 &
.44& '
AcceptTcpClient44' 6
(446 7
)447 8
;448 9
sr66 
=66 
new66 
StreamReader66 )
(66) *
tcpConn66* 1
.661 2
	GetStream662 ;
(66; <
)66< =
)66= >
;66> ?
string88 
stringNumber88 '
=88( )
sr88* ,
.88, -
ReadLine88- 5
(885 6
)886 7
;887 8
if99 
(99 
stringNumber99 $
!=99% '
null99( ,
)99, -
{:: 
try;; 
{<< 
data==  
===! "
double==# )
.==) *
Parse==* /
(==/ 0
stringNumber==0 <
.==< =
Trim=== A
(==A B
)==B C
)==C D
;==D E
}>> 
catch?? 
(?? 
FormatException?? -
exceptNumberFormat??. @
)??@ A
{@@ 
IOAA 
.AA 
LoggerAA %
.AA% &
LogAA& )
(AA) *
NLogAA* .
.AA. /
LogLevelAA/ 7
.AA7 8
WarnAA8 <
,AA< =
exceptNumberFormatAA> P
,AAP Q
$str	AAR Ñ
)
AAÑ Ö
;
AAÖ Ü
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE "
exceptIOEE# +
)EE+ ,
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG !
(GG! "
NLogGG" &
.GG& '
LogLevelGG' /
.GG/ 0
WarnGG0 4
,GG4 5
exceptIOGG6 >
,GG> ?
$strGG@ [
)GG[ \
;GG\ ]
}HH 
finallyII 
{JJ 
tryLL 
{MM 
ifNN 
(NN 
srNN 
!=NN !
nullNN" &
)NN& '
{OO 
srPP 
.PP 
ClosePP $
(PP$ %
)PP% &
;PP& '
}QQ 
}RR 
catchSS 
(SS 
IOExceptionSS &
exceptIOSS' /
)SS/ 0
{TT 
IOUU 
.UU 
LoggerUU !
.UU! "
LogUU" %
(UU% &
NLogUU& *
.UU* +
LogLevelUU+ 3
.UU3 4
WarnUU4 8
,UU8 9
exceptIOUU: B
,UUB C
$strUUD `
)UU` a
;UUa b
}VV 
tryYY 
{ZZ 
if[[ 
([[ 
tcpConn[[ #
!=[[$ &
null[[' +
)[[+ ,
{\\ 
tcpConn]] #
.]]# $
Close]]$ )
(]]) *
)]]* +
;]]+ ,
}^^ 
}__ 
catch`` 
(`` 
IOException`` &
exceptIO``' /
)``/ 0
{aa 
IObb 
.bb 
Loggerbb !
.bb! "
Logbb" %
(bb% &
NLogbb& *
.bb* +
LogLevelbb+ 3
.bb3 4
Warnbb4 8
,bb8 9
exceptIObb: B
,bbB C
$strbbD ]
)bb] ^
;bb^ _
}cc 
tryee 
{ff 
ifgg 
(gg 
listenergg $
!=gg% '
nullgg( ,
)gg, -
{hh 
listenerii $
.ii$ %
Stopii% )
(ii) *
)ii* +
;ii+ ,
}jj 
}kk 
catchll 
(ll 
IOExceptionll &
exceptIOll' /
)ll/ 0
{mm 
IOnn 
.nn 
Loggernn !
.nn! "
Lognn" %
(nn% &
NLognn& *
.nn* +
LogLevelnn+ 3
.nn3 4
Warnnn4 8
,nn8 9
exceptIOnn: B
,nnB C
$strnnD _
)nn_ `
;nn` a
}oo 
}pp 
}qq 
}rr 	
elsess 
{tt 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
int{{ 
){{ 
data{{ "
){{" #
;{{# $
}|| 	
}}} 
private
ÅÅ 
void
ÅÅ 
GoodG2B1
ÅÅ 
(
ÅÅ 
)
ÅÅ 
{
ÇÇ 
double
ÉÉ 
data
ÉÉ 
;
ÉÉ 
if
ÑÑ 

(
ÑÑ 
privateFalse
ÑÑ 
)
ÑÑ 
{
ÖÖ 	
data
àà 
=
àà 
$num
àà 
;
àà 
}
ââ 	
else
ää 
{
ãã 	
data
çç 
=
çç 
$num
çç 
;
çç 
}
éé 	
{
èè 	
IO
ëë 
.
ëë 
	WriteLine
ëë 
(
ëë 
(
ëë 
int
ëë 
)
ëë 
data
ëë "
)
ëë" #
;
ëë# $
}
íí 	
}
ìì 
private
ññ 
void
ññ 
GoodG2B2
ññ 
(
ññ 
)
ññ 
{
óó 
double
òò 
data
òò 
;
òò 
if
ôô 

(
ôô 
privateTrue
ôô 
)
ôô 
{
öö 	
data
úú 
=
úú 
$num
úú 
;
úú 
}
ùù 	
else
ûû 
{
üü 	
data
¢¢ 
=
¢¢ 
$num
¢¢ 
;
¢¢ 
}
££ 	
{
§§ 	
IO
¶¶ 
.
¶¶ 
	WriteLine
¶¶ 
(
¶¶ 
(
¶¶ 
int
¶¶ 
)
¶¶ 
data
¶¶ "
)
¶¶" #
;
¶¶# $
}
ßß 	
}
®® 
public
™™ 

override
™™ 
void
™™ 
Good
™™ 
(
™™ 
)
™™ 
{
´´ 
GoodG2B1
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨ 
GoodG2B2
≠≠ 
(
≠≠ 
)
≠≠ 
;
≠≠ 
}
ÆÆ 
}∞∞ 
}±± ß<
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_06 B
:C D
AbstractTestCaseE U
{ 
private!! 
const!! 
int!! 
PRIVATE_CONST_FIVE!! (
=!!) *
$num!!+ ,
;!!, -
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
double&& 
data&& 
;&& 
if'' 

('' 
PRIVATE_CONST_FIVE'' 
=='' !
$num''" #
)''# $
{(( 	
data)) 
=)) 
double)) 
.)) 
MinValue)) "
;))" #
{++ 
TcpListener,, 
listener,, $
=,,% &
null,,' +
;,,+ ,
	TcpClient-- 
tcpConn-- !
=--" #
null--$ (
;--( )
StreamReader.. 
sr.. 
=..  !
null.." &
;..& '
try00 
{11 
listener22 
=22 
new22 "
TcpListener22# .
(22. /
	IPAddress22/ 8
.228 9
Parse229 >
(22> ?
$str22? K
)22K L
,22L M
$num22N S
)22S T
;22T U
tcpConn33 
=33 
listener33 &
.33& '
AcceptTcpClient33' 6
(336 7
)337 8
;338 9
sr55 
=55 
new55 
StreamReader55 )
(55) *
tcpConn55* 1
.551 2
	GetStream552 ;
(55; <
)55< =
)55= >
;55> ?
string77 
stringNumber77 '
=77( )
sr77* ,
.77, -
ReadLine77- 5
(775 6
)776 7
;777 8
if88 
(88 
stringNumber88 $
!=88% '
null88( ,
)88, -
{99 
try:: 
{;; 
data<<  
=<<! "
double<<# )
.<<) *
Parse<<* /
(<</ 0
stringNumber<<0 <
.<<< =
Trim<<= A
(<<A B
)<<B C
)<<C D
;<<D E
}== 
catch>> 
(>> 
FormatException>> -
exceptNumberFormat>>. @
)>>@ A
{?? 
IO@@ 
.@@ 
Logger@@ %
.@@% &
Log@@& )
(@@) *
NLog@@* .
.@@. /
LogLevel@@/ 7
.@@7 8
Warn@@8 <
,@@< =
exceptNumberFormat@@> P
,@@P Q
$str	@@R Ñ
)
@@Ñ Ö
;
@@Ö Ü
}AA 
}BB 
}CC 
catchDD 
(DD 
IOExceptionDD "
exceptIODD# +
)DD+ ,
{EE 
IOFF 
.FF 
LoggerFF 
.FF 
LogFF !
(FF! "
NLogFF" &
.FF& '
LogLevelFF' /
.FF/ 0
WarnFF0 4
,FF4 5
exceptIOFF6 >
,FF> ?
$strFF@ [
)FF[ \
;FF\ ]
}GG 
finallyHH 
{II 
tryKK 
{LL 
ifMM 
(MM 
srMM 
!=MM !
nullMM" &
)MM& '
{NN 
srOO 
.OO 
CloseOO $
(OO$ %
)OO% &
;OO& '
}PP 
}QQ 
catchRR 
(RR 
IOExceptionRR &
exceptIORR' /
)RR/ 0
{SS 
IOTT 
.TT 
LoggerTT !
.TT! "
LogTT" %
(TT% &
NLogTT& *
.TT* +
LogLevelTT+ 3
.TT3 4
WarnTT4 8
,TT8 9
exceptIOTT: B
,TTB C
$strTTD `
)TT` a
;TTa b
}UU 
tryXX 
{YY 
ifZZ 
(ZZ 
tcpConnZZ #
!=ZZ$ &
nullZZ' +
)ZZ+ ,
{[[ 
tcpConn\\ #
.\\# $
Close\\$ )
(\\) *
)\\* +
;\\+ ,
}]] 
}^^ 
catch__ 
(__ 
IOException__ &
exceptIO__' /
)__/ 0
{`` 
IOaa 
.aa 
Loggeraa !
.aa! "
Logaa" %
(aa% &
NLogaa& *
.aa* +
LogLevelaa+ 3
.aa3 4
Warnaa4 8
,aa8 9
exceptIOaa: B
,aaB C
$straaD ]
)aa] ^
;aa^ _
}bb 
trydd 
{ee 
ifff 
(ff 
listenerff $
!=ff% '
nullff( ,
)ff, -
{gg 
listenerhh $
.hh$ %
Stophh% )
(hh) *
)hh* +
;hh+ ,
}ii 
}jj 
catchkk 
(kk 
IOExceptionkk &
exceptIOkk' /
)kk/ 0
{ll 
IOmm 
.mm 
Loggermm !
.mm! "
Logmm" %
(mm% &
NLogmm& *
.mm* +
LogLevelmm+ 3
.mm3 4
Warnmm4 8
,mm8 9
exceptIOmm: B
,mmB C
$strmmD _
)mm_ `
;mm` a
}nn 
}oo 
}pp 
}qq 	
elserr 
{ss 	
datavv 
=vv 
$numvv 
;vv 
}ww 	
{xx 	
IOzz 
.zz 
	WriteLinezz 
(zz 
(zz 
intzz 
)zz 
datazz "
)zz" #
;zz# $
}{{ 	
}|| 
private
ÄÄ 
void
ÄÄ 
GoodG2B1
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
double
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ  
PRIVATE_CONST_FIVE
ÉÉ 
!=
ÉÉ !
$num
ÉÉ" #
)
ÉÉ# $
{
ÑÑ 	
data
áá 
=
áá 
$num
áá 
;
áá 
}
àà 	
else
ââ 
{
ää 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
int
êê 
)
êê 
data
êê "
)
êê" #
;
êê# $
}
ëë 	
}
íí 
private
ïï 
void
ïï 
GoodG2B2
ïï 
(
ïï 
)
ïï 
{
ññ 
double
óó 
data
óó 
;
óó 
if
òò 

(
òò  
PRIVATE_CONST_FIVE
òò 
==
òò !
$num
òò" #
)
òò# $
{
ôô 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
else
ùù 
{
ûû 	
data
°° 
=
°° 
$num
°° 
;
°° 
}
¢¢ 	
{
££ 	
IO
•• 
.
•• 
	WriteLine
•• 
(
•• 
(
•• 
int
•• 
)
•• 
data
•• "
)
••" #
;
••# $
}
¶¶ 	
}
ßß 
public
©© 

override
©© 
void
©© 
Good
©© 
(
©© 
)
©© 
{
™™ 
GoodG2B1
´´ 
(
´´ 
)
´´ 
;
´´ 
GoodG2B2
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨ 
}
≠≠ 
}ØØ 
}∞∞ ¯;
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_07 B
:C D
AbstractTestCaseE U
{ 
private!! 
int!! 
privateFive!! 
=!! 
$num!! 
;!!  
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
double&& 
data&& 
;&& 
if'' 

('' 
privateFive'' 
=='' 
$num'' 
)'' 
{(( 	
data)) 
=)) 
double)) 
.)) 
MinValue)) "
;))" #
{++ 
TcpListener,, 
listener,, $
=,,% &
null,,' +
;,,+ ,
	TcpClient-- 
tcpConn-- !
=--" #
null--$ (
;--( )
StreamReader.. 
sr.. 
=..  !
null.." &
;..& '
try00 
{11 
listener22 
=22 
new22 "
TcpListener22# .
(22. /
	IPAddress22/ 8
.228 9
Parse229 >
(22> ?
$str22? K
)22K L
,22L M
$num22N S
)22S T
;22T U
tcpConn33 
=33 
listener33 &
.33& '
AcceptTcpClient33' 6
(336 7
)337 8
;338 9
sr55 
=55 
new55 
StreamReader55 )
(55) *
tcpConn55* 1
.551 2
	GetStream552 ;
(55; <
)55< =
)55= >
;55> ?
string77 
stringNumber77 '
=77( )
sr77* ,
.77, -
ReadLine77- 5
(775 6
)776 7
;777 8
if88 
(88 
stringNumber88 $
!=88% '
null88( ,
)88, -
{99 
try:: 
{;; 
data<<  
=<<! "
double<<# )
.<<) *
Parse<<* /
(<</ 0
stringNumber<<0 <
.<<< =
Trim<<= A
(<<A B
)<<B C
)<<C D
;<<D E
}== 
catch>> 
(>> 
FormatException>> -
exceptNumberFormat>>. @
)>>@ A
{?? 
IO@@ 
.@@ 
Logger@@ %
.@@% &
Log@@& )
(@@) *
NLog@@* .
.@@. /
LogLevel@@/ 7
.@@7 8
Warn@@8 <
,@@< =
exceptNumberFormat@@> P
,@@P Q
$str	@@R Ñ
)
@@Ñ Ö
;
@@Ö Ü
}AA 
}BB 
}CC 
catchDD 
(DD 
IOExceptionDD "
exceptIODD# +
)DD+ ,
{EE 
IOFF 
.FF 
LoggerFF 
.FF 
LogFF !
(FF! "
NLogFF" &
.FF& '
LogLevelFF' /
.FF/ 0
WarnFF0 4
,FF4 5
exceptIOFF6 >
,FF> ?
$strFF@ [
)FF[ \
;FF\ ]
}GG 
finallyHH 
{II 
tryKK 
{LL 
ifMM 
(MM 
srMM 
!=MM !
nullMM" &
)MM& '
{NN 
srOO 
.OO 
CloseOO $
(OO$ %
)OO% &
;OO& '
}PP 
}QQ 
catchRR 
(RR 
IOExceptionRR &
exceptIORR' /
)RR/ 0
{SS 
IOTT 
.TT 
LoggerTT !
.TT! "
LogTT" %
(TT% &
NLogTT& *
.TT* +
LogLevelTT+ 3
.TT3 4
WarnTT4 8
,TT8 9
exceptIOTT: B
,TTB C
$strTTD `
)TT` a
;TTa b
}UU 
tryXX 
{YY 
ifZZ 
(ZZ 
tcpConnZZ #
!=ZZ$ &
nullZZ' +
)ZZ+ ,
{[[ 
tcpConn\\ #
.\\# $
Close\\$ )
(\\) *
)\\* +
;\\+ ,
}]] 
}^^ 
catch__ 
(__ 
IOException__ &
exceptIO__' /
)__/ 0
{`` 
IOaa 
.aa 
Loggeraa !
.aa! "
Logaa" %
(aa% &
NLogaa& *
.aa* +
LogLevelaa+ 3
.aa3 4
Warnaa4 8
,aa8 9
exceptIOaa: B
,aaB C
$straaD ]
)aa] ^
;aa^ _
}bb 
trydd 
{ee 
ifff 
(ff 
listenerff $
!=ff% '
nullff( ,
)ff, -
{gg 
listenerhh $
.hh$ %
Stophh% )
(hh) *
)hh* +
;hh+ ,
}ii 
}jj 
catchkk 
(kk 
IOExceptionkk &
exceptIOkk' /
)kk/ 0
{ll 
IOmm 
.mm 
Loggermm !
.mm! "
Logmm" %
(mm% &
NLogmm& *
.mm* +
LogLevelmm+ 3
.mm3 4
Warnmm4 8
,mm8 9
exceptIOmm: B
,mmB C
$strmmD _
)mm_ `
;mm` a
}nn 
}oo 
}pp 
}qq 	
elserr 
{ss 	
datavv 
=vv 
$numvv 
;vv 
}ww 	
{xx 	
IOzz 
.zz 
	WriteLinezz 
(zz 
(zz 
intzz 
)zz 
datazz "
)zz" #
;zz# $
}{{ 	
}|| 
private
ÄÄ 
void
ÄÄ 
GoodG2B1
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
double
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ 
privateFive
ÉÉ 
!=
ÉÉ 
$num
ÉÉ 
)
ÉÉ 
{
ÑÑ 	
data
áá 
=
áá 
$num
áá 
;
áá 
}
àà 	
else
ââ 
{
ää 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
int
êê 
)
êê 
data
êê "
)
êê" #
;
êê# $
}
ëë 	
}
íí 
private
ïï 
void
ïï 
GoodG2B2
ïï 
(
ïï 
)
ïï 
{
ññ 
double
óó 
data
óó 
;
óó 
if
òò 

(
òò 
privateFive
òò 
==
òò 
$num
òò 
)
òò 
{
ôô 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
else
ùù 
{
ûû 	
data
°° 
=
°° 
$num
°° 
;
°° 
}
¢¢ 	
{
££ 	
IO
•• 
.
•• 
	WriteLine
•• 
(
•• 
(
•• 
int
•• 
)
•• 
data
•• "
)
••" #
;
••# $
}
¶¶ 	
}
ßß 
public
©© 

override
©© 
void
©© 
Good
©© 
(
©© 
)
©© 
{
™™ 
GoodG2B1
´´ 
(
´´ 
)
´´ 
;
´´ 
GoodG2B2
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨ 
}
≠≠ 
}ØØ 
}∞∞ «>
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_08 B
:C D
AbstractTestCaseE U
{ 
private!! 
static!! 
bool!! 
PrivateReturnsTrue!! *
(!!* +
)!!+ ,
{"" 
return## 
true## 
;## 
}$$ 
private&& 
static&& 
bool&& 
PrivateReturnsFalse&& +
(&&+ ,
)&&, -
{'' 
return(( 
false(( 
;(( 
})) 
public,, 

override,, 
void,, 
Bad,, 
(,, 
),, 
{-- 
double.. 
data.. 
;.. 
if// 

(// 
PrivateReturnsTrue// 
(// 
)//  
)//  !
{00 	
data11 
=11 
double11 
.11 
MinValue11 "
;11" #
{33 
TcpListener44 
listener44 $
=44% &
null44' +
;44+ ,
	TcpClient55 
tcpConn55 !
=55" #
null55$ (
;55( )
StreamReader66 
sr66 
=66  !
null66" &
;66& '
try88 
{99 
listener:: 
=:: 
new:: "
TcpListener::# .
(::. /
	IPAddress::/ 8
.::8 9
Parse::9 >
(::> ?
$str::? K
)::K L
,::L M
$num::N S
)::S T
;::T U
tcpConn;; 
=;; 
listener;; &
.;;& '
AcceptTcpClient;;' 6
(;;6 7
);;7 8
;;;8 9
sr== 
=== 
new== 
StreamReader== )
(==) *
tcpConn==* 1
.==1 2
	GetStream==2 ;
(==; <
)==< =
)=== >
;==> ?
string?? 
stringNumber?? '
=??( )
sr??* ,
.??, -
ReadLine??- 5
(??5 6
)??6 7
;??7 8
if@@ 
(@@ 
stringNumber@@ $
!=@@% '
null@@( ,
)@@, -
{AA 
tryBB 
{CC 
dataDD  
=DD! "
doubleDD# )
.DD) *
ParseDD* /
(DD/ 0
stringNumberDD0 <
.DD< =
TrimDD= A
(DDA B
)DDB C
)DDC D
;DDD E
}EE 
catchFF 
(FF 
FormatExceptionFF -
exceptNumberFormatFF. @
)FF@ A
{GG 
IOHH 
.HH 
LoggerHH %
.HH% &
LogHH& )
(HH) *
NLogHH* .
.HH. /
LogLevelHH/ 7
.HH7 8
WarnHH8 <
,HH< =
exceptNumberFormatHH> P
,HHP Q
$str	HHR Ñ
)
HHÑ Ö
;
HHÖ Ü
}II 
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL "
exceptIOLL# +
)LL+ ,
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
exceptIONN6 >
,NN> ?
$strNN@ [
)NN[ \
;NN\ ]
}OO 
finallyPP 
{QQ 
trySS 
{TT 
ifUU 
(UU 
srUU 
!=UU !
nullUU" &
)UU& '
{VV 
srWW 
.WW 
CloseWW $
(WW$ %
)WW% &
;WW& '
}XX 
}YY 
catchZZ 
(ZZ 
IOExceptionZZ &
exceptIOZZ' /
)ZZ/ 0
{[[ 
IO\\ 
.\\ 
Logger\\ !
.\\! "
Log\\" %
(\\% &
NLog\\& *
.\\* +
LogLevel\\+ 3
.\\3 4
Warn\\4 8
,\\8 9
exceptIO\\: B
,\\B C
$str\\D `
)\\` a
;\\a b
}]] 
try`` 
{aa 
ifbb 
(bb 
tcpConnbb #
!=bb$ &
nullbb' +
)bb+ ,
{cc 
tcpConndd #
.dd# $
Closedd$ )
(dd) *
)dd* +
;dd+ ,
}ee 
}ff 
catchgg 
(gg 
IOExceptiongg &
exceptIOgg' /
)gg/ 0
{hh 
IOii 
.ii 
Loggerii !
.ii! "
Logii" %
(ii% &
NLogii& *
.ii* +
LogLevelii+ 3
.ii3 4
Warnii4 8
,ii8 9
exceptIOii: B
,iiB C
$striiD ]
)ii] ^
;ii^ _
}jj 
tryll 
{mm 
ifnn 
(nn 
listenernn $
!=nn% '
nullnn( ,
)nn, -
{oo 
listenerpp $
.pp$ %
Stoppp% )
(pp) *
)pp* +
;pp+ ,
}qq 
}rr 
catchss 
(ss 
IOExceptionss &
exceptIOss' /
)ss/ 0
{tt 
IOuu 
.uu 
Loggeruu !
.uu! "
Loguu" %
(uu% &
NLoguu& *
.uu* +
LogLeveluu+ 3
.uu3 4
Warnuu4 8
,uu8 9
exceptIOuu: B
,uuB C
$struuD _
)uu_ `
;uu` a
}vv 
}ww 
}xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
int
ÇÇ 
)
ÇÇ 
data
ÇÇ "
)
ÇÇ" #
;
ÇÇ# $
}
ÉÉ 	
}
ÑÑ 
private
àà 
void
àà 
GoodG2B1
àà 
(
àà 
)
àà 
{
ââ 
double
ää 
data
ää 
;
ää 
if
ãã 

(
ãã !
PrivateReturnsFalse
ãã 
(
ãã  
)
ãã  !
)
ãã! "
{
åå 	
data
èè 
=
èè 
$num
èè 
;
èè 
}
êê 	
else
ëë 
{
íí 	
data
îî 
=
îî 
$num
îî 
;
îî 
}
ïï 	
{
ññ 	
IO
òò 
.
òò 
	WriteLine
òò 
(
òò 
(
òò 
int
òò 
)
òò 
data
òò "
)
òò" #
;
òò# $
}
ôô 	
}
öö 
private
ùù 
void
ùù 
GoodG2B2
ùù 
(
ùù 
)
ùù 
{
ûû 
double
üü 
data
üü 
;
üü 
if
†† 

(
††  
PrivateReturnsTrue
†† 
(
†† 
)
††  
)
††  !
{
°° 	
data
££ 
=
££ 
$num
££ 
;
££ 
}
§§ 	
else
•• 
{
¶¶ 	
data
©© 
=
©© 
$num
©© 
;
©© 
}
™™ 	
{
´´ 	
IO
≠≠ 
.
≠≠ 
	WriteLine
≠≠ 
(
≠≠ 
(
≠≠ 
int
≠≠ 
)
≠≠ 
data
≠≠ "
)
≠≠" #
;
≠≠# $
}
ÆÆ 	
}
ØØ 
public
±± 

override
±± 
void
±± 
Good
±± 
(
±± 
)
±± 
{
≤≤ 
GoodG2B1
≥≥ 
(
≥≥ 
)
≥≥ 
;
≥≥ 
GoodG2B2
¥¥ 
(
¥¥ 
)
¥¥ 
;
¥¥ 
}
µµ 
}∑∑ 
}∏∏ ¸:
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_09 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
if!! 

(!! 
IO!! 
.!!  
STATIC_READONLY_TRUE!! #
)!!# $
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
inttt 
)tt 
datatt "
)tt" #
;tt# $
}uu 	
}vv 
privatezz 
voidzz 
GoodG2B1zz 
(zz 
)zz 
{{{ 
double|| 
data|| 
;|| 
if}} 

(}} 
IO}} 
.}} !
STATIC_READONLY_FALSE}} $
)}}$ %
{~~ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
else
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
{
àà 	
IO
ää 
.
ää 
	WriteLine
ää 
(
ää 
(
ää 
int
ää 
)
ää 
data
ää "
)
ää" #
;
ää# $
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
double
ëë 
data
ëë 
;
ëë 
if
íí 

(
íí 
IO
íí 
.
íí "
STATIC_READONLY_TRUE
íí #
)
íí# $
{
ìì 	
data
ïï 
=
ïï 
$num
ïï 
;
ïï 
}
ññ 	
else
óó 
{
òò 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
{
ùù 	
IO
üü 
.
üü 
	WriteLine
üü 
(
üü 
(
üü 
int
üü 
)
üü 
data
üü "
)
üü" #
;
üü# $
}
†† 	
}
°° 
public
££ 

override
££ 
void
££ 
Good
££ 
(
££ 
)
££ 
{
§§ 
GoodG2B1
•• 
(
•• 
)
•• 
;
•• 
GoodG2B2
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
}
ßß 
}©© 
}™™ ﬁ:
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_10 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
if!! 

(!! 
IO!! 
.!! 

staticTrue!! 
)!! 
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
inttt 
)tt 
datatt "
)tt" #
;tt# $
}uu 	
}vv 
privatezz 
voidzz 
GoodG2B1zz 
(zz 
)zz 
{{{ 
double|| 
data|| 
;|| 
if}} 

(}} 
IO}} 
.}} 
staticFalse}} 
)}} 
{~~ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
else
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
{
àà 	
IO
ää 
.
ää 
	WriteLine
ää 
(
ää 
(
ää 
int
ää 
)
ää 
data
ää "
)
ää" #
;
ää# $
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
double
ëë 
data
ëë 
;
ëë 
if
íí 

(
íí 
IO
íí 
.
íí 

staticTrue
íí 
)
íí 
{
ìì 	
data
ïï 
=
ïï 
$num
ïï 
;
ïï 
}
ññ 	
else
óó 
{
òò 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
{
ùù 	
IO
üü 
.
üü 
	WriteLine
üü 
(
üü 
(
üü 
int
üü 
)
üü 
data
üü "
)
üü" #
;
üü# $
}
†† 	
}
°° 
public
££ 

override
££ 
void
££ 
Good
££ 
(
££ 
)
££ 
{
§§ 
GoodG2B1
•• 
(
•• 
)
•• 
;
•• 
GoodG2B2
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
}
ßß 
}©© 
}™™ —;
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_11 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
if!! 

(!! 
IO!! 
.!! 
StaticReturnsTrue!!  
(!!  !
)!!! "
)!!" #
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
inttt 
)tt 
datatt "
)tt" #
;tt# $
}uu 	
}vv 
privatezz 
voidzz 
GoodG2B1zz 
(zz 
)zz 
{{{ 
double|| 
data|| 
;|| 
if}} 

(}} 
IO}} 
.}} 
StaticReturnsFalse}} !
(}}! "
)}}" #
)}}# $
{~~ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
else
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
{
àà 	
IO
ää 
.
ää 
	WriteLine
ää 
(
ää 
(
ää 
int
ää 
)
ää 
data
ää "
)
ää" #
;
ää# $
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
double
ëë 
data
ëë 
;
ëë 
if
íí 

(
íí 
IO
íí 
.
íí 
StaticReturnsTrue
íí  
(
íí  !
)
íí! "
)
íí" #
{
ìì 	
data
ïï 
=
ïï 
$num
ïï 
;
ïï 
}
ññ 	
else
óó 
{
òò 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
{
ùù 	
IO
üü 
.
üü 
	WriteLine
üü 
(
üü 
(
üü 
int
üü 
)
üü 
data
üü "
)
üü" #
;
üü# $
}
†† 	
}
°° 
public
££ 

override
££ 
void
££ 
Good
££ 
(
££ 
)
££ 
{
§§ 
GoodG2B1
•• 
(
•• 
)
•• 
;
•• 
GoodG2B2
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
}
ßß 
}©© 
}™™ Ô4
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_12 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
if!! 

(!! 
IO!! 
.!! $
StaticReturnsTrueOrFalse!! '
(!!' (
)!!( )
)!!) *
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
intss 
)ss 
datass "
)ss" #
;ss# $
}tt 	
}uu 
privatezz 
voidzz 
GoodG2Bzz 
(zz 
)zz 
{{{ 
double|| 
data|| 
;|| 
if}} 

(}} 
IO}} 
.}} $
StaticReturnsTrueOrFalse}} '
(}}' (
)}}( )
)}}) *
{~~ 	
data
ÄÄ 
=
ÄÄ 
$num
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
else
ÇÇ 
{
ÉÉ 	
data
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
{
áá 	
IO
ââ 
.
ââ 
	WriteLine
ââ 
(
ââ 
(
ââ 
int
ââ 
)
ââ 
data
ââ "
)
ââ" #
;
ââ# $
}
ää 	
}
ãã 
public
çç 

override
çç 
void
çç 
Good
çç 
(
çç 
)
çç 
{
éé 
GoodG2B
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì Â;
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_13 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
if!! 

(!! 
IO!! 
.!!  
STATIC_READONLY_FIVE!! #
==!!$ &
$num!!' (
)!!( )
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
inttt 
)tt 
datatt "
)tt" #
;tt# $
}uu 	
}vv 
privatezz 
voidzz 
GoodG2B1zz 
(zz 
)zz 
{{{ 
double|| 
data|| 
;|| 
if}} 

(}} 
IO}} 
.}}  
STATIC_READONLY_FIVE}} #
!=}}$ &
$num}}' (
)}}( )
{~~ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
else
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
{
àà 	
IO
ää 
.
ää 
	WriteLine
ää 
(
ää 
(
ää 
int
ää 
)
ää 
data
ää "
)
ää" #
;
ää# $
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
double
ëë 
data
ëë 
;
ëë 
if
íí 

(
íí 
IO
íí 
.
íí "
STATIC_READONLY_FIVE
íí #
==
íí$ &
$num
íí' (
)
íí( )
{
ìì 	
data
ïï 
=
ïï 
$num
ïï 
;
ïï 
}
ññ 	
else
óó 
{
òò 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
{
ùù 	
IO
üü 
.
üü 
	WriteLine
üü 
(
üü 
(
üü 
int
üü 
)
üü 
data
üü "
)
üü" #
;
üü# $
}
†† 	
}
°° 
public
££ 

override
££ 
void
££ 
Good
££ 
(
££ 
)
££ 
{
§§ 
GoodG2B1
•• 
(
•• 
)
•• 
;
•• 
GoodG2B2
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
}
ßß 
}©© 
}™™ «;
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_14 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
if!! 

(!! 
IO!! 
.!! 

staticFive!! 
==!! 
$num!! 
)!! 
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
inttt 
)tt 
datatt "
)tt" #
;tt# $
}uu 	
}vv 
privatezz 
voidzz 
GoodG2B1zz 
(zz 
)zz 
{{{ 
double|| 
data|| 
;|| 
if}} 

(}} 
IO}} 
.}} 

staticFive}} 
!=}} 
$num}} 
)}} 
{~~ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
else
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
{
àà 	
IO
ää 
.
ää 
	WriteLine
ää 
(
ää 
(
ää 
int
ää 
)
ää 
data
ää "
)
ää" #
;
ää# $
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
double
ëë 
data
ëë 
;
ëë 
if
íí 

(
íí 
IO
íí 
.
íí 

staticFive
íí 
==
íí 
$num
íí 
)
íí 
{
ìì 	
data
ïï 
=
ïï 
$num
ïï 
;
ïï 
}
ññ 	
else
óó 
{
òò 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
{
ùù 	
IO
üü 
.
üü 
	WriteLine
üü 
(
üü 
(
üü 
int
üü 
)
üü 
data
üü "
)
üü" #
;
üü# $
}
†† 	
}
°° 
public
££ 

override
££ 
void
££ 
Good
££ 
(
££ 
)
££ 
{
§§ 
GoodG2B1
•• 
(
•• 
)
•• 
;
•• 
GoodG2B2
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
}
ßß 
}©© 
}™™ ∂=
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_15 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
=   
$num   
;   
switch!! 
(!! 
$num!! 
)!! 
{"" 	
case## 
$num## 
:## 
data$$ 
=$$ 
double$$ 
.$$ 
MinValue$$ "
;$$" #
{&& 
TcpListener'' 
listener'' $
=''% &
null''' +
;''+ ,
	TcpClient(( 
tcpConn(( !
=((" #
null(($ (
;((( )
StreamReader)) 
sr)) 
=))  !
null))" &
;))& '
try++ 
{,, 
listener-- 
=-- 
new-- "
TcpListener--# .
(--. /
	IPAddress--/ 8
.--8 9
Parse--9 >
(--> ?
$str--? K
)--K L
,--L M
$num--N S
)--S T
;--T U
tcpConn.. 
=.. 
listener.. &
...& '
AcceptTcpClient..' 6
(..6 7
)..7 8
;..8 9
sr00 
=00 
new00 
StreamReader00 )
(00) *
tcpConn00* 1
.001 2
	GetStream002 ;
(00; <
)00< =
)00= >
;00> ?
string22 
stringNumber22 '
=22( )
sr22* ,
.22, -
ReadLine22- 5
(225 6
)226 7
;227 8
if33 
(33 
stringNumber33 $
!=33% '
null33( ,
)33, -
{44 
try55 
{66 
data77  
=77! "
double77# )
.77) *
Parse77* /
(77/ 0
stringNumber770 <
.77< =
Trim77= A
(77A B
)77B C
)77C D
;77D E
}88 
catch99 
(99 
FormatException99 -
exceptNumberFormat99. @
)99@ A
{:: 
IO;; 
.;; 
Logger;; %
.;;% &
Log;;& )
(;;) *
NLog;;* .
.;;. /
LogLevel;;/ 7
.;;7 8
Warn;;8 <
,;;< =
exceptNumberFormat;;> P
,;;P Q
$str	;;R Ñ
)
;;Ñ Ö
;
;;Ö Ü
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? "
exceptIO??# +
)??+ ,
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA !
(AA! "
NLogAA" &
.AA& '
LogLevelAA' /
.AA/ 0
WarnAA0 4
,AA4 5
exceptIOAA6 >
,AA> ?
$strAA@ [
)AA[ \
;AA\ ]
}BB 
finallyCC 
{DD 
tryFF 
{GG 
ifHH 
(HH 
srHH 
!=HH !
nullHH" &
)HH& '
{II 
srJJ 
.JJ 
CloseJJ $
(JJ$ %
)JJ% &
;JJ& '
}KK 
}LL 
catchMM 
(MM 
IOExceptionMM &
exceptIOMM' /
)MM/ 0
{NN 
IOOO 
.OO 
LoggerOO !
.OO! "
LogOO" %
(OO% &
NLogOO& *
.OO* +
LogLevelOO+ 3
.OO3 4
WarnOO4 8
,OO8 9
exceptIOOO: B
,OOB C
$strOOD `
)OO` a
;OOa b
}PP 
trySS 
{TT 
ifUU 
(UU 
tcpConnUU #
!=UU$ &
nullUU' +
)UU+ ,
{VV 
tcpConnWW #
.WW# $
CloseWW$ )
(WW) *
)WW* +
;WW+ ,
}XX 
}YY 
catchZZ 
(ZZ 
IOExceptionZZ &
exceptIOZZ' /
)ZZ/ 0
{[[ 
IO\\ 
.\\ 
Logger\\ !
.\\! "
Log\\" %
(\\% &
NLog\\& *
.\\* +
LogLevel\\+ 3
.\\3 4
Warn\\4 8
,\\8 9
exceptIO\\: B
,\\B C
$str\\D ]
)\\] ^
;\\^ _
}]] 
try__ 
{`` 
ifaa 
(aa 
listeneraa $
!=aa% '
nullaa( ,
)aa, -
{bb 
listenercc $
.cc$ %
Stopcc% )
(cc) *
)cc* +
;cc+ ,
}dd 
}ee 
catchff 
(ff 
IOExceptionff &
exceptIOff' /
)ff/ 0
{gg 
IOhh 
.hh 
Loggerhh !
.hh! "
Loghh" %
(hh% &
NLoghh& *
.hh* +
LogLevelhh+ 3
.hh3 4
Warnhh4 8
,hh8 9
exceptIOhh: B
,hhB C
$strhhD _
)hh_ `
;hh` a
}ii 
}jj 
}kk 
breakll 
;ll 
defaultmm 
:mm 
datapp 
=pp 
$numpp 
;pp 
breakqq 
;qq 
}rr 	
{ss 	
IOuu 
.uu 
	WriteLineuu 
(uu 
(uu 
intuu 
)uu 
datauu "
)uu" #
;uu# $
}vv 	
}ww 
private{{ 
void{{ 
GoodG2B1{{ 
({{ 
){{ 
{|| 
double}} 
data}} 
=}} 
$num}} 
;}} 
switch~~ 
(~~ 
$num~~ 
)~~ 
{ 	
case
ÄÄ 
$num
ÄÄ 
:
ÄÄ 
data
ÉÉ 
=
ÉÉ 
$num
ÉÉ 
;
ÉÉ 
break
ÑÑ 
;
ÑÑ 
default
ÖÖ 
:
ÖÖ 
data
áá 
=
áá 
$num
áá 
;
áá 
break
àà 
;
àà 
}
ââ 	
{
ää 	
IO
åå 
.
åå 
	WriteLine
åå 
(
åå 
(
åå 
int
åå 
)
åå 
data
åå "
)
åå" #
;
åå# $
}
çç 	
}
éé 
private
ëë 
void
ëë 
GoodG2B2
ëë 
(
ëë 
)
ëë 
{
íí 
double
ìì 
data
ìì 
=
ìì 
$num
ìì 
;
ìì 
switch
îî 
(
îî 
$num
îî 
)
îî 
{
ïï 	
case
ññ 
$num
ññ 
:
ññ 
data
òò 
=
òò 
$num
òò 
;
òò 
break
ôô 
;
ôô 
default
öö 
:
öö 
data
ùù 
=
ùù 
$num
ùù 
;
ùù 
break
ûû 
;
ûû 
}
üü 	
{
†† 	
IO
¢¢ 
.
¢¢ 
	WriteLine
¢¢ 
(
¢¢ 
(
¢¢ 
int
¢¢ 
)
¢¢ 
data
¢¢ "
)
¢¢" #
;
¢¢# $
}
££ 	
}
§§ 
public
¶¶ 

override
¶¶ 
void
¶¶ 
Good
¶¶ 
(
¶¶ 
)
¶¶ 
{
ßß 
GoodG2B1
®® 
(
®® 
)
®® 
;
®® 
GoodG2B2
©© 
(
©© 
)
©© 
;
©© 
}
™™ 
}¨¨ 
}≠≠ ô2
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_16 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
while!! 
(!! 
true!! 
)!! 
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
breakkk 
;kk 
}ll 	
{mm 	
IOoo 
.oo 
	WriteLineoo 
(oo 
(oo 
intoo 
)oo 
dataoo "
)oo" #
;oo# $
}pp 	
}qq 
privateuu 
voiduu 
GoodG2Buu 
(uu 
)uu 
{vv 
doubleww 
dataww 
;ww 
whilexx 
(xx 
truexx 
)xx 
{yy 	
data{{ 
={{ 
$num{{ 
;{{ 
break|| 
;|| 
}}} 	
{~~ 	
IO
ÄÄ 
.
ÄÄ 
	WriteLine
ÄÄ 
(
ÄÄ 
(
ÄÄ 
int
ÄÄ 
)
ÄÄ 
data
ÄÄ "
)
ÄÄ" #
;
ÄÄ# $
}
ÅÅ 	
}
ÇÇ 
public
ÑÑ 

override
ÑÑ 
void
ÑÑ 
Good
ÑÑ 
(
ÑÑ 
)
ÑÑ 
{
ÖÖ 
GoodG2B
ÜÜ 
(
ÜÜ 
)
ÜÜ 
;
ÜÜ 
}
áá 
}ââ 
}ää ı3
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_17 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	
forii 
(ii 
intii 
iii 
=ii 
$numii 
;ii 
iii 
<ii 
$numii 
;ii 
iii  
++ii  "
)ii" #
{jj 	
{kk 
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
intmm !
)mm! "
datamm" &
)mm& '
;mm' (
}nn 
}oo 	
}pp 
privateuu 
voiduu 
GoodG2Buu 
(uu 
)uu 
{vv 
doubleww 
dataww 
;ww 
datayy 
=yy 
$numyy 
;yy 
forzz 
(zz 
intzz 
izz 
=zz 
$numzz 
;zz 
izz 
<zz 
$numzz 
;zz 
izz  
++zz  "
)zz" #
{{{ 	
{|| 
IO~~ 
.~~ 
	WriteLine~~ 
(~~ 
(~~ 
int~~ !
)~~! "
data~~" &
)~~& '
;~~' (
} 
}
ÄÄ 	
}
ÅÅ 
public
ÉÉ 

override
ÉÉ 
void
ÉÉ 
Good
ÉÉ 
(
ÉÉ 
)
ÉÉ 
{
ÑÑ 
GoodG2B
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
}
ÜÜ 
}àà 
}ââ ¶H
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_21 B
:C D
AbstractTestCaseE U
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
double## 
data## 
;## 

badPrivate$$ 
=$$ 
true$$ 
;$$ 
data%% 
=%% 

Bad_source%% 
(%% 
)%% 
;%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
int(( 
)(( 
data(( "
)((" #
;((# $
})) 	
}** 
private,, 
double,, 

Bad_source,, 
(,, 
),, 
{-- 
double.. 
data.. 
;.. 
if// 

(// 

badPrivate// 
)// 
{00 	
data11 
=11 
double11 
.11 
MinValue11 "
;11" #
{33 
TcpListener44 
listener44 $
=44% &
null44' +
;44+ ,
	TcpClient55 
tcpConn55 !
=55" #
null55$ (
;55( )
StreamReader66 
sr66 
=66  !
null66" &
;66& '
try88 
{99 
listener:: 
=:: 
new:: "
TcpListener::# .
(::. /
	IPAddress::/ 8
.::8 9
Parse::9 >
(::> ?
$str::? K
)::K L
,::L M
$num::N S
)::S T
;::T U
tcpConn;; 
=;; 
listener;; &
.;;& '
AcceptTcpClient;;' 6
(;;6 7
);;7 8
;;;8 9
sr== 
=== 
new== 
StreamReader== )
(==) *
tcpConn==* 1
.==1 2
	GetStream==2 ;
(==; <
)==< =
)=== >
;==> ?
string?? 
stringNumber?? '
=??( )
sr??* ,
.??, -
ReadLine??- 5
(??5 6
)??6 7
;??7 8
if@@ 
(@@ 
stringNumber@@ $
!=@@% '
null@@( ,
)@@, -
{AA 
tryBB 
{CC 
dataDD  
=DD! "
doubleDD# )
.DD) *
ParseDD* /
(DD/ 0
stringNumberDD0 <
.DD< =
TrimDD= A
(DDA B
)DDB C
)DDC D
;DDD E
}EE 
catchFF 
(FF 
FormatExceptionFF -
exceptNumberFormatFF. @
)FF@ A
{GG 
IOHH 
.HH 
LoggerHH %
.HH% &
LogHH& )
(HH) *
NLogHH* .
.HH. /
LogLevelHH/ 7
.HH7 8
WarnHH8 <
,HH< =
exceptNumberFormatHH> P
,HHP Q
$str	HHR Ñ
)
HHÑ Ö
;
HHÖ Ü
}II 
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL "
exceptIOLL# +
)LL+ ,
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
exceptIONN6 >
,NN> ?
$strNN@ [
)NN[ \
;NN\ ]
}OO 
finallyPP 
{QQ 
trySS 
{TT 
ifUU 
(UU 
srUU 
!=UU !
nullUU" &
)UU& '
{VV 
srWW 
.WW 
CloseWW $
(WW$ %
)WW% &
;WW& '
}XX 
}YY 
catchZZ 
(ZZ 
IOExceptionZZ &
exceptIOZZ' /
)ZZ/ 0
{[[ 
IO\\ 
.\\ 
Logger\\ !
.\\! "
Log\\" %
(\\% &
NLog\\& *
.\\* +
LogLevel\\+ 3
.\\3 4
Warn\\4 8
,\\8 9
exceptIO\\: B
,\\B C
$str\\D `
)\\` a
;\\a b
}]] 
try`` 
{aa 
ifbb 
(bb 
tcpConnbb #
!=bb$ &
nullbb' +
)bb+ ,
{cc 
tcpConndd #
.dd# $
Closedd$ )
(dd) *
)dd* +
;dd+ ,
}ee 
}ff 
catchgg 
(gg 
IOExceptiongg &
exceptIOgg' /
)gg/ 0
{hh 
IOii 
.ii 
Loggerii !
.ii! "
Logii" %
(ii% &
NLogii& *
.ii* +
LogLevelii+ 3
.ii3 4
Warnii4 8
,ii8 9
exceptIOii: B
,iiB C
$striiD ]
)ii] ^
;ii^ _
}jj 
tryll 
{mm 
ifnn 
(nn 
listenernn $
!=nn% '
nullnn( ,
)nn, -
{oo 
listenerpp $
.pp$ %
Stoppp% )
(pp) *
)pp* +
;pp+ ,
}qq 
}rr 
catchss 
(ss 
IOExceptionss &
exceptIOss' /
)ss/ 0
{tt 
IOuu 
.uu 
Loggeruu !
.uu! "
Loguu" %
(uu% &
NLoguu& *
.uu* +
LogLeveluu+ 3
.uu3 4
Warnuu4 8
,uu8 9
exceptIOuu: B
,uuB C
$struuD _
)uu_ `
;uu` a
}vv 
}ww 
}xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
return
ÄÄ 
data
ÄÄ 
;
ÄÄ 
}
ÅÅ 
private
ÑÑ 
bool
ÑÑ 
goodG2B1_private
ÑÑ !
=
ÑÑ" #
false
ÑÑ$ )
;
ÑÑ) *
private
ÖÖ 
bool
ÖÖ 
GoodG2B2_private
ÖÖ !
=
ÖÖ" #
false
ÖÖ$ )
;
ÖÖ) *
public
áá 

override
áá 
void
áá 
Good
áá 
(
áá 
)
áá 
{
àà 
GoodG2B1
ââ 
(
ââ 
)
ââ 
;
ââ 
GoodG2B2
ää 
(
ää 
)
ää 
;
ää 
}
ãã 
private
éé 
void
éé 
GoodG2B1
éé 
(
éé 
)
éé 
{
èè 
double
êê 
data
êê 
;
êê 
goodG2B1_private
ëë 
=
ëë 
false
ëë  
;
ëë  !
data
íí 
=
íí 
GoodG2B1_source
íí 
(
íí 
)
íí  
;
íí  !
{
ìì 	
IO
ïï 
.
ïï 
	WriteLine
ïï 
(
ïï 
(
ïï 
int
ïï 
)
ïï 
data
ïï "
)
ïï" #
;
ïï# $
}
ññ 	
}
óó 
private
ôô 
double
ôô 
GoodG2B1_source
ôô "
(
ôô" #
)
ôô# $
{
öö 
double
õõ 
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
if
úú 

(
úú 
goodG2B1_private
úú 
)
úú 
{
ùù 	
data
†† 
=
†† 
$num
†† 
;
†† 
}
°° 	
else
¢¢ 
{
££ 	
data
•• 
=
•• 
$num
•• 
;
•• 
}
¶¶ 	
return
ßß 
data
ßß 
;
ßß 
}
®® 
private
´´ 
void
´´ 
GoodG2B2
´´ 
(
´´ 
)
´´ 
{
¨¨ 
double
≠≠ 
data
≠≠ 
;
≠≠ 
GoodG2B2_private
ÆÆ 
=
ÆÆ 
true
ÆÆ 
;
ÆÆ  
data
ØØ 
=
ØØ 
GoodG2B2_source
ØØ 
(
ØØ 
)
ØØ  
;
ØØ  !
{
∞∞ 	
IO
≤≤ 
.
≤≤ 
	WriteLine
≤≤ 
(
≤≤ 
(
≤≤ 
int
≤≤ 
)
≤≤ 
data
≤≤ "
)
≤≤" #
;
≤≤# $
}
≥≥ 	
}
¥¥ 
private
∂∂ 
double
∂∂ 
GoodG2B2_source
∂∂ "
(
∂∂" #
)
∂∂# $
{
∑∑ 
double
∏∏ 
data
∏∏ 
=
∏∏ 
$num
∏∏ 
;
∏∏ 
if
ππ 

(
ππ 
GoodG2B2_private
ππ 
)
ππ 
{
∫∫ 	
data
ºº 
=
ºº 
$num
ºº 
;
ºº 
}
ΩΩ 	
else
ææ 
{
øø 	
data
¬¬ 
=
¬¬ 
$num
¬¬ 
;
¬¬ 
}
√√ 	
return
ƒƒ 
data
ƒƒ 
;
ƒƒ 
}
≈≈ 
}«« 
}»» ≥
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_22a C
:D E
AbstractTestCaseF V
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_22b!! L
.!!L M
	BadSource!!M V
(!!V W
)!!W X
;!!X Y
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
int$$ 
)$$ 
data$$ "
)$$" #
;$$# $
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
double66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_22b88 L
.88L M
GoodG2B1Source88M [
(88[ \
)88\ ]
;88] ^
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
int;; 
);; 
data;; "
);;" #
;;;# $
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
doubleBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_22bDD L
.DDL M
GoodG2B2SourceDDM [
(DD[ \
)DD\ ]
;DD] ^
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
intGG 
)GG 
dataGG "
)GG" #
;GG# $
}HH 	
}II 
}KK 
}LL ∑6
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_22b C
{ 
public 

static 
double 
	BadSource "
(" #
)# $
{ 
double   
data   
;   
if!! 

(!! I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_22a!! I
.!!I J
badPublicStatic!!J Y
)!!Y Z
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
returnrr 
datarr 
;rr 
}ss 
publicxx 

staticxx 
doublexx 
GoodG2B1Sourcexx '
(xx' (
)xx( )
{yy 
doublezz 
datazz 
;zz 
if{{ 

({{ I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_22a{{ I
.{{I J 
goodG2B1PublicStatic{{J ^
){{^ _
{|| 	
data 
= 
$num 
; 
}
ÄÄ 	
else
ÅÅ 
{
ÇÇ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
return
ÜÜ 
data
ÜÜ 
;
ÜÜ 
}
áá 
public
ää 

static
ää 
double
ää 
GoodG2B2Source
ää '
(
ää' (
)
ää( )
{
ãã 
double
åå 
data
åå 
;
åå 
if
çç 

(
çç K
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_22a
çç I
.
ççI J"
GoodG2B2PublicStatic
ççJ ^
)
çç^ _
{
éé 	
data
êê 
=
êê 
$num
êê 
;
êê 
}
ëë 	
else
íí 
{
ìì 	
data
ññ 
=
ññ 
$num
ññ 
;
ññ 
}
óó 	
return
òò 
data
òò 
;
òò 
}
ôô 
}õõ 
}úú ’4
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_31 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{   
double!! 
dataCopy!! 
;!! 
{"" 	
double## 
data## 
;## 
data$$ 
=$$ 
double$$ 
.$$ 
MinValue$$ "
;$$" #
{&& 
TcpListener'' 
listener'' $
=''% &
null''' +
;''+ ,
	TcpClient(( 
tcpConn(( !
=((" #
null(($ (
;((( )
StreamReader)) 
sr)) 
=))  !
null))" &
;))& '
try++ 
{,, 
listener-- 
=-- 
new-- "
TcpListener--# .
(--. /
	IPAddress--/ 8
.--8 9
Parse--9 >
(--> ?
$str--? K
)--K L
,--L M
$num--N S
)--S T
;--T U
tcpConn.. 
=.. 
listener.. &
...& '
AcceptTcpClient..' 6
(..6 7
)..7 8
;..8 9
sr00 
=00 
new00 
StreamReader00 )
(00) *
tcpConn00* 1
.001 2
	GetStream002 ;
(00; <
)00< =
)00= >
;00> ?
string22 
stringNumber22 '
=22( )
sr22* ,
.22, -
ReadLine22- 5
(225 6
)226 7
;227 8
if33 
(33 
stringNumber33 $
!=33% '
null33( ,
)33, -
{44 
try55 
{66 
data77  
=77! "
double77# )
.77) *
Parse77* /
(77/ 0
stringNumber770 <
.77< =
Trim77= A
(77A B
)77B C
)77C D
;77D E
}88 
catch99 
(99 
FormatException99 -
exceptNumberFormat99. @
)99@ A
{:: 
IO;; 
.;; 
Logger;; %
.;;% &
Log;;& )
(;;) *
NLog;;* .
.;;. /
LogLevel;;/ 7
.;;7 8
Warn;;8 <
,;;< =
exceptNumberFormat;;> P
,;;P Q
$str	;;R Ñ
)
;;Ñ Ö
;
;;Ö Ü
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? "
exceptIO??# +
)??+ ,
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA !
(AA! "
NLogAA" &
.AA& '
LogLevelAA' /
.AA/ 0
WarnAA0 4
,AA4 5
exceptIOAA6 >
,AA> ?
$strAA@ [
)AA[ \
;AA\ ]
}BB 
finallyCC 
{DD 
tryFF 
{GG 
ifHH 
(HH 
srHH 
!=HH !
nullHH" &
)HH& '
{II 
srJJ 
.JJ 
CloseJJ $
(JJ$ %
)JJ% &
;JJ& '
}KK 
}LL 
catchMM 
(MM 
IOExceptionMM &
exceptIOMM' /
)MM/ 0
{NN 
IOOO 
.OO 
LoggerOO !
.OO! "
LogOO" %
(OO% &
NLogOO& *
.OO* +
LogLevelOO+ 3
.OO3 4
WarnOO4 8
,OO8 9
exceptIOOO: B
,OOB C
$strOOD `
)OO` a
;OOa b
}PP 
trySS 
{TT 
ifUU 
(UU 
tcpConnUU #
!=UU$ &
nullUU' +
)UU+ ,
{VV 
tcpConnWW #
.WW# $
CloseWW$ )
(WW) *
)WW* +
;WW+ ,
}XX 
}YY 
catchZZ 
(ZZ 
IOExceptionZZ &
exceptIOZZ' /
)ZZ/ 0
{[[ 
IO\\ 
.\\ 
Logger\\ !
.\\! "
Log\\" %
(\\% &
NLog\\& *
.\\* +
LogLevel\\+ 3
.\\3 4
Warn\\4 8
,\\8 9
exceptIO\\: B
,\\B C
$str\\D ]
)\\] ^
;\\^ _
}]] 
try__ 
{`` 
ifaa 
(aa 
listeneraa $
!=aa% '
nullaa( ,
)aa, -
{bb 
listenercc $
.cc$ %
Stopcc% )
(cc) *
)cc* +
;cc+ ,
}dd 
}ee 
catchff 
(ff 
IOExceptionff &
exceptIOff' /
)ff/ 0
{gg 
IOhh 
.hh 
Loggerhh !
.hh! "
Loghh" %
(hh% &
NLoghh& *
.hh* +
LogLevelhh+ 3
.hh3 4
Warnhh4 8
,hh8 9
exceptIOhh: B
,hhB C
$strhhD _
)hh_ `
;hh` a
}ii 
}jj 
}kk 
dataCopyll 
=ll 
datall 
;ll 
}mm 	
{nn 	
doubleoo 
dataoo 
=oo 
dataCopyoo "
;oo" #
{pp 
IOrr 
.rr 
	WriteLinerr 
(rr 
(rr 
intrr !
)rr! "
datarr" &
)rr& '
;rr' (
}ss 
}tt 	
}uu 
publicxx 

overridexx 
voidxx 
Goodxx 
(xx 
)xx 
{yy 
GoodG2Bzz 
(zz 
)zz 
;zz 
}{{ 
private~~ 
void~~ 
GoodG2B~~ 
(~~ 
)~~ 
{ 
double
ÄÄ 
dataCopy
ÄÄ 
;
ÄÄ 
{
ÅÅ 	
double
ÇÇ 
data
ÇÇ 
;
ÇÇ 
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
dataCopy
ÖÖ 
=
ÖÖ 
data
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
{
áá 	
double
àà 
data
àà 
=
àà 
dataCopy
àà "
;
àà" #
{
ââ 
IO
ãã 
.
ãã 
	WriteLine
ãã 
(
ãã 
(
ãã 
int
ãã !
)
ãã! "
data
ãã" &
)
ãã& '
;
ãã' (
}
åå 
}
çç 	
}
éé 
}êê 
}ëë ≥4
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_41 B
:C D
AbstractTestCaseE U
{ 
private 
static 
void 
BadSink 
(  
double  &
data' +
), -
{ 
{ 	
IO!! 
.!! 
	WriteLine!! 
(!! 
(!! 
int!! 
)!! 
data!! "
)!!" #
;!!# $
}"" 	
}## 
public%% 

override%% 
void%% 
Bad%% 
(%% 
)%% 
{&& 
double'' 
data'' 
;'' 
data(( 
=(( 
double(( 
.(( 
MinValue(( 
;(( 
{** 	
TcpListener++ 
listener++  
=++! "
null++# '
;++' (
	TcpClient,, 
tcpConn,, 
=,, 
null,,  $
;,,$ %
StreamReader-- 
sr-- 
=-- 
null-- "
;--" #
try// 
{00 
listener11 
=11 
new11 
TcpListener11 *
(11* +
	IPAddress11+ 4
.114 5
Parse115 :
(11: ;
$str11; G
)11G H
,11H I
$num11J O
)11O P
;11P Q
tcpConn22 
=22 
listener22 "
.22" #
AcceptTcpClient22# 2
(222 3
)223 4
;224 5
sr44 
=44 
new44 
StreamReader44 %
(44% &
tcpConn44& -
.44- .
	GetStream44. 7
(447 8
)448 9
)449 :
;44: ;
string66 
stringNumber66 #
=66$ %
sr66& (
.66( )
ReadLine66) 1
(661 2
)662 3
;663 4
if77 
(77 
stringNumber77  
!=77! #
null77$ (
)77( )
{88 
try99 
{:: 
data;; 
=;; 
double;; %
.;;% &
Parse;;& +
(;;+ ,
stringNumber;;, 8
.;;8 9
Trim;;9 =
(;;= >
);;> ?
);;? @
;;;@ A
}<< 
catch== 
(== 
FormatException== )
exceptNumberFormat==* <
)==< =
{>> 
IO?? 
.?? 
Logger?? !
.??! "
Log??" %
(??% &
NLog??& *
.??* +
LogLevel??+ 3
.??3 4
Warn??4 8
,??8 9
exceptNumberFormat??: L
,??L M
$str	??N Ä
)
??Ä Å
;
??Å Ç
}@@ 
}AA 
}BB 
catchCC 
(CC 
IOExceptionCC 
exceptIOCC '
)CC' (
{DD 
IOEE 
.EE 
LoggerEE 
.EE 
LogEE 
(EE 
NLogEE "
.EE" #
LogLevelEE# +
.EE+ ,
WarnEE, 0
,EE0 1
exceptIOEE2 :
,EE: ;
$strEE< W
)EEW X
;EEX Y
}FF 
finallyGG 
{HH 
tryJJ 
{KK 
ifLL 
(LL 
srLL 
!=LL 
nullLL "
)LL" #
{MM 
srNN 
.NN 
CloseNN  
(NN  !
)NN! "
;NN" #
}OO 
}PP 
catchQQ 
(QQ 
IOExceptionQQ "
exceptIOQQ# +
)QQ+ ,
{RR 
IOSS 
.SS 
LoggerSS 
.SS 
LogSS !
(SS! "
NLogSS" &
.SS& '
LogLevelSS' /
.SS/ 0
WarnSS0 4
,SS4 5
exceptIOSS6 >
,SS> ?
$strSS@ \
)SS\ ]
;SS] ^
}TT 
tryWW 
{XX 
ifYY 
(YY 
tcpConnYY 
!=YY  "
nullYY# '
)YY' (
{ZZ 
tcpConn[[ 
.[[  
Close[[  %
([[% &
)[[& '
;[[' (
}\\ 
}]] 
catch^^ 
(^^ 
IOException^^ "
exceptIO^^# +
)^^+ ,
{__ 
IO`` 
.`` 
Logger`` 
.`` 
Log`` !
(``! "
NLog``" &
.``& '
LogLevel``' /
.``/ 0
Warn``0 4
,``4 5
exceptIO``6 >
,``> ?
$str``@ Y
)``Y Z
;``Z [
}aa 
trycc 
{dd 
ifee 
(ee 
listeneree  
!=ee! #
nullee$ (
)ee( )
{ff 
listenergg  
.gg  !
Stopgg! %
(gg% &
)gg& '
;gg' (
}hh 
}ii 
catchjj 
(jj 
IOExceptionjj "
exceptIOjj# +
)jj+ ,
{kk 
IOll 
.ll 
Loggerll 
.ll 
Logll !
(ll! "
NLogll" &
.ll& '
LogLevelll' /
.ll/ 0
Warnll0 4
,ll4 5
exceptIOll6 >
,ll> ?
$strll@ [
)ll[ \
;ll\ ]
}mm 
}nn 
}oo 	
BadSinkpp 
(pp 
datapp 
)pp 
;pp 
}qq 
publictt 

overridett 
voidtt 
Goodtt 
(tt 
)tt 
{uu 
GoodG2Bvv 
(vv 
)vv 
;vv 
}ww 
privateyy 
staticyy 
voidyy 
GoodG2BSinkyy #
(yy# $
doubleyy$ *
datayy+ /
)yy0 1
{zz 
{{{ 	
IO}} 
.}} 
	WriteLine}} 
(}} 
(}} 
int}} 
)}} 
data}} "
)}}" #
;}}# $
}~~ 	
} 
private
ÇÇ 
static
ÇÇ 
void
ÇÇ 
GoodG2B
ÇÇ 
(
ÇÇ  
)
ÇÇ  !
{
ÉÉ 
double
ÑÑ 
data
ÑÑ 
;
ÑÑ 
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
GoodG2BSink
áá 
(
áá 
data
áá 
)
áá 
;
áá 
}
àà 
}ää 
}ãã Ω5
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_42 B
:C D
AbstractTestCaseE U
{ 
private 
static 
double 
	BadSource #
(# $
)$ %
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
TcpListener## 
listener##  
=##! "
null### '
;##' (
	TcpClient$$ 
tcpConn$$ 
=$$ 
null$$  $
;$$$ %
StreamReader%% 
sr%% 
=%% 
null%% "
;%%" #
try'' 
{(( 
listener)) 
=)) 
new)) 
TcpListener)) *
())* +
	IPAddress))+ 4
.))4 5
Parse))5 :
()): ;
$str)); G
)))G H
,))H I
$num))J O
)))O P
;))P Q
tcpConn** 
=** 
listener** "
.**" #
AcceptTcpClient**# 2
(**2 3
)**3 4
;**4 5
sr,, 
=,, 
new,, 
StreamReader,, %
(,,% &
tcpConn,,& -
.,,- .
	GetStream,,. 7
(,,7 8
),,8 9
),,9 :
;,,: ;
string.. 
stringNumber.. #
=..$ %
sr..& (
...( )
ReadLine..) 1
(..1 2
)..2 3
;..3 4
if// 
(// 
stringNumber//  
!=//! #
null//$ (
)//( )
{00 
try11 
{22 
data33 
=33 
double33 %
.33% &
Parse33& +
(33+ ,
stringNumber33, 8
.338 9
Trim339 =
(33= >
)33> ?
)33? @
;33@ A
}44 
catch55 
(55 
FormatException55 )
exceptNumberFormat55* <
)55< =
{66 
IO77 
.77 
Logger77 !
.77! "
Log77" %
(77% &
NLog77& *
.77* +
LogLevel77+ 3
.773 4
Warn774 8
,778 9
exceptNumberFormat77: L
,77L M
$str	77N Ä
)
77Ä Å
;
77Å Ç
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; 
exceptIO;; '
);;' (
{<< 
IO== 
.== 
Logger== 
.== 
Log== 
(== 
NLog== "
.==" #
LogLevel==# +
.==+ ,
Warn==, 0
,==0 1
exceptIO==2 :
,==: ;
$str==< W
)==W X
;==X Y
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD 
nullDD "
)DD" #
{EE 
srFF 
.FF 
CloseFF  
(FF  !
)FF! "
;FF" #
}GG 
}HH 
catchII 
(II 
IOExceptionII "
exceptIOII# +
)II+ ,
{JJ 
IOKK 
.KK 
LoggerKK 
.KK 
LogKK !
(KK! "
NLogKK" &
.KK& '
LogLevelKK' /
.KK/ 0
WarnKK0 4
,KK4 5
exceptIOKK6 >
,KK> ?
$strKK@ \
)KK\ ]
;KK] ^
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ 
!=QQ  "
nullQQ# '
)QQ' (
{RR 
tcpConnSS 
.SS  
CloseSS  %
(SS% &
)SS& '
;SS' (
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV "
exceptIOVV# +
)VV+ ,
{WW 
IOXX 
.XX 
LoggerXX 
.XX 
LogXX !
(XX! "
NLogXX" &
.XX& '
LogLevelXX' /
.XX/ 0
WarnXX0 4
,XX4 5
exceptIOXX6 >
,XX> ?
$strXX@ Y
)XXY Z
;XXZ [
}YY 
try[[ 
{\\ 
if]] 
(]] 
listener]]  
!=]]! #
null]]$ (
)]]( )
{^^ 
listener__  
.__  !
Stop__! %
(__% &
)__& '
;__' (
}`` 
}aa 
catchbb 
(bb 
IOExceptionbb "
exceptIObb# +
)bb+ ,
{cc 
IOdd 
.dd 
Loggerdd 
.dd 
Logdd !
(dd! "
NLogdd" &
.dd& '
LogLeveldd' /
.dd/ 0
Warndd0 4
,dd4 5
exceptIOdd6 >
,dd> ?
$strdd@ [
)dd[ \
;dd\ ]
}ee 
}ff 
}gg 	
returnhh 
datahh 
;hh 
}ii 
publicll 

overridell 
voidll 
Badll 
(ll 
)ll 
{mm 
doublenn 
datann 
=nn 
	BadSourcenn 
(nn  
)nn  !
;nn! "
{oo 	
IOqq 
.qq 
	WriteLineqq 
(qq 
(qq 
intqq 
)qq 
dataqq "
)qq" #
;qq# $
}rr 	
}ss 
privatevv 
staticvv 
doublevv 
GoodG2BSourcevv '
(vv' (
)vv( )
{ww 
doublexx 
dataxx 
;xx 
datazz 
=zz 
$numzz 
;zz 
return{{ 
data{{ 
;{{ 
}|| 
private 
static 
void 
GoodG2B 
(  
)  !
{
ÄÄ 
double
ÅÅ 
data
ÅÅ 
=
ÅÅ 
GoodG2BSource
ÅÅ #
(
ÅÅ# $
)
ÅÅ$ %
;
ÅÅ% &
{
ÇÇ 	
IO
ÑÑ 
.
ÑÑ 
	WriteLine
ÑÑ 
(
ÑÑ 
(
ÑÑ 
int
ÑÑ 
)
ÑÑ 
data
ÑÑ "
)
ÑÑ" #
;
ÑÑ# $
}
ÖÖ 	
}
ÜÜ 
public
àà 

override
àà 
void
àà 
Good
àà 
(
àà 
)
àà 
{
ââ 
GoodG2B
ää 
(
ää 
)
ää 
;
ää 
}
ãã 
}çç 
}éé ù7
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_45 B
:C D
AbstractTestCaseE U
{ 
private 
double 
dataBad 
; 
private 
double 
dataGoodG2B 
; 
private!! 
void!! 
BadSink!! 
(!! 
)!! 
{"" 
double## 
data## 
=## 
dataBad## 
;## 
{$$ 	
IO&& 
.&& 
	WriteLine&& 
(&& 
(&& 
int&& 
)&& 
data&& "
)&&" #
;&&# $
}'' 	
}(( 
public++ 

override++ 
void++ 
Bad++ 
(++ 
)++ 
{,, 
double-- 
data-- 
;-- 
data.. 
=.. 
double.. 
... 
MinValue.. 
;.. 
{00 	
TcpListener11 
listener11  
=11! "
null11# '
;11' (
	TcpClient22 
tcpConn22 
=22 
null22  $
;22$ %
StreamReader33 
sr33 
=33 
null33 "
;33" #
try55 
{66 
listener77 
=77 
new77 
TcpListener77 *
(77* +
	IPAddress77+ 4
.774 5
Parse775 :
(77: ;
$str77; G
)77G H
,77H I
$num77J O
)77O P
;77P Q
tcpConn88 
=88 
listener88 "
.88" #
AcceptTcpClient88# 2
(882 3
)883 4
;884 5
sr:: 
=:: 
new:: 
StreamReader:: %
(::% &
tcpConn::& -
.::- .
	GetStream::. 7
(::7 8
)::8 9
)::9 :
;::: ;
string<< 
stringNumber<< #
=<<$ %
sr<<& (
.<<( )
ReadLine<<) 1
(<<1 2
)<<2 3
;<<3 4
if== 
(== 
stringNumber==  
!===! #
null==$ (
)==( )
{>> 
try?? 
{@@ 
dataAA 
=AA 
doubleAA %
.AA% &
ParseAA& +
(AA+ ,
stringNumberAA, 8
.AA8 9
TrimAA9 =
(AA= >
)AA> ?
)AA? @
;AA@ A
}BB 
catchCC 
(CC 
FormatExceptionCC )
exceptNumberFormatCC* <
)CC< =
{DD 
IOEE 
.EE 
LoggerEE !
.EE! "
LogEE" %
(EE% &
NLogEE& *
.EE* +
LogLevelEE+ 3
.EE3 4
WarnEE4 8
,EE8 9
exceptNumberFormatEE: L
,EEL M
$str	EEN Ä
)
EEÄ Å
;
EEÅ Ç
}FF 
}GG 
}HH 
catchII 
(II 
IOExceptionII 
exceptIOII '
)II' (
{JJ 
IOKK 
.KK 
LoggerKK 
.KK 
LogKK 
(KK 
NLogKK "
.KK" #
LogLevelKK# +
.KK+ ,
WarnKK, 0
,KK0 1
exceptIOKK2 :
,KK: ;
$strKK< W
)KKW X
;KKX Y
}LL 
finallyMM 
{NN 
tryPP 
{QQ 
ifRR 
(RR 
srRR 
!=RR 
nullRR "
)RR" #
{SS 
srTT 
.TT 
CloseTT  
(TT  !
)TT! "
;TT" #
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ \
)YY\ ]
;YY] ^
}ZZ 
try]] 
{^^ 
if__ 
(__ 
tcpConn__ 
!=__  "
null__# '
)__' (
{`` 
tcpConnaa 
.aa  
Closeaa  %
(aa% &
)aa& '
;aa' (
}bb 
}cc 
catchdd 
(dd 
IOExceptiondd "
exceptIOdd# +
)dd+ ,
{ee 
IOff 
.ff 
Loggerff 
.ff 
Logff !
(ff! "
NLogff" &
.ff& '
LogLevelff' /
.ff/ 0
Warnff0 4
,ff4 5
exceptIOff6 >
,ff> ?
$strff@ Y
)ffY Z
;ffZ [
}gg 
tryii 
{jj 
ifkk 
(kk 
listenerkk  
!=kk! #
nullkk$ (
)kk( )
{ll 
listenermm  
.mm  !
Stopmm! %
(mm% &
)mm& '
;mm' (
}nn 
}oo 
catchpp 
(pp 
IOExceptionpp "
exceptIOpp# +
)pp+ ,
{qq 
IOrr 
.rr 
Loggerrr 
.rr 
Logrr !
(rr! "
NLogrr" &
.rr& '
LogLevelrr' /
.rr/ 0
Warnrr0 4
,rr4 5
exceptIOrr6 >
,rr> ?
$strrr@ [
)rr[ \
;rr\ ]
}ss 
}tt 
}uu 	
dataBadvv 
=vv 
datavv 
;vv 
BadSinkww 
(ww 
)ww 
;ww 
}xx 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B}} 
(}} 
)}} 
;}} 
}~~ 
private
ÄÄ 
void
ÄÄ 
GoodG2BSink
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
double
ÇÇ 
data
ÇÇ 
=
ÇÇ 
dataGoodG2B
ÇÇ !
;
ÇÇ! "
{
ÉÉ 	
IO
ÖÖ 
.
ÖÖ 
	WriteLine
ÖÖ 
(
ÖÖ 
(
ÖÖ 
int
ÖÖ 
)
ÖÖ 
data
ÖÖ "
)
ÖÖ" #
;
ÖÖ# $
}
ÜÜ 	
}
áá 
private
ää 
void
ää 
GoodG2B
ää 
(
ää 
)
ää 
{
ãã 
double
åå 
data
åå 
;
åå 
data
éé 
=
éé 
$num
éé 
;
éé 
dataGoodG2B
èè 
=
èè 
data
èè 
;
èè 
GoodG2BSink
êê 
(
êê 
)
êê 
;
êê 
}
ëë 
}ìì 
}îî Ω/
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_51a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
TcpListener## 
listener##  
=##! "
null### '
;##' (
	TcpClient$$ 
tcpConn$$ 
=$$ 
null$$  $
;$$$ %
StreamReader%% 
sr%% 
=%% 
null%% "
;%%" #
try'' 
{(( 
listener)) 
=)) 
new)) 
TcpListener)) *
())* +
	IPAddress))+ 4
.))4 5
Parse))5 :
()): ;
$str)); G
)))G H
,))H I
$num))J O
)))O P
;))P Q
tcpConn** 
=** 
listener** "
.**" #
AcceptTcpClient**# 2
(**2 3
)**3 4
;**4 5
sr,, 
=,, 
new,, 
StreamReader,, %
(,,% &
tcpConn,,& -
.,,- .
	GetStream,,. 7
(,,7 8
),,8 9
),,9 :
;,,: ;
string.. 
stringNumber.. #
=..$ %
sr..& (
...( )
ReadLine..) 1
(..1 2
)..2 3
;..3 4
if// 
(// 
stringNumber//  
!=//! #
null//$ (
)//( )
{00 
try11 
{22 
data33 
=33 
double33 %
.33% &
Parse33& +
(33+ ,
stringNumber33, 8
.338 9
Trim339 =
(33= >
)33> ?
)33? @
;33@ A
}44 
catch55 
(55 
FormatException55 )
exceptNumberFormat55* <
)55< =
{66 
IO77 
.77 
Logger77 !
.77! "
Log77" %
(77% &
NLog77& *
.77* +
LogLevel77+ 3
.773 4
Warn774 8
,778 9
exceptNumberFormat77: L
,77L M
$str	77N Ä
)
77Ä Å
;
77Å Ç
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; 
exceptIO;; '
);;' (
{<< 
IO== 
.== 
Logger== 
.== 
Log== 
(== 
NLog== "
.==" #
LogLevel==# +
.==+ ,
Warn==, 0
,==0 1
exceptIO==2 :
,==: ;
$str==< W
)==W X
;==X Y
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD 
nullDD "
)DD" #
{EE 
srFF 
.FF 
CloseFF  
(FF  !
)FF! "
;FF" #
}GG 
}HH 
catchII 
(II 
IOExceptionII "
exceptIOII# +
)II+ ,
{JJ 
IOKK 
.KK 
LoggerKK 
.KK 
LogKK !
(KK! "
NLogKK" &
.KK& '
LogLevelKK' /
.KK/ 0
WarnKK0 4
,KK4 5
exceptIOKK6 >
,KK> ?
$strKK@ \
)KK\ ]
;KK] ^
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ 
!=QQ  "
nullQQ# '
)QQ' (
{RR 
tcpConnSS 
.SS  
CloseSS  %
(SS% &
)SS& '
;SS' (
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV "
exceptIOVV# +
)VV+ ,
{WW 
IOXX 
.XX 
LoggerXX 
.XX 
LogXX !
(XX! "
NLogXX" &
.XX& '
LogLevelXX' /
.XX/ 0
WarnXX0 4
,XX4 5
exceptIOXX6 >
,XX> ?
$strXX@ Y
)XXY Z
;XXZ [
}YY 
try[[ 
{\\ 
if]] 
(]] 
listener]]  
!=]]! #
null]]$ (
)]]( )
{^^ 
listener__  
.__  !
Stop__! %
(__% &
)__& '
;__' (
}`` 
}aa 
catchbb 
(bb 
IOExceptionbb "
exceptIObb# +
)bb+ ,
{cc 
IOdd 
.dd 
Loggerdd 
.dd 
Logdd !
(dd! "
NLogdd" &
.dd& '
LogLeveldd' /
.dd/ 0
Warndd0 4
,dd4 5
exceptIOdd6 >
,dd> ?
$strdd@ [
)dd[ \
;dd\ ]
}ee 
}ff 
}gg 	I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_51bhh E
.hhE F
BadSinkhhF M
(hhM N
datahhN R
)hhT U
;hhU V
}ii 
publicll 

overridell 
voidll 
Goodll 
(ll 
)ll 
{mm 
GoodG2Bnn 
(nn 
)nn 
;nn 
}oo 
privaterr 
voidrr 
GoodG2Brr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
datavv 
=vv 
$numvv 
;vv I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_51bww E
.wwE F
GoodG2BSinkwwF Q
(wwQ R
datawwR V
)wwX Y
;wwY Z
}xx 
}zz 
}{{ •	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_51b C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
double### )
data##* .
)##/ 0
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
int'' 
)'' 
data'' "
)''" #
;''# $
}(( 	
})) 
}++ 
},, Ω/
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_52a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_52bii E
.iiE F
BadSinkiiF M
(iiM N
dataiiN R
)iiS T
;iiT U
}jj 
publicmm 

overridemm 
voidmm 
Goodmm 
(mm 
)mm 
{nn 
GoodG2Boo 
(oo 
)oo 
;oo 
}pp 
privatess 
voidss 
GoodG2Bss 
(ss 
)ss 
{tt 
doubleuu 
datauu 
;uu 
dataww 
=ww 
$numww 
;ww I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_52bxx E
.xxE F
GoodG2BSinkxxF Q
(xxQ R
dataxxR V
)xxW X
;xxX Y
}yy 
}{{ 
}|| Å	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_52b C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_52c E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_52c## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' •	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_52c C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
int(( 
)(( 
data(( "
)((" #
;((# $
})) 	
}** 
},, 
}-- Ω/
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_53a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_53bii E
.iiE F
BadSinkiiF M
(iiM N
dataiiN R
)iiS T
;iiT U
}jj 
publicmm 

overridemm 
voidmm 
Goodmm 
(mm 
)mm 
{nn 
GoodG2Boo 
(oo 
)oo 
;oo 
}pp 
privatess 
voidss 
GoodG2Bss 
(ss 
)ss 
{tt 
doubleuu 
datauu 
;uu 
dataww 
=ww 
$numww 
;ww I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_53bxx E
.xxE F
GoodG2BSinkxxF Q
(xxQ R
dataxxR V
)xxW X
;xxX Y
}yy 
}{{ 
}|| Å	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_53b C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_53c E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_53c## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' Å	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_53c C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_53d E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_53d## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' •	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_53d C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
int(( 
)(( 
data(( "
)((" #
;((# $
})) 	
}** 
},, 
}-- Ω/
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_54a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_54bii E
.iiE F
BadSinkiiF M
(iiM N
dataiiN R
)iiS T
;iiT U
}jj 
publicmm 

overridemm 
voidmm 
Goodmm 
(mm 
)mm 
{nn 
GoodG2Boo 
(oo 
)oo 
;oo 
}pp 
privatess 
voidss 
GoodG2Bss 
(ss 
)ss 
{tt 
doubleuu 
datauu 
;uu 
dataww 
=ww 
$numww 
;ww I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_54bxx E
.xxE F
GoodG2BSinkxxF Q
(xxQ R
dataxxR V
)xxW X
;xxX Y
}yy 
}{{ 
}|| Å	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_54b C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_54c E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_54c## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' Å	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_54c C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_54d E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_54d## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' Å	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_54d C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_54e E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_54e## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' •	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_54e C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
int(( 
)(( 
data(( "
)((" #
;((# $
})) 	
}** 
},, 
}-- ˜
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_61a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
= I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_61b S
.S T
	BadSourceT ]
(] ^
)^ _
;_ `
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
double++ 
data++ 
=++ I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_61b++ S
.++S T
GoodG2BSource++T a
(++a b
)++b c
;++c d
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
int.. 
).. 
data.. "
).." #
;..# $
}// 	
}00 
}22 
}33 Ô+
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_61b C
{ 
public 

static 
double 
	BadSource "
(" #
)# $
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	
returnii 
dataii 
;ii 
}jj 
publicoo 

staticoo 
doubleoo 
GoodG2BSourceoo &
(oo& '
)oo' (
{pp 
doubleqq 
dataqq 
;qq 
datass 
=ss 
$numss 
;ss 
returntt 
datatt 
;tt 
}uu 
}ww 
}xx √4
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_66a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	
doubleii 
[ii 
]ii 
	dataArrayii 
=ii 
newii  
doubleii! '
[ii' (
$numii( )
]ii) *
;ii* +
	dataArrayjj 
[jj 
$numjj 
]jj 
=jj 
datajj 
;jj I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_66bkk E
.kkE F
BadSinkkkF M
(kkM N
	dataArraykkN W
)kkY Z
;kkZ [
}ll 
publicoo 

overrideoo 
voidoo 
Goodoo 
(oo 
)oo 
{pp 
GoodG2Bqq 
(qq 
)qq 
;qq 
}rr 
privateuu 
staticuu 
voiduu 
GoodG2Buu 
(uu  
)uu  !
{vv 
doubleww 
dataww 
;ww 
datayy 
=yy 
$numyy 
;yy 
doublezz 
[zz 
]zz 
	dataArrayzz 
=zz 
newzz  
doublezz! '
[zz' (
$numzz( )
]zz) *
;zz* +
	dataArray{{ 
[{{ 
$num{{ 
]{{ 
={{ 
data{{ 
;{{ I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_66b|| E
.||E F
GoodG2BSink||F Q
(||Q R
	dataArray||R [
)||] ^
;||^ _
}}} 
} 
}ÄÄ Å
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_66b C
{ 
public 

static 
void 
BadSink 
( 
double %
[% &
]& '
	dataArray( 1
)2 3
{ 
double 
data 
= 
	dataArray 
[  
$num  !
]! "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
double%%# )
[%%) *
]%%* +
	dataArray%%, 5
)%%6 7
{&& 
double'' 
data'' 
='' 
	dataArray'' 
[''  
$num''  !
]''! "
;''" #
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
int** 
)** 
data** "
)**" #
;**# $
}++ 	
},, 
}.. 
}// ƒ5
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_67a C
:D E
AbstractTestCaseF V
{ 
public 

class 
	Container 
{ 
public   
double   
containerOne   "
;  " #
}!! 
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
double%% 
data%% 
;%% 
data&& 
=&& 
double&& 
.&& 
MinValue&& 
;&& 
{(( 	
TcpListener)) 
listener))  
=))! "
null))# '
;))' (
	TcpClient** 
tcpConn** 
=** 
null**  $
;**$ %
StreamReader++ 
sr++ 
=++ 
null++ "
;++" #
try-- 
{.. 
listener// 
=// 
new// 
TcpListener// *
(//* +
	IPAddress//+ 4
.//4 5
Parse//5 :
(//: ;
$str//; G
)//G H
,//H I
$num//J O
)//O P
;//P Q
tcpConn00 
=00 
listener00 "
.00" #
AcceptTcpClient00# 2
(002 3
)003 4
;004 5
sr22 
=22 
new22 
StreamReader22 %
(22% &
tcpConn22& -
.22- .
	GetStream22. 7
(227 8
)228 9
)229 :
;22: ;
string44 
stringNumber44 #
=44$ %
sr44& (
.44( )
ReadLine44) 1
(441 2
)442 3
;443 4
if55 
(55 
stringNumber55  
!=55! #
null55$ (
)55( )
{66 
try77 
{88 
data99 
=99 
double99 %
.99% &
Parse99& +
(99+ ,
stringNumber99, 8
.998 9
Trim999 =
(99= >
)99> ?
)99? @
;99@ A
}:: 
catch;; 
(;; 
FormatException;; )
exceptNumberFormat;;* <
);;< =
{<< 
IO== 
.== 
Logger== !
.==! "
Log==" %
(==% &
NLog==& *
.==* +
LogLevel==+ 3
.==3 4
Warn==4 8
,==8 9
exceptNumberFormat==: L
,==L M
$str	==N Ä
)
==Ä Å
;
==Å Ç
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA 
exceptIOAA '
)AA' (
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC 
(CC 
NLogCC "
.CC" #
LogLevelCC# +
.CC+ ,
WarnCC, 0
,CC0 1
exceptIOCC2 :
,CC: ;
$strCC< W
)CCW X
;CCX Y
}DD 
finallyEE 
{FF 
tryHH 
{II 
ifJJ 
(JJ 
srJJ 
!=JJ 
nullJJ "
)JJ" #
{KK 
srLL 
.LL 
CloseLL  
(LL  !
)LL! "
;LL" #
}MM 
}NN 
catchOO 
(OO 
IOExceptionOO "
exceptIOOO# +
)OO+ ,
{PP 
IOQQ 
.QQ 
LoggerQQ 
.QQ 
LogQQ !
(QQ! "
NLogQQ" &
.QQ& '
LogLevelQQ' /
.QQ/ 0
WarnQQ0 4
,QQ4 5
exceptIOQQ6 >
,QQ> ?
$strQQ@ \
)QQ\ ]
;QQ] ^
}RR 
tryUU 
{VV 
ifWW 
(WW 
tcpConnWW 
!=WW  "
nullWW# '
)WW' (
{XX 
tcpConnYY 
.YY  
CloseYY  %
(YY% &
)YY& '
;YY' (
}ZZ 
}[[ 
catch\\ 
(\\ 
IOException\\ "
exceptIO\\# +
)\\+ ,
{]] 
IO^^ 
.^^ 
Logger^^ 
.^^ 
Log^^ !
(^^! "
NLog^^" &
.^^& '
LogLevel^^' /
.^^/ 0
Warn^^0 4
,^^4 5
exceptIO^^6 >
,^^> ?
$str^^@ Y
)^^Y Z
;^^Z [
}__ 
tryaa 
{bb 
ifcc 
(cc 
listenercc  
!=cc! #
nullcc$ (
)cc( )
{dd 
listeneree  
.ee  !
Stopee! %
(ee% &
)ee& '
;ee' (
}ff 
}gg 
catchhh 
(hh 
IOExceptionhh "
exceptIOhh# +
)hh+ ,
{ii 
IOjj 
.jj 
Loggerjj 
.jj 
Logjj !
(jj! "
NLogjj" &
.jj& '
LogLeveljj' /
.jj/ 0
Warnjj0 4
,jj4 5
exceptIOjj6 >
,jj> ?
$strjj@ [
)jj[ \
;jj\ ]
}kk 
}ll 
}mm 	
	Containernn 
dataContainernn 
=nn  !
newnn" %
	Containernn& /
(nn/ 0
)nn0 1
;nn1 2
dataContaineroo 
.oo 
containerOneoo "
=oo# $
dataoo% )
;oo) *I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_67bpp E
.ppE F
BadSinkppF M
(ppM N
dataContainerppN [
)pp] ^
;pp^ _
}qq 
publictt 

overridett 
voidtt 
Goodtt 
(tt 
)tt 
{uu 
GoodG2Bvv 
(vv 
)vv 
;vv 
}ww 
privatezz 
staticzz 
voidzz 
GoodG2Bzz 
(zz  
)zz  !
{{{ 
double|| 
data|| 
;|| 
data~~ 
=~~ 
$num~~ 
;~~ 
	Container 
dataContainer 
=  !
new" %
	Container& /
(/ 0
)0 1
;1 2
dataContainer
ÄÄ 
.
ÄÄ 
containerOne
ÄÄ "
=
ÄÄ# $
data
ÄÄ% )
;
ÄÄ) *K
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_67b
ÅÅ E
.
ÅÅE F
GoodG2BSink
ÅÅF Q
(
ÅÅQ R
dataContainer
ÅÅR _
)
ÅÅa b
;
ÅÅb c
}
ÇÇ 
}ÑÑ 
}ÖÖ Å
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_67b C
{ 
public 

static 
void 
BadSink 
( I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_67a \
.\ ]
	Container] f
dataContainerg t
)u v
{ 
double 
data 
= 
dataContainer #
.# $
containerOne$ 0
;0 1
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_67a%%# `
.%%` a
	Container%%a j
dataContainer%%k x
)%%y z
{&& 
double'' 
data'' 
='' 
dataContainer'' #
.''# $
containerOne''$ 0
;''0 1
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
int** 
)** 
data** "
)**" #
;**# $
}++ 	
},, 
}.. 
}// †/
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_68a C
:D E
AbstractTestCaseF V
{ 
public 

static 
double 
data 
; 
public 

override 
void 
Bad 
( 
) 
{   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_68bii E
.iiE F
BadSinkiiF M
(iiM N
)iiN O
;iiO P
}jj 
publicmm 

overridemm 
voidmm 
Goodmm 
(mm 
)mm 
{nn 
GoodG2Boo 
(oo 
)oo 
;oo 
}pp 
privatess 
staticss 
voidss 
GoodG2Bss 
(ss  
)ss  !
{tt 
datavv 
=vv 
$numvv 
;vv I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_68bww E
.wwE F
GoodG2BSinkwwF Q
(wwQ R
)wwR S
;wwS T
}xx 
}zz 
}{{ π
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_68b C
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
double 
data 
= I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_68a S
.S T
dataT X
;X Y
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
double&& 
data&& 
=&& I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_68a&& S
.&&S T
data&&T X
;&&X Y
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
int)) 
))) 
data)) "
)))" #
;))# $
}** 	
}++ 
}-- 
}.. µ0
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_71a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_71bii E
.iiE F
BadSinkiiF M
(iiM N
(iiN O
ObjectiiO U
)iiU V
dataiiV Z
)ii\ ]
;ii] ^
}jj 
publicmm 

overridemm 
voidmm 
Goodmm 
(mm 
)mm 
{nn 
GoodG2Boo 
(oo 
)oo 
;oo 
}pp 
privatess 
staticss 
voidss 
GoodG2Bss 
(ss  
)ss  !
{tt 
doubleuu 
datauu 
;uu 
dataww 
=ww 
$numww 
;ww I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_71bxx E
.xxE F
GoodG2BSinkxxF Q
(xxQ R
(xxR S
ObjectxxS Y
)xxY Z
dataxxZ ^
)xx` a
;xxa b
}yy 
}{{ 
}|| Õ
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_71b C
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
double 
data 
= 
( 
double 
) 

dataObject (
;( )
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
double(( 
data(( 
=(( 
((( 
double(( 
)(( 

dataObject(( (
;((( )
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
int++ 
)++ 
data++ "
)++" #
;++# $
},, 	
}-- 
}// 
}00 È9
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_72a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	
	Hashtableii 
dataHashtableii 
=ii  !
newii" %
	Hashtableii& /
(ii/ 0
$numii0 1
)ii1 2
;ii2 3
dataHashtablejj 
.jj 
Addjj 
(jj 
$numjj 
,jj 
datajj !
)jj! "
;jj" #
dataHashtablekk 
.kk 
Addkk 
(kk 
$numkk 
,kk 
datakk !
)kk! "
;kk" #
dataHashtablell 
.ll 
Addll 
(ll 
$numll 
,ll 
datall !
)ll! "
;ll" #I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_72bmm E
.mmE F
BadSinkmmF M
(mmM N
dataHashtablemmN [
)mm] ^
;mm^ _
}nn 
publicqq 

overrideqq 
voidqq 
Goodqq 
(qq 
)qq 
{rr 
GoodG2Bss 
(ss 
)ss 
;ss 
}tt 
privateww 
staticww 
voidww 
GoodG2Bww 
(ww  
)ww  !
{xx 
doubleyy 
datayy 
;yy 
data{{ 
={{ 
$num{{ 
;{{ 
	Hashtable|| 
dataHashtable|| 
=||  !
new||" %
	Hashtable||& /
(||/ 0
$num||0 1
)||1 2
;||2 3
dataHashtable}} 
.}} 
Add}} 
(}} 
$num}} 
,}} 
data}} !
)}}! "
;}}" #
dataHashtable~~ 
.~~ 
Add~~ 
(~~ 
$num~~ 
,~~ 
data~~ !
)~~! "
;~~" #
dataHashtable 
. 
Add 
( 
$num 
, 
data !
)! "
;" #K
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_72b
ÄÄ E
.
ÄÄE F
GoodG2BSink
ÄÄF Q
(
ÄÄQ R
dataHashtable
ÄÄR _
)
ÄÄa b
;
ÄÄb c
}
ÅÅ 
}ÉÉ 
}ÑÑ ø
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_72b C
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
double 
data 
= 
( 
double 
) 
dataHashtable ,
[, -
$num- .
]. /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
double(( 
data(( 
=(( 
((( 
double(( 
)(( 
dataHashtable(( ,
[((, -
$num((- .
]((. /
;((/ 0
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
int++ 
)++ 
data++ "
)++" #
;++# $
},, 	
}-- 
}// 
}00 ˚9
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_73a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{   
double!! 
data!! 
;!! 
data"" 
="" 
double"" 
."" 
MinValue"" 
;"" 
{$$ 	
TcpListener%% 
listener%%  
=%%! "
null%%# '
;%%' (
	TcpClient&& 
tcpConn&& 
=&& 
null&&  $
;&&$ %
StreamReader'' 
sr'' 
='' 
null'' "
;''" #
try)) 
{** 
listener++ 
=++ 
new++ 
TcpListener++ *
(++* +
	IPAddress+++ 4
.++4 5
Parse++5 :
(++: ;
$str++; G
)++G H
,++H I
$num++J O
)++O P
;++P Q
tcpConn,, 
=,, 
listener,, "
.,," #
AcceptTcpClient,,# 2
(,,2 3
),,3 4
;,,4 5
sr.. 
=.. 
new.. 
StreamReader.. %
(..% &
tcpConn..& -
...- .
	GetStream... 7
(..7 8
)..8 9
)..9 :
;..: ;
string00 
stringNumber00 #
=00$ %
sr00& (
.00( )
ReadLine00) 1
(001 2
)002 3
;003 4
if11 
(11 
stringNumber11  
!=11! #
null11$ (
)11( )
{22 
try33 
{44 
data55 
=55 
double55 %
.55% &
Parse55& +
(55+ ,
stringNumber55, 8
.558 9
Trim559 =
(55= >
)55> ?
)55? @
;55@ A
}66 
catch77 
(77 
FormatException77 )
exceptNumberFormat77* <
)77< =
{88 
IO99 
.99 
Logger99 !
.99! "
Log99" %
(99% &
NLog99& *
.99* +
LogLevel99+ 3
.993 4
Warn994 8
,998 9
exceptNumberFormat99: L
,99L M
$str	99N Ä
)
99Ä Å
;
99Å Ç
}:: 
};; 
}<< 
catch== 
(== 
IOException== 
exceptIO== '
)==' (
{>> 
IO?? 
.?? 
Logger?? 
.?? 
Log?? 
(?? 
NLog?? "
.??" #
LogLevel??# +
.??+ ,
Warn??, 0
,??0 1
exceptIO??2 :
,??: ;
$str??< W
)??W X
;??X Y
}@@ 
finallyAA 
{BB 
tryDD 
{EE 
ifFF 
(FF 
srFF 
!=FF 
nullFF "
)FF" #
{GG 
srHH 
.HH 
CloseHH  
(HH  !
)HH! "
;HH" #
}II 
}JJ 
catchKK 
(KK 
IOExceptionKK "
exceptIOKK# +
)KK+ ,
{LL 
IOMM 
.MM 
LoggerMM 
.MM 
LogMM !
(MM! "
NLogMM" &
.MM& '
LogLevelMM' /
.MM/ 0
WarnMM0 4
,MM4 5
exceptIOMM6 >
,MM> ?
$strMM@ \
)MM\ ]
;MM] ^
}NN 
tryQQ 
{RR 
ifSS 
(SS 
tcpConnSS 
!=SS  "
nullSS# '
)SS' (
{TT 
tcpConnUU 
.UU  
CloseUU  %
(UU% &
)UU& '
;UU' (
}VV 
}WW 
catchXX 
(XX 
IOExceptionXX "
exceptIOXX# +
)XX+ ,
{YY 
IOZZ 
.ZZ 
LoggerZZ 
.ZZ 
LogZZ !
(ZZ! "
NLogZZ" &
.ZZ& '
LogLevelZZ' /
.ZZ/ 0
WarnZZ0 4
,ZZ4 5
exceptIOZZ6 >
,ZZ> ?
$strZZ@ Y
)ZZY Z
;ZZZ [
}[[ 
try]] 
{^^ 
if__ 
(__ 
listener__  
!=__! #
null__$ (
)__( )
{`` 
listeneraa  
.aa  !
Stopaa! %
(aa% &
)aa& '
;aa' (
}bb 
}cc 
catchdd 
(dd 
IOExceptiondd "
exceptIOdd# +
)dd+ ,
{ee 
IOff 
.ff 
Loggerff 
.ff 
Logff !
(ff! "
NLogff" &
.ff& '
LogLevelff' /
.ff/ 0
Warnff0 4
,ff4 5
exceptIOff6 >
,ff> ?
$strff@ [
)ff[ \
;ff\ ]
}gg 
}hh 
}ii 	

LinkedListjj 
<jj 
doublejj 
>jj 
dataLinkedListjj )
=jj* +
newjj, /

LinkedListjj0 :
<jj: ;
doublejj; A
>jjA B
(jjB C
)jjC D
;jjD E
dataLinkedListkk 
.kk 
AddLastkk 
(kk 
datakk #
)kk# $
;kk$ %
dataLinkedListll 
.ll 
AddLastll 
(ll 
datall #
)ll# $
;ll$ %
dataLinkedListmm 
.mm 
AddLastmm 
(mm 
datamm #
)mm# $
;mm$ %I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_73bnn E
.nnE F
BadSinknnF M
(nnM N
dataLinkedListnnN \
)nn^ _
;nn_ `
}oo 
publicrr 

overriderr 
voidrr 
Goodrr 
(rr 
)rr 
{ss 
GoodG2Btt 
(tt 
)tt 
;tt 
}uu 
privatexx 
staticxx 
voidxx 
GoodG2Bxx 
(xx  
)xx  !
{yy 
doublezz 
datazz 
;zz 
data|| 
=|| 
$num|| 
;|| 

LinkedList}} 
<}} 
double}} 
>}} 
dataLinkedList}} )
=}}* +
new}}, /

LinkedList}}0 :
<}}: ;
double}}; A
>}}A B
(}}B C
)}}C D
;}}D E
dataLinkedList~~ 
.~~ 
AddLast~~ 
(~~ 
data~~ #
)~~# $
;~~$ %
dataLinkedList 
. 
AddLast 
( 
data #
)# $
;$ %
dataLinkedList
ÄÄ 
.
ÄÄ 
AddLast
ÄÄ 
(
ÄÄ 
data
ÄÄ #
)
ÄÄ# $
;
ÄÄ$ %K
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_73b
ÅÅ E
.
ÅÅE F
GoodG2BSink
ÅÅF Q
(
ÅÅQ R
dataLinkedList
ÅÅR `
)
ÅÅb c
;
ÅÅc d
}
ÇÇ 
}ÑÑ 
}ÖÖ Î
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_73b C
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
double* 0
>0 1
dataLinkedList2 @
)A B
{ 
double 
data 
= 
dataLinkedList $
.$ %
Last% )
.) *
Value* /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
double&&. 4
>&&4 5
dataLinkedList&&6 D
)&&E F
{'' 
double(( 
data(( 
=(( 
dataLinkedList(( $
.(($ %
Last((% )
.(() *
Value((* /
;((/ 0
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
int++ 
)++ 
data++ "
)++" #
;++# $
},, 	
}-- 
}// 
}00 õ<
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_74a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	

Dictionaryii 
<ii 
intii 
,ii 
doubleii 
>ii 
dataDictionaryii -
=ii. /
newii0 3

Dictionaryii4 >
<ii> ?
intii? B
,iiB C
doubleiiC I
>iiI J
(iiJ K
)iiK L
;iiL M
dataDictionaryjj 
.jj 
Addjj 
(jj 
$numjj 
,jj 
datajj "
)jj" #
;jj# $
dataDictionarykk 
.kk 
Addkk 
(kk 
$numkk 
,kk 
datakk "
)kk" #
;kk# $
dataDictionaryll 
.ll 
Addll 
(ll 
$numll 
,ll 
datall "
)ll" #
;ll# $I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_74bmm E
.mmE F
BadSinkmmF M
(mmM N
dataDictionarymmN \
)mm^ _
;mm_ `
}nn 
publicqq 

overrideqq 
voidqq 
Goodqq 
(qq 
)qq 
{rr 
GoodG2Bss 
(ss 
)ss 
;ss 
}tt 
privateww 
staticww 
voidww 
GoodG2Bww 
(ww  
)ww  !
{xx 
doubleyy 
datayy 
;yy 
data{{ 
={{ 
$num{{ 
;{{ 

Dictionary|| 
<|| 
int|| 
,|| 
double|| 
>|| 
dataDictionary|| -
=||. /
new||0 3

Dictionary||4 >
<||> ?
int||? B
,||B C
double||C I
>||I J
(||J K
)||K L
;||L M
dataDictionary}} 
.}} 
Add}} 
(}} 
$num}} 
,}} 
data}} "
)}}" #
;}}# $
dataDictionary~~ 
.~~ 
Add~~ 
(~~ 
$num~~ 
,~~ 
data~~ "
)~~" #
;~~# $
dataDictionary 
. 
Add 
( 
$num 
, 
data "
)" #
;# $K
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_74b
ÄÄ E
.
ÄÄE F
GoodG2BSink
ÄÄF Q
(
ÄÄQ R
dataDictionary
ÄÄR `
)
ÄÄb c
;
ÄÄc d
}
ÅÅ 
}ÉÉ 
}ÑÑ Ö
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_74b C
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
double. 4
>4 5
dataDictionary6 D
)E F
{ 
double 
data 
= 
dataDictionary $
[$ %
$num% &
]& '
;' (
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
double&&2 8
>&&8 9
dataDictionary&&: H
)&&I J
{'' 
double(( 
data(( 
=(( 
dataDictionary(( $
[(($ %
$num((% &
]((& '
;((' (
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
int++ 
)++ 
data++ "
)++" #
;++# $
},, 	
}-- 
}// 
}00 „D
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_75a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{   
double!! 
data!! 
;!! 
data"" 
="" 
double"" 
."" 
MinValue"" 
;"" 
{$$ 	
TcpListener%% 
listener%%  
=%%! "
null%%# '
;%%' (
	TcpClient&& 
tcpConn&& 
=&& 
null&&  $
;&&$ %
StreamReader'' 
sr'' 
='' 
null'' "
;''" #
try)) 
{** 
listener++ 
=++ 
new++ 
TcpListener++ *
(++* +
	IPAddress+++ 4
.++4 5
Parse++5 :
(++: ;
$str++; G
)++G H
,++H I
$num++J O
)++O P
;++P Q
tcpConn,, 
=,, 
listener,, "
.,," #
AcceptTcpClient,,# 2
(,,2 3
),,3 4
;,,4 5
sr.. 
=.. 
new.. 
StreamReader.. %
(..% &
tcpConn..& -
...- .
	GetStream... 7
(..7 8
)..8 9
)..9 :
;..: ;
string00 
stringNumber00 #
=00$ %
sr00& (
.00( )
ReadLine00) 1
(001 2
)002 3
;003 4
if11 
(11 
stringNumber11  
!=11! #
null11$ (
)11( )
{22 
try33 
{44 
data55 
=55 
double55 %
.55% &
Parse55& +
(55+ ,
stringNumber55, 8
.558 9
Trim559 =
(55= >
)55> ?
)55? @
;55@ A
}66 
catch77 
(77 
FormatException77 )
exceptNumberFormat77* <
)77< =
{88 
IO99 
.99 
Logger99 !
.99! "
Log99" %
(99% &
NLog99& *
.99* +
LogLevel99+ 3
.993 4
Warn994 8
,998 9
exceptNumberFormat99: L
,99L M
$str	99N Ä
)
99Ä Å
;
99Å Ç
}:: 
};; 
}<< 
catch== 
(== 
IOException== 
exceptIO== '
)==' (
{>> 
IO?? 
.?? 
Logger?? 
.?? 
Log?? 
(?? 
NLog?? "
.??" #
LogLevel??# +
.??+ ,
Warn??, 0
,??0 1
exceptIO??2 :
,??: ;
$str??< W
)??W X
;??X Y
}@@ 
finallyAA 
{BB 
tryDD 
{EE 
ifFF 
(FF 
srFF 
!=FF 
nullFF "
)FF" #
{GG 
srHH 
.HH 
CloseHH  
(HH  !
)HH! "
;HH" #
}II 
}JJ 
catchKK 
(KK 
IOExceptionKK "
exceptIOKK# +
)KK+ ,
{LL 
IOMM 
.MM 
LoggerMM 
.MM 
LogMM !
(MM! "
NLogMM" &
.MM& '
LogLevelMM' /
.MM/ 0
WarnMM0 4
,MM4 5
exceptIOMM6 >
,MM> ?
$strMM@ \
)MM\ ]
;MM] ^
}NN 
tryQQ 
{RR 
ifSS 
(SS 
tcpConnSS 
!=SS  "
nullSS# '
)SS' (
{TT 
tcpConnUU 
.UU  
CloseUU  %
(UU% &
)UU& '
;UU' (
}VV 
}WW 
catchXX 
(XX 
IOExceptionXX "
exceptIOXX# +
)XX+ ,
{YY 
IOZZ 
.ZZ 
LoggerZZ 
.ZZ 
LogZZ !
(ZZ! "
NLogZZ" &
.ZZ& '
LogLevelZZ' /
.ZZ/ 0
WarnZZ0 4
,ZZ4 5
exceptIOZZ6 >
,ZZ> ?
$strZZ@ Y
)ZZY Z
;ZZZ [
}[[ 
try]] 
{^^ 
if__ 
(__ 
listener__  
!=__! #
null__$ (
)__( )
{`` 
listeneraa  
.aa  !
Stopaa! %
(aa% &
)aa& '
;aa' (
}bb 
}cc 
catchdd 
(dd 
IOExceptiondd "
exceptIOdd# +
)dd+ ,
{ee 
IOff 
.ff 
Loggerff 
.ff 
Logff !
(ff! "
NLogff" &
.ff& '
LogLevelff' /
.ff/ 0
Warnff0 4
,ff4 5
exceptIOff6 >
,ff> ?
$strff@ [
)ff[ \
;ff\ ]
}gg 
}hh 
}ii 	
bytekk 
[kk 
]kk 
dataSerializedkk 
=kk 
nullkk  $
;kk$ %
tryll 
{mm 	
BinaryFormatternn 
bfnn 
=nn  
newnn! $
BinaryFormatternn% 4
(nn4 5
)nn5 6
;nn6 7
usingoo 
(oo 
varoo 
msoo 
=oo 
newoo 
MemoryStreamoo  ,
(oo, -
)oo- .
)oo. /
{pp 
bfqq 
.qq 
	Serializeqq 
(qq 
msqq 
,qq  
dataqq! %
)qq% &
;qq& '
dataSerializedrr 
=rr  
msrr! #
.rr# $
ToArrayrr$ +
(rr+ ,
)rr, -
;rr- .
}ss I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_75btt I
.ttI J
BadSinkttJ Q
(ttQ R
dataSerializedttR `
)ttb c
;ttc d
}uu 	
catchvv 
(vv "
SerializationExceptionvv %
exceptSerializevv& 5
)vv5 6
{ww 	
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx 
.xx 
LogLevelxx '
.xx' (
Warnxx( ,
,xx, -
$strxx. X
,xxX Y
exceptSerializexxZ i
)xxi j
;xxj k
}yy 	
}zz 
public}} 

override}} 
void}} 
Good}} 
(}} 
)}} 
{~~ 
GoodG2B 
( 
) 
; 
}
ÄÄ 
private
ÉÉ 
static
ÉÉ 
void
ÉÉ 
GoodG2B
ÉÉ 
(
ÉÉ  
)
ÉÉ  !
{
ÑÑ 
double
ÖÖ 
data
ÖÖ 
;
ÖÖ 
data
áá 
=
áá 
$num
áá 
;
áá 
byte
ââ 
[
ââ 
]
ââ 
dataSerialized
ââ 
=
ââ 
null
ââ  $
;
ââ$ %
try
ää 
{
ãã 	
BinaryFormatter
åå 
bf
åå 
=
åå  
new
åå! $
BinaryFormatter
åå% 4
(
åå4 5
)
åå5 6
;
åå6 7
using
çç 
(
çç 
var
çç 
ms
çç 
=
çç 
new
çç 
MemoryStream
çç  ,
(
çç, -
)
çç- .
)
çç. /
{
éé 
bf
èè 
.
èè 
	Serialize
èè 
(
èè 
ms
èè 
,
èè  
data
èè! %
)
èè% &
;
èè& '
dataSerialized
êê 
=
êê  
ms
êê! #
.
êê# $
ToArray
êê$ +
(
êê+ ,
)
êê, -
;
êê- .
}
ëë K
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_75b
íí I
.
ííI J
GoodG2BSink
ííJ U
(
ííU V
dataSerialized
ííV d
)
ííf g
;
ííg h
}
ìì 	
catch
îî 
(
îî $
SerializationException
îî %
exceptSerialize
îî& 5
)
îî5 6
{
ïï 	
IO
ññ 
.
ññ 
Logger
ññ 
.
ññ 
Log
ññ 
(
ññ 
NLog
ññ 
.
ññ 
LogLevel
ññ '
.
ññ' (
Warn
ññ( ,
,
ññ, -
$str
ññ. X
,
ññX Y
exceptSerialize
ññZ i
)
ññi j
;
ññj k
}
óó 	
}
òò 
}öö 
}õõ Î!
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_75b C
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
double   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
double&& 
)&& 
binForm&& &
.&&& '
Deserialize&&' 2
(&&2 3
	memStream&&3 <
)&&< =
;&&= >
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
int** !
)**! "
data**" &
)**& '
;**' (
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
double:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
double@@ 
)@@ 
binForm@@ &
.@@& '
Deserialize@@' 2
(@@2 3
	memStream@@3 <
)@@< =
;@@= >
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
intDD !
)DD! "
dataDD" &
)DD& '
;DD' (
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN Á2
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_81a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	M
ACWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_81_baseii I

baseObjectiiJ T
=iiU V
newiiW ZM
@CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_81_bad	ii[ õ
(
iiõ ú
)
iiú ù
;
iiù û

baseObjectjj 
.jj 
Actionjj 
(jj 
datajj 
)jj  
;jj  !
}kk 
publicnn 

overridenn 
voidnn 
Goodnn 
(nn 
)nn 
{oo 
GoodG2Bpp 
(pp 
)pp 
;pp 
}qq 
privatett 
voidtt 
GoodG2Btt 
(tt 
)tt 
{uu 
doublevv 
datavv 
;vv 
dataxx 
=xx 
$numxx 
;xx M
ACWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_81_baseyy I

baseObjectyyJ T
=yyU V
newyyW ZQ
DCWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_81_goodG2B	yy[ ü
(
yyü †
)
yy† °
;
yy° ¢

baseObjectzz 
.zz 
Actionzz 
(zz 
datazz 
)zz  
;zz  !
}{{ 
}}} 
}~~ î
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class L
@CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_81_bad F
:G HN
ACWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_81_base	I ä
{ 
public 

override 
void 
Action 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
}   
}!! 
}"" ¸
ƒC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 M
ACWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_81_base P
{ 
public 

abstract 
void 
Action 
(  
double  &
data' +
), -
;- .
} 
} ú
«C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class P
DCWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_81_goodG2B J
:K LN
ACWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_81_base	M é
{ 
public 

override 
void 
Action 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
}   
}!! 
}"" Á/
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_01 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	
{ii 	
IOkk 
.kk 
	WriteLinekk 
(kk 
(kk 
longkk 
)kk 
datakk #
)kk# $
;kk$ %
}ll 	
}mm 
publicpp 

overridepp 
voidpp 
Goodpp 
(pp 
)pp 
{qq 
GoodG2Brr 
(rr 
)rr 
;rr 
}ss 
privatevv 
voidvv 
GoodG2Bvv 
(vv 
)vv 
{ww 
doublexx 
dataxx 
;xx 
datazz 
=zz 
$numzz 
;zz 
{{{ 	
IO}} 
.}} 
	WriteLine}} 
(}} 
(}} 
long}} 
)}} 
data}} #
)}}# $
;}}$ %
}~~ 	
} 
}ÅÅ 
}ÇÇ 9
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_02 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
if!! 

(!! 
true!! 
)!! 
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
longtt 
)tt 
datatt #
)tt# $
;tt$ %
}uu 	
}vv 
privatezz 
voidzz 
GoodG2B1zz 
(zz 
)zz 
{{{ 
double|| 
data|| 
;|| 
if}} 

(}} 
false}} 
)}} 
{~~ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
else
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
{
àà 	
IO
ää 
.
ää 
	WriteLine
ää 
(
ää 
(
ää 
long
ää 
)
ää 
data
ää #
)
ää# $
;
ää$ %
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
double
ëë 
data
ëë 
;
ëë 
if
íí 

(
íí 
true
íí 
)
íí 
{
ìì 	
data
ïï 
=
ïï 
$num
ïï 
;
ïï 
}
ññ 	
else
óó 
{
òò 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
{
ùù 	
IO
üü 
.
üü 
	WriteLine
üü 
(
üü 
(
üü 
long
üü 
)
üü 
data
üü #
)
üü# $
;
üü$ %
}
†† 	
}
°° 
public
££ 

override
££ 
void
££ 
Good
££ 
(
££ 
)
££ 
{
§§ 
GoodG2B1
•• 
(
•• 
)
•• 
;
•• 
GoodG2B2
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
}
ßß 
}©© 
}™™ Ÿ:
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_03 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
if!! 

(!! 
$num!! 
==!! 
$num!! 
)!! 
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
longtt 
)tt 
datatt #
)tt# $
;tt$ %
}uu 	
}vv 
privatezz 
voidzz 
GoodG2B1zz 
(zz 
)zz 
{{{ 
double|| 
data|| 
;|| 
if}} 

(}} 
$num}} 
!=}} 
$num}} 
)}} 
{~~ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
else
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
{
àà 	
IO
ää 
.
ää 
	WriteLine
ää 
(
ää 
(
ää 
long
ää 
)
ää 
data
ää #
)
ää# $
;
ää$ %
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
double
ëë 
data
ëë 
;
ëë 
if
íí 

(
íí 
$num
íí 
==
íí 
$num
íí 
)
íí 
{
ìì 	
data
ïï 
=
ïï 
$num
ïï 
;
ïï 
}
ññ 	
else
óó 
{
òò 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
{
ùù 	
IO
üü 
.
üü 
	WriteLine
üü 
(
üü 
(
üü 
long
üü 
)
üü 
data
üü #
)
üü# $
;
üü$ %
}
†† 	
}
°° 
public
££ 

override
££ 
void
££ 
Good
££ 
(
££ 
)
££ 
{
§§ 
GoodG2B1
•• 
(
•• 
)
•• 
;
•• 
GoodG2B2
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
}
ßß 
}©© 
}™™ Ã<
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_04 C
:D E
AbstractTestCaseF V
{ 
private!! 
const!! 
bool!! 
PRIVATE_CONST_TRUE!! )
=!!* +
true!!, 0
;!!0 1
private"" 
const"" 
bool"" 
PRIVATE_CONST_FALSE"" *
=""+ ,
false""- 2
;""2 3
public%% 

override%% 
void%% 
Bad%% 
(%% 
)%% 
{&& 
double'' 
data'' 
;'' 
if(( 

((( 
PRIVATE_CONST_TRUE(( 
)(( 
{)) 	
data** 
=** 
double** 
.** 
MinValue** "
;**" #
{,, 
TcpListener-- 
listener-- $
=--% &
null--' +
;--+ ,
	TcpClient.. 
tcpConn.. !
=.." #
null..$ (
;..( )
StreamReader// 
sr// 
=//  !
null//" &
;//& '
try11 
{22 
listener33 
=33 
new33 "
TcpListener33# .
(33. /
	IPAddress33/ 8
.338 9
Parse339 >
(33> ?
$str33? K
)33K L
,33L M
$num33N S
)33S T
;33T U
tcpConn44 
=44 
listener44 &
.44& '
AcceptTcpClient44' 6
(446 7
)447 8
;448 9
sr66 
=66 
new66 
StreamReader66 )
(66) *
tcpConn66* 1
.661 2
	GetStream662 ;
(66; <
)66< =
)66= >
;66> ?
string88 
stringNumber88 '
=88( )
sr88* ,
.88, -
ReadLine88- 5
(885 6
)886 7
;887 8
if99 
(99 
stringNumber99 $
!=99% '
null99( ,
)99, -
{:: 
try;; 
{<< 
data==  
===! "
double==# )
.==) *
Parse==* /
(==/ 0
stringNumber==0 <
.==< =
Trim=== A
(==A B
)==B C
)==C D
;==D E
}>> 
catch?? 
(?? 
FormatException?? -
exceptNumberFormat??. @
)??@ A
{@@ 
IOAA 
.AA 
LoggerAA %
.AA% &
LogAA& )
(AA) *
NLogAA* .
.AA. /
LogLevelAA/ 7
.AA7 8
WarnAA8 <
,AA< =
exceptNumberFormatAA> P
,AAP Q
$str	AAR Ñ
)
AAÑ Ö
;
AAÖ Ü
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE "
exceptIOEE# +
)EE+ ,
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG !
(GG! "
NLogGG" &
.GG& '
LogLevelGG' /
.GG/ 0
WarnGG0 4
,GG4 5
exceptIOGG6 >
,GG> ?
$strGG@ [
)GG[ \
;GG\ ]
}HH 
finallyII 
{JJ 
tryLL 
{MM 
ifNN 
(NN 
srNN 
!=NN !
nullNN" &
)NN& '
{OO 
srPP 
.PP 
ClosePP $
(PP$ %
)PP% &
;PP& '
}QQ 
}RR 
catchSS 
(SS 
IOExceptionSS &
exceptIOSS' /
)SS/ 0
{TT 
IOUU 
.UU 
LoggerUU !
.UU! "
LogUU" %
(UU% &
NLogUU& *
.UU* +
LogLevelUU+ 3
.UU3 4
WarnUU4 8
,UU8 9
exceptIOUU: B
,UUB C
$strUUD `
)UU` a
;UUa b
}VV 
tryYY 
{ZZ 
if[[ 
([[ 
tcpConn[[ #
!=[[$ &
null[[' +
)[[+ ,
{\\ 
tcpConn]] #
.]]# $
Close]]$ )
(]]) *
)]]* +
;]]+ ,
}^^ 
}__ 
catch`` 
(`` 
IOException`` &
exceptIO``' /
)``/ 0
{aa 
IObb 
.bb 
Loggerbb !
.bb! "
Logbb" %
(bb% &
NLogbb& *
.bb* +
LogLevelbb+ 3
.bb3 4
Warnbb4 8
,bb8 9
exceptIObb: B
,bbB C
$strbbD ]
)bb] ^
;bb^ _
}cc 
tryee 
{ff 
ifgg 
(gg 
listenergg $
!=gg% '
nullgg( ,
)gg, -
{hh 
listenerii $
.ii$ %
Stopii% )
(ii) *
)ii* +
;ii+ ,
}jj 
}kk 
catchll 
(ll 
IOExceptionll &
exceptIOll' /
)ll/ 0
{mm 
IOnn 
.nn 
Loggernn !
.nn! "
Lognn" %
(nn% &
NLognn& *
.nn* +
LogLevelnn+ 3
.nn3 4
Warnnn4 8
,nn8 9
exceptIOnn: B
,nnB C
$strnnD _
)nn_ `
;nn` a
}oo 
}pp 
}qq 
}rr 	
elsess 
{tt 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
long{{ 
){{ 
data{{ #
){{# $
;{{$ %
}|| 	
}}} 
private
ÅÅ 
void
ÅÅ 
GoodG2B1
ÅÅ 
(
ÅÅ 
)
ÅÅ 
{
ÇÇ 
double
ÉÉ 
data
ÉÉ 
;
ÉÉ 
if
ÑÑ 

(
ÑÑ !
PRIVATE_CONST_FALSE
ÑÑ 
)
ÑÑ  
{
ÖÖ 	
data
àà 
=
àà 
$num
àà 
;
àà 
}
ââ 	
else
ää 
{
ãã 	
data
çç 
=
çç 
$num
çç 
;
çç 
}
éé 	
{
èè 	
IO
ëë 
.
ëë 
	WriteLine
ëë 
(
ëë 
(
ëë 
long
ëë 
)
ëë 
data
ëë #
)
ëë# $
;
ëë$ %
}
íí 	
}
ìì 
private
ññ 
void
ññ 
GoodG2B2
ññ 
(
ññ 
)
ññ 
{
óó 
double
òò 
data
òò 
;
òò 
if
ôô 

(
ôô  
PRIVATE_CONST_TRUE
ôô 
)
ôô 
{
öö 	
data
úú 
=
úú 
$num
úú 
;
úú 
}
ùù 	
else
ûû 
{
üü 	
data
¢¢ 
=
¢¢ 
$num
¢¢ 
;
¢¢ 
}
££ 	
{
§§ 	
IO
¶¶ 
.
¶¶ 
	WriteLine
¶¶ 
(
¶¶ 
(
¶¶ 
long
¶¶ 
)
¶¶ 
data
¶¶ #
)
¶¶# $
;
¶¶$ %
}
ßß 	
}
®® 
public
™™ 

override
™™ 
void
™™ 
Good
™™ 
(
™™ 
)
™™ 
{
´´ 
GoodG2B1
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨ 
GoodG2B2
≠≠ 
(
≠≠ 
)
≠≠ 
;
≠≠ 
}
ÆÆ 
}∞∞ 
}±± É<
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_05 C
:D E
AbstractTestCaseF V
{ 
private!! 
bool!! 
privateTrue!! 
=!! 
true!! #
;!!# $
private"" 
bool"" 
privateFalse"" 
="" 
false""  %
;""% &
public%% 

override%% 
void%% 
Bad%% 
(%% 
)%% 
{&& 
double'' 
data'' 
;'' 
if(( 

((( 
privateTrue(( 
)(( 
{)) 	
data** 
=** 
double** 
.** 
MinValue** "
;**" #
{,, 
TcpListener-- 
listener-- $
=--% &
null--' +
;--+ ,
	TcpClient.. 
tcpConn.. !
=.." #
null..$ (
;..( )
StreamReader// 
sr// 
=//  !
null//" &
;//& '
try11 
{22 
listener33 
=33 
new33 "
TcpListener33# .
(33. /
	IPAddress33/ 8
.338 9
Parse339 >
(33> ?
$str33? K
)33K L
,33L M
$num33N S
)33S T
;33T U
tcpConn44 
=44 
listener44 &
.44& '
AcceptTcpClient44' 6
(446 7
)447 8
;448 9
sr66 
=66 
new66 
StreamReader66 )
(66) *
tcpConn66* 1
.661 2
	GetStream662 ;
(66; <
)66< =
)66= >
;66> ?
string88 
stringNumber88 '
=88( )
sr88* ,
.88, -
ReadLine88- 5
(885 6
)886 7
;887 8
if99 
(99 
stringNumber99 $
!=99% '
null99( ,
)99, -
{:: 
try;; 
{<< 
data==  
===! "
double==# )
.==) *
Parse==* /
(==/ 0
stringNumber==0 <
.==< =
Trim=== A
(==A B
)==B C
)==C D
;==D E
}>> 
catch?? 
(?? 
FormatException?? -
exceptNumberFormat??. @
)??@ A
{@@ 
IOAA 
.AA 
LoggerAA %
.AA% &
LogAA& )
(AA) *
NLogAA* .
.AA. /
LogLevelAA/ 7
.AA7 8
WarnAA8 <
,AA< =
exceptNumberFormatAA> P
,AAP Q
$str	AAR Ñ
)
AAÑ Ö
;
AAÖ Ü
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE "
exceptIOEE# +
)EE+ ,
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG !
(GG! "
NLogGG" &
.GG& '
LogLevelGG' /
.GG/ 0
WarnGG0 4
,GG4 5
exceptIOGG6 >
,GG> ?
$strGG@ [
)GG[ \
;GG\ ]
}HH 
finallyII 
{JJ 
tryLL 
{MM 
ifNN 
(NN 
srNN 
!=NN !
nullNN" &
)NN& '
{OO 
srPP 
.PP 
ClosePP $
(PP$ %
)PP% &
;PP& '
}QQ 
}RR 
catchSS 
(SS 
IOExceptionSS &
exceptIOSS' /
)SS/ 0
{TT 
IOUU 
.UU 
LoggerUU !
.UU! "
LogUU" %
(UU% &
NLogUU& *
.UU* +
LogLevelUU+ 3
.UU3 4
WarnUU4 8
,UU8 9
exceptIOUU: B
,UUB C
$strUUD `
)UU` a
;UUa b
}VV 
tryYY 
{ZZ 
if[[ 
([[ 
tcpConn[[ #
!=[[$ &
null[[' +
)[[+ ,
{\\ 
tcpConn]] #
.]]# $
Close]]$ )
(]]) *
)]]* +
;]]+ ,
}^^ 
}__ 
catch`` 
(`` 
IOException`` &
exceptIO``' /
)``/ 0
{aa 
IObb 
.bb 
Loggerbb !
.bb! "
Logbb" %
(bb% &
NLogbb& *
.bb* +
LogLevelbb+ 3
.bb3 4
Warnbb4 8
,bb8 9
exceptIObb: B
,bbB C
$strbbD ]
)bb] ^
;bb^ _
}cc 
tryee 
{ff 
ifgg 
(gg 
listenergg $
!=gg% '
nullgg( ,
)gg, -
{hh 
listenerii $
.ii$ %
Stopii% )
(ii) *
)ii* +
;ii+ ,
}jj 
}kk 
catchll 
(ll 
IOExceptionll &
exceptIOll' /
)ll/ 0
{mm 
IOnn 
.nn 
Loggernn !
.nn! "
Lognn" %
(nn% &
NLognn& *
.nn* +
LogLevelnn+ 3
.nn3 4
Warnnn4 8
,nn8 9
exceptIOnn: B
,nnB C
$strnnD _
)nn_ `
;nn` a
}oo 
}pp 
}qq 
}rr 	
elsess 
{tt 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
long{{ 
){{ 
data{{ #
){{# $
;{{$ %
}|| 	
}}} 
private
ÅÅ 
void
ÅÅ 
GoodG2B1
ÅÅ 
(
ÅÅ 
)
ÅÅ 
{
ÇÇ 
double
ÉÉ 
data
ÉÉ 
;
ÉÉ 
if
ÑÑ 

(
ÑÑ 
privateFalse
ÑÑ 
)
ÑÑ 
{
ÖÖ 	
data
àà 
=
àà 
$num
àà 
;
àà 
}
ââ 	
else
ää 
{
ãã 	
data
çç 
=
çç 
$num
çç 
;
çç 
}
éé 	
{
èè 	
IO
ëë 
.
ëë 
	WriteLine
ëë 
(
ëë 
(
ëë 
long
ëë 
)
ëë 
data
ëë #
)
ëë# $
;
ëë$ %
}
íí 	
}
ìì 
private
ññ 
void
ññ 
GoodG2B2
ññ 
(
ññ 
)
ññ 
{
óó 
double
òò 
data
òò 
;
òò 
if
ôô 

(
ôô 
privateTrue
ôô 
)
ôô 
{
öö 	
data
úú 
=
úú 
$num
úú 
;
úú 
}
ùù 	
else
ûû 
{
üü 	
data
¢¢ 
=
¢¢ 
$num
¢¢ 
;
¢¢ 
}
££ 	
{
§§ 	
IO
¶¶ 
.
¶¶ 
	WriteLine
¶¶ 
(
¶¶ 
(
¶¶ 
long
¶¶ 
)
¶¶ 
data
¶¶ #
)
¶¶# $
;
¶¶$ %
}
ßß 	
}
®® 
public
™™ 

override
™™ 
void
™™ 
Good
™™ 
(
™™ 
)
™™ 
{
´´ 
GoodG2B1
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨ 
GoodG2B2
≠≠ 
(
≠≠ 
)
≠≠ 
;
≠≠ 
}
ÆÆ 
}∞∞ 
}±± ¨<
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_06 C
:D E
AbstractTestCaseF V
{ 
private!! 
const!! 
int!! 
PRIVATE_CONST_FIVE!! (
=!!) *
$num!!+ ,
;!!, -
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
double&& 
data&& 
;&& 
if'' 

('' 
PRIVATE_CONST_FIVE'' 
=='' !
$num''" #
)''# $
{(( 	
data)) 
=)) 
double)) 
.)) 
MinValue)) "
;))" #
{++ 
TcpListener,, 
listener,, $
=,,% &
null,,' +
;,,+ ,
	TcpClient-- 
tcpConn-- !
=--" #
null--$ (
;--( )
StreamReader.. 
sr.. 
=..  !
null.." &
;..& '
try00 
{11 
listener22 
=22 
new22 "
TcpListener22# .
(22. /
	IPAddress22/ 8
.228 9
Parse229 >
(22> ?
$str22? K
)22K L
,22L M
$num22N S
)22S T
;22T U
tcpConn33 
=33 
listener33 &
.33& '
AcceptTcpClient33' 6
(336 7
)337 8
;338 9
sr55 
=55 
new55 
StreamReader55 )
(55) *
tcpConn55* 1
.551 2
	GetStream552 ;
(55; <
)55< =
)55= >
;55> ?
string77 
stringNumber77 '
=77( )
sr77* ,
.77, -
ReadLine77- 5
(775 6
)776 7
;777 8
if88 
(88 
stringNumber88 $
!=88% '
null88( ,
)88, -
{99 
try:: 
{;; 
data<<  
=<<! "
double<<# )
.<<) *
Parse<<* /
(<</ 0
stringNumber<<0 <
.<<< =
Trim<<= A
(<<A B
)<<B C
)<<C D
;<<D E
}== 
catch>> 
(>> 
FormatException>> -
exceptNumberFormat>>. @
)>>@ A
{?? 
IO@@ 
.@@ 
Logger@@ %
.@@% &
Log@@& )
(@@) *
NLog@@* .
.@@. /
LogLevel@@/ 7
.@@7 8
Warn@@8 <
,@@< =
exceptNumberFormat@@> P
,@@P Q
$str	@@R Ñ
)
@@Ñ Ö
;
@@Ö Ü
}AA 
}BB 
}CC 
catchDD 
(DD 
IOExceptionDD "
exceptIODD# +
)DD+ ,
{EE 
IOFF 
.FF 
LoggerFF 
.FF 
LogFF !
(FF! "
NLogFF" &
.FF& '
LogLevelFF' /
.FF/ 0
WarnFF0 4
,FF4 5
exceptIOFF6 >
,FF> ?
$strFF@ [
)FF[ \
;FF\ ]
}GG 
finallyHH 
{II 
tryKK 
{LL 
ifMM 
(MM 
srMM 
!=MM !
nullMM" &
)MM& '
{NN 
srOO 
.OO 
CloseOO $
(OO$ %
)OO% &
;OO& '
}PP 
}QQ 
catchRR 
(RR 
IOExceptionRR &
exceptIORR' /
)RR/ 0
{SS 
IOTT 
.TT 
LoggerTT !
.TT! "
LogTT" %
(TT% &
NLogTT& *
.TT* +
LogLevelTT+ 3
.TT3 4
WarnTT4 8
,TT8 9
exceptIOTT: B
,TTB C
$strTTD `
)TT` a
;TTa b
}UU 
tryXX 
{YY 
ifZZ 
(ZZ 
tcpConnZZ #
!=ZZ$ &
nullZZ' +
)ZZ+ ,
{[[ 
tcpConn\\ #
.\\# $
Close\\$ )
(\\) *
)\\* +
;\\+ ,
}]] 
}^^ 
catch__ 
(__ 
IOException__ &
exceptIO__' /
)__/ 0
{`` 
IOaa 
.aa 
Loggeraa !
.aa! "
Logaa" %
(aa% &
NLogaa& *
.aa* +
LogLevelaa+ 3
.aa3 4
Warnaa4 8
,aa8 9
exceptIOaa: B
,aaB C
$straaD ]
)aa] ^
;aa^ _
}bb 
trydd 
{ee 
ifff 
(ff 
listenerff $
!=ff% '
nullff( ,
)ff, -
{gg 
listenerhh $
.hh$ %
Stophh% )
(hh) *
)hh* +
;hh+ ,
}ii 
}jj 
catchkk 
(kk 
IOExceptionkk &
exceptIOkk' /
)kk/ 0
{ll 
IOmm 
.mm 
Loggermm !
.mm! "
Logmm" %
(mm% &
NLogmm& *
.mm* +
LogLevelmm+ 3
.mm3 4
Warnmm4 8
,mm8 9
exceptIOmm: B
,mmB C
$strmmD _
)mm_ `
;mm` a
}nn 
}oo 
}pp 
}qq 	
elserr 
{ss 	
datavv 
=vv 
$numvv 
;vv 
}ww 	
{xx 	
IOzz 
.zz 
	WriteLinezz 
(zz 
(zz 
longzz 
)zz 
datazz #
)zz# $
;zz$ %
}{{ 	
}|| 
private
ÄÄ 
void
ÄÄ 
GoodG2B1
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
double
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ  
PRIVATE_CONST_FIVE
ÉÉ 
!=
ÉÉ !
$num
ÉÉ" #
)
ÉÉ# $
{
ÑÑ 	
data
áá 
=
áá 
$num
áá 
;
áá 
}
àà 	
else
ââ 
{
ää 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
long
êê 
)
êê 
data
êê #
)
êê# $
;
êê$ %
}
ëë 	
}
íí 
private
ïï 
void
ïï 
GoodG2B2
ïï 
(
ïï 
)
ïï 
{
ññ 
double
óó 
data
óó 
;
óó 
if
òò 

(
òò  
PRIVATE_CONST_FIVE
òò 
==
òò !
$num
òò" #
)
òò# $
{
ôô 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
else
ùù 
{
ûû 	
data
°° 
=
°° 
$num
°° 
;
°° 
}
¢¢ 	
{
££ 	
IO
•• 
.
•• 
	WriteLine
•• 
(
•• 
(
•• 
long
•• 
)
•• 
data
•• #
)
••# $
;
••$ %
}
¶¶ 	
}
ßß 
public
©© 

override
©© 
void
©© 
Good
©© 
(
©© 
)
©© 
{
™™ 
GoodG2B1
´´ 
(
´´ 
)
´´ 
;
´´ 
GoodG2B2
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨ 
}
≠≠ 
}ØØ 
}∞∞ ˝;
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_07 C
:D E
AbstractTestCaseF V
{ 
private!! 
int!! 
privateFive!! 
=!! 
$num!! 
;!!  
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
double&& 
data&& 
;&& 
if'' 

('' 
privateFive'' 
=='' 
$num'' 
)'' 
{(( 	
data)) 
=)) 
double)) 
.)) 
MinValue)) "
;))" #
{++ 
TcpListener,, 
listener,, $
=,,% &
null,,' +
;,,+ ,
	TcpClient-- 
tcpConn-- !
=--" #
null--$ (
;--( )
StreamReader.. 
sr.. 
=..  !
null.." &
;..& '
try00 
{11 
listener22 
=22 
new22 "
TcpListener22# .
(22. /
	IPAddress22/ 8
.228 9
Parse229 >
(22> ?
$str22? K
)22K L
,22L M
$num22N S
)22S T
;22T U
tcpConn33 
=33 
listener33 &
.33& '
AcceptTcpClient33' 6
(336 7
)337 8
;338 9
sr55 
=55 
new55 
StreamReader55 )
(55) *
tcpConn55* 1
.551 2
	GetStream552 ;
(55; <
)55< =
)55= >
;55> ?
string77 
stringNumber77 '
=77( )
sr77* ,
.77, -
ReadLine77- 5
(775 6
)776 7
;777 8
if88 
(88 
stringNumber88 $
!=88% '
null88( ,
)88, -
{99 
try:: 
{;; 
data<<  
=<<! "
double<<# )
.<<) *
Parse<<* /
(<</ 0
stringNumber<<0 <
.<<< =
Trim<<= A
(<<A B
)<<B C
)<<C D
;<<D E
}== 
catch>> 
(>> 
FormatException>> -
exceptNumberFormat>>. @
)>>@ A
{?? 
IO@@ 
.@@ 
Logger@@ %
.@@% &
Log@@& )
(@@) *
NLog@@* .
.@@. /
LogLevel@@/ 7
.@@7 8
Warn@@8 <
,@@< =
exceptNumberFormat@@> P
,@@P Q
$str	@@R Ñ
)
@@Ñ Ö
;
@@Ö Ü
}AA 
}BB 
}CC 
catchDD 
(DD 
IOExceptionDD "
exceptIODD# +
)DD+ ,
{EE 
IOFF 
.FF 
LoggerFF 
.FF 
LogFF !
(FF! "
NLogFF" &
.FF& '
LogLevelFF' /
.FF/ 0
WarnFF0 4
,FF4 5
exceptIOFF6 >
,FF> ?
$strFF@ [
)FF[ \
;FF\ ]
}GG 
finallyHH 
{II 
tryKK 
{LL 
ifMM 
(MM 
srMM 
!=MM !
nullMM" &
)MM& '
{NN 
srOO 
.OO 
CloseOO $
(OO$ %
)OO% &
;OO& '
}PP 
}QQ 
catchRR 
(RR 
IOExceptionRR &
exceptIORR' /
)RR/ 0
{SS 
IOTT 
.TT 
LoggerTT !
.TT! "
LogTT" %
(TT% &
NLogTT& *
.TT* +
LogLevelTT+ 3
.TT3 4
WarnTT4 8
,TT8 9
exceptIOTT: B
,TTB C
$strTTD `
)TT` a
;TTa b
}UU 
tryXX 
{YY 
ifZZ 
(ZZ 
tcpConnZZ #
!=ZZ$ &
nullZZ' +
)ZZ+ ,
{[[ 
tcpConn\\ #
.\\# $
Close\\$ )
(\\) *
)\\* +
;\\+ ,
}]] 
}^^ 
catch__ 
(__ 
IOException__ &
exceptIO__' /
)__/ 0
{`` 
IOaa 
.aa 
Loggeraa !
.aa! "
Logaa" %
(aa% &
NLogaa& *
.aa* +
LogLevelaa+ 3
.aa3 4
Warnaa4 8
,aa8 9
exceptIOaa: B
,aaB C
$straaD ]
)aa] ^
;aa^ _
}bb 
trydd 
{ee 
ifff 
(ff 
listenerff $
!=ff% '
nullff( ,
)ff, -
{gg 
listenerhh $
.hh$ %
Stophh% )
(hh) *
)hh* +
;hh+ ,
}ii 
}jj 
catchkk 
(kk 
IOExceptionkk &
exceptIOkk' /
)kk/ 0
{ll 
IOmm 
.mm 
Loggermm !
.mm! "
Logmm" %
(mm% &
NLogmm& *
.mm* +
LogLevelmm+ 3
.mm3 4
Warnmm4 8
,mm8 9
exceptIOmm: B
,mmB C
$strmmD _
)mm_ `
;mm` a
}nn 
}oo 
}pp 
}qq 	
elserr 
{ss 	
datavv 
=vv 
$numvv 
;vv 
}ww 	
{xx 	
IOzz 
.zz 
	WriteLinezz 
(zz 
(zz 
longzz 
)zz 
datazz #
)zz# $
;zz$ %
}{{ 	
}|| 
private
ÄÄ 
void
ÄÄ 
GoodG2B1
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
double
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ 
privateFive
ÉÉ 
!=
ÉÉ 
$num
ÉÉ 
)
ÉÉ 
{
ÑÑ 	
data
áá 
=
áá 
$num
áá 
;
áá 
}
àà 	
else
ââ 
{
ää 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
long
êê 
)
êê 
data
êê #
)
êê# $
;
êê$ %
}
ëë 	
}
íí 
private
ïï 
void
ïï 
GoodG2B2
ïï 
(
ïï 
)
ïï 
{
ññ 
double
óó 
data
óó 
;
óó 
if
òò 

(
òò 
privateFive
òò 
==
òò 
$num
òò 
)
òò 
{
ôô 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
else
ùù 
{
ûû 	
data
°° 
=
°° 
$num
°° 
;
°° 
}
¢¢ 	
{
££ 	
IO
•• 
.
•• 
	WriteLine
•• 
(
•• 
(
•• 
long
•• 
)
•• 
data
•• #
)
••# $
;
••$ %
}
¶¶ 	
}
ßß 
public
©© 

override
©© 
void
©© 
Good
©© 
(
©© 
)
©© 
{
™™ 
GoodG2B1
´´ 
(
´´ 
)
´´ 
;
´´ 
GoodG2B2
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨ 
}
≠≠ 
}ØØ 
}∞∞ Ã>
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_08 C
:D E
AbstractTestCaseF V
{ 
private!! 
static!! 
bool!! 
PrivateReturnsTrue!! *
(!!* +
)!!+ ,
{"" 
return## 
true## 
;## 
}$$ 
private&& 
static&& 
bool&& 
PrivateReturnsFalse&& +
(&&+ ,
)&&, -
{'' 
return(( 
false(( 
;(( 
})) 
public,, 

override,, 
void,, 
Bad,, 
(,, 
),, 
{-- 
double.. 
data.. 
;.. 
if// 

(// 
PrivateReturnsTrue// 
(// 
)//  
)//  !
{00 	
data11 
=11 
double11 
.11 
MinValue11 "
;11" #
{33 
TcpListener44 
listener44 $
=44% &
null44' +
;44+ ,
	TcpClient55 
tcpConn55 !
=55" #
null55$ (
;55( )
StreamReader66 
sr66 
=66  !
null66" &
;66& '
try88 
{99 
listener:: 
=:: 
new:: "
TcpListener::# .
(::. /
	IPAddress::/ 8
.::8 9
Parse::9 >
(::> ?
$str::? K
)::K L
,::L M
$num::N S
)::S T
;::T U
tcpConn;; 
=;; 
listener;; &
.;;& '
AcceptTcpClient;;' 6
(;;6 7
);;7 8
;;;8 9
sr== 
=== 
new== 
StreamReader== )
(==) *
tcpConn==* 1
.==1 2
	GetStream==2 ;
(==; <
)==< =
)=== >
;==> ?
string?? 
stringNumber?? '
=??( )
sr??* ,
.??, -
ReadLine??- 5
(??5 6
)??6 7
;??7 8
if@@ 
(@@ 
stringNumber@@ $
!=@@% '
null@@( ,
)@@, -
{AA 
tryBB 
{CC 
dataDD  
=DD! "
doubleDD# )
.DD) *
ParseDD* /
(DD/ 0
stringNumberDD0 <
.DD< =
TrimDD= A
(DDA B
)DDB C
)DDC D
;DDD E
}EE 
catchFF 
(FF 
FormatExceptionFF -
exceptNumberFormatFF. @
)FF@ A
{GG 
IOHH 
.HH 
LoggerHH %
.HH% &
LogHH& )
(HH) *
NLogHH* .
.HH. /
LogLevelHH/ 7
.HH7 8
WarnHH8 <
,HH< =
exceptNumberFormatHH> P
,HHP Q
$str	HHR Ñ
)
HHÑ Ö
;
HHÖ Ü
}II 
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL "
exceptIOLL# +
)LL+ ,
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
exceptIONN6 >
,NN> ?
$strNN@ [
)NN[ \
;NN\ ]
}OO 
finallyPP 
{QQ 
trySS 
{TT 
ifUU 
(UU 
srUU 
!=UU !
nullUU" &
)UU& '
{VV 
srWW 
.WW 
CloseWW $
(WW$ %
)WW% &
;WW& '
}XX 
}YY 
catchZZ 
(ZZ 
IOExceptionZZ &
exceptIOZZ' /
)ZZ/ 0
{[[ 
IO\\ 
.\\ 
Logger\\ !
.\\! "
Log\\" %
(\\% &
NLog\\& *
.\\* +
LogLevel\\+ 3
.\\3 4
Warn\\4 8
,\\8 9
exceptIO\\: B
,\\B C
$str\\D `
)\\` a
;\\a b
}]] 
try`` 
{aa 
ifbb 
(bb 
tcpConnbb #
!=bb$ &
nullbb' +
)bb+ ,
{cc 
tcpConndd #
.dd# $
Closedd$ )
(dd) *
)dd* +
;dd+ ,
}ee 
}ff 
catchgg 
(gg 
IOExceptiongg &
exceptIOgg' /
)gg/ 0
{hh 
IOii 
.ii 
Loggerii !
.ii! "
Logii" %
(ii% &
NLogii& *
.ii* +
LogLevelii+ 3
.ii3 4
Warnii4 8
,ii8 9
exceptIOii: B
,iiB C
$striiD ]
)ii] ^
;ii^ _
}jj 
tryll 
{mm 
ifnn 
(nn 
listenernn $
!=nn% '
nullnn( ,
)nn, -
{oo 
listenerpp $
.pp$ %
Stoppp% )
(pp) *
)pp* +
;pp+ ,
}qq 
}rr 
catchss 
(ss 
IOExceptionss &
exceptIOss' /
)ss/ 0
{tt 
IOuu 
.uu 
Loggeruu !
.uu! "
Loguu" %
(uu% &
NLoguu& *
.uu* +
LogLeveluu+ 3
.uu3 4
Warnuu4 8
,uu8 9
exceptIOuu: B
,uuB C
$struuD _
)uu_ `
;uu` a
}vv 
}ww 
}xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
long
ÇÇ 
)
ÇÇ 
data
ÇÇ #
)
ÇÇ# $
;
ÇÇ$ %
}
ÉÉ 	
}
ÑÑ 
private
àà 
void
àà 
GoodG2B1
àà 
(
àà 
)
àà 
{
ââ 
double
ää 
data
ää 
;
ää 
if
ãã 

(
ãã !
PrivateReturnsFalse
ãã 
(
ãã  
)
ãã  !
)
ãã! "
{
åå 	
data
èè 
=
èè 
$num
èè 
;
èè 
}
êê 	
else
ëë 
{
íí 	
data
îî 
=
îî 
$num
îî 
;
îî 
}
ïï 	
{
ññ 	
IO
òò 
.
òò 
	WriteLine
òò 
(
òò 
(
òò 
long
òò 
)
òò 
data
òò #
)
òò# $
;
òò$ %
}
ôô 	
}
öö 
private
ùù 
void
ùù 
GoodG2B2
ùù 
(
ùù 
)
ùù 
{
ûû 
double
üü 
data
üü 
;
üü 
if
†† 

(
††  
PrivateReturnsTrue
†† 
(
†† 
)
††  
)
††  !
{
°° 	
data
££ 
=
££ 
$num
££ 
;
££ 
}
§§ 	
else
•• 
{
¶¶ 	
data
©© 
=
©© 
$num
©© 
;
©© 
}
™™ 	
{
´´ 	
IO
≠≠ 
.
≠≠ 
	WriteLine
≠≠ 
(
≠≠ 
(
≠≠ 
long
≠≠ 
)
≠≠ 
data
≠≠ #
)
≠≠# $
;
≠≠$ %
}
ÆÆ 	
}
ØØ 
public
±± 

override
±± 
void
±± 
Good
±± 
(
±± 
)
±± 
{
≤≤ 
GoodG2B1
≥≥ 
(
≥≥ 
)
≥≥ 
;
≥≥ 
GoodG2B2
¥¥ 
(
¥¥ 
)
¥¥ 
;
¥¥ 
}
µµ 
}∑∑ 
}∏∏ Å;
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_09 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
if!! 

(!! 
IO!! 
.!!  
STATIC_READONLY_TRUE!! #
)!!# $
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
longtt 
)tt 
datatt #
)tt# $
;tt$ %
}uu 	
}vv 
privatezz 
voidzz 
GoodG2B1zz 
(zz 
)zz 
{{{ 
double|| 
data|| 
;|| 
if}} 

(}} 
IO}} 
.}} !
STATIC_READONLY_FALSE}} $
)}}$ %
{~~ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
else
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
{
àà 	
IO
ää 
.
ää 
	WriteLine
ää 
(
ää 
(
ää 
long
ää 
)
ää 
data
ää #
)
ää# $
;
ää$ %
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
double
ëë 
data
ëë 
;
ëë 
if
íí 

(
íí 
IO
íí 
.
íí "
STATIC_READONLY_TRUE
íí #
)
íí# $
{
ìì 	
data
ïï 
=
ïï 
$num
ïï 
;
ïï 
}
ññ 	
else
óó 
{
òò 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
{
ùù 	
IO
üü 
.
üü 
	WriteLine
üü 
(
üü 
(
üü 
long
üü 
)
üü 
data
üü #
)
üü# $
;
üü$ %
}
†† 	
}
°° 
public
££ 

override
££ 
void
££ 
Good
££ 
(
££ 
)
££ 
{
§§ 
GoodG2B1
•• 
(
•• 
)
•• 
;
•• 
GoodG2B2
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
}
ßß 
}©© 
}™™ „:
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_10 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
if!! 

(!! 
IO!! 
.!! 

staticTrue!! 
)!! 
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
longtt 
)tt 
datatt #
)tt# $
;tt$ %
}uu 	
}vv 
privatezz 
voidzz 
GoodG2B1zz 
(zz 
)zz 
{{{ 
double|| 
data|| 
;|| 
if}} 

(}} 
IO}} 
.}} 
staticFalse}} 
)}} 
{~~ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
else
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
{
àà 	
IO
ää 
.
ää 
	WriteLine
ää 
(
ää 
(
ää 
long
ää 
)
ää 
data
ää #
)
ää# $
;
ää$ %
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
double
ëë 
data
ëë 
;
ëë 
if
íí 

(
íí 
IO
íí 
.
íí 

staticTrue
íí 
)
íí 
{
ìì 	
data
ïï 
=
ïï 
$num
ïï 
;
ïï 
}
ññ 	
else
óó 
{
òò 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
{
ùù 	
IO
üü 
.
üü 
	WriteLine
üü 
(
üü 
(
üü 
long
üü 
)
üü 
data
üü #
)
üü# $
;
üü$ %
}
†† 	
}
°° 
public
££ 

override
££ 
void
££ 
Good
££ 
(
££ 
)
££ 
{
§§ 
GoodG2B1
•• 
(
•• 
)
•• 
;
•• 
GoodG2B2
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
}
ßß 
}©© 
}™™ ÷;
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_11 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
if!! 

(!! 
IO!! 
.!! 
StaticReturnsTrue!!  
(!!  !
)!!! "
)!!" #
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
longtt 
)tt 
datatt #
)tt# $
;tt$ %
}uu 	
}vv 
privatezz 
voidzz 
GoodG2B1zz 
(zz 
)zz 
{{{ 
double|| 
data|| 
;|| 
if}} 

(}} 
IO}} 
.}} 
StaticReturnsFalse}} !
(}}! "
)}}" #
)}}# $
{~~ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
else
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
{
àà 	
IO
ää 
.
ää 
	WriteLine
ää 
(
ää 
(
ää 
long
ää 
)
ää 
data
ää #
)
ää# $
;
ää$ %
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
double
ëë 
data
ëë 
;
ëë 
if
íí 

(
íí 
IO
íí 
.
íí 
StaticReturnsTrue
íí  
(
íí  !
)
íí! "
)
íí" #
{
ìì 	
data
ïï 
=
ïï 
$num
ïï 
;
ïï 
}
ññ 	
else
óó 
{
òò 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
{
ùù 	
IO
üü 
.
üü 
	WriteLine
üü 
(
üü 
(
üü 
long
üü 
)
üü 
data
üü #
)
üü# $
;
üü$ %
}
†† 	
}
°° 
public
££ 

override
££ 
void
££ 
Good
££ 
(
££ 
)
££ 
{
§§ 
GoodG2B1
•• 
(
•• 
)
•• 
;
•• 
GoodG2B2
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
}
ßß 
}©© 
}™™ Û4
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_12 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
if!! 

(!! 
IO!! 
.!! $
StaticReturnsTrueOrFalse!! '
(!!' (
)!!( )
)!!) *
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
longss 
)ss 
datass #
)ss# $
;ss$ %
}tt 	
}uu 
privatezz 
voidzz 
GoodG2Bzz 
(zz 
)zz 
{{{ 
double|| 
data|| 
;|| 
if}} 

(}} 
IO}} 
.}} $
StaticReturnsTrueOrFalse}} '
(}}' (
)}}( )
)}}) *
{~~ 	
data
ÄÄ 
=
ÄÄ 
$num
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
else
ÇÇ 
{
ÉÉ 	
data
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
{
áá 	
IO
ââ 
.
ââ 
	WriteLine
ââ 
(
ââ 
(
ââ 
long
ââ 
)
ââ 
data
ââ #
)
ââ# $
;
ââ$ %
}
ää 	
}
ãã 
public
çç 

override
çç 
void
çç 
Good
çç 
(
çç 
)
çç 
{
éé 
GoodG2B
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì Í;
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_13 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
if!! 

(!! 
IO!! 
.!!  
STATIC_READONLY_FIVE!! #
==!!$ &
$num!!' (
)!!( )
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
longtt 
)tt 
datatt #
)tt# $
;tt$ %
}uu 	
}vv 
privatezz 
voidzz 
GoodG2B1zz 
(zz 
)zz 
{{{ 
double|| 
data|| 
;|| 
if}} 

(}} 
IO}} 
.}}  
STATIC_READONLY_FIVE}} #
!=}}$ &
$num}}' (
)}}( )
{~~ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
else
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
{
àà 	
IO
ää 
.
ää 
	WriteLine
ää 
(
ää 
(
ää 
long
ää 
)
ää 
data
ää #
)
ää# $
;
ää$ %
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
double
ëë 
data
ëë 
;
ëë 
if
íí 

(
íí 
IO
íí 
.
íí "
STATIC_READONLY_FIVE
íí #
==
íí$ &
$num
íí' (
)
íí( )
{
ìì 	
data
ïï 
=
ïï 
$num
ïï 
;
ïï 
}
ññ 	
else
óó 
{
òò 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
{
ùù 	
IO
üü 
.
üü 
	WriteLine
üü 
(
üü 
(
üü 
long
üü 
)
üü 
data
üü #
)
üü# $
;
üü$ %
}
†† 	
}
°° 
public
££ 

override
££ 
void
££ 
Good
££ 
(
££ 
)
££ 
{
§§ 
GoodG2B1
•• 
(
•• 
)
•• 
;
•• 
GoodG2B2
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
}
ßß 
}©© 
}™™ Ã;
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_14 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
if!! 

(!! 
IO!! 
.!! 

staticFive!! 
==!! 
$num!! 
)!! 
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
longtt 
)tt 
datatt #
)tt# $
;tt$ %
}uu 	
}vv 
privatezz 
voidzz 
GoodG2B1zz 
(zz 
)zz 
{{{ 
double|| 
data|| 
;|| 
if}} 

(}} 
IO}} 
.}} 

staticFive}} 
!=}} 
$num}} 
)}} 
{~~ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
else
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
{
àà 	
IO
ää 
.
ää 
	WriteLine
ää 
(
ää 
(
ää 
long
ää 
)
ää 
data
ää #
)
ää# $
;
ää$ %
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
double
ëë 
data
ëë 
;
ëë 
if
íí 

(
íí 
IO
íí 
.
íí 

staticFive
íí 
==
íí 
$num
íí 
)
íí 
{
ìì 	
data
ïï 
=
ïï 
$num
ïï 
;
ïï 
}
ññ 	
else
óó 
{
òò 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
{
ùù 	
IO
üü 
.
üü 
	WriteLine
üü 
(
üü 
(
üü 
long
üü 
)
üü 
data
üü #
)
üü# $
;
üü$ %
}
†† 	
}
°° 
public
££ 

override
££ 
void
££ 
Good
££ 
(
££ 
)
££ 
{
§§ 
GoodG2B1
•• 
(
•• 
)
•• 
;
•• 
GoodG2B2
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
}
ßß 
}©© 
}™™ ª=
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_15 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
=   
$num   
;   
switch!! 
(!! 
$num!! 
)!! 
{"" 	
case## 
$num## 
:## 
data$$ 
=$$ 
double$$ 
.$$ 
MinValue$$ "
;$$" #
{&& 
TcpListener'' 
listener'' $
=''% &
null''' +
;''+ ,
	TcpClient(( 
tcpConn(( !
=((" #
null(($ (
;((( )
StreamReader)) 
sr)) 
=))  !
null))" &
;))& '
try++ 
{,, 
listener-- 
=-- 
new-- "
TcpListener--# .
(--. /
	IPAddress--/ 8
.--8 9
Parse--9 >
(--> ?
$str--? K
)--K L
,--L M
$num--N S
)--S T
;--T U
tcpConn.. 
=.. 
listener.. &
...& '
AcceptTcpClient..' 6
(..6 7
)..7 8
;..8 9
sr00 
=00 
new00 
StreamReader00 )
(00) *
tcpConn00* 1
.001 2
	GetStream002 ;
(00; <
)00< =
)00= >
;00> ?
string22 
stringNumber22 '
=22( )
sr22* ,
.22, -
ReadLine22- 5
(225 6
)226 7
;227 8
if33 
(33 
stringNumber33 $
!=33% '
null33( ,
)33, -
{44 
try55 
{66 
data77  
=77! "
double77# )
.77) *
Parse77* /
(77/ 0
stringNumber770 <
.77< =
Trim77= A
(77A B
)77B C
)77C D
;77D E
}88 
catch99 
(99 
FormatException99 -
exceptNumberFormat99. @
)99@ A
{:: 
IO;; 
.;; 
Logger;; %
.;;% &
Log;;& )
(;;) *
NLog;;* .
.;;. /
LogLevel;;/ 7
.;;7 8
Warn;;8 <
,;;< =
exceptNumberFormat;;> P
,;;P Q
$str	;;R Ñ
)
;;Ñ Ö
;
;;Ö Ü
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? "
exceptIO??# +
)??+ ,
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA !
(AA! "
NLogAA" &
.AA& '
LogLevelAA' /
.AA/ 0
WarnAA0 4
,AA4 5
exceptIOAA6 >
,AA> ?
$strAA@ [
)AA[ \
;AA\ ]
}BB 
finallyCC 
{DD 
tryFF 
{GG 
ifHH 
(HH 
srHH 
!=HH !
nullHH" &
)HH& '
{II 
srJJ 
.JJ 
CloseJJ $
(JJ$ %
)JJ% &
;JJ& '
}KK 
}LL 
catchMM 
(MM 
IOExceptionMM &
exceptIOMM' /
)MM/ 0
{NN 
IOOO 
.OO 
LoggerOO !
.OO! "
LogOO" %
(OO% &
NLogOO& *
.OO* +
LogLevelOO+ 3
.OO3 4
WarnOO4 8
,OO8 9
exceptIOOO: B
,OOB C
$strOOD `
)OO` a
;OOa b
}PP 
trySS 
{TT 
ifUU 
(UU 
tcpConnUU #
!=UU$ &
nullUU' +
)UU+ ,
{VV 
tcpConnWW #
.WW# $
CloseWW$ )
(WW) *
)WW* +
;WW+ ,
}XX 
}YY 
catchZZ 
(ZZ 
IOExceptionZZ &
exceptIOZZ' /
)ZZ/ 0
{[[ 
IO\\ 
.\\ 
Logger\\ !
.\\! "
Log\\" %
(\\% &
NLog\\& *
.\\* +
LogLevel\\+ 3
.\\3 4
Warn\\4 8
,\\8 9
exceptIO\\: B
,\\B C
$str\\D ]
)\\] ^
;\\^ _
}]] 
try__ 
{`` 
ifaa 
(aa 
listeneraa $
!=aa% '
nullaa( ,
)aa, -
{bb 
listenercc $
.cc$ %
Stopcc% )
(cc) *
)cc* +
;cc+ ,
}dd 
}ee 
catchff 
(ff 
IOExceptionff &
exceptIOff' /
)ff/ 0
{gg 
IOhh 
.hh 
Loggerhh !
.hh! "
Loghh" %
(hh% &
NLoghh& *
.hh* +
LogLevelhh+ 3
.hh3 4
Warnhh4 8
,hh8 9
exceptIOhh: B
,hhB C
$strhhD _
)hh_ `
;hh` a
}ii 
}jj 
}kk 
breakll 
;ll 
defaultmm 
:mm 
datapp 
=pp 
$numpp 
;pp 
breakqq 
;qq 
}rr 	
{ss 	
IOuu 
.uu 
	WriteLineuu 
(uu 
(uu 
longuu 
)uu 
datauu #
)uu# $
;uu$ %
}vv 	
}ww 
private{{ 
void{{ 
GoodG2B1{{ 
({{ 
){{ 
{|| 
double}} 
data}} 
=}} 
$num}} 
;}} 
switch~~ 
(~~ 
$num~~ 
)~~ 
{ 	
case
ÄÄ 
$num
ÄÄ 
:
ÄÄ 
data
ÉÉ 
=
ÉÉ 
$num
ÉÉ 
;
ÉÉ 
break
ÑÑ 
;
ÑÑ 
default
ÖÖ 
:
ÖÖ 
data
áá 
=
áá 
$num
áá 
;
áá 
break
àà 
;
àà 
}
ââ 	
{
ää 	
IO
åå 
.
åå 
	WriteLine
åå 
(
åå 
(
åå 
long
åå 
)
åå 
data
åå #
)
åå# $
;
åå$ %
}
çç 	
}
éé 
private
ëë 
void
ëë 
GoodG2B2
ëë 
(
ëë 
)
ëë 
{
íí 
double
ìì 
data
ìì 
=
ìì 
$num
ìì 
;
ìì 
switch
îî 
(
îî 
$num
îî 
)
îî 
{
ïï 	
case
ññ 
$num
ññ 
:
ññ 
data
òò 
=
òò 
$num
òò 
;
òò 
break
ôô 
;
ôô 
default
öö 
:
öö 
data
ùù 
=
ùù 
$num
ùù 
;
ùù 
break
ûû 
;
ûû 
}
üü 	
{
†† 	
IO
¢¢ 
.
¢¢ 
	WriteLine
¢¢ 
(
¢¢ 
(
¢¢ 
long
¢¢ 
)
¢¢ 
data
¢¢ #
)
¢¢# $
;
¢¢$ %
}
££ 	
}
§§ 
public
¶¶ 

override
¶¶ 
void
¶¶ 
Good
¶¶ 
(
¶¶ 
)
¶¶ 
{
ßß 
GoodG2B1
®® 
(
®® 
)
®® 
;
®® 
GoodG2B2
©© 
(
©© 
)
©© 
;
©© 
}
™™ 
}¨¨ 
}≠≠ ù2
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_16 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
while!! 
(!! 
true!! 
)!! 
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
breakkk 
;kk 
}ll 	
{mm 	
IOoo 
.oo 
	WriteLineoo 
(oo 
(oo 
longoo 
)oo 
dataoo #
)oo# $
;oo$ %
}pp 	
}qq 
privateuu 
voiduu 
GoodG2Buu 
(uu 
)uu 
{vv 
doubleww 
dataww 
;ww 
whilexx 
(xx 
truexx 
)xx 
{yy 	
data{{ 
={{ 
$num{{ 
;{{ 
break|| 
;|| 
}}} 	
{~~ 	
IO
ÄÄ 
.
ÄÄ 
	WriteLine
ÄÄ 
(
ÄÄ 
(
ÄÄ 
long
ÄÄ 
)
ÄÄ 
data
ÄÄ #
)
ÄÄ# $
;
ÄÄ$ %
}
ÅÅ 	
}
ÇÇ 
public
ÑÑ 

override
ÑÑ 
void
ÑÑ 
Good
ÑÑ 
(
ÑÑ 
)
ÑÑ 
{
ÖÖ 
GoodG2B
ÜÜ 
(
ÜÜ 
)
ÜÜ 
;
ÜÜ 
}
áá 
}ââ 
}ää ˘3
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_17 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	
forii 
(ii 
intii 
iii 
=ii 
$numii 
;ii 
iii 
<ii 
$numii 
;ii 
iii  
++ii  "
)ii" #
{jj 	
{kk 
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
longmm "
)mm" #
datamm# '
)mm' (
;mm( )
}nn 
}oo 	
}pp 
privateuu 
voiduu 
GoodG2Buu 
(uu 
)uu 
{vv 
doubleww 
dataww 
;ww 
datayy 
=yy 
$numyy 
;yy 
forzz 
(zz 
intzz 
izz 
=zz 
$numzz 
;zz 
izz 
<zz 
$numzz 
;zz 
izz  
++zz  "
)zz" #
{{{ 	
{|| 
IO~~ 
.~~ 
	WriteLine~~ 
(~~ 
(~~ 
long~~ "
)~~" #
data~~# '
)~~' (
;~~( )
} 
}
ÄÄ 	
}
ÅÅ 
public
ÉÉ 

override
ÉÉ 
void
ÉÉ 
Good
ÉÉ 
(
ÉÉ 
)
ÉÉ 
{
ÑÑ 
GoodG2B
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
}
ÜÜ 
}àà 
}ââ ´H
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_21 C
:D E
AbstractTestCaseF V
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
double## 
data## 
;## 

badPrivate$$ 
=$$ 
true$$ 
;$$ 
data%% 
=%% 

Bad_source%% 
(%% 
)%% 
;%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
long(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
private,, 
double,, 

Bad_source,, 
(,, 
),, 
{-- 
double.. 
data.. 
;.. 
if// 

(// 

badPrivate// 
)// 
{00 	
data11 
=11 
double11 
.11 
MinValue11 "
;11" #
{33 
TcpListener44 
listener44 $
=44% &
null44' +
;44+ ,
	TcpClient55 
tcpConn55 !
=55" #
null55$ (
;55( )
StreamReader66 
sr66 
=66  !
null66" &
;66& '
try88 
{99 
listener:: 
=:: 
new:: "
TcpListener::# .
(::. /
	IPAddress::/ 8
.::8 9
Parse::9 >
(::> ?
$str::? K
)::K L
,::L M
$num::N S
)::S T
;::T U
tcpConn;; 
=;; 
listener;; &
.;;& '
AcceptTcpClient;;' 6
(;;6 7
);;7 8
;;;8 9
sr== 
=== 
new== 
StreamReader== )
(==) *
tcpConn==* 1
.==1 2
	GetStream==2 ;
(==; <
)==< =
)=== >
;==> ?
string?? 
stringNumber?? '
=??( )
sr??* ,
.??, -
ReadLine??- 5
(??5 6
)??6 7
;??7 8
if@@ 
(@@ 
stringNumber@@ $
!=@@% '
null@@( ,
)@@, -
{AA 
tryBB 
{CC 
dataDD  
=DD! "
doubleDD# )
.DD) *
ParseDD* /
(DD/ 0
stringNumberDD0 <
.DD< =
TrimDD= A
(DDA B
)DDB C
)DDC D
;DDD E
}EE 
catchFF 
(FF 
FormatExceptionFF -
exceptNumberFormatFF. @
)FF@ A
{GG 
IOHH 
.HH 
LoggerHH %
.HH% &
LogHH& )
(HH) *
NLogHH* .
.HH. /
LogLevelHH/ 7
.HH7 8
WarnHH8 <
,HH< =
exceptNumberFormatHH> P
,HHP Q
$str	HHR Ñ
)
HHÑ Ö
;
HHÖ Ü
}II 
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL "
exceptIOLL# +
)LL+ ,
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
exceptIONN6 >
,NN> ?
$strNN@ [
)NN[ \
;NN\ ]
}OO 
finallyPP 
{QQ 
trySS 
{TT 
ifUU 
(UU 
srUU 
!=UU !
nullUU" &
)UU& '
{VV 
srWW 
.WW 
CloseWW $
(WW$ %
)WW% &
;WW& '
}XX 
}YY 
catchZZ 
(ZZ 
IOExceptionZZ &
exceptIOZZ' /
)ZZ/ 0
{[[ 
IO\\ 
.\\ 
Logger\\ !
.\\! "
Log\\" %
(\\% &
NLog\\& *
.\\* +
LogLevel\\+ 3
.\\3 4
Warn\\4 8
,\\8 9
exceptIO\\: B
,\\B C
$str\\D `
)\\` a
;\\a b
}]] 
try`` 
{aa 
ifbb 
(bb 
tcpConnbb #
!=bb$ &
nullbb' +
)bb+ ,
{cc 
tcpConndd #
.dd# $
Closedd$ )
(dd) *
)dd* +
;dd+ ,
}ee 
}ff 
catchgg 
(gg 
IOExceptiongg &
exceptIOgg' /
)gg/ 0
{hh 
IOii 
.ii 
Loggerii !
.ii! "
Logii" %
(ii% &
NLogii& *
.ii* +
LogLevelii+ 3
.ii3 4
Warnii4 8
,ii8 9
exceptIOii: B
,iiB C
$striiD ]
)ii] ^
;ii^ _
}jj 
tryll 
{mm 
ifnn 
(nn 
listenernn $
!=nn% '
nullnn( ,
)nn, -
{oo 
listenerpp $
.pp$ %
Stoppp% )
(pp) *
)pp* +
;pp+ ,
}qq 
}rr 
catchss 
(ss 
IOExceptionss &
exceptIOss' /
)ss/ 0
{tt 
IOuu 
.uu 
Loggeruu !
.uu! "
Loguu" %
(uu% &
NLoguu& *
.uu* +
LogLeveluu+ 3
.uu3 4
Warnuu4 8
,uu8 9
exceptIOuu: B
,uuB C
$struuD _
)uu_ `
;uu` a
}vv 
}ww 
}xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
return
ÄÄ 
data
ÄÄ 
;
ÄÄ 
}
ÅÅ 
private
ÑÑ 
bool
ÑÑ 
goodG2B1_private
ÑÑ !
=
ÑÑ" #
false
ÑÑ$ )
;
ÑÑ) *
private
ÖÖ 
bool
ÖÖ 
GoodG2B2_private
ÖÖ !
=
ÖÖ" #
false
ÖÖ$ )
;
ÖÖ) *
public
áá 

override
áá 
void
áá 
Good
áá 
(
áá 
)
áá 
{
àà 
GoodG2B1
ââ 
(
ââ 
)
ââ 
;
ââ 
GoodG2B2
ää 
(
ää 
)
ää 
;
ää 
}
ãã 
private
éé 
void
éé 
GoodG2B1
éé 
(
éé 
)
éé 
{
èè 
double
êê 
data
êê 
;
êê 
goodG2B1_private
ëë 
=
ëë 
false
ëë  
;
ëë  !
data
íí 
=
íí 
GoodG2B1_source
íí 
(
íí 
)
íí  
;
íí  !
{
ìì 	
IO
ïï 
.
ïï 
	WriteLine
ïï 
(
ïï 
(
ïï 
long
ïï 
)
ïï 
data
ïï #
)
ïï# $
;
ïï$ %
}
ññ 	
}
óó 
private
ôô 
double
ôô 
GoodG2B1_source
ôô "
(
ôô" #
)
ôô# $
{
öö 
double
õõ 
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
if
úú 

(
úú 
goodG2B1_private
úú 
)
úú 
{
ùù 	
data
†† 
=
†† 
$num
†† 
;
†† 
}
°° 	
else
¢¢ 
{
££ 	
data
•• 
=
•• 
$num
•• 
;
•• 
}
¶¶ 	
return
ßß 
data
ßß 
;
ßß 
}
®® 
private
´´ 
void
´´ 
GoodG2B2
´´ 
(
´´ 
)
´´ 
{
¨¨ 
double
≠≠ 
data
≠≠ 
;
≠≠ 
GoodG2B2_private
ÆÆ 
=
ÆÆ 
true
ÆÆ 
;
ÆÆ  
data
ØØ 
=
ØØ 
GoodG2B2_source
ØØ 
(
ØØ 
)
ØØ  
;
ØØ  !
{
∞∞ 	
IO
≤≤ 
.
≤≤ 
	WriteLine
≤≤ 
(
≤≤ 
(
≤≤ 
long
≤≤ 
)
≤≤ 
data
≤≤ #
)
≤≤# $
;
≤≤$ %
}
≥≥ 	
}
¥¥ 
private
∂∂ 
double
∂∂ 
GoodG2B2_source
∂∂ "
(
∂∂" #
)
∂∂# $
{
∑∑ 
double
∏∏ 
data
∏∏ 
=
∏∏ 
$num
∏∏ 
;
∏∏ 
if
ππ 

(
ππ 
GoodG2B2_private
ππ 
)
ππ 
{
∫∫ 	
data
ºº 
=
ºº 
$num
ºº 
;
ºº 
}
ΩΩ 	
else
ææ 
{
øø 	
data
¬¬ 
=
¬¬ 
$num
¬¬ 
;
¬¬ 
}
√√ 	
return
ƒƒ 
data
ƒƒ 
;
ƒƒ 
}
≈≈ 
}«« 
}»» ª
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_22a D
:E F
AbstractTestCaseG W
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_22b!! M
.!!M N
	BadSource!!N W
(!!W X
)!!X Y
;!!Y Z
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
long$$ 
)$$ 
data$$ #
)$$# $
;$$$ %
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
double66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_22b88 M
.88M N
GoodG2B1Source88N \
(88\ ]
)88] ^
;88^ _
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
long;; 
);; 
data;; #
);;# $
;;;$ %
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
doubleBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_22bDD M
.DDM N
GoodG2B2SourceDDN \
(DD\ ]
)DD] ^
;DD^ _
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
longGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
}KK 
}LL º6
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_22b D
{ 
public 

static 
double 
	BadSource "
(" #
)# $
{ 
double   
data   
;   
if!! 

(!! J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_22a!! J
.!!J K
badPublicStatic!!K Z
)!!Z [
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
returnrr 
datarr 
;rr 
}ss 
publicxx 

staticxx 
doublexx 
GoodG2B1Sourcexx '
(xx' (
)xx( )
{yy 
doublezz 
datazz 
;zz 
if{{ 

({{ J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_22a{{ J
.{{J K 
goodG2B1PublicStatic{{K _
){{_ `
{|| 	
data 
= 
$num 
; 
}
ÄÄ 	
else
ÅÅ 
{
ÇÇ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
return
ÜÜ 
data
ÜÜ 
;
ÜÜ 
}
áá 
public
ää 

static
ää 
double
ää 
GoodG2B2Source
ää '
(
ää' (
)
ää( )
{
ãã 
double
åå 
data
åå 
;
åå 
if
çç 

(
çç L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_22a
çç J
.
ççJ K"
GoodG2B2PublicStatic
ççK _
)
çç_ `
{
éé 	
data
êê 
=
êê 
$num
êê 
;
êê 
}
ëë 	
else
íí 
{
ìì 	
data
ññ 
=
ññ 
$num
ññ 
;
ññ 
}
óó 	
return
òò 
data
òò 
;
òò 
}
ôô 
}õõ 
}úú Ÿ4
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_31 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{   
double!! 
dataCopy!! 
;!! 
{"" 	
double## 
data## 
;## 
data$$ 
=$$ 
double$$ 
.$$ 
MinValue$$ "
;$$" #
{&& 
TcpListener'' 
listener'' $
=''% &
null''' +
;''+ ,
	TcpClient(( 
tcpConn(( !
=((" #
null(($ (
;((( )
StreamReader)) 
sr)) 
=))  !
null))" &
;))& '
try++ 
{,, 
listener-- 
=-- 
new-- "
TcpListener--# .
(--. /
	IPAddress--/ 8
.--8 9
Parse--9 >
(--> ?
$str--? K
)--K L
,--L M
$num--N S
)--S T
;--T U
tcpConn.. 
=.. 
listener.. &
...& '
AcceptTcpClient..' 6
(..6 7
)..7 8
;..8 9
sr00 
=00 
new00 
StreamReader00 )
(00) *
tcpConn00* 1
.001 2
	GetStream002 ;
(00; <
)00< =
)00= >
;00> ?
string22 
stringNumber22 '
=22( )
sr22* ,
.22, -
ReadLine22- 5
(225 6
)226 7
;227 8
if33 
(33 
stringNumber33 $
!=33% '
null33( ,
)33, -
{44 
try55 
{66 
data77  
=77! "
double77# )
.77) *
Parse77* /
(77/ 0
stringNumber770 <
.77< =
Trim77= A
(77A B
)77B C
)77C D
;77D E
}88 
catch99 
(99 
FormatException99 -
exceptNumberFormat99. @
)99@ A
{:: 
IO;; 
.;; 
Logger;; %
.;;% &
Log;;& )
(;;) *
NLog;;* .
.;;. /
LogLevel;;/ 7
.;;7 8
Warn;;8 <
,;;< =
exceptNumberFormat;;> P
,;;P Q
$str	;;R Ñ
)
;;Ñ Ö
;
;;Ö Ü
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? "
exceptIO??# +
)??+ ,
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA !
(AA! "
NLogAA" &
.AA& '
LogLevelAA' /
.AA/ 0
WarnAA0 4
,AA4 5
exceptIOAA6 >
,AA> ?
$strAA@ [
)AA[ \
;AA\ ]
}BB 
finallyCC 
{DD 
tryFF 
{GG 
ifHH 
(HH 
srHH 
!=HH !
nullHH" &
)HH& '
{II 
srJJ 
.JJ 
CloseJJ $
(JJ$ %
)JJ% &
;JJ& '
}KK 
}LL 
catchMM 
(MM 
IOExceptionMM &
exceptIOMM' /
)MM/ 0
{NN 
IOOO 
.OO 
LoggerOO !
.OO! "
LogOO" %
(OO% &
NLogOO& *
.OO* +
LogLevelOO+ 3
.OO3 4
WarnOO4 8
,OO8 9
exceptIOOO: B
,OOB C
$strOOD `
)OO` a
;OOa b
}PP 
trySS 
{TT 
ifUU 
(UU 
tcpConnUU #
!=UU$ &
nullUU' +
)UU+ ,
{VV 
tcpConnWW #
.WW# $
CloseWW$ )
(WW) *
)WW* +
;WW+ ,
}XX 
}YY 
catchZZ 
(ZZ 
IOExceptionZZ &
exceptIOZZ' /
)ZZ/ 0
{[[ 
IO\\ 
.\\ 
Logger\\ !
.\\! "
Log\\" %
(\\% &
NLog\\& *
.\\* +
LogLevel\\+ 3
.\\3 4
Warn\\4 8
,\\8 9
exceptIO\\: B
,\\B C
$str\\D ]
)\\] ^
;\\^ _
}]] 
try__ 
{`` 
ifaa 
(aa 
listeneraa $
!=aa% '
nullaa( ,
)aa, -
{bb 
listenercc $
.cc$ %
Stopcc% )
(cc) *
)cc* +
;cc+ ,
}dd 
}ee 
catchff 
(ff 
IOExceptionff &
exceptIOff' /
)ff/ 0
{gg 
IOhh 
.hh 
Loggerhh !
.hh! "
Loghh" %
(hh% &
NLoghh& *
.hh* +
LogLevelhh+ 3
.hh3 4
Warnhh4 8
,hh8 9
exceptIOhh: B
,hhB C
$strhhD _
)hh_ `
;hh` a
}ii 
}jj 
}kk 
dataCopyll 
=ll 
datall 
;ll 
}mm 	
{nn 	
doubleoo 
dataoo 
=oo 
dataCopyoo "
;oo" #
{pp 
IOrr 
.rr 
	WriteLinerr 
(rr 
(rr 
longrr "
)rr" #
datarr# '
)rr' (
;rr( )
}ss 
}tt 	
}uu 
publicxx 

overridexx 
voidxx 
Goodxx 
(xx 
)xx 
{yy 
GoodG2Bzz 
(zz 
)zz 
;zz 
}{{ 
private~~ 
void~~ 
GoodG2B~~ 
(~~ 
)~~ 
{ 
double
ÄÄ 
dataCopy
ÄÄ 
;
ÄÄ 
{
ÅÅ 	
double
ÇÇ 
data
ÇÇ 
;
ÇÇ 
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
dataCopy
ÖÖ 
=
ÖÖ 
data
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
{
áá 	
double
àà 
data
àà 
=
àà 
dataCopy
àà "
;
àà" #
{
ââ 
IO
ãã 
.
ãã 
	WriteLine
ãã 
(
ãã 
(
ãã 
long
ãã "
)
ãã" #
data
ãã# '
)
ãã' (
;
ãã( )
}
åå 
}
çç 	
}
éé 
}êê 
}ëë ∑4
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_41 C
:D E
AbstractTestCaseF V
{ 
private 
static 
void 
BadSink 
(  
double  &
data' +
), -
{ 
{ 	
IO!! 
.!! 
	WriteLine!! 
(!! 
(!! 
long!! 
)!! 
data!! #
)!!# $
;!!$ %
}"" 	
}## 
public%% 

override%% 
void%% 
Bad%% 
(%% 
)%% 
{&& 
double'' 
data'' 
;'' 
data(( 
=(( 
double(( 
.(( 
MinValue(( 
;(( 
{** 	
TcpListener++ 
listener++  
=++! "
null++# '
;++' (
	TcpClient,, 
tcpConn,, 
=,, 
null,,  $
;,,$ %
StreamReader-- 
sr-- 
=-- 
null-- "
;--" #
try// 
{00 
listener11 
=11 
new11 
TcpListener11 *
(11* +
	IPAddress11+ 4
.114 5
Parse115 :
(11: ;
$str11; G
)11G H
,11H I
$num11J O
)11O P
;11P Q
tcpConn22 
=22 
listener22 "
.22" #
AcceptTcpClient22# 2
(222 3
)223 4
;224 5
sr44 
=44 
new44 
StreamReader44 %
(44% &
tcpConn44& -
.44- .
	GetStream44. 7
(447 8
)448 9
)449 :
;44: ;
string66 
stringNumber66 #
=66$ %
sr66& (
.66( )
ReadLine66) 1
(661 2
)662 3
;663 4
if77 
(77 
stringNumber77  
!=77! #
null77$ (
)77( )
{88 
try99 
{:: 
data;; 
=;; 
double;; %
.;;% &
Parse;;& +
(;;+ ,
stringNumber;;, 8
.;;8 9
Trim;;9 =
(;;= >
);;> ?
);;? @
;;;@ A
}<< 
catch== 
(== 
FormatException== )
exceptNumberFormat==* <
)==< =
{>> 
IO?? 
.?? 
Logger?? !
.??! "
Log??" %
(??% &
NLog??& *
.??* +
LogLevel??+ 3
.??3 4
Warn??4 8
,??8 9
exceptNumberFormat??: L
,??L M
$str	??N Ä
)
??Ä Å
;
??Å Ç
}@@ 
}AA 
}BB 
catchCC 
(CC 
IOExceptionCC 
exceptIOCC '
)CC' (
{DD 
IOEE 
.EE 
LoggerEE 
.EE 
LogEE 
(EE 
NLogEE "
.EE" #
LogLevelEE# +
.EE+ ,
WarnEE, 0
,EE0 1
exceptIOEE2 :
,EE: ;
$strEE< W
)EEW X
;EEX Y
}FF 
finallyGG 
{HH 
tryJJ 
{KK 
ifLL 
(LL 
srLL 
!=LL 
nullLL "
)LL" #
{MM 
srNN 
.NN 
CloseNN  
(NN  !
)NN! "
;NN" #
}OO 
}PP 
catchQQ 
(QQ 
IOExceptionQQ "
exceptIOQQ# +
)QQ+ ,
{RR 
IOSS 
.SS 
LoggerSS 
.SS 
LogSS !
(SS! "
NLogSS" &
.SS& '
LogLevelSS' /
.SS/ 0
WarnSS0 4
,SS4 5
exceptIOSS6 >
,SS> ?
$strSS@ \
)SS\ ]
;SS] ^
}TT 
tryWW 
{XX 
ifYY 
(YY 
tcpConnYY 
!=YY  "
nullYY# '
)YY' (
{ZZ 
tcpConn[[ 
.[[  
Close[[  %
([[% &
)[[& '
;[[' (
}\\ 
}]] 
catch^^ 
(^^ 
IOException^^ "
exceptIO^^# +
)^^+ ,
{__ 
IO`` 
.`` 
Logger`` 
.`` 
Log`` !
(``! "
NLog``" &
.``& '
LogLevel``' /
.``/ 0
Warn``0 4
,``4 5
exceptIO``6 >
,``> ?
$str``@ Y
)``Y Z
;``Z [
}aa 
trycc 
{dd 
ifee 
(ee 
listeneree  
!=ee! #
nullee$ (
)ee( )
{ff 
listenergg  
.gg  !
Stopgg! %
(gg% &
)gg& '
;gg' (
}hh 
}ii 
catchjj 
(jj 
IOExceptionjj "
exceptIOjj# +
)jj+ ,
{kk 
IOll 
.ll 
Loggerll 
.ll 
Logll !
(ll! "
NLogll" &
.ll& '
LogLevelll' /
.ll/ 0
Warnll0 4
,ll4 5
exceptIOll6 >
,ll> ?
$strll@ [
)ll[ \
;ll\ ]
}mm 
}nn 
}oo 	
BadSinkpp 
(pp 
datapp 
)pp 
;pp 
}qq 
publictt 

overridett 
voidtt 
Goodtt 
(tt 
)tt 
{uu 
GoodG2Bvv 
(vv 
)vv 
;vv 
}ww 
privateyy 
staticyy 
voidyy 
GoodG2BSinkyy #
(yy# $
doubleyy$ *
datayy+ /
)yy0 1
{zz 
{{{ 	
IO}} 
.}} 
	WriteLine}} 
(}} 
(}} 
long}} 
)}} 
data}} #
)}}# $
;}}$ %
}~~ 	
} 
private
ÇÇ 
static
ÇÇ 
void
ÇÇ 
GoodG2B
ÇÇ 
(
ÇÇ  
)
ÇÇ  !
{
ÉÉ 
double
ÑÑ 
data
ÑÑ 
;
ÑÑ 
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
GoodG2BSink
áá 
(
áá 
data
áá 
)
áá 
;
áá 
}
àà 
}ää 
}ãã ¡5
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_42 C
:D E
AbstractTestCaseF V
{ 
private 
static 
double 
	BadSource #
(# $
)$ %
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
TcpListener## 
listener##  
=##! "
null### '
;##' (
	TcpClient$$ 
tcpConn$$ 
=$$ 
null$$  $
;$$$ %
StreamReader%% 
sr%% 
=%% 
null%% "
;%%" #
try'' 
{(( 
listener)) 
=)) 
new)) 
TcpListener)) *
())* +
	IPAddress))+ 4
.))4 5
Parse))5 :
()): ;
$str)); G
)))G H
,))H I
$num))J O
)))O P
;))P Q
tcpConn** 
=** 
listener** "
.**" #
AcceptTcpClient**# 2
(**2 3
)**3 4
;**4 5
sr,, 
=,, 
new,, 
StreamReader,, %
(,,% &
tcpConn,,& -
.,,- .
	GetStream,,. 7
(,,7 8
),,8 9
),,9 :
;,,: ;
string.. 
stringNumber.. #
=..$ %
sr..& (
...( )
ReadLine..) 1
(..1 2
)..2 3
;..3 4
if// 
(// 
stringNumber//  
!=//! #
null//$ (
)//( )
{00 
try11 
{22 
data33 
=33 
double33 %
.33% &
Parse33& +
(33+ ,
stringNumber33, 8
.338 9
Trim339 =
(33= >
)33> ?
)33? @
;33@ A
}44 
catch55 
(55 
FormatException55 )
exceptNumberFormat55* <
)55< =
{66 
IO77 
.77 
Logger77 !
.77! "
Log77" %
(77% &
NLog77& *
.77* +
LogLevel77+ 3
.773 4
Warn774 8
,778 9
exceptNumberFormat77: L
,77L M
$str	77N Ä
)
77Ä Å
;
77Å Ç
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; 
exceptIO;; '
);;' (
{<< 
IO== 
.== 
Logger== 
.== 
Log== 
(== 
NLog== "
.==" #
LogLevel==# +
.==+ ,
Warn==, 0
,==0 1
exceptIO==2 :
,==: ;
$str==< W
)==W X
;==X Y
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD 
nullDD "
)DD" #
{EE 
srFF 
.FF 
CloseFF  
(FF  !
)FF! "
;FF" #
}GG 
}HH 
catchII 
(II 
IOExceptionII "
exceptIOII# +
)II+ ,
{JJ 
IOKK 
.KK 
LoggerKK 
.KK 
LogKK !
(KK! "
NLogKK" &
.KK& '
LogLevelKK' /
.KK/ 0
WarnKK0 4
,KK4 5
exceptIOKK6 >
,KK> ?
$strKK@ \
)KK\ ]
;KK] ^
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ 
!=QQ  "
nullQQ# '
)QQ' (
{RR 
tcpConnSS 
.SS  
CloseSS  %
(SS% &
)SS& '
;SS' (
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV "
exceptIOVV# +
)VV+ ,
{WW 
IOXX 
.XX 
LoggerXX 
.XX 
LogXX !
(XX! "
NLogXX" &
.XX& '
LogLevelXX' /
.XX/ 0
WarnXX0 4
,XX4 5
exceptIOXX6 >
,XX> ?
$strXX@ Y
)XXY Z
;XXZ [
}YY 
try[[ 
{\\ 
if]] 
(]] 
listener]]  
!=]]! #
null]]$ (
)]]( )
{^^ 
listener__  
.__  !
Stop__! %
(__% &
)__& '
;__' (
}`` 
}aa 
catchbb 
(bb 
IOExceptionbb "
exceptIObb# +
)bb+ ,
{cc 
IOdd 
.dd 
Loggerdd 
.dd 
Logdd !
(dd! "
NLogdd" &
.dd& '
LogLeveldd' /
.dd/ 0
Warndd0 4
,dd4 5
exceptIOdd6 >
,dd> ?
$strdd@ [
)dd[ \
;dd\ ]
}ee 
}ff 
}gg 	
returnhh 
datahh 
;hh 
}ii 
publicll 

overridell 
voidll 
Badll 
(ll 
)ll 
{mm 
doublenn 
datann 
=nn 
	BadSourcenn 
(nn  
)nn  !
;nn! "
{oo 	
IOqq 
.qq 
	WriteLineqq 
(qq 
(qq 
longqq 
)qq 
dataqq #
)qq# $
;qq$ %
}rr 	
}ss 
privatevv 
staticvv 
doublevv 
GoodG2BSourcevv '
(vv' (
)vv( )
{ww 
doublexx 
dataxx 
;xx 
datazz 
=zz 
$numzz 
;zz 
return{{ 
data{{ 
;{{ 
}|| 
private 
static 
void 
GoodG2B 
(  
)  !
{
ÄÄ 
double
ÅÅ 
data
ÅÅ 
=
ÅÅ 
GoodG2BSource
ÅÅ #
(
ÅÅ# $
)
ÅÅ$ %
;
ÅÅ% &
{
ÇÇ 	
IO
ÑÑ 
.
ÑÑ 
	WriteLine
ÑÑ 
(
ÑÑ 
(
ÑÑ 
long
ÑÑ 
)
ÑÑ 
data
ÑÑ #
)
ÑÑ# $
;
ÑÑ$ %
}
ÖÖ 	
}
ÜÜ 
public
àà 

override
àà 
void
àà 
Good
àà 
(
àà 
)
àà 
{
ââ 
GoodG2B
ää 
(
ää 
)
ää 
;
ää 
}
ãã 
}çç 
}éé °7
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_45 C
:D E
AbstractTestCaseF V
{ 
private 
double 
dataBad 
; 
private 
double 
dataGoodG2B 
; 
private!! 
void!! 
BadSink!! 
(!! 
)!! 
{"" 
double## 
data## 
=## 
dataBad## 
;## 
{$$ 	
IO&& 
.&& 
	WriteLine&& 
(&& 
(&& 
long&& 
)&& 
data&& #
)&&# $
;&&$ %
}'' 	
}(( 
public++ 

override++ 
void++ 
Bad++ 
(++ 
)++ 
{,, 
double-- 
data-- 
;-- 
data.. 
=.. 
double.. 
... 
MinValue.. 
;.. 
{00 	
TcpListener11 
listener11  
=11! "
null11# '
;11' (
	TcpClient22 
tcpConn22 
=22 
null22  $
;22$ %
StreamReader33 
sr33 
=33 
null33 "
;33" #
try55 
{66 
listener77 
=77 
new77 
TcpListener77 *
(77* +
	IPAddress77+ 4
.774 5
Parse775 :
(77: ;
$str77; G
)77G H
,77H I
$num77J O
)77O P
;77P Q
tcpConn88 
=88 
listener88 "
.88" #
AcceptTcpClient88# 2
(882 3
)883 4
;884 5
sr:: 
=:: 
new:: 
StreamReader:: %
(::% &
tcpConn::& -
.::- .
	GetStream::. 7
(::7 8
)::8 9
)::9 :
;::: ;
string<< 
stringNumber<< #
=<<$ %
sr<<& (
.<<( )
ReadLine<<) 1
(<<1 2
)<<2 3
;<<3 4
if== 
(== 
stringNumber==  
!===! #
null==$ (
)==( )
{>> 
try?? 
{@@ 
dataAA 
=AA 
doubleAA %
.AA% &
ParseAA& +
(AA+ ,
stringNumberAA, 8
.AA8 9
TrimAA9 =
(AA= >
)AA> ?
)AA? @
;AA@ A
}BB 
catchCC 
(CC 
FormatExceptionCC )
exceptNumberFormatCC* <
)CC< =
{DD 
IOEE 
.EE 
LoggerEE !
.EE! "
LogEE" %
(EE% &
NLogEE& *
.EE* +
LogLevelEE+ 3
.EE3 4
WarnEE4 8
,EE8 9
exceptNumberFormatEE: L
,EEL M
$str	EEN Ä
)
EEÄ Å
;
EEÅ Ç
}FF 
}GG 
}HH 
catchII 
(II 
IOExceptionII 
exceptIOII '
)II' (
{JJ 
IOKK 
.KK 
LoggerKK 
.KK 
LogKK 
(KK 
NLogKK "
.KK" #
LogLevelKK# +
.KK+ ,
WarnKK, 0
,KK0 1
exceptIOKK2 :
,KK: ;
$strKK< W
)KKW X
;KKX Y
}LL 
finallyMM 
{NN 
tryPP 
{QQ 
ifRR 
(RR 
srRR 
!=RR 
nullRR "
)RR" #
{SS 
srTT 
.TT 
CloseTT  
(TT  !
)TT! "
;TT" #
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ \
)YY\ ]
;YY] ^
}ZZ 
try]] 
{^^ 
if__ 
(__ 
tcpConn__ 
!=__  "
null__# '
)__' (
{`` 
tcpConnaa 
.aa  
Closeaa  %
(aa% &
)aa& '
;aa' (
}bb 
}cc 
catchdd 
(dd 
IOExceptiondd "
exceptIOdd# +
)dd+ ,
{ee 
IOff 
.ff 
Loggerff 
.ff 
Logff !
(ff! "
NLogff" &
.ff& '
LogLevelff' /
.ff/ 0
Warnff0 4
,ff4 5
exceptIOff6 >
,ff> ?
$strff@ Y
)ffY Z
;ffZ [
}gg 
tryii 
{jj 
ifkk 
(kk 
listenerkk  
!=kk! #
nullkk$ (
)kk( )
{ll 
listenermm  
.mm  !
Stopmm! %
(mm% &
)mm& '
;mm' (
}nn 
}oo 
catchpp 
(pp 
IOExceptionpp "
exceptIOpp# +
)pp+ ,
{qq 
IOrr 
.rr 
Loggerrr 
.rr 
Logrr !
(rr! "
NLogrr" &
.rr& '
LogLevelrr' /
.rr/ 0
Warnrr0 4
,rr4 5
exceptIOrr6 >
,rr> ?
$strrr@ [
)rr[ \
;rr\ ]
}ss 
}tt 
}uu 	
dataBadvv 
=vv 
datavv 
;vv 
BadSinkww 
(ww 
)ww 
;ww 
}xx 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B}} 
(}} 
)}} 
;}} 
}~~ 
private
ÄÄ 
void
ÄÄ 
GoodG2BSink
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
double
ÇÇ 
data
ÇÇ 
=
ÇÇ 
dataGoodG2B
ÇÇ !
;
ÇÇ! "
{
ÉÉ 	
IO
ÖÖ 
.
ÖÖ 
	WriteLine
ÖÖ 
(
ÖÖ 
(
ÖÖ 
long
ÖÖ 
)
ÖÖ 
data
ÖÖ #
)
ÖÖ# $
;
ÖÖ$ %
}
ÜÜ 	
}
áá 
private
ää 
void
ää 
GoodG2B
ää 
(
ää 
)
ää 
{
ãã 
double
åå 
data
åå 
;
åå 
data
éé 
=
éé 
$num
éé 
;
éé 
dataGoodG2B
èè 
=
èè 
data
èè 
;
èè 
GoodG2BSink
êê 
(
êê 
)
êê 
;
êê 
}
ëë 
}ìì 
}îî ¡/
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_51a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
TcpListener## 
listener##  
=##! "
null### '
;##' (
	TcpClient$$ 
tcpConn$$ 
=$$ 
null$$  $
;$$$ %
StreamReader%% 
sr%% 
=%% 
null%% "
;%%" #
try'' 
{(( 
listener)) 
=)) 
new)) 
TcpListener)) *
())* +
	IPAddress))+ 4
.))4 5
Parse))5 :
()): ;
$str)); G
)))G H
,))H I
$num))J O
)))O P
;))P Q
tcpConn** 
=** 
listener** "
.**" #
AcceptTcpClient**# 2
(**2 3
)**3 4
;**4 5
sr,, 
=,, 
new,, 
StreamReader,, %
(,,% &
tcpConn,,& -
.,,- .
	GetStream,,. 7
(,,7 8
),,8 9
),,9 :
;,,: ;
string.. 
stringNumber.. #
=..$ %
sr..& (
...( )
ReadLine..) 1
(..1 2
)..2 3
;..3 4
if// 
(// 
stringNumber//  
!=//! #
null//$ (
)//( )
{00 
try11 
{22 
data33 
=33 
double33 %
.33% &
Parse33& +
(33+ ,
stringNumber33, 8
.338 9
Trim339 =
(33= >
)33> ?
)33? @
;33@ A
}44 
catch55 
(55 
FormatException55 )
exceptNumberFormat55* <
)55< =
{66 
IO77 
.77 
Logger77 !
.77! "
Log77" %
(77% &
NLog77& *
.77* +
LogLevel77+ 3
.773 4
Warn774 8
,778 9
exceptNumberFormat77: L
,77L M
$str	77N Ä
)
77Ä Å
;
77Å Ç
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; 
exceptIO;; '
);;' (
{<< 
IO== 
.== 
Logger== 
.== 
Log== 
(== 
NLog== "
.==" #
LogLevel==# +
.==+ ,
Warn==, 0
,==0 1
exceptIO==2 :
,==: ;
$str==< W
)==W X
;==X Y
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD 
nullDD "
)DD" #
{EE 
srFF 
.FF 
CloseFF  
(FF  !
)FF! "
;FF" #
}GG 
}HH 
catchII 
(II 
IOExceptionII "
exceptIOII# +
)II+ ,
{JJ 
IOKK 
.KK 
LoggerKK 
.KK 
LogKK !
(KK! "
NLogKK" &
.KK& '
LogLevelKK' /
.KK/ 0
WarnKK0 4
,KK4 5
exceptIOKK6 >
,KK> ?
$strKK@ \
)KK\ ]
;KK] ^
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ 
!=QQ  "
nullQQ# '
)QQ' (
{RR 
tcpConnSS 
.SS  
CloseSS  %
(SS% &
)SS& '
;SS' (
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV "
exceptIOVV# +
)VV+ ,
{WW 
IOXX 
.XX 
LoggerXX 
.XX 
LogXX !
(XX! "
NLogXX" &
.XX& '
LogLevelXX' /
.XX/ 0
WarnXX0 4
,XX4 5
exceptIOXX6 >
,XX> ?
$strXX@ Y
)XXY Z
;XXZ [
}YY 
try[[ 
{\\ 
if]] 
(]] 
listener]]  
!=]]! #
null]]$ (
)]]( )
{^^ 
listener__  
.__  !
Stop__! %
(__% &
)__& '
;__' (
}`` 
}aa 
catchbb 
(bb 
IOExceptionbb "
exceptIObb# +
)bb+ ,
{cc 
IOdd 
.dd 
Loggerdd 
.dd 
Logdd !
(dd! "
NLogdd" &
.dd& '
LogLeveldd' /
.dd/ 0
Warndd0 4
,dd4 5
exceptIOdd6 >
,dd> ?
$strdd@ [
)dd[ \
;dd\ ]
}ee 
}ff 
}gg 	J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_51bhh F
.hhF G
BadSinkhhG N
(hhN O
datahhO S
)hhU V
;hhV W
}ii 
publicll 

overridell 
voidll 
Goodll 
(ll 
)ll 
{mm 
GoodG2Bnn 
(nn 
)nn 
;nn 
}oo 
privaterr 
voidrr 
GoodG2Brr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
datavv 
=vv 
$numvv 
;vv J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_51bww F
.wwF G
GoodG2BSinkwwG R
(wwR S
datawwS W
)wwY Z
;wwZ [
}xx 
}zz 
}{{ ©	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_51b D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
double### )
data##* .
)##/ 0
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
long'' 
)'' 
data'' #
)''# $
;''$ %
}(( 	
})) 
}++ 
},, ¡/
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_52a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_52bii F
.iiF G
BadSinkiiG N
(iiN O
dataiiO S
)iiT U
;iiU V
}jj 
publicmm 

overridemm 
voidmm 
Goodmm 
(mm 
)mm 
{nn 
GoodG2Boo 
(oo 
)oo 
;oo 
}pp 
privatess 
voidss 
GoodG2Bss 
(ss 
)ss 
{tt 
doubleuu 
datauu 
;uu 
dataww 
=ww 
$numww 
;ww J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_52bxx F
.xxF G
GoodG2BSinkxxG R
(xxR S
dataxxS W
)xxX Y
;xxY Z
}yy 
}{{ 
}|| Ö	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_52b D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_52c F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_52c## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' ©	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_52c D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
long(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- ¡/
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_53a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_53bii F
.iiF G
BadSinkiiG N
(iiN O
dataiiO S
)iiT U
;iiU V
}jj 
publicmm 

overridemm 
voidmm 
Goodmm 
(mm 
)mm 
{nn 
GoodG2Boo 
(oo 
)oo 
;oo 
}pp 
privatess 
voidss 
GoodG2Bss 
(ss 
)ss 
{tt 
doubleuu 
datauu 
;uu 
dataww 
=ww 
$numww 
;ww J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_53bxx F
.xxF G
GoodG2BSinkxxG R
(xxR S
dataxxS W
)xxX Y
;xxY Z
}yy 
}{{ 
}|| Ö	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_53b D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_53c F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_53c## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' Ö	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_53c D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_53d F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_53d## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' ©	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_53d D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
long(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- ¡/
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_54a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_54bii F
.iiF G
BadSinkiiG N
(iiN O
dataiiO S
)iiT U
;iiU V
}jj 
publicmm 

overridemm 
voidmm 
Goodmm 
(mm 
)mm 
{nn 
GoodG2Boo 
(oo 
)oo 
;oo 
}pp 
privatess 
voidss 
GoodG2Bss 
(ss 
)ss 
{tt 
doubleuu 
datauu 
;uu 
dataww 
=ww 
$numww 
;ww J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_54bxx F
.xxF G
GoodG2BSinkxxG R
(xxR S
dataxxS W
)xxX Y
;xxY Z
}yy 
}{{ 
}|| Ö	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_54b D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_54c F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_54c## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' Ö	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_54c D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_54d F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_54d## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' Ö	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_54d D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_54e F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_54e## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' ©	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_54e D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
long(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- ˝
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_61a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
= J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_61b T
.T U
	BadSourceU ^
(^ _
)_ `
;` a
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
double++ 
data++ 
=++ J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_61b++ T
.++T U
GoodG2BSource++U b
(++b c
)++c d
;++d e
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
long.. 
).. 
data.. #
)..# $
;..$ %
}// 	
}00 
}22 
}33 Ò+
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_61b D
{ 
public 

static 
double 
	BadSource "
(" #
)# $
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	
returnii 
dataii 
;ii 
}jj 
publicoo 

staticoo 
doubleoo 
GoodG2BSourceoo &
(oo& '
)oo' (
{pp 
doubleqq 
dataqq 
;qq 
datass 
=ss 
$numss 
;ss 
returntt 
datatt 
;tt 
}uu 
}ww 
}xx «4
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_66a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	
doubleii 
[ii 
]ii 
	dataArrayii 
=ii 
newii  
doubleii! '
[ii' (
$numii( )
]ii) *
;ii* +
	dataArrayjj 
[jj 
$numjj 
]jj 
=jj 
datajj 
;jj J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_66bkk F
.kkF G
BadSinkkkG N
(kkN O
	dataArraykkO X
)kkZ [
;kk[ \
}ll 
publicoo 

overrideoo 
voidoo 
Goodoo 
(oo 
)oo 
{pp 
GoodG2Bqq 
(qq 
)qq 
;qq 
}rr 
privateuu 
staticuu 
voiduu 
GoodG2Buu 
(uu  
)uu  !
{vv 
doubleww 
dataww 
;ww 
datayy 
=yy 
$numyy 
;yy 
doublezz 
[zz 
]zz 
	dataArrayzz 
=zz 
newzz  
doublezz! '
[zz' (
$numzz( )
]zz) *
;zz* +
	dataArray{{ 
[{{ 
$num{{ 
]{{ 
={{ 
data{{ 
;{{ J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_66b|| F
.||F G
GoodG2BSink||G R
(||R S
	dataArray||S \
)||^ _
;||_ `
}}} 
} 
}ÄÄ Ö
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_66b D
{ 
public 

static 
void 
BadSink 
( 
double %
[% &
]& '
	dataArray( 1
)2 3
{ 
double 
data 
= 
	dataArray 
[  
$num  !
]! "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
double%%# )
[%%) *
]%%* +
	dataArray%%, 5
)%%6 7
{&& 
double'' 
data'' 
='' 
	dataArray'' 
[''  
$num''  !
]''! "
;''" #
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
long** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// »5
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_67a D
:E F
AbstractTestCaseG W
{ 
public 

class 
	Container 
{ 
public   
double   
containerOne   "
;  " #
}!! 
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
double%% 
data%% 
;%% 
data&& 
=&& 
double&& 
.&& 
MinValue&& 
;&& 
{(( 	
TcpListener)) 
listener))  
=))! "
null))# '
;))' (
	TcpClient** 
tcpConn** 
=** 
null**  $
;**$ %
StreamReader++ 
sr++ 
=++ 
null++ "
;++" #
try-- 
{.. 
listener// 
=// 
new// 
TcpListener// *
(//* +
	IPAddress//+ 4
.//4 5
Parse//5 :
(//: ;
$str//; G
)//G H
,//H I
$num//J O
)//O P
;//P Q
tcpConn00 
=00 
listener00 "
.00" #
AcceptTcpClient00# 2
(002 3
)003 4
;004 5
sr22 
=22 
new22 
StreamReader22 %
(22% &
tcpConn22& -
.22- .
	GetStream22. 7
(227 8
)228 9
)229 :
;22: ;
string44 
stringNumber44 #
=44$ %
sr44& (
.44( )
ReadLine44) 1
(441 2
)442 3
;443 4
if55 
(55 
stringNumber55  
!=55! #
null55$ (
)55( )
{66 
try77 
{88 
data99 
=99 
double99 %
.99% &
Parse99& +
(99+ ,
stringNumber99, 8
.998 9
Trim999 =
(99= >
)99> ?
)99? @
;99@ A
}:: 
catch;; 
(;; 
FormatException;; )
exceptNumberFormat;;* <
);;< =
{<< 
IO== 
.== 
Logger== !
.==! "
Log==" %
(==% &
NLog==& *
.==* +
LogLevel==+ 3
.==3 4
Warn==4 8
,==8 9
exceptNumberFormat==: L
,==L M
$str	==N Ä
)
==Ä Å
;
==Å Ç
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA 
exceptIOAA '
)AA' (
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC 
(CC 
NLogCC "
.CC" #
LogLevelCC# +
.CC+ ,
WarnCC, 0
,CC0 1
exceptIOCC2 :
,CC: ;
$strCC< W
)CCW X
;CCX Y
}DD 
finallyEE 
{FF 
tryHH 
{II 
ifJJ 
(JJ 
srJJ 
!=JJ 
nullJJ "
)JJ" #
{KK 
srLL 
.LL 
CloseLL  
(LL  !
)LL! "
;LL" #
}MM 
}NN 
catchOO 
(OO 
IOExceptionOO "
exceptIOOO# +
)OO+ ,
{PP 
IOQQ 
.QQ 
LoggerQQ 
.QQ 
LogQQ !
(QQ! "
NLogQQ" &
.QQ& '
LogLevelQQ' /
.QQ/ 0
WarnQQ0 4
,QQ4 5
exceptIOQQ6 >
,QQ> ?
$strQQ@ \
)QQ\ ]
;QQ] ^
}RR 
tryUU 
{VV 
ifWW 
(WW 
tcpConnWW 
!=WW  "
nullWW# '
)WW' (
{XX 
tcpConnYY 
.YY  
CloseYY  %
(YY% &
)YY& '
;YY' (
}ZZ 
}[[ 
catch\\ 
(\\ 
IOException\\ "
exceptIO\\# +
)\\+ ,
{]] 
IO^^ 
.^^ 
Logger^^ 
.^^ 
Log^^ !
(^^! "
NLog^^" &
.^^& '
LogLevel^^' /
.^^/ 0
Warn^^0 4
,^^4 5
exceptIO^^6 >
,^^> ?
$str^^@ Y
)^^Y Z
;^^Z [
}__ 
tryaa 
{bb 
ifcc 
(cc 
listenercc  
!=cc! #
nullcc$ (
)cc( )
{dd 
listeneree  
.ee  !
Stopee! %
(ee% &
)ee& '
;ee' (
}ff 
}gg 
catchhh 
(hh 
IOExceptionhh "
exceptIOhh# +
)hh+ ,
{ii 
IOjj 
.jj 
Loggerjj 
.jj 
Logjj !
(jj! "
NLogjj" &
.jj& '
LogLeveljj' /
.jj/ 0
Warnjj0 4
,jj4 5
exceptIOjj6 >
,jj> ?
$strjj@ [
)jj[ \
;jj\ ]
}kk 
}ll 
}mm 	
	Containernn 
dataContainernn 
=nn  !
newnn" %
	Containernn& /
(nn/ 0
)nn0 1
;nn1 2
dataContaineroo 
.oo 
containerOneoo "
=oo# $
dataoo% )
;oo) *J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_67bpp F
.ppF G
BadSinkppG N
(ppN O
dataContainerppO \
)pp^ _
;pp_ `
}qq 
publictt 

overridett 
voidtt 
Goodtt 
(tt 
)tt 
{uu 
GoodG2Bvv 
(vv 
)vv 
;vv 
}ww 
privatezz 
staticzz 
voidzz 
GoodG2Bzz 
(zz  
)zz  !
{{{ 
double|| 
data|| 
;|| 
data~~ 
=~~ 
$num~~ 
;~~ 
	Container 
dataContainer 
=  !
new" %
	Container& /
(/ 0
)0 1
;1 2
dataContainer
ÄÄ 
.
ÄÄ 
containerOne
ÄÄ "
=
ÄÄ# $
data
ÄÄ% )
;
ÄÄ) *L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_67b
ÅÅ F
.
ÅÅF G
GoodG2BSink
ÅÅG R
(
ÅÅR S
dataContainer
ÅÅS `
)
ÅÅb c
;
ÅÅc d
}
ÇÇ 
}ÑÑ 
}ÖÖ á
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_67b D
{ 
public 

static 
void 
BadSink 
( J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_67a ]
.] ^
	Container^ g
dataContainerh u
)v w
{ 
double 
data 
= 
dataContainer #
.# $
containerOne$ 0
;0 1
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_67a%%# a
.%%a b
	Container%%b k
dataContainer%%l y
)%%z {
{&& 
double'' 
data'' 
='' 
dataContainer'' #
.''# $
containerOne''$ 0
;''0 1
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
long** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// §/
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_68a D
:E F
AbstractTestCaseG W
{ 
public 

static 
double 
data 
; 
public 

override 
void 
Bad 
( 
) 
{   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_68bii F
.iiF G
BadSinkiiG N
(iiN O
)iiO P
;iiP Q
}jj 
publicmm 

overridemm 
voidmm 
Goodmm 
(mm 
)mm 
{nn 
GoodG2Boo 
(oo 
)oo 
;oo 
}pp 
privatess 
staticss 
voidss 
GoodG2Bss 
(ss  
)ss  !
{tt 
datavv 
=vv 
$numvv 
;vv J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_68bww F
.wwF G
GoodG2BSinkwwG R
(wwR S
)wwS T
;wwT U
}xx 
}zz 
}{{ ø
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_68b D
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
double 
data 
= J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_68a T
.T U
dataU Y
;Y Z
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
double&& 
data&& 
=&& J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_68a&& T
.&&T U
data&&U Y
;&&Y Z
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
long)) 
))) 
data)) #
)))# $
;))$ %
}** 	
}++ 
}-- 
}.. π0
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_71a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_71bii F
.iiF G
BadSinkiiG N
(iiN O
(iiO P
ObjectiiP V
)iiV W
dataiiW [
)ii] ^
;ii^ _
}jj 
publicmm 

overridemm 
voidmm 
Goodmm 
(mm 
)mm 
{nn 
GoodG2Boo 
(oo 
)oo 
;oo 
}pp 
privatess 
staticss 
voidss 
GoodG2Bss 
(ss  
)ss  !
{tt 
doubleuu 
datauu 
;uu 
dataww 
=ww 
$numww 
;ww J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_71bxx F
.xxF G
GoodG2BSinkxxG R
(xxR S
(xxS T
ObjectxxT Z
)xxZ [
dataxx[ _
)xxa b
;xxb c
}yy 
}{{ 
}|| —
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_71b D
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
double 
data 
= 
( 
double 
) 

dataObject (
;( )
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
double(( 
data(( 
=(( 
((( 
double(( 
)(( 

dataObject(( (
;((( )
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
long++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 Ì9
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_72a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	
	Hashtableii 
dataHashtableii 
=ii  !
newii" %
	Hashtableii& /
(ii/ 0
$numii0 1
)ii1 2
;ii2 3
dataHashtablejj 
.jj 
Addjj 
(jj 
$numjj 
,jj 
datajj !
)jj! "
;jj" #
dataHashtablekk 
.kk 
Addkk 
(kk 
$numkk 
,kk 
datakk !
)kk! "
;kk" #
dataHashtablell 
.ll 
Addll 
(ll 
$numll 
,ll 
datall !
)ll! "
;ll" #J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_72bmm F
.mmF G
BadSinkmmG N
(mmN O
dataHashtablemmO \
)mm^ _
;mm_ `
}nn 
publicqq 

overrideqq 
voidqq 
Goodqq 
(qq 
)qq 
{rr 
GoodG2Bss 
(ss 
)ss 
;ss 
}tt 
privateww 
staticww 
voidww 
GoodG2Bww 
(ww  
)ww  !
{xx 
doubleyy 
datayy 
;yy 
data{{ 
={{ 
$num{{ 
;{{ 
	Hashtable|| 
dataHashtable|| 
=||  !
new||" %
	Hashtable||& /
(||/ 0
$num||0 1
)||1 2
;||2 3
dataHashtable}} 
.}} 
Add}} 
(}} 
$num}} 
,}} 
data}} !
)}}! "
;}}" #
dataHashtable~~ 
.~~ 
Add~~ 
(~~ 
$num~~ 
,~~ 
data~~ !
)~~! "
;~~" #
dataHashtable 
. 
Add 
( 
$num 
, 
data !
)! "
;" #L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_72b
ÄÄ F
.
ÄÄF G
GoodG2BSink
ÄÄG R
(
ÄÄR S
dataHashtable
ÄÄS `
)
ÄÄb c
;
ÄÄc d
}
ÅÅ 
}ÉÉ 
}ÑÑ √
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_72b D
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
double 
data 
= 
( 
double 
) 
dataHashtable ,
[, -
$num- .
]. /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
double(( 
data(( 
=(( 
((( 
double(( 
)(( 
dataHashtable(( ,
[((, -
$num((- .
]((. /
;((/ 0
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
long++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ˇ9
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_73a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{   
double!! 
data!! 
;!! 
data"" 
="" 
double"" 
."" 
MinValue"" 
;"" 
{$$ 	
TcpListener%% 
listener%%  
=%%! "
null%%# '
;%%' (
	TcpClient&& 
tcpConn&& 
=&& 
null&&  $
;&&$ %
StreamReader'' 
sr'' 
='' 
null'' "
;''" #
try)) 
{** 
listener++ 
=++ 
new++ 
TcpListener++ *
(++* +
	IPAddress+++ 4
.++4 5
Parse++5 :
(++: ;
$str++; G
)++G H
,++H I
$num++J O
)++O P
;++P Q
tcpConn,, 
=,, 
listener,, "
.,," #
AcceptTcpClient,,# 2
(,,2 3
),,3 4
;,,4 5
sr.. 
=.. 
new.. 
StreamReader.. %
(..% &
tcpConn..& -
...- .
	GetStream... 7
(..7 8
)..8 9
)..9 :
;..: ;
string00 
stringNumber00 #
=00$ %
sr00& (
.00( )
ReadLine00) 1
(001 2
)002 3
;003 4
if11 
(11 
stringNumber11  
!=11! #
null11$ (
)11( )
{22 
try33 
{44 
data55 
=55 
double55 %
.55% &
Parse55& +
(55+ ,
stringNumber55, 8
.558 9
Trim559 =
(55= >
)55> ?
)55? @
;55@ A
}66 
catch77 
(77 
FormatException77 )
exceptNumberFormat77* <
)77< =
{88 
IO99 
.99 
Logger99 !
.99! "
Log99" %
(99% &
NLog99& *
.99* +
LogLevel99+ 3
.993 4
Warn994 8
,998 9
exceptNumberFormat99: L
,99L M
$str	99N Ä
)
99Ä Å
;
99Å Ç
}:: 
};; 
}<< 
catch== 
(== 
IOException== 
exceptIO== '
)==' (
{>> 
IO?? 
.?? 
Logger?? 
.?? 
Log?? 
(?? 
NLog?? "
.??" #
LogLevel??# +
.??+ ,
Warn??, 0
,??0 1
exceptIO??2 :
,??: ;
$str??< W
)??W X
;??X Y
}@@ 
finallyAA 
{BB 
tryDD 
{EE 
ifFF 
(FF 
srFF 
!=FF 
nullFF "
)FF" #
{GG 
srHH 
.HH 
CloseHH  
(HH  !
)HH! "
;HH" #
}II 
}JJ 
catchKK 
(KK 
IOExceptionKK "
exceptIOKK# +
)KK+ ,
{LL 
IOMM 
.MM 
LoggerMM 
.MM 
LogMM !
(MM! "
NLogMM" &
.MM& '
LogLevelMM' /
.MM/ 0
WarnMM0 4
,MM4 5
exceptIOMM6 >
,MM> ?
$strMM@ \
)MM\ ]
;MM] ^
}NN 
tryQQ 
{RR 
ifSS 
(SS 
tcpConnSS 
!=SS  "
nullSS# '
)SS' (
{TT 
tcpConnUU 
.UU  
CloseUU  %
(UU% &
)UU& '
;UU' (
}VV 
}WW 
catchXX 
(XX 
IOExceptionXX "
exceptIOXX# +
)XX+ ,
{YY 
IOZZ 
.ZZ 
LoggerZZ 
.ZZ 
LogZZ !
(ZZ! "
NLogZZ" &
.ZZ& '
LogLevelZZ' /
.ZZ/ 0
WarnZZ0 4
,ZZ4 5
exceptIOZZ6 >
,ZZ> ?
$strZZ@ Y
)ZZY Z
;ZZZ [
}[[ 
try]] 
{^^ 
if__ 
(__ 
listener__  
!=__! #
null__$ (
)__( )
{`` 
listeneraa  
.aa  !
Stopaa! %
(aa% &
)aa& '
;aa' (
}bb 
}cc 
catchdd 
(dd 
IOExceptiondd "
exceptIOdd# +
)dd+ ,
{ee 
IOff 
.ff 
Loggerff 
.ff 
Logff !
(ff! "
NLogff" &
.ff& '
LogLevelff' /
.ff/ 0
Warnff0 4
,ff4 5
exceptIOff6 >
,ff> ?
$strff@ [
)ff[ \
;ff\ ]
}gg 
}hh 
}ii 	

LinkedListjj 
<jj 
doublejj 
>jj 
dataLinkedListjj )
=jj* +
newjj, /

LinkedListjj0 :
<jj: ;
doublejj; A
>jjA B
(jjB C
)jjC D
;jjD E
dataLinkedListkk 
.kk 
AddLastkk 
(kk 
datakk #
)kk# $
;kk$ %
dataLinkedListll 
.ll 
AddLastll 
(ll 
datall #
)ll# $
;ll$ %
dataLinkedListmm 
.mm 
AddLastmm 
(mm 
datamm #
)mm# $
;mm$ %J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_73bnn F
.nnF G
BadSinknnG N
(nnN O
dataLinkedListnnO ]
)nn_ `
;nn` a
}oo 
publicrr 

overriderr 
voidrr 
Goodrr 
(rr 
)rr 
{ss 
GoodG2Btt 
(tt 
)tt 
;tt 
}uu 
privatexx 
staticxx 
voidxx 
GoodG2Bxx 
(xx  
)xx  !
{yy 
doublezz 
datazz 
;zz 
data|| 
=|| 
$num|| 
;|| 

LinkedList}} 
<}} 
double}} 
>}} 
dataLinkedList}} )
=}}* +
new}}, /

LinkedList}}0 :
<}}: ;
double}}; A
>}}A B
(}}B C
)}}C D
;}}D E
dataLinkedList~~ 
.~~ 
AddLast~~ 
(~~ 
data~~ #
)~~# $
;~~$ %
dataLinkedList 
. 
AddLast 
( 
data #
)# $
;$ %
dataLinkedList
ÄÄ 
.
ÄÄ 
AddLast
ÄÄ 
(
ÄÄ 
data
ÄÄ #
)
ÄÄ# $
;
ÄÄ$ %L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_73b
ÅÅ F
.
ÅÅF G
GoodG2BSink
ÅÅG R
(
ÅÅR S
dataLinkedList
ÅÅS a
)
ÅÅc d
;
ÅÅd e
}
ÇÇ 
}ÑÑ 
}ÖÖ Ô
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_73b D
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
double* 0
>0 1
dataLinkedList2 @
)A B
{ 
double 
data 
= 
dataLinkedList $
.$ %
Last% )
.) *
Value* /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
double&&. 4
>&&4 5
dataLinkedList&&6 D
)&&E F
{'' 
double(( 
data(( 
=(( 
dataLinkedList(( $
.(($ %
Last((% )
.(() *
Value((* /
;((/ 0
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
long++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ü<
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_74a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	

Dictionaryii 
<ii 
intii 
,ii 
doubleii 
>ii 
dataDictionaryii -
=ii. /
newii0 3

Dictionaryii4 >
<ii> ?
intii? B
,iiB C
doubleiiC I
>iiI J
(iiJ K
)iiK L
;iiL M
dataDictionaryjj 
.jj 
Addjj 
(jj 
$numjj 
,jj 
datajj "
)jj" #
;jj# $
dataDictionarykk 
.kk 
Addkk 
(kk 
$numkk 
,kk 
datakk "
)kk" #
;kk# $
dataDictionaryll 
.ll 
Addll 
(ll 
$numll 
,ll 
datall "
)ll" #
;ll# $J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_74bmm F
.mmF G
BadSinkmmG N
(mmN O
dataDictionarymmO ]
)mm_ `
;mm` a
}nn 
publicqq 

overrideqq 
voidqq 
Goodqq 
(qq 
)qq 
{rr 
GoodG2Bss 
(ss 
)ss 
;ss 
}tt 
privateww 
staticww 
voidww 
GoodG2Bww 
(ww  
)ww  !
{xx 
doubleyy 
datayy 
;yy 
data{{ 
={{ 
$num{{ 
;{{ 

Dictionary|| 
<|| 
int|| 
,|| 
double|| 
>|| 
dataDictionary|| -
=||. /
new||0 3

Dictionary||4 >
<||> ?
int||? B
,||B C
double||C I
>||I J
(||J K
)||K L
;||L M
dataDictionary}} 
.}} 
Add}} 
(}} 
$num}} 
,}} 
data}} "
)}}" #
;}}# $
dataDictionary~~ 
.~~ 
Add~~ 
(~~ 
$num~~ 
,~~ 
data~~ "
)~~" #
;~~# $
dataDictionary 
. 
Add 
( 
$num 
, 
data "
)" #
;# $L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_74b
ÄÄ F
.
ÄÄF G
GoodG2BSink
ÄÄG R
(
ÄÄR S
dataDictionary
ÄÄS a
)
ÄÄc d
;
ÄÄd e
}
ÅÅ 
}ÉÉ 
}ÑÑ â
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_74b D
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
double. 4
>4 5
dataDictionary6 D
)E F
{ 
double 
data 
= 
dataDictionary $
[$ %
$num% &
]& '
;' (
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
double&&2 8
>&&8 9
dataDictionary&&: H
)&&I J
{'' 
double(( 
data(( 
=(( 
dataDictionary(( $
[(($ %
$num((% &
]((& '
;((' (
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
long++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ÁD
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_75a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{   
double!! 
data!! 
;!! 
data"" 
="" 
double"" 
."" 
MinValue"" 
;"" 
{$$ 	
TcpListener%% 
listener%%  
=%%! "
null%%# '
;%%' (
	TcpClient&& 
tcpConn&& 
=&& 
null&&  $
;&&$ %
StreamReader'' 
sr'' 
='' 
null'' "
;''" #
try)) 
{** 
listener++ 
=++ 
new++ 
TcpListener++ *
(++* +
	IPAddress+++ 4
.++4 5
Parse++5 :
(++: ;
$str++; G
)++G H
,++H I
$num++J O
)++O P
;++P Q
tcpConn,, 
=,, 
listener,, "
.,," #
AcceptTcpClient,,# 2
(,,2 3
),,3 4
;,,4 5
sr.. 
=.. 
new.. 
StreamReader.. %
(..% &
tcpConn..& -
...- .
	GetStream... 7
(..7 8
)..8 9
)..9 :
;..: ;
string00 
stringNumber00 #
=00$ %
sr00& (
.00( )
ReadLine00) 1
(001 2
)002 3
;003 4
if11 
(11 
stringNumber11  
!=11! #
null11$ (
)11( )
{22 
try33 
{44 
data55 
=55 
double55 %
.55% &
Parse55& +
(55+ ,
stringNumber55, 8
.558 9
Trim559 =
(55= >
)55> ?
)55? @
;55@ A
}66 
catch77 
(77 
FormatException77 )
exceptNumberFormat77* <
)77< =
{88 
IO99 
.99 
Logger99 !
.99! "
Log99" %
(99% &
NLog99& *
.99* +
LogLevel99+ 3
.993 4
Warn994 8
,998 9
exceptNumberFormat99: L
,99L M
$str	99N Ä
)
99Ä Å
;
99Å Ç
}:: 
};; 
}<< 
catch== 
(== 
IOException== 
exceptIO== '
)==' (
{>> 
IO?? 
.?? 
Logger?? 
.?? 
Log?? 
(?? 
NLog?? "
.??" #
LogLevel??# +
.??+ ,
Warn??, 0
,??0 1
exceptIO??2 :
,??: ;
$str??< W
)??W X
;??X Y
}@@ 
finallyAA 
{BB 
tryDD 
{EE 
ifFF 
(FF 
srFF 
!=FF 
nullFF "
)FF" #
{GG 
srHH 
.HH 
CloseHH  
(HH  !
)HH! "
;HH" #
}II 
}JJ 
catchKK 
(KK 
IOExceptionKK "
exceptIOKK# +
)KK+ ,
{LL 
IOMM 
.MM 
LoggerMM 
.MM 
LogMM !
(MM! "
NLogMM" &
.MM& '
LogLevelMM' /
.MM/ 0
WarnMM0 4
,MM4 5
exceptIOMM6 >
,MM> ?
$strMM@ \
)MM\ ]
;MM] ^
}NN 
tryQQ 
{RR 
ifSS 
(SS 
tcpConnSS 
!=SS  "
nullSS# '
)SS' (
{TT 
tcpConnUU 
.UU  
CloseUU  %
(UU% &
)UU& '
;UU' (
}VV 
}WW 
catchXX 
(XX 
IOExceptionXX "
exceptIOXX# +
)XX+ ,
{YY 
IOZZ 
.ZZ 
LoggerZZ 
.ZZ 
LogZZ !
(ZZ! "
NLogZZ" &
.ZZ& '
LogLevelZZ' /
.ZZ/ 0
WarnZZ0 4
,ZZ4 5
exceptIOZZ6 >
,ZZ> ?
$strZZ@ Y
)ZZY Z
;ZZZ [
}[[ 
try]] 
{^^ 
if__ 
(__ 
listener__  
!=__! #
null__$ (
)__( )
{`` 
listeneraa  
.aa  !
Stopaa! %
(aa% &
)aa& '
;aa' (
}bb 
}cc 
catchdd 
(dd 
IOExceptiondd "
exceptIOdd# +
)dd+ ,
{ee 
IOff 
.ff 
Loggerff 
.ff 
Logff !
(ff! "
NLogff" &
.ff& '
LogLevelff' /
.ff/ 0
Warnff0 4
,ff4 5
exceptIOff6 >
,ff> ?
$strff@ [
)ff[ \
;ff\ ]
}gg 
}hh 
}ii 	
bytekk 
[kk 
]kk 
dataSerializedkk 
=kk 
nullkk  $
;kk$ %
tryll 
{mm 	
BinaryFormatternn 
bfnn 
=nn  
newnn! $
BinaryFormatternn% 4
(nn4 5
)nn5 6
;nn6 7
usingoo 
(oo 
varoo 
msoo 
=oo 
newoo 
MemoryStreamoo  ,
(oo, -
)oo- .
)oo. /
{pp 
bfqq 
.qq 
	Serializeqq 
(qq 
msqq 
,qq  
dataqq! %
)qq% &
;qq& '
dataSerializedrr 
=rr  
msrr! #
.rr# $
ToArrayrr$ +
(rr+ ,
)rr, -
;rr- .
}ss J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_75btt J
.ttJ K
BadSinkttK R
(ttR S
dataSerializedttS a
)ttc d
;ttd e
}uu 	
catchvv 
(vv "
SerializationExceptionvv %
exceptSerializevv& 5
)vv5 6
{ww 	
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx 
.xx 
LogLevelxx '
.xx' (
Warnxx( ,
,xx, -
$strxx. X
,xxX Y
exceptSerializexxZ i
)xxi j
;xxj k
}yy 	
}zz 
public}} 

override}} 
void}} 
Good}} 
(}} 
)}} 
{~~ 
GoodG2B 
( 
) 
; 
}
ÄÄ 
private
ÉÉ 
static
ÉÉ 
void
ÉÉ 
GoodG2B
ÉÉ 
(
ÉÉ  
)
ÉÉ  !
{
ÑÑ 
double
ÖÖ 
data
ÖÖ 
;
ÖÖ 
data
áá 
=
áá 
$num
áá 
;
áá 
byte
ââ 
[
ââ 
]
ââ 
dataSerialized
ââ 
=
ââ 
null
ââ  $
;
ââ$ %
try
ää 
{
ãã 	
BinaryFormatter
åå 
bf
åå 
=
åå  
new
åå! $
BinaryFormatter
åå% 4
(
åå4 5
)
åå5 6
;
åå6 7
using
çç 
(
çç 
var
çç 
ms
çç 
=
çç 
new
çç 
MemoryStream
çç  ,
(
çç, -
)
çç- .
)
çç. /
{
éé 
bf
èè 
.
èè 
	Serialize
èè 
(
èè 
ms
èè 
,
èè  
data
èè! %
)
èè% &
;
èè& '
dataSerialized
êê 
=
êê  
ms
êê! #
.
êê# $
ToArray
êê$ +
(
êê+ ,
)
êê, -
;
êê- .
}
ëë L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_75b
íí J
.
ííJ K
GoodG2BSink
ííK V
(
ííV W
dataSerialized
ííW e
)
ííg h
;
ííh i
}
ìì 	
catch
îî 
(
îî $
SerializationException
îî %
exceptSerialize
îî& 5
)
îî5 6
{
ïï 	
IO
ññ 
.
ññ 
Logger
ññ 
.
ññ 
Log
ññ 
(
ññ 
NLog
ññ 
.
ññ 
LogLevel
ññ '
.
ññ' (
Warn
ññ( ,
,
ññ, -
$str
ññ. X
,
ññX Y
exceptSerialize
ññZ i
)
ññi j
;
ññj k
}
óó 	
}
òò 
}öö 
}õõ Ô!
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_75b D
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
double   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
double&& 
)&& 
binForm&& &
.&&& '
Deserialize&&' 2
(&&2 3
	memStream&&3 <
)&&< =
;&&= >
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
long** "
)**" #
data**# '
)**' (
;**( )
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
double:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
double@@ 
)@@ 
binForm@@ &
.@@& '
Deserialize@@' 2
(@@2 3
	memStream@@3 <
)@@< =
;@@= >
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
longDD "
)DD" #
dataDD# '
)DD' (
;DD( )
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN Ì2
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_81a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	N
BCWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_81_baseii J

baseObjectiiK U
=iiV W
newiiX [N
ACWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_81_bad	ii\ ù
(
iiù û
)
iiû ü
;
iiü †

baseObjectjj 
.jj 
Actionjj 
(jj 
datajj 
)jj  
;jj  !
}kk 
publicnn 

overridenn 
voidnn 
Goodnn 
(nn 
)nn 
{oo 
GoodG2Bpp 
(pp 
)pp 
;pp 
}qq 
privatett 
voidtt 
GoodG2Btt 
(tt 
)tt 
{uu 
doublevv 
datavv 
;vv 
dataxx 
=xx 
$numxx 
;xx N
BCWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_81_baseyy J

baseObjectyyK U
=yyV W
newyyX [R
ECWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_81_goodG2B	yy\ °
(
yy° ¢
)
yy¢ £
;
yy£ §

baseObjectzz 
.zz 
Actionzz 
(zz 
datazz 
)zz  
;zz  !
}{{ 
}}} 
}~~ ò
ƒC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class M
ACWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_81_bad G
:H IO
BCWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_81_base	J å
{ 
public 

override 
void 
Action 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" ˛
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 N
BCWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_81_base Q
{ 
public 

abstract 
void 
Action 
(  
double  &
data' +
), -
;- .
} 
} †
»C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class Q
ECWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_81_goodG2B K
:L MO
BCWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_81_base	N ê
{ 
public 

override 
void 
Action 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" Î/
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_01 D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	
{ii 	
IOkk 
.kk 
	WriteLinekk 
(kk 
(kk 
shortkk 
)kk  
datakk  $
)kk$ %
;kk% &
}ll 	
}mm 
publicpp 

overridepp 
voidpp 
Goodpp 
(pp 
)pp 
{qq 
GoodG2Brr 
(rr 
)rr 
;rr 
}ss 
privatevv 
voidvv 
GoodG2Bvv 
(vv 
)vv 
{ww 
doublexx 
dataxx 
;xx 
datazz 
=zz 
$numzz 
;zz 
{{{ 	
IO}} 
.}} 
	WriteLine}} 
(}} 
(}} 
short}} 
)}}  
data}}  $
)}}$ %
;}}% &
}~~ 	
} 
}ÅÅ 
}ÇÇ ı9
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_02 D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
if!! 

(!! 
true!! 
)!! 
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
shorttt 
)tt  
datatt  $
)tt$ %
;tt% &
}uu 	
}vv 
privatezz 
voidzz 
GoodG2B1zz 
(zz 
)zz 
{{{ 
double|| 
data|| 
;|| 
if}} 

(}} 
false}} 
)}} 
{~~ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
else
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
{
àà 	
IO
ää 
.
ää 
	WriteLine
ää 
(
ää 
(
ää 
short
ää 
)
ää  
data
ää  $
)
ää$ %
;
ää% &
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
double
ëë 
data
ëë 
;
ëë 
if
íí 

(
íí 
true
íí 
)
íí 
{
ìì 	
data
ïï 
=
ïï 
$num
ïï 
;
ïï 
}
ññ 	
else
óó 
{
òò 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
{
ùù 	
IO
üü 
.
üü 
	WriteLine
üü 
(
üü 
(
üü 
short
üü 
)
üü  
data
üü  $
)
üü$ %
;
üü% &
}
†† 	
}
°° 
public
££ 

override
££ 
void
££ 
Good
££ 
(
££ 
)
££ 
{
§§ 
GoodG2B1
•• 
(
•• 
)
•• 
;
•• 
GoodG2B2
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
}
ßß 
}©© 
}™™ ﬁ:
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_03 D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
if!! 

(!! 
$num!! 
==!! 
$num!! 
)!! 
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
shorttt 
)tt  
datatt  $
)tt$ %
;tt% &
}uu 	
}vv 
privatezz 
voidzz 
GoodG2B1zz 
(zz 
)zz 
{{{ 
double|| 
data|| 
;|| 
if}} 

(}} 
$num}} 
!=}} 
$num}} 
)}} 
{~~ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
else
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
{
àà 	
IO
ää 
.
ää 
	WriteLine
ää 
(
ää 
(
ää 
short
ää 
)
ää  
data
ää  $
)
ää$ %
;
ää% &
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
double
ëë 
data
ëë 
;
ëë 
if
íí 

(
íí 
$num
íí 
==
íí 
$num
íí 
)
íí 
{
ìì 	
data
ïï 
=
ïï 
$num
ïï 
;
ïï 
}
ññ 	
else
óó 
{
òò 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
{
ùù 	
IO
üü 
.
üü 
	WriteLine
üü 
(
üü 
(
üü 
short
üü 
)
üü  
data
üü  $
)
üü$ %
;
üü% &
}
†† 	
}
°° 
public
££ 

override
££ 
void
££ 
Good
££ 
(
££ 
)
££ 
{
§§ 
GoodG2B1
•• 
(
•• 
)
•• 
;
•• 
GoodG2B2
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
}
ßß 
}©© 
}™™ —<
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_04 D
:E F
AbstractTestCaseG W
{ 
private!! 
const!! 
bool!! 
PRIVATE_CONST_TRUE!! )
=!!* +
true!!, 0
;!!0 1
private"" 
const"" 
bool"" 
PRIVATE_CONST_FALSE"" *
=""+ ,
false""- 2
;""2 3
public%% 

override%% 
void%% 
Bad%% 
(%% 
)%% 
{&& 
double'' 
data'' 
;'' 
if(( 

((( 
PRIVATE_CONST_TRUE(( 
)(( 
{)) 	
data** 
=** 
double** 
.** 
MinValue** "
;**" #
{,, 
TcpListener-- 
listener-- $
=--% &
null--' +
;--+ ,
	TcpClient.. 
tcpConn.. !
=.." #
null..$ (
;..( )
StreamReader// 
sr// 
=//  !
null//" &
;//& '
try11 
{22 
listener33 
=33 
new33 "
TcpListener33# .
(33. /
	IPAddress33/ 8
.338 9
Parse339 >
(33> ?
$str33? K
)33K L
,33L M
$num33N S
)33S T
;33T U
tcpConn44 
=44 
listener44 &
.44& '
AcceptTcpClient44' 6
(446 7
)447 8
;448 9
sr66 
=66 
new66 
StreamReader66 )
(66) *
tcpConn66* 1
.661 2
	GetStream662 ;
(66; <
)66< =
)66= >
;66> ?
string88 
stringNumber88 '
=88( )
sr88* ,
.88, -
ReadLine88- 5
(885 6
)886 7
;887 8
if99 
(99 
stringNumber99 $
!=99% '
null99( ,
)99, -
{:: 
try;; 
{<< 
data==  
===! "
double==# )
.==) *
Parse==* /
(==/ 0
stringNumber==0 <
.==< =
Trim=== A
(==A B
)==B C
)==C D
;==D E
}>> 
catch?? 
(?? 
FormatException?? -
exceptNumberFormat??. @
)??@ A
{@@ 
IOAA 
.AA 
LoggerAA %
.AA% &
LogAA& )
(AA) *
NLogAA* .
.AA. /
LogLevelAA/ 7
.AA7 8
WarnAA8 <
,AA< =
exceptNumberFormatAA> P
,AAP Q
$str	AAR Ñ
)
AAÑ Ö
;
AAÖ Ü
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE "
exceptIOEE# +
)EE+ ,
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG !
(GG! "
NLogGG" &
.GG& '
LogLevelGG' /
.GG/ 0
WarnGG0 4
,GG4 5
exceptIOGG6 >
,GG> ?
$strGG@ [
)GG[ \
;GG\ ]
}HH 
finallyII 
{JJ 
tryLL 
{MM 
ifNN 
(NN 
srNN 
!=NN !
nullNN" &
)NN& '
{OO 
srPP 
.PP 
ClosePP $
(PP$ %
)PP% &
;PP& '
}QQ 
}RR 
catchSS 
(SS 
IOExceptionSS &
exceptIOSS' /
)SS/ 0
{TT 
IOUU 
.UU 
LoggerUU !
.UU! "
LogUU" %
(UU% &
NLogUU& *
.UU* +
LogLevelUU+ 3
.UU3 4
WarnUU4 8
,UU8 9
exceptIOUU: B
,UUB C
$strUUD `
)UU` a
;UUa b
}VV 
tryYY 
{ZZ 
if[[ 
([[ 
tcpConn[[ #
!=[[$ &
null[[' +
)[[+ ,
{\\ 
tcpConn]] #
.]]# $
Close]]$ )
(]]) *
)]]* +
;]]+ ,
}^^ 
}__ 
catch`` 
(`` 
IOException`` &
exceptIO``' /
)``/ 0
{aa 
IObb 
.bb 
Loggerbb !
.bb! "
Logbb" %
(bb% &
NLogbb& *
.bb* +
LogLevelbb+ 3
.bb3 4
Warnbb4 8
,bb8 9
exceptIObb: B
,bbB C
$strbbD ]
)bb] ^
;bb^ _
}cc 
tryee 
{ff 
ifgg 
(gg 
listenergg $
!=gg% '
nullgg( ,
)gg, -
{hh 
listenerii $
.ii$ %
Stopii% )
(ii) *
)ii* +
;ii+ ,
}jj 
}kk 
catchll 
(ll 
IOExceptionll &
exceptIOll' /
)ll/ 0
{mm 
IOnn 
.nn 
Loggernn !
.nn! "
Lognn" %
(nn% &
NLognn& *
.nn* +
LogLevelnn+ 3
.nn3 4
Warnnn4 8
,nn8 9
exceptIOnn: B
,nnB C
$strnnD _
)nn_ `
;nn` a
}oo 
}pp 
}qq 
}rr 	
elsess 
{tt 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
short{{ 
){{  
data{{  $
){{$ %
;{{% &
}|| 	
}}} 
private
ÅÅ 
void
ÅÅ 
GoodG2B1
ÅÅ 
(
ÅÅ 
)
ÅÅ 
{
ÇÇ 
double
ÉÉ 
data
ÉÉ 
;
ÉÉ 
if
ÑÑ 

(
ÑÑ !
PRIVATE_CONST_FALSE
ÑÑ 
)
ÑÑ  
{
ÖÖ 	
data
àà 
=
àà 
$num
àà 
;
àà 
}
ââ 	
else
ää 
{
ãã 	
data
çç 
=
çç 
$num
çç 
;
çç 
}
éé 	
{
èè 	
IO
ëë 
.
ëë 
	WriteLine
ëë 
(
ëë 
(
ëë 
short
ëë 
)
ëë  
data
ëë  $
)
ëë$ %
;
ëë% &
}
íí 	
}
ìì 
private
ññ 
void
ññ 
GoodG2B2
ññ 
(
ññ 
)
ññ 
{
óó 
double
òò 
data
òò 
;
òò 
if
ôô 

(
ôô  
PRIVATE_CONST_TRUE
ôô 
)
ôô 
{
öö 	
data
úú 
=
úú 
$num
úú 
;
úú 
}
ùù 	
else
ûû 
{
üü 	
data
¢¢ 
=
¢¢ 
$num
¢¢ 
;
¢¢ 
}
££ 	
{
§§ 	
IO
¶¶ 
.
¶¶ 
	WriteLine
¶¶ 
(
¶¶ 
(
¶¶ 
short
¶¶ 
)
¶¶  
data
¶¶  $
)
¶¶$ %
;
¶¶% &
}
ßß 	
}
®® 
public
™™ 

override
™™ 
void
™™ 
Good
™™ 
(
™™ 
)
™™ 
{
´´ 
GoodG2B1
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨ 
GoodG2B2
≠≠ 
(
≠≠ 
)
≠≠ 
;
≠≠ 
}
ÆÆ 
}∞∞ 
}±± à<
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_05 D
:E F
AbstractTestCaseG W
{ 
private!! 
bool!! 
privateTrue!! 
=!! 
true!! #
;!!# $
private"" 
bool"" 
privateFalse"" 
="" 
false""  %
;""% &
public%% 

override%% 
void%% 
Bad%% 
(%% 
)%% 
{&& 
double'' 
data'' 
;'' 
if(( 

((( 
privateTrue(( 
)(( 
{)) 	
data** 
=** 
double** 
.** 
MinValue** "
;**" #
{,, 
TcpListener-- 
listener-- $
=--% &
null--' +
;--+ ,
	TcpClient.. 
tcpConn.. !
=.." #
null..$ (
;..( )
StreamReader// 
sr// 
=//  !
null//" &
;//& '
try11 
{22 
listener33 
=33 
new33 "
TcpListener33# .
(33. /
	IPAddress33/ 8
.338 9
Parse339 >
(33> ?
$str33? K
)33K L
,33L M
$num33N S
)33S T
;33T U
tcpConn44 
=44 
listener44 &
.44& '
AcceptTcpClient44' 6
(446 7
)447 8
;448 9
sr66 
=66 
new66 
StreamReader66 )
(66) *
tcpConn66* 1
.661 2
	GetStream662 ;
(66; <
)66< =
)66= >
;66> ?
string88 
stringNumber88 '
=88( )
sr88* ,
.88, -
ReadLine88- 5
(885 6
)886 7
;887 8
if99 
(99 
stringNumber99 $
!=99% '
null99( ,
)99, -
{:: 
try;; 
{<< 
data==  
===! "
double==# )
.==) *
Parse==* /
(==/ 0
stringNumber==0 <
.==< =
Trim=== A
(==A B
)==B C
)==C D
;==D E
}>> 
catch?? 
(?? 
FormatException?? -
exceptNumberFormat??. @
)??@ A
{@@ 
IOAA 
.AA 
LoggerAA %
.AA% &
LogAA& )
(AA) *
NLogAA* .
.AA. /
LogLevelAA/ 7
.AA7 8
WarnAA8 <
,AA< =
exceptNumberFormatAA> P
,AAP Q
$str	AAR Ñ
)
AAÑ Ö
;
AAÖ Ü
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE "
exceptIOEE# +
)EE+ ,
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG !
(GG! "
NLogGG" &
.GG& '
LogLevelGG' /
.GG/ 0
WarnGG0 4
,GG4 5
exceptIOGG6 >
,GG> ?
$strGG@ [
)GG[ \
;GG\ ]
}HH 
finallyII 
{JJ 
tryLL 
{MM 
ifNN 
(NN 
srNN 
!=NN !
nullNN" &
)NN& '
{OO 
srPP 
.PP 
ClosePP $
(PP$ %
)PP% &
;PP& '
}QQ 
}RR 
catchSS 
(SS 
IOExceptionSS &
exceptIOSS' /
)SS/ 0
{TT 
IOUU 
.UU 
LoggerUU !
.UU! "
LogUU" %
(UU% &
NLogUU& *
.UU* +
LogLevelUU+ 3
.UU3 4
WarnUU4 8
,UU8 9
exceptIOUU: B
,UUB C
$strUUD `
)UU` a
;UUa b
}VV 
tryYY 
{ZZ 
if[[ 
([[ 
tcpConn[[ #
!=[[$ &
null[[' +
)[[+ ,
{\\ 
tcpConn]] #
.]]# $
Close]]$ )
(]]) *
)]]* +
;]]+ ,
}^^ 
}__ 
catch`` 
(`` 
IOException`` &
exceptIO``' /
)``/ 0
{aa 
IObb 
.bb 
Loggerbb !
.bb! "
Logbb" %
(bb% &
NLogbb& *
.bb* +
LogLevelbb+ 3
.bb3 4
Warnbb4 8
,bb8 9
exceptIObb: B
,bbB C
$strbbD ]
)bb] ^
;bb^ _
}cc 
tryee 
{ff 
ifgg 
(gg 
listenergg $
!=gg% '
nullgg( ,
)gg, -
{hh 
listenerii $
.ii$ %
Stopii% )
(ii) *
)ii* +
;ii+ ,
}jj 
}kk 
catchll 
(ll 
IOExceptionll &
exceptIOll' /
)ll/ 0
{mm 
IOnn 
.nn 
Loggernn !
.nn! "
Lognn" %
(nn% &
NLognn& *
.nn* +
LogLevelnn+ 3
.nn3 4
Warnnn4 8
,nn8 9
exceptIOnn: B
,nnB C
$strnnD _
)nn_ `
;nn` a
}oo 
}pp 
}qq 
}rr 	
elsess 
{tt 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
short{{ 
){{  
data{{  $
){{$ %
;{{% &
}|| 	
}}} 
private
ÅÅ 
void
ÅÅ 
GoodG2B1
ÅÅ 
(
ÅÅ 
)
ÅÅ 
{
ÇÇ 
double
ÉÉ 
data
ÉÉ 
;
ÉÉ 
if
ÑÑ 

(
ÑÑ 
privateFalse
ÑÑ 
)
ÑÑ 
{
ÖÖ 	
data
àà 
=
àà 
$num
àà 
;
àà 
}
ââ 	
else
ää 
{
ãã 	
data
çç 
=
çç 
$num
çç 
;
çç 
}
éé 	
{
èè 	
IO
ëë 
.
ëë 
	WriteLine
ëë 
(
ëë 
(
ëë 
short
ëë 
)
ëë  
data
ëë  $
)
ëë$ %
;
ëë% &
}
íí 	
}
ìì 
private
ññ 
void
ññ 
GoodG2B2
ññ 
(
ññ 
)
ññ 
{
óó 
double
òò 
data
òò 
;
òò 
if
ôô 

(
ôô 
privateTrue
ôô 
)
ôô 
{
öö 	
data
úú 
=
úú 
$num
úú 
;
úú 
}
ùù 	
else
ûû 
{
üü 	
data
¢¢ 
=
¢¢ 
$num
¢¢ 
;
¢¢ 
}
££ 	
{
§§ 	
IO
¶¶ 
.
¶¶ 
	WriteLine
¶¶ 
(
¶¶ 
(
¶¶ 
short
¶¶ 
)
¶¶  
data
¶¶  $
)
¶¶$ %
;
¶¶% &
}
ßß 	
}
®® 
public
™™ 

override
™™ 
void
™™ 
Good
™™ 
(
™™ 
)
™™ 
{
´´ 
GoodG2B1
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨ 
GoodG2B2
≠≠ 
(
≠≠ 
)
≠≠ 
;
≠≠ 
}
ÆÆ 
}∞∞ 
}±± ±<
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_06 D
:E F
AbstractTestCaseG W
{ 
private!! 
const!! 
int!! 
PRIVATE_CONST_FIVE!! (
=!!) *
$num!!+ ,
;!!, -
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
double&& 
data&& 
;&& 
if'' 

('' 
PRIVATE_CONST_FIVE'' 
=='' !
$num''" #
)''# $
{(( 	
data)) 
=)) 
double)) 
.)) 
MinValue)) "
;))" #
{++ 
TcpListener,, 
listener,, $
=,,% &
null,,' +
;,,+ ,
	TcpClient-- 
tcpConn-- !
=--" #
null--$ (
;--( )
StreamReader.. 
sr.. 
=..  !
null.." &
;..& '
try00 
{11 
listener22 
=22 
new22 "
TcpListener22# .
(22. /
	IPAddress22/ 8
.228 9
Parse229 >
(22> ?
$str22? K
)22K L
,22L M
$num22N S
)22S T
;22T U
tcpConn33 
=33 
listener33 &
.33& '
AcceptTcpClient33' 6
(336 7
)337 8
;338 9
sr55 
=55 
new55 
StreamReader55 )
(55) *
tcpConn55* 1
.551 2
	GetStream552 ;
(55; <
)55< =
)55= >
;55> ?
string77 
stringNumber77 '
=77( )
sr77* ,
.77, -
ReadLine77- 5
(775 6
)776 7
;777 8
if88 
(88 
stringNumber88 $
!=88% '
null88( ,
)88, -
{99 
try:: 
{;; 
data<<  
=<<! "
double<<# )
.<<) *
Parse<<* /
(<</ 0
stringNumber<<0 <
.<<< =
Trim<<= A
(<<A B
)<<B C
)<<C D
;<<D E
}== 
catch>> 
(>> 
FormatException>> -
exceptNumberFormat>>. @
)>>@ A
{?? 
IO@@ 
.@@ 
Logger@@ %
.@@% &
Log@@& )
(@@) *
NLog@@* .
.@@. /
LogLevel@@/ 7
.@@7 8
Warn@@8 <
,@@< =
exceptNumberFormat@@> P
,@@P Q
$str	@@R Ñ
)
@@Ñ Ö
;
@@Ö Ü
}AA 
}BB 
}CC 
catchDD 
(DD 
IOExceptionDD "
exceptIODD# +
)DD+ ,
{EE 
IOFF 
.FF 
LoggerFF 
.FF 
LogFF !
(FF! "
NLogFF" &
.FF& '
LogLevelFF' /
.FF/ 0
WarnFF0 4
,FF4 5
exceptIOFF6 >
,FF> ?
$strFF@ [
)FF[ \
;FF\ ]
}GG 
finallyHH 
{II 
tryKK 
{LL 
ifMM 
(MM 
srMM 
!=MM !
nullMM" &
)MM& '
{NN 
srOO 
.OO 
CloseOO $
(OO$ %
)OO% &
;OO& '
}PP 
}QQ 
catchRR 
(RR 
IOExceptionRR &
exceptIORR' /
)RR/ 0
{SS 
IOTT 
.TT 
LoggerTT !
.TT! "
LogTT" %
(TT% &
NLogTT& *
.TT* +
LogLevelTT+ 3
.TT3 4
WarnTT4 8
,TT8 9
exceptIOTT: B
,TTB C
$strTTD `
)TT` a
;TTa b
}UU 
tryXX 
{YY 
ifZZ 
(ZZ 
tcpConnZZ #
!=ZZ$ &
nullZZ' +
)ZZ+ ,
{[[ 
tcpConn\\ #
.\\# $
Close\\$ )
(\\) *
)\\* +
;\\+ ,
}]] 
}^^ 
catch__ 
(__ 
IOException__ &
exceptIO__' /
)__/ 0
{`` 
IOaa 
.aa 
Loggeraa !
.aa! "
Logaa" %
(aa% &
NLogaa& *
.aa* +
LogLevelaa+ 3
.aa3 4
Warnaa4 8
,aa8 9
exceptIOaa: B
,aaB C
$straaD ]
)aa] ^
;aa^ _
}bb 
trydd 
{ee 
ifff 
(ff 
listenerff $
!=ff% '
nullff( ,
)ff, -
{gg 
listenerhh $
.hh$ %
Stophh% )
(hh) *
)hh* +
;hh+ ,
}ii 
}jj 
catchkk 
(kk 
IOExceptionkk &
exceptIOkk' /
)kk/ 0
{ll 
IOmm 
.mm 
Loggermm !
.mm! "
Logmm" %
(mm% &
NLogmm& *
.mm* +
LogLevelmm+ 3
.mm3 4
Warnmm4 8
,mm8 9
exceptIOmm: B
,mmB C
$strmmD _
)mm_ `
;mm` a
}nn 
}oo 
}pp 
}qq 	
elserr 
{ss 	
datavv 
=vv 
$numvv 
;vv 
}ww 	
{xx 	
IOzz 
.zz 
	WriteLinezz 
(zz 
(zz 
shortzz 
)zz  
datazz  $
)zz$ %
;zz% &
}{{ 	
}|| 
private
ÄÄ 
void
ÄÄ 
GoodG2B1
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
double
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ  
PRIVATE_CONST_FIVE
ÉÉ 
!=
ÉÉ !
$num
ÉÉ" #
)
ÉÉ# $
{
ÑÑ 	
data
áá 
=
áá 
$num
áá 
;
áá 
}
àà 	
else
ââ 
{
ää 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
short
êê 
)
êê  
data
êê  $
)
êê$ %
;
êê% &
}
ëë 	
}
íí 
private
ïï 
void
ïï 
GoodG2B2
ïï 
(
ïï 
)
ïï 
{
ññ 
double
óó 
data
óó 
;
óó 
if
òò 

(
òò  
PRIVATE_CONST_FIVE
òò 
==
òò !
$num
òò" #
)
òò# $
{
ôô 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
else
ùù 
{
ûû 	
data
°° 
=
°° 
$num
°° 
;
°° 
}
¢¢ 	
{
££ 	
IO
•• 
.
•• 
	WriteLine
•• 
(
•• 
(
•• 
short
•• 
)
••  
data
••  $
)
••$ %
;
••% &
}
¶¶ 	
}
ßß 
public
©© 

override
©© 
void
©© 
Good
©© 
(
©© 
)
©© 
{
™™ 
GoodG2B1
´´ 
(
´´ 
)
´´ 
;
´´ 
GoodG2B2
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨ 
}
≠≠ 
}ØØ 
}∞∞ Ç<
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_07 D
:E F
AbstractTestCaseG W
{ 
private!! 
int!! 
privateFive!! 
=!! 
$num!! 
;!!  
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
double&& 
data&& 
;&& 
if'' 

('' 
privateFive'' 
=='' 
$num'' 
)'' 
{(( 	
data)) 
=)) 
double)) 
.)) 
MinValue)) "
;))" #
{++ 
TcpListener,, 
listener,, $
=,,% &
null,,' +
;,,+ ,
	TcpClient-- 
tcpConn-- !
=--" #
null--$ (
;--( )
StreamReader.. 
sr.. 
=..  !
null.." &
;..& '
try00 
{11 
listener22 
=22 
new22 "
TcpListener22# .
(22. /
	IPAddress22/ 8
.228 9
Parse229 >
(22> ?
$str22? K
)22K L
,22L M
$num22N S
)22S T
;22T U
tcpConn33 
=33 
listener33 &
.33& '
AcceptTcpClient33' 6
(336 7
)337 8
;338 9
sr55 
=55 
new55 
StreamReader55 )
(55) *
tcpConn55* 1
.551 2
	GetStream552 ;
(55; <
)55< =
)55= >
;55> ?
string77 
stringNumber77 '
=77( )
sr77* ,
.77, -
ReadLine77- 5
(775 6
)776 7
;777 8
if88 
(88 
stringNumber88 $
!=88% '
null88( ,
)88, -
{99 
try:: 
{;; 
data<<  
=<<! "
double<<# )
.<<) *
Parse<<* /
(<</ 0
stringNumber<<0 <
.<<< =
Trim<<= A
(<<A B
)<<B C
)<<C D
;<<D E
}== 
catch>> 
(>> 
FormatException>> -
exceptNumberFormat>>. @
)>>@ A
{?? 
IO@@ 
.@@ 
Logger@@ %
.@@% &
Log@@& )
(@@) *
NLog@@* .
.@@. /
LogLevel@@/ 7
.@@7 8
Warn@@8 <
,@@< =
exceptNumberFormat@@> P
,@@P Q
$str	@@R Ñ
)
@@Ñ Ö
;
@@Ö Ü
}AA 
}BB 
}CC 
catchDD 
(DD 
IOExceptionDD "
exceptIODD# +
)DD+ ,
{EE 
IOFF 
.FF 
LoggerFF 
.FF 
LogFF !
(FF! "
NLogFF" &
.FF& '
LogLevelFF' /
.FF/ 0
WarnFF0 4
,FF4 5
exceptIOFF6 >
,FF> ?
$strFF@ [
)FF[ \
;FF\ ]
}GG 
finallyHH 
{II 
tryKK 
{LL 
ifMM 
(MM 
srMM 
!=MM !
nullMM" &
)MM& '
{NN 
srOO 
.OO 
CloseOO $
(OO$ %
)OO% &
;OO& '
}PP 
}QQ 
catchRR 
(RR 
IOExceptionRR &
exceptIORR' /
)RR/ 0
{SS 
IOTT 
.TT 
LoggerTT !
.TT! "
LogTT" %
(TT% &
NLogTT& *
.TT* +
LogLevelTT+ 3
.TT3 4
WarnTT4 8
,TT8 9
exceptIOTT: B
,TTB C
$strTTD `
)TT` a
;TTa b
}UU 
tryXX 
{YY 
ifZZ 
(ZZ 
tcpConnZZ #
!=ZZ$ &
nullZZ' +
)ZZ+ ,
{[[ 
tcpConn\\ #
.\\# $
Close\\$ )
(\\) *
)\\* +
;\\+ ,
}]] 
}^^ 
catch__ 
(__ 
IOException__ &
exceptIO__' /
)__/ 0
{`` 
IOaa 
.aa 
Loggeraa !
.aa! "
Logaa" %
(aa% &
NLogaa& *
.aa* +
LogLevelaa+ 3
.aa3 4
Warnaa4 8
,aa8 9
exceptIOaa: B
,aaB C
$straaD ]
)aa] ^
;aa^ _
}bb 
trydd 
{ee 
ifff 
(ff 
listenerff $
!=ff% '
nullff( ,
)ff, -
{gg 
listenerhh $
.hh$ %
Stophh% )
(hh) *
)hh* +
;hh+ ,
}ii 
}jj 
catchkk 
(kk 
IOExceptionkk &
exceptIOkk' /
)kk/ 0
{ll 
IOmm 
.mm 
Loggermm !
.mm! "
Logmm" %
(mm% &
NLogmm& *
.mm* +
LogLevelmm+ 3
.mm3 4
Warnmm4 8
,mm8 9
exceptIOmm: B
,mmB C
$strmmD _
)mm_ `
;mm` a
}nn 
}oo 
}pp 
}qq 	
elserr 
{ss 	
datavv 
=vv 
$numvv 
;vv 
}ww 	
{xx 	
IOzz 
.zz 
	WriteLinezz 
(zz 
(zz 
shortzz 
)zz  
datazz  $
)zz$ %
;zz% &
}{{ 	
}|| 
private
ÄÄ 
void
ÄÄ 
GoodG2B1
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
double
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ 
privateFive
ÉÉ 
!=
ÉÉ 
$num
ÉÉ 
)
ÉÉ 
{
ÑÑ 	
data
áá 
=
áá 
$num
áá 
;
áá 
}
àà 	
else
ââ 
{
ää 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
short
êê 
)
êê  
data
êê  $
)
êê$ %
;
êê% &
}
ëë 	
}
íí 
private
ïï 
void
ïï 
GoodG2B2
ïï 
(
ïï 
)
ïï 
{
ññ 
double
óó 
data
óó 
;
óó 
if
òò 

(
òò 
privateFive
òò 
==
òò 
$num
òò 
)
òò 
{
ôô 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
else
ùù 
{
ûû 	
data
°° 
=
°° 
$num
°° 
;
°° 
}
¢¢ 	
{
££ 	
IO
•• 
.
•• 
	WriteLine
•• 
(
•• 
(
•• 
short
•• 
)
••  
data
••  $
)
••$ %
;
••% &
}
¶¶ 	
}
ßß 
public
©© 

override
©© 
void
©© 
Good
©© 
(
©© 
)
©© 
{
™™ 
GoodG2B1
´´ 
(
´´ 
)
´´ 
;
´´ 
GoodG2B2
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨ 
}
≠≠ 
}ØØ 
}∞∞ —>
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_08 D
:E F
AbstractTestCaseG W
{ 
private!! 
static!! 
bool!! 
PrivateReturnsTrue!! *
(!!* +
)!!+ ,
{"" 
return## 
true## 
;## 
}$$ 
private&& 
static&& 
bool&& 
PrivateReturnsFalse&& +
(&&+ ,
)&&, -
{'' 
return(( 
false(( 
;(( 
})) 
public,, 

override,, 
void,, 
Bad,, 
(,, 
),, 
{-- 
double.. 
data.. 
;.. 
if// 

(// 
PrivateReturnsTrue// 
(// 
)//  
)//  !
{00 	
data11 
=11 
double11 
.11 
MinValue11 "
;11" #
{33 
TcpListener44 
listener44 $
=44% &
null44' +
;44+ ,
	TcpClient55 
tcpConn55 !
=55" #
null55$ (
;55( )
StreamReader66 
sr66 
=66  !
null66" &
;66& '
try88 
{99 
listener:: 
=:: 
new:: "
TcpListener::# .
(::. /
	IPAddress::/ 8
.::8 9
Parse::9 >
(::> ?
$str::? K
)::K L
,::L M
$num::N S
)::S T
;::T U
tcpConn;; 
=;; 
listener;; &
.;;& '
AcceptTcpClient;;' 6
(;;6 7
);;7 8
;;;8 9
sr== 
=== 
new== 
StreamReader== )
(==) *
tcpConn==* 1
.==1 2
	GetStream==2 ;
(==; <
)==< =
)=== >
;==> ?
string?? 
stringNumber?? '
=??( )
sr??* ,
.??, -
ReadLine??- 5
(??5 6
)??6 7
;??7 8
if@@ 
(@@ 
stringNumber@@ $
!=@@% '
null@@( ,
)@@, -
{AA 
tryBB 
{CC 
dataDD  
=DD! "
doubleDD# )
.DD) *
ParseDD* /
(DD/ 0
stringNumberDD0 <
.DD< =
TrimDD= A
(DDA B
)DDB C
)DDC D
;DDD E
}EE 
catchFF 
(FF 
FormatExceptionFF -
exceptNumberFormatFF. @
)FF@ A
{GG 
IOHH 
.HH 
LoggerHH %
.HH% &
LogHH& )
(HH) *
NLogHH* .
.HH. /
LogLevelHH/ 7
.HH7 8
WarnHH8 <
,HH< =
exceptNumberFormatHH> P
,HHP Q
$str	HHR Ñ
)
HHÑ Ö
;
HHÖ Ü
}II 
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL "
exceptIOLL# +
)LL+ ,
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
exceptIONN6 >
,NN> ?
$strNN@ [
)NN[ \
;NN\ ]
}OO 
finallyPP 
{QQ 
trySS 
{TT 
ifUU 
(UU 
srUU 
!=UU !
nullUU" &
)UU& '
{VV 
srWW 
.WW 
CloseWW $
(WW$ %
)WW% &
;WW& '
}XX 
}YY 
catchZZ 
(ZZ 
IOExceptionZZ &
exceptIOZZ' /
)ZZ/ 0
{[[ 
IO\\ 
.\\ 
Logger\\ !
.\\! "
Log\\" %
(\\% &
NLog\\& *
.\\* +
LogLevel\\+ 3
.\\3 4
Warn\\4 8
,\\8 9
exceptIO\\: B
,\\B C
$str\\D `
)\\` a
;\\a b
}]] 
try`` 
{aa 
ifbb 
(bb 
tcpConnbb #
!=bb$ &
nullbb' +
)bb+ ,
{cc 
tcpConndd #
.dd# $
Closedd$ )
(dd) *
)dd* +
;dd+ ,
}ee 
}ff 
catchgg 
(gg 
IOExceptiongg &
exceptIOgg' /
)gg/ 0
{hh 
IOii 
.ii 
Loggerii !
.ii! "
Logii" %
(ii% &
NLogii& *
.ii* +
LogLevelii+ 3
.ii3 4
Warnii4 8
,ii8 9
exceptIOii: B
,iiB C
$striiD ]
)ii] ^
;ii^ _
}jj 
tryll 
{mm 
ifnn 
(nn 
listenernn $
!=nn% '
nullnn( ,
)nn, -
{oo 
listenerpp $
.pp$ %
Stoppp% )
(pp) *
)pp* +
;pp+ ,
}qq 
}rr 
catchss 
(ss 
IOExceptionss &
exceptIOss' /
)ss/ 0
{tt 
IOuu 
.uu 
Loggeruu !
.uu! "
Loguu" %
(uu% &
NLoguu& *
.uu* +
LogLeveluu+ 3
.uu3 4
Warnuu4 8
,uu8 9
exceptIOuu: B
,uuB C
$struuD _
)uu_ `
;uu` a
}vv 
}ww 
}xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
short
ÇÇ 
)
ÇÇ  
data
ÇÇ  $
)
ÇÇ$ %
;
ÇÇ% &
}
ÉÉ 	
}
ÑÑ 
private
àà 
void
àà 
GoodG2B1
àà 
(
àà 
)
àà 
{
ââ 
double
ää 
data
ää 
;
ää 
if
ãã 

(
ãã !
PrivateReturnsFalse
ãã 
(
ãã  
)
ãã  !
)
ãã! "
{
åå 	
data
èè 
=
èè 
$num
èè 
;
èè 
}
êê 	
else
ëë 
{
íí 	
data
îî 
=
îî 
$num
îî 
;
îî 
}
ïï 	
{
ññ 	
IO
òò 
.
òò 
	WriteLine
òò 
(
òò 
(
òò 
short
òò 
)
òò  
data
òò  $
)
òò$ %
;
òò% &
}
ôô 	
}
öö 
private
ùù 
void
ùù 
GoodG2B2
ùù 
(
ùù 
)
ùù 
{
ûû 
double
üü 
data
üü 
;
üü 
if
†† 

(
††  
PrivateReturnsTrue
†† 
(
†† 
)
††  
)
††  !
{
°° 	
data
££ 
=
££ 
$num
££ 
;
££ 
}
§§ 	
else
•• 
{
¶¶ 	
data
©© 
=
©© 
$num
©© 
;
©© 
}
™™ 	
{
´´ 	
IO
≠≠ 
.
≠≠ 
	WriteLine
≠≠ 
(
≠≠ 
(
≠≠ 
short
≠≠ 
)
≠≠  
data
≠≠  $
)
≠≠$ %
;
≠≠% &
}
ÆÆ 	
}
ØØ 
public
±± 

override
±± 
void
±± 
Good
±± 
(
±± 
)
±± 
{
≤≤ 
GoodG2B1
≥≥ 
(
≥≥ 
)
≥≥ 
;
≥≥ 
GoodG2B2
¥¥ 
(
¥¥ 
)
¥¥ 
;
¥¥ 
}
µµ 
}∑∑ 
}∏∏ Ü;
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_09 D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
if!! 

(!! 
IO!! 
.!!  
STATIC_READONLY_TRUE!! #
)!!# $
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
shorttt 
)tt  
datatt  $
)tt$ %
;tt% &
}uu 	
}vv 
privatezz 
voidzz 
GoodG2B1zz 
(zz 
)zz 
{{{ 
double|| 
data|| 
;|| 
if}} 

(}} 
IO}} 
.}} !
STATIC_READONLY_FALSE}} $
)}}$ %
{~~ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
else
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
{
àà 	
IO
ää 
.
ää 
	WriteLine
ää 
(
ää 
(
ää 
short
ää 
)
ää  
data
ää  $
)
ää$ %
;
ää% &
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
double
ëë 
data
ëë 
;
ëë 
if
íí 

(
íí 
IO
íí 
.
íí "
STATIC_READONLY_TRUE
íí #
)
íí# $
{
ìì 	
data
ïï 
=
ïï 
$num
ïï 
;
ïï 
}
ññ 	
else
óó 
{
òò 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
{
ùù 	
IO
üü 
.
üü 
	WriteLine
üü 
(
üü 
(
üü 
short
üü 
)
üü  
data
üü  $
)
üü$ %
;
üü% &
}
†† 	
}
°° 
public
££ 

override
££ 
void
££ 
Good
££ 
(
££ 
)
££ 
{
§§ 
GoodG2B1
•• 
(
•• 
)
•• 
;
•• 
GoodG2B2
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
}
ßß 
}©© 
}™™ Ë:
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_10 D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
if!! 

(!! 
IO!! 
.!! 

staticTrue!! 
)!! 
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
shorttt 
)tt  
datatt  $
)tt$ %
;tt% &
}uu 	
}vv 
privatezz 
voidzz 
GoodG2B1zz 
(zz 
)zz 
{{{ 
double|| 
data|| 
;|| 
if}} 

(}} 
IO}} 
.}} 
staticFalse}} 
)}} 
{~~ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
else
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
{
àà 	
IO
ää 
.
ää 
	WriteLine
ää 
(
ää 
(
ää 
short
ää 
)
ää  
data
ää  $
)
ää$ %
;
ää% &
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
double
ëë 
data
ëë 
;
ëë 
if
íí 

(
íí 
IO
íí 
.
íí 

staticTrue
íí 
)
íí 
{
ìì 	
data
ïï 
=
ïï 
$num
ïï 
;
ïï 
}
ññ 	
else
óó 
{
òò 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
{
ùù 	
IO
üü 
.
üü 
	WriteLine
üü 
(
üü 
(
üü 
short
üü 
)
üü  
data
üü  $
)
üü$ %
;
üü% &
}
†† 	
}
°° 
public
££ 

override
££ 
void
££ 
Good
££ 
(
££ 
)
££ 
{
§§ 
GoodG2B1
•• 
(
•• 
)
•• 
;
•• 
GoodG2B2
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
}
ßß 
}©© 
}™™ €;
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_11 D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
if!! 

(!! 
IO!! 
.!! 
StaticReturnsTrue!!  
(!!  !
)!!! "
)!!" #
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
shorttt 
)tt  
datatt  $
)tt$ %
;tt% &
}uu 	
}vv 
privatezz 
voidzz 
GoodG2B1zz 
(zz 
)zz 
{{{ 
double|| 
data|| 
;|| 
if}} 

(}} 
IO}} 
.}} 
StaticReturnsFalse}} !
(}}! "
)}}" #
)}}# $
{~~ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
else
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
{
àà 	
IO
ää 
.
ää 
	WriteLine
ää 
(
ää 
(
ää 
short
ää 
)
ää  
data
ää  $
)
ää$ %
;
ää% &
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
double
ëë 
data
ëë 
;
ëë 
if
íí 

(
íí 
IO
íí 
.
íí 
StaticReturnsTrue
íí  
(
íí  !
)
íí! "
)
íí" #
{
ìì 	
data
ïï 
=
ïï 
$num
ïï 
;
ïï 
}
ññ 	
else
óó 
{
òò 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
{
ùù 	
IO
üü 
.
üü 
	WriteLine
üü 
(
üü 
(
üü 
short
üü 
)
üü  
data
üü  $
)
üü$ %
;
üü% &
}
†† 	
}
°° 
public
££ 

override
££ 
void
££ 
Good
££ 
(
££ 
)
££ 
{
§§ 
GoodG2B1
•• 
(
•• 
)
•• 
;
•• 
GoodG2B2
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
}
ßß 
}©© 
}™™ ˜4
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_12 D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
if!! 

(!! 
IO!! 
.!! $
StaticReturnsTrueOrFalse!! '
(!!' (
)!!( )
)!!) *
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
shortss 
)ss  
datass  $
)ss$ %
;ss% &
}tt 	
}uu 
privatezz 
voidzz 
GoodG2Bzz 
(zz 
)zz 
{{{ 
double|| 
data|| 
;|| 
if}} 

(}} 
IO}} 
.}} $
StaticReturnsTrueOrFalse}} '
(}}' (
)}}( )
)}}) *
{~~ 	
data
ÄÄ 
=
ÄÄ 
$num
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
else
ÇÇ 
{
ÉÉ 	
data
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
{
áá 	
IO
ââ 
.
ââ 
	WriteLine
ââ 
(
ââ 
(
ââ 
short
ââ 
)
ââ  
data
ââ  $
)
ââ$ %
;
ââ% &
}
ää 	
}
ãã 
public
çç 

override
çç 
void
çç 
Good
çç 
(
çç 
)
çç 
{
éé 
GoodG2B
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì Ô;
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_13 D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
if!! 

(!! 
IO!! 
.!!  
STATIC_READONLY_FIVE!! #
==!!$ &
$num!!' (
)!!( )
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
shorttt 
)tt  
datatt  $
)tt$ %
;tt% &
}uu 	
}vv 
privatezz 
voidzz 
GoodG2B1zz 
(zz 
)zz 
{{{ 
double|| 
data|| 
;|| 
if}} 

(}} 
IO}} 
.}}  
STATIC_READONLY_FIVE}} #
!=}}$ &
$num}}' (
)}}( )
{~~ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
else
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
{
àà 	
IO
ää 
.
ää 
	WriteLine
ää 
(
ää 
(
ää 
short
ää 
)
ää  
data
ää  $
)
ää$ %
;
ää% &
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
double
ëë 
data
ëë 
;
ëë 
if
íí 

(
íí 
IO
íí 
.
íí "
STATIC_READONLY_FIVE
íí #
==
íí$ &
$num
íí' (
)
íí( )
{
ìì 	
data
ïï 
=
ïï 
$num
ïï 
;
ïï 
}
ññ 	
else
óó 
{
òò 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
{
ùù 	
IO
üü 
.
üü 
	WriteLine
üü 
(
üü 
(
üü 
short
üü 
)
üü  
data
üü  $
)
üü$ %
;
üü% &
}
†† 	
}
°° 
public
££ 

override
££ 
void
££ 
Good
££ 
(
££ 
)
££ 
{
§§ 
GoodG2B1
•• 
(
•• 
)
•• 
;
•• 
GoodG2B2
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
}
ßß 
}©© 
}™™ —;
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_14 D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
if!! 

(!! 
IO!! 
.!! 

staticFive!! 
==!! 
$num!! 
)!! 
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
shorttt 
)tt  
datatt  $
)tt$ %
;tt% &
}uu 	
}vv 
privatezz 
voidzz 
GoodG2B1zz 
(zz 
)zz 
{{{ 
double|| 
data|| 
;|| 
if}} 

(}} 
IO}} 
.}} 

staticFive}} 
!=}} 
$num}} 
)}} 
{~~ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
else
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
{
àà 	
IO
ää 
.
ää 
	WriteLine
ää 
(
ää 
(
ää 
short
ää 
)
ää  
data
ää  $
)
ää$ %
;
ää% &
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
double
ëë 
data
ëë 
;
ëë 
if
íí 

(
íí 
IO
íí 
.
íí 

staticFive
íí 
==
íí 
$num
íí 
)
íí 
{
ìì 	
data
ïï 
=
ïï 
$num
ïï 
;
ïï 
}
ññ 	
else
óó 
{
òò 	
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
}
úú 	
{
ùù 	
IO
üü 
.
üü 
	WriteLine
üü 
(
üü 
(
üü 
short
üü 
)
üü  
data
üü  $
)
üü$ %
;
üü% &
}
†† 	
}
°° 
public
££ 

override
££ 
void
££ 
Good
££ 
(
££ 
)
££ 
{
§§ 
GoodG2B1
•• 
(
•• 
)
•• 
;
•• 
GoodG2B2
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
}
ßß 
}©© 
}™™ ¿=
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_15 D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
=   
$num   
;   
switch!! 
(!! 
$num!! 
)!! 
{"" 	
case## 
$num## 
:## 
data$$ 
=$$ 
double$$ 
.$$ 
MinValue$$ "
;$$" #
{&& 
TcpListener'' 
listener'' $
=''% &
null''' +
;''+ ,
	TcpClient(( 
tcpConn(( !
=((" #
null(($ (
;((( )
StreamReader)) 
sr)) 
=))  !
null))" &
;))& '
try++ 
{,, 
listener-- 
=-- 
new-- "
TcpListener--# .
(--. /
	IPAddress--/ 8
.--8 9
Parse--9 >
(--> ?
$str--? K
)--K L
,--L M
$num--N S
)--S T
;--T U
tcpConn.. 
=.. 
listener.. &
...& '
AcceptTcpClient..' 6
(..6 7
)..7 8
;..8 9
sr00 
=00 
new00 
StreamReader00 )
(00) *
tcpConn00* 1
.001 2
	GetStream002 ;
(00; <
)00< =
)00= >
;00> ?
string22 
stringNumber22 '
=22( )
sr22* ,
.22, -
ReadLine22- 5
(225 6
)226 7
;227 8
if33 
(33 
stringNumber33 $
!=33% '
null33( ,
)33, -
{44 
try55 
{66 
data77  
=77! "
double77# )
.77) *
Parse77* /
(77/ 0
stringNumber770 <
.77< =
Trim77= A
(77A B
)77B C
)77C D
;77D E
}88 
catch99 
(99 
FormatException99 -
exceptNumberFormat99. @
)99@ A
{:: 
IO;; 
.;; 
Logger;; %
.;;% &
Log;;& )
(;;) *
NLog;;* .
.;;. /
LogLevel;;/ 7
.;;7 8
Warn;;8 <
,;;< =
exceptNumberFormat;;> P
,;;P Q
$str	;;R Ñ
)
;;Ñ Ö
;
;;Ö Ü
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? "
exceptIO??# +
)??+ ,
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA !
(AA! "
NLogAA" &
.AA& '
LogLevelAA' /
.AA/ 0
WarnAA0 4
,AA4 5
exceptIOAA6 >
,AA> ?
$strAA@ [
)AA[ \
;AA\ ]
}BB 
finallyCC 
{DD 
tryFF 
{GG 
ifHH 
(HH 
srHH 
!=HH !
nullHH" &
)HH& '
{II 
srJJ 
.JJ 
CloseJJ $
(JJ$ %
)JJ% &
;JJ& '
}KK 
}LL 
catchMM 
(MM 
IOExceptionMM &
exceptIOMM' /
)MM/ 0
{NN 
IOOO 
.OO 
LoggerOO !
.OO! "
LogOO" %
(OO% &
NLogOO& *
.OO* +
LogLevelOO+ 3
.OO3 4
WarnOO4 8
,OO8 9
exceptIOOO: B
,OOB C
$strOOD `
)OO` a
;OOa b
}PP 
trySS 
{TT 
ifUU 
(UU 
tcpConnUU #
!=UU$ &
nullUU' +
)UU+ ,
{VV 
tcpConnWW #
.WW# $
CloseWW$ )
(WW) *
)WW* +
;WW+ ,
}XX 
}YY 
catchZZ 
(ZZ 
IOExceptionZZ &
exceptIOZZ' /
)ZZ/ 0
{[[ 
IO\\ 
.\\ 
Logger\\ !
.\\! "
Log\\" %
(\\% &
NLog\\& *
.\\* +
LogLevel\\+ 3
.\\3 4
Warn\\4 8
,\\8 9
exceptIO\\: B
,\\B C
$str\\D ]
)\\] ^
;\\^ _
}]] 
try__ 
{`` 
ifaa 
(aa 
listeneraa $
!=aa% '
nullaa( ,
)aa, -
{bb 
listenercc $
.cc$ %
Stopcc% )
(cc) *
)cc* +
;cc+ ,
}dd 
}ee 
catchff 
(ff 
IOExceptionff &
exceptIOff' /
)ff/ 0
{gg 
IOhh 
.hh 
Loggerhh !
.hh! "
Loghh" %
(hh% &
NLoghh& *
.hh* +
LogLevelhh+ 3
.hh3 4
Warnhh4 8
,hh8 9
exceptIOhh: B
,hhB C
$strhhD _
)hh_ `
;hh` a
}ii 
}jj 
}kk 
breakll 
;ll 
defaultmm 
:mm 
datapp 
=pp 
$numpp 
;pp 
breakqq 
;qq 
}rr 	
{ss 	
IOuu 
.uu 
	WriteLineuu 
(uu 
(uu 
shortuu 
)uu  
datauu  $
)uu$ %
;uu% &
}vv 	
}ww 
private{{ 
void{{ 
GoodG2B1{{ 
({{ 
){{ 
{|| 
double}} 
data}} 
=}} 
$num}} 
;}} 
switch~~ 
(~~ 
$num~~ 
)~~ 
{ 	
case
ÄÄ 
$num
ÄÄ 
:
ÄÄ 
data
ÉÉ 
=
ÉÉ 
$num
ÉÉ 
;
ÉÉ 
break
ÑÑ 
;
ÑÑ 
default
ÖÖ 
:
ÖÖ 
data
áá 
=
áá 
$num
áá 
;
áá 
break
àà 
;
àà 
}
ââ 	
{
ää 	
IO
åå 
.
åå 
	WriteLine
åå 
(
åå 
(
åå 
short
åå 
)
åå  
data
åå  $
)
åå$ %
;
åå% &
}
çç 	
}
éé 
private
ëë 
void
ëë 
GoodG2B2
ëë 
(
ëë 
)
ëë 
{
íí 
double
ìì 
data
ìì 
=
ìì 
$num
ìì 
;
ìì 
switch
îî 
(
îî 
$num
îî 
)
îî 
{
ïï 	
case
ññ 
$num
ññ 
:
ññ 
data
òò 
=
òò 
$num
òò 
;
òò 
break
ôô 
;
ôô 
default
öö 
:
öö 
data
ùù 
=
ùù 
$num
ùù 
;
ùù 
break
ûû 
;
ûû 
}
üü 	
{
†† 	
IO
¢¢ 
.
¢¢ 
	WriteLine
¢¢ 
(
¢¢ 
(
¢¢ 
short
¢¢ 
)
¢¢  
data
¢¢  $
)
¢¢$ %
;
¢¢% &
}
££ 	
}
§§ 
public
¶¶ 

override
¶¶ 
void
¶¶ 
Good
¶¶ 
(
¶¶ 
)
¶¶ 
{
ßß 
GoodG2B1
®® 
(
®® 
)
®® 
;
®® 
GoodG2B2
©© 
(
©© 
)
©© 
;
©© 
}
™™ 
}¨¨ 
}≠≠ °2
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_16 D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
while!! 
(!! 
true!! 
)!! 
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
breakkk 
;kk 
}ll 	
{mm 	
IOoo 
.oo 
	WriteLineoo 
(oo 
(oo 
shortoo 
)oo  
dataoo  $
)oo$ %
;oo% &
}pp 	
}qq 
privateuu 
voiduu 
GoodG2Buu 
(uu 
)uu 
{vv 
doubleww 
dataww 
;ww 
whilexx 
(xx 
truexx 
)xx 
{yy 	
data{{ 
={{ 
$num{{ 
;{{ 
break|| 
;|| 
}}} 	
{~~ 	
IO
ÄÄ 
.
ÄÄ 
	WriteLine
ÄÄ 
(
ÄÄ 
(
ÄÄ 
short
ÄÄ 
)
ÄÄ  
data
ÄÄ  $
)
ÄÄ$ %
;
ÄÄ% &
}
ÅÅ 	
}
ÇÇ 
public
ÑÑ 

override
ÑÑ 
void
ÑÑ 
Good
ÑÑ 
(
ÑÑ 
)
ÑÑ 
{
ÖÖ 
GoodG2B
ÜÜ 
(
ÜÜ 
)
ÜÜ 
;
ÜÜ 
}
áá 
}ââ 
}ää ˝3
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_17 D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	
forii 
(ii 
intii 
iii 
=ii 
$numii 
;ii 
iii 
<ii 
$numii 
;ii 
iii  
++ii  "
)ii" #
{jj 	
{kk 
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
shortmm #
)mm# $
datamm$ (
)mm( )
;mm) *
}nn 
}oo 	
}pp 
privateuu 
voiduu 
GoodG2Buu 
(uu 
)uu 
{vv 
doubleww 
dataww 
;ww 
datayy 
=yy 
$numyy 
;yy 
forzz 
(zz 
intzz 
izz 
=zz 
$numzz 
;zz 
izz 
<zz 
$numzz 
;zz 
izz  
++zz  "
)zz" #
{{{ 	
{|| 
IO~~ 
.~~ 
	WriteLine~~ 
(~~ 
(~~ 
short~~ #
)~~# $
data~~$ (
)~~( )
;~~) *
} 
}
ÄÄ 	
}
ÅÅ 
public
ÉÉ 

override
ÉÉ 
void
ÉÉ 
Good
ÉÉ 
(
ÉÉ 
)
ÉÉ 
{
ÑÑ 
GoodG2B
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
}
ÜÜ 
}àà 
}ââ ∞H
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_21 D
:E F
AbstractTestCaseG W
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
double## 
data## 
;## 

badPrivate$$ 
=$$ 
true$$ 
;$$ 
data%% 
=%% 

Bad_source%% 
(%% 
)%% 
;%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
private,, 
double,, 

Bad_source,, 
(,, 
),, 
{-- 
double.. 
data.. 
;.. 
if// 

(// 

badPrivate// 
)// 
{00 	
data11 
=11 
double11 
.11 
MinValue11 "
;11" #
{33 
TcpListener44 
listener44 $
=44% &
null44' +
;44+ ,
	TcpClient55 
tcpConn55 !
=55" #
null55$ (
;55( )
StreamReader66 
sr66 
=66  !
null66" &
;66& '
try88 
{99 
listener:: 
=:: 
new:: "
TcpListener::# .
(::. /
	IPAddress::/ 8
.::8 9
Parse::9 >
(::> ?
$str::? K
)::K L
,::L M
$num::N S
)::S T
;::T U
tcpConn;; 
=;; 
listener;; &
.;;& '
AcceptTcpClient;;' 6
(;;6 7
);;7 8
;;;8 9
sr== 
=== 
new== 
StreamReader== )
(==) *
tcpConn==* 1
.==1 2
	GetStream==2 ;
(==; <
)==< =
)=== >
;==> ?
string?? 
stringNumber?? '
=??( )
sr??* ,
.??, -
ReadLine??- 5
(??5 6
)??6 7
;??7 8
if@@ 
(@@ 
stringNumber@@ $
!=@@% '
null@@( ,
)@@, -
{AA 
tryBB 
{CC 
dataDD  
=DD! "
doubleDD# )
.DD) *
ParseDD* /
(DD/ 0
stringNumberDD0 <
.DD< =
TrimDD= A
(DDA B
)DDB C
)DDC D
;DDD E
}EE 
catchFF 
(FF 
FormatExceptionFF -
exceptNumberFormatFF. @
)FF@ A
{GG 
IOHH 
.HH 
LoggerHH %
.HH% &
LogHH& )
(HH) *
NLogHH* .
.HH. /
LogLevelHH/ 7
.HH7 8
WarnHH8 <
,HH< =
exceptNumberFormatHH> P
,HHP Q
$str	HHR Ñ
)
HHÑ Ö
;
HHÖ Ü
}II 
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL "
exceptIOLL# +
)LL+ ,
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
exceptIONN6 >
,NN> ?
$strNN@ [
)NN[ \
;NN\ ]
}OO 
finallyPP 
{QQ 
trySS 
{TT 
ifUU 
(UU 
srUU 
!=UU !
nullUU" &
)UU& '
{VV 
srWW 
.WW 
CloseWW $
(WW$ %
)WW% &
;WW& '
}XX 
}YY 
catchZZ 
(ZZ 
IOExceptionZZ &
exceptIOZZ' /
)ZZ/ 0
{[[ 
IO\\ 
.\\ 
Logger\\ !
.\\! "
Log\\" %
(\\% &
NLog\\& *
.\\* +
LogLevel\\+ 3
.\\3 4
Warn\\4 8
,\\8 9
exceptIO\\: B
,\\B C
$str\\D `
)\\` a
;\\a b
}]] 
try`` 
{aa 
ifbb 
(bb 
tcpConnbb #
!=bb$ &
nullbb' +
)bb+ ,
{cc 
tcpConndd #
.dd# $
Closedd$ )
(dd) *
)dd* +
;dd+ ,
}ee 
}ff 
catchgg 
(gg 
IOExceptiongg &
exceptIOgg' /
)gg/ 0
{hh 
IOii 
.ii 
Loggerii !
.ii! "
Logii" %
(ii% &
NLogii& *
.ii* +
LogLevelii+ 3
.ii3 4
Warnii4 8
,ii8 9
exceptIOii: B
,iiB C
$striiD ]
)ii] ^
;ii^ _
}jj 
tryll 
{mm 
ifnn 
(nn 
listenernn $
!=nn% '
nullnn( ,
)nn, -
{oo 
listenerpp $
.pp$ %
Stoppp% )
(pp) *
)pp* +
;pp+ ,
}qq 
}rr 
catchss 
(ss 
IOExceptionss &
exceptIOss' /
)ss/ 0
{tt 
IOuu 
.uu 
Loggeruu !
.uu! "
Loguu" %
(uu% &
NLoguu& *
.uu* +
LogLeveluu+ 3
.uu3 4
Warnuu4 8
,uu8 9
exceptIOuu: B
,uuB C
$struuD _
)uu_ `
;uu` a
}vv 
}ww 
}xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
return
ÄÄ 
data
ÄÄ 
;
ÄÄ 
}
ÅÅ 
private
ÑÑ 
bool
ÑÑ 
goodG2B1_private
ÑÑ !
=
ÑÑ" #
false
ÑÑ$ )
;
ÑÑ) *
private
ÖÖ 
bool
ÖÖ 
GoodG2B2_private
ÖÖ !
=
ÖÖ" #
false
ÖÖ$ )
;
ÖÖ) *
public
áá 

override
áá 
void
áá 
Good
áá 
(
áá 
)
áá 
{
àà 
GoodG2B1
ââ 
(
ââ 
)
ââ 
;
ââ 
GoodG2B2
ää 
(
ää 
)
ää 
;
ää 
}
ãã 
private
éé 
void
éé 
GoodG2B1
éé 
(
éé 
)
éé 
{
èè 
double
êê 
data
êê 
;
êê 
goodG2B1_private
ëë 
=
ëë 
false
ëë  
;
ëë  !
data
íí 
=
íí 
GoodG2B1_source
íí 
(
íí 
)
íí  
;
íí  !
{
ìì 	
IO
ïï 
.
ïï 
	WriteLine
ïï 
(
ïï 
(
ïï 
short
ïï 
)
ïï  
data
ïï  $
)
ïï$ %
;
ïï% &
}
ññ 	
}
óó 
private
ôô 
double
ôô 
GoodG2B1_source
ôô "
(
ôô" #
)
ôô# $
{
öö 
double
õõ 
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
if
úú 

(
úú 
goodG2B1_private
úú 
)
úú 
{
ùù 	
data
†† 
=
†† 
$num
†† 
;
†† 
}
°° 	
else
¢¢ 
{
££ 	
data
•• 
=
•• 
$num
•• 
;
•• 
}
¶¶ 	
return
ßß 
data
ßß 
;
ßß 
}
®® 
private
´´ 
void
´´ 
GoodG2B2
´´ 
(
´´ 
)
´´ 
{
¨¨ 
double
≠≠ 
data
≠≠ 
;
≠≠ 
GoodG2B2_private
ÆÆ 
=
ÆÆ 
true
ÆÆ 
;
ÆÆ  
data
ØØ 
=
ØØ 
GoodG2B2_source
ØØ 
(
ØØ 
)
ØØ  
;
ØØ  !
{
∞∞ 	
IO
≤≤ 
.
≤≤ 
	WriteLine
≤≤ 
(
≤≤ 
(
≤≤ 
short
≤≤ 
)
≤≤  
data
≤≤  $
)
≤≤$ %
;
≤≤% &
}
≥≥ 	
}
¥¥ 
private
∂∂ 
double
∂∂ 
GoodG2B2_source
∂∂ "
(
∂∂" #
)
∂∂# $
{
∑∑ 
double
∏∏ 
data
∏∏ 
=
∏∏ 
$num
∏∏ 
;
∏∏ 
if
ππ 

(
ππ 
GoodG2B2_private
ππ 
)
ππ 
{
∫∫ 	
data
ºº 
=
ºº 
$num
ºº 
;
ºº 
}
ΩΩ 	
else
ææ 
{
øø 	
data
¬¬ 
=
¬¬ 
$num
¬¬ 
;
¬¬ 
}
√√ 	
return
ƒƒ 
data
ƒƒ 
;
ƒƒ 
}
≈≈ 
}«« 
}»» √
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_22a E
:F G
AbstractTestCaseH X
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_22b!! N
.!!N O
	BadSource!!O X
(!!X Y
)!!Y Z
;!!Z [
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
short$$ 
)$$  
data$$  $
)$$$ %
;$$% &
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
double66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_22b88 N
.88N O
GoodG2B1Source88O ]
(88] ^
)88^ _
;88_ `
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
short;; 
);;  
data;;  $
);;$ %
;;;% &
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
doubleBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_22bDD N
.DDN O
GoodG2B2SourceDDO ]
(DD] ^
)DD^ _
;DD_ `
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
}KK 
}LL ¡6
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_22b E
{ 
public 

static 
double 
	BadSource "
(" #
)# $
{ 
double   
data   
;   
if!! 

(!! K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_22a!! K
.!!K L
badPublicStatic!!L [
)!![ \
{"" 	
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
	TcpClient'' 
tcpConn'' !
=''" #
null''$ (
;''( )
StreamReader(( 
sr(( 
=((  !
null((" &
;((& '
try** 
{++ 
listener,, 
=,, 
new,, "
TcpListener,,# .
(,,. /
	IPAddress,,/ 8
.,,8 9
Parse,,9 >
(,,> ?
$str,,? K
),,K L
,,,L M
$num,,N S
),,S T
;,,T U
tcpConn-- 
=-- 
listener-- &
.--& '
AcceptTcpClient--' 6
(--6 7
)--7 8
;--8 9
sr// 
=// 
new// 
StreamReader// )
(//) *
tcpConn//* 1
.//1 2
	GetStream//2 ;
(//; <
)//< =
)//= >
;//> ?
string11 
stringNumber11 '
=11( )
sr11* ,
.11, -
ReadLine11- 5
(115 6
)116 7
;117 8
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
double66# )
.66) *
Parse66* /
(66/ 0
stringNumber660 <
.66< =
Trim66= A
(66A B
)66B C
)66C D
;66D E
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG !
nullGG" &
)GG& '
{HH 
srII 
.II 
CloseII $
(II$ %
)II% &
;II& '
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
exceptIONN: B
,NNB C
$strNND `
)NN` a
;NNa b
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT #
!=TT$ &
nullTT' +
)TT+ ,
{UU 
tcpConnVV #
.VV# $
CloseVV$ )
(VV) *
)VV* +
;VV+ ,
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY &
exceptIOYY' /
)YY/ 0
{ZZ 
IO[[ 
.[[ 
Logger[[ !
.[[! "
Log[[" %
([[% &
NLog[[& *
.[[* +
LogLevel[[+ 3
.[[3 4
Warn[[4 8
,[[8 9
exceptIO[[: B
,[[B C
$str[[D ]
)[[] ^
;[[^ _
}\\ 
try^^ 
{__ 
if`` 
(`` 
listener`` $
!=``% '
null``( ,
)``, -
{aa 
listenerbb $
.bb$ %
Stopbb% )
(bb) *
)bb* +
;bb+ ,
}cc 
}dd 
catchee 
(ee 
IOExceptionee &
exceptIOee' /
)ee/ 0
{ff 
IOgg 
.gg 
Loggergg !
.gg! "
Loggg" %
(gg% &
NLoggg& *
.gg* +
LogLevelgg+ 3
.gg3 4
Warngg4 8
,gg8 9
exceptIOgg: B
,ggB C
$strggD _
)gg_ `
;gg` a
}hh 
}ii 
}jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
returnrr 
datarr 
;rr 
}ss 
publicxx 

staticxx 
doublexx 
GoodG2B1Sourcexx '
(xx' (
)xx( )
{yy 
doublezz 
datazz 
;zz 
if{{ 

({{ K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_22a{{ K
.{{K L 
goodG2B1PublicStatic{{L `
){{` a
{|| 	
data 
= 
$num 
; 
}
ÄÄ 	
else
ÅÅ 
{
ÇÇ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
return
ÜÜ 
data
ÜÜ 
;
ÜÜ 
}
áá 
public
ää 

static
ää 
double
ää 
GoodG2B2Source
ää '
(
ää' (
)
ää( )
{
ãã 
double
åå 
data
åå 
;
åå 
if
çç 

(
çç M
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_22a
çç K
.
ççK L"
GoodG2B2PublicStatic
ççL `
)
çç` a
{
éé 	
data
êê 
=
êê 
$num
êê 
;
êê 
}
ëë 	
else
íí 
{
ìì 	
data
ññ 
=
ññ 
$num
ññ 
;
ññ 
}
óó 	
return
òò 
data
òò 
;
òò 
}
ôô 
}õõ 
}úú ›4
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_31 D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{   
double!! 
dataCopy!! 
;!! 
{"" 	
double## 
data## 
;## 
data$$ 
=$$ 
double$$ 
.$$ 
MinValue$$ "
;$$" #
{&& 
TcpListener'' 
listener'' $
=''% &
null''' +
;''+ ,
	TcpClient(( 
tcpConn(( !
=((" #
null(($ (
;((( )
StreamReader)) 
sr)) 
=))  !
null))" &
;))& '
try++ 
{,, 
listener-- 
=-- 
new-- "
TcpListener--# .
(--. /
	IPAddress--/ 8
.--8 9
Parse--9 >
(--> ?
$str--? K
)--K L
,--L M
$num--N S
)--S T
;--T U
tcpConn.. 
=.. 
listener.. &
...& '
AcceptTcpClient..' 6
(..6 7
)..7 8
;..8 9
sr00 
=00 
new00 
StreamReader00 )
(00) *
tcpConn00* 1
.001 2
	GetStream002 ;
(00; <
)00< =
)00= >
;00> ?
string22 
stringNumber22 '
=22( )
sr22* ,
.22, -
ReadLine22- 5
(225 6
)226 7
;227 8
if33 
(33 
stringNumber33 $
!=33% '
null33( ,
)33, -
{44 
try55 
{66 
data77  
=77! "
double77# )
.77) *
Parse77* /
(77/ 0
stringNumber770 <
.77< =
Trim77= A
(77A B
)77B C
)77C D
;77D E
}88 
catch99 
(99 
FormatException99 -
exceptNumberFormat99. @
)99@ A
{:: 
IO;; 
.;; 
Logger;; %
.;;% &
Log;;& )
(;;) *
NLog;;* .
.;;. /
LogLevel;;/ 7
.;;7 8
Warn;;8 <
,;;< =
exceptNumberFormat;;> P
,;;P Q
$str	;;R Ñ
)
;;Ñ Ö
;
;;Ö Ü
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? "
exceptIO??# +
)??+ ,
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA !
(AA! "
NLogAA" &
.AA& '
LogLevelAA' /
.AA/ 0
WarnAA0 4
,AA4 5
exceptIOAA6 >
,AA> ?
$strAA@ [
)AA[ \
;AA\ ]
}BB 
finallyCC 
{DD 
tryFF 
{GG 
ifHH 
(HH 
srHH 
!=HH !
nullHH" &
)HH& '
{II 
srJJ 
.JJ 
CloseJJ $
(JJ$ %
)JJ% &
;JJ& '
}KK 
}LL 
catchMM 
(MM 
IOExceptionMM &
exceptIOMM' /
)MM/ 0
{NN 
IOOO 
.OO 
LoggerOO !
.OO! "
LogOO" %
(OO% &
NLogOO& *
.OO* +
LogLevelOO+ 3
.OO3 4
WarnOO4 8
,OO8 9
exceptIOOO: B
,OOB C
$strOOD `
)OO` a
;OOa b
}PP 
trySS 
{TT 
ifUU 
(UU 
tcpConnUU #
!=UU$ &
nullUU' +
)UU+ ,
{VV 
tcpConnWW #
.WW# $
CloseWW$ )
(WW) *
)WW* +
;WW+ ,
}XX 
}YY 
catchZZ 
(ZZ 
IOExceptionZZ &
exceptIOZZ' /
)ZZ/ 0
{[[ 
IO\\ 
.\\ 
Logger\\ !
.\\! "
Log\\" %
(\\% &
NLog\\& *
.\\* +
LogLevel\\+ 3
.\\3 4
Warn\\4 8
,\\8 9
exceptIO\\: B
,\\B C
$str\\D ]
)\\] ^
;\\^ _
}]] 
try__ 
{`` 
ifaa 
(aa 
listeneraa $
!=aa% '
nullaa( ,
)aa, -
{bb 
listenercc $
.cc$ %
Stopcc% )
(cc) *
)cc* +
;cc+ ,
}dd 
}ee 
catchff 
(ff 
IOExceptionff &
exceptIOff' /
)ff/ 0
{gg 
IOhh 
.hh 
Loggerhh !
.hh! "
Loghh" %
(hh% &
NLoghh& *
.hh* +
LogLevelhh+ 3
.hh3 4
Warnhh4 8
,hh8 9
exceptIOhh: B
,hhB C
$strhhD _
)hh_ `
;hh` a
}ii 
}jj 
}kk 
dataCopyll 
=ll 
datall 
;ll 
}mm 	
{nn 	
doubleoo 
dataoo 
=oo 
dataCopyoo "
;oo" #
{pp 
IOrr 
.rr 
	WriteLinerr 
(rr 
(rr 
shortrr #
)rr# $
datarr$ (
)rr( )
;rr) *
}ss 
}tt 	
}uu 
publicxx 

overridexx 
voidxx 
Goodxx 
(xx 
)xx 
{yy 
GoodG2Bzz 
(zz 
)zz 
;zz 
}{{ 
private~~ 
void~~ 
GoodG2B~~ 
(~~ 
)~~ 
{ 
double
ÄÄ 
dataCopy
ÄÄ 
;
ÄÄ 
{
ÅÅ 	
double
ÇÇ 
data
ÇÇ 
;
ÇÇ 
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
dataCopy
ÖÖ 
=
ÖÖ 
data
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
{
áá 	
double
àà 
data
àà 
=
àà 
dataCopy
àà "
;
àà" #
{
ââ 
IO
ãã 
.
ãã 
	WriteLine
ãã 
(
ãã 
(
ãã 
short
ãã #
)
ãã# $
data
ãã$ (
)
ãã( )
;
ãã) *
}
åå 
}
çç 	
}
éé 
}êê 
}ëë ª4
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_41 D
:E F
AbstractTestCaseG W
{ 
private 
static 
void 
BadSink 
(  
double  &
data' +
), -
{ 
{ 	
IO!! 
.!! 
	WriteLine!! 
(!! 
(!! 
short!! 
)!!  
data!!  $
)!!$ %
;!!% &
}"" 	
}## 
public%% 

override%% 
void%% 
Bad%% 
(%% 
)%% 
{&& 
double'' 
data'' 
;'' 
data(( 
=(( 
double(( 
.(( 
MinValue(( 
;(( 
{** 	
TcpListener++ 
listener++  
=++! "
null++# '
;++' (
	TcpClient,, 
tcpConn,, 
=,, 
null,,  $
;,,$ %
StreamReader-- 
sr-- 
=-- 
null-- "
;--" #
try// 
{00 
listener11 
=11 
new11 
TcpListener11 *
(11* +
	IPAddress11+ 4
.114 5
Parse115 :
(11: ;
$str11; G
)11G H
,11H I
$num11J O
)11O P
;11P Q
tcpConn22 
=22 
listener22 "
.22" #
AcceptTcpClient22# 2
(222 3
)223 4
;224 5
sr44 
=44 
new44 
StreamReader44 %
(44% &
tcpConn44& -
.44- .
	GetStream44. 7
(447 8
)448 9
)449 :
;44: ;
string66 
stringNumber66 #
=66$ %
sr66& (
.66( )
ReadLine66) 1
(661 2
)662 3
;663 4
if77 
(77 
stringNumber77  
!=77! #
null77$ (
)77( )
{88 
try99 
{:: 
data;; 
=;; 
double;; %
.;;% &
Parse;;& +
(;;+ ,
stringNumber;;, 8
.;;8 9
Trim;;9 =
(;;= >
);;> ?
);;? @
;;;@ A
}<< 
catch== 
(== 
FormatException== )
exceptNumberFormat==* <
)==< =
{>> 
IO?? 
.?? 
Logger?? !
.??! "
Log??" %
(??% &
NLog??& *
.??* +
LogLevel??+ 3
.??3 4
Warn??4 8
,??8 9
exceptNumberFormat??: L
,??L M
$str	??N Ä
)
??Ä Å
;
??Å Ç
}@@ 
}AA 
}BB 
catchCC 
(CC 
IOExceptionCC 
exceptIOCC '
)CC' (
{DD 
IOEE 
.EE 
LoggerEE 
.EE 
LogEE 
(EE 
NLogEE "
.EE" #
LogLevelEE# +
.EE+ ,
WarnEE, 0
,EE0 1
exceptIOEE2 :
,EE: ;
$strEE< W
)EEW X
;EEX Y
}FF 
finallyGG 
{HH 
tryJJ 
{KK 
ifLL 
(LL 
srLL 
!=LL 
nullLL "
)LL" #
{MM 
srNN 
.NN 
CloseNN  
(NN  !
)NN! "
;NN" #
}OO 
}PP 
catchQQ 
(QQ 
IOExceptionQQ "
exceptIOQQ# +
)QQ+ ,
{RR 
IOSS 
.SS 
LoggerSS 
.SS 
LogSS !
(SS! "
NLogSS" &
.SS& '
LogLevelSS' /
.SS/ 0
WarnSS0 4
,SS4 5
exceptIOSS6 >
,SS> ?
$strSS@ \
)SS\ ]
;SS] ^
}TT 
tryWW 
{XX 
ifYY 
(YY 
tcpConnYY 
!=YY  "
nullYY# '
)YY' (
{ZZ 
tcpConn[[ 
.[[  
Close[[  %
([[% &
)[[& '
;[[' (
}\\ 
}]] 
catch^^ 
(^^ 
IOException^^ "
exceptIO^^# +
)^^+ ,
{__ 
IO`` 
.`` 
Logger`` 
.`` 
Log`` !
(``! "
NLog``" &
.``& '
LogLevel``' /
.``/ 0
Warn``0 4
,``4 5
exceptIO``6 >
,``> ?
$str``@ Y
)``Y Z
;``Z [
}aa 
trycc 
{dd 
ifee 
(ee 
listeneree  
!=ee! #
nullee$ (
)ee( )
{ff 
listenergg  
.gg  !
Stopgg! %
(gg% &
)gg& '
;gg' (
}hh 
}ii 
catchjj 
(jj 
IOExceptionjj "
exceptIOjj# +
)jj+ ,
{kk 
IOll 
.ll 
Loggerll 
.ll 
Logll !
(ll! "
NLogll" &
.ll& '
LogLevelll' /
.ll/ 0
Warnll0 4
,ll4 5
exceptIOll6 >
,ll> ?
$strll@ [
)ll[ \
;ll\ ]
}mm 
}nn 
}oo 	
BadSinkpp 
(pp 
datapp 
)pp 
;pp 
}qq 
publictt 

overridett 
voidtt 
Goodtt 
(tt 
)tt 
{uu 
GoodG2Bvv 
(vv 
)vv 
;vv 
}ww 
privateyy 
staticyy 
voidyy 
GoodG2BSinkyy #
(yy# $
doubleyy$ *
datayy+ /
)yy0 1
{zz 
{{{ 	
IO}} 
.}} 
	WriteLine}} 
(}} 
(}} 
short}} 
)}}  
data}}  $
)}}$ %
;}}% &
}~~ 	
} 
private
ÇÇ 
static
ÇÇ 
void
ÇÇ 
GoodG2B
ÇÇ 
(
ÇÇ  
)
ÇÇ  !
{
ÉÉ 
double
ÑÑ 
data
ÑÑ 
;
ÑÑ 
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
GoodG2BSink
áá 
(
áá 
data
áá 
)
áá 
;
áá 
}
àà 
}ää 
}ãã ≈5
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_42 D
:E F
AbstractTestCaseG W
{ 
private 
static 
double 
	BadSource #
(# $
)$ %
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
TcpListener## 
listener##  
=##! "
null### '
;##' (
	TcpClient$$ 
tcpConn$$ 
=$$ 
null$$  $
;$$$ %
StreamReader%% 
sr%% 
=%% 
null%% "
;%%" #
try'' 
{(( 
listener)) 
=)) 
new)) 
TcpListener)) *
())* +
	IPAddress))+ 4
.))4 5
Parse))5 :
()): ;
$str)); G
)))G H
,))H I
$num))J O
)))O P
;))P Q
tcpConn** 
=** 
listener** "
.**" #
AcceptTcpClient**# 2
(**2 3
)**3 4
;**4 5
sr,, 
=,, 
new,, 
StreamReader,, %
(,,% &
tcpConn,,& -
.,,- .
	GetStream,,. 7
(,,7 8
),,8 9
),,9 :
;,,: ;
string.. 
stringNumber.. #
=..$ %
sr..& (
...( )
ReadLine..) 1
(..1 2
)..2 3
;..3 4
if// 
(// 
stringNumber//  
!=//! #
null//$ (
)//( )
{00 
try11 
{22 
data33 
=33 
double33 %
.33% &
Parse33& +
(33+ ,
stringNumber33, 8
.338 9
Trim339 =
(33= >
)33> ?
)33? @
;33@ A
}44 
catch55 
(55 
FormatException55 )
exceptNumberFormat55* <
)55< =
{66 
IO77 
.77 
Logger77 !
.77! "
Log77" %
(77% &
NLog77& *
.77* +
LogLevel77+ 3
.773 4
Warn774 8
,778 9
exceptNumberFormat77: L
,77L M
$str	77N Ä
)
77Ä Å
;
77Å Ç
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; 
exceptIO;; '
);;' (
{<< 
IO== 
.== 
Logger== 
.== 
Log== 
(== 
NLog== "
.==" #
LogLevel==# +
.==+ ,
Warn==, 0
,==0 1
exceptIO==2 :
,==: ;
$str==< W
)==W X
;==X Y
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD 
nullDD "
)DD" #
{EE 
srFF 
.FF 
CloseFF  
(FF  !
)FF! "
;FF" #
}GG 
}HH 
catchII 
(II 
IOExceptionII "
exceptIOII# +
)II+ ,
{JJ 
IOKK 
.KK 
LoggerKK 
.KK 
LogKK !
(KK! "
NLogKK" &
.KK& '
LogLevelKK' /
.KK/ 0
WarnKK0 4
,KK4 5
exceptIOKK6 >
,KK> ?
$strKK@ \
)KK\ ]
;KK] ^
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ 
!=QQ  "
nullQQ# '
)QQ' (
{RR 
tcpConnSS 
.SS  
CloseSS  %
(SS% &
)SS& '
;SS' (
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV "
exceptIOVV# +
)VV+ ,
{WW 
IOXX 
.XX 
LoggerXX 
.XX 
LogXX !
(XX! "
NLogXX" &
.XX& '
LogLevelXX' /
.XX/ 0
WarnXX0 4
,XX4 5
exceptIOXX6 >
,XX> ?
$strXX@ Y
)XXY Z
;XXZ [
}YY 
try[[ 
{\\ 
if]] 
(]] 
listener]]  
!=]]! #
null]]$ (
)]]( )
{^^ 
listener__  
.__  !
Stop__! %
(__% &
)__& '
;__' (
}`` 
}aa 
catchbb 
(bb 
IOExceptionbb "
exceptIObb# +
)bb+ ,
{cc 
IOdd 
.dd 
Loggerdd 
.dd 
Logdd !
(dd! "
NLogdd" &
.dd& '
LogLeveldd' /
.dd/ 0
Warndd0 4
,dd4 5
exceptIOdd6 >
,dd> ?
$strdd@ [
)dd[ \
;dd\ ]
}ee 
}ff 
}gg 	
returnhh 
datahh 
;hh 
}ii 
publicll 

overridell 
voidll 
Badll 
(ll 
)ll 
{mm 
doublenn 
datann 
=nn 
	BadSourcenn 
(nn  
)nn  !
;nn! "
{oo 	
IOqq 
.qq 
	WriteLineqq 
(qq 
(qq 
shortqq 
)qq  
dataqq  $
)qq$ %
;qq% &
}rr 	
}ss 
privatevv 
staticvv 
doublevv 
GoodG2BSourcevv '
(vv' (
)vv( )
{ww 
doublexx 
dataxx 
;xx 
datazz 
=zz 
$numzz 
;zz 
return{{ 
data{{ 
;{{ 
}|| 
private 
static 
void 
GoodG2B 
(  
)  !
{
ÄÄ 
double
ÅÅ 
data
ÅÅ 
=
ÅÅ 
GoodG2BSource
ÅÅ #
(
ÅÅ# $
)
ÅÅ$ %
;
ÅÅ% &
{
ÇÇ 	
IO
ÑÑ 
.
ÑÑ 
	WriteLine
ÑÑ 
(
ÑÑ 
(
ÑÑ 
short
ÑÑ 
)
ÑÑ  
data
ÑÑ  $
)
ÑÑ$ %
;
ÑÑ% &
}
ÖÖ 	
}
ÜÜ 
public
àà 

override
àà 
void
àà 
Good
àà 
(
àà 
)
àà 
{
ââ 
GoodG2B
ää 
(
ää 
)
ää 
;
ää 
}
ãã 
}çç 
}éé •7
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_45 D
:E F
AbstractTestCaseG W
{ 
private 
double 
dataBad 
; 
private 
double 
dataGoodG2B 
; 
private!! 
void!! 
BadSink!! 
(!! 
)!! 
{"" 
double## 
data## 
=## 
dataBad## 
;## 
{$$ 	
IO&& 
.&& 
	WriteLine&& 
(&& 
(&& 
short&& 
)&&  
data&&  $
)&&$ %
;&&% &
}'' 	
}(( 
public++ 

override++ 
void++ 
Bad++ 
(++ 
)++ 
{,, 
double-- 
data-- 
;-- 
data.. 
=.. 
double.. 
... 
MinValue.. 
;.. 
{00 	
TcpListener11 
listener11  
=11! "
null11# '
;11' (
	TcpClient22 
tcpConn22 
=22 
null22  $
;22$ %
StreamReader33 
sr33 
=33 
null33 "
;33" #
try55 
{66 
listener77 
=77 
new77 
TcpListener77 *
(77* +
	IPAddress77+ 4
.774 5
Parse775 :
(77: ;
$str77; G
)77G H
,77H I
$num77J O
)77O P
;77P Q
tcpConn88 
=88 
listener88 "
.88" #
AcceptTcpClient88# 2
(882 3
)883 4
;884 5
sr:: 
=:: 
new:: 
StreamReader:: %
(::% &
tcpConn::& -
.::- .
	GetStream::. 7
(::7 8
)::8 9
)::9 :
;::: ;
string<< 
stringNumber<< #
=<<$ %
sr<<& (
.<<( )
ReadLine<<) 1
(<<1 2
)<<2 3
;<<3 4
if== 
(== 
stringNumber==  
!===! #
null==$ (
)==( )
{>> 
try?? 
{@@ 
dataAA 
=AA 
doubleAA %
.AA% &
ParseAA& +
(AA+ ,
stringNumberAA, 8
.AA8 9
TrimAA9 =
(AA= >
)AA> ?
)AA? @
;AA@ A
}BB 
catchCC 
(CC 
FormatExceptionCC )
exceptNumberFormatCC* <
)CC< =
{DD 
IOEE 
.EE 
LoggerEE !
.EE! "
LogEE" %
(EE% &
NLogEE& *
.EE* +
LogLevelEE+ 3
.EE3 4
WarnEE4 8
,EE8 9
exceptNumberFormatEE: L
,EEL M
$str	EEN Ä
)
EEÄ Å
;
EEÅ Ç
}FF 
}GG 
}HH 
catchII 
(II 
IOExceptionII 
exceptIOII '
)II' (
{JJ 
IOKK 
.KK 
LoggerKK 
.KK 
LogKK 
(KK 
NLogKK "
.KK" #
LogLevelKK# +
.KK+ ,
WarnKK, 0
,KK0 1
exceptIOKK2 :
,KK: ;
$strKK< W
)KKW X
;KKX Y
}LL 
finallyMM 
{NN 
tryPP 
{QQ 
ifRR 
(RR 
srRR 
!=RR 
nullRR "
)RR" #
{SS 
srTT 
.TT 
CloseTT  
(TT  !
)TT! "
;TT" #
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ \
)YY\ ]
;YY] ^
}ZZ 
try]] 
{^^ 
if__ 
(__ 
tcpConn__ 
!=__  "
null__# '
)__' (
{`` 
tcpConnaa 
.aa  
Closeaa  %
(aa% &
)aa& '
;aa' (
}bb 
}cc 
catchdd 
(dd 
IOExceptiondd "
exceptIOdd# +
)dd+ ,
{ee 
IOff 
.ff 
Loggerff 
.ff 
Logff !
(ff! "
NLogff" &
.ff& '
LogLevelff' /
.ff/ 0
Warnff0 4
,ff4 5
exceptIOff6 >
,ff> ?
$strff@ Y
)ffY Z
;ffZ [
}gg 
tryii 
{jj 
ifkk 
(kk 
listenerkk  
!=kk! #
nullkk$ (
)kk( )
{ll 
listenermm  
.mm  !
Stopmm! %
(mm% &
)mm& '
;mm' (
}nn 
}oo 
catchpp 
(pp 
IOExceptionpp "
exceptIOpp# +
)pp+ ,
{qq 
IOrr 
.rr 
Loggerrr 
.rr 
Logrr !
(rr! "
NLogrr" &
.rr& '
LogLevelrr' /
.rr/ 0
Warnrr0 4
,rr4 5
exceptIOrr6 >
,rr> ?
$strrr@ [
)rr[ \
;rr\ ]
}ss 
}tt 
}uu 	
dataBadvv 
=vv 
datavv 
;vv 
BadSinkww 
(ww 
)ww 
;ww 
}xx 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B}} 
(}} 
)}} 
;}} 
}~~ 
private
ÄÄ 
void
ÄÄ 
GoodG2BSink
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
double
ÇÇ 
data
ÇÇ 
=
ÇÇ 
dataGoodG2B
ÇÇ !
;
ÇÇ! "
{
ÉÉ 	
IO
ÖÖ 
.
ÖÖ 
	WriteLine
ÖÖ 
(
ÖÖ 
(
ÖÖ 
short
ÖÖ 
)
ÖÖ  
data
ÖÖ  $
)
ÖÖ$ %
;
ÖÖ% &
}
ÜÜ 	
}
áá 
private
ää 
void
ää 
GoodG2B
ää 
(
ää 
)
ää 
{
ãã 
double
åå 
data
åå 
;
åå 
data
éé 
=
éé 
$num
éé 
;
éé 
dataGoodG2B
èè 
=
èè 
data
èè 
;
èè 
GoodG2BSink
êê 
(
êê 
)
êê 
;
êê 
}
ëë 
}ìì 
}îî ≈/
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_51a E
:F G
AbstractTestCaseH X
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
TcpListener## 
listener##  
=##! "
null### '
;##' (
	TcpClient$$ 
tcpConn$$ 
=$$ 
null$$  $
;$$$ %
StreamReader%% 
sr%% 
=%% 
null%% "
;%%" #
try'' 
{(( 
listener)) 
=)) 
new)) 
TcpListener)) *
())* +
	IPAddress))+ 4
.))4 5
Parse))5 :
()): ;
$str)); G
)))G H
,))H I
$num))J O
)))O P
;))P Q
tcpConn** 
=** 
listener** "
.**" #
AcceptTcpClient**# 2
(**2 3
)**3 4
;**4 5
sr,, 
=,, 
new,, 
StreamReader,, %
(,,% &
tcpConn,,& -
.,,- .
	GetStream,,. 7
(,,7 8
),,8 9
),,9 :
;,,: ;
string.. 
stringNumber.. #
=..$ %
sr..& (
...( )
ReadLine..) 1
(..1 2
)..2 3
;..3 4
if// 
(// 
stringNumber//  
!=//! #
null//$ (
)//( )
{00 
try11 
{22 
data33 
=33 
double33 %
.33% &
Parse33& +
(33+ ,
stringNumber33, 8
.338 9
Trim339 =
(33= >
)33> ?
)33? @
;33@ A
}44 
catch55 
(55 
FormatException55 )
exceptNumberFormat55* <
)55< =
{66 
IO77 
.77 
Logger77 !
.77! "
Log77" %
(77% &
NLog77& *
.77* +
LogLevel77+ 3
.773 4
Warn774 8
,778 9
exceptNumberFormat77: L
,77L M
$str	77N Ä
)
77Ä Å
;
77Å Ç
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; 
exceptIO;; '
);;' (
{<< 
IO== 
.== 
Logger== 
.== 
Log== 
(== 
NLog== "
.==" #
LogLevel==# +
.==+ ,
Warn==, 0
,==0 1
exceptIO==2 :
,==: ;
$str==< W
)==W X
;==X Y
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD 
nullDD "
)DD" #
{EE 
srFF 
.FF 
CloseFF  
(FF  !
)FF! "
;FF" #
}GG 
}HH 
catchII 
(II 
IOExceptionII "
exceptIOII# +
)II+ ,
{JJ 
IOKK 
.KK 
LoggerKK 
.KK 
LogKK !
(KK! "
NLogKK" &
.KK& '
LogLevelKK' /
.KK/ 0
WarnKK0 4
,KK4 5
exceptIOKK6 >
,KK> ?
$strKK@ \
)KK\ ]
;KK] ^
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ 
!=QQ  "
nullQQ# '
)QQ' (
{RR 
tcpConnSS 
.SS  
CloseSS  %
(SS% &
)SS& '
;SS' (
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV "
exceptIOVV# +
)VV+ ,
{WW 
IOXX 
.XX 
LoggerXX 
.XX 
LogXX !
(XX! "
NLogXX" &
.XX& '
LogLevelXX' /
.XX/ 0
WarnXX0 4
,XX4 5
exceptIOXX6 >
,XX> ?
$strXX@ Y
)XXY Z
;XXZ [
}YY 
try[[ 
{\\ 
if]] 
(]] 
listener]]  
!=]]! #
null]]$ (
)]]( )
{^^ 
listener__  
.__  !
Stop__! %
(__% &
)__& '
;__' (
}`` 
}aa 
catchbb 
(bb 
IOExceptionbb "
exceptIObb# +
)bb+ ,
{cc 
IOdd 
.dd 
Loggerdd 
.dd 
Logdd !
(dd! "
NLogdd" &
.dd& '
LogLeveldd' /
.dd/ 0
Warndd0 4
,dd4 5
exceptIOdd6 >
,dd> ?
$strdd@ [
)dd[ \
;dd\ ]
}ee 
}ff 
}gg 	K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_51bhh G
.hhG H
BadSinkhhH O
(hhO P
datahhP T
)hhV W
;hhW X
}ii 
publicll 

overridell 
voidll 
Goodll 
(ll 
)ll 
{mm 
GoodG2Bnn 
(nn 
)nn 
;nn 
}oo 
privaterr 
voidrr 
GoodG2Brr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
datavv 
=vv 
$numvv 
;vv K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_51bww G
.wwG H
GoodG2BSinkwwH S
(wwS T
datawwT X
)wwZ [
;ww[ \
}xx 
}zz 
}{{ ≠	
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_51b E
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
double### )
data##* .
)##/ 0
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
short'' 
)''  
data''  $
)''$ %
;''% &
}(( 	
})) 
}++ 
},, ≈/
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_52a E
:F G
AbstractTestCaseH X
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_52bii G
.iiG H
BadSinkiiH O
(iiO P
dataiiP T
)iiU V
;iiV W
}jj 
publicmm 

overridemm 
voidmm 
Goodmm 
(mm 
)mm 
{nn 
GoodG2Boo 
(oo 
)oo 
;oo 
}pp 
privatess 
voidss 
GoodG2Bss 
(ss 
)ss 
{tt 
doubleuu 
datauu 
;uu 
dataww 
=ww 
$numww 
;ww K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_52bxx G
.xxG H
GoodG2BSinkxxH S
(xxS T
dataxxT X
)xxY Z
;xxZ [
}yy 
}{{ 
}|| â	
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_52b E
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_52c G
.G H
BadSinkH O
(O P
dataP T
)U V
;V W
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_52c## G
.##G H
GoodG2BSink##H S
(##S T
data##T X
)##Y Z
;##Z [
}$$ 
}&& 
}'' ≠	
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_52c E
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- ≈/
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_53a E
:F G
AbstractTestCaseH X
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_53bii G
.iiG H
BadSinkiiH O
(iiO P
dataiiP T
)iiU V
;iiV W
}jj 
publicmm 

overridemm 
voidmm 
Goodmm 
(mm 
)mm 
{nn 
GoodG2Boo 
(oo 
)oo 
;oo 
}pp 
privatess 
voidss 
GoodG2Bss 
(ss 
)ss 
{tt 
doubleuu 
datauu 
;uu 
dataww 
=ww 
$numww 
;ww K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_53bxx G
.xxG H
GoodG2BSinkxxH S
(xxS T
dataxxT X
)xxY Z
;xxZ [
}yy 
}{{ 
}|| â	
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_53b E
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_53c G
.G H
BadSinkH O
(O P
dataP T
)U V
;V W
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_53c## G
.##G H
GoodG2BSink##H S
(##S T
data##T X
)##Y Z
;##Z [
}$$ 
}&& 
}'' â	
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_53c E
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_53d G
.G H
BadSinkH O
(O P
dataP T
)U V
;V W
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_53d## G
.##G H
GoodG2BSink##H S
(##S T
data##T X
)##Y Z
;##Z [
}$$ 
}&& 
}'' ≠	
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_53d E
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- ≈/
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_54a E
:F G
AbstractTestCaseH X
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_54bii G
.iiG H
BadSinkiiH O
(iiO P
dataiiP T
)iiU V
;iiV W
}jj 
publicmm 

overridemm 
voidmm 
Goodmm 
(mm 
)mm 
{nn 
GoodG2Boo 
(oo 
)oo 
;oo 
}pp 
privatess 
voidss 
GoodG2Bss 
(ss 
)ss 
{tt 
doubleuu 
datauu 
;uu 
dataww 
=ww 
$numww 
;ww K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_54bxx G
.xxG H
GoodG2BSinkxxH S
(xxS T
dataxxT X
)xxY Z
;xxZ [
}yy 
}{{ 
}|| â	
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_54b E
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_54c G
.G H
BadSinkH O
(O P
dataP T
)U V
;V W
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_54c## G
.##G H
GoodG2BSink##H S
(##S T
data##T X
)##Y Z
;##Z [
}$$ 
}&& 
}'' â	
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_54c E
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_54d G
.G H
BadSinkH O
(O P
dataP T
)U V
;V W
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_54d## G
.##G H
GoodG2BSink##H S
(##S T
data##T X
)##Y Z
;##Z [
}$$ 
}&& 
}'' â	
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_54d E
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_54e G
.G H
BadSinkH O
(O P
dataP T
)U V
;V W
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_54e## G
.##G H
GoodG2BSink##H S
(##S T
data##T X
)##Y Z
;##Z [
}$$ 
}&& 
}'' ≠	
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_54e E
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- É
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_61a E
:F G
AbstractTestCaseH X
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
= K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_61b U
.U V
	BadSourceV _
(_ `
)` a
;a b
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
double++ 
data++ 
=++ K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_61b++ U
.++U V
GoodG2BSource++V c
(++c d
)++d e
;++e f
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
short.. 
)..  
data..  $
)..$ %
;..% &
}// 	
}00 
}22 
}33 Û+
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_61b E
{ 
public 

static 
double 
	BadSource "
(" #
)# $
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	
returnii 
dataii 
;ii 
}jj 
publicoo 

staticoo 
doubleoo 
GoodG2BSourceoo &
(oo& '
)oo' (
{pp 
doubleqq 
dataqq 
;qq 
datass 
=ss 
$numss 
;ss 
returntt 
datatt 
;tt 
}uu 
}ww 
}xx À4
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_66a E
:F G
AbstractTestCaseH X
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	
doubleii 
[ii 
]ii 
	dataArrayii 
=ii 
newii  
doubleii! '
[ii' (
$numii( )
]ii) *
;ii* +
	dataArrayjj 
[jj 
$numjj 
]jj 
=jj 
datajj 
;jj K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_66bkk G
.kkG H
BadSinkkkH O
(kkO P
	dataArraykkP Y
)kk[ \
;kk\ ]
}ll 
publicoo 

overrideoo 
voidoo 
Goodoo 
(oo 
)oo 
{pp 
GoodG2Bqq 
(qq 
)qq 
;qq 
}rr 
privateuu 
staticuu 
voiduu 
GoodG2Buu 
(uu  
)uu  !
{vv 
doubleww 
dataww 
;ww 
datayy 
=yy 
$numyy 
;yy 
doublezz 
[zz 
]zz 
	dataArrayzz 
=zz 
newzz  
doublezz! '
[zz' (
$numzz( )
]zz) *
;zz* +
	dataArray{{ 
[{{ 
$num{{ 
]{{ 
={{ 
data{{ 
;{{ K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_66b|| G
.||G H
GoodG2BSink||H S
(||S T
	dataArray||T ]
)||_ `
;||` a
}}} 
} 
}ÄÄ â
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_66b E
{ 
public 

static 
void 
BadSink 
( 
double %
[% &
]& '
	dataArray( 1
)2 3
{ 
double 
data 
= 
	dataArray 
[  
$num  !
]! "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
double%%# )
[%%) *
]%%* +
	dataArray%%, 5
)%%6 7
{&& 
double'' 
data'' 
='' 
	dataArray'' 
[''  
$num''  !
]''! "
;''" #
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
}.. 
}// Ã5
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_67a E
:F G
AbstractTestCaseH X
{ 
public 

class 
	Container 
{ 
public   
double   
containerOne   "
;  " #
}!! 
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
double%% 
data%% 
;%% 
data&& 
=&& 
double&& 
.&& 
MinValue&& 
;&& 
{(( 	
TcpListener)) 
listener))  
=))! "
null))# '
;))' (
	TcpClient** 
tcpConn** 
=** 
null**  $
;**$ %
StreamReader++ 
sr++ 
=++ 
null++ "
;++" #
try-- 
{.. 
listener// 
=// 
new// 
TcpListener// *
(//* +
	IPAddress//+ 4
.//4 5
Parse//5 :
(//: ;
$str//; G
)//G H
,//H I
$num//J O
)//O P
;//P Q
tcpConn00 
=00 
listener00 "
.00" #
AcceptTcpClient00# 2
(002 3
)003 4
;004 5
sr22 
=22 
new22 
StreamReader22 %
(22% &
tcpConn22& -
.22- .
	GetStream22. 7
(227 8
)228 9
)229 :
;22: ;
string44 
stringNumber44 #
=44$ %
sr44& (
.44( )
ReadLine44) 1
(441 2
)442 3
;443 4
if55 
(55 
stringNumber55  
!=55! #
null55$ (
)55( )
{66 
try77 
{88 
data99 
=99 
double99 %
.99% &
Parse99& +
(99+ ,
stringNumber99, 8
.998 9
Trim999 =
(99= >
)99> ?
)99? @
;99@ A
}:: 
catch;; 
(;; 
FormatException;; )
exceptNumberFormat;;* <
);;< =
{<< 
IO== 
.== 
Logger== !
.==! "
Log==" %
(==% &
NLog==& *
.==* +
LogLevel==+ 3
.==3 4
Warn==4 8
,==8 9
exceptNumberFormat==: L
,==L M
$str	==N Ä
)
==Ä Å
;
==Å Ç
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA 
exceptIOAA '
)AA' (
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC 
(CC 
NLogCC "
.CC" #
LogLevelCC# +
.CC+ ,
WarnCC, 0
,CC0 1
exceptIOCC2 :
,CC: ;
$strCC< W
)CCW X
;CCX Y
}DD 
finallyEE 
{FF 
tryHH 
{II 
ifJJ 
(JJ 
srJJ 
!=JJ 
nullJJ "
)JJ" #
{KK 
srLL 
.LL 
CloseLL  
(LL  !
)LL! "
;LL" #
}MM 
}NN 
catchOO 
(OO 
IOExceptionOO "
exceptIOOO# +
)OO+ ,
{PP 
IOQQ 
.QQ 
LoggerQQ 
.QQ 
LogQQ !
(QQ! "
NLogQQ" &
.QQ& '
LogLevelQQ' /
.QQ/ 0
WarnQQ0 4
,QQ4 5
exceptIOQQ6 >
,QQ> ?
$strQQ@ \
)QQ\ ]
;QQ] ^
}RR 
tryUU 
{VV 
ifWW 
(WW 
tcpConnWW 
!=WW  "
nullWW# '
)WW' (
{XX 
tcpConnYY 
.YY  
CloseYY  %
(YY% &
)YY& '
;YY' (
}ZZ 
}[[ 
catch\\ 
(\\ 
IOException\\ "
exceptIO\\# +
)\\+ ,
{]] 
IO^^ 
.^^ 
Logger^^ 
.^^ 
Log^^ !
(^^! "
NLog^^" &
.^^& '
LogLevel^^' /
.^^/ 0
Warn^^0 4
,^^4 5
exceptIO^^6 >
,^^> ?
$str^^@ Y
)^^Y Z
;^^Z [
}__ 
tryaa 
{bb 
ifcc 
(cc 
listenercc  
!=cc! #
nullcc$ (
)cc( )
{dd 
listeneree  
.ee  !
Stopee! %
(ee% &
)ee& '
;ee' (
}ff 
}gg 
catchhh 
(hh 
IOExceptionhh "
exceptIOhh# +
)hh+ ,
{ii 
IOjj 
.jj 
Loggerjj 
.jj 
Logjj !
(jj! "
NLogjj" &
.jj& '
LogLeveljj' /
.jj/ 0
Warnjj0 4
,jj4 5
exceptIOjj6 >
,jj> ?
$strjj@ [
)jj[ \
;jj\ ]
}kk 
}ll 
}mm 	
	Containernn 
dataContainernn 
=nn  !
newnn" %
	Containernn& /
(nn/ 0
)nn0 1
;nn1 2
dataContaineroo 
.oo 
containerOneoo "
=oo# $
dataoo% )
;oo) *K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_67bpp G
.ppG H
BadSinkppH O
(ppO P
dataContainerppP ]
)pp_ `
;pp` a
}qq 
publictt 

overridett 
voidtt 
Goodtt 
(tt 
)tt 
{uu 
GoodG2Bvv 
(vv 
)vv 
;vv 
}ww 
privatezz 
staticzz 
voidzz 
GoodG2Bzz 
(zz  
)zz  !
{{{ 
double|| 
data|| 
;|| 
data~~ 
=~~ 
$num~~ 
;~~ 
	Container 
dataContainer 
=  !
new" %
	Container& /
(/ 0
)0 1
;1 2
dataContainer
ÄÄ 
.
ÄÄ 
containerOne
ÄÄ "
=
ÄÄ# $
data
ÄÄ% )
;
ÄÄ) *M
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_67b
ÅÅ G
.
ÅÅG H
GoodG2BSink
ÅÅH S
(
ÅÅS T
dataContainer
ÅÅT a
)
ÅÅc d
;
ÅÅd e
}
ÇÇ 
}ÑÑ 
}ÖÖ ç
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_67b E
{ 
public 

static 
void 
BadSink 
( K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_67a ^
.^ _
	Container_ h
dataContaineri v
)w x
{ 
double 
data 
= 
dataContainer #
.# $
containerOne$ 0
;0 1
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_67a%%# b
.%%b c
	Container%%c l
dataContainer%%m z
)%%{ |
{&& 
double'' 
data'' 
='' 
dataContainer'' #
.''# $
containerOne''$ 0
;''0 1
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
}.. 
}// ®/
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_68a E
:F G
AbstractTestCaseH X
{ 
public 

static 
double 
data 
; 
public 

override 
void 
Bad 
( 
) 
{   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_68bii G
.iiG H
BadSinkiiH O
(iiO P
)iiP Q
;iiQ R
}jj 
publicmm 

overridemm 
voidmm 
Goodmm 
(mm 
)mm 
{nn 
GoodG2Boo 
(oo 
)oo 
;oo 
}pp 
privatess 
staticss 
voidss 
GoodG2Bss 
(ss  
)ss  !
{tt 
datavv 
=vv 
$numvv 
;vv K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_68bww G
.wwG H
GoodG2BSinkwwH S
(wwS T
)wwT U
;wwU V
}xx 
}zz 
}{{ ≈
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_68b E
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
double 
data 
= K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_68a U
.U V
dataV Z
;Z [
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
double&& 
data&& 
=&& K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_68a&& U
.&&U V
data&&V Z
;&&Z [
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
short)) 
)))  
data))  $
)))$ %
;))% &
}** 	
}++ 
}-- 
}.. Ω0
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_71a E
:F G
AbstractTestCaseH X
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_71bii G
.iiG H
BadSinkiiH O
(iiO P
(iiP Q
ObjectiiQ W
)iiW X
dataiiX \
)ii^ _
;ii_ `
}jj 
publicmm 

overridemm 
voidmm 
Goodmm 
(mm 
)mm 
{nn 
GoodG2Boo 
(oo 
)oo 
;oo 
}pp 
privatess 
staticss 
voidss 
GoodG2Bss 
(ss  
)ss  !
{tt 
doubleuu 
datauu 
;uu 
dataww 
=ww 
$numww 
;ww K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_71bxx G
.xxG H
GoodG2BSinkxxH S
(xxS T
(xxT U
ObjectxxU [
)xx[ \
dataxx\ `
)xxb c
;xxc d
}yy 
}{{ 
}|| ’
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_71b E
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
double 
data 
= 
( 
double 
) 

dataObject (
;( )
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
double(( 
data(( 
=(( 
((( 
double(( 
)(( 

dataObject(( (
;((( )
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 Ò9
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_72a E
:F G
AbstractTestCaseH X
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	
	Hashtableii 
dataHashtableii 
=ii  !
newii" %
	Hashtableii& /
(ii/ 0
$numii0 1
)ii1 2
;ii2 3
dataHashtablejj 
.jj 
Addjj 
(jj 
$numjj 
,jj 
datajj !
)jj! "
;jj" #
dataHashtablekk 
.kk 
Addkk 
(kk 
$numkk 
,kk 
datakk !
)kk! "
;kk" #
dataHashtablell 
.ll 
Addll 
(ll 
$numll 
,ll 
datall !
)ll! "
;ll" #K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_72bmm G
.mmG H
BadSinkmmH O
(mmO P
dataHashtablemmP ]
)mm_ `
;mm` a
}nn 
publicqq 

overrideqq 
voidqq 
Goodqq 
(qq 
)qq 
{rr 
GoodG2Bss 
(ss 
)ss 
;ss 
}tt 
privateww 
staticww 
voidww 
GoodG2Bww 
(ww  
)ww  !
{xx 
doubleyy 
datayy 
;yy 
data{{ 
={{ 
$num{{ 
;{{ 
	Hashtable|| 
dataHashtable|| 
=||  !
new||" %
	Hashtable||& /
(||/ 0
$num||0 1
)||1 2
;||2 3
dataHashtable}} 
.}} 
Add}} 
(}} 
$num}} 
,}} 
data}} !
)}}! "
;}}" #
dataHashtable~~ 
.~~ 
Add~~ 
(~~ 
$num~~ 
,~~ 
data~~ !
)~~! "
;~~" #
dataHashtable 
. 
Add 
( 
$num 
, 
data !
)! "
;" #M
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_72b
ÄÄ G
.
ÄÄG H
GoodG2BSink
ÄÄH S
(
ÄÄS T
dataHashtable
ÄÄT a
)
ÄÄc d
;
ÄÄd e
}
ÅÅ 
}ÉÉ 
}ÑÑ «
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_72b E
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
double 
data 
= 
( 
double 
) 
dataHashtable ,
[, -
$num- .
]. /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
double(( 
data(( 
=(( 
((( 
double(( 
)(( 
dataHashtable(( ,
[((, -
$num((- .
]((. /
;((/ 0
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 É:
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_73a E
:F G
AbstractTestCaseH X
{ 
public 

override 
void 
Bad 
( 
) 
{   
double!! 
data!! 
;!! 
data"" 
="" 
double"" 
."" 
MinValue"" 
;"" 
{$$ 	
TcpListener%% 
listener%%  
=%%! "
null%%# '
;%%' (
	TcpClient&& 
tcpConn&& 
=&& 
null&&  $
;&&$ %
StreamReader'' 
sr'' 
='' 
null'' "
;''" #
try)) 
{** 
listener++ 
=++ 
new++ 
TcpListener++ *
(++* +
	IPAddress+++ 4
.++4 5
Parse++5 :
(++: ;
$str++; G
)++G H
,++H I
$num++J O
)++O P
;++P Q
tcpConn,, 
=,, 
listener,, "
.,," #
AcceptTcpClient,,# 2
(,,2 3
),,3 4
;,,4 5
sr.. 
=.. 
new.. 
StreamReader.. %
(..% &
tcpConn..& -
...- .
	GetStream... 7
(..7 8
)..8 9
)..9 :
;..: ;
string00 
stringNumber00 #
=00$ %
sr00& (
.00( )
ReadLine00) 1
(001 2
)002 3
;003 4
if11 
(11 
stringNumber11  
!=11! #
null11$ (
)11( )
{22 
try33 
{44 
data55 
=55 
double55 %
.55% &
Parse55& +
(55+ ,
stringNumber55, 8
.558 9
Trim559 =
(55= >
)55> ?
)55? @
;55@ A
}66 
catch77 
(77 
FormatException77 )
exceptNumberFormat77* <
)77< =
{88 
IO99 
.99 
Logger99 !
.99! "
Log99" %
(99% &
NLog99& *
.99* +
LogLevel99+ 3
.993 4
Warn994 8
,998 9
exceptNumberFormat99: L
,99L M
$str	99N Ä
)
99Ä Å
;
99Å Ç
}:: 
};; 
}<< 
catch== 
(== 
IOException== 
exceptIO== '
)==' (
{>> 
IO?? 
.?? 
Logger?? 
.?? 
Log?? 
(?? 
NLog?? "
.??" #
LogLevel??# +
.??+ ,
Warn??, 0
,??0 1
exceptIO??2 :
,??: ;
$str??< W
)??W X
;??X Y
}@@ 
finallyAA 
{BB 
tryDD 
{EE 
ifFF 
(FF 
srFF 
!=FF 
nullFF "
)FF" #
{GG 
srHH 
.HH 
CloseHH  
(HH  !
)HH! "
;HH" #
}II 
}JJ 
catchKK 
(KK 
IOExceptionKK "
exceptIOKK# +
)KK+ ,
{LL 
IOMM 
.MM 
LoggerMM 
.MM 
LogMM !
(MM! "
NLogMM" &
.MM& '
LogLevelMM' /
.MM/ 0
WarnMM0 4
,MM4 5
exceptIOMM6 >
,MM> ?
$strMM@ \
)MM\ ]
;MM] ^
}NN 
tryQQ 
{RR 
ifSS 
(SS 
tcpConnSS 
!=SS  "
nullSS# '
)SS' (
{TT 
tcpConnUU 
.UU  
CloseUU  %
(UU% &
)UU& '
;UU' (
}VV 
}WW 
catchXX 
(XX 
IOExceptionXX "
exceptIOXX# +
)XX+ ,
{YY 
IOZZ 
.ZZ 
LoggerZZ 
.ZZ 
LogZZ !
(ZZ! "
NLogZZ" &
.ZZ& '
LogLevelZZ' /
.ZZ/ 0
WarnZZ0 4
,ZZ4 5
exceptIOZZ6 >
,ZZ> ?
$strZZ@ Y
)ZZY Z
;ZZZ [
}[[ 
try]] 
{^^ 
if__ 
(__ 
listener__  
!=__! #
null__$ (
)__( )
{`` 
listeneraa  
.aa  !
Stopaa! %
(aa% &
)aa& '
;aa' (
}bb 
}cc 
catchdd 
(dd 
IOExceptiondd "
exceptIOdd# +
)dd+ ,
{ee 
IOff 
.ff 
Loggerff 
.ff 
Logff !
(ff! "
NLogff" &
.ff& '
LogLevelff' /
.ff/ 0
Warnff0 4
,ff4 5
exceptIOff6 >
,ff> ?
$strff@ [
)ff[ \
;ff\ ]
}gg 
}hh 
}ii 	

LinkedListjj 
<jj 
doublejj 
>jj 
dataLinkedListjj )
=jj* +
newjj, /

LinkedListjj0 :
<jj: ;
doublejj; A
>jjA B
(jjB C
)jjC D
;jjD E
dataLinkedListkk 
.kk 
AddLastkk 
(kk 
datakk #
)kk# $
;kk$ %
dataLinkedListll 
.ll 
AddLastll 
(ll 
datall #
)ll# $
;ll$ %
dataLinkedListmm 
.mm 
AddLastmm 
(mm 
datamm #
)mm# $
;mm$ %K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_73bnn G
.nnG H
BadSinknnH O
(nnO P
dataLinkedListnnP ^
)nn` a
;nna b
}oo 
publicrr 

overriderr 
voidrr 
Goodrr 
(rr 
)rr 
{ss 
GoodG2Btt 
(tt 
)tt 
;tt 
}uu 
privatexx 
staticxx 
voidxx 
GoodG2Bxx 
(xx  
)xx  !
{yy 
doublezz 
datazz 
;zz 
data|| 
=|| 
$num|| 
;|| 

LinkedList}} 
<}} 
double}} 
>}} 
dataLinkedList}} )
=}}* +
new}}, /

LinkedList}}0 :
<}}: ;
double}}; A
>}}A B
(}}B C
)}}C D
;}}D E
dataLinkedList~~ 
.~~ 
AddLast~~ 
(~~ 
data~~ #
)~~# $
;~~$ %
dataLinkedList 
. 
AddLast 
( 
data #
)# $
;$ %
dataLinkedList
ÄÄ 
.
ÄÄ 
AddLast
ÄÄ 
(
ÄÄ 
data
ÄÄ #
)
ÄÄ# $
;
ÄÄ$ %M
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_73b
ÅÅ G
.
ÅÅG H
GoodG2BSink
ÅÅH S
(
ÅÅS T
dataLinkedList
ÅÅT b
)
ÅÅd e
;
ÅÅe f
}
ÇÇ 
}ÑÑ 
}ÖÖ Û
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_73b E
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
double* 0
>0 1
dataLinkedList2 @
)A B
{ 
double 
data 
= 
dataLinkedList $
.$ %
Last% )
.) *
Value* /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
double&&. 4
>&&4 5
dataLinkedList&&6 D
)&&E F
{'' 
double(( 
data(( 
=(( 
dataLinkedList(( $
.(($ %
Last((% )
.(() *
Value((* /
;((/ 0
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 £<
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_74a E
:F G
AbstractTestCaseH X
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	

Dictionaryii 
<ii 
intii 
,ii 
doubleii 
>ii 
dataDictionaryii -
=ii. /
newii0 3

Dictionaryii4 >
<ii> ?
intii? B
,iiB C
doubleiiC I
>iiI J
(iiJ K
)iiK L
;iiL M
dataDictionaryjj 
.jj 
Addjj 
(jj 
$numjj 
,jj 
datajj "
)jj" #
;jj# $
dataDictionarykk 
.kk 
Addkk 
(kk 
$numkk 
,kk 
datakk "
)kk" #
;kk# $
dataDictionaryll 
.ll 
Addll 
(ll 
$numll 
,ll 
datall "
)ll" #
;ll# $K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_74bmm G
.mmG H
BadSinkmmH O
(mmO P
dataDictionarymmP ^
)mm` a
;mma b
}nn 
publicqq 

overrideqq 
voidqq 
Goodqq 
(qq 
)qq 
{rr 
GoodG2Bss 
(ss 
)ss 
;ss 
}tt 
privateww 
staticww 
voidww 
GoodG2Bww 
(ww  
)ww  !
{xx 
doubleyy 
datayy 
;yy 
data{{ 
={{ 
$num{{ 
;{{ 

Dictionary|| 
<|| 
int|| 
,|| 
double|| 
>|| 
dataDictionary|| -
=||. /
new||0 3

Dictionary||4 >
<||> ?
int||? B
,||B C
double||C I
>||I J
(||J K
)||K L
;||L M
dataDictionary}} 
.}} 
Add}} 
(}} 
$num}} 
,}} 
data}} "
)}}" #
;}}# $
dataDictionary~~ 
.~~ 
Add~~ 
(~~ 
$num~~ 
,~~ 
data~~ "
)~~" #
;~~# $
dataDictionary 
. 
Add 
( 
$num 
, 
data "
)" #
;# $M
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_74b
ÄÄ G
.
ÄÄG H
GoodG2BSink
ÄÄH S
(
ÄÄS T
dataDictionary
ÄÄT b
)
ÄÄd e
;
ÄÄe f
}
ÅÅ 
}ÉÉ 
}ÑÑ ç
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_74b E
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
double. 4
>4 5
dataDictionary6 D
)E F
{ 
double 
data 
= 
dataDictionary $
[$ %
$num% &
]& '
;' (
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
double&&2 8
>&&8 9
dataDictionary&&: H
)&&I J
{'' 
double(( 
data(( 
=(( 
dataDictionary(( $
[(($ %
$num((% &
]((& '
;((' (
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ÎD
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_75a E
:F G
AbstractTestCaseH X
{ 
public 

override 
void 
Bad 
( 
) 
{   
double!! 
data!! 
;!! 
data"" 
="" 
double"" 
."" 
MinValue"" 
;"" 
{$$ 	
TcpListener%% 
listener%%  
=%%! "
null%%# '
;%%' (
	TcpClient&& 
tcpConn&& 
=&& 
null&&  $
;&&$ %
StreamReader'' 
sr'' 
='' 
null'' "
;''" #
try)) 
{** 
listener++ 
=++ 
new++ 
TcpListener++ *
(++* +
	IPAddress+++ 4
.++4 5
Parse++5 :
(++: ;
$str++; G
)++G H
,++H I
$num++J O
)++O P
;++P Q
tcpConn,, 
=,, 
listener,, "
.,," #
AcceptTcpClient,,# 2
(,,2 3
),,3 4
;,,4 5
sr.. 
=.. 
new.. 
StreamReader.. %
(..% &
tcpConn..& -
...- .
	GetStream... 7
(..7 8
)..8 9
)..9 :
;..: ;
string00 
stringNumber00 #
=00$ %
sr00& (
.00( )
ReadLine00) 1
(001 2
)002 3
;003 4
if11 
(11 
stringNumber11  
!=11! #
null11$ (
)11( )
{22 
try33 
{44 
data55 
=55 
double55 %
.55% &
Parse55& +
(55+ ,
stringNumber55, 8
.558 9
Trim559 =
(55= >
)55> ?
)55? @
;55@ A
}66 
catch77 
(77 
FormatException77 )
exceptNumberFormat77* <
)77< =
{88 
IO99 
.99 
Logger99 !
.99! "
Log99" %
(99% &
NLog99& *
.99* +
LogLevel99+ 3
.993 4
Warn994 8
,998 9
exceptNumberFormat99: L
,99L M
$str	99N Ä
)
99Ä Å
;
99Å Ç
}:: 
};; 
}<< 
catch== 
(== 
IOException== 
exceptIO== '
)==' (
{>> 
IO?? 
.?? 
Logger?? 
.?? 
Log?? 
(?? 
NLog?? "
.??" #
LogLevel??# +
.??+ ,
Warn??, 0
,??0 1
exceptIO??2 :
,??: ;
$str??< W
)??W X
;??X Y
}@@ 
finallyAA 
{BB 
tryDD 
{EE 
ifFF 
(FF 
srFF 
!=FF 
nullFF "
)FF" #
{GG 
srHH 
.HH 
CloseHH  
(HH  !
)HH! "
;HH" #
}II 
}JJ 
catchKK 
(KK 
IOExceptionKK "
exceptIOKK# +
)KK+ ,
{LL 
IOMM 
.MM 
LoggerMM 
.MM 
LogMM !
(MM! "
NLogMM" &
.MM& '
LogLevelMM' /
.MM/ 0
WarnMM0 4
,MM4 5
exceptIOMM6 >
,MM> ?
$strMM@ \
)MM\ ]
;MM] ^
}NN 
tryQQ 
{RR 
ifSS 
(SS 
tcpConnSS 
!=SS  "
nullSS# '
)SS' (
{TT 
tcpConnUU 
.UU  
CloseUU  %
(UU% &
)UU& '
;UU' (
}VV 
}WW 
catchXX 
(XX 
IOExceptionXX "
exceptIOXX# +
)XX+ ,
{YY 
IOZZ 
.ZZ 
LoggerZZ 
.ZZ 
LogZZ !
(ZZ! "
NLogZZ" &
.ZZ& '
LogLevelZZ' /
.ZZ/ 0
WarnZZ0 4
,ZZ4 5
exceptIOZZ6 >
,ZZ> ?
$strZZ@ Y
)ZZY Z
;ZZZ [
}[[ 
try]] 
{^^ 
if__ 
(__ 
listener__  
!=__! #
null__$ (
)__( )
{`` 
listeneraa  
.aa  !
Stopaa! %
(aa% &
)aa& '
;aa' (
}bb 
}cc 
catchdd 
(dd 
IOExceptiondd "
exceptIOdd# +
)dd+ ,
{ee 
IOff 
.ff 
Loggerff 
.ff 
Logff !
(ff! "
NLogff" &
.ff& '
LogLevelff' /
.ff/ 0
Warnff0 4
,ff4 5
exceptIOff6 >
,ff> ?
$strff@ [
)ff[ \
;ff\ ]
}gg 
}hh 
}ii 	
bytekk 
[kk 
]kk 
dataSerializedkk 
=kk 
nullkk  $
;kk$ %
tryll 
{mm 	
BinaryFormatternn 
bfnn 
=nn  
newnn! $
BinaryFormatternn% 4
(nn4 5
)nn5 6
;nn6 7
usingoo 
(oo 
varoo 
msoo 
=oo 
newoo 
MemoryStreamoo  ,
(oo, -
)oo- .
)oo. /
{pp 
bfqq 
.qq 
	Serializeqq 
(qq 
msqq 
,qq  
dataqq! %
)qq% &
;qq& '
dataSerializedrr 
=rr  
msrr! #
.rr# $
ToArrayrr$ +
(rr+ ,
)rr, -
;rr- .
}ss K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_75btt K
.ttK L
BadSinkttL S
(ttS T
dataSerializedttT b
)ttd e
;tte f
}uu 	
catchvv 
(vv "
SerializationExceptionvv %
exceptSerializevv& 5
)vv5 6
{ww 	
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx 
.xx 
LogLevelxx '
.xx' (
Warnxx( ,
,xx, -
$strxx. X
,xxX Y
exceptSerializexxZ i
)xxi j
;xxj k
}yy 	
}zz 
public}} 

override}} 
void}} 
Good}} 
(}} 
)}} 
{~~ 
GoodG2B 
( 
) 
; 
}
ÄÄ 
private
ÉÉ 
static
ÉÉ 
void
ÉÉ 
GoodG2B
ÉÉ 
(
ÉÉ  
)
ÉÉ  !
{
ÑÑ 
double
ÖÖ 
data
ÖÖ 
;
ÖÖ 
data
áá 
=
áá 
$num
áá 
;
áá 
byte
ââ 
[
ââ 
]
ââ 
dataSerialized
ââ 
=
ââ 
null
ââ  $
;
ââ$ %
try
ää 
{
ãã 	
BinaryFormatter
åå 
bf
åå 
=
åå  
new
åå! $
BinaryFormatter
åå% 4
(
åå4 5
)
åå5 6
;
åå6 7
using
çç 
(
çç 
var
çç 
ms
çç 
=
çç 
new
çç 
MemoryStream
çç  ,
(
çç, -
)
çç- .
)
çç. /
{
éé 
bf
èè 
.
èè 
	Serialize
èè 
(
èè 
ms
èè 
,
èè  
data
èè! %
)
èè% &
;
èè& '
dataSerialized
êê 
=
êê  
ms
êê! #
.
êê# $
ToArray
êê$ +
(
êê+ ,
)
êê, -
;
êê- .
}
ëë M
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_75b
íí K
.
ííK L
GoodG2BSink
ííL W
(
ííW X
dataSerialized
ííX f
)
ííh i
;
ííi j
}
ìì 	
catch
îî 
(
îî $
SerializationException
îî %
exceptSerialize
îî& 5
)
îî5 6
{
ïï 	
IO
ññ 
.
ññ 
Logger
ññ 
.
ññ 
Log
ññ 
(
ññ 
NLog
ññ 
.
ññ 
LogLevel
ññ '
.
ññ' (
Warn
ññ( ,
,
ññ, -
$str
ññ. X
,
ññX Y
exceptSerialize
ññZ i
)
ññi j
;
ññj k
}
óó 	
}
òò 
}öö 
}õõ Û!
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_75b E
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
double   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
double&& 
)&& 
binForm&& &
.&&& '
Deserialize&&' 2
(&&2 3
	memStream&&3 <
)&&< =
;&&= >
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
short** #
)**# $
data**$ (
)**( )
;**) *
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
double:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
double@@ 
)@@ 
binForm@@ &
.@@& '
Deserialize@@' 2
(@@2 3
	memStream@@3 <
)@@< =
;@@= >
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
shortDD #
)DD# $
dataDD$ (
)DD( )
;DD) *
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN Û2
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_81a E
:F G
AbstractTestCaseH X
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
	TcpClient%% 
tcpConn%% 
=%% 
null%%  $
;%%$ %
StreamReader&& 
sr&& 
=&& 
null&& "
;&&" #
try(( 
{)) 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
tcpConn++ 
=++ 
listener++ "
.++" #
AcceptTcpClient++# 2
(++2 3
)++3 4
;++4 5
sr-- 
=-- 
new-- 
StreamReader-- %
(--% &
tcpConn--& -
.--- .
	GetStream--. 7
(--7 8
)--8 9
)--9 :
;--: ;
string// 
stringNumber// #
=//$ %
sr//& (
.//( )
ReadLine//) 1
(//1 2
)//2 3
;//3 4
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
double44 %
.44% &
Parse44& +
(44+ ,
stringNumber44, 8
.448 9
Trim449 =
(44= >
)44> ?
)44? @
;44@ A
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE 
nullEE "
)EE" #
{FF 
srGG 
.GG 
CloseGG  
(GG  !
)GG! "
;GG" #
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ "
exceptIOJJ# +
)JJ+ ,
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL !
(LL! "
NLogLL" &
.LL& '
LogLevelLL' /
.LL/ 0
WarnLL0 4
,LL4 5
exceptIOLL6 >
,LL> ?
$strLL@ \
)LL\ ]
;LL] ^
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR 
!=RR  "
nullRR# '
)RR' (
{SS 
tcpConnTT 
.TT  
CloseTT  %
(TT% &
)TT& '
;TT' (
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW "
exceptIOWW# +
)WW+ ,
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY !
(YY! "
NLogYY" &
.YY& '
LogLevelYY' /
.YY/ 0
WarnYY0 4
,YY4 5
exceptIOYY6 >
,YY> ?
$strYY@ Y
)YYY Z
;YYZ [
}ZZ 
try\\ 
{]] 
if^^ 
(^^ 
listener^^  
!=^^! #
null^^$ (
)^^( )
{__ 
listener``  
.``  !
Stop``! %
(``% &
)``& '
;``' (
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc "
exceptIOcc# +
)cc+ ,
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee !
(ee! "
NLogee" &
.ee& '
LogLevelee' /
.ee/ 0
Warnee0 4
,ee4 5
exceptIOee6 >
,ee> ?
$stree@ [
)ee[ \
;ee\ ]
}ff 
}gg 
}hh 	O
CCWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_81_baseii K

baseObjectiiL V
=iiW X
newiiY \O
BCWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_81_bad	ii] ü
(
iiü †
)
ii† °
;
ii° ¢

baseObjectjj 
.jj 
Actionjj 
(jj 
datajj 
)jj  
;jj  !
}kk 
publicnn 

overridenn 
voidnn 
Goodnn 
(nn 
)nn 
{oo 
GoodG2Bpp 
(pp 
)pp 
;pp 
}qq 
privatett 
voidtt 
GoodG2Btt 
(tt 
)tt 
{uu 
doublevv 
datavv 
;vv 
dataxx 
=xx 
$numxx 
;xx O
CCWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_81_baseyy K

baseObjectyyL V
=yyW X
newyyY \S
FCWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_81_goodG2B	yy] £
(
yy£ §
)
yy§ •
;
yy• ¶

baseObjectzz 
.zz 
Actionzz 
(zz 
datazz 
)zz  
;zz  !
}{{ 
}}} 
}~~ ú
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class N
BCWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_81_bad H
:I JP
CCWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_81_base	K é
{ 
public 

override 
void 
Action 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
}!! 
}"" Ä
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 O
CCWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_81_base R
{ 
public 

abstract 
void 
Action 
(  
double  &
data' +
), -
;- .
} 
} §
…C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class R
FCWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_81_goodG2B L
:M NP
CCWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_81_base	O í
{ 
public 

override 
void 
Action 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
}!! 
}"" «!
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_01 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	
{LL 	
IONN 
.NN 
	WriteLineNN 
(NN 
(NN 
byteNN 
)NN 
dataNN #
)NN# $
;NN$ %
}OO 	
}PP 
publicSS 

overrideSS 
voidSS 
GoodSS 
(SS 
)SS 
{TT 
GoodG2BUU 
(UU 
)UU 
;UU 
}VV 
privateYY 
voidYY 
GoodG2BYY 
(YY 
)YY 
{ZZ 
double[[ 
data[[ 
;[[ 
data]] 
=]] 
$num]] 
;]] 
{^^ 	
IO`` 
.`` 
	WriteLine`` 
(`` 
(`` 
byte`` 
)`` 
data`` #
)``# $
;``$ %
}aa 	
}bb 
}dd 
}ee Ó*
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_02 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
true   
)   
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
byteWW 
)WW 
dataWW #
)WW# $
;WW$ %
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
false`` 
)`` 
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
bytemm 
)mm 
datamm #
)mm# $
;mm$ %
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
trueuu 
)uu 
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
byte
ÇÇ 
)
ÇÇ 
data
ÇÇ #
)
ÇÇ# $
;
ÇÇ$ %
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç ”+
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_03 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
$num   
==   
$num   
)   
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
byteWW 
)WW 
dataWW #
)WW# $
;WW$ %
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
$num`` 
!=`` 
$num`` 
)`` 
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
bytemm 
)mm 
datamm #
)mm# $
;mm$ %
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
$numuu 
==uu 
$numuu 
)uu 
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
byte
ÇÇ 
)
ÇÇ 
data
ÇÇ #
)
ÇÇ# $
;
ÇÇ$ %
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç æ-
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_04 B
:C D
AbstractTestCaseE U
{ 
private   
const   
bool   
PRIVATE_CONST_TRUE   )
=  * +
true  , 0
;  0 1
private!! 
const!! 
bool!! 
PRIVATE_CONST_FALSE!! *
=!!+ ,
false!!- 2
;!!2 3
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
double&& 
data&& 
;&& 
if'' 

('' 
PRIVATE_CONST_TRUE'' 
)'' 
{(( 	
data)) 
=)) 
double)) 
.)) 
MinValue)) "
;))" #
{++ 
	WebClient,, 
client,,  
=,,! "
new,,# &
	WebClient,,' 0
(,,0 1
),,1 2
;,,2 3
StreamReader-- 
sr-- 
=--  !
null--" &
;--& '
try.. 
{// 
sr00 
=00 
new00 
StreamReader00 )
(00) *
client00* 0
.000 1
OpenRead001 9
(009 :
$str00: S
)00S T
)00T U
;00U V
string44 
stringNumber44 '
=44( )
sr44* ,
.44, -
ReadLine44- 5
(445 6
)446 7
;447 8
if55 
(55 
stringNumber55 $
!=55% '
null55( ,
)55, -
{66 
try77 
{88 
data99  
=99! "
double99# )
.99) *
Parse99* /
(99/ 0
stringNumber990 <
.99< =
Trim99= A
(99A B
)99B C
)99C D
;99D E
}:: 
catch;; 
(;; 
FormatException;; .
exceptNumberFormat;;/ A
);;A B
{<< 
IO== 
.== 
Logger== %
.==% &
Log==& )
(==) *
NLog==* .
.==. /
LogLevel==/ 7
.==7 8
Warn==8 <
,==< =
exceptNumberFormat==> P
,==P Q
$str	==R Ñ
)
==Ñ Ö
;
==Ö Ü
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryHH 
{II 
ifJJ 
(JJ 
srJJ 
!=JJ !
nullJJ" &
)JJ& '
{KK 
srLL 
.LL 
CloseLL $
(LL$ %
)LL% &
;LL& '
}MM 
}NN 
catchOO 
(OO 
IOExceptionOO &
exceptIOOO' /
)OO/ 0
{PP 
IOQQ 
.QQ 
LoggerQQ !
.QQ! "
LogQQ" %
(QQ% &
NLogQQ& *
.QQ* +
LogLevelQQ+ 3
.QQ3 4
WarnQQ4 8
,QQ8 9
exceptIOQQ: B
,QQB C
$strQQD `
)QQ` a
;QQa b
}RR 
}SS 
}TT 
}UU 	
elseVV 
{WW 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
{\\ 	
IO^^ 
.^^ 
	WriteLine^^ 
(^^ 
(^^ 
byte^^ 
)^^ 
data^^ #
)^^# $
;^^$ %
}__ 	
}`` 
privatedd 
voiddd 
GoodG2B1dd 
(dd 
)dd 
{ee 
doubleff 
dataff 
;ff 
ifgg 

(gg 
PRIVATE_CONST_FALSEgg 
)gg  
{hh 	
datakk 
=kk 
$numkk 
;kk 
}ll 	
elsemm 
{nn 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
bytett 
)tt 
datatt #
)tt# $
;tt$ %
}uu 	
}vv 
privateyy 
voidyy 
GoodG2B2yy 
(yy 
)yy 
{zz 
double{{ 
data{{ 
;{{ 
if|| 

(|| 
PRIVATE_CONST_TRUE|| 
)|| 
{}} 	
data 
= 
$num 
; 
}
ÄÄ 	
else
ÅÅ 
{
ÇÇ 	
data
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
{
áá 	
IO
ââ 
.
ââ 
	WriteLine
ââ 
(
ââ 
(
ââ 
byte
ââ 
)
ââ 
data
ââ #
)
ââ# $
;
ââ$ %
}
ää 	
}
ãã 
public
çç 

override
çç 
void
çç 
Good
çç 
(
çç 
)
çç 
{
éé 
GoodG2B1
èè 
(
èè 
)
èè 
;
èè 
GoodG2B2
êê 
(
êê 
)
êê 
;
êê 
}
ëë 
}ìì 
}îî ı,
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_05 B
:C D
AbstractTestCaseE U
{ 
private   
bool   
privateTrue   
=   
true   #
;  # $
private!! 
bool!! 
privateFalse!! 
=!! 
false!!  %
;!!% &
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
double&& 
data&& 
;&& 
if'' 

('' 
privateTrue'' 
)'' 
{(( 	
data)) 
=)) 
double)) 
.)) 
MinValue)) "
;))" #
{++ 
	WebClient,, 
client,,  
=,,! "
new,,# &
	WebClient,,' 0
(,,0 1
),,1 2
;,,2 3
StreamReader-- 
sr-- 
=--  !
null--" &
;--& '
try.. 
{// 
sr00 
=00 
new00 
StreamReader00 )
(00) *
client00* 0
.000 1
OpenRead001 9
(009 :
$str00: S
)00S T
)00T U
;00U V
string44 
stringNumber44 '
=44( )
sr44* ,
.44, -
ReadLine44- 5
(445 6
)446 7
;447 8
if55 
(55 
stringNumber55 $
!=55% '
null55( ,
)55, -
{66 
try77 
{88 
data99  
=99! "
double99# )
.99) *
Parse99* /
(99/ 0
stringNumber990 <
.99< =
Trim99= A
(99A B
)99B C
)99C D
;99D E
}:: 
catch;; 
(;; 
FormatException;; .
exceptNumberFormat;;/ A
);;A B
{<< 
IO== 
.== 
Logger== %
.==% &
Log==& )
(==) *
NLog==* .
.==. /
LogLevel==/ 7
.==7 8
Warn==8 <
,==< =
exceptNumberFormat==> P
,==P Q
$str	==R Ñ
)
==Ñ Ö
;
==Ö Ü
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryHH 
{II 
ifJJ 
(JJ 
srJJ 
!=JJ !
nullJJ" &
)JJ& '
{KK 
srLL 
.LL 
CloseLL $
(LL$ %
)LL% &
;LL& '
}MM 
}NN 
catchOO 
(OO 
IOExceptionOO &
exceptIOOO' /
)OO/ 0
{PP 
IOQQ 
.QQ 
LoggerQQ !
.QQ! "
LogQQ" %
(QQ% &
NLogQQ& *
.QQ* +
LogLevelQQ+ 3
.QQ3 4
WarnQQ4 8
,QQ8 9
exceptIOQQ: B
,QQB C
$strQQD `
)QQ` a
;QQa b
}RR 
}SS 
}TT 
}UU 	
elseVV 
{WW 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
{\\ 	
IO^^ 
.^^ 
	WriteLine^^ 
(^^ 
(^^ 
byte^^ 
)^^ 
data^^ #
)^^# $
;^^$ %
}__ 	
}`` 
privatedd 
voiddd 
GoodG2B1dd 
(dd 
)dd 
{ee 
doubleff 
dataff 
;ff 
ifgg 

(gg 
privateFalsegg 
)gg 
{hh 	
datakk 
=kk 
$numkk 
;kk 
}ll 	
elsemm 
{nn 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
bytett 
)tt 
datatt #
)tt# $
;tt$ %
}uu 	
}vv 
privateyy 
voidyy 
GoodG2B2yy 
(yy 
)yy 
{zz 
double{{ 
data{{ 
;{{ 
if|| 

(|| 
privateTrue|| 
)|| 
{}} 	
data 
= 
$num 
; 
}
ÄÄ 	
else
ÅÅ 
{
ÇÇ 	
data
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
{
áá 	
IO
ââ 
.
ââ 
	WriteLine
ââ 
(
ââ 
(
ââ 
byte
ââ 
)
ââ 
data
ââ #
)
ââ# $
;
ââ$ %
}
ää 	
}
ãã 
public
çç 

override
çç 
void
çç 
Good
çç 
(
çç 
)
çç 
{
éé 
GoodG2B1
èè 
(
èè 
)
èè 
;
èè 
GoodG2B2
êê 
(
êê 
)
êê 
;
êê 
}
ëë 
}ìì 
}îî î-
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_06 B
:C D
AbstractTestCaseE U
{ 
private   
const   
int   
PRIVATE_CONST_FIVE   (
=  ) *
$num  + ,
;  , -
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
double%% 
data%% 
;%% 
if&& 

(&& 
PRIVATE_CONST_FIVE&& 
==&& !
$num&&" #
)&&# $
{'' 	
data(( 
=(( 
double(( 
.(( 
MinValue(( "
;((" #
{** 
	WebClient++ 
client++  
=++! "
new++# &
	WebClient++' 0
(++0 1
)++1 2
;++2 3
StreamReader,, 
sr,, 
=,,  !
null,," &
;,,& '
try-- 
{.. 
sr// 
=// 
new// 
StreamReader// )
(//) *
client//* 0
.//0 1
OpenRead//1 9
(//9 :
$str//: S
)//S T
)//T U
;//U V
string33 
stringNumber33 '
=33( )
sr33* ,
.33, -
ReadLine33- 5
(335 6
)336 7
;337 8
if44 
(44 
stringNumber44 $
!=44% '
null44( ,
)44, -
{55 
try66 
{77 
data88  
=88! "
double88# )
.88) *
Parse88* /
(88/ 0
stringNumber880 <
.88< =
Trim88= A
(88A B
)88B C
)88C D
;88D E
}99 
catch:: 
(:: 
FormatException:: .
exceptNumberFormat::/ A
)::A B
{;; 
IO<< 
.<< 
Logger<< %
.<<% &
Log<<& )
(<<) *
NLog<<* .
.<<. /
LogLevel<</ 7
.<<7 8
Warn<<8 <
,<<< =
exceptNumberFormat<<> P
,<<P Q
$str	<<R Ñ
)
<<Ñ Ö
;
<<Ö Ü
}== 
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ "
exceptIO@@# +
)@@+ ,
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB !
(BB! "
NLogBB" &
.BB& '
LogLevelBB' /
.BB/ 0
WarnBB0 4
,BB4 5
exceptIOBB6 >
,BB> ?
$strBB@ [
)BB[ \
;BB\ ]
}CC 
finallyDD 
{EE 
tryGG 
{HH 
ifII 
(II 
srII 
!=II !
nullII" &
)II& '
{JJ 
srKK 
.KK 
CloseKK $
(KK$ %
)KK% &
;KK& '
}LL 
}MM 
catchNN 
(NN 
IOExceptionNN &
exceptIONN' /
)NN/ 0
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
exceptIOPP: B
,PPB C
$strPPD `
)PP` a
;PPa b
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
byte]] 
)]] 
data]] #
)]]# $
;]]$ %
}^^ 	
}__ 
privatecc 
voidcc 
GoodG2B1cc 
(cc 
)cc 
{dd 
doubleee 
dataee 
;ee 
ifff 

(ff 
PRIVATE_CONST_FIVEff 
!=ff !
$numff" #
)ff# $
{gg 	
datajj 
=jj 
$numjj 
;jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
bytess 
)ss 
datass #
)ss# $
;ss$ %
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
)xx 
{yy 
doublezz 
datazz 
;zz 
if{{ 

({{ 
PRIVATE_CONST_FIVE{{ 
=={{ !
$num{{" #
){{# $
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
else
ÄÄ 
{
ÅÅ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
{
ÜÜ 	
IO
àà 
.
àà 
	WriteLine
àà 
(
àà 
(
àà 
byte
àà 
)
àà 
data
àà #
)
àà# $
;
àà$ %
}
ââ 	
}
ää 
public
åå 

override
åå 
void
åå 
Good
åå 
(
åå 
)
åå 
{
çç 
GoodG2B1
éé 
(
éé 
)
éé 
;
éé 
GoodG2B2
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì Â,
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_07 B
:C D
AbstractTestCaseE U
{ 
private   
int   
privateFive   
=   
$num   
;    
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
double%% 
data%% 
;%% 
if&& 

(&& 
privateFive&& 
==&& 
$num&& 
)&& 
{'' 	
data(( 
=(( 
double(( 
.(( 
MinValue(( "
;((" #
{** 
	WebClient++ 
client++  
=++! "
new++# &
	WebClient++' 0
(++0 1
)++1 2
;++2 3
StreamReader,, 
sr,, 
=,,  !
null,," &
;,,& '
try-- 
{.. 
sr// 
=// 
new// 
StreamReader// )
(//) *
client//* 0
.//0 1
OpenRead//1 9
(//9 :
$str//: S
)//S T
)//T U
;//U V
string33 
stringNumber33 '
=33( )
sr33* ,
.33, -
ReadLine33- 5
(335 6
)336 7
;337 8
if44 
(44 
stringNumber44 $
!=44% '
null44( ,
)44, -
{55 
try66 
{77 
data88  
=88! "
double88# )
.88) *
Parse88* /
(88/ 0
stringNumber880 <
.88< =
Trim88= A
(88A B
)88B C
)88C D
;88D E
}99 
catch:: 
(:: 
FormatException:: .
exceptNumberFormat::/ A
)::A B
{;; 
IO<< 
.<< 
Logger<< %
.<<% &
Log<<& )
(<<) *
NLog<<* .
.<<. /
LogLevel<</ 7
.<<7 8
Warn<<8 <
,<<< =
exceptNumberFormat<<> P
,<<P Q
$str	<<R Ñ
)
<<Ñ Ö
;
<<Ö Ü
}== 
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ "
exceptIO@@# +
)@@+ ,
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB !
(BB! "
NLogBB" &
.BB& '
LogLevelBB' /
.BB/ 0
WarnBB0 4
,BB4 5
exceptIOBB6 >
,BB> ?
$strBB@ [
)BB[ \
;BB\ ]
}CC 
finallyDD 
{EE 
tryGG 
{HH 
ifII 
(II 
srII 
!=II !
nullII" &
)II& '
{JJ 
srKK 
.KK 
CloseKK $
(KK$ %
)KK% &
;KK& '
}LL 
}MM 
catchNN 
(NN 
IOExceptionNN &
exceptIONN' /
)NN/ 0
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
exceptIOPP: B
,PPB C
$strPPD `
)PP` a
;PPa b
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
byte]] 
)]] 
data]] #
)]]# $
;]]$ %
}^^ 	
}__ 
privatecc 
voidcc 
GoodG2B1cc 
(cc 
)cc 
{dd 
doubleee 
dataee 
;ee 
ifff 

(ff 
privateFiveff 
!=ff 
$numff 
)ff 
{gg 	
datajj 
=jj 
$numjj 
;jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
bytess 
)ss 
datass #
)ss# $
;ss$ %
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
)xx 
{yy 
doublezz 
datazz 
;zz 
if{{ 

({{ 
privateFive{{ 
=={{ 
$num{{ 
){{ 
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
else
ÄÄ 
{
ÅÅ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
{
ÜÜ 	
IO
àà 
.
àà 
	WriteLine
àà 
(
àà 
(
àà 
byte
àà 
)
àà 
data
àà #
)
àà# $
;
àà$ %
}
ââ 	
}
ää 
public
åå 

override
åå 
void
åå 
Good
åå 
(
åå 
)
åå 
{
çç 
GoodG2B1
éé 
(
éé 
)
éé 
;
éé 
GoodG2B2
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì ƒ/
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_08 B
:C D
AbstractTestCaseE U
{ 
private   
static   
bool   
PrivateReturnsTrue   *
(  * +
)  + ,
{!! 
return"" 
true"" 
;"" 
}## 
private%% 
static%% 
bool%% 
PrivateReturnsFalse%% +
(%%+ ,
)%%, -
{&& 
return'' 
false'' 
;'' 
}(( 
public++ 

override++ 
void++ 
Bad++ 
(++ 
)++ 
{,, 
double-- 
data-- 
;-- 
if.. 

(.. 
PrivateReturnsTrue.. 
(.. 
)..  
)..  !
{// 	
data00 
=00 
double00 
.00 
MinValue00 "
;00" #
{22 
	WebClient33 
client33  
=33! "
new33# &
	WebClient33' 0
(330 1
)331 2
;332 3
StreamReader44 
sr44 
=44  !
null44" &
;44& '
try55 
{66 
sr77 
=77 
new77 
StreamReader77 )
(77) *
client77* 0
.770 1
OpenRead771 9
(779 :
$str77: S
)77S T
)77T U
;77U V
string;; 
stringNumber;; '
=;;( )
sr;;* ,
.;;, -
ReadLine;;- 5
(;;5 6
);;6 7
;;;7 8
if<< 
(<< 
stringNumber<< $
!=<<% '
null<<( ,
)<<, -
{== 
try>> 
{?? 
data@@  
=@@! "
double@@# )
.@@) *
Parse@@* /
(@@/ 0
stringNumber@@0 <
.@@< =
Trim@@= A
(@@A B
)@@B C
)@@C D
;@@D E
}AA 
catchBB 
(BB 
FormatExceptionBB .
exceptNumberFormatBB/ A
)BBA B
{CC 
IODD 
.DD 
LoggerDD %
.DD% &
LogDD& )
(DD) *
NLogDD* .
.DD. /
LogLevelDD/ 7
.DD7 8
WarnDD8 <
,DD< =
exceptNumberFormatDD> P
,DDP Q
$str	DDR Ñ
)
DDÑ Ö
;
DDÖ Ü
}EE 
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH "
exceptIOHH# +
)HH+ ,
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ !
(JJ! "
NLogJJ" &
.JJ& '
LogLevelJJ' /
.JJ/ 0
WarnJJ0 4
,JJ4 5
exceptIOJJ6 >
,JJ> ?
$strJJ@ [
)JJ[ \
;JJ\ ]
}KK 
finallyLL 
{MM 
tryOO 
{PP 
ifQQ 
(QQ 
srQQ 
!=QQ !
nullQQ" &
)QQ& '
{RR 
srSS 
.SS 
CloseSS $
(SS$ %
)SS% &
;SS& '
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD `
)XX` a
;XXa b
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
byteee 
)ee 
dataee #
)ee# $
;ee$ %
}ff 	
}gg 
privatekk 
voidkk 
GoodG2B1kk 
(kk 
)kk 
{ll 
doublemm 
datamm 
;mm 
ifnn 

(nn 
PrivateReturnsFalsenn 
(nn  
)nn  !
)nn! "
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
byte{{ 
){{ 
data{{ #
){{# $
;{{$ %
}|| 	
}}} 
private
ÄÄ 
void
ÄÄ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
double
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ  
PrivateReturnsTrue
ÉÉ 
(
ÉÉ 
)
ÉÉ  
)
ÉÉ  !
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
else
àà 
{
ââ 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
byte
êê 
)
êê 
data
êê #
)
êê# $
;
êê$ %
}
ëë 	
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
)
îî 
{
ïï 
GoodG2B1
ññ 
(
ññ 
)
ññ 
;
ññ 
GoodG2B2
óó 
(
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ ˚+
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_09 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.    
STATIC_READONLY_TRUE   #
)  # $
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
byteWW 
)WW 
dataWW #
)WW# $
;WW$ %
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` !
STATIC_READONLY_FALSE`` $
)``$ %
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
bytemm 
)mm 
datamm #
)mm# $
;mm$ %
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
IOuu 
.uu  
STATIC_READONLY_TRUEuu #
)uu# $
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
byte
ÇÇ 
)
ÇÇ 
data
ÇÇ #
)
ÇÇ# $
;
ÇÇ$ %
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç ›+
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_10 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.   

staticTrue   
)   
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
byteWW 
)WW 
dataWW #
)WW# $
;WW$ %
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` 
staticFalse`` 
)`` 
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
bytemm 
)mm 
datamm #
)mm# $
;mm$ %
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
IOuu 
.uu 

staticTrueuu 
)uu 
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
byte
ÇÇ 
)
ÇÇ 
data
ÇÇ #
)
ÇÇ# $
;
ÇÇ$ %
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç Ã,
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_11 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.   
StaticReturnsTrue    
(    !
)  ! "
)  " #
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
byteWW 
)WW 
dataWW #
)WW# $
;WW$ %
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` 
StaticReturnsFalse`` !
(``! "
)``" #
)``# $
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
bytemm 
)mm 
datamm #
)mm# $
;mm$ %
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
IOuu 
.uu 
StaticReturnsTrueuu  
(uu  !
)uu! "
)uu" #
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
byte
ÇÇ 
)
ÇÇ 
data
ÇÇ #
)
ÇÇ# $
;
ÇÇ$ %
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç â&
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_12 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.   $
StaticReturnsTrueOrFalse   '
(  ' (
)  ( )
)  ) *
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
{TT 	
IOVV 
.VV 
	WriteLineVV 
(VV 
(VV 
byteVV 
)VV 
dataVV #
)VV# $
;VV$ %
}WW 	
}XX 
private]] 
void]] 
GoodG2B]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` $
StaticReturnsTrueOrFalse`` '
(``' (
)``( )
)``) *
{aa 	
datacc 
=cc 
$numcc 
;cc 
}dd 	
elseee 
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
{jj 	
IOll 
.ll 
	WriteLinell 
(ll 
(ll 
bytell 
)ll 
datall #
)ll# $
;ll$ %
}mm 	
}nn 
publicpp 

overridepp 
voidpp 
Goodpp 
(pp 
)pp 
{qq 
GoodG2Brr 
(rr 
)rr 
;rr 
}ss 
}uu 
}vv ‡,
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_13 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.    
STATIC_READONLY_FIVE   #
==  $ &
$num  ' (
)  ( )
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
byteWW 
)WW 
dataWW #
)WW# $
;WW$ %
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.``  
STATIC_READONLY_FIVE`` #
!=``$ &
$num``' (
)``( )
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
bytemm 
)mm 
datamm #
)mm# $
;mm$ %
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
IOuu 
.uu  
STATIC_READONLY_FIVEuu #
==uu$ &
$numuu' (
)uu( )
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
byte
ÇÇ 
)
ÇÇ 
data
ÇÇ #
)
ÇÇ# $
;
ÇÇ$ %
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç ¬,
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_14 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.   

staticFive   
==   
$num   
)   
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
byteWW 
)WW 
dataWW #
)WW# $
;WW$ %
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` 

staticFive`` 
!=`` 
$num`` 
)`` 
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
bytemm 
)mm 
datamm #
)mm# $
;mm$ %
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
IOuu 
.uu 

staticFiveuu 
==uu 
$numuu 
)uu 
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
byte
ÇÇ 
)
ÇÇ 
data
ÇÇ #
)
ÇÇ# $
;
ÇÇ$ %
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç ´.
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_15 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
= 
$num 
; 
switch   
(   
$num   
)   
{!! 	
case"" 
$num"" 
:"" 
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
	WebClient&& 
client&&  
=&&! "
new&&# &
	WebClient&&' 0
(&&0 1
)&&1 2
;&&2 3
StreamReader'' 
sr'' 
=''  !
null''" &
;''& '
try(( 
{)) 
sr** 
=** 
new** 
StreamReader** )
(**) *
client*** 0
.**0 1
OpenRead**1 9
(**9 :
$str**: S
)**S T
)**T U
;**U V
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
double33# )
.33) *
Parse33* /
(33/ 0
stringNumber330 <
.33< =
Trim33= A
(33A B
)33B C
)33C D
;33D E
}44 
catch55 
(55 
FormatException55 .
exceptNumberFormat55/ A
)55A B
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD `
)KK` a
;KKa b
}LL 
}MM 
}NN 
breakOO 
;OO 
defaultPP 
:PP 
dataSS 
=SS 
$numSS 
;SS 
breakTT 
;TT 
}UU 	
{VV 	
IOXX 
.XX 
	WriteLineXX 
(XX 
(XX 
byteXX 
)XX 
dataXX #
)XX# $
;XX$ %
}YY 	
}ZZ 
private^^ 
void^^ 
GoodG2B1^^ 
(^^ 
)^^ 
{__ 
double`` 
data`` 
=`` 
$num`` 
;`` 
switchaa 
(aa 
$numaa 
)aa 
{bb 	
casecc 
$numcc 
:cc 
dataff 
=ff 
$numff 
;ff 
breakgg 
;gg 
defaulthh 
:hh 
datajj 
=jj 
$numjj 
;jj 
breakkk 
;kk 
}ll 	
{mm 	
IOoo 
.oo 
	WriteLineoo 
(oo 
(oo 
byteoo 
)oo 
dataoo #
)oo# $
;oo$ %
}pp 	
}qq 
privatett 
voidtt 
GoodG2B2tt 
(tt 
)tt 
{uu 
doublevv 
datavv 
=vv 
$numvv 
;vv 
switchww 
(ww 
$numww 
)ww 
{xx 	
caseyy 
$numyy 
:yy 
data{{ 
={{ 
$num{{ 
;{{ 
break|| 
;|| 
default}} 
:}} 
data
ÄÄ 
=
ÄÄ 
$num
ÄÄ 
;
ÄÄ 
break
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
{
ÉÉ 	
IO
ÖÖ 
.
ÖÖ 
	WriteLine
ÖÖ 
(
ÖÖ 
(
ÖÖ 
byte
ÖÖ 
)
ÖÖ 
data
ÖÖ #
)
ÖÖ# $
;
ÖÖ$ %
}
ÜÜ 	
}
áá 
public
ââ 

override
ââ 
void
ââ 
Good
ââ 
(
ââ 
)
ââ 
{
ää 
GoodG2B1
ãã 
(
ãã 
)
ãã 
;
ãã 
GoodG2B2
åå 
(
åå 
)
åå 
;
åå 
}
çç 
}èè 
}êê Õ#
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_16 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
while   
(   
true   
)   
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
breakNN 
;NN 
}OO 	
{PP 	
IORR 
.RR 
	WriteLineRR 
(RR 
(RR 
byteRR 
)RR 
dataRR #
)RR# $
;RR$ %
}SS 	
}TT 
privateXX 
voidXX 
GoodG2BXX 
(XX 
)XX 
{YY 
doubleZZ 
dataZZ 
;ZZ 
while[[ 
([[ 
true[[ 
)[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
break__ 
;__ 
}`` 	
{aa 	
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
bytecc 
)cc 
datacc #
)cc# $
;cc$ %
}dd 	
}ee 
publicgg 

overridegg 
voidgg 
Goodgg 
(gg 
)gg 
{hh 
GoodG2Bii 
(ii 
)ii 
;ii 
}jj 
}ll 
}mm Ω%
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_17 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	
forLL 
(LL 
intLL 
iLL 
=LL 
$numLL 
;LL 
iLL 
<LL 
$numLL 
;LL 
iLL  
++LL  "
)LL" #
{MM 	
{NN 
IOPP 
.PP 
	WriteLinePP 
(PP 
(PP 
bytePP "
)PP" #
dataPP# '
)PP' (
;PP( )
}QQ 
}RR 	
}SS 
privateXX 
voidXX 
GoodG2BXX 
(XX 
)XX 
{YY 
doubleZZ 
dataZZ 
;ZZ 
data\\ 
=\\ 
$num\\ 
;\\ 
for]] 
(]] 
int]] 
i]] 
=]] 
$num]] 
;]] 
i]] 
<]] 
$num]] 
;]] 
i]]  
++]]  "
)]]" #
{^^ 	
{__ 
IOaa 
.aa 
	WriteLineaa 
(aa 
(aa 
byteaa "
)aa" #
dataaa# '
)aa' (
;aa( )
}bb 
}cc 	
}dd 
publicff 

overrideff 
voidff 
Goodff 
(ff 
)ff 
{gg 
GoodG2Bhh 
(hh 
)hh 
;hh 
}ii 
}kk 
}ll Ò8
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_21 B
:C D
AbstractTestCaseE U
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public   

override   
void   
Bad   
(   
)   
{!! 
double"" 
data"" 
;"" 

badPrivate## 
=## 
true## 
;## 
data$$ 
=$$ 

Bad_source$$ 
($$ 
)$$ 
;$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
byte'' 
)'' 
data'' #
)''# $
;''$ %
}(( 	
})) 
private++ 
double++ 

Bad_source++ 
(++ 
)++ 
{,, 
double-- 
data-- 
;-- 
if.. 

(.. 

badPrivate.. 
).. 
{// 	
data00 
=00 
double00 
.00 
MinValue00 "
;00" #
{22 
	WebClient33 
client33  
=33! "
new33# &
	WebClient33' 0
(330 1
)331 2
;332 3
StreamReader44 
sr44 
=44  !
null44" &
;44& '
try55 
{66 
sr77 
=77 
new77 
StreamReader77 )
(77) *
client77* 0
.770 1
OpenRead771 9
(779 :
$str77: S
)77S T
)77T U
;77U V
string;; 
stringNumber;; '
=;;( )
sr;;* ,
.;;, -
ReadLine;;- 5
(;;5 6
);;6 7
;;;7 8
if<< 
(<< 
stringNumber<< $
!=<<% '
null<<( ,
)<<, -
{== 
try>> 
{?? 
data@@  
=@@! "
double@@# )
.@@) *
Parse@@* /
(@@/ 0
stringNumber@@0 <
.@@< =
Trim@@= A
(@@A B
)@@B C
)@@C D
;@@D E
}AA 
catchBB 
(BB 
FormatExceptionBB .
exceptNumberFormatBB/ A
)BBA B
{CC 
IODD 
.DD 
LoggerDD %
.DD% &
LogDD& )
(DD) *
NLogDD* .
.DD. /
LogLevelDD/ 7
.DD7 8
WarnDD8 <
,DD< =
exceptNumberFormatDD> P
,DDP Q
$str	DDR Ñ
)
DDÑ Ö
;
DDÖ Ü
}EE 
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH "
exceptIOHH# +
)HH+ ,
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ !
(JJ! "
NLogJJ" &
.JJ& '
LogLevelJJ' /
.JJ/ 0
WarnJJ0 4
,JJ4 5
exceptIOJJ6 >
,JJ> ?
$strJJ@ [
)JJ[ \
;JJ\ ]
}KK 
finallyLL 
{MM 
tryOO 
{PP 
ifQQ 
(QQ 
srQQ 
!=QQ !
nullQQ" &
)QQ& '
{RR 
srSS 
.SS 
CloseSS $
(SS$ %
)SS% &
;SS& '
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD `
)XX` a
;XXa b
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
returncc 
datacc 
;cc 
}dd 
privategg 
boolgg 
goodG2B1_privategg !
=gg" #
falsegg$ )
;gg) *
privatehh 
boolhh 
GoodG2B2_privatehh !
=hh" #
falsehh$ )
;hh) *
publicjj 

overridejj 
voidjj 
Goodjj 
(jj 
)jj 
{kk 
GoodG2B1ll 
(ll 
)ll 
;ll 
GoodG2B2mm 
(mm 
)mm 
;mm 
}nn 
privateqq 
voidqq 
GoodG2B1qq 
(qq 
)qq 
{rr 
doubless 
datass 
;ss 
goodG2B1_privatett 
=tt 
falsett  
;tt  !
datauu 
=uu 
GoodG2B1_sourceuu 
(uu 
)uu  
;uu  !
{vv 	
IOxx 
.xx 
	WriteLinexx 
(xx 
(xx 
bytexx 
)xx 
dataxx #
)xx# $
;xx$ %
}yy 	
}zz 
private|| 
double|| 
GoodG2B1_source|| "
(||" #
)||# $
{}} 
double~~ 
data~~ 
=~~ 
$num~~ 
;~~ 
if 

( 
goodG2B1_private 
) 
{
ÄÄ 	
data
ÉÉ 
=
ÉÉ 
$num
ÉÉ 
;
ÉÉ 
}
ÑÑ 	
else
ÖÖ 
{
ÜÜ 	
data
àà 
=
àà 
$num
àà 
;
àà 
}
ââ 	
return
ää 
data
ää 
;
ää 
}
ãã 
private
éé 
void
éé 
GoodG2B2
éé 
(
éé 
)
éé 
{
èè 
double
êê 
data
êê 
;
êê 
GoodG2B2_private
ëë 
=
ëë 
true
ëë 
;
ëë  
data
íí 
=
íí 
GoodG2B2_source
íí 
(
íí 
)
íí  
;
íí  !
{
ìì 	
IO
ïï 
.
ïï 
	WriteLine
ïï 
(
ïï 
(
ïï 
byte
ïï 
)
ïï 
data
ïï #
)
ïï# $
;
ïï$ %
}
ññ 	
}
óó 
private
ôô 
double
ôô 
GoodG2B2_source
ôô "
(
ôô" #
)
ôô# $
{
öö 
double
õõ 
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
if
úú 

(
úú 
GoodG2B2_private
úú 
)
úú 
{
ùù 	
data
üü 
=
üü 
$num
üü 
;
üü 
}
†† 	
else
°° 
{
¢¢ 	
data
•• 
=
•• 
$num
•• 
;
•• 
}
¶¶ 	
return
ßß 
data
ßß 
;
ßß 
}
®® 
}™™ 
}´´ ∂
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_22a C
:D E
AbstractTestCaseF V
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_22b!! L
.!!L M
	BadSource!!M V
(!!V W
)!!W X
;!!X Y
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
byte$$ 
)$$ 
data$$ #
)$$# $
;$$$ %
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
double66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_22b88 L
.88L M
GoodG2B1Source88M [
(88[ \
)88\ ]
;88] ^
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
byte;; 
);; 
data;; #
);;# $
;;;$ %
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
doubleBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_22bDD L
.DDL M
GoodG2B2SourceDDM [
(DD[ \
)DD\ ]
;DD] ^
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
}KK 
}LL ø'
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_22b C
{ 
public 

static 
double 
	BadSource "
(" #
)# $
{ 
double 
data 
; 
if   

(   I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_22a   I
.  I J
badPublicStatic  J Y
)  Y Z
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
returnUU 
dataUU 
;UU 
}VV 
public[[ 

static[[ 
double[[ 
GoodG2B1Source[[ '
([[' (
)[[( )
{\\ 
double]] 
data]] 
;]] 
if^^ 

(^^ I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_22a^^ I
.^^I J 
goodG2B1PublicStatic^^J ^
)^^^ _
{__ 	
databb 
=bb 
$numbb 
;bb 
}cc 	
elsedd 
{ee 	
datagg 
=gg 
$numgg 
;gg 
}hh 	
returnii 
dataii 
;ii 
}jj 
publicmm 

staticmm 
doublemm 
GoodG2B2Sourcemm '
(mm' (
)mm( )
{nn 
doubleoo 
dataoo 
;oo 
ifpp 

(pp I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_22app I
.ppI J 
GoodG2B2PublicStaticppJ ^
)pp^ _
{qq 	
datass 
=ss 
$numss 
;ss 
}tt 	
elseuu 
{vv 	
datayy 
=yy 
$numyy 
;yy 
}zz 	
return{{ 
data{{ 
;{{ 
}|| 
}~~ 
} Ò%
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_31 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
dataCopy   
;   
{!! 	
double"" 
data"" 
;"" 
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
	WebClient&& 
client&&  
=&&! "
new&&# &
	WebClient&&' 0
(&&0 1
)&&1 2
;&&2 3
StreamReader'' 
sr'' 
=''  !
null''" &
;''& '
try(( 
{)) 
sr** 
=** 
new** 
StreamReader** )
(**) *
client*** 0
.**0 1
OpenRead**1 9
(**9 :
$str**: S
)**S T
)**T U
;**U V
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
double33# )
.33) *
Parse33* /
(33/ 0
stringNumber330 <
.33< =
Trim33= A
(33A B
)33B C
)33C D
;33D E
}44 
catch55 
(55 
FormatException55 .
exceptNumberFormat55/ A
)55A B
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD `
)KK` a
;KKa b
}LL 
}MM 
}NN 
dataCopyOO 
=OO 
dataOO 
;OO 
}PP 	
{QQ 	
doubleRR 
dataRR 
=RR 
dataCopyRR "
;RR" #
{SS 
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU "
)UU" #
dataUU# '
)UU' (
;UU( )
}VV 
}WW 	
}XX 
public[[ 

override[[ 
void[[ 
Good[[ 
([[ 
)[[ 
{\\ 
GoodG2B]] 
(]] 
)]] 
;]] 
}^^ 
privateaa 
voidaa 
GoodG2Baa 
(aa 
)aa 
{bb 
doublecc 
dataCopycc 
;cc 
{dd 	
doubleee 
dataee 
;ee 
datagg 
=gg 
$numgg 
;gg 
dataCopyhh 
=hh 
datahh 
;hh 
}ii 	
{jj 	
doublekk 
datakk 
=kk 
dataCopykk "
;kk" #
{ll 
IOnn 
.nn 
	WriteLinenn 
(nn 
(nn 
bytenn "
)nn" #
datann# '
)nn' (
;nn( )
}oo 
}pp 	
}qq 
}ss 
}tt Ô%
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_41 B
:C D
AbstractTestCaseE U
{ 
private 
static 
void 
BadSink 
(  
double  &
data' +
), -
{ 
{ 	
IO   
.   
	WriteLine   
(   
(   
byte   
)   
data   #
)  # $
;  $ %
}!! 	
}"" 
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
double&& 
data&& 
;&& 
data'' 
='' 
double'' 
.'' 
MinValue'' 
;'' 
{)) 	
	WebClient** 
client** 
=** 
new** "
	WebClient**# ,
(**, -
)**- .
;**. /
StreamReader++ 
sr++ 
=++ 
null++ "
;++" #
try,, 
{-- 
sr.. 
=.. 
new.. 
StreamReader.. %
(..% &
client..& ,
..., -
OpenRead..- 5
(..5 6
$str..6 O
)..O P
)..P Q
;..Q R
string22 
stringNumber22 #
=22$ %
sr22& (
.22( )
ReadLine22) 1
(221 2
)222 3
;223 4
if33 
(33 
stringNumber33  
!=33! #
null33$ (
)33( )
{44 
try55 
{66 
data77 
=77 
double77 %
.77% &
Parse77& +
(77+ ,
stringNumber77, 8
.778 9
Trim779 =
(77= >
)77> ?
)77? @
;77@ A
}88 
catch99 
(99 
FormatException99 *
exceptNumberFormat99+ =
)99= >
{:: 
IO;; 
.;; 
Logger;; !
.;;! "
Log;;" %
(;;% &
NLog;;& *
.;;* +
LogLevel;;+ 3
.;;3 4
Warn;;4 8
,;;8 9
exceptNumberFormat;;: L
,;;L M
$str	;;N Ä
)
;;Ä Å
;
;;Å Ç
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryFF 
{GG 
ifHH 
(HH 
srHH 
!=HH 
nullHH "
)HH" #
{II 
srJJ 
.JJ 
CloseJJ  
(JJ  !
)JJ! "
;JJ" #
}KK 
}LL 
catchMM 
(MM 
IOExceptionMM "
exceptIOMM# +
)MM+ ,
{NN 
IOOO 
.OO 
LoggerOO 
.OO 
LogOO !
(OO! "
NLogOO" &
.OO& '
LogLevelOO' /
.OO/ 0
WarnOO0 4
,OO4 5
exceptIOOO6 >
,OO> ?
$strOO@ \
)OO\ ]
;OO] ^
}PP 
}QQ 
}RR 	
BadSinkSS 
(SS 
dataSS 
)SS 
;SS 
}TT 
publicWW 

overrideWW 
voidWW 
GoodWW 
(WW 
)WW 
{XX 
GoodG2BYY 
(YY 
)YY 
;YY 
}ZZ 
private\\ 
static\\ 
void\\ 
GoodG2BSink\\ #
(\\# $
double\\$ *
data\\+ /
)\\0 1
{]] 
{^^ 	
IO`` 
.`` 
	WriteLine`` 
(`` 
(`` 
byte`` 
)`` 
data`` #
)``# $
;``$ %
}aa 	
}bb 
privateee 
staticee 
voidee 
GoodG2Bee 
(ee  
)ee  !
{ff 
doublegg 
datagg 
;gg 
dataii 
=ii 
$numii 
;ii 
GoodG2BSinkjj 
(jj 
datajj 
)jj 
;jj 
}kk 
}mm 
}nn ﬂ&
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_42 B
:C D
AbstractTestCaseE U
{ 
private 
static 
double 
	BadSource #
(# $
)$ %
{ 
double 
data 
; 
data 
= 
double 
. 
MinValue 
; 
{!! 	
	WebClient"" 
client"" 
="" 
new"" "
	WebClient""# ,
("", -
)""- .
;"". /
StreamReader## 
sr## 
=## 
null## "
;##" #
try$$ 
{%% 
sr&& 
=&& 
new&& 
StreamReader&& %
(&&% &
client&&& ,
.&&, -
OpenRead&&- 5
(&&5 6
$str&&6 O
)&&O P
)&&P Q
;&&Q R
string** 
stringNumber** #
=**$ %
sr**& (
.**( )
ReadLine**) 1
(**1 2
)**2 3
;**3 4
if++ 
(++ 
stringNumber++  
!=++! #
null++$ (
)++( )
{,, 
try-- 
{.. 
data// 
=// 
double// %
.//% &
Parse//& +
(//+ ,
stringNumber//, 8
.//8 9
Trim//9 =
(//= >
)//> ?
)//? @
;//@ A
}00 
catch11 
(11 
FormatException11 *
exceptNumberFormat11+ =
)11= >
{22 
IO33 
.33 
Logger33 !
.33! "
Log33" %
(33% &
NLog33& *
.33* +
LogLevel33+ 3
.333 4
Warn334 8
,338 9
exceptNumberFormat33: L
,33L M
$str	33N Ä
)
33Ä Å
;
33Å Ç
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
finally;; 
{<< 
try>> 
{?? 
if@@ 
(@@ 
sr@@ 
!=@@ 
null@@ "
)@@" #
{AA 
srBB 
.BB 
CloseBB  
(BB  !
)BB! "
;BB" #
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE "
exceptIOEE# +
)EE+ ,
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG !
(GG! "
NLogGG" &
.GG& '
LogLevelGG' /
.GG/ 0
WarnGG0 4
,GG4 5
exceptIOGG6 >
,GG> ?
$strGG@ \
)GG\ ]
;GG] ^
}HH 
}II 
}JJ 	
returnKK 
dataKK 
;KK 
}LL 
publicOO 

overrideOO 
voidOO 
BadOO 
(OO 
)OO 
{PP 
doubleQQ 
dataQQ 
=QQ 
	BadSourceQQ 
(QQ  
)QQ  !
;QQ! "
{RR 	
IOTT 
.TT 
	WriteLineTT 
(TT 
(TT 
byteTT 
)TT 
dataTT #
)TT# $
;TT$ %
}UU 	
}VV 
privateYY 
staticYY 
doubleYY 
GoodG2BSourceYY '
(YY' (
)YY( )
{ZZ 
double[[ 
data[[ 
;[[ 
data]] 
=]] 
$num]] 
;]] 
return^^ 
data^^ 
;^^ 
}__ 
privatebb 
staticbb 
voidbb 
GoodG2Bbb 
(bb  
)bb  !
{cc 
doubledd 
datadd 
=dd 
GoodG2BSourcedd #
(dd# $
)dd$ %
;dd% &
{ee 	
IOgg 
.gg 
	WriteLinegg 
(gg 
(gg 
bytegg 
)gg 
datagg #
)gg# $
;gg$ %
}hh 	
}ii 
publickk 

overridekk 
voidkk 
Goodkk 
(kk 
)kk 
{ll 
GoodG2Bmm 
(mm 
)mm 
;mm 
}nn 
}pp 
}qq •(
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_45 B
:C D
AbstractTestCaseE U
{ 
private 
double 
dataBad 
; 
private 
double 
dataGoodG2B 
; 
private   
void   
BadSink   
(   
)   
{!! 
double"" 
data"" 
="" 
dataBad"" 
;"" 
{## 	
IO%% 
.%% 
	WriteLine%% 
(%% 
(%% 
byte%% 
)%% 
data%% #
)%%# $
;%%$ %
}&& 	
}'' 
public** 

override** 
void** 
Bad** 
(** 
)** 
{++ 
double,, 
data,, 
;,, 
data-- 
=-- 
double-- 
.-- 
MinValue-- 
;-- 
{// 	
	WebClient00 
client00 
=00 
new00 "
	WebClient00# ,
(00, -
)00- .
;00. /
StreamReader11 
sr11 
=11 
null11 "
;11" #
try22 
{33 
sr44 
=44 
new44 
StreamReader44 %
(44% &
client44& ,
.44, -
OpenRead44- 5
(445 6
$str446 O
)44O P
)44P Q
;44Q R
string88 
stringNumber88 #
=88$ %
sr88& (
.88( )
ReadLine88) 1
(881 2
)882 3
;883 4
if99 
(99 
stringNumber99  
!=99! #
null99$ (
)99( )
{:: 
try;; 
{<< 
data== 
=== 
double== %
.==% &
Parse==& +
(==+ ,
stringNumber==, 8
.==8 9
Trim==9 =
(=== >
)==> ?
)==? @
;==@ A
}>> 
catch?? 
(?? 
FormatException?? *
exceptNumberFormat??+ =
)??= >
{@@ 
IOAA 
.AA 
LoggerAA !
.AA! "
LogAA" %
(AA% &
NLogAA& *
.AA* +
LogLevelAA+ 3
.AA3 4
WarnAA4 8
,AA8 9
exceptNumberFormatAA: L
,AAL M
$str	AAN Ä
)
AAÄ Å
;
AAÅ Ç
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE 
exceptIOEE '
)EE' (
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG 
(GG 
NLogGG "
.GG" #
LogLevelGG# +
.GG+ ,
WarnGG, 0
,GG0 1
exceptIOGG2 :
,GG: ;
$strGG< W
)GGW X
;GGX Y
}HH 
finallyII 
{JJ 
tryLL 
{MM 
ifNN 
(NN 
srNN 
!=NN 
nullNN "
)NN" #
{OO 
srPP 
.PP 
ClosePP  
(PP  !
)PP! "
;PP" #
}QQ 
}RR 
catchSS 
(SS 
IOExceptionSS "
exceptIOSS# +
)SS+ ,
{TT 
IOUU 
.UU 
LoggerUU 
.UU 
LogUU !
(UU! "
NLogUU" &
.UU& '
LogLevelUU' /
.UU/ 0
WarnUU0 4
,UU4 5
exceptIOUU6 >
,UU> ?
$strUU@ \
)UU\ ]
;UU] ^
}VV 
}WW 
}XX 	
dataBadYY 
=YY 
dataYY 
;YY 
BadSinkZZ 
(ZZ 
)ZZ 
;ZZ 
}[[ 
public^^ 

override^^ 
void^^ 
Good^^ 
(^^ 
)^^ 
{__ 
GoodG2B`` 
(`` 
)`` 
;`` 
}aa 
privatecc 
voidcc 
GoodG2BSinkcc 
(cc 
)cc 
{dd 
doubleee 
dataee 
=ee 
dataGoodG2Bee !
;ee! "
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
(hh 
bytehh 
)hh 
datahh #
)hh# $
;hh$ %
}ii 	
}jj 
privatemm 
voidmm 
GoodG2Bmm 
(mm 
)mm 
{nn 
doubleoo 
dataoo 
;oo 
dataqq 
=qq 
$numqq 
;qq 
dataGoodG2Brr 
=rr 
datarr 
;rr 
GoodG2BSinkss 
(ss 
)ss 
;ss 
}tt 
}vv 
}ww £!
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_51a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
double 
. 
MinValue 
; 
{!! 	
	WebClient"" 
client"" 
="" 
new"" "
	WebClient""# ,
("", -
)""- .
;"". /
StreamReader## 
sr## 
=## 
null## "
;##" #
try$$ 
{%% 
sr&& 
=&& 
new&& 
StreamReader&& %
(&&% &
client&&& ,
.&&, -
OpenRead&&- 5
(&&5 6
$str&&6 O
)&&O P
)&&P Q
;&&Q R
string** 
stringNumber** #
=**$ %
sr**& (
.**( )
ReadLine**) 1
(**1 2
)**2 3
;**3 4
if++ 
(++ 
stringNumber++  
!=++! #
null++$ (
)++( )
{,, 
try-- 
{.. 
data// 
=// 
double// %
.//% &
Parse//& +
(//+ ,
stringNumber//, 8
.//8 9
Trim//9 =
(//= >
)//> ?
)//? @
;//@ A
}00 
catch11 
(11 
FormatException11 *
exceptNumberFormat11+ =
)11= >
{22 
IO33 
.33 
Logger33 !
.33! "
Log33" %
(33% &
NLog33& *
.33* +
LogLevel33+ 3
.333 4
Warn334 8
,338 9
exceptNumberFormat33: L
,33L M
$str	33N Ä
)
33Ä Å
;
33Å Ç
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
finally;; 
{<< 
try>> 
{?? 
if@@ 
(@@ 
sr@@ 
!=@@ 
null@@ "
)@@" #
{AA 
srBB 
.BB 
CloseBB  
(BB  !
)BB! "
;BB" #
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE "
exceptIOEE# +
)EE+ ,
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG !
(GG! "
NLogGG" &
.GG& '
LogLevelGG' /
.GG/ 0
WarnGG0 4
,GG4 5
exceptIOGG6 >
,GG> ?
$strGG@ \
)GG\ ]
;GG] ^
}HH 
}II 
}JJ 	I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_51bKK E
.KKE F
BadSinkKKF M
(KKM N
dataKKN R
)KKT U
;KKU V
}LL 
publicOO 

overrideOO 
voidOO 
GoodOO 
(OO 
)OO 
{PP 
GoodG2BQQ 
(QQ 
)QQ 
;QQ 
}RR 
privateUU 
voidUU 
GoodG2BUU 
(UU 
)UU 
{VV 
doubleWW 
dataWW 
;WW 
dataYY 
=YY 
$numYY 
;YY I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_51bZZ E
.ZZE F
GoodG2BSinkZZF Q
(ZZQ R
dataZZR V
)ZZX Y
;ZZY Z
}[[ 
}]] 
}^^ ß	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_51b C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
double### )
data##* .
)##/ 0
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
byte'' 
)'' 
data'' #
)''# $
;''$ %
}(( 	
})) 
}++ 
},, £!
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_52a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_52bLL E
.LLE F
BadSinkLLF M
(LLM N
dataLLN R
)LLS T
;LLT U
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
voidVV 
GoodG2BVV 
(VV 
)VV 
{WW 
doubleXX 
dataXX 
;XX 
dataZZ 
=ZZ 
$numZZ 
;ZZ I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_52b[[ E
.[[E F
GoodG2BSink[[F Q
([[Q R
data[[R V
)[[W X
;[[X Y
}\\ 
}^^ 
}__ Å	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_52b C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_52c E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_52c## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' ß	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_52c C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- £!
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_53a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_53bLL E
.LLE F
BadSinkLLF M
(LLM N
dataLLN R
)LLS T
;LLT U
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
voidVV 
GoodG2BVV 
(VV 
)VV 
{WW 
doubleXX 
dataXX 
;XX 
dataZZ 
=ZZ 
$numZZ 
;ZZ I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_53b[[ E
.[[E F
GoodG2BSink[[F Q
([[Q R
data[[R V
)[[W X
;[[X Y
}\\ 
}^^ 
}__ Å	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_53b C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_53c E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_53c## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' Å	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_53c C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_53d E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_53d## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' ß	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_53d C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- £!
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_54a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_54bLL E
.LLE F
BadSinkLLF M
(LLM N
dataLLN R
)LLS T
;LLT U
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
voidVV 
GoodG2BVV 
(VV 
)VV 
{WW 
doubleXX 
dataXX 
;XX 
dataZZ 
=ZZ 
$numZZ 
;ZZ I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_54b[[ E
.[[E F
GoodG2BSink[[F Q
([[Q R
data[[R V
)[[W X
;[[X Y
}\\ 
}^^ 
}__ Å	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_54b C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_54c E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_54c## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' Å	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_54c C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_54d E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_54d## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' Å	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_54d C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_54e E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_54e## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' ß	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_54e C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- ˘
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_61a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
= I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_61b S
.S T
	BadSourceT ]
(] ^
)^ _
;_ `
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
double++ 
data++ 
=++ I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_61b++ S
.++S T
GoodG2BSource++T a
(++a b
)++b c
;++c d
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
byte.. 
).. 
data.. #
)..# $
;..$ %
}// 	
}00 
}22 
}33 ’
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_61b C
{ 
public 

static 
double 
	BadSource "
(" #
)# $
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	
returnLL 
dataLL 
;LL 
}MM 
publicRR 

staticRR 
doubleRR 
GoodG2BSourceRR &
(RR& '
)RR' (
{SS 
doubleTT 
dataTT 
;TT 
dataVV 
=VV 
$numVV 
;VV 
returnWW 
dataWW 
;WW 
}XX 
}ZZ 
}[[ ß&
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_66a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	
doubleLL 
[LL 
]LL 
	dataArrayLL 
=LL 
newLL  
doubleLL! '
[LL' (
$numLL( )
]LL) *
;LL* +
	dataArrayMM 
[MM 
$numMM 
]MM 
=MM 
dataMM 
;MM I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_66bNN E
.NNE F
BadSinkNNF M
(NNM N
	dataArrayNNN W
)NNY Z
;NNZ [
}OO 
publicRR 

overrideRR 
voidRR 
GoodRR 
(RR 
)RR 
{SS 
GoodG2BTT 
(TT 
)TT 
;TT 
}UU 
privateXX 
staticXX 
voidXX 
GoodG2BXX 
(XX  
)XX  !
{YY 
doubleZZ 
dataZZ 
;ZZ 
data\\ 
=\\ 
$num\\ 
;\\ 
double]] 
[]] 
]]] 
	dataArray]] 
=]] 
new]]  
double]]! '
[]]' (
$num]]( )
]]]) *
;]]* +
	dataArray^^ 
[^^ 
$num^^ 
]^^ 
=^^ 
data^^ 
;^^ I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_66b__ E
.__E F
GoodG2BSink__F Q
(__Q R
	dataArray__R [
)__] ^
;__^ _
}`` 
}bb 
}cc É
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_66b C
{ 
public 

static 
void 
BadSink 
( 
double %
[% &
]& '
	dataArray( 1
)2 3
{ 
double 
data 
= 
	dataArray 
[  
$num  !
]! "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
double%%# )
[%%) *
]%%* +
	dataArray%%, 5
)%%6 7
{&& 
double'' 
data'' 
='' 
	dataArray'' 
[''  
$num''  !
]''! "
;''" #
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// ä'
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_67a C
:D E
AbstractTestCaseF V
{ 
public 

class 
	Container 
{ 
public 
double 
containerOne "
;" #
}   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
double$$ 
data$$ 
;$$ 
data%% 
=%% 
double%% 
.%% 
MinValue%% 
;%% 
{'' 	
	WebClient(( 
client(( 
=(( 
new(( "
	WebClient((# ,
(((, -
)((- .
;((. /
StreamReader)) 
sr)) 
=)) 
null)) "
;))" #
try** 
{++ 
sr,, 
=,, 
new,, 
StreamReader,, %
(,,% &
client,,& ,
.,,, -
OpenRead,,- 5
(,,5 6
$str,,6 O
),,O P
),,P Q
;,,Q R
string00 
stringNumber00 #
=00$ %
sr00& (
.00( )
ReadLine00) 1
(001 2
)002 3
;003 4
if11 
(11 
stringNumber11  
!=11! #
null11$ (
)11( )
{22 
try33 
{44 
data55 
=55 
double55 %
.55% &
Parse55& +
(55+ ,
stringNumber55, 8
.558 9
Trim559 =
(55= >
)55> ?
)55? @
;55@ A
}66 
catch77 
(77 
FormatException77 *
exceptNumberFormat77+ =
)77= >
{88 
IO99 
.99 
Logger99 !
.99! "
Log99" %
(99% &
NLog99& *
.99* +
LogLevel99+ 3
.993 4
Warn994 8
,998 9
exceptNumberFormat99: L
,99L M
$str	99N Ä
)
99Ä Å
;
99Å Ç
}:: 
};; 
}<< 
catch== 
(== 
IOException== 
exceptIO== '
)==' (
{>> 
IO?? 
.?? 
Logger?? 
.?? 
Log?? 
(?? 
NLog?? "
.??" #
LogLevel??# +
.??+ ,
Warn??, 0
,??0 1
exceptIO??2 :
,??: ;
$str??< W
)??W X
;??X Y
}@@ 
finallyAA 
{BB 
tryDD 
{EE 
ifFF 
(FF 
srFF 
!=FF 
nullFF "
)FF" #
{GG 
srHH 
.HH 
CloseHH  
(HH  !
)HH! "
;HH" #
}II 
}JJ 
catchKK 
(KK 
IOExceptionKK "
exceptIOKK# +
)KK+ ,
{LL 
IOMM 
.MM 
LoggerMM 
.MM 
LogMM !
(MM! "
NLogMM" &
.MM& '
LogLevelMM' /
.MM/ 0
WarnMM0 4
,MM4 5
exceptIOMM6 >
,MM> ?
$strMM@ \
)MM\ ]
;MM] ^
}NN 
}OO 
}PP 	
	ContainerQQ 
dataContainerQQ 
=QQ  !
newQQ" %
	ContainerQQ& /
(QQ/ 0
)QQ0 1
;QQ1 2
dataContainerRR 
.RR 
containerOneRR "
=RR# $
dataRR% )
;RR) *I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_67bSS E
.SSE F
BadSinkSSF M
(SSM N
dataContainerSSN [
)SS] ^
;SS^ _
}TT 
publicWW 

overrideWW 
voidWW 
GoodWW 
(WW 
)WW 
{XX 
GoodG2BYY 
(YY 
)YY 
;YY 
}ZZ 
private]] 
static]] 
void]] 
GoodG2B]] 
(]]  
)]]  !
{^^ 
double__ 
data__ 
;__ 
dataaa 
=aa 
$numaa 
;aa 
	Containerbb 
dataContainerbb 
=bb  !
newbb" %
	Containerbb& /
(bb/ 0
)bb0 1
;bb1 2
dataContainercc 
.cc 
containerOnecc "
=cc# $
datacc% )
;cc) *I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_67bdd E
.ddE F
GoodG2BSinkddF Q
(ddQ R
dataContainerddR _
)dda b
;ddb c
}ee 
}gg 
}hh É
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_67b C
{ 
public 

static 
void 
BadSink 
( I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_67a \
.\ ]
	Container] f
dataContainerg t
)u v
{ 
double 
data 
= 
dataContainer #
.# $
containerOne$ 0
;0 1
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_67a%%# `
.%%` a
	Container%%a j
dataContainer%%k x
)%%y z
{&& 
double'' 
data'' 
='' 
dataContainer'' #
.''# $
containerOne''$ 0
;''0 1
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// Ü!
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_68a C
:D E
AbstractTestCaseF V
{ 
public 

static 
double 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_68bLL E
.LLE F
BadSinkLLF M
(LLM N
)LLN O
;LLO P
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
staticVV 
voidVV 
GoodG2BVV 
(VV  
)VV  !
{WW 
dataYY 
=YY 
$numYY 
;YY I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_68bZZ E
.ZZE F
GoodG2BSinkZZF Q
(ZZQ R
)ZZR S
;ZZS T
}[[ 
}]] 
}^^ ª
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_68b C
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
double 
data 
= I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_68a S
.S T
dataT X
;X Y
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
double&& 
data&& 
=&& I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_68a&& S
.&&S T
data&&T X
;&&X Y
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
byte)) 
))) 
data)) #
)))# $
;))$ %
}** 	
}++ 
}-- 
}.. õ"
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_71a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_71bLL E
.LLE F
BadSinkLLF M
(LLM N
(LLN O
ObjectLLO U
)LLU V
dataLLV Z
)LL\ ]
;LL] ^
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
staticVV 
voidVV 
GoodG2BVV 
(VV  
)VV  !
{WW 
doubleXX 
dataXX 
;XX 
dataZZ 
=ZZ 
$numZZ 
;ZZ I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_71b[[ E
.[[E F
GoodG2BSink[[F Q
([[Q R
([[R S
Object[[S Y
)[[Y Z
data[[Z ^
)[[` a
;[[a b
}\\ 
}^^ 
}__ œ
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_71b C
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
double 
data 
= 
( 
double 
) 

dataObject (
;( )
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
double(( 
data(( 
=(( 
((( 
double(( 
)(( 

dataObject(( (
;((( )
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ª+
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_72a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	
	HashtableLL 
dataHashtableLL 
=LL  !
newLL" %
	HashtableLL& /
(LL/ 0
$numLL0 1
)LL1 2
;LL2 3
dataHashtableMM 
.MM 
AddMM 
(MM 
$numMM 
,MM 
dataMM !
)MM! "
;MM" #
dataHashtableNN 
.NN 
AddNN 
(NN 
$numNN 
,NN 
dataNN !
)NN! "
;NN" #
dataHashtableOO 
.OO 
AddOO 
(OO 
$numOO 
,OO 
dataOO !
)OO! "
;OO" #I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_72bPP E
.PPE F
BadSinkPPF M
(PPM N
dataHashtablePPN [
)PP] ^
;PP^ _
}QQ 
publicTT 

overrideTT 
voidTT 
GoodTT 
(TT 
)TT 
{UU 
GoodG2BVV 
(VV 
)VV 
;VV 
}WW 
privateZZ 
staticZZ 
voidZZ 
GoodG2BZZ 
(ZZ  
)ZZ  !
{[[ 
double\\ 
data\\ 
;\\ 
data^^ 
=^^ 
$num^^ 
;^^ 
	Hashtable__ 
dataHashtable__ 
=__  !
new__" %
	Hashtable__& /
(__/ 0
$num__0 1
)__1 2
;__2 3
dataHashtable`` 
.`` 
Add`` 
(`` 
$num`` 
,`` 
data`` !
)``! "
;``" #
dataHashtableaa 
.aa 
Addaa 
(aa 
$numaa 
,aa 
dataaa !
)aa! "
;aa" #
dataHashtablebb 
.bb 
Addbb 
(bb 
$numbb 
,bb 
databb !
)bb! "
;bb" #I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_72bcc E
.ccE F
GoodG2BSinkccF Q
(ccQ R
dataHashtableccR _
)cca b
;ccb c
}dd 
}ff 
}gg ¡
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_72b C
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
double 
data 
= 
( 
double 
) 
dataHashtable ,
[, -
$num- .
]. /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
double(( 
data(( 
=(( 
((( 
double(( 
)(( 
dataHashtable(( ,
[((, -
$num((- .
]((. /
;((/ 0
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ø+
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_73a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
	WebClient$$ 
client$$ 
=$$ 
new$$ "
	WebClient$$# ,
($$, -
)$$- .
;$$. /
StreamReader%% 
sr%% 
=%% 
null%% "
;%%" #
try&& 
{'' 
sr(( 
=(( 
new(( 
StreamReader(( %
(((% &
client((& ,
.((, -
OpenRead((- 5
(((5 6
$str((6 O
)((O P
)((P Q
;((Q R
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
double11 %
.11% &
Parse11& +
(11+ ,
stringNumber11, 8
.118 9
Trim119 =
(11= >
)11> ?
)11? @
;11@ A
}22 
catch33 
(33 
FormatException33 *
exceptNumberFormat33+ =
)33= >
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ \
)II\ ]
;II] ^
}JJ 
}KK 
}LL 	

LinkedListMM 
<MM 
doubleMM 
>MM 
dataLinkedListMM )
=MM* +
newMM, /

LinkedListMM0 :
<MM: ;
doubleMM; A
>MMA B
(MMB C
)MMC D
;MMD E
dataLinkedListNN 
.NN 
AddLastNN 
(NN 
dataNN #
)NN# $
;NN$ %
dataLinkedListOO 
.OO 
AddLastOO 
(OO 
dataOO #
)OO# $
;OO$ %
dataLinkedListPP 
.PP 
AddLastPP 
(PP 
dataPP #
)PP# $
;PP$ %I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_73bQQ E
.QQE F
BadSinkQQF M
(QQM N
dataLinkedListQQN \
)QQ^ _
;QQ_ `
}RR 
publicUU 

overrideUU 
voidUU 
GoodUU 
(UU 
)UU 
{VV 
GoodG2BWW 
(WW 
)WW 
;WW 
}XX 
private[[ 
static[[ 
void[[ 
GoodG2B[[ 
([[  
)[[  !
{\\ 
double]] 
data]] 
;]] 
data__ 
=__ 
$num__ 
;__ 

LinkedList`` 
<`` 
double`` 
>`` 
dataLinkedList`` )
=``* +
new``, /

LinkedList``0 :
<``: ;
double``; A
>``A B
(``B C
)``C D
;``D E
dataLinkedListaa 
.aa 
AddLastaa 
(aa 
dataaa #
)aa# $
;aa$ %
dataLinkedListbb 
.bb 
AddLastbb 
(bb 
databb #
)bb# $
;bb$ %
dataLinkedListcc 
.cc 
AddLastcc 
(cc 
datacc #
)cc# $
;cc$ %I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_73bdd E
.ddE F
GoodG2BSinkddF Q
(ddQ R
dataLinkedListddR `
)ddb c
;ddc d
}ee 
}gg 
}hh Ì
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_73b C
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
double* 0
>0 1
dataLinkedList2 @
)A B
{ 
double 
data 
= 
dataLinkedList $
.$ %
Last% )
.) *
Value* /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
double&&. 4
>&&4 5
dataLinkedList&&6 D
)&&E F
{'' 
double(( 
data(( 
=(( 
dataLinkedList(( $
.(($ %
Last((% )
.(() *
Value((* /
;((/ 0
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 Ì-
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_74a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	

DictionaryLL 
<LL 
intLL 
,LL 
doubleLL 
>LL 
dataDictionaryLL -
=LL. /
newLL0 3

DictionaryLL4 >
<LL> ?
intLL? B
,LLB C
doubleLLC I
>LLI J
(LLJ K
)LLK L
;LLL M
dataDictionaryMM 
.MM 
AddMM 
(MM 
$numMM 
,MM 
dataMM "
)MM" #
;MM# $
dataDictionaryNN 
.NN 
AddNN 
(NN 
$numNN 
,NN 
dataNN "
)NN" #
;NN# $
dataDictionaryOO 
.OO 
AddOO 
(OO 
$numOO 
,OO 
dataOO "
)OO" #
;OO# $I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_74bPP E
.PPE F
BadSinkPPF M
(PPM N
dataDictionaryPPN \
)PP^ _
;PP_ `
}QQ 
publicTT 

overrideTT 
voidTT 
GoodTT 
(TT 
)TT 
{UU 
GoodG2BVV 
(VV 
)VV 
;VV 
}WW 
privateZZ 
staticZZ 
voidZZ 
GoodG2BZZ 
(ZZ  
)ZZ  !
{[[ 
double\\ 
data\\ 
;\\ 
data^^ 
=^^ 
$num^^ 
;^^ 

Dictionary__ 
<__ 
int__ 
,__ 
double__ 
>__ 
dataDictionary__ -
=__. /
new__0 3

Dictionary__4 >
<__> ?
int__? B
,__B C
double__C I
>__I J
(__J K
)__K L
;__L M
dataDictionary`` 
.`` 
Add`` 
(`` 
$num`` 
,`` 
data`` "
)``" #
;``# $
dataDictionaryaa 
.aa 
Addaa 
(aa 
$numaa 
,aa 
dataaa "
)aa" #
;aa# $
dataDictionarybb 
.bb 
Addbb 
(bb 
$numbb 
,bb 
databb "
)bb" #
;bb# $I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_74bcc E
.ccE F
GoodG2BSinkccF Q
(ccQ R
dataDictionaryccR `
)ccb c
;ccc d
}dd 
}ff 
}gg á
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_74b C
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
double. 4
>4 5
dataDictionary6 D
)E F
{ 
double 
data 
= 
dataDictionary $
[$ %
$num% &
]& '
;' (
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
double&&2 8
>&&8 9
dataDictionary&&: H
)&&I J
{'' 
double(( 
data(( 
=(( 
dataDictionary(( $
[(($ %
$num((% &
]((& '
;((' (
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 â5
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_75a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
	WebClient$$ 
client$$ 
=$$ 
new$$ "
	WebClient$$# ,
($$, -
)$$- .
;$$. /
StreamReader%% 
sr%% 
=%% 
null%% "
;%%" #
try&& 
{'' 
sr(( 
=(( 
new(( 
StreamReader(( %
(((% &
client((& ,
.((, -
OpenRead((- 5
(((5 6
$str((6 O
)((O P
)((P Q
;((Q R
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
double11 %
.11% &
Parse11& +
(11+ ,
stringNumber11, 8
.118 9
Trim119 =
(11= >
)11> ?
)11? @
;11@ A
}22 
catch33 
(33 
FormatException33 *
exceptNumberFormat33+ =
)33= >
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ \
)II\ ]
;II] ^
}JJ 
}KK 
}LL 	
byteNN 
[NN 
]NN 
dataSerializedNN 
=NN 
nullNN  $
;NN$ %
tryOO 
{PP 	
BinaryFormatterQQ 
bfQQ 
=QQ  
newQQ! $
BinaryFormatterQQ% 4
(QQ4 5
)QQ5 6
;QQ6 7
usingRR 
(RR 
varRR 
msRR 
=RR 
newRR 
MemoryStreamRR  ,
(RR, -
)RR- .
)RR. /
{SS 
bfTT 
.TT 
	SerializeTT 
(TT 
msTT 
,TT  
dataTT! %
)TT% &
;TT& '
dataSerializedUU 
=UU  
msUU! #
.UU# $
ToArrayUU$ +
(UU+ ,
)UU, -
;UU- .
}VV I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_75bWW I
.WWI J
BadSinkWWJ Q
(WWQ R
dataSerializedWWR `
)WWb c
;WWc d
}XX 	
catchYY 
(YY "
SerializationExceptionYY %
exceptSerializeYY& 5
)YY5 6
{ZZ 	
IO[[ 
.[[ 
Logger[[ 
.[[ 
Log[[ 
([[ 
NLog[[ 
.[[ 
LogLevel[[ '
.[[' (
Warn[[( ,
,[[, -
$str[[. X
,[[X Y
exceptSerialize[[Z i
)[[i j
;[[j k
}\\ 	
}]] 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2Bbb 
(bb 
)bb 
;bb 
}cc 
privateff 
staticff 
voidff 
GoodG2Bff 
(ff  
)ff  !
{gg 
doublehh 
datahh 
;hh 
datajj 
=jj 
$numjj 
;jj 
bytell 
[ll 
]ll 
dataSerializedll 
=ll 
nullll  $
;ll$ %
trymm 
{nn 	
BinaryFormatteroo 
bfoo 
=oo  
newoo! $
BinaryFormatteroo% 4
(oo4 5
)oo5 6
;oo6 7
usingpp 
(pp 
varpp 
mspp 
=pp 
newpp 
MemoryStreampp  ,
(pp, -
)pp- .
)pp. /
{qq 
bfrr 
.rr 
	Serializerr 
(rr 
msrr 
,rr  
datarr! %
)rr% &
;rr& '
dataSerializedss 
=ss  
msss! #
.ss# $
ToArrayss$ +
(ss+ ,
)ss, -
;ss- .
}tt I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_75buu I
.uuI J
GoodG2BSinkuuJ U
(uuU V
dataSerializeduuV d
)uuf g
;uug h
}vv 	
catchww 
(ww "
SerializationExceptionww %
exceptSerializeww& 5
)ww5 6
{xx 	
IOyy 
.yy 
Loggeryy 
.yy 
Logyy 
(yy 
NLogyy 
.yy 
LogLevelyy '
.yy' (
Warnyy( ,
,yy, -
$stryy. X
,yyX Y
exceptSerializeyyZ i
)yyi j
;yyj k
}zz 	
}{{ 
}}} 
}~~ Ì!
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_75b C
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
double   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
double&& 
)&& 
binForm&& &
.&&& '
Deserialize&&' 2
(&&2 3
	memStream&&3 <
)&&< =
;&&= >
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** "
)**" #
data**# '
)**' (
;**( )
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
double:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
double@@ 
)@@ 
binForm@@ &
.@@& '
Deserialize@@' 2
(@@2 3
	memStream@@3 <
)@@< =
;@@= >
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
byteDD "
)DD" #
dataDD# '
)DD' (
;DD( )
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN Õ$
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_81a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	M
ACWE197_Numeric_Truncation_Error__double_NetClient_to_byte_81_baseLL I

baseObjectLLJ T
=LLU V
newLLW ZM
@CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_81_bad	LL[ õ
(
LLõ ú
)
LLú ù
;
LLù û

baseObjectMM 
.MM 
ActionMM 
(MM 
dataMM 
)MM  
;MM  !
}NN 
publicQQ 

overrideQQ 
voidQQ 
GoodQQ 
(QQ 
)QQ 
{RR 
GoodG2BSS 
(SS 
)SS 
;SS 
}TT 
privateWW 
voidWW 
GoodG2BWW 
(WW 
)WW 
{XX 
doubleYY 
dataYY 
;YY 
data[[ 
=[[ 
$num[[ 
;[[ M
ACWE197_Numeric_Truncation_Error__double_NetClient_to_byte_81_base\\ I

baseObject\\J T
=\\U V
new\\W ZQ
DCWE197_Numeric_Truncation_Error__double_NetClient_to_byte_81_goodG2B	\\[ ü
(
\\ü †
)
\\† °
;
\\° ¢

baseObject]] 
.]] 
Action]] 
(]] 
data]] 
)]]  
;]]  !
}^^ 
}`` 
}aa ï
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class L
@CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_81_bad F
:G HN
ACWE197_Numeric_Truncation_Error__double_NetClient_to_byte_81_base	I ä
{ 
public 

override 
void 
Action 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" ¸
ƒC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 M
ACWE197_Numeric_Truncation_Error__double_NetClient_to_byte_81_base P
{ 
public 

abstract 
void 
Action 
(  
double  &
data' +
), -
;- .
} 
} ù
«C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class P
DCWE197_Numeric_Truncation_Error__double_NetClient_to_byte_81_goodG2B J
:K LN
ACWE197_Numeric_Truncation_Error__double_NetClient_to_byte_81_base	M é
{ 
public 

override 
void 
Action 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" À!
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_01 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	
{LL 	
IONN 
.NN 
	WriteLineNN 
(NN 
(NN 
floatNN 
)NN  
dataNN  $
)NN$ %
;NN% &
}OO 	
}PP 
publicSS 

overrideSS 
voidSS 
GoodSS 
(SS 
)SS 
{TT 
GoodG2BUU 
(UU 
)UU 
;UU 
}VV 
privateYY 
voidYY 
GoodG2BYY 
(YY 
)YY 
{ZZ 
double[[ 
data[[ 
;[[ 
data]] 
=]] 
$num]] 
;]] 
{^^ 	
IO`` 
.`` 
	WriteLine`` 
(`` 
(`` 
float`` 
)``  
data``  $
)``$ %
;``% &
}aa 	
}bb 
}dd 
}ee Û*
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_02 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
true   
)   
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
floatWW 
)WW  
dataWW  $
)WW$ %
;WW% &
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
false`` 
)`` 
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
floatmm 
)mm  
datamm  $
)mm$ %
;mm% &
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
trueuu 
)uu 
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
float
ÇÇ 
)
ÇÇ  
data
ÇÇ  $
)
ÇÇ$ %
;
ÇÇ% &
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç ÿ+
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_03 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
$num   
==   
$num   
)   
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
floatWW 
)WW  
dataWW  $
)WW$ %
;WW% &
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
$num`` 
!=`` 
$num`` 
)`` 
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
floatmm 
)mm  
datamm  $
)mm$ %
;mm% &
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
$numuu 
==uu 
$numuu 
)uu 
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
float
ÇÇ 
)
ÇÇ  
data
ÇÇ  $
)
ÇÇ$ %
;
ÇÇ% &
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç √-
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_04 C
:D E
AbstractTestCaseF V
{ 
private   
const   
bool   
PRIVATE_CONST_TRUE   )
=  * +
true  , 0
;  0 1
private!! 
const!! 
bool!! 
PRIVATE_CONST_FALSE!! *
=!!+ ,
false!!- 2
;!!2 3
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
double&& 
data&& 
;&& 
if'' 

('' 
PRIVATE_CONST_TRUE'' 
)'' 
{(( 	
data)) 
=)) 
double)) 
.)) 
MinValue)) "
;))" #
{++ 
	WebClient,, 
client,,  
=,,! "
new,,# &
	WebClient,,' 0
(,,0 1
),,1 2
;,,2 3
StreamReader-- 
sr-- 
=--  !
null--" &
;--& '
try.. 
{// 
sr00 
=00 
new00 
StreamReader00 )
(00) *
client00* 0
.000 1
OpenRead001 9
(009 :
$str00: S
)00S T
)00T U
;00U V
string44 
stringNumber44 '
=44( )
sr44* ,
.44, -
ReadLine44- 5
(445 6
)446 7
;447 8
if55 
(55 
stringNumber55 $
!=55% '
null55( ,
)55, -
{66 
try77 
{88 
data99  
=99! "
double99# )
.99) *
Parse99* /
(99/ 0
stringNumber990 <
.99< =
Trim99= A
(99A B
)99B C
)99C D
;99D E
}:: 
catch;; 
(;; 
FormatException;; .
exceptNumberFormat;;/ A
);;A B
{<< 
IO== 
.== 
Logger== %
.==% &
Log==& )
(==) *
NLog==* .
.==. /
LogLevel==/ 7
.==7 8
Warn==8 <
,==< =
exceptNumberFormat==> P
,==P Q
$str	==R Ñ
)
==Ñ Ö
;
==Ö Ü
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryHH 
{II 
ifJJ 
(JJ 
srJJ 
!=JJ !
nullJJ" &
)JJ& '
{KK 
srLL 
.LL 
CloseLL $
(LL$ %
)LL% &
;LL& '
}MM 
}NN 
catchOO 
(OO 
IOExceptionOO &
exceptIOOO' /
)OO/ 0
{PP 
IOQQ 
.QQ 
LoggerQQ !
.QQ! "
LogQQ" %
(QQ% &
NLogQQ& *
.QQ* +
LogLevelQQ+ 3
.QQ3 4
WarnQQ4 8
,QQ8 9
exceptIOQQ: B
,QQB C
$strQQD `
)QQ` a
;QQa b
}RR 
}SS 
}TT 
}UU 	
elseVV 
{WW 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
{\\ 	
IO^^ 
.^^ 
	WriteLine^^ 
(^^ 
(^^ 
float^^ 
)^^  
data^^  $
)^^$ %
;^^% &
}__ 	
}`` 
privatedd 
voiddd 
GoodG2B1dd 
(dd 
)dd 
{ee 
doubleff 
dataff 
;ff 
ifgg 

(gg 
PRIVATE_CONST_FALSEgg 
)gg  
{hh 	
datakk 
=kk 
$numkk 
;kk 
}ll 	
elsemm 
{nn 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
floattt 
)tt  
datatt  $
)tt$ %
;tt% &
}uu 	
}vv 
privateyy 
voidyy 
GoodG2B2yy 
(yy 
)yy 
{zz 
double{{ 
data{{ 
;{{ 
if|| 

(|| 
PRIVATE_CONST_TRUE|| 
)|| 
{}} 	
data 
= 
$num 
; 
}
ÄÄ 	
else
ÅÅ 
{
ÇÇ 	
data
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
{
áá 	
IO
ââ 
.
ââ 
	WriteLine
ââ 
(
ââ 
(
ââ 
float
ââ 
)
ââ  
data
ââ  $
)
ââ$ %
;
ââ% &
}
ää 	
}
ãã 
public
çç 

override
çç 
void
çç 
Good
çç 
(
çç 
)
çç 
{
éé 
GoodG2B1
èè 
(
èè 
)
èè 
;
èè 
GoodG2B2
êê 
(
êê 
)
êê 
;
êê 
}
ëë 
}ìì 
}îî ˙,
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_05 C
:D E
AbstractTestCaseF V
{ 
private   
bool   
privateTrue   
=   
true   #
;  # $
private!! 
bool!! 
privateFalse!! 
=!! 
false!!  %
;!!% &
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
double&& 
data&& 
;&& 
if'' 

('' 
privateTrue'' 
)'' 
{(( 	
data)) 
=)) 
double)) 
.)) 
MinValue)) "
;))" #
{++ 
	WebClient,, 
client,,  
=,,! "
new,,# &
	WebClient,,' 0
(,,0 1
),,1 2
;,,2 3
StreamReader-- 
sr-- 
=--  !
null--" &
;--& '
try.. 
{// 
sr00 
=00 
new00 
StreamReader00 )
(00) *
client00* 0
.000 1
OpenRead001 9
(009 :
$str00: S
)00S T
)00T U
;00U V
string44 
stringNumber44 '
=44( )
sr44* ,
.44, -
ReadLine44- 5
(445 6
)446 7
;447 8
if55 
(55 
stringNumber55 $
!=55% '
null55( ,
)55, -
{66 
try77 
{88 
data99  
=99! "
double99# )
.99) *
Parse99* /
(99/ 0
stringNumber990 <
.99< =
Trim99= A
(99A B
)99B C
)99C D
;99D E
}:: 
catch;; 
(;; 
FormatException;; .
exceptNumberFormat;;/ A
);;A B
{<< 
IO== 
.== 
Logger== %
.==% &
Log==& )
(==) *
NLog==* .
.==. /
LogLevel==/ 7
.==7 8
Warn==8 <
,==< =
exceptNumberFormat==> P
,==P Q
$str	==R Ñ
)
==Ñ Ö
;
==Ö Ü
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryHH 
{II 
ifJJ 
(JJ 
srJJ 
!=JJ !
nullJJ" &
)JJ& '
{KK 
srLL 
.LL 
CloseLL $
(LL$ %
)LL% &
;LL& '
}MM 
}NN 
catchOO 
(OO 
IOExceptionOO &
exceptIOOO' /
)OO/ 0
{PP 
IOQQ 
.QQ 
LoggerQQ !
.QQ! "
LogQQ" %
(QQ% &
NLogQQ& *
.QQ* +
LogLevelQQ+ 3
.QQ3 4
WarnQQ4 8
,QQ8 9
exceptIOQQ: B
,QQB C
$strQQD `
)QQ` a
;QQa b
}RR 
}SS 
}TT 
}UU 	
elseVV 
{WW 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
{\\ 	
IO^^ 
.^^ 
	WriteLine^^ 
(^^ 
(^^ 
float^^ 
)^^  
data^^  $
)^^$ %
;^^% &
}__ 	
}`` 
privatedd 
voiddd 
GoodG2B1dd 
(dd 
)dd 
{ee 
doubleff 
dataff 
;ff 
ifgg 

(gg 
privateFalsegg 
)gg 
{hh 	
datakk 
=kk 
$numkk 
;kk 
}ll 	
elsemm 
{nn 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
floattt 
)tt  
datatt  $
)tt$ %
;tt% &
}uu 	
}vv 
privateyy 
voidyy 
GoodG2B2yy 
(yy 
)yy 
{zz 
double{{ 
data{{ 
;{{ 
if|| 

(|| 
privateTrue|| 
)|| 
{}} 	
data 
= 
$num 
; 
}
ÄÄ 	
else
ÅÅ 
{
ÇÇ 	
data
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
{
áá 	
IO
ââ 
.
ââ 
	WriteLine
ââ 
(
ââ 
(
ââ 
float
ââ 
)
ââ  
data
ââ  $
)
ââ$ %
;
ââ% &
}
ää 	
}
ãã 
public
çç 

override
çç 
void
çç 
Good
çç 
(
çç 
)
çç 
{
éé 
GoodG2B1
èè 
(
èè 
)
èè 
;
èè 
GoodG2B2
êê 
(
êê 
)
êê 
;
êê 
}
ëë 
}ìì 
}îî ô-
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_06 C
:D E
AbstractTestCaseF V
{ 
private   
const   
int   
PRIVATE_CONST_FIVE   (
=  ) *
$num  + ,
;  , -
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
double%% 
data%% 
;%% 
if&& 

(&& 
PRIVATE_CONST_FIVE&& 
==&& !
$num&&" #
)&&# $
{'' 	
data(( 
=(( 
double(( 
.(( 
MinValue(( "
;((" #
{** 
	WebClient++ 
client++  
=++! "
new++# &
	WebClient++' 0
(++0 1
)++1 2
;++2 3
StreamReader,, 
sr,, 
=,,  !
null,," &
;,,& '
try-- 
{.. 
sr// 
=// 
new// 
StreamReader// )
(//) *
client//* 0
.//0 1
OpenRead//1 9
(//9 :
$str//: S
)//S T
)//T U
;//U V
string33 
stringNumber33 '
=33( )
sr33* ,
.33, -
ReadLine33- 5
(335 6
)336 7
;337 8
if44 
(44 
stringNumber44 $
!=44% '
null44( ,
)44, -
{55 
try66 
{77 
data88  
=88! "
double88# )
.88) *
Parse88* /
(88/ 0
stringNumber880 <
.88< =
Trim88= A
(88A B
)88B C
)88C D
;88D E
}99 
catch:: 
(:: 
FormatException:: .
exceptNumberFormat::/ A
)::A B
{;; 
IO<< 
.<< 
Logger<< %
.<<% &
Log<<& )
(<<) *
NLog<<* .
.<<. /
LogLevel<</ 7
.<<7 8
Warn<<8 <
,<<< =
exceptNumberFormat<<> P
,<<P Q
$str	<<R Ñ
)
<<Ñ Ö
;
<<Ö Ü
}== 
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ "
exceptIO@@# +
)@@+ ,
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB !
(BB! "
NLogBB" &
.BB& '
LogLevelBB' /
.BB/ 0
WarnBB0 4
,BB4 5
exceptIOBB6 >
,BB> ?
$strBB@ [
)BB[ \
;BB\ ]
}CC 
finallyDD 
{EE 
tryGG 
{HH 
ifII 
(II 
srII 
!=II !
nullII" &
)II& '
{JJ 
srKK 
.KK 
CloseKK $
(KK$ %
)KK% &
;KK& '
}LL 
}MM 
catchNN 
(NN 
IOExceptionNN &
exceptIONN' /
)NN/ 0
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
exceptIOPP: B
,PPB C
$strPPD `
)PP` a
;PPa b
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
float]] 
)]]  
data]]  $
)]]$ %
;]]% &
}^^ 	
}__ 
privatecc 
voidcc 
GoodG2B1cc 
(cc 
)cc 
{dd 
doubleee 
dataee 
;ee 
ifff 

(ff 
PRIVATE_CONST_FIVEff 
!=ff !
$numff" #
)ff# $
{gg 	
datajj 
=jj 
$numjj 
;jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
floatss 
)ss  
datass  $
)ss$ %
;ss% &
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
)xx 
{yy 
doublezz 
datazz 
;zz 
if{{ 

({{ 
PRIVATE_CONST_FIVE{{ 
=={{ !
$num{{" #
){{# $
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
else
ÄÄ 
{
ÅÅ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
{
ÜÜ 	
IO
àà 
.
àà 
	WriteLine
àà 
(
àà 
(
àà 
float
àà 
)
àà  
data
àà  $
)
àà$ %
;
àà% &
}
ââ 	
}
ää 
public
åå 

override
åå 
void
åå 
Good
åå 
(
åå 
)
åå 
{
çç 
GoodG2B1
éé 
(
éé 
)
éé 
;
éé 
GoodG2B2
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì Í,
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_07 C
:D E
AbstractTestCaseF V
{ 
private   
int   
privateFive   
=   
$num   
;    
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
double%% 
data%% 
;%% 
if&& 

(&& 
privateFive&& 
==&& 
$num&& 
)&& 
{'' 	
data(( 
=(( 
double(( 
.(( 
MinValue(( "
;((" #
{** 
	WebClient++ 
client++  
=++! "
new++# &
	WebClient++' 0
(++0 1
)++1 2
;++2 3
StreamReader,, 
sr,, 
=,,  !
null,," &
;,,& '
try-- 
{.. 
sr// 
=// 
new// 
StreamReader// )
(//) *
client//* 0
.//0 1
OpenRead//1 9
(//9 :
$str//: S
)//S T
)//T U
;//U V
string33 
stringNumber33 '
=33( )
sr33* ,
.33, -
ReadLine33- 5
(335 6
)336 7
;337 8
if44 
(44 
stringNumber44 $
!=44% '
null44( ,
)44, -
{55 
try66 
{77 
data88  
=88! "
double88# )
.88) *
Parse88* /
(88/ 0
stringNumber880 <
.88< =
Trim88= A
(88A B
)88B C
)88C D
;88D E
}99 
catch:: 
(:: 
FormatException:: .
exceptNumberFormat::/ A
)::A B
{;; 
IO<< 
.<< 
Logger<< %
.<<% &
Log<<& )
(<<) *
NLog<<* .
.<<. /
LogLevel<</ 7
.<<7 8
Warn<<8 <
,<<< =
exceptNumberFormat<<> P
,<<P Q
$str	<<R Ñ
)
<<Ñ Ö
;
<<Ö Ü
}== 
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ "
exceptIO@@# +
)@@+ ,
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB !
(BB! "
NLogBB" &
.BB& '
LogLevelBB' /
.BB/ 0
WarnBB0 4
,BB4 5
exceptIOBB6 >
,BB> ?
$strBB@ [
)BB[ \
;BB\ ]
}CC 
finallyDD 
{EE 
tryGG 
{HH 
ifII 
(II 
srII 
!=II !
nullII" &
)II& '
{JJ 
srKK 
.KK 
CloseKK $
(KK$ %
)KK% &
;KK& '
}LL 
}MM 
catchNN 
(NN 
IOExceptionNN &
exceptIONN' /
)NN/ 0
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
exceptIOPP: B
,PPB C
$strPPD `
)PP` a
;PPa b
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
float]] 
)]]  
data]]  $
)]]$ %
;]]% &
}^^ 	
}__ 
privatecc 
voidcc 
GoodG2B1cc 
(cc 
)cc 
{dd 
doubleee 
dataee 
;ee 
ifff 

(ff 
privateFiveff 
!=ff 
$numff 
)ff 
{gg 	
datajj 
=jj 
$numjj 
;jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
floatss 
)ss  
datass  $
)ss$ %
;ss% &
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
)xx 
{yy 
doublezz 
datazz 
;zz 
if{{ 

({{ 
privateFive{{ 
=={{ 
$num{{ 
){{ 
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
else
ÄÄ 
{
ÅÅ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
{
ÜÜ 	
IO
àà 
.
àà 
	WriteLine
àà 
(
àà 
(
àà 
float
àà 
)
àà  
data
àà  $
)
àà$ %
;
àà% &
}
ââ 	
}
ää 
public
åå 

override
åå 
void
åå 
Good
åå 
(
åå 
)
åå 
{
çç 
GoodG2B1
éé 
(
éé 
)
éé 
;
éé 
GoodG2B2
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì …/
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_08 C
:D E
AbstractTestCaseF V
{ 
private   
static   
bool   
PrivateReturnsTrue   *
(  * +
)  + ,
{!! 
return"" 
true"" 
;"" 
}## 
private%% 
static%% 
bool%% 
PrivateReturnsFalse%% +
(%%+ ,
)%%, -
{&& 
return'' 
false'' 
;'' 
}(( 
public++ 

override++ 
void++ 
Bad++ 
(++ 
)++ 
{,, 
double-- 
data-- 
;-- 
if.. 

(.. 
PrivateReturnsTrue.. 
(.. 
)..  
)..  !
{// 	
data00 
=00 
double00 
.00 
MinValue00 "
;00" #
{22 
	WebClient33 
client33  
=33! "
new33# &
	WebClient33' 0
(330 1
)331 2
;332 3
StreamReader44 
sr44 
=44  !
null44" &
;44& '
try55 
{66 
sr77 
=77 
new77 
StreamReader77 )
(77) *
client77* 0
.770 1
OpenRead771 9
(779 :
$str77: S
)77S T
)77T U
;77U V
string;; 
stringNumber;; '
=;;( )
sr;;* ,
.;;, -
ReadLine;;- 5
(;;5 6
);;6 7
;;;7 8
if<< 
(<< 
stringNumber<< $
!=<<% '
null<<( ,
)<<, -
{== 
try>> 
{?? 
data@@  
=@@! "
double@@# )
.@@) *
Parse@@* /
(@@/ 0
stringNumber@@0 <
.@@< =
Trim@@= A
(@@A B
)@@B C
)@@C D
;@@D E
}AA 
catchBB 
(BB 
FormatExceptionBB .
exceptNumberFormatBB/ A
)BBA B
{CC 
IODD 
.DD 
LoggerDD %
.DD% &
LogDD& )
(DD) *
NLogDD* .
.DD. /
LogLevelDD/ 7
.DD7 8
WarnDD8 <
,DD< =
exceptNumberFormatDD> P
,DDP Q
$str	DDR Ñ
)
DDÑ Ö
;
DDÖ Ü
}EE 
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH "
exceptIOHH# +
)HH+ ,
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ !
(JJ! "
NLogJJ" &
.JJ& '
LogLevelJJ' /
.JJ/ 0
WarnJJ0 4
,JJ4 5
exceptIOJJ6 >
,JJ> ?
$strJJ@ [
)JJ[ \
;JJ\ ]
}KK 
finallyLL 
{MM 
tryOO 
{PP 
ifQQ 
(QQ 
srQQ 
!=QQ !
nullQQ" &
)QQ& '
{RR 
srSS 
.SS 
CloseSS $
(SS$ %
)SS% &
;SS& '
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD `
)XX` a
;XXa b
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
floatee 
)ee  
dataee  $
)ee$ %
;ee% &
}ff 	
}gg 
privatekk 
voidkk 
GoodG2B1kk 
(kk 
)kk 
{ll 
doublemm 
datamm 
;mm 
ifnn 

(nn 
PrivateReturnsFalsenn 
(nn  
)nn  !
)nn! "
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
float{{ 
){{  
data{{  $
){{$ %
;{{% &
}|| 	
}}} 
private
ÄÄ 
void
ÄÄ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
double
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ  
PrivateReturnsTrue
ÉÉ 
(
ÉÉ 
)
ÉÉ  
)
ÉÉ  !
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
else
àà 
{
ââ 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
float
êê 
)
êê  
data
êê  $
)
êê$ %
;
êê% &
}
ëë 	
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
)
îî 
{
ïï 
GoodG2B1
ññ 
(
ññ 
)
ññ 
;
ññ 
GoodG2B2
óó 
(
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ Ä,
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_09 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.    
STATIC_READONLY_TRUE   #
)  # $
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
floatWW 
)WW  
dataWW  $
)WW$ %
;WW% &
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` !
STATIC_READONLY_FALSE`` $
)``$ %
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
floatmm 
)mm  
datamm  $
)mm$ %
;mm% &
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
IOuu 
.uu  
STATIC_READONLY_TRUEuu #
)uu# $
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
float
ÇÇ 
)
ÇÇ  
data
ÇÇ  $
)
ÇÇ$ %
;
ÇÇ% &
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç ‚+
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_10 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.   

staticTrue   
)   
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
floatWW 
)WW  
dataWW  $
)WW$ %
;WW% &
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` 
staticFalse`` 
)`` 
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
floatmm 
)mm  
datamm  $
)mm$ %
;mm% &
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
IOuu 
.uu 

staticTrueuu 
)uu 
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
float
ÇÇ 
)
ÇÇ  
data
ÇÇ  $
)
ÇÇ$ %
;
ÇÇ% &
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç —,
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_11 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.   
StaticReturnsTrue    
(    !
)  ! "
)  " #
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
floatWW 
)WW  
dataWW  $
)WW$ %
;WW% &
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` 
StaticReturnsFalse`` !
(``! "
)``" #
)``# $
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
floatmm 
)mm  
datamm  $
)mm$ %
;mm% &
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
IOuu 
.uu 
StaticReturnsTrueuu  
(uu  !
)uu! "
)uu" #
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
float
ÇÇ 
)
ÇÇ  
data
ÇÇ  $
)
ÇÇ$ %
;
ÇÇ% &
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç ç&
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_12 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.   $
StaticReturnsTrueOrFalse   '
(  ' (
)  ( )
)  ) *
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
{TT 	
IOVV 
.VV 
	WriteLineVV 
(VV 
(VV 
floatVV 
)VV  
dataVV  $
)VV$ %
;VV% &
}WW 	
}XX 
private]] 
void]] 
GoodG2B]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` $
StaticReturnsTrueOrFalse`` '
(``' (
)``( )
)``) *
{aa 	
datacc 
=cc 
$numcc 
;cc 
}dd 	
elseee 
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
{jj 	
IOll 
.ll 
	WriteLinell 
(ll 
(ll 
floatll 
)ll  
datall  $
)ll$ %
;ll% &
}mm 	
}nn 
publicpp 

overridepp 
voidpp 
Goodpp 
(pp 
)pp 
{qq 
GoodG2Brr 
(rr 
)rr 
;rr 
}ss 
}uu 
}vv Â,
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_13 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.    
STATIC_READONLY_FIVE   #
==  $ &
$num  ' (
)  ( )
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
floatWW 
)WW  
dataWW  $
)WW$ %
;WW% &
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.``  
STATIC_READONLY_FIVE`` #
!=``$ &
$num``' (
)``( )
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
floatmm 
)mm  
datamm  $
)mm$ %
;mm% &
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
IOuu 
.uu  
STATIC_READONLY_FIVEuu #
==uu$ &
$numuu' (
)uu( )
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
float
ÇÇ 
)
ÇÇ  
data
ÇÇ  $
)
ÇÇ$ %
;
ÇÇ% &
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç «,
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_14 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.   

staticFive   
==   
$num   
)   
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
floatWW 
)WW  
dataWW  $
)WW$ %
;WW% &
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` 

staticFive`` 
!=`` 
$num`` 
)`` 
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
floatmm 
)mm  
datamm  $
)mm$ %
;mm% &
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
IOuu 
.uu 

staticFiveuu 
==uu 
$numuu 
)uu 
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
float
ÇÇ 
)
ÇÇ  
data
ÇÇ  $
)
ÇÇ$ %
;
ÇÇ% &
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç ∞.
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_15 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
= 
$num 
; 
switch   
(   
$num   
)   
{!! 	
case"" 
$num"" 
:"" 
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
	WebClient&& 
client&&  
=&&! "
new&&# &
	WebClient&&' 0
(&&0 1
)&&1 2
;&&2 3
StreamReader'' 
sr'' 
=''  !
null''" &
;''& '
try(( 
{)) 
sr** 
=** 
new** 
StreamReader** )
(**) *
client*** 0
.**0 1
OpenRead**1 9
(**9 :
$str**: S
)**S T
)**T U
;**U V
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
double33# )
.33) *
Parse33* /
(33/ 0
stringNumber330 <
.33< =
Trim33= A
(33A B
)33B C
)33C D
;33D E
}44 
catch55 
(55 
FormatException55 .
exceptNumberFormat55/ A
)55A B
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD `
)KK` a
;KKa b
}LL 
}MM 
}NN 
breakOO 
;OO 
defaultPP 
:PP 
dataSS 
=SS 
$numSS 
;SS 
breakTT 
;TT 
}UU 	
{VV 	
IOXX 
.XX 
	WriteLineXX 
(XX 
(XX 
floatXX 
)XX  
dataXX  $
)XX$ %
;XX% &
}YY 	
}ZZ 
private^^ 
void^^ 
GoodG2B1^^ 
(^^ 
)^^ 
{__ 
double`` 
data`` 
=`` 
$num`` 
;`` 
switchaa 
(aa 
$numaa 
)aa 
{bb 	
casecc 
$numcc 
:cc 
dataff 
=ff 
$numff 
;ff 
breakgg 
;gg 
defaulthh 
:hh 
datajj 
=jj 
$numjj 
;jj 
breakkk 
;kk 
}ll 	
{mm 	
IOoo 
.oo 
	WriteLineoo 
(oo 
(oo 
floatoo 
)oo  
dataoo  $
)oo$ %
;oo% &
}pp 	
}qq 
privatett 
voidtt 
GoodG2B2tt 
(tt 
)tt 
{uu 
doublevv 
datavv 
=vv 
$numvv 
;vv 
switchww 
(ww 
$numww 
)ww 
{xx 	
caseyy 
$numyy 
:yy 
data{{ 
={{ 
$num{{ 
;{{ 
break|| 
;|| 
default}} 
:}} 
data
ÄÄ 
=
ÄÄ 
$num
ÄÄ 
;
ÄÄ 
break
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
{
ÉÉ 	
IO
ÖÖ 
.
ÖÖ 
	WriteLine
ÖÖ 
(
ÖÖ 
(
ÖÖ 
float
ÖÖ 
)
ÖÖ  
data
ÖÖ  $
)
ÖÖ$ %
;
ÖÖ% &
}
ÜÜ 	
}
áá 
public
ââ 

override
ââ 
void
ââ 
Good
ââ 
(
ââ 
)
ââ 
{
ää 
GoodG2B1
ãã 
(
ãã 
)
ãã 
;
ãã 
GoodG2B2
åå 
(
åå 
)
åå 
;
åå 
}
çç 
}èè 
}êê —#
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_16 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
while   
(   
true   
)   
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
breakNN 
;NN 
}OO 	
{PP 	
IORR 
.RR 
	WriteLineRR 
(RR 
(RR 
floatRR 
)RR  
dataRR  $
)RR$ %
;RR% &
}SS 	
}TT 
privateXX 
voidXX 
GoodG2BXX 
(XX 
)XX 
{YY 
doubleZZ 
dataZZ 
;ZZ 
while[[ 
([[ 
true[[ 
)[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
break__ 
;__ 
}`` 	
{aa 	
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
floatcc 
)cc  
datacc  $
)cc$ %
;cc% &
}dd 	
}ee 
publicgg 

overridegg 
voidgg 
Goodgg 
(gg 
)gg 
{hh 
GoodG2Bii 
(ii 
)ii 
;ii 
}jj 
}ll 
}mm ¡%
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_17 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	
forLL 
(LL 
intLL 
iLL 
=LL 
$numLL 
;LL 
iLL 
<LL 
$numLL 
;LL 
iLL  
++LL  "
)LL" #
{MM 	
{NN 
IOPP 
.PP 
	WriteLinePP 
(PP 
(PP 
floatPP #
)PP# $
dataPP$ (
)PP( )
;PP) *
}QQ 
}RR 	
}SS 
privateXX 
voidXX 
GoodG2BXX 
(XX 
)XX 
{YY 
doubleZZ 
dataZZ 
;ZZ 
data\\ 
=\\ 
$num\\ 
;\\ 
for]] 
(]] 
int]] 
i]] 
=]] 
$num]] 
;]] 
i]] 
<]] 
$num]] 
;]] 
i]]  
++]]  "
)]]" #
{^^ 	
{__ 
IOaa 
.aa 
	WriteLineaa 
(aa 
(aa 
floataa #
)aa# $
dataaa$ (
)aa( )
;aa) *
}bb 
}cc 	
}dd 
publicff 

overrideff 
voidff 
Goodff 
(ff 
)ff 
{gg 
GoodG2Bhh 
(hh 
)hh 
;hh 
}ii 
}kk 
}ll ˆ8
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_21 C
:D E
AbstractTestCaseF V
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public   

override   
void   
Bad   
(   
)   
{!! 
double"" 
data"" 
;"" 

badPrivate## 
=## 
true## 
;## 
data$$ 
=$$ 

Bad_source$$ 
($$ 
)$$ 
;$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
float'' 
)''  
data''  $
)''$ %
;''% &
}(( 	
})) 
private++ 
double++ 

Bad_source++ 
(++ 
)++ 
{,, 
double-- 
data-- 
;-- 
if.. 

(.. 

badPrivate.. 
).. 
{// 	
data00 
=00 
double00 
.00 
MinValue00 "
;00" #
{22 
	WebClient33 
client33  
=33! "
new33# &
	WebClient33' 0
(330 1
)331 2
;332 3
StreamReader44 
sr44 
=44  !
null44" &
;44& '
try55 
{66 
sr77 
=77 
new77 
StreamReader77 )
(77) *
client77* 0
.770 1
OpenRead771 9
(779 :
$str77: S
)77S T
)77T U
;77U V
string;; 
stringNumber;; '
=;;( )
sr;;* ,
.;;, -
ReadLine;;- 5
(;;5 6
);;6 7
;;;7 8
if<< 
(<< 
stringNumber<< $
!=<<% '
null<<( ,
)<<, -
{== 
try>> 
{?? 
data@@  
=@@! "
double@@# )
.@@) *
Parse@@* /
(@@/ 0
stringNumber@@0 <
.@@< =
Trim@@= A
(@@A B
)@@B C
)@@C D
;@@D E
}AA 
catchBB 
(BB 
FormatExceptionBB .
exceptNumberFormatBB/ A
)BBA B
{CC 
IODD 
.DD 
LoggerDD %
.DD% &
LogDD& )
(DD) *
NLogDD* .
.DD. /
LogLevelDD/ 7
.DD7 8
WarnDD8 <
,DD< =
exceptNumberFormatDD> P
,DDP Q
$str	DDR Ñ
)
DDÑ Ö
;
DDÖ Ü
}EE 
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH "
exceptIOHH# +
)HH+ ,
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ !
(JJ! "
NLogJJ" &
.JJ& '
LogLevelJJ' /
.JJ/ 0
WarnJJ0 4
,JJ4 5
exceptIOJJ6 >
,JJ> ?
$strJJ@ [
)JJ[ \
;JJ\ ]
}KK 
finallyLL 
{MM 
tryOO 
{PP 
ifQQ 
(QQ 
srQQ 
!=QQ !
nullQQ" &
)QQ& '
{RR 
srSS 
.SS 
CloseSS $
(SS$ %
)SS% &
;SS& '
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD `
)XX` a
;XXa b
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
returncc 
datacc 
;cc 
}dd 
privategg 
boolgg 
goodG2B1_privategg !
=gg" #
falsegg$ )
;gg) *
privatehh 
boolhh 
GoodG2B2_privatehh !
=hh" #
falsehh$ )
;hh) *
publicjj 

overridejj 
voidjj 
Goodjj 
(jj 
)jj 
{kk 
GoodG2B1ll 
(ll 
)ll 
;ll 
GoodG2B2mm 
(mm 
)mm 
;mm 
}nn 
privateqq 
voidqq 
GoodG2B1qq 
(qq 
)qq 
{rr 
doubless 
datass 
;ss 
goodG2B1_privatett 
=tt 
falsett  
;tt  !
datauu 
=uu 
GoodG2B1_sourceuu 
(uu 
)uu  
;uu  !
{vv 	
IOxx 
.xx 
	WriteLinexx 
(xx 
(xx 
floatxx 
)xx  
dataxx  $
)xx$ %
;xx% &
}yy 	
}zz 
private|| 
double|| 
GoodG2B1_source|| "
(||" #
)||# $
{}} 
double~~ 
data~~ 
=~~ 
$num~~ 
;~~ 
if 

( 
goodG2B1_private 
) 
{
ÄÄ 	
data
ÉÉ 
=
ÉÉ 
$num
ÉÉ 
;
ÉÉ 
}
ÑÑ 	
else
ÖÖ 
{
ÜÜ 	
data
àà 
=
àà 
$num
àà 
;
àà 
}
ââ 	
return
ää 
data
ää 
;
ää 
}
ãã 
private
éé 
void
éé 
GoodG2B2
éé 
(
éé 
)
éé 
{
èè 
double
êê 
data
êê 
;
êê 
GoodG2B2_private
ëë 
=
ëë 
true
ëë 
;
ëë  
data
íí 
=
íí 
GoodG2B2_source
íí 
(
íí 
)
íí  
;
íí  !
{
ìì 	
IO
ïï 
.
ïï 
	WriteLine
ïï 
(
ïï 
(
ïï 
float
ïï 
)
ïï  
data
ïï  $
)
ïï$ %
;
ïï% &
}
ññ 	
}
óó 
private
ôô 
double
ôô 
GoodG2B2_source
ôô "
(
ôô" #
)
ôô# $
{
öö 
double
õõ 
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
if
úú 

(
úú 
GoodG2B2_private
úú 
)
úú 
{
ùù 	
data
üü 
=
üü 
$num
üü 
;
üü 
}
†† 	
else
°° 
{
¢¢ 	
data
•• 
=
•• 
$num
•• 
;
•• 
}
¶¶ 	
return
ßß 
data
ßß 
;
ßß 
}
®® 
}™™ 
}´´ æ
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_22a D
:E F
AbstractTestCaseG W
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_22b!! M
.!!M N
	BadSource!!N W
(!!W X
)!!X Y
;!!Y Z
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
float$$ 
)$$  
data$$  $
)$$$ %
;$$% &
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
double66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_22b88 M
.88M N
GoodG2B1Source88N \
(88\ ]
)88] ^
;88^ _
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
float;; 
);;  
data;;  $
);;$ %
;;;% &
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
doubleBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_22bDD M
.DDM N
GoodG2B2SourceDDN \
(DD\ ]
)DD] ^
;DD^ _
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
floatGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
}KK 
}LL ƒ'
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_22b D
{ 
public 

static 
double 
	BadSource "
(" #
)# $
{ 
double 
data 
; 
if   

(   J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_22a   J
.  J K
badPublicStatic  K Z
)  Z [
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
returnUU 
dataUU 
;UU 
}VV 
public[[ 

static[[ 
double[[ 
GoodG2B1Source[[ '
([[' (
)[[( )
{\\ 
double]] 
data]] 
;]] 
if^^ 

(^^ J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_22a^^ J
.^^J K 
goodG2B1PublicStatic^^K _
)^^_ `
{__ 	
databb 
=bb 
$numbb 
;bb 
}cc 	
elsedd 
{ee 	
datagg 
=gg 
$numgg 
;gg 
}hh 	
returnii 
dataii 
;ii 
}jj 
publicmm 

staticmm 
doublemm 
GoodG2B2Sourcemm '
(mm' (
)mm( )
{nn 
doubleoo 
dataoo 
;oo 
ifpp 

(pp J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_22app J
.ppJ K 
GoodG2B2PublicStaticppK _
)pp_ `
{qq 	
datass 
=ss 
$numss 
;ss 
}tt 	
elseuu 
{vv 	
datayy 
=yy 
$numyy 
;yy 
}zz 	
return{{ 
data{{ 
;{{ 
}|| 
}~~ 
} ı%
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_31 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
dataCopy   
;   
{!! 	
double"" 
data"" 
;"" 
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
	WebClient&& 
client&&  
=&&! "
new&&# &
	WebClient&&' 0
(&&0 1
)&&1 2
;&&2 3
StreamReader'' 
sr'' 
=''  !
null''" &
;''& '
try(( 
{)) 
sr** 
=** 
new** 
StreamReader** )
(**) *
client*** 0
.**0 1
OpenRead**1 9
(**9 :
$str**: S
)**S T
)**T U
;**U V
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
double33# )
.33) *
Parse33* /
(33/ 0
stringNumber330 <
.33< =
Trim33= A
(33A B
)33B C
)33C D
;33D E
}44 
catch55 
(55 
FormatException55 .
exceptNumberFormat55/ A
)55A B
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD `
)KK` a
;KKa b
}LL 
}MM 
}NN 
dataCopyOO 
=OO 
dataOO 
;OO 
}PP 	
{QQ 	
doubleRR 
dataRR 
=RR 
dataCopyRR "
;RR" #
{SS 
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
floatUU #
)UU# $
dataUU$ (
)UU( )
;UU) *
}VV 
}WW 	
}XX 
public[[ 

override[[ 
void[[ 
Good[[ 
([[ 
)[[ 
{\\ 
GoodG2B]] 
(]] 
)]] 
;]] 
}^^ 
privateaa 
voidaa 
GoodG2Baa 
(aa 
)aa 
{bb 
doublecc 
dataCopycc 
;cc 
{dd 	
doubleee 
dataee 
;ee 
datagg 
=gg 
$numgg 
;gg 
dataCopyhh 
=hh 
datahh 
;hh 
}ii 	
{jj 	
doublekk 
datakk 
=kk 
dataCopykk "
;kk" #
{ll 
IOnn 
.nn 
	WriteLinenn 
(nn 
(nn 
floatnn #
)nn# $
datann$ (
)nn( )
;nn) *
}oo 
}pp 	
}qq 
}ss 
}tt Û%
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_41 C
:D E
AbstractTestCaseF V
{ 
private 
static 
void 
BadSink 
(  
double  &
data' +
), -
{ 
{ 	
IO   
.   
	WriteLine   
(   
(   
float   
)    
data    $
)  $ %
;  % &
}!! 	
}"" 
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
double&& 
data&& 
;&& 
data'' 
='' 
double'' 
.'' 
MinValue'' 
;'' 
{)) 	
	WebClient** 
client** 
=** 
new** "
	WebClient**# ,
(**, -
)**- .
;**. /
StreamReader++ 
sr++ 
=++ 
null++ "
;++" #
try,, 
{-- 
sr.. 
=.. 
new.. 
StreamReader.. %
(..% &
client..& ,
..., -
OpenRead..- 5
(..5 6
$str..6 O
)..O P
)..P Q
;..Q R
string22 
stringNumber22 #
=22$ %
sr22& (
.22( )
ReadLine22) 1
(221 2
)222 3
;223 4
if33 
(33 
stringNumber33  
!=33! #
null33$ (
)33( )
{44 
try55 
{66 
data77 
=77 
double77 %
.77% &
Parse77& +
(77+ ,
stringNumber77, 8
.778 9
Trim779 =
(77= >
)77> ?
)77? @
;77@ A
}88 
catch99 
(99 
FormatException99 *
exceptNumberFormat99+ =
)99= >
{:: 
IO;; 
.;; 
Logger;; !
.;;! "
Log;;" %
(;;% &
NLog;;& *
.;;* +
LogLevel;;+ 3
.;;3 4
Warn;;4 8
,;;8 9
exceptNumberFormat;;: L
,;;L M
$str	;;N Ä
)
;;Ä Å
;
;;Å Ç
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryFF 
{GG 
ifHH 
(HH 
srHH 
!=HH 
nullHH "
)HH" #
{II 
srJJ 
.JJ 
CloseJJ  
(JJ  !
)JJ! "
;JJ" #
}KK 
}LL 
catchMM 
(MM 
IOExceptionMM "
exceptIOMM# +
)MM+ ,
{NN 
IOOO 
.OO 
LoggerOO 
.OO 
LogOO !
(OO! "
NLogOO" &
.OO& '
LogLevelOO' /
.OO/ 0
WarnOO0 4
,OO4 5
exceptIOOO6 >
,OO> ?
$strOO@ \
)OO\ ]
;OO] ^
}PP 
}QQ 
}RR 	
BadSinkSS 
(SS 
dataSS 
)SS 
;SS 
}TT 
publicWW 

overrideWW 
voidWW 
GoodWW 
(WW 
)WW 
{XX 
GoodG2BYY 
(YY 
)YY 
;YY 
}ZZ 
private\\ 
static\\ 
void\\ 
GoodG2BSink\\ #
(\\# $
double\\$ *
data\\+ /
)\\0 1
{]] 
{^^ 	
IO`` 
.`` 
	WriteLine`` 
(`` 
(`` 
float`` 
)``  
data``  $
)``$ %
;``% &
}aa 	
}bb 
privateee 
staticee 
voidee 
GoodG2Bee 
(ee  
)ee  !
{ff 
doublegg 
datagg 
;gg 
dataii 
=ii 
$numii 
;ii 
GoodG2BSinkjj 
(jj 
datajj 
)jj 
;jj 
}kk 
}mm 
}nn „&
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_42 C
:D E
AbstractTestCaseF V
{ 
private 
static 
double 
	BadSource #
(# $
)$ %
{ 
double 
data 
; 
data 
= 
double 
. 
MinValue 
; 
{!! 	
	WebClient"" 
client"" 
="" 
new"" "
	WebClient""# ,
("", -
)""- .
;"". /
StreamReader## 
sr## 
=## 
null## "
;##" #
try$$ 
{%% 
sr&& 
=&& 
new&& 
StreamReader&& %
(&&% &
client&&& ,
.&&, -
OpenRead&&- 5
(&&5 6
$str&&6 O
)&&O P
)&&P Q
;&&Q R
string** 
stringNumber** #
=**$ %
sr**& (
.**( )
ReadLine**) 1
(**1 2
)**2 3
;**3 4
if++ 
(++ 
stringNumber++  
!=++! #
null++$ (
)++( )
{,, 
try-- 
{.. 
data// 
=// 
double// %
.//% &
Parse//& +
(//+ ,
stringNumber//, 8
.//8 9
Trim//9 =
(//= >
)//> ?
)//? @
;//@ A
}00 
catch11 
(11 
FormatException11 *
exceptNumberFormat11+ =
)11= >
{22 
IO33 
.33 
Logger33 !
.33! "
Log33" %
(33% &
NLog33& *
.33* +
LogLevel33+ 3
.333 4
Warn334 8
,338 9
exceptNumberFormat33: L
,33L M
$str	33N Ä
)
33Ä Å
;
33Å Ç
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
finally;; 
{<< 
try>> 
{?? 
if@@ 
(@@ 
sr@@ 
!=@@ 
null@@ "
)@@" #
{AA 
srBB 
.BB 
CloseBB  
(BB  !
)BB! "
;BB" #
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE "
exceptIOEE# +
)EE+ ,
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG !
(GG! "
NLogGG" &
.GG& '
LogLevelGG' /
.GG/ 0
WarnGG0 4
,GG4 5
exceptIOGG6 >
,GG> ?
$strGG@ \
)GG\ ]
;GG] ^
}HH 
}II 
}JJ 	
returnKK 
dataKK 
;KK 
}LL 
publicOO 

overrideOO 
voidOO 
BadOO 
(OO 
)OO 
{PP 
doubleQQ 
dataQQ 
=QQ 
	BadSourceQQ 
(QQ  
)QQ  !
;QQ! "
{RR 	
IOTT 
.TT 
	WriteLineTT 
(TT 
(TT 
floatTT 
)TT  
dataTT  $
)TT$ %
;TT% &
}UU 	
}VV 
privateYY 
staticYY 
doubleYY 
GoodG2BSourceYY '
(YY' (
)YY( )
{ZZ 
double[[ 
data[[ 
;[[ 
data]] 
=]] 
$num]] 
;]] 
return^^ 
data^^ 
;^^ 
}__ 
privatebb 
staticbb 
voidbb 
GoodG2Bbb 
(bb  
)bb  !
{cc 
doubledd 
datadd 
=dd 
GoodG2BSourcedd #
(dd# $
)dd$ %
;dd% &
{ee 	
IOgg 
.gg 
	WriteLinegg 
(gg 
(gg 
floatgg 
)gg  
datagg  $
)gg$ %
;gg% &
}hh 	
}ii 
publickk 

overridekk 
voidkk 
Goodkk 
(kk 
)kk 
{ll 
GoodG2Bmm 
(mm 
)mm 
;mm 
}nn 
}pp 
}qq ©(
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_45 C
:D E
AbstractTestCaseF V
{ 
private 
double 
dataBad 
; 
private 
double 
dataGoodG2B 
; 
private   
void   
BadSink   
(   
)   
{!! 
double"" 
data"" 
="" 
dataBad"" 
;"" 
{## 	
IO%% 
.%% 
	WriteLine%% 
(%% 
(%% 
float%% 
)%%  
data%%  $
)%%$ %
;%%% &
}&& 	
}'' 
public** 

override** 
void** 
Bad** 
(** 
)** 
{++ 
double,, 
data,, 
;,, 
data-- 
=-- 
double-- 
.-- 
MinValue-- 
;-- 
{// 	
	WebClient00 
client00 
=00 
new00 "
	WebClient00# ,
(00, -
)00- .
;00. /
StreamReader11 
sr11 
=11 
null11 "
;11" #
try22 
{33 
sr44 
=44 
new44 
StreamReader44 %
(44% &
client44& ,
.44, -
OpenRead44- 5
(445 6
$str446 O
)44O P
)44P Q
;44Q R
string88 
stringNumber88 #
=88$ %
sr88& (
.88( )
ReadLine88) 1
(881 2
)882 3
;883 4
if99 
(99 
stringNumber99  
!=99! #
null99$ (
)99( )
{:: 
try;; 
{<< 
data== 
=== 
double== %
.==% &
Parse==& +
(==+ ,
stringNumber==, 8
.==8 9
Trim==9 =
(=== >
)==> ?
)==? @
;==@ A
}>> 
catch?? 
(?? 
FormatException?? *
exceptNumberFormat??+ =
)??= >
{@@ 
IOAA 
.AA 
LoggerAA !
.AA! "
LogAA" %
(AA% &
NLogAA& *
.AA* +
LogLevelAA+ 3
.AA3 4
WarnAA4 8
,AA8 9
exceptNumberFormatAA: L
,AAL M
$str	AAN Ä
)
AAÄ Å
;
AAÅ Ç
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE 
exceptIOEE '
)EE' (
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG 
(GG 
NLogGG "
.GG" #
LogLevelGG# +
.GG+ ,
WarnGG, 0
,GG0 1
exceptIOGG2 :
,GG: ;
$strGG< W
)GGW X
;GGX Y
}HH 
finallyII 
{JJ 
tryLL 
{MM 
ifNN 
(NN 
srNN 
!=NN 
nullNN "
)NN" #
{OO 
srPP 
.PP 
ClosePP  
(PP  !
)PP! "
;PP" #
}QQ 
}RR 
catchSS 
(SS 
IOExceptionSS "
exceptIOSS# +
)SS+ ,
{TT 
IOUU 
.UU 
LoggerUU 
.UU 
LogUU !
(UU! "
NLogUU" &
.UU& '
LogLevelUU' /
.UU/ 0
WarnUU0 4
,UU4 5
exceptIOUU6 >
,UU> ?
$strUU@ \
)UU\ ]
;UU] ^
}VV 
}WW 
}XX 	
dataBadYY 
=YY 
dataYY 
;YY 
BadSinkZZ 
(ZZ 
)ZZ 
;ZZ 
}[[ 
public^^ 

override^^ 
void^^ 
Good^^ 
(^^ 
)^^ 
{__ 
GoodG2B`` 
(`` 
)`` 
;`` 
}aa 
privatecc 
voidcc 
GoodG2BSinkcc 
(cc 
)cc 
{dd 
doubleee 
dataee 
=ee 
dataGoodG2Bee !
;ee! "
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
(hh 
floathh 
)hh  
datahh  $
)hh$ %
;hh% &
}ii 	
}jj 
privatemm 
voidmm 
GoodG2Bmm 
(mm 
)mm 
{nn 
doubleoo 
dataoo 
;oo 
dataqq 
=qq 
$numqq 
;qq 
dataGoodG2Brr 
=rr 
datarr 
;rr 
GoodG2BSinkss 
(ss 
)ss 
;ss 
}tt 
}vv 
}ww ß!
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_51a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
double 
. 
MinValue 
; 
{!! 	
	WebClient"" 
client"" 
="" 
new"" "
	WebClient""# ,
("", -
)""- .
;"". /
StreamReader## 
sr## 
=## 
null## "
;##" #
try$$ 
{%% 
sr&& 
=&& 
new&& 
StreamReader&& %
(&&% &
client&&& ,
.&&, -
OpenRead&&- 5
(&&5 6
$str&&6 O
)&&O P
)&&P Q
;&&Q R
string** 
stringNumber** #
=**$ %
sr**& (
.**( )
ReadLine**) 1
(**1 2
)**2 3
;**3 4
if++ 
(++ 
stringNumber++  
!=++! #
null++$ (
)++( )
{,, 
try-- 
{.. 
data// 
=// 
double// %
.//% &
Parse//& +
(//+ ,
stringNumber//, 8
.//8 9
Trim//9 =
(//= >
)//> ?
)//? @
;//@ A
}00 
catch11 
(11 
FormatException11 *
exceptNumberFormat11+ =
)11= >
{22 
IO33 
.33 
Logger33 !
.33! "
Log33" %
(33% &
NLog33& *
.33* +
LogLevel33+ 3
.333 4
Warn334 8
,338 9
exceptNumberFormat33: L
,33L M
$str	33N Ä
)
33Ä Å
;
33Å Ç
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
finally;; 
{<< 
try>> 
{?? 
if@@ 
(@@ 
sr@@ 
!=@@ 
null@@ "
)@@" #
{AA 
srBB 
.BB 
CloseBB  
(BB  !
)BB! "
;BB" #
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE "
exceptIOEE# +
)EE+ ,
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG !
(GG! "
NLogGG" &
.GG& '
LogLevelGG' /
.GG/ 0
WarnGG0 4
,GG4 5
exceptIOGG6 >
,GG> ?
$strGG@ \
)GG\ ]
;GG] ^
}HH 
}II 
}JJ 	J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_51bKK F
.KKF G
BadSinkKKG N
(KKN O
dataKKO S
)KKU V
;KKV W
}LL 
publicOO 

overrideOO 
voidOO 
GoodOO 
(OO 
)OO 
{PP 
GoodG2BQQ 
(QQ 
)QQ 
;QQ 
}RR 
privateUU 
voidUU 
GoodG2BUU 
(UU 
)UU 
{VV 
doubleWW 
dataWW 
;WW 
dataYY 
=YY 
$numYY 
;YY J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_51bZZ F
.ZZF G
GoodG2BSinkZZG R
(ZZR S
dataZZS W
)ZZY Z
;ZZZ [
}[[ 
}]] 
}^^ ´	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_51b D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
double### )
data##* .
)##/ 0
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
float'' 
)''  
data''  $
)''$ %
;''% &
}(( 	
})) 
}++ 
},, ß!
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_52a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_52bLL F
.LLF G
BadSinkLLG N
(LLN O
dataLLO S
)LLT U
;LLU V
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
voidVV 
GoodG2BVV 
(VV 
)VV 
{WW 
doubleXX 
dataXX 
;XX 
dataZZ 
=ZZ 
$numZZ 
;ZZ J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_52b[[ F
.[[F G
GoodG2BSink[[G R
([[R S
data[[S W
)[[X Y
;[[Y Z
}\\ 
}^^ 
}__ Ö	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_52b D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_52c F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_52c## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' ´	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_52c D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
float(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- ß!
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_53a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_53bLL F
.LLF G
BadSinkLLG N
(LLN O
dataLLO S
)LLT U
;LLU V
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
voidVV 
GoodG2BVV 
(VV 
)VV 
{WW 
doubleXX 
dataXX 
;XX 
dataZZ 
=ZZ 
$numZZ 
;ZZ J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_53b[[ F
.[[F G
GoodG2BSink[[G R
([[R S
data[[S W
)[[X Y
;[[Y Z
}\\ 
}^^ 
}__ Ö	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_53b D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_53c F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_53c## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' Ö	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_53c D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_53d F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_53d## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' ´	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_53d D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
float(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- ß!
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_54a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_54bLL F
.LLF G
BadSinkLLG N
(LLN O
dataLLO S
)LLT U
;LLU V
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
voidVV 
GoodG2BVV 
(VV 
)VV 
{WW 
doubleXX 
dataXX 
;XX 
dataZZ 
=ZZ 
$numZZ 
;ZZ J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_54b[[ F
.[[F G
GoodG2BSink[[G R
([[R S
data[[S W
)[[X Y
;[[Y Z
}\\ 
}^^ 
}__ Ö	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_54b D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_54c F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_54c## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' Ö	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_54c D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_54d F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_54d## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' Ö	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_54d D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_54e F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_54e## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' ´	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_54e D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
float(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- ˇ
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_61a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
= J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_61b T
.T U
	BadSourceU ^
(^ _
)_ `
;` a
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
double++ 
data++ 
=++ J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_61b++ T
.++T U
GoodG2BSource++U b
(++b c
)++c d
;++d e
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
float.. 
)..  
data..  $
)..$ %
;..% &
}// 	
}00 
}22 
}33 ◊
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_61b D
{ 
public 

static 
double 
	BadSource "
(" #
)# $
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	
returnLL 
dataLL 
;LL 
}MM 
publicRR 

staticRR 
doubleRR 
GoodG2BSourceRR &
(RR& '
)RR' (
{SS 
doubleTT 
dataTT 
;TT 
dataVV 
=VV 
$numVV 
;VV 
returnWW 
dataWW 
;WW 
}XX 
}ZZ 
}[[ ´&
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_66a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	
doubleLL 
[LL 
]LL 
	dataArrayLL 
=LL 
newLL  
doubleLL! '
[LL' (
$numLL( )
]LL) *
;LL* +
	dataArrayMM 
[MM 
$numMM 
]MM 
=MM 
dataMM 
;MM J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_66bNN F
.NNF G
BadSinkNNG N
(NNN O
	dataArrayNNO X
)NNZ [
;NN[ \
}OO 
publicRR 

overrideRR 
voidRR 
GoodRR 
(RR 
)RR 
{SS 
GoodG2BTT 
(TT 
)TT 
;TT 
}UU 
privateXX 
staticXX 
voidXX 
GoodG2BXX 
(XX  
)XX  !
{YY 
doubleZZ 
dataZZ 
;ZZ 
data\\ 
=\\ 
$num\\ 
;\\ 
double]] 
[]] 
]]] 
	dataArray]] 
=]] 
new]]  
double]]! '
[]]' (
$num]]( )
]]]) *
;]]* +
	dataArray^^ 
[^^ 
$num^^ 
]^^ 
=^^ 
data^^ 
;^^ J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_66b__ F
.__F G
GoodG2BSink__G R
(__R S
	dataArray__S \
)__^ _
;___ `
}`` 
}bb 
}cc á
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_66b D
{ 
public 

static 
void 
BadSink 
( 
double %
[% &
]& '
	dataArray( 1
)2 3
{ 
double 
data 
= 
	dataArray 
[  
$num  !
]! "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
double%%# )
[%%) *
]%%* +
	dataArray%%, 5
)%%6 7
{&& 
double'' 
data'' 
='' 
	dataArray'' 
[''  
$num''  !
]''! "
;''" #
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
float** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
}.. 
}// é'
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_67a D
:E F
AbstractTestCaseG W
{ 
public 

class 
	Container 
{ 
public 
double 
containerOne "
;" #
}   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
double$$ 
data$$ 
;$$ 
data%% 
=%% 
double%% 
.%% 
MinValue%% 
;%% 
{'' 	
	WebClient(( 
client(( 
=(( 
new(( "
	WebClient((# ,
(((, -
)((- .
;((. /
StreamReader)) 
sr)) 
=)) 
null)) "
;))" #
try** 
{++ 
sr,, 
=,, 
new,, 
StreamReader,, %
(,,% &
client,,& ,
.,,, -
OpenRead,,- 5
(,,5 6
$str,,6 O
),,O P
),,P Q
;,,Q R
string00 
stringNumber00 #
=00$ %
sr00& (
.00( )
ReadLine00) 1
(001 2
)002 3
;003 4
if11 
(11 
stringNumber11  
!=11! #
null11$ (
)11( )
{22 
try33 
{44 
data55 
=55 
double55 %
.55% &
Parse55& +
(55+ ,
stringNumber55, 8
.558 9
Trim559 =
(55= >
)55> ?
)55? @
;55@ A
}66 
catch77 
(77 
FormatException77 *
exceptNumberFormat77+ =
)77= >
{88 
IO99 
.99 
Logger99 !
.99! "
Log99" %
(99% &
NLog99& *
.99* +
LogLevel99+ 3
.993 4
Warn994 8
,998 9
exceptNumberFormat99: L
,99L M
$str	99N Ä
)
99Ä Å
;
99Å Ç
}:: 
};; 
}<< 
catch== 
(== 
IOException== 
exceptIO== '
)==' (
{>> 
IO?? 
.?? 
Logger?? 
.?? 
Log?? 
(?? 
NLog?? "
.??" #
LogLevel??# +
.??+ ,
Warn??, 0
,??0 1
exceptIO??2 :
,??: ;
$str??< W
)??W X
;??X Y
}@@ 
finallyAA 
{BB 
tryDD 
{EE 
ifFF 
(FF 
srFF 
!=FF 
nullFF "
)FF" #
{GG 
srHH 
.HH 
CloseHH  
(HH  !
)HH! "
;HH" #
}II 
}JJ 
catchKK 
(KK 
IOExceptionKK "
exceptIOKK# +
)KK+ ,
{LL 
IOMM 
.MM 
LoggerMM 
.MM 
LogMM !
(MM! "
NLogMM" &
.MM& '
LogLevelMM' /
.MM/ 0
WarnMM0 4
,MM4 5
exceptIOMM6 >
,MM> ?
$strMM@ \
)MM\ ]
;MM] ^
}NN 
}OO 
}PP 	
	ContainerQQ 
dataContainerQQ 
=QQ  !
newQQ" %
	ContainerQQ& /
(QQ/ 0
)QQ0 1
;QQ1 2
dataContainerRR 
.RR 
containerOneRR "
=RR# $
dataRR% )
;RR) *J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_67bSS F
.SSF G
BadSinkSSG N
(SSN O
dataContainerSSO \
)SS^ _
;SS_ `
}TT 
publicWW 

overrideWW 
voidWW 
GoodWW 
(WW 
)WW 
{XX 
GoodG2BYY 
(YY 
)YY 
;YY 
}ZZ 
private]] 
static]] 
void]] 
GoodG2B]] 
(]]  
)]]  !
{^^ 
double__ 
data__ 
;__ 
dataaa 
=aa 
$numaa 
;aa 
	Containerbb 
dataContainerbb 
=bb  !
newbb" %
	Containerbb& /
(bb/ 0
)bb0 1
;bb1 2
dataContainercc 
.cc 
containerOnecc "
=cc# $
datacc% )
;cc) *J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_67bdd F
.ddF G
GoodG2BSinkddG R
(ddR S
dataContainerddS `
)ddb c
;ddc d
}ee 
}gg 
}hh â
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_67b D
{ 
public 

static 
void 
BadSink 
( J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_67a ]
.] ^
	Container^ g
dataContainerh u
)v w
{ 
double 
data 
= 
dataContainer #
.# $
containerOne$ 0
;0 1
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_67a%%# a
.%%a b
	Container%%b k
dataContainer%%l y
)%%z {
{&& 
double'' 
data'' 
='' 
dataContainer'' #
.''# $
containerOne''$ 0
;''0 1
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
float** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
}.. 
}// ä!
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_68a D
:E F
AbstractTestCaseG W
{ 
public 

static 
double 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_68bLL F
.LLF G
BadSinkLLG N
(LLN O
)LLO P
;LLP Q
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
staticVV 
voidVV 
GoodG2BVV 
(VV  
)VV  !
{WW 
dataYY 
=YY 
$numYY 
;YY J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_68bZZ F
.ZZF G
GoodG2BSinkZZG R
(ZZR S
)ZZS T
;ZZT U
}[[ 
}]] 
}^^ ¡
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_68b D
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
double 
data 
= J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_68a T
.T U
dataU Y
;Y Z
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
double&& 
data&& 
=&& J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_68a&& T
.&&T U
data&&U Y
;&&Y Z
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
float)) 
)))  
data))  $
)))$ %
;))% &
}** 	
}++ 
}-- 
}.. ü"
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_71a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_71bLL F
.LLF G
BadSinkLLG N
(LLN O
(LLO P
ObjectLLP V
)LLV W
dataLLW [
)LL] ^
;LL^ _
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
staticVV 
voidVV 
GoodG2BVV 
(VV  
)VV  !
{WW 
doubleXX 
dataXX 
;XX 
dataZZ 
=ZZ 
$numZZ 
;ZZ J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_71b[[ F
.[[F G
GoodG2BSink[[G R
([[R S
([[S T
Object[[T Z
)[[Z [
data[[[ _
)[[a b
;[[b c
}\\ 
}^^ 
}__ ”
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_71b D
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
double 
data 
= 
( 
double 
) 

dataObject (
;( )
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
double(( 
data(( 
=(( 
((( 
double(( 
)(( 

dataObject(( (
;((( )
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
float++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ø+
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_72a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	
	HashtableLL 
dataHashtableLL 
=LL  !
newLL" %
	HashtableLL& /
(LL/ 0
$numLL0 1
)LL1 2
;LL2 3
dataHashtableMM 
.MM 
AddMM 
(MM 
$numMM 
,MM 
dataMM !
)MM! "
;MM" #
dataHashtableNN 
.NN 
AddNN 
(NN 
$numNN 
,NN 
dataNN !
)NN! "
;NN" #
dataHashtableOO 
.OO 
AddOO 
(OO 
$numOO 
,OO 
dataOO !
)OO! "
;OO" #J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_72bPP F
.PPF G
BadSinkPPG N
(PPN O
dataHashtablePPO \
)PP^ _
;PP_ `
}QQ 
publicTT 

overrideTT 
voidTT 
GoodTT 
(TT 
)TT 
{UU 
GoodG2BVV 
(VV 
)VV 
;VV 
}WW 
privateZZ 
staticZZ 
voidZZ 
GoodG2BZZ 
(ZZ  
)ZZ  !
{[[ 
double\\ 
data\\ 
;\\ 
data^^ 
=^^ 
$num^^ 
;^^ 
	Hashtable__ 
dataHashtable__ 
=__  !
new__" %
	Hashtable__& /
(__/ 0
$num__0 1
)__1 2
;__2 3
dataHashtable`` 
.`` 
Add`` 
(`` 
$num`` 
,`` 
data`` !
)``! "
;``" #
dataHashtableaa 
.aa 
Addaa 
(aa 
$numaa 
,aa 
dataaa !
)aa! "
;aa" #
dataHashtablebb 
.bb 
Addbb 
(bb 
$numbb 
,bb 
databb !
)bb! "
;bb" #J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_72bcc F
.ccF G
GoodG2BSinkccG R
(ccR S
dataHashtableccS `
)ccb c
;ccc d
}dd 
}ff 
}gg ≈
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_72b D
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
double 
data 
= 
( 
double 
) 
dataHashtable ,
[, -
$num- .
]. /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
double(( 
data(( 
=(( 
((( 
double(( 
)(( 
dataHashtable(( ,
[((, -
$num((- .
]((. /
;((/ 0
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
float++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 √+
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_73a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
	WebClient$$ 
client$$ 
=$$ 
new$$ "
	WebClient$$# ,
($$, -
)$$- .
;$$. /
StreamReader%% 
sr%% 
=%% 
null%% "
;%%" #
try&& 
{'' 
sr(( 
=(( 
new(( 
StreamReader(( %
(((% &
client((& ,
.((, -
OpenRead((- 5
(((5 6
$str((6 O
)((O P
)((P Q
;((Q R
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
double11 %
.11% &
Parse11& +
(11+ ,
stringNumber11, 8
.118 9
Trim119 =
(11= >
)11> ?
)11? @
;11@ A
}22 
catch33 
(33 
FormatException33 *
exceptNumberFormat33+ =
)33= >
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ \
)II\ ]
;II] ^
}JJ 
}KK 
}LL 	

LinkedListMM 
<MM 
doubleMM 
>MM 
dataLinkedListMM )
=MM* +
newMM, /

LinkedListMM0 :
<MM: ;
doubleMM; A
>MMA B
(MMB C
)MMC D
;MMD E
dataLinkedListNN 
.NN 
AddLastNN 
(NN 
dataNN #
)NN# $
;NN$ %
dataLinkedListOO 
.OO 
AddLastOO 
(OO 
dataOO #
)OO# $
;OO$ %
dataLinkedListPP 
.PP 
AddLastPP 
(PP 
dataPP #
)PP# $
;PP$ %J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_73bQQ F
.QQF G
BadSinkQQG N
(QQN O
dataLinkedListQQO ]
)QQ_ `
;QQ` a
}RR 
publicUU 

overrideUU 
voidUU 
GoodUU 
(UU 
)UU 
{VV 
GoodG2BWW 
(WW 
)WW 
;WW 
}XX 
private[[ 
static[[ 
void[[ 
GoodG2B[[ 
([[  
)[[  !
{\\ 
double]] 
data]] 
;]] 
data__ 
=__ 
$num__ 
;__ 

LinkedList`` 
<`` 
double`` 
>`` 
dataLinkedList`` )
=``* +
new``, /

LinkedList``0 :
<``: ;
double``; A
>``A B
(``B C
)``C D
;``D E
dataLinkedListaa 
.aa 
AddLastaa 
(aa 
dataaa #
)aa# $
;aa$ %
dataLinkedListbb 
.bb 
AddLastbb 
(bb 
databb #
)bb# $
;bb$ %
dataLinkedListcc 
.cc 
AddLastcc 
(cc 
datacc #
)cc# $
;cc$ %J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_73bdd F
.ddF G
GoodG2BSinkddG R
(ddR S
dataLinkedListddS a
)ddc d
;ddd e
}ee 
}gg 
}hh Ò
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_73b D
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
double* 0
>0 1
dataLinkedList2 @
)A B
{ 
double 
data 
= 
dataLinkedList $
.$ %
Last% )
.) *
Value* /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
double&&. 4
>&&4 5
dataLinkedList&&6 D
)&&E F
{'' 
double(( 
data(( 
=(( 
dataLinkedList(( $
.(($ %
Last((% )
.(() *
Value((* /
;((/ 0
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
float++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 Ò-
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_74a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	

DictionaryLL 
<LL 
intLL 
,LL 
doubleLL 
>LL 
dataDictionaryLL -
=LL. /
newLL0 3

DictionaryLL4 >
<LL> ?
intLL? B
,LLB C
doubleLLC I
>LLI J
(LLJ K
)LLK L
;LLL M
dataDictionaryMM 
.MM 
AddMM 
(MM 
$numMM 
,MM 
dataMM "
)MM" #
;MM# $
dataDictionaryNN 
.NN 
AddNN 
(NN 
$numNN 
,NN 
dataNN "
)NN" #
;NN# $
dataDictionaryOO 
.OO 
AddOO 
(OO 
$numOO 
,OO 
dataOO "
)OO" #
;OO# $J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_74bPP F
.PPF G
BadSinkPPG N
(PPN O
dataDictionaryPPO ]
)PP_ `
;PP` a
}QQ 
publicTT 

overrideTT 
voidTT 
GoodTT 
(TT 
)TT 
{UU 
GoodG2BVV 
(VV 
)VV 
;VV 
}WW 
privateZZ 
staticZZ 
voidZZ 
GoodG2BZZ 
(ZZ  
)ZZ  !
{[[ 
double\\ 
data\\ 
;\\ 
data^^ 
=^^ 
$num^^ 
;^^ 

Dictionary__ 
<__ 
int__ 
,__ 
double__ 
>__ 
dataDictionary__ -
=__. /
new__0 3

Dictionary__4 >
<__> ?
int__? B
,__B C
double__C I
>__I J
(__J K
)__K L
;__L M
dataDictionary`` 
.`` 
Add`` 
(`` 
$num`` 
,`` 
data`` "
)``" #
;``# $
dataDictionaryaa 
.aa 
Addaa 
(aa 
$numaa 
,aa 
dataaa "
)aa" #
;aa# $
dataDictionarybb 
.bb 
Addbb 
(bb 
$numbb 
,bb 
databb "
)bb" #
;bb# $J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_74bcc F
.ccF G
GoodG2BSinkccG R
(ccR S
dataDictionaryccS a
)ccc d
;ccd e
}dd 
}ff 
}gg ã
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_74b D
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
double. 4
>4 5
dataDictionary6 D
)E F
{ 
double 
data 
= 
dataDictionary $
[$ %
$num% &
]& '
;' (
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
double&&2 8
>&&8 9
dataDictionary&&: H
)&&I J
{'' 
double(( 
data(( 
=(( 
dataDictionary(( $
[(($ %
$num((% &
]((& '
;((' (
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
float++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ç5
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_75a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
	WebClient$$ 
client$$ 
=$$ 
new$$ "
	WebClient$$# ,
($$, -
)$$- .
;$$. /
StreamReader%% 
sr%% 
=%% 
null%% "
;%%" #
try&& 
{'' 
sr(( 
=(( 
new(( 
StreamReader(( %
(((% &
client((& ,
.((, -
OpenRead((- 5
(((5 6
$str((6 O
)((O P
)((P Q
;((Q R
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
double11 %
.11% &
Parse11& +
(11+ ,
stringNumber11, 8
.118 9
Trim119 =
(11= >
)11> ?
)11? @
;11@ A
}22 
catch33 
(33 
FormatException33 *
exceptNumberFormat33+ =
)33= >
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ \
)II\ ]
;II] ^
}JJ 
}KK 
}LL 	
byteNN 
[NN 
]NN 
dataSerializedNN 
=NN 
nullNN  $
;NN$ %
tryOO 
{PP 	
BinaryFormatterQQ 
bfQQ 
=QQ  
newQQ! $
BinaryFormatterQQ% 4
(QQ4 5
)QQ5 6
;QQ6 7
usingRR 
(RR 
varRR 
msRR 
=RR 
newRR 
MemoryStreamRR  ,
(RR, -
)RR- .
)RR. /
{SS 
bfTT 
.TT 
	SerializeTT 
(TT 
msTT 
,TT  
dataTT! %
)TT% &
;TT& '
dataSerializedUU 
=UU  
msUU! #
.UU# $
ToArrayUU$ +
(UU+ ,
)UU, -
;UU- .
}VV J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_75bWW J
.WWJ K
BadSinkWWK R
(WWR S
dataSerializedWWS a
)WWc d
;WWd e
}XX 	
catchYY 
(YY "
SerializationExceptionYY %
exceptSerializeYY& 5
)YY5 6
{ZZ 	
IO[[ 
.[[ 
Logger[[ 
.[[ 
Log[[ 
([[ 
NLog[[ 
.[[ 
LogLevel[[ '
.[[' (
Warn[[( ,
,[[, -
$str[[. X
,[[X Y
exceptSerialize[[Z i
)[[i j
;[[j k
}\\ 	
}]] 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2Bbb 
(bb 
)bb 
;bb 
}cc 
privateff 
staticff 
voidff 
GoodG2Bff 
(ff  
)ff  !
{gg 
doublehh 
datahh 
;hh 
datajj 
=jj 
$numjj 
;jj 
bytell 
[ll 
]ll 
dataSerializedll 
=ll 
nullll  $
;ll$ %
trymm 
{nn 	
BinaryFormatteroo 
bfoo 
=oo  
newoo! $
BinaryFormatteroo% 4
(oo4 5
)oo5 6
;oo6 7
usingpp 
(pp 
varpp 
mspp 
=pp 
newpp 
MemoryStreampp  ,
(pp, -
)pp- .
)pp. /
{qq 
bfrr 
.rr 
	Serializerr 
(rr 
msrr 
,rr  
datarr! %
)rr% &
;rr& '
dataSerializedss 
=ss  
msss! #
.ss# $
ToArrayss$ +
(ss+ ,
)ss, -
;ss- .
}tt J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_75buu J
.uuJ K
GoodG2BSinkuuK V
(uuV W
dataSerializeduuW e
)uug h
;uuh i
}vv 	
catchww 
(ww "
SerializationExceptionww %
exceptSerializeww& 5
)ww5 6
{xx 	
IOyy 
.yy 
Loggeryy 
.yy 
Logyy 
(yy 
NLogyy 
.yy 
LogLevelyy '
.yy' (
Warnyy( ,
,yy, -
$stryy. X
,yyX Y
exceptSerializeyyZ i
)yyi j
;yyj k
}zz 	
}{{ 
}}} 
}~~ Ò!
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_75b D
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
double   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
double&& 
)&& 
binForm&& &
.&&& '
Deserialize&&' 2
(&&2 3
	memStream&&3 <
)&&< =
;&&= >
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
float** #
)**# $
data**$ (
)**( )
;**) *
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
double:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
double@@ 
)@@ 
binForm@@ &
.@@& '
Deserialize@@' 2
(@@2 3
	memStream@@3 <
)@@< =
;@@= >
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
floatDD #
)DD# $
dataDD$ (
)DD( )
;DD) *
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN ”$
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_81a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	N
BCWE197_Numeric_Truncation_Error__double_NetClient_to_float_81_baseLL J

baseObjectLLK U
=LLV W
newLLX [N
ACWE197_Numeric_Truncation_Error__double_NetClient_to_float_81_bad	LL\ ù
(
LLù û
)
LLû ü
;
LLü †

baseObjectMM 
.MM 
ActionMM 
(MM 
dataMM 
)MM  
;MM  !
}NN 
publicQQ 

overrideQQ 
voidQQ 
GoodQQ 
(QQ 
)QQ 
{RR 
GoodG2BSS 
(SS 
)SS 
;SS 
}TT 
privateWW 
voidWW 
GoodG2BWW 
(WW 
)WW 
{XX 
doubleYY 
dataYY 
;YY 
data[[ 
=[[ 
$num[[ 
;[[ N
BCWE197_Numeric_Truncation_Error__double_NetClient_to_float_81_base\\ J

baseObject\\K U
=\\V W
new\\X [R
ECWE197_Numeric_Truncation_Error__double_NetClient_to_float_81_goodG2B	\\\ °
(
\\° ¢
)
\\¢ £
;
\\£ §

baseObject]] 
.]] 
Action]] 
(]] 
data]] 
)]]  
;]]  !
}^^ 
}`` 
}aa ô
ƒC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class M
ACWE197_Numeric_Truncation_Error__double_NetClient_to_float_81_bad G
:H IO
BCWE197_Numeric_Truncation_Error__double_NetClient_to_float_81_base	J å
{ 
public 

override 
void 
Action 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
} 	
}   
}!! 
}"" ˛
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 N
BCWE197_Numeric_Truncation_Error__double_NetClient_to_float_81_base Q
{ 
public 

abstract 
void 
Action 
(  
double  &
data' +
), -
;- .
} 
} °
»C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_float_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class Q
ECWE197_Numeric_Truncation_Error__double_NetClient_to_float_81_goodG2B K
:L MO
BCWE197_Numeric_Truncation_Error__double_NetClient_to_float_81_base	N ê
{ 
public 

override 
void 
Action 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
} 	
}   
}!! 
}"" √!
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_01 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	
{LL 	
IONN 
.NN 
	WriteLineNN 
(NN 
(NN 
intNN 
)NN 
dataNN "
)NN" #
;NN# $
}OO 	
}PP 
publicSS 

overrideSS 
voidSS 
GoodSS 
(SS 
)SS 
{TT 
GoodG2BUU 
(UU 
)UU 
;UU 
}VV 
privateYY 
voidYY 
GoodG2BYY 
(YY 
)YY 
{ZZ 
double[[ 
data[[ 
;[[ 
data]] 
=]] 
$num]] 
;]] 
{^^ 	
IO`` 
.`` 
	WriteLine`` 
(`` 
(`` 
int`` 
)`` 
data`` "
)``" #
;``# $
}aa 	
}bb 
}dd 
}ee È*
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_02 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
true   
)   
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
intWW 
)WW 
dataWW "
)WW" #
;WW# $
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
false`` 
)`` 
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
intmm 
)mm 
datamm "
)mm" #
;mm# $
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
trueuu 
)uu 
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
int
ÇÇ 
)
ÇÇ 
data
ÇÇ "
)
ÇÇ" #
;
ÇÇ# $
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç Œ+
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_03 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
$num   
==   
$num   
)   
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
intWW 
)WW 
dataWW "
)WW" #
;WW# $
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
$num`` 
!=`` 
$num`` 
)`` 
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
intmm 
)mm 
datamm "
)mm" #
;mm# $
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
$numuu 
==uu 
$numuu 
)uu 
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
int
ÇÇ 
)
ÇÇ 
data
ÇÇ "
)
ÇÇ" #
;
ÇÇ# $
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç π-
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_04 A
:B C
AbstractTestCaseD T
{ 
private   
const   
bool   
PRIVATE_CONST_TRUE   )
=  * +
true  , 0
;  0 1
private!! 
const!! 
bool!! 
PRIVATE_CONST_FALSE!! *
=!!+ ,
false!!- 2
;!!2 3
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
double&& 
data&& 
;&& 
if'' 

('' 
PRIVATE_CONST_TRUE'' 
)'' 
{(( 	
data)) 
=)) 
double)) 
.)) 
MinValue)) "
;))" #
{++ 
	WebClient,, 
client,,  
=,,! "
new,,# &
	WebClient,,' 0
(,,0 1
),,1 2
;,,2 3
StreamReader-- 
sr-- 
=--  !
null--" &
;--& '
try.. 
{// 
sr00 
=00 
new00 
StreamReader00 )
(00) *
client00* 0
.000 1
OpenRead001 9
(009 :
$str00: S
)00S T
)00T U
;00U V
string44 
stringNumber44 '
=44( )
sr44* ,
.44, -
ReadLine44- 5
(445 6
)446 7
;447 8
if55 
(55 
stringNumber55 $
!=55% '
null55( ,
)55, -
{66 
try77 
{88 
data99  
=99! "
double99# )
.99) *
Parse99* /
(99/ 0
stringNumber990 <
.99< =
Trim99= A
(99A B
)99B C
)99C D
;99D E
}:: 
catch;; 
(;; 
FormatException;; .
exceptNumberFormat;;/ A
);;A B
{<< 
IO== 
.== 
Logger== %
.==% &
Log==& )
(==) *
NLog==* .
.==. /
LogLevel==/ 7
.==7 8
Warn==8 <
,==< =
exceptNumberFormat==> P
,==P Q
$str	==R Ñ
)
==Ñ Ö
;
==Ö Ü
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryHH 
{II 
ifJJ 
(JJ 
srJJ 
!=JJ !
nullJJ" &
)JJ& '
{KK 
srLL 
.LL 
CloseLL $
(LL$ %
)LL% &
;LL& '
}MM 
}NN 
catchOO 
(OO 
IOExceptionOO &
exceptIOOO' /
)OO/ 0
{PP 
IOQQ 
.QQ 
LoggerQQ !
.QQ! "
LogQQ" %
(QQ% &
NLogQQ& *
.QQ* +
LogLevelQQ+ 3
.QQ3 4
WarnQQ4 8
,QQ8 9
exceptIOQQ: B
,QQB C
$strQQD `
)QQ` a
;QQa b
}RR 
}SS 
}TT 
}UU 	
elseVV 
{WW 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
{\\ 	
IO^^ 
.^^ 
	WriteLine^^ 
(^^ 
(^^ 
int^^ 
)^^ 
data^^ "
)^^" #
;^^# $
}__ 	
}`` 
privatedd 
voiddd 
GoodG2B1dd 
(dd 
)dd 
{ee 
doubleff 
dataff 
;ff 
ifgg 

(gg 
PRIVATE_CONST_FALSEgg 
)gg  
{hh 	
datakk 
=kk 
$numkk 
;kk 
}ll 	
elsemm 
{nn 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
inttt 
)tt 
datatt "
)tt" #
;tt# $
}uu 	
}vv 
privateyy 
voidyy 
GoodG2B2yy 
(yy 
)yy 
{zz 
double{{ 
data{{ 
;{{ 
if|| 

(|| 
PRIVATE_CONST_TRUE|| 
)|| 
{}} 	
data 
= 
$num 
; 
}
ÄÄ 	
else
ÅÅ 
{
ÇÇ 	
data
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
{
áá 	
IO
ââ 
.
ââ 
	WriteLine
ââ 
(
ââ 
(
ââ 
int
ââ 
)
ââ 
data
ââ "
)
ââ" #
;
ââ# $
}
ää 	
}
ãã 
public
çç 

override
çç 
void
çç 
Good
çç 
(
çç 
)
çç 
{
éé 
GoodG2B1
èè 
(
èè 
)
èè 
;
èè 
GoodG2B2
êê 
(
êê 
)
êê 
;
êê 
}
ëë 
}ìì 
}îî ,
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_05 A
:B C
AbstractTestCaseD T
{ 
private   
bool   
privateTrue   
=   
true   #
;  # $
private!! 
bool!! 
privateFalse!! 
=!! 
false!!  %
;!!% &
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
double&& 
data&& 
;&& 
if'' 

('' 
privateTrue'' 
)'' 
{(( 	
data)) 
=)) 
double)) 
.)) 
MinValue)) "
;))" #
{++ 
	WebClient,, 
client,,  
=,,! "
new,,# &
	WebClient,,' 0
(,,0 1
),,1 2
;,,2 3
StreamReader-- 
sr-- 
=--  !
null--" &
;--& '
try.. 
{// 
sr00 
=00 
new00 
StreamReader00 )
(00) *
client00* 0
.000 1
OpenRead001 9
(009 :
$str00: S
)00S T
)00T U
;00U V
string44 
stringNumber44 '
=44( )
sr44* ,
.44, -
ReadLine44- 5
(445 6
)446 7
;447 8
if55 
(55 
stringNumber55 $
!=55% '
null55( ,
)55, -
{66 
try77 
{88 
data99  
=99! "
double99# )
.99) *
Parse99* /
(99/ 0
stringNumber990 <
.99< =
Trim99= A
(99A B
)99B C
)99C D
;99D E
}:: 
catch;; 
(;; 
FormatException;; .
exceptNumberFormat;;/ A
);;A B
{<< 
IO== 
.== 
Logger== %
.==% &
Log==& )
(==) *
NLog==* .
.==. /
LogLevel==/ 7
.==7 8
Warn==8 <
,==< =
exceptNumberFormat==> P
,==P Q
$str	==R Ñ
)
==Ñ Ö
;
==Ö Ü
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryHH 
{II 
ifJJ 
(JJ 
srJJ 
!=JJ !
nullJJ" &
)JJ& '
{KK 
srLL 
.LL 
CloseLL $
(LL$ %
)LL% &
;LL& '
}MM 
}NN 
catchOO 
(OO 
IOExceptionOO &
exceptIOOO' /
)OO/ 0
{PP 
IOQQ 
.QQ 
LoggerQQ !
.QQ! "
LogQQ" %
(QQ% &
NLogQQ& *
.QQ* +
LogLevelQQ+ 3
.QQ3 4
WarnQQ4 8
,QQ8 9
exceptIOQQ: B
,QQB C
$strQQD `
)QQ` a
;QQa b
}RR 
}SS 
}TT 
}UU 	
elseVV 
{WW 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
{\\ 	
IO^^ 
.^^ 
	WriteLine^^ 
(^^ 
(^^ 
int^^ 
)^^ 
data^^ "
)^^" #
;^^# $
}__ 	
}`` 
privatedd 
voiddd 
GoodG2B1dd 
(dd 
)dd 
{ee 
doubleff 
dataff 
;ff 
ifgg 

(gg 
privateFalsegg 
)gg 
{hh 	
datakk 
=kk 
$numkk 
;kk 
}ll 	
elsemm 
{nn 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
inttt 
)tt 
datatt "
)tt" #
;tt# $
}uu 	
}vv 
privateyy 
voidyy 
GoodG2B2yy 
(yy 
)yy 
{zz 
double{{ 
data{{ 
;{{ 
if|| 

(|| 
privateTrue|| 
)|| 
{}} 	
data 
= 
$num 
; 
}
ÄÄ 	
else
ÅÅ 
{
ÇÇ 	
data
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
{
áá 	
IO
ââ 
.
ââ 
	WriteLine
ââ 
(
ââ 
(
ââ 
int
ââ 
)
ââ 
data
ââ "
)
ââ" #
;
ââ# $
}
ää 	
}
ãã 
public
çç 

override
çç 
void
çç 
Good
çç 
(
çç 
)
çç 
{
éé 
GoodG2B1
èè 
(
èè 
)
èè 
;
èè 
GoodG2B2
êê 
(
êê 
)
êê 
;
êê 
}
ëë 
}ìì 
}îî è-
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_06 A
:B C
AbstractTestCaseD T
{ 
private   
const   
int   
PRIVATE_CONST_FIVE   (
=  ) *
$num  + ,
;  , -
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
double%% 
data%% 
;%% 
if&& 

(&& 
PRIVATE_CONST_FIVE&& 
==&& !
$num&&" #
)&&# $
{'' 	
data(( 
=(( 
double(( 
.(( 
MinValue(( "
;((" #
{** 
	WebClient++ 
client++  
=++! "
new++# &
	WebClient++' 0
(++0 1
)++1 2
;++2 3
StreamReader,, 
sr,, 
=,,  !
null,," &
;,,& '
try-- 
{.. 
sr// 
=// 
new// 
StreamReader// )
(//) *
client//* 0
.//0 1
OpenRead//1 9
(//9 :
$str//: S
)//S T
)//T U
;//U V
string33 
stringNumber33 '
=33( )
sr33* ,
.33, -
ReadLine33- 5
(335 6
)336 7
;337 8
if44 
(44 
stringNumber44 $
!=44% '
null44( ,
)44, -
{55 
try66 
{77 
data88  
=88! "
double88# )
.88) *
Parse88* /
(88/ 0
stringNumber880 <
.88< =
Trim88= A
(88A B
)88B C
)88C D
;88D E
}99 
catch:: 
(:: 
FormatException:: .
exceptNumberFormat::/ A
)::A B
{;; 
IO<< 
.<< 
Logger<< %
.<<% &
Log<<& )
(<<) *
NLog<<* .
.<<. /
LogLevel<</ 7
.<<7 8
Warn<<8 <
,<<< =
exceptNumberFormat<<> P
,<<P Q
$str	<<R Ñ
)
<<Ñ Ö
;
<<Ö Ü
}== 
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ "
exceptIO@@# +
)@@+ ,
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB !
(BB! "
NLogBB" &
.BB& '
LogLevelBB' /
.BB/ 0
WarnBB0 4
,BB4 5
exceptIOBB6 >
,BB> ?
$strBB@ [
)BB[ \
;BB\ ]
}CC 
finallyDD 
{EE 
tryGG 
{HH 
ifII 
(II 
srII 
!=II !
nullII" &
)II& '
{JJ 
srKK 
.KK 
CloseKK $
(KK$ %
)KK% &
;KK& '
}LL 
}MM 
catchNN 
(NN 
IOExceptionNN &
exceptIONN' /
)NN/ 0
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
exceptIOPP: B
,PPB C
$strPPD `
)PP` a
;PPa b
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
int]] 
)]] 
data]] "
)]]" #
;]]# $
}^^ 	
}__ 
privatecc 
voidcc 
GoodG2B1cc 
(cc 
)cc 
{dd 
doubleee 
dataee 
;ee 
ifff 

(ff 
PRIVATE_CONST_FIVEff 
!=ff !
$numff" #
)ff# $
{gg 	
datajj 
=jj 
$numjj 
;jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
intss 
)ss 
datass "
)ss" #
;ss# $
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
)xx 
{yy 
doublezz 
datazz 
;zz 
if{{ 

({{ 
PRIVATE_CONST_FIVE{{ 
=={{ !
$num{{" #
){{# $
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
else
ÄÄ 
{
ÅÅ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
{
ÜÜ 	
IO
àà 
.
àà 
	WriteLine
àà 
(
àà 
(
àà 
int
àà 
)
àà 
data
àà "
)
àà" #
;
àà# $
}
ââ 	
}
ää 
public
åå 

override
åå 
void
åå 
Good
åå 
(
åå 
)
åå 
{
çç 
GoodG2B1
éé 
(
éé 
)
éé 
;
éé 
GoodG2B2
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì ‡,
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_07 A
:B C
AbstractTestCaseD T
{ 
private   
int   
privateFive   
=   
$num   
;    
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
double%% 
data%% 
;%% 
if&& 

(&& 
privateFive&& 
==&& 
$num&& 
)&& 
{'' 	
data(( 
=(( 
double(( 
.(( 
MinValue(( "
;((" #
{** 
	WebClient++ 
client++  
=++! "
new++# &
	WebClient++' 0
(++0 1
)++1 2
;++2 3
StreamReader,, 
sr,, 
=,,  !
null,," &
;,,& '
try-- 
{.. 
sr// 
=// 
new// 
StreamReader// )
(//) *
client//* 0
.//0 1
OpenRead//1 9
(//9 :
$str//: S
)//S T
)//T U
;//U V
string33 
stringNumber33 '
=33( )
sr33* ,
.33, -
ReadLine33- 5
(335 6
)336 7
;337 8
if44 
(44 
stringNumber44 $
!=44% '
null44( ,
)44, -
{55 
try66 
{77 
data88  
=88! "
double88# )
.88) *
Parse88* /
(88/ 0
stringNumber880 <
.88< =
Trim88= A
(88A B
)88B C
)88C D
;88D E
}99 
catch:: 
(:: 
FormatException:: .
exceptNumberFormat::/ A
)::A B
{;; 
IO<< 
.<< 
Logger<< %
.<<% &
Log<<& )
(<<) *
NLog<<* .
.<<. /
LogLevel<</ 7
.<<7 8
Warn<<8 <
,<<< =
exceptNumberFormat<<> P
,<<P Q
$str	<<R Ñ
)
<<Ñ Ö
;
<<Ö Ü
}== 
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ "
exceptIO@@# +
)@@+ ,
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB !
(BB! "
NLogBB" &
.BB& '
LogLevelBB' /
.BB/ 0
WarnBB0 4
,BB4 5
exceptIOBB6 >
,BB> ?
$strBB@ [
)BB[ \
;BB\ ]
}CC 
finallyDD 
{EE 
tryGG 
{HH 
ifII 
(II 
srII 
!=II !
nullII" &
)II& '
{JJ 
srKK 
.KK 
CloseKK $
(KK$ %
)KK% &
;KK& '
}LL 
}MM 
catchNN 
(NN 
IOExceptionNN &
exceptIONN' /
)NN/ 0
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
exceptIOPP: B
,PPB C
$strPPD `
)PP` a
;PPa b
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
int]] 
)]] 
data]] "
)]]" #
;]]# $
}^^ 	
}__ 
privatecc 
voidcc 
GoodG2B1cc 
(cc 
)cc 
{dd 
doubleee 
dataee 
;ee 
ifff 

(ff 
privateFiveff 
!=ff 
$numff 
)ff 
{gg 	
datajj 
=jj 
$numjj 
;jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
intss 
)ss 
datass "
)ss" #
;ss# $
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
)xx 
{yy 
doublezz 
datazz 
;zz 
if{{ 

({{ 
privateFive{{ 
=={{ 
$num{{ 
){{ 
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
else
ÄÄ 
{
ÅÅ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
{
ÜÜ 	
IO
àà 
.
àà 
	WriteLine
àà 
(
àà 
(
àà 
int
àà 
)
àà 
data
àà "
)
àà" #
;
àà# $
}
ââ 	
}
ää 
public
åå 

override
åå 
void
åå 
Good
åå 
(
åå 
)
åå 
{
çç 
GoodG2B1
éé 
(
éé 
)
éé 
;
éé 
GoodG2B2
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì ø/
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_08 A
:B C
AbstractTestCaseD T
{ 
private   
static   
bool   
PrivateReturnsTrue   *
(  * +
)  + ,
{!! 
return"" 
true"" 
;"" 
}## 
private%% 
static%% 
bool%% 
PrivateReturnsFalse%% +
(%%+ ,
)%%, -
{&& 
return'' 
false'' 
;'' 
}(( 
public++ 

override++ 
void++ 
Bad++ 
(++ 
)++ 
{,, 
double-- 
data-- 
;-- 
if.. 

(.. 
PrivateReturnsTrue.. 
(.. 
)..  
)..  !
{// 	
data00 
=00 
double00 
.00 
MinValue00 "
;00" #
{22 
	WebClient33 
client33  
=33! "
new33# &
	WebClient33' 0
(330 1
)331 2
;332 3
StreamReader44 
sr44 
=44  !
null44" &
;44& '
try55 
{66 
sr77 
=77 
new77 
StreamReader77 )
(77) *
client77* 0
.770 1
OpenRead771 9
(779 :
$str77: S
)77S T
)77T U
;77U V
string;; 
stringNumber;; '
=;;( )
sr;;* ,
.;;, -
ReadLine;;- 5
(;;5 6
);;6 7
;;;7 8
if<< 
(<< 
stringNumber<< $
!=<<% '
null<<( ,
)<<, -
{== 
try>> 
{?? 
data@@  
=@@! "
double@@# )
.@@) *
Parse@@* /
(@@/ 0
stringNumber@@0 <
.@@< =
Trim@@= A
(@@A B
)@@B C
)@@C D
;@@D E
}AA 
catchBB 
(BB 
FormatExceptionBB .
exceptNumberFormatBB/ A
)BBA B
{CC 
IODD 
.DD 
LoggerDD %
.DD% &
LogDD& )
(DD) *
NLogDD* .
.DD. /
LogLevelDD/ 7
.DD7 8
WarnDD8 <
,DD< =
exceptNumberFormatDD> P
,DDP Q
$str	DDR Ñ
)
DDÑ Ö
;
DDÖ Ü
}EE 
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH "
exceptIOHH# +
)HH+ ,
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ !
(JJ! "
NLogJJ" &
.JJ& '
LogLevelJJ' /
.JJ/ 0
WarnJJ0 4
,JJ4 5
exceptIOJJ6 >
,JJ> ?
$strJJ@ [
)JJ[ \
;JJ\ ]
}KK 
finallyLL 
{MM 
tryOO 
{PP 
ifQQ 
(QQ 
srQQ 
!=QQ !
nullQQ" &
)QQ& '
{RR 
srSS 
.SS 
CloseSS $
(SS$ %
)SS% &
;SS& '
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD `
)XX` a
;XXa b
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
intee 
)ee 
dataee "
)ee" #
;ee# $
}ff 	
}gg 
privatekk 
voidkk 
GoodG2B1kk 
(kk 
)kk 
{ll 
doublemm 
datamm 
;mm 
ifnn 

(nn 
PrivateReturnsFalsenn 
(nn  
)nn  !
)nn! "
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
int{{ 
){{ 
data{{ "
){{" #
;{{# $
}|| 	
}}} 
private
ÄÄ 
void
ÄÄ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
double
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ  
PrivateReturnsTrue
ÉÉ 
(
ÉÉ 
)
ÉÉ  
)
ÉÉ  !
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
else
àà 
{
ââ 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
int
êê 
)
êê 
data
êê "
)
êê" #
;
êê# $
}
ëë 	
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
)
îî 
{
ïï 
GoodG2B1
ññ 
(
ññ 
)
ññ 
;
ññ 
GoodG2B2
óó 
(
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ ˆ+
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_09 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.    
STATIC_READONLY_TRUE   #
)  # $
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
intWW 
)WW 
dataWW "
)WW" #
;WW# $
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` !
STATIC_READONLY_FALSE`` $
)``$ %
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
intmm 
)mm 
datamm "
)mm" #
;mm# $
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
IOuu 
.uu  
STATIC_READONLY_TRUEuu #
)uu# $
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
int
ÇÇ 
)
ÇÇ 
data
ÇÇ "
)
ÇÇ" #
;
ÇÇ# $
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç ÿ+
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_10 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.   

staticTrue   
)   
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
intWW 
)WW 
dataWW "
)WW" #
;WW# $
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` 
staticFalse`` 
)`` 
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
intmm 
)mm 
datamm "
)mm" #
;mm# $
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
IOuu 
.uu 

staticTrueuu 
)uu 
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
int
ÇÇ 
)
ÇÇ 
data
ÇÇ "
)
ÇÇ" #
;
ÇÇ# $
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç «,
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_11 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.   
StaticReturnsTrue    
(    !
)  ! "
)  " #
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
intWW 
)WW 
dataWW "
)WW" #
;WW# $
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` 
StaticReturnsFalse`` !
(``! "
)``" #
)``# $
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
intmm 
)mm 
datamm "
)mm" #
;mm# $
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
IOuu 
.uu 
StaticReturnsTrueuu  
(uu  !
)uu! "
)uu" #
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
int
ÇÇ 
)
ÇÇ 
data
ÇÇ "
)
ÇÇ" #
;
ÇÇ# $
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç Ö&
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_12 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.   $
StaticReturnsTrueOrFalse   '
(  ' (
)  ( )
)  ) *
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
{TT 	
IOVV 
.VV 
	WriteLineVV 
(VV 
(VV 
intVV 
)VV 
dataVV "
)VV" #
;VV# $
}WW 	
}XX 
private]] 
void]] 
GoodG2B]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` $
StaticReturnsTrueOrFalse`` '
(``' (
)``( )
)``) *
{aa 	
datacc 
=cc 
$numcc 
;cc 
}dd 	
elseee 
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
{jj 	
IOll 
.ll 
	WriteLinell 
(ll 
(ll 
intll 
)ll 
datall "
)ll" #
;ll# $
}mm 	
}nn 
publicpp 

overridepp 
voidpp 
Goodpp 
(pp 
)pp 
{qq 
GoodG2Brr 
(rr 
)rr 
;rr 
}ss 
}uu 
}vv €,
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_13 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.    
STATIC_READONLY_FIVE   #
==  $ &
$num  ' (
)  ( )
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
intWW 
)WW 
dataWW "
)WW" #
;WW# $
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.``  
STATIC_READONLY_FIVE`` #
!=``$ &
$num``' (
)``( )
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
intmm 
)mm 
datamm "
)mm" #
;mm# $
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
IOuu 
.uu  
STATIC_READONLY_FIVEuu #
==uu$ &
$numuu' (
)uu( )
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
int
ÇÇ 
)
ÇÇ 
data
ÇÇ "
)
ÇÇ" #
;
ÇÇ# $
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç Ω,
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_14 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.   

staticFive   
==   
$num   
)   
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
intWW 
)WW 
dataWW "
)WW" #
;WW# $
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` 

staticFive`` 
!=`` 
$num`` 
)`` 
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
intmm 
)mm 
datamm "
)mm" #
;mm# $
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
IOuu 
.uu 

staticFiveuu 
==uu 
$numuu 
)uu 
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
int
ÇÇ 
)
ÇÇ 
data
ÇÇ "
)
ÇÇ" #
;
ÇÇ# $
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç ¶.
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_15 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
= 
$num 
; 
switch   
(   
$num   
)   
{!! 	
case"" 
$num"" 
:"" 
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
	WebClient&& 
client&&  
=&&! "
new&&# &
	WebClient&&' 0
(&&0 1
)&&1 2
;&&2 3
StreamReader'' 
sr'' 
=''  !
null''" &
;''& '
try(( 
{)) 
sr** 
=** 
new** 
StreamReader** )
(**) *
client*** 0
.**0 1
OpenRead**1 9
(**9 :
$str**: S
)**S T
)**T U
;**U V
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
double33# )
.33) *
Parse33* /
(33/ 0
stringNumber330 <
.33< =
Trim33= A
(33A B
)33B C
)33C D
;33D E
}44 
catch55 
(55 
FormatException55 .
exceptNumberFormat55/ A
)55A B
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD `
)KK` a
;KKa b
}LL 
}MM 
}NN 
breakOO 
;OO 
defaultPP 
:PP 
dataSS 
=SS 
$numSS 
;SS 
breakTT 
;TT 
}UU 	
{VV 	
IOXX 
.XX 
	WriteLineXX 
(XX 
(XX 
intXX 
)XX 
dataXX "
)XX" #
;XX# $
}YY 	
}ZZ 
private^^ 
void^^ 
GoodG2B1^^ 
(^^ 
)^^ 
{__ 
double`` 
data`` 
=`` 
$num`` 
;`` 
switchaa 
(aa 
$numaa 
)aa 
{bb 	
casecc 
$numcc 
:cc 
dataff 
=ff 
$numff 
;ff 
breakgg 
;gg 
defaulthh 
:hh 
datajj 
=jj 
$numjj 
;jj 
breakkk 
;kk 
}ll 	
{mm 	
IOoo 
.oo 
	WriteLineoo 
(oo 
(oo 
intoo 
)oo 
dataoo "
)oo" #
;oo# $
}pp 	
}qq 
privatett 
voidtt 
GoodG2B2tt 
(tt 
)tt 
{uu 
doublevv 
datavv 
=vv 
$numvv 
;vv 
switchww 
(ww 
$numww 
)ww 
{xx 	
caseyy 
$numyy 
:yy 
data{{ 
={{ 
$num{{ 
;{{ 
break|| 
;|| 
default}} 
:}} 
data
ÄÄ 
=
ÄÄ 
$num
ÄÄ 
;
ÄÄ 
break
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
{
ÉÉ 	
IO
ÖÖ 
.
ÖÖ 
	WriteLine
ÖÖ 
(
ÖÖ 
(
ÖÖ 
int
ÖÖ 
)
ÖÖ 
data
ÖÖ "
)
ÖÖ" #
;
ÖÖ# $
}
ÜÜ 	
}
áá 
public
ââ 

override
ââ 
void
ââ 
Good
ââ 
(
ââ 
)
ââ 
{
ää 
GoodG2B1
ãã 
(
ãã 
)
ãã 
;
ãã 
GoodG2B2
åå 
(
åå 
)
åå 
;
åå 
}
çç 
}èè 
}êê …#
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_16 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
while   
(   
true   
)   
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
breakNN 
;NN 
}OO 	
{PP 	
IORR 
.RR 
	WriteLineRR 
(RR 
(RR 
intRR 
)RR 
dataRR "
)RR" #
;RR# $
}SS 	
}TT 
privateXX 
voidXX 
GoodG2BXX 
(XX 
)XX 
{YY 
doubleZZ 
dataZZ 
;ZZ 
while[[ 
([[ 
true[[ 
)[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
break__ 
;__ 
}`` 	
{aa 	
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
intcc 
)cc 
datacc "
)cc" #
;cc# $
}dd 	
}ee 
publicgg 

overridegg 
voidgg 
Goodgg 
(gg 
)gg 
{hh 
GoodG2Bii 
(ii 
)ii 
;ii 
}jj 
}ll 
}mm π%
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_17 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	
forLL 
(LL 
intLL 
iLL 
=LL 
$numLL 
;LL 
iLL 
<LL 
$numLL 
;LL 
iLL  
++LL  "
)LL" #
{MM 	
{NN 
IOPP 
.PP 
	WriteLinePP 
(PP 
(PP 
intPP !
)PP! "
dataPP" &
)PP& '
;PP' (
}QQ 
}RR 	
}SS 
privateXX 
voidXX 
GoodG2BXX 
(XX 
)XX 
{YY 
doubleZZ 
dataZZ 
;ZZ 
data\\ 
=\\ 
$num\\ 
;\\ 
for]] 
(]] 
int]] 
i]] 
=]] 
$num]] 
;]] 
i]] 
<]] 
$num]] 
;]] 
i]]  
++]]  "
)]]" #
{^^ 	
{__ 
IOaa 
.aa 
	WriteLineaa 
(aa 
(aa 
intaa !
)aa! "
dataaa" &
)aa& '
;aa' (
}bb 
}cc 	
}dd 
publicff 

overrideff 
voidff 
Goodff 
(ff 
)ff 
{gg 
GoodG2Bhh 
(hh 
)hh 
;hh 
}ii 
}kk 
}ll Ï8
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_21 A
:B C
AbstractTestCaseD T
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public   

override   
void   
Bad   
(   
)   
{!! 
double"" 
data"" 
;"" 

badPrivate## 
=## 
true## 
;## 
data$$ 
=$$ 

Bad_source$$ 
($$ 
)$$ 
;$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
int'' 
)'' 
data'' "
)''" #
;''# $
}(( 	
})) 
private++ 
double++ 

Bad_source++ 
(++ 
)++ 
{,, 
double-- 
data-- 
;-- 
if.. 

(.. 

badPrivate.. 
).. 
{// 	
data00 
=00 
double00 
.00 
MinValue00 "
;00" #
{22 
	WebClient33 
client33  
=33! "
new33# &
	WebClient33' 0
(330 1
)331 2
;332 3
StreamReader44 
sr44 
=44  !
null44" &
;44& '
try55 
{66 
sr77 
=77 
new77 
StreamReader77 )
(77) *
client77* 0
.770 1
OpenRead771 9
(779 :
$str77: S
)77S T
)77T U
;77U V
string;; 
stringNumber;; '
=;;( )
sr;;* ,
.;;, -
ReadLine;;- 5
(;;5 6
);;6 7
;;;7 8
if<< 
(<< 
stringNumber<< $
!=<<% '
null<<( ,
)<<, -
{== 
try>> 
{?? 
data@@  
=@@! "
double@@# )
.@@) *
Parse@@* /
(@@/ 0
stringNumber@@0 <
.@@< =
Trim@@= A
(@@A B
)@@B C
)@@C D
;@@D E
}AA 
catchBB 
(BB 
FormatExceptionBB .
exceptNumberFormatBB/ A
)BBA B
{CC 
IODD 
.DD 
LoggerDD %
.DD% &
LogDD& )
(DD) *
NLogDD* .
.DD. /
LogLevelDD/ 7
.DD7 8
WarnDD8 <
,DD< =
exceptNumberFormatDD> P
,DDP Q
$str	DDR Ñ
)
DDÑ Ö
;
DDÖ Ü
}EE 
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH "
exceptIOHH# +
)HH+ ,
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ !
(JJ! "
NLogJJ" &
.JJ& '
LogLevelJJ' /
.JJ/ 0
WarnJJ0 4
,JJ4 5
exceptIOJJ6 >
,JJ> ?
$strJJ@ [
)JJ[ \
;JJ\ ]
}KK 
finallyLL 
{MM 
tryOO 
{PP 
ifQQ 
(QQ 
srQQ 
!=QQ !
nullQQ" &
)QQ& '
{RR 
srSS 
.SS 
CloseSS $
(SS$ %
)SS% &
;SS& '
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD `
)XX` a
;XXa b
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
returncc 
datacc 
;cc 
}dd 
privategg 
boolgg 
goodG2B1_privategg !
=gg" #
falsegg$ )
;gg) *
privatehh 
boolhh 
GoodG2B2_privatehh !
=hh" #
falsehh$ )
;hh) *
publicjj 

overridejj 
voidjj 
Goodjj 
(jj 
)jj 
{kk 
GoodG2B1ll 
(ll 
)ll 
;ll 
GoodG2B2mm 
(mm 
)mm 
;mm 
}nn 
privateqq 
voidqq 
GoodG2B1qq 
(qq 
)qq 
{rr 
doubless 
datass 
;ss 
goodG2B1_privatett 
=tt 
falsett  
;tt  !
datauu 
=uu 
GoodG2B1_sourceuu 
(uu 
)uu  
;uu  !
{vv 	
IOxx 
.xx 
	WriteLinexx 
(xx 
(xx 
intxx 
)xx 
dataxx "
)xx" #
;xx# $
}yy 	
}zz 
private|| 
double|| 
GoodG2B1_source|| "
(||" #
)||# $
{}} 
double~~ 
data~~ 
=~~ 
$num~~ 
;~~ 
if 

( 
goodG2B1_private 
) 
{
ÄÄ 	
data
ÉÉ 
=
ÉÉ 
$num
ÉÉ 
;
ÉÉ 
}
ÑÑ 	
else
ÖÖ 
{
ÜÜ 	
data
àà 
=
àà 
$num
àà 
;
àà 
}
ââ 	
return
ää 
data
ää 
;
ää 
}
ãã 
private
éé 
void
éé 
GoodG2B2
éé 
(
éé 
)
éé 
{
èè 
double
êê 
data
êê 
;
êê 
GoodG2B2_private
ëë 
=
ëë 
true
ëë 
;
ëë  
data
íí 
=
íí 
GoodG2B2_source
íí 
(
íí 
)
íí  
;
íí  !
{
ìì 	
IO
ïï 
.
ïï 
	WriteLine
ïï 
(
ïï 
(
ïï 
int
ïï 
)
ïï 
data
ïï "
)
ïï" #
;
ïï# $
}
ññ 	
}
óó 
private
ôô 
double
ôô 
GoodG2B2_source
ôô "
(
ôô" #
)
ôô# $
{
öö 
double
õõ 
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
if
úú 

(
úú 
GoodG2B2_private
úú 
)
úú 
{
ùù 	
data
üü 
=
üü 
$num
üü 
;
üü 
}
†† 	
else
°° 
{
¢¢ 	
data
•• 
=
•• 
$num
•• 
;
•• 
}
¶¶ 	
return
ßß 
data
ßß 
;
ßß 
}
®® 
}™™ 
}´´ Æ
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_22a B
:C D
AbstractTestCaseE U
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_22b!! K
.!!K L
	BadSource!!L U
(!!U V
)!!V W
;!!W X
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
int$$ 
)$$ 
data$$ "
)$$" #
;$$# $
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
double66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_22b88 K
.88K L
GoodG2B1Source88L Z
(88Z [
)88[ \
;88\ ]
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
int;; 
);; 
data;; "
);;" #
;;;# $
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
doubleBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_22bDD K
.DDK L
GoodG2B2SourceDDL Z
(DDZ [
)DD[ \
;DD\ ]
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
intGG 
)GG 
dataGG "
)GG" #
;GG# $
}HH 	
}II 
}KK 
}LL ∫'
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_22b B
{ 
public 

static 
double 
	BadSource "
(" #
)# $
{ 
double 
data 
; 
if   

(   H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_22a   H
.  H I
badPublicStatic  I X
)  X Y
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
returnUU 
dataUU 
;UU 
}VV 
public[[ 

static[[ 
double[[ 
GoodG2B1Source[[ '
([[' (
)[[( )
{\\ 
double]] 
data]] 
;]] 
if^^ 

(^^ H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_22a^^ H
.^^H I 
goodG2B1PublicStatic^^I ]
)^^] ^
{__ 	
databb 
=bb 
$numbb 
;bb 
}cc 	
elsedd 
{ee 	
datagg 
=gg 
$numgg 
;gg 
}hh 	
returnii 
dataii 
;ii 
}jj 
publicmm 

staticmm 
doublemm 
GoodG2B2Sourcemm '
(mm' (
)mm( )
{nn 
doubleoo 
dataoo 
;oo 
ifpp 

(pp H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_22app H
.ppH I 
GoodG2B2PublicStaticppI ]
)pp] ^
{qq 	
datass 
=ss 
$numss 
;ss 
}tt 	
elseuu 
{vv 	
datayy 
=yy 
$numyy 
;yy 
}zz 	
return{{ 
data{{ 
;{{ 
}|| 
}~~ 
} Ì%
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_31 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
dataCopy   
;   
{!! 	
double"" 
data"" 
;"" 
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
	WebClient&& 
client&&  
=&&! "
new&&# &
	WebClient&&' 0
(&&0 1
)&&1 2
;&&2 3
StreamReader'' 
sr'' 
=''  !
null''" &
;''& '
try(( 
{)) 
sr** 
=** 
new** 
StreamReader** )
(**) *
client*** 0
.**0 1
OpenRead**1 9
(**9 :
$str**: S
)**S T
)**T U
;**U V
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
double33# )
.33) *
Parse33* /
(33/ 0
stringNumber330 <
.33< =
Trim33= A
(33A B
)33B C
)33C D
;33D E
}44 
catch55 
(55 
FormatException55 .
exceptNumberFormat55/ A
)55A B
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD `
)KK` a
;KKa b
}LL 
}MM 
}NN 
dataCopyOO 
=OO 
dataOO 
;OO 
}PP 	
{QQ 	
doubleRR 
dataRR 
=RR 
dataCopyRR "
;RR" #
{SS 
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
intUU !
)UU! "
dataUU" &
)UU& '
;UU' (
}VV 
}WW 	
}XX 
public[[ 

override[[ 
void[[ 
Good[[ 
([[ 
)[[ 
{\\ 
GoodG2B]] 
(]] 
)]] 
;]] 
}^^ 
privateaa 
voidaa 
GoodG2Baa 
(aa 
)aa 
{bb 
doublecc 
dataCopycc 
;cc 
{dd 	
doubleee 
dataee 
;ee 
datagg 
=gg 
$numgg 
;gg 
dataCopyhh 
=hh 
datahh 
;hh 
}ii 	
{jj 	
doublekk 
datakk 
=kk 
dataCopykk "
;kk" #
{ll 
IOnn 
.nn 
	WriteLinenn 
(nn 
(nn 
intnn !
)nn! "
datann" &
)nn& '
;nn' (
}oo 
}pp 	
}qq 
}ss 
}tt Î%
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_41 A
:B C
AbstractTestCaseD T
{ 
private 
static 
void 
BadSink 
(  
double  &
data' +
), -
{ 
{ 	
IO   
.   
	WriteLine   
(   
(   
int   
)   
data   "
)  " #
;  # $
}!! 	
}"" 
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
double&& 
data&& 
;&& 
data'' 
='' 
double'' 
.'' 
MinValue'' 
;'' 
{)) 	
	WebClient** 
client** 
=** 
new** "
	WebClient**# ,
(**, -
)**- .
;**. /
StreamReader++ 
sr++ 
=++ 
null++ "
;++" #
try,, 
{-- 
sr.. 
=.. 
new.. 
StreamReader.. %
(..% &
client..& ,
..., -
OpenRead..- 5
(..5 6
$str..6 O
)..O P
)..P Q
;..Q R
string22 
stringNumber22 #
=22$ %
sr22& (
.22( )
ReadLine22) 1
(221 2
)222 3
;223 4
if33 
(33 
stringNumber33  
!=33! #
null33$ (
)33( )
{44 
try55 
{66 
data77 
=77 
double77 %
.77% &
Parse77& +
(77+ ,
stringNumber77, 8
.778 9
Trim779 =
(77= >
)77> ?
)77? @
;77@ A
}88 
catch99 
(99 
FormatException99 *
exceptNumberFormat99+ =
)99= >
{:: 
IO;; 
.;; 
Logger;; !
.;;! "
Log;;" %
(;;% &
NLog;;& *
.;;* +
LogLevel;;+ 3
.;;3 4
Warn;;4 8
,;;8 9
exceptNumberFormat;;: L
,;;L M
$str	;;N Ä
)
;;Ä Å
;
;;Å Ç
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryFF 
{GG 
ifHH 
(HH 
srHH 
!=HH 
nullHH "
)HH" #
{II 
srJJ 
.JJ 
CloseJJ  
(JJ  !
)JJ! "
;JJ" #
}KK 
}LL 
catchMM 
(MM 
IOExceptionMM "
exceptIOMM# +
)MM+ ,
{NN 
IOOO 
.OO 
LoggerOO 
.OO 
LogOO !
(OO! "
NLogOO" &
.OO& '
LogLevelOO' /
.OO/ 0
WarnOO0 4
,OO4 5
exceptIOOO6 >
,OO> ?
$strOO@ \
)OO\ ]
;OO] ^
}PP 
}QQ 
}RR 	
BadSinkSS 
(SS 
dataSS 
)SS 
;SS 
}TT 
publicWW 

overrideWW 
voidWW 
GoodWW 
(WW 
)WW 
{XX 
GoodG2BYY 
(YY 
)YY 
;YY 
}ZZ 
private\\ 
static\\ 
void\\ 
GoodG2BSink\\ #
(\\# $
double\\$ *
data\\+ /
)\\0 1
{]] 
{^^ 	
IO`` 
.`` 
	WriteLine`` 
(`` 
(`` 
int`` 
)`` 
data`` "
)``" #
;``# $
}aa 	
}bb 
privateee 
staticee 
voidee 
GoodG2Bee 
(ee  
)ee  !
{ff 
doublegg 
datagg 
;gg 
dataii 
=ii 
$numii 
;ii 
GoodG2BSinkjj 
(jj 
datajj 
)jj 
;jj 
}kk 
}mm 
}nn €&
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_42 A
:B C
AbstractTestCaseD T
{ 
private 
static 
double 
	BadSource #
(# $
)$ %
{ 
double 
data 
; 
data 
= 
double 
. 
MinValue 
; 
{!! 	
	WebClient"" 
client"" 
="" 
new"" "
	WebClient""# ,
("", -
)""- .
;"". /
StreamReader## 
sr## 
=## 
null## "
;##" #
try$$ 
{%% 
sr&& 
=&& 
new&& 
StreamReader&& %
(&&% &
client&&& ,
.&&, -
OpenRead&&- 5
(&&5 6
$str&&6 O
)&&O P
)&&P Q
;&&Q R
string** 
stringNumber** #
=**$ %
sr**& (
.**( )
ReadLine**) 1
(**1 2
)**2 3
;**3 4
if++ 
(++ 
stringNumber++  
!=++! #
null++$ (
)++( )
{,, 
try-- 
{.. 
data// 
=// 
double// %
.//% &
Parse//& +
(//+ ,
stringNumber//, 8
.//8 9
Trim//9 =
(//= >
)//> ?
)//? @
;//@ A
}00 
catch11 
(11 
FormatException11 *
exceptNumberFormat11+ =
)11= >
{22 
IO33 
.33 
Logger33 !
.33! "
Log33" %
(33% &
NLog33& *
.33* +
LogLevel33+ 3
.333 4
Warn334 8
,338 9
exceptNumberFormat33: L
,33L M
$str	33N Ä
)
33Ä Å
;
33Å Ç
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
finally;; 
{<< 
try>> 
{?? 
if@@ 
(@@ 
sr@@ 
!=@@ 
null@@ "
)@@" #
{AA 
srBB 
.BB 
CloseBB  
(BB  !
)BB! "
;BB" #
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE "
exceptIOEE# +
)EE+ ,
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG !
(GG! "
NLogGG" &
.GG& '
LogLevelGG' /
.GG/ 0
WarnGG0 4
,GG4 5
exceptIOGG6 >
,GG> ?
$strGG@ \
)GG\ ]
;GG] ^
}HH 
}II 
}JJ 	
returnKK 
dataKK 
;KK 
}LL 
publicOO 

overrideOO 
voidOO 
BadOO 
(OO 
)OO 
{PP 
doubleQQ 
dataQQ 
=QQ 
	BadSourceQQ 
(QQ  
)QQ  !
;QQ! "
{RR 	
IOTT 
.TT 
	WriteLineTT 
(TT 
(TT 
intTT 
)TT 
dataTT "
)TT" #
;TT# $
}UU 	
}VV 
privateYY 
staticYY 
doubleYY 
GoodG2BSourceYY '
(YY' (
)YY( )
{ZZ 
double[[ 
data[[ 
;[[ 
data]] 
=]] 
$num]] 
;]] 
return^^ 
data^^ 
;^^ 
}__ 
privatebb 
staticbb 
voidbb 
GoodG2Bbb 
(bb  
)bb  !
{cc 
doubledd 
datadd 
=dd 
GoodG2BSourcedd #
(dd# $
)dd$ %
;dd% &
{ee 	
IOgg 
.gg 
	WriteLinegg 
(gg 
(gg 
intgg 
)gg 
datagg "
)gg" #
;gg# $
}hh 	
}ii 
publickk 

overridekk 
voidkk 
Goodkk 
(kk 
)kk 
{ll 
GoodG2Bmm 
(mm 
)mm 
;mm 
}nn 
}pp 
}qq °(
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_45 A
:B C
AbstractTestCaseD T
{ 
private 
double 
dataBad 
; 
private 
double 
dataGoodG2B 
; 
private   
void   
BadSink   
(   
)   
{!! 
double"" 
data"" 
="" 
dataBad"" 
;"" 
{## 	
IO%% 
.%% 
	WriteLine%% 
(%% 
(%% 
int%% 
)%% 
data%% "
)%%" #
;%%# $
}&& 	
}'' 
public** 

override** 
void** 
Bad** 
(** 
)** 
{++ 
double,, 
data,, 
;,, 
data-- 
=-- 
double-- 
.-- 
MinValue-- 
;-- 
{// 	
	WebClient00 
client00 
=00 
new00 "
	WebClient00# ,
(00, -
)00- .
;00. /
StreamReader11 
sr11 
=11 
null11 "
;11" #
try22 
{33 
sr44 
=44 
new44 
StreamReader44 %
(44% &
client44& ,
.44, -
OpenRead44- 5
(445 6
$str446 O
)44O P
)44P Q
;44Q R
string88 
stringNumber88 #
=88$ %
sr88& (
.88( )
ReadLine88) 1
(881 2
)882 3
;883 4
if99 
(99 
stringNumber99  
!=99! #
null99$ (
)99( )
{:: 
try;; 
{<< 
data== 
=== 
double== %
.==% &
Parse==& +
(==+ ,
stringNumber==, 8
.==8 9
Trim==9 =
(=== >
)==> ?
)==? @
;==@ A
}>> 
catch?? 
(?? 
FormatException?? *
exceptNumberFormat??+ =
)??= >
{@@ 
IOAA 
.AA 
LoggerAA !
.AA! "
LogAA" %
(AA% &
NLogAA& *
.AA* +
LogLevelAA+ 3
.AA3 4
WarnAA4 8
,AA8 9
exceptNumberFormatAA: L
,AAL M
$str	AAN Ä
)
AAÄ Å
;
AAÅ Ç
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE 
exceptIOEE '
)EE' (
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG 
(GG 
NLogGG "
.GG" #
LogLevelGG# +
.GG+ ,
WarnGG, 0
,GG0 1
exceptIOGG2 :
,GG: ;
$strGG< W
)GGW X
;GGX Y
}HH 
finallyII 
{JJ 
tryLL 
{MM 
ifNN 
(NN 
srNN 
!=NN 
nullNN "
)NN" #
{OO 
srPP 
.PP 
ClosePP  
(PP  !
)PP! "
;PP" #
}QQ 
}RR 
catchSS 
(SS 
IOExceptionSS "
exceptIOSS# +
)SS+ ,
{TT 
IOUU 
.UU 
LoggerUU 
.UU 
LogUU !
(UU! "
NLogUU" &
.UU& '
LogLevelUU' /
.UU/ 0
WarnUU0 4
,UU4 5
exceptIOUU6 >
,UU> ?
$strUU@ \
)UU\ ]
;UU] ^
}VV 
}WW 
}XX 	
dataBadYY 
=YY 
dataYY 
;YY 
BadSinkZZ 
(ZZ 
)ZZ 
;ZZ 
}[[ 
public^^ 

override^^ 
void^^ 
Good^^ 
(^^ 
)^^ 
{__ 
GoodG2B`` 
(`` 
)`` 
;`` 
}aa 
privatecc 
voidcc 
GoodG2BSinkcc 
(cc 
)cc 
{dd 
doubleee 
dataee 
=ee 
dataGoodG2Bee !
;ee! "
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
(hh 
inthh 
)hh 
datahh "
)hh" #
;hh# $
}ii 	
}jj 
privatemm 
voidmm 
GoodG2Bmm 
(mm 
)mm 
{nn 
doubleoo 
dataoo 
;oo 
dataqq 
=qq 
$numqq 
;qq 
dataGoodG2Brr 
=rr 
datarr 
;rr 
GoodG2BSinkss 
(ss 
)ss 
;ss 
}tt 
}vv 
}ww ü!
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_51a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
double 
. 
MinValue 
; 
{!! 	
	WebClient"" 
client"" 
="" 
new"" "
	WebClient""# ,
("", -
)""- .
;"". /
StreamReader## 
sr## 
=## 
null## "
;##" #
try$$ 
{%% 
sr&& 
=&& 
new&& 
StreamReader&& %
(&&% &
client&&& ,
.&&, -
OpenRead&&- 5
(&&5 6
$str&&6 O
)&&O P
)&&P Q
;&&Q R
string** 
stringNumber** #
=**$ %
sr**& (
.**( )
ReadLine**) 1
(**1 2
)**2 3
;**3 4
if++ 
(++ 
stringNumber++  
!=++! #
null++$ (
)++( )
{,, 
try-- 
{.. 
data// 
=// 
double// %
.//% &
Parse//& +
(//+ ,
stringNumber//, 8
.//8 9
Trim//9 =
(//= >
)//> ?
)//? @
;//@ A
}00 
catch11 
(11 
FormatException11 *
exceptNumberFormat11+ =
)11= >
{22 
IO33 
.33 
Logger33 !
.33! "
Log33" %
(33% &
NLog33& *
.33* +
LogLevel33+ 3
.333 4
Warn334 8
,338 9
exceptNumberFormat33: L
,33L M
$str	33N Ä
)
33Ä Å
;
33Å Ç
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
finally;; 
{<< 
try>> 
{?? 
if@@ 
(@@ 
sr@@ 
!=@@ 
null@@ "
)@@" #
{AA 
srBB 
.BB 
CloseBB  
(BB  !
)BB! "
;BB" #
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE "
exceptIOEE# +
)EE+ ,
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG !
(GG! "
NLogGG" &
.GG& '
LogLevelGG' /
.GG/ 0
WarnGG0 4
,GG4 5
exceptIOGG6 >
,GG> ?
$strGG@ \
)GG\ ]
;GG] ^
}HH 
}II 
}JJ 	H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_51bKK D
.KKD E
BadSinkKKE L
(KKL M
dataKKM Q
)KKS T
;KKT U
}LL 
publicOO 

overrideOO 
voidOO 
GoodOO 
(OO 
)OO 
{PP 
GoodG2BQQ 
(QQ 
)QQ 
;QQ 
}RR 
privateUU 
voidUU 
GoodG2BUU 
(UU 
)UU 
{VV 
doubleWW 
dataWW 
;WW 
dataYY 
=YY 
$numYY 
;YY H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_51bZZ D
.ZZD E
GoodG2BSinkZZE P
(ZZP Q
dataZZQ U
)ZZW X
;ZZX Y
}[[ 
}]] 
}^^ £	
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_51b B
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
double### )
data##* .
)##/ 0
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
int'' 
)'' 
data'' "
)''" #
;''# $
}(( 	
})) 
}++ 
},, ü!
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_52a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_52bLL D
.LLD E
BadSinkLLE L
(LLL M
dataLLM Q
)LLR S
;LLS T
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
voidVV 
GoodG2BVV 
(VV 
)VV 
{WW 
doubleXX 
dataXX 
;XX 
dataZZ 
=ZZ 
$numZZ 
;ZZ H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_52b[[ D
.[[D E
GoodG2BSink[[E P
([[P Q
data[[Q U
)[[V W
;[[W X
}\\ 
}^^ 
}__ ˝
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_52b B
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_52c D
.D E
BadSinkE L
(L M
dataM Q
)R S
;S T
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_52c## D
.##D E
GoodG2BSink##E P
(##P Q
data##Q U
)##V W
;##W X
}$$ 
}&& 
}'' £	
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_52c B
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
int(( 
)(( 
data(( "
)((" #
;((# $
})) 	
}** 
},, 
}-- ü!
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_53a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_53bLL D
.LLD E
BadSinkLLE L
(LLL M
dataLLM Q
)LLR S
;LLS T
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
voidVV 
GoodG2BVV 
(VV 
)VV 
{WW 
doubleXX 
dataXX 
;XX 
dataZZ 
=ZZ 
$numZZ 
;ZZ H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_53b[[ D
.[[D E
GoodG2BSink[[E P
([[P Q
data[[Q U
)[[V W
;[[W X
}\\ 
}^^ 
}__ ˝
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_53b B
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_53c D
.D E
BadSinkE L
(L M
dataM Q
)R S
;S T
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_53c## D
.##D E
GoodG2BSink##E P
(##P Q
data##Q U
)##V W
;##W X
}$$ 
}&& 
}'' ˝
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_53c B
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_53d D
.D E
BadSinkE L
(L M
dataM Q
)R S
;S T
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_53d## D
.##D E
GoodG2BSink##E P
(##P Q
data##Q U
)##V W
;##W X
}$$ 
}&& 
}'' £	
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_53d B
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
int(( 
)(( 
data(( "
)((" #
;((# $
})) 	
}** 
},, 
}-- ü!
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_54a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_54bLL D
.LLD E
BadSinkLLE L
(LLL M
dataLLM Q
)LLR S
;LLS T
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
voidVV 
GoodG2BVV 
(VV 
)VV 
{WW 
doubleXX 
dataXX 
;XX 
dataZZ 
=ZZ 
$numZZ 
;ZZ H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_54b[[ D
.[[D E
GoodG2BSink[[E P
([[P Q
data[[Q U
)[[V W
;[[W X
}\\ 
}^^ 
}__ ˝
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_54b B
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_54c D
.D E
BadSinkE L
(L M
dataM Q
)R S
;S T
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_54c## D
.##D E
GoodG2BSink##E P
(##P Q
data##Q U
)##V W
;##W X
}$$ 
}&& 
}'' ˝
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_54c B
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_54d D
.D E
BadSinkE L
(L M
dataM Q
)R S
;S T
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_54d## D
.##D E
GoodG2BSink##E P
(##P Q
data##Q U
)##V W
;##W X
}$$ 
}&& 
}'' ˝
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_54d B
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_54e D
.D E
BadSinkE L
(L M
dataM Q
)R S
;S T
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_54e## D
.##D E
GoodG2BSink##E P
(##P Q
data##Q U
)##V W
;##W X
}$$ 
}&& 
}'' £	
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_54e B
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
int(( 
)(( 
data(( "
)((" #
;((# $
})) 	
}** 
},, 
}-- Û
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_61a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
= H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_61b R
.R S
	BadSourceS \
(\ ]
)] ^
;^ _
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
double++ 
data++ 
=++ H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_61b++ R
.++R S
GoodG2BSource++S `
(++` a
)++a b
;++b c
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
int.. 
).. 
data.. "
).." #
;..# $
}// 	
}00 
}22 
}33 ”
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_61b B
{ 
public 

static 
double 
	BadSource "
(" #
)# $
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	
returnLL 
dataLL 
;LL 
}MM 
publicRR 

staticRR 
doubleRR 
GoodG2BSourceRR &
(RR& '
)RR' (
{SS 
doubleTT 
dataTT 
;TT 
dataVV 
=VV 
$numVV 
;VV 
returnWW 
dataWW 
;WW 
}XX 
}ZZ 
}[[ £&
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_66a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	
doubleLL 
[LL 
]LL 
	dataArrayLL 
=LL 
newLL  
doubleLL! '
[LL' (
$numLL( )
]LL) *
;LL* +
	dataArrayMM 
[MM 
$numMM 
]MM 
=MM 
dataMM 
;MM H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_66bNN D
.NND E
BadSinkNNE L
(NNL M
	dataArrayNNM V
)NNX Y
;NNY Z
}OO 
publicRR 

overrideRR 
voidRR 
GoodRR 
(RR 
)RR 
{SS 
GoodG2BTT 
(TT 
)TT 
;TT 
}UU 
privateXX 
staticXX 
voidXX 
GoodG2BXX 
(XX  
)XX  !
{YY 
doubleZZ 
dataZZ 
;ZZ 
data\\ 
=\\ 
$num\\ 
;\\ 
double]] 
[]] 
]]] 
	dataArray]] 
=]] 
new]]  
double]]! '
[]]' (
$num]]( )
]]]) *
;]]* +
	dataArray^^ 
[^^ 
$num^^ 
]^^ 
=^^ 
data^^ 
;^^ H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_66b__ D
.__D E
GoodG2BSink__E P
(__P Q
	dataArray__Q Z
)__\ ]
;__] ^
}`` 
}bb 
}cc ˇ
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_66b B
{ 
public 

static 
void 
BadSink 
( 
double %
[% &
]& '
	dataArray( 1
)2 3
{ 
double 
data 
= 
	dataArray 
[  
$num  !
]! "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
double%%# )
[%%) *
]%%* +
	dataArray%%, 5
)%%6 7
{&& 
double'' 
data'' 
='' 
	dataArray'' 
[''  
$num''  !
]''! "
;''" #
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
int** 
)** 
data** "
)**" #
;**# $
}++ 	
},, 
}.. 
}// Ü'
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_67a B
:C D
AbstractTestCaseE U
{ 
public 

class 
	Container 
{ 
public 
double 
containerOne "
;" #
}   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
double$$ 
data$$ 
;$$ 
data%% 
=%% 
double%% 
.%% 
MinValue%% 
;%% 
{'' 	
	WebClient(( 
client(( 
=(( 
new(( "
	WebClient((# ,
(((, -
)((- .
;((. /
StreamReader)) 
sr)) 
=)) 
null)) "
;))" #
try** 
{++ 
sr,, 
=,, 
new,, 
StreamReader,, %
(,,% &
client,,& ,
.,,, -
OpenRead,,- 5
(,,5 6
$str,,6 O
),,O P
),,P Q
;,,Q R
string00 
stringNumber00 #
=00$ %
sr00& (
.00( )
ReadLine00) 1
(001 2
)002 3
;003 4
if11 
(11 
stringNumber11  
!=11! #
null11$ (
)11( )
{22 
try33 
{44 
data55 
=55 
double55 %
.55% &
Parse55& +
(55+ ,
stringNumber55, 8
.558 9
Trim559 =
(55= >
)55> ?
)55? @
;55@ A
}66 
catch77 
(77 
FormatException77 *
exceptNumberFormat77+ =
)77= >
{88 
IO99 
.99 
Logger99 !
.99! "
Log99" %
(99% &
NLog99& *
.99* +
LogLevel99+ 3
.993 4
Warn994 8
,998 9
exceptNumberFormat99: L
,99L M
$str	99N Ä
)
99Ä Å
;
99Å Ç
}:: 
};; 
}<< 
catch== 
(== 
IOException== 
exceptIO== '
)==' (
{>> 
IO?? 
.?? 
Logger?? 
.?? 
Log?? 
(?? 
NLog?? "
.??" #
LogLevel??# +
.??+ ,
Warn??, 0
,??0 1
exceptIO??2 :
,??: ;
$str??< W
)??W X
;??X Y
}@@ 
finallyAA 
{BB 
tryDD 
{EE 
ifFF 
(FF 
srFF 
!=FF 
nullFF "
)FF" #
{GG 
srHH 
.HH 
CloseHH  
(HH  !
)HH! "
;HH" #
}II 
}JJ 
catchKK 
(KK 
IOExceptionKK "
exceptIOKK# +
)KK+ ,
{LL 
IOMM 
.MM 
LoggerMM 
.MM 
LogMM !
(MM! "
NLogMM" &
.MM& '
LogLevelMM' /
.MM/ 0
WarnMM0 4
,MM4 5
exceptIOMM6 >
,MM> ?
$strMM@ \
)MM\ ]
;MM] ^
}NN 
}OO 
}PP 	
	ContainerQQ 
dataContainerQQ 
=QQ  !
newQQ" %
	ContainerQQ& /
(QQ/ 0
)QQ0 1
;QQ1 2
dataContainerRR 
.RR 
containerOneRR "
=RR# $
dataRR% )
;RR) *H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_67bSS D
.SSD E
BadSinkSSE L
(SSL M
dataContainerSSM Z
)SS\ ]
;SS] ^
}TT 
publicWW 

overrideWW 
voidWW 
GoodWW 
(WW 
)WW 
{XX 
GoodG2BYY 
(YY 
)YY 
;YY 
}ZZ 
private]] 
static]] 
void]] 
GoodG2B]] 
(]]  
)]]  !
{^^ 
double__ 
data__ 
;__ 
dataaa 
=aa 
$numaa 
;aa 
	Containerbb 
dataContainerbb 
=bb  !
newbb" %
	Containerbb& /
(bb/ 0
)bb0 1
;bb1 2
dataContainercc 
.cc 
containerOnecc "
=cc# $
datacc% )
;cc) *H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_67bdd D
.ddD E
GoodG2BSinkddE P
(ddP Q
dataContainerddQ ^
)dd` a
;dda b
}ee 
}gg 
}hh ˝
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_67b B
{ 
public 

static 
void 
BadSink 
( H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_67a [
.[ \
	Container\ e
dataContainerf s
)t u
{ 
double 
data 
= 
dataContainer #
.# $
containerOne$ 0
;0 1
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_67a%%# _
.%%_ `
	Container%%` i
dataContainer%%j w
)%%x y
{&& 
double'' 
data'' 
='' 
dataContainer'' #
.''# $
containerOne''$ 0
;''0 1
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
int** 
)** 
data** "
)**" #
;**# $
}++ 	
},, 
}.. 
}// Ç!
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_68a B
:C D
AbstractTestCaseE U
{ 
public 

static 
double 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_68bLL D
.LLD E
BadSinkLLE L
(LLL M
)LLM N
;LLN O
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
staticVV 
voidVV 
GoodG2BVV 
(VV  
)VV  !
{WW 
dataYY 
=YY 
$numYY 
;YY H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_68bZZ D
.ZZD E
GoodG2BSinkZZE P
(ZZP Q
)ZZQ R
;ZZR S
}[[ 
}]] 
}^^ µ
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_68b B
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
double 
data 
= H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_68a R
.R S
dataS W
;W X
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
double&& 
data&& 
=&& H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_68a&& R
.&&R S
data&&S W
;&&W X
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
int)) 
))) 
data)) "
)))" #
;))# $
}** 	
}++ 
}-- 
}.. ó"
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_71a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_71bLL D
.LLD E
BadSinkLLE L
(LLL M
(LLM N
ObjectLLN T
)LLT U
dataLLU Y
)LL[ \
;LL\ ]
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
staticVV 
voidVV 
GoodG2BVV 
(VV  
)VV  !
{WW 
doubleXX 
dataXX 
;XX 
dataZZ 
=ZZ 
$numZZ 
;ZZ H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_71b[[ D
.[[D E
GoodG2BSink[[E P
([[P Q
([[Q R
Object[[R X
)[[X Y
data[[Y ]
)[[_ `
;[[` a
}\\ 
}^^ 
}__ À
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_71b B
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
double 
data 
= 
( 
double 
) 

dataObject (
;( )
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
double(( 
data(( 
=(( 
((( 
double(( 
)(( 

dataObject(( (
;((( )
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
int++ 
)++ 
data++ "
)++" #
;++# $
},, 	
}-- 
}// 
}00 ∑+
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_72a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	
	HashtableLL 
dataHashtableLL 
=LL  !
newLL" %
	HashtableLL& /
(LL/ 0
$numLL0 1
)LL1 2
;LL2 3
dataHashtableMM 
.MM 
AddMM 
(MM 
$numMM 
,MM 
dataMM !
)MM! "
;MM" #
dataHashtableNN 
.NN 
AddNN 
(NN 
$numNN 
,NN 
dataNN !
)NN! "
;NN" #
dataHashtableOO 
.OO 
AddOO 
(OO 
$numOO 
,OO 
dataOO !
)OO! "
;OO" #H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_72bPP D
.PPD E
BadSinkPPE L
(PPL M
dataHashtablePPM Z
)PP\ ]
;PP] ^
}QQ 
publicTT 

overrideTT 
voidTT 
GoodTT 
(TT 
)TT 
{UU 
GoodG2BVV 
(VV 
)VV 
;VV 
}WW 
privateZZ 
staticZZ 
voidZZ 
GoodG2BZZ 
(ZZ  
)ZZ  !
{[[ 
double\\ 
data\\ 
;\\ 
data^^ 
=^^ 
$num^^ 
;^^ 
	Hashtable__ 
dataHashtable__ 
=__  !
new__" %
	Hashtable__& /
(__/ 0
$num__0 1
)__1 2
;__2 3
dataHashtable`` 
.`` 
Add`` 
(`` 
$num`` 
,`` 
data`` !
)``! "
;``" #
dataHashtableaa 
.aa 
Addaa 
(aa 
$numaa 
,aa 
dataaa !
)aa! "
;aa" #
dataHashtablebb 
.bb 
Addbb 
(bb 
$numbb 
,bb 
databb !
)bb! "
;bb" #H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_72bcc D
.ccD E
GoodG2BSinkccE P
(ccP Q
dataHashtableccQ ^
)cc` a
;cca b
}dd 
}ff 
}gg Ω
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_72b B
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
double 
data 
= 
( 
double 
) 
dataHashtable ,
[, -
$num- .
]. /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
double(( 
data(( 
=(( 
((( 
double(( 
)(( 
dataHashtable(( ,
[((, -
$num((- .
]((. /
;((/ 0
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
int++ 
)++ 
data++ "
)++" #
;++# $
},, 	
}-- 
}// 
}00 ª+
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_73a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
	WebClient$$ 
client$$ 
=$$ 
new$$ "
	WebClient$$# ,
($$, -
)$$- .
;$$. /
StreamReader%% 
sr%% 
=%% 
null%% "
;%%" #
try&& 
{'' 
sr(( 
=(( 
new(( 
StreamReader(( %
(((% &
client((& ,
.((, -
OpenRead((- 5
(((5 6
$str((6 O
)((O P
)((P Q
;((Q R
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
double11 %
.11% &
Parse11& +
(11+ ,
stringNumber11, 8
.118 9
Trim119 =
(11= >
)11> ?
)11? @
;11@ A
}22 
catch33 
(33 
FormatException33 *
exceptNumberFormat33+ =
)33= >
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ \
)II\ ]
;II] ^
}JJ 
}KK 
}LL 	

LinkedListMM 
<MM 
doubleMM 
>MM 
dataLinkedListMM )
=MM* +
newMM, /

LinkedListMM0 :
<MM: ;
doubleMM; A
>MMA B
(MMB C
)MMC D
;MMD E
dataLinkedListNN 
.NN 
AddLastNN 
(NN 
dataNN #
)NN# $
;NN$ %
dataLinkedListOO 
.OO 
AddLastOO 
(OO 
dataOO #
)OO# $
;OO$ %
dataLinkedListPP 
.PP 
AddLastPP 
(PP 
dataPP #
)PP# $
;PP$ %H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_73bQQ D
.QQD E
BadSinkQQE L
(QQL M
dataLinkedListQQM [
)QQ] ^
;QQ^ _
}RR 
publicUU 

overrideUU 
voidUU 
GoodUU 
(UU 
)UU 
{VV 
GoodG2BWW 
(WW 
)WW 
;WW 
}XX 
private[[ 
static[[ 
void[[ 
GoodG2B[[ 
([[  
)[[  !
{\\ 
double]] 
data]] 
;]] 
data__ 
=__ 
$num__ 
;__ 

LinkedList`` 
<`` 
double`` 
>`` 
dataLinkedList`` )
=``* +
new``, /

LinkedList``0 :
<``: ;
double``; A
>``A B
(``B C
)``C D
;``D E
dataLinkedListaa 
.aa 
AddLastaa 
(aa 
dataaa #
)aa# $
;aa$ %
dataLinkedListbb 
.bb 
AddLastbb 
(bb 
databb #
)bb# $
;bb$ %
dataLinkedListcc 
.cc 
AddLastcc 
(cc 
datacc #
)cc# $
;cc$ %H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_73bdd D
.ddD E
GoodG2BSinkddE P
(ddP Q
dataLinkedListddQ _
)dda b
;ddb c
}ee 
}gg 
}hh È
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_73b B
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
double* 0
>0 1
dataLinkedList2 @
)A B
{ 
double 
data 
= 
dataLinkedList $
.$ %
Last% )
.) *
Value* /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
double&&. 4
>&&4 5
dataLinkedList&&6 D
)&&E F
{'' 
double(( 
data(( 
=(( 
dataLinkedList(( $
.(($ %
Last((% )
.(() *
Value((* /
;((/ 0
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
int++ 
)++ 
data++ "
)++" #
;++# $
},, 	
}-- 
}// 
}00 È-
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_74a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	

DictionaryLL 
<LL 
intLL 
,LL 
doubleLL 
>LL 
dataDictionaryLL -
=LL. /
newLL0 3

DictionaryLL4 >
<LL> ?
intLL? B
,LLB C
doubleLLC I
>LLI J
(LLJ K
)LLK L
;LLL M
dataDictionaryMM 
.MM 
AddMM 
(MM 
$numMM 
,MM 
dataMM "
)MM" #
;MM# $
dataDictionaryNN 
.NN 
AddNN 
(NN 
$numNN 
,NN 
dataNN "
)NN" #
;NN# $
dataDictionaryOO 
.OO 
AddOO 
(OO 
$numOO 
,OO 
dataOO "
)OO" #
;OO# $H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_74bPP D
.PPD E
BadSinkPPE L
(PPL M
dataDictionaryPPM [
)PP] ^
;PP^ _
}QQ 
publicTT 

overrideTT 
voidTT 
GoodTT 
(TT 
)TT 
{UU 
GoodG2BVV 
(VV 
)VV 
;VV 
}WW 
privateZZ 
staticZZ 
voidZZ 
GoodG2BZZ 
(ZZ  
)ZZ  !
{[[ 
double\\ 
data\\ 
;\\ 
data^^ 
=^^ 
$num^^ 
;^^ 

Dictionary__ 
<__ 
int__ 
,__ 
double__ 
>__ 
dataDictionary__ -
=__. /
new__0 3

Dictionary__4 >
<__> ?
int__? B
,__B C
double__C I
>__I J
(__J K
)__K L
;__L M
dataDictionary`` 
.`` 
Add`` 
(`` 
$num`` 
,`` 
data`` "
)``" #
;``# $
dataDictionaryaa 
.aa 
Addaa 
(aa 
$numaa 
,aa 
dataaa "
)aa" #
;aa# $
dataDictionarybb 
.bb 
Addbb 
(bb 
$numbb 
,bb 
databb "
)bb" #
;bb# $H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_74bcc D
.ccD E
GoodG2BSinkccE P
(ccP Q
dataDictionaryccQ _
)cca b
;ccb c
}dd 
}ff 
}gg É
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_74b B
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
double. 4
>4 5
dataDictionary6 D
)E F
{ 
double 
data 
= 
dataDictionary $
[$ %
$num% &
]& '
;' (
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
double&&2 8
>&&8 9
dataDictionary&&: H
)&&I J
{'' 
double(( 
data(( 
=(( 
dataDictionary(( $
[(($ %
$num((% &
]((& '
;((' (
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
int++ 
)++ 
data++ "
)++" #
;++# $
},, 	
}-- 
}// 
}00 Ö5
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_75a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
	WebClient$$ 
client$$ 
=$$ 
new$$ "
	WebClient$$# ,
($$, -
)$$- .
;$$. /
StreamReader%% 
sr%% 
=%% 
null%% "
;%%" #
try&& 
{'' 
sr(( 
=(( 
new(( 
StreamReader(( %
(((% &
client((& ,
.((, -
OpenRead((- 5
(((5 6
$str((6 O
)((O P
)((P Q
;((Q R
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
double11 %
.11% &
Parse11& +
(11+ ,
stringNumber11, 8
.118 9
Trim119 =
(11= >
)11> ?
)11? @
;11@ A
}22 
catch33 
(33 
FormatException33 *
exceptNumberFormat33+ =
)33= >
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ \
)II\ ]
;II] ^
}JJ 
}KK 
}LL 	
byteNN 
[NN 
]NN 
dataSerializedNN 
=NN 
nullNN  $
;NN$ %
tryOO 
{PP 	
BinaryFormatterQQ 
bfQQ 
=QQ  
newQQ! $
BinaryFormatterQQ% 4
(QQ4 5
)QQ5 6
;QQ6 7
usingRR 
(RR 
varRR 
msRR 
=RR 
newRR 
MemoryStreamRR  ,
(RR, -
)RR- .
)RR. /
{SS 
bfTT 
.TT 
	SerializeTT 
(TT 
msTT 
,TT  
dataTT! %
)TT% &
;TT& '
dataSerializedUU 
=UU  
msUU! #
.UU# $
ToArrayUU$ +
(UU+ ,
)UU, -
;UU- .
}VV H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_75bWW H
.WWH I
BadSinkWWI P
(WWP Q
dataSerializedWWQ _
)WWa b
;WWb c
}XX 	
catchYY 
(YY "
SerializationExceptionYY %
exceptSerializeYY& 5
)YY5 6
{ZZ 	
IO[[ 
.[[ 
Logger[[ 
.[[ 
Log[[ 
([[ 
NLog[[ 
.[[ 
LogLevel[[ '
.[[' (
Warn[[( ,
,[[, -
$str[[. X
,[[X Y
exceptSerialize[[Z i
)[[i j
;[[j k
}\\ 	
}]] 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2Bbb 
(bb 
)bb 
;bb 
}cc 
privateff 
staticff 
voidff 
GoodG2Bff 
(ff  
)ff  !
{gg 
doublehh 
datahh 
;hh 
datajj 
=jj 
$numjj 
;jj 
bytell 
[ll 
]ll 
dataSerializedll 
=ll 
nullll  $
;ll$ %
trymm 
{nn 	
BinaryFormatteroo 
bfoo 
=oo  
newoo! $
BinaryFormatteroo% 4
(oo4 5
)oo5 6
;oo6 7
usingpp 
(pp 
varpp 
mspp 
=pp 
newpp 
MemoryStreampp  ,
(pp, -
)pp- .
)pp. /
{qq 
bfrr 
.rr 
	Serializerr 
(rr 
msrr 
,rr  
datarr! %
)rr% &
;rr& '
dataSerializedss 
=ss  
msss! #
.ss# $
ToArrayss$ +
(ss+ ,
)ss, -
;ss- .
}tt H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_75buu H
.uuH I
GoodG2BSinkuuI T
(uuT U
dataSerializeduuU c
)uue f
;uuf g
}vv 	
catchww 
(ww "
SerializationExceptionww %
exceptSerializeww& 5
)ww5 6
{xx 	
IOyy 
.yy 
Loggeryy 
.yy 
Logyy 
(yy 
NLogyy 
.yy 
LogLevelyy '
.yy' (
Warnyy( ,
,yy, -
$stryy. X
,yyX Y
exceptSerializeyyZ i
)yyi j
;yyj k
}zz 	
}{{ 
}}} 
}~~ È!
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_75b B
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
double   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
double&& 
)&& 
binForm&& &
.&&& '
Deserialize&&' 2
(&&2 3
	memStream&&3 <
)&&< =
;&&= >
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
int** !
)**! "
data**" &
)**& '
;**' (
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
double:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
double@@ 
)@@ 
binForm@@ &
.@@& '
Deserialize@@' 2
(@@2 3
	memStream@@3 <
)@@< =
;@@= >
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
intDD !
)DD! "
dataDD" &
)DD& '
;DD' (
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN «$
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_81a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	L
@CWE197_Numeric_Truncation_Error__double_NetClient_to_int_81_baseLL H

baseObjectLLI S
=LLT U
newLLV YL
?CWE197_Numeric_Truncation_Error__double_NetClient_to_int_81_bad	LLZ ô
(
LLô ö
)
LLö õ
;
LLõ ú

baseObjectMM 
.MM 
ActionMM 
(MM 
dataMM 
)MM  
;MM  !
}NN 
publicQQ 

overrideQQ 
voidQQ 
GoodQQ 
(QQ 
)QQ 
{RR 
GoodG2BSS 
(SS 
)SS 
;SS 
}TT 
privateWW 
voidWW 
GoodG2BWW 
(WW 
)WW 
{XX 
doubleYY 
dataYY 
;YY 
data[[ 
=[[ 
$num[[ 
;[[ L
@CWE197_Numeric_Truncation_Error__double_NetClient_to_int_81_base\\ H

baseObject\\I S
=\\T U
new\\V YP
CCWE197_Numeric_Truncation_Error__double_NetClient_to_int_81_goodG2B	\\Z ù
(
\\ù û
)
\\û ü
;
\\ü †

baseObject]] 
.]] 
Action]] 
(]] 
data]] 
)]]  
;]]  !
}^^ 
}`` 
}aa ë
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__double_NetClient_to_int_81_bad E
:F GM
@CWE197_Numeric_Truncation_Error__double_NetClient_to_int_81_base	H à
{ 
public 

override 
void 
Action 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
}   
}!! 
}"" ˙
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 L
@CWE197_Numeric_Truncation_Error__double_NetClient_to_int_81_base O
{ 
public 

abstract 
void 
Action 
(  
double  &
data' +
), -
;- .
} 
} ô
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_int_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class O
CCWE197_Numeric_Truncation_Error__double_NetClient_to_int_81_goodG2B I
:J KM
@CWE197_Numeric_Truncation_Error__double_NetClient_to_int_81_base	L å
{ 
public 

override 
void 
Action 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
}   
}!! 
}"" «!
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_01 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	
{LL 	
IONN 
.NN 
	WriteLineNN 
(NN 
(NN 
longNN 
)NN 
dataNN #
)NN# $
;NN$ %
}OO 	
}PP 
publicSS 

overrideSS 
voidSS 
GoodSS 
(SS 
)SS 
{TT 
GoodG2BUU 
(UU 
)UU 
;UU 
}VV 
privateYY 
voidYY 
GoodG2BYY 
(YY 
)YY 
{ZZ 
double[[ 
data[[ 
;[[ 
data]] 
=]] 
$num]] 
;]] 
{^^ 	
IO`` 
.`` 
	WriteLine`` 
(`` 
(`` 
long`` 
)`` 
data`` #
)``# $
;``$ %
}aa 	
}bb 
}dd 
}ee Ó*
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_02 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
true   
)   
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
longWW 
)WW 
dataWW #
)WW# $
;WW$ %
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
false`` 
)`` 
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
longmm 
)mm 
datamm #
)mm# $
;mm$ %
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
trueuu 
)uu 
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
long
ÇÇ 
)
ÇÇ 
data
ÇÇ #
)
ÇÇ# $
;
ÇÇ$ %
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç ”+
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_03 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
$num   
==   
$num   
)   
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
longWW 
)WW 
dataWW #
)WW# $
;WW$ %
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
$num`` 
!=`` 
$num`` 
)`` 
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
longmm 
)mm 
datamm #
)mm# $
;mm$ %
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
$numuu 
==uu 
$numuu 
)uu 
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
long
ÇÇ 
)
ÇÇ 
data
ÇÇ #
)
ÇÇ# $
;
ÇÇ$ %
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç æ-
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_04 B
:C D
AbstractTestCaseE U
{ 
private   
const   
bool   
PRIVATE_CONST_TRUE   )
=  * +
true  , 0
;  0 1
private!! 
const!! 
bool!! 
PRIVATE_CONST_FALSE!! *
=!!+ ,
false!!- 2
;!!2 3
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
double&& 
data&& 
;&& 
if'' 

('' 
PRIVATE_CONST_TRUE'' 
)'' 
{(( 	
data)) 
=)) 
double)) 
.)) 
MinValue)) "
;))" #
{++ 
	WebClient,, 
client,,  
=,,! "
new,,# &
	WebClient,,' 0
(,,0 1
),,1 2
;,,2 3
StreamReader-- 
sr-- 
=--  !
null--" &
;--& '
try.. 
{// 
sr00 
=00 
new00 
StreamReader00 )
(00) *
client00* 0
.000 1
OpenRead001 9
(009 :
$str00: S
)00S T
)00T U
;00U V
string44 
stringNumber44 '
=44( )
sr44* ,
.44, -
ReadLine44- 5
(445 6
)446 7
;447 8
if55 
(55 
stringNumber55 $
!=55% '
null55( ,
)55, -
{66 
try77 
{88 
data99  
=99! "
double99# )
.99) *
Parse99* /
(99/ 0
stringNumber990 <
.99< =
Trim99= A
(99A B
)99B C
)99C D
;99D E
}:: 
catch;; 
(;; 
FormatException;; .
exceptNumberFormat;;/ A
);;A B
{<< 
IO== 
.== 
Logger== %
.==% &
Log==& )
(==) *
NLog==* .
.==. /
LogLevel==/ 7
.==7 8
Warn==8 <
,==< =
exceptNumberFormat==> P
,==P Q
$str	==R Ñ
)
==Ñ Ö
;
==Ö Ü
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryHH 
{II 
ifJJ 
(JJ 
srJJ 
!=JJ !
nullJJ" &
)JJ& '
{KK 
srLL 
.LL 
CloseLL $
(LL$ %
)LL% &
;LL& '
}MM 
}NN 
catchOO 
(OO 
IOExceptionOO &
exceptIOOO' /
)OO/ 0
{PP 
IOQQ 
.QQ 
LoggerQQ !
.QQ! "
LogQQ" %
(QQ% &
NLogQQ& *
.QQ* +
LogLevelQQ+ 3
.QQ3 4
WarnQQ4 8
,QQ8 9
exceptIOQQ: B
,QQB C
$strQQD `
)QQ` a
;QQa b
}RR 
}SS 
}TT 
}UU 	
elseVV 
{WW 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
{\\ 	
IO^^ 
.^^ 
	WriteLine^^ 
(^^ 
(^^ 
long^^ 
)^^ 
data^^ #
)^^# $
;^^$ %
}__ 	
}`` 
privatedd 
voiddd 
GoodG2B1dd 
(dd 
)dd 
{ee 
doubleff 
dataff 
;ff 
ifgg 

(gg 
PRIVATE_CONST_FALSEgg 
)gg  
{hh 	
datakk 
=kk 
$numkk 
;kk 
}ll 	
elsemm 
{nn 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
longtt 
)tt 
datatt #
)tt# $
;tt$ %
}uu 	
}vv 
privateyy 
voidyy 
GoodG2B2yy 
(yy 
)yy 
{zz 
double{{ 
data{{ 
;{{ 
if|| 

(|| 
PRIVATE_CONST_TRUE|| 
)|| 
{}} 	
data 
= 
$num 
; 
}
ÄÄ 	
else
ÅÅ 
{
ÇÇ 	
data
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
{
áá 	
IO
ââ 
.
ââ 
	WriteLine
ââ 
(
ââ 
(
ââ 
long
ââ 
)
ââ 
data
ââ #
)
ââ# $
;
ââ$ %
}
ää 	
}
ãã 
public
çç 

override
çç 
void
çç 
Good
çç 
(
çç 
)
çç 
{
éé 
GoodG2B1
èè 
(
èè 
)
èè 
;
èè 
GoodG2B2
êê 
(
êê 
)
êê 
;
êê 
}
ëë 
}ìì 
}îî ı,
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_05 B
:C D
AbstractTestCaseE U
{ 
private   
bool   
privateTrue   
=   
true   #
;  # $
private!! 
bool!! 
privateFalse!! 
=!! 
false!!  %
;!!% &
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
double&& 
data&& 
;&& 
if'' 

('' 
privateTrue'' 
)'' 
{(( 	
data)) 
=)) 
double)) 
.)) 
MinValue)) "
;))" #
{++ 
	WebClient,, 
client,,  
=,,! "
new,,# &
	WebClient,,' 0
(,,0 1
),,1 2
;,,2 3
StreamReader-- 
sr-- 
=--  !
null--" &
;--& '
try.. 
{// 
sr00 
=00 
new00 
StreamReader00 )
(00) *
client00* 0
.000 1
OpenRead001 9
(009 :
$str00: S
)00S T
)00T U
;00U V
string44 
stringNumber44 '
=44( )
sr44* ,
.44, -
ReadLine44- 5
(445 6
)446 7
;447 8
if55 
(55 
stringNumber55 $
!=55% '
null55( ,
)55, -
{66 
try77 
{88 
data99  
=99! "
double99# )
.99) *
Parse99* /
(99/ 0
stringNumber990 <
.99< =
Trim99= A
(99A B
)99B C
)99C D
;99D E
}:: 
catch;; 
(;; 
FormatException;; .
exceptNumberFormat;;/ A
);;A B
{<< 
IO== 
.== 
Logger== %
.==% &
Log==& )
(==) *
NLog==* .
.==. /
LogLevel==/ 7
.==7 8
Warn==8 <
,==< =
exceptNumberFormat==> P
,==P Q
$str	==R Ñ
)
==Ñ Ö
;
==Ö Ü
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryHH 
{II 
ifJJ 
(JJ 
srJJ 
!=JJ !
nullJJ" &
)JJ& '
{KK 
srLL 
.LL 
CloseLL $
(LL$ %
)LL% &
;LL& '
}MM 
}NN 
catchOO 
(OO 
IOExceptionOO &
exceptIOOO' /
)OO/ 0
{PP 
IOQQ 
.QQ 
LoggerQQ !
.QQ! "
LogQQ" %
(QQ% &
NLogQQ& *
.QQ* +
LogLevelQQ+ 3
.QQ3 4
WarnQQ4 8
,QQ8 9
exceptIOQQ: B
,QQB C
$strQQD `
)QQ` a
;QQa b
}RR 
}SS 
}TT 
}UU 	
elseVV 
{WW 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
{\\ 	
IO^^ 
.^^ 
	WriteLine^^ 
(^^ 
(^^ 
long^^ 
)^^ 
data^^ #
)^^# $
;^^$ %
}__ 	
}`` 
privatedd 
voiddd 
GoodG2B1dd 
(dd 
)dd 
{ee 
doubleff 
dataff 
;ff 
ifgg 

(gg 
privateFalsegg 
)gg 
{hh 	
datakk 
=kk 
$numkk 
;kk 
}ll 	
elsemm 
{nn 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
longtt 
)tt 
datatt #
)tt# $
;tt$ %
}uu 	
}vv 
privateyy 
voidyy 
GoodG2B2yy 
(yy 
)yy 
{zz 
double{{ 
data{{ 
;{{ 
if|| 

(|| 
privateTrue|| 
)|| 
{}} 	
data 
= 
$num 
; 
}
ÄÄ 	
else
ÅÅ 
{
ÇÇ 	
data
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
{
áá 	
IO
ââ 
.
ââ 
	WriteLine
ââ 
(
ââ 
(
ââ 
long
ââ 
)
ââ 
data
ââ #
)
ââ# $
;
ââ$ %
}
ää 	
}
ãã 
public
çç 

override
çç 
void
çç 
Good
çç 
(
çç 
)
çç 
{
éé 
GoodG2B1
èè 
(
èè 
)
èè 
;
èè 
GoodG2B2
êê 
(
êê 
)
êê 
;
êê 
}
ëë 
}ìì 
}îî î-
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_06 B
:C D
AbstractTestCaseE U
{ 
private   
const   
int   
PRIVATE_CONST_FIVE   (
=  ) *
$num  + ,
;  , -
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
double%% 
data%% 
;%% 
if&& 

(&& 
PRIVATE_CONST_FIVE&& 
==&& !
$num&&" #
)&&# $
{'' 	
data(( 
=(( 
double(( 
.(( 
MinValue(( "
;((" #
{** 
	WebClient++ 
client++  
=++! "
new++# &
	WebClient++' 0
(++0 1
)++1 2
;++2 3
StreamReader,, 
sr,, 
=,,  !
null,," &
;,,& '
try-- 
{.. 
sr// 
=// 
new// 
StreamReader// )
(//) *
client//* 0
.//0 1
OpenRead//1 9
(//9 :
$str//: S
)//S T
)//T U
;//U V
string33 
stringNumber33 '
=33( )
sr33* ,
.33, -
ReadLine33- 5
(335 6
)336 7
;337 8
if44 
(44 
stringNumber44 $
!=44% '
null44( ,
)44, -
{55 
try66 
{77 
data88  
=88! "
double88# )
.88) *
Parse88* /
(88/ 0
stringNumber880 <
.88< =
Trim88= A
(88A B
)88B C
)88C D
;88D E
}99 
catch:: 
(:: 
FormatException:: .
exceptNumberFormat::/ A
)::A B
{;; 
IO<< 
.<< 
Logger<< %
.<<% &
Log<<& )
(<<) *
NLog<<* .
.<<. /
LogLevel<</ 7
.<<7 8
Warn<<8 <
,<<< =
exceptNumberFormat<<> P
,<<P Q
$str	<<R Ñ
)
<<Ñ Ö
;
<<Ö Ü
}== 
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ "
exceptIO@@# +
)@@+ ,
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB !
(BB! "
NLogBB" &
.BB& '
LogLevelBB' /
.BB/ 0
WarnBB0 4
,BB4 5
exceptIOBB6 >
,BB> ?
$strBB@ [
)BB[ \
;BB\ ]
}CC 
finallyDD 
{EE 
tryGG 
{HH 
ifII 
(II 
srII 
!=II !
nullII" &
)II& '
{JJ 
srKK 
.KK 
CloseKK $
(KK$ %
)KK% &
;KK& '
}LL 
}MM 
catchNN 
(NN 
IOExceptionNN &
exceptIONN' /
)NN/ 0
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
exceptIOPP: B
,PPB C
$strPPD `
)PP` a
;PPa b
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
long]] 
)]] 
data]] #
)]]# $
;]]$ %
}^^ 	
}__ 
privatecc 
voidcc 
GoodG2B1cc 
(cc 
)cc 
{dd 
doubleee 
dataee 
;ee 
ifff 

(ff 
PRIVATE_CONST_FIVEff 
!=ff !
$numff" #
)ff# $
{gg 	
datajj 
=jj 
$numjj 
;jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
longss 
)ss 
datass #
)ss# $
;ss$ %
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
)xx 
{yy 
doublezz 
datazz 
;zz 
if{{ 

({{ 
PRIVATE_CONST_FIVE{{ 
=={{ !
$num{{" #
){{# $
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
else
ÄÄ 
{
ÅÅ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
{
ÜÜ 	
IO
àà 
.
àà 
	WriteLine
àà 
(
àà 
(
àà 
long
àà 
)
àà 
data
àà #
)
àà# $
;
àà$ %
}
ââ 	
}
ää 
public
åå 

override
åå 
void
åå 
Good
åå 
(
åå 
)
åå 
{
çç 
GoodG2B1
éé 
(
éé 
)
éé 
;
éé 
GoodG2B2
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì Â,
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_07 B
:C D
AbstractTestCaseE U
{ 
private   
int   
privateFive   
=   
$num   
;    
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
double%% 
data%% 
;%% 
if&& 

(&& 
privateFive&& 
==&& 
$num&& 
)&& 
{'' 	
data(( 
=(( 
double(( 
.(( 
MinValue(( "
;((" #
{** 
	WebClient++ 
client++  
=++! "
new++# &
	WebClient++' 0
(++0 1
)++1 2
;++2 3
StreamReader,, 
sr,, 
=,,  !
null,," &
;,,& '
try-- 
{.. 
sr// 
=// 
new// 
StreamReader// )
(//) *
client//* 0
.//0 1
OpenRead//1 9
(//9 :
$str//: S
)//S T
)//T U
;//U V
string33 
stringNumber33 '
=33( )
sr33* ,
.33, -
ReadLine33- 5
(335 6
)336 7
;337 8
if44 
(44 
stringNumber44 $
!=44% '
null44( ,
)44, -
{55 
try66 
{77 
data88  
=88! "
double88# )
.88) *
Parse88* /
(88/ 0
stringNumber880 <
.88< =
Trim88= A
(88A B
)88B C
)88C D
;88D E
}99 
catch:: 
(:: 
FormatException:: .
exceptNumberFormat::/ A
)::A B
{;; 
IO<< 
.<< 
Logger<< %
.<<% &
Log<<& )
(<<) *
NLog<<* .
.<<. /
LogLevel<</ 7
.<<7 8
Warn<<8 <
,<<< =
exceptNumberFormat<<> P
,<<P Q
$str	<<R Ñ
)
<<Ñ Ö
;
<<Ö Ü
}== 
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ "
exceptIO@@# +
)@@+ ,
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB !
(BB! "
NLogBB" &
.BB& '
LogLevelBB' /
.BB/ 0
WarnBB0 4
,BB4 5
exceptIOBB6 >
,BB> ?
$strBB@ [
)BB[ \
;BB\ ]
}CC 
finallyDD 
{EE 
tryGG 
{HH 
ifII 
(II 
srII 
!=II !
nullII" &
)II& '
{JJ 
srKK 
.KK 
CloseKK $
(KK$ %
)KK% &
;KK& '
}LL 
}MM 
catchNN 
(NN 
IOExceptionNN &
exceptIONN' /
)NN/ 0
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
exceptIOPP: B
,PPB C
$strPPD `
)PP` a
;PPa b
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
long]] 
)]] 
data]] #
)]]# $
;]]$ %
}^^ 	
}__ 
privatecc 
voidcc 
GoodG2B1cc 
(cc 
)cc 
{dd 
doubleee 
dataee 
;ee 
ifff 

(ff 
privateFiveff 
!=ff 
$numff 
)ff 
{gg 	
datajj 
=jj 
$numjj 
;jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
longss 
)ss 
datass #
)ss# $
;ss$ %
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
)xx 
{yy 
doublezz 
datazz 
;zz 
if{{ 

({{ 
privateFive{{ 
=={{ 
$num{{ 
){{ 
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
else
ÄÄ 
{
ÅÅ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
{
ÜÜ 	
IO
àà 
.
àà 
	WriteLine
àà 
(
àà 
(
àà 
long
àà 
)
àà 
data
àà #
)
àà# $
;
àà$ %
}
ââ 	
}
ää 
public
åå 

override
åå 
void
åå 
Good
åå 
(
åå 
)
åå 
{
çç 
GoodG2B1
éé 
(
éé 
)
éé 
;
éé 
GoodG2B2
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì ƒ/
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_08 B
:C D
AbstractTestCaseE U
{ 
private   
static   
bool   
PrivateReturnsTrue   *
(  * +
)  + ,
{!! 
return"" 
true"" 
;"" 
}## 
private%% 
static%% 
bool%% 
PrivateReturnsFalse%% +
(%%+ ,
)%%, -
{&& 
return'' 
false'' 
;'' 
}(( 
public++ 

override++ 
void++ 
Bad++ 
(++ 
)++ 
{,, 
double-- 
data-- 
;-- 
if.. 

(.. 
PrivateReturnsTrue.. 
(.. 
)..  
)..  !
{// 	
data00 
=00 
double00 
.00 
MinValue00 "
;00" #
{22 
	WebClient33 
client33  
=33! "
new33# &
	WebClient33' 0
(330 1
)331 2
;332 3
StreamReader44 
sr44 
=44  !
null44" &
;44& '
try55 
{66 
sr77 
=77 
new77 
StreamReader77 )
(77) *
client77* 0
.770 1
OpenRead771 9
(779 :
$str77: S
)77S T
)77T U
;77U V
string;; 
stringNumber;; '
=;;( )
sr;;* ,
.;;, -
ReadLine;;- 5
(;;5 6
);;6 7
;;;7 8
if<< 
(<< 
stringNumber<< $
!=<<% '
null<<( ,
)<<, -
{== 
try>> 
{?? 
data@@  
=@@! "
double@@# )
.@@) *
Parse@@* /
(@@/ 0
stringNumber@@0 <
.@@< =
Trim@@= A
(@@A B
)@@B C
)@@C D
;@@D E
}AA 
catchBB 
(BB 
FormatExceptionBB .
exceptNumberFormatBB/ A
)BBA B
{CC 
IODD 
.DD 
LoggerDD %
.DD% &
LogDD& )
(DD) *
NLogDD* .
.DD. /
LogLevelDD/ 7
.DD7 8
WarnDD8 <
,DD< =
exceptNumberFormatDD> P
,DDP Q
$str	DDR Ñ
)
DDÑ Ö
;
DDÖ Ü
}EE 
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH "
exceptIOHH# +
)HH+ ,
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ !
(JJ! "
NLogJJ" &
.JJ& '
LogLevelJJ' /
.JJ/ 0
WarnJJ0 4
,JJ4 5
exceptIOJJ6 >
,JJ> ?
$strJJ@ [
)JJ[ \
;JJ\ ]
}KK 
finallyLL 
{MM 
tryOO 
{PP 
ifQQ 
(QQ 
srQQ 
!=QQ !
nullQQ" &
)QQ& '
{RR 
srSS 
.SS 
CloseSS $
(SS$ %
)SS% &
;SS& '
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD `
)XX` a
;XXa b
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
longee 
)ee 
dataee #
)ee# $
;ee$ %
}ff 	
}gg 
privatekk 
voidkk 
GoodG2B1kk 
(kk 
)kk 
{ll 
doublemm 
datamm 
;mm 
ifnn 

(nn 
PrivateReturnsFalsenn 
(nn  
)nn  !
)nn! "
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
long{{ 
){{ 
data{{ #
){{# $
;{{$ %
}|| 	
}}} 
private
ÄÄ 
void
ÄÄ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
double
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ  
PrivateReturnsTrue
ÉÉ 
(
ÉÉ 
)
ÉÉ  
)
ÉÉ  !
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
else
àà 
{
ââ 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
long
êê 
)
êê 
data
êê #
)
êê# $
;
êê$ %
}
ëë 	
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
)
îî 
{
ïï 
GoodG2B1
ññ 
(
ññ 
)
ññ 
;
ññ 
GoodG2B2
óó 
(
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ ˚+
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_09 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.    
STATIC_READONLY_TRUE   #
)  # $
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
longWW 
)WW 
dataWW #
)WW# $
;WW$ %
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` !
STATIC_READONLY_FALSE`` $
)``$ %
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
longmm 
)mm 
datamm #
)mm# $
;mm$ %
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
IOuu 
.uu  
STATIC_READONLY_TRUEuu #
)uu# $
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
long
ÇÇ 
)
ÇÇ 
data
ÇÇ #
)
ÇÇ# $
;
ÇÇ$ %
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç ›+
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_10 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.   

staticTrue   
)   
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
longWW 
)WW 
dataWW #
)WW# $
;WW$ %
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` 
staticFalse`` 
)`` 
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
longmm 
)mm 
datamm #
)mm# $
;mm$ %
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
IOuu 
.uu 

staticTrueuu 
)uu 
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
long
ÇÇ 
)
ÇÇ 
data
ÇÇ #
)
ÇÇ# $
;
ÇÇ$ %
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç Ã,
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_11 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.   
StaticReturnsTrue    
(    !
)  ! "
)  " #
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
longWW 
)WW 
dataWW #
)WW# $
;WW$ %
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` 
StaticReturnsFalse`` !
(``! "
)``" #
)``# $
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
longmm 
)mm 
datamm #
)mm# $
;mm$ %
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
IOuu 
.uu 
StaticReturnsTrueuu  
(uu  !
)uu! "
)uu" #
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
long
ÇÇ 
)
ÇÇ 
data
ÇÇ #
)
ÇÇ# $
;
ÇÇ$ %
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç â&
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_12 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.   $
StaticReturnsTrueOrFalse   '
(  ' (
)  ( )
)  ) *
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
{TT 	
IOVV 
.VV 
	WriteLineVV 
(VV 
(VV 
longVV 
)VV 
dataVV #
)VV# $
;VV$ %
}WW 	
}XX 
private]] 
void]] 
GoodG2B]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` $
StaticReturnsTrueOrFalse`` '
(``' (
)``( )
)``) *
{aa 	
datacc 
=cc 
$numcc 
;cc 
}dd 	
elseee 
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
{jj 	
IOll 
.ll 
	WriteLinell 
(ll 
(ll 
longll 
)ll 
datall #
)ll# $
;ll$ %
}mm 	
}nn 
publicpp 

overridepp 
voidpp 
Goodpp 
(pp 
)pp 
{qq 
GoodG2Brr 
(rr 
)rr 
;rr 
}ss 
}uu 
}vv ‡,
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_13 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.    
STATIC_READONLY_FIVE   #
==  $ &
$num  ' (
)  ( )
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
longWW 
)WW 
dataWW #
)WW# $
;WW$ %
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.``  
STATIC_READONLY_FIVE`` #
!=``$ &
$num``' (
)``( )
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
longmm 
)mm 
datamm #
)mm# $
;mm$ %
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
IOuu 
.uu  
STATIC_READONLY_FIVEuu #
==uu$ &
$numuu' (
)uu( )
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
long
ÇÇ 
)
ÇÇ 
data
ÇÇ #
)
ÇÇ# $
;
ÇÇ$ %
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç ¬,
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_14 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.   

staticFive   
==   
$num   
)   
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
longWW 
)WW 
dataWW #
)WW# $
;WW$ %
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` 

staticFive`` 
!=`` 
$num`` 
)`` 
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
longmm 
)mm 
datamm #
)mm# $
;mm$ %
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
IOuu 
.uu 

staticFiveuu 
==uu 
$numuu 
)uu 
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
long
ÇÇ 
)
ÇÇ 
data
ÇÇ #
)
ÇÇ# $
;
ÇÇ$ %
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç ´.
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_15 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
= 
$num 
; 
switch   
(   
$num   
)   
{!! 	
case"" 
$num"" 
:"" 
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
	WebClient&& 
client&&  
=&&! "
new&&# &
	WebClient&&' 0
(&&0 1
)&&1 2
;&&2 3
StreamReader'' 
sr'' 
=''  !
null''" &
;''& '
try(( 
{)) 
sr** 
=** 
new** 
StreamReader** )
(**) *
client*** 0
.**0 1
OpenRead**1 9
(**9 :
$str**: S
)**S T
)**T U
;**U V
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
double33# )
.33) *
Parse33* /
(33/ 0
stringNumber330 <
.33< =
Trim33= A
(33A B
)33B C
)33C D
;33D E
}44 
catch55 
(55 
FormatException55 .
exceptNumberFormat55/ A
)55A B
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD `
)KK` a
;KKa b
}LL 
}MM 
}NN 
breakOO 
;OO 
defaultPP 
:PP 
dataSS 
=SS 
$numSS 
;SS 
breakTT 
;TT 
}UU 	
{VV 	
IOXX 
.XX 
	WriteLineXX 
(XX 
(XX 
longXX 
)XX 
dataXX #
)XX# $
;XX$ %
}YY 	
}ZZ 
private^^ 
void^^ 
GoodG2B1^^ 
(^^ 
)^^ 
{__ 
double`` 
data`` 
=`` 
$num`` 
;`` 
switchaa 
(aa 
$numaa 
)aa 
{bb 	
casecc 
$numcc 
:cc 
dataff 
=ff 
$numff 
;ff 
breakgg 
;gg 
defaulthh 
:hh 
datajj 
=jj 
$numjj 
;jj 
breakkk 
;kk 
}ll 	
{mm 	
IOoo 
.oo 
	WriteLineoo 
(oo 
(oo 
longoo 
)oo 
dataoo #
)oo# $
;oo$ %
}pp 	
}qq 
privatett 
voidtt 
GoodG2B2tt 
(tt 
)tt 
{uu 
doublevv 
datavv 
=vv 
$numvv 
;vv 
switchww 
(ww 
$numww 
)ww 
{xx 	
caseyy 
$numyy 
:yy 
data{{ 
={{ 
$num{{ 
;{{ 
break|| 
;|| 
default}} 
:}} 
data
ÄÄ 
=
ÄÄ 
$num
ÄÄ 
;
ÄÄ 
break
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
{
ÉÉ 	
IO
ÖÖ 
.
ÖÖ 
	WriteLine
ÖÖ 
(
ÖÖ 
(
ÖÖ 
long
ÖÖ 
)
ÖÖ 
data
ÖÖ #
)
ÖÖ# $
;
ÖÖ$ %
}
ÜÜ 	
}
áá 
public
ââ 

override
ââ 
void
ââ 
Good
ââ 
(
ââ 
)
ââ 
{
ää 
GoodG2B1
ãã 
(
ãã 
)
ãã 
;
ãã 
GoodG2B2
åå 
(
åå 
)
åå 
;
åå 
}
çç 
}èè 
}êê Õ#
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_16 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
while   
(   
true   
)   
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
breakNN 
;NN 
}OO 	
{PP 	
IORR 
.RR 
	WriteLineRR 
(RR 
(RR 
longRR 
)RR 
dataRR #
)RR# $
;RR$ %
}SS 	
}TT 
privateXX 
voidXX 
GoodG2BXX 
(XX 
)XX 
{YY 
doubleZZ 
dataZZ 
;ZZ 
while[[ 
([[ 
true[[ 
)[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
break__ 
;__ 
}`` 	
{aa 	
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
longcc 
)cc 
datacc #
)cc# $
;cc$ %
}dd 	
}ee 
publicgg 

overridegg 
voidgg 
Goodgg 
(gg 
)gg 
{hh 
GoodG2Bii 
(ii 
)ii 
;ii 
}jj 
}ll 
}mm Ω%
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_17 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	
forLL 
(LL 
intLL 
iLL 
=LL 
$numLL 
;LL 
iLL 
<LL 
$numLL 
;LL 
iLL  
++LL  "
)LL" #
{MM 	
{NN 
IOPP 
.PP 
	WriteLinePP 
(PP 
(PP 
longPP "
)PP" #
dataPP# '
)PP' (
;PP( )
}QQ 
}RR 	
}SS 
privateXX 
voidXX 
GoodG2BXX 
(XX 
)XX 
{YY 
doubleZZ 
dataZZ 
;ZZ 
data\\ 
=\\ 
$num\\ 
;\\ 
for]] 
(]] 
int]] 
i]] 
=]] 
$num]] 
;]] 
i]] 
<]] 
$num]] 
;]] 
i]]  
++]]  "
)]]" #
{^^ 	
{__ 
IOaa 
.aa 
	WriteLineaa 
(aa 
(aa 
longaa "
)aa" #
dataaa# '
)aa' (
;aa( )
}bb 
}cc 	
}dd 
publicff 

overrideff 
voidff 
Goodff 
(ff 
)ff 
{gg 
GoodG2Bhh 
(hh 
)hh 
;hh 
}ii 
}kk 
}ll Ò8
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_21 B
:C D
AbstractTestCaseE U
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public   

override   
void   
Bad   
(   
)   
{!! 
double"" 
data"" 
;"" 

badPrivate## 
=## 
true## 
;## 
data$$ 
=$$ 

Bad_source$$ 
($$ 
)$$ 
;$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
long'' 
)'' 
data'' #
)''# $
;''$ %
}(( 	
})) 
private++ 
double++ 

Bad_source++ 
(++ 
)++ 
{,, 
double-- 
data-- 
;-- 
if.. 

(.. 

badPrivate.. 
).. 
{// 	
data00 
=00 
double00 
.00 
MinValue00 "
;00" #
{22 
	WebClient33 
client33  
=33! "
new33# &
	WebClient33' 0
(330 1
)331 2
;332 3
StreamReader44 
sr44 
=44  !
null44" &
;44& '
try55 
{66 
sr77 
=77 
new77 
StreamReader77 )
(77) *
client77* 0
.770 1
OpenRead771 9
(779 :
$str77: S
)77S T
)77T U
;77U V
string;; 
stringNumber;; '
=;;( )
sr;;* ,
.;;, -
ReadLine;;- 5
(;;5 6
);;6 7
;;;7 8
if<< 
(<< 
stringNumber<< $
!=<<% '
null<<( ,
)<<, -
{== 
try>> 
{?? 
data@@  
=@@! "
double@@# )
.@@) *
Parse@@* /
(@@/ 0
stringNumber@@0 <
.@@< =
Trim@@= A
(@@A B
)@@B C
)@@C D
;@@D E
}AA 
catchBB 
(BB 
FormatExceptionBB .
exceptNumberFormatBB/ A
)BBA B
{CC 
IODD 
.DD 
LoggerDD %
.DD% &
LogDD& )
(DD) *
NLogDD* .
.DD. /
LogLevelDD/ 7
.DD7 8
WarnDD8 <
,DD< =
exceptNumberFormatDD> P
,DDP Q
$str	DDR Ñ
)
DDÑ Ö
;
DDÖ Ü
}EE 
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH "
exceptIOHH# +
)HH+ ,
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ !
(JJ! "
NLogJJ" &
.JJ& '
LogLevelJJ' /
.JJ/ 0
WarnJJ0 4
,JJ4 5
exceptIOJJ6 >
,JJ> ?
$strJJ@ [
)JJ[ \
;JJ\ ]
}KK 
finallyLL 
{MM 
tryOO 
{PP 
ifQQ 
(QQ 
srQQ 
!=QQ !
nullQQ" &
)QQ& '
{RR 
srSS 
.SS 
CloseSS $
(SS$ %
)SS% &
;SS& '
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD `
)XX` a
;XXa b
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
returncc 
datacc 
;cc 
}dd 
privategg 
boolgg 
goodG2B1_privategg !
=gg" #
falsegg$ )
;gg) *
privatehh 
boolhh 
GoodG2B2_privatehh !
=hh" #
falsehh$ )
;hh) *
publicjj 

overridejj 
voidjj 
Goodjj 
(jj 
)jj 
{kk 
GoodG2B1ll 
(ll 
)ll 
;ll 
GoodG2B2mm 
(mm 
)mm 
;mm 
}nn 
privateqq 
voidqq 
GoodG2B1qq 
(qq 
)qq 
{rr 
doubless 
datass 
;ss 
goodG2B1_privatett 
=tt 
falsett  
;tt  !
datauu 
=uu 
GoodG2B1_sourceuu 
(uu 
)uu  
;uu  !
{vv 	
IOxx 
.xx 
	WriteLinexx 
(xx 
(xx 
longxx 
)xx 
dataxx #
)xx# $
;xx$ %
}yy 	
}zz 
private|| 
double|| 
GoodG2B1_source|| "
(||" #
)||# $
{}} 
double~~ 
data~~ 
=~~ 
$num~~ 
;~~ 
if 

( 
goodG2B1_private 
) 
{
ÄÄ 	
data
ÉÉ 
=
ÉÉ 
$num
ÉÉ 
;
ÉÉ 
}
ÑÑ 	
else
ÖÖ 
{
ÜÜ 	
data
àà 
=
àà 
$num
àà 
;
àà 
}
ââ 	
return
ää 
data
ää 
;
ää 
}
ãã 
private
éé 
void
éé 
GoodG2B2
éé 
(
éé 
)
éé 
{
èè 
double
êê 
data
êê 
;
êê 
GoodG2B2_private
ëë 
=
ëë 
true
ëë 
;
ëë  
data
íí 
=
íí 
GoodG2B2_source
íí 
(
íí 
)
íí  
;
íí  !
{
ìì 	
IO
ïï 
.
ïï 
	WriteLine
ïï 
(
ïï 
(
ïï 
long
ïï 
)
ïï 
data
ïï #
)
ïï# $
;
ïï$ %
}
ññ 	
}
óó 
private
ôô 
double
ôô 
GoodG2B2_source
ôô "
(
ôô" #
)
ôô# $
{
öö 
double
õõ 
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
if
úú 

(
úú 
GoodG2B2_private
úú 
)
úú 
{
ùù 	
data
üü 
=
üü 
$num
üü 
;
üü 
}
†† 	
else
°° 
{
¢¢ 	
data
•• 
=
•• 
$num
•• 
;
•• 
}
¶¶ 	
return
ßß 
data
ßß 
;
ßß 
}
®® 
}™™ 
}´´ ∂
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_22a C
:D E
AbstractTestCaseF V
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_22b!! L
.!!L M
	BadSource!!M V
(!!V W
)!!W X
;!!X Y
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
long$$ 
)$$ 
data$$ #
)$$# $
;$$$ %
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
double66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_22b88 L
.88L M
GoodG2B1Source88M [
(88[ \
)88\ ]
;88] ^
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
long;; 
);; 
data;; #
);;# $
;;;$ %
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
doubleBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_22bDD L
.DDL M
GoodG2B2SourceDDM [
(DD[ \
)DD\ ]
;DD] ^
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
longGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
}KK 
}LL ø'
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_22b C
{ 
public 

static 
double 
	BadSource "
(" #
)# $
{ 
double 
data 
; 
if   

(   I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_22a   I
.  I J
badPublicStatic  J Y
)  Y Z
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
returnUU 
dataUU 
;UU 
}VV 
public[[ 

static[[ 
double[[ 
GoodG2B1Source[[ '
([[' (
)[[( )
{\\ 
double]] 
data]] 
;]] 
if^^ 

(^^ I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_22a^^ I
.^^I J 
goodG2B1PublicStatic^^J ^
)^^^ _
{__ 	
databb 
=bb 
$numbb 
;bb 
}cc 	
elsedd 
{ee 	
datagg 
=gg 
$numgg 
;gg 
}hh 	
returnii 
dataii 
;ii 
}jj 
publicmm 

staticmm 
doublemm 
GoodG2B2Sourcemm '
(mm' (
)mm( )
{nn 
doubleoo 
dataoo 
;oo 
ifpp 

(pp I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_22app I
.ppI J 
GoodG2B2PublicStaticppJ ^
)pp^ _
{qq 	
datass 
=ss 
$numss 
;ss 
}tt 	
elseuu 
{vv 	
datayy 
=yy 
$numyy 
;yy 
}zz 	
return{{ 
data{{ 
;{{ 
}|| 
}~~ 
} Ò%
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_31 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
dataCopy   
;   
{!! 	
double"" 
data"" 
;"" 
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
	WebClient&& 
client&&  
=&&! "
new&&# &
	WebClient&&' 0
(&&0 1
)&&1 2
;&&2 3
StreamReader'' 
sr'' 
=''  !
null''" &
;''& '
try(( 
{)) 
sr** 
=** 
new** 
StreamReader** )
(**) *
client*** 0
.**0 1
OpenRead**1 9
(**9 :
$str**: S
)**S T
)**T U
;**U V
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
double33# )
.33) *
Parse33* /
(33/ 0
stringNumber330 <
.33< =
Trim33= A
(33A B
)33B C
)33C D
;33D E
}44 
catch55 
(55 
FormatException55 .
exceptNumberFormat55/ A
)55A B
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD `
)KK` a
;KKa b
}LL 
}MM 
}NN 
dataCopyOO 
=OO 
dataOO 
;OO 
}PP 	
{QQ 	
doubleRR 
dataRR 
=RR 
dataCopyRR "
;RR" #
{SS 
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
longUU "
)UU" #
dataUU# '
)UU' (
;UU( )
}VV 
}WW 	
}XX 
public[[ 

override[[ 
void[[ 
Good[[ 
([[ 
)[[ 
{\\ 
GoodG2B]] 
(]] 
)]] 
;]] 
}^^ 
privateaa 
voidaa 
GoodG2Baa 
(aa 
)aa 
{bb 
doublecc 
dataCopycc 
;cc 
{dd 	
doubleee 
dataee 
;ee 
datagg 
=gg 
$numgg 
;gg 
dataCopyhh 
=hh 
datahh 
;hh 
}ii 	
{jj 	
doublekk 
datakk 
=kk 
dataCopykk "
;kk" #
{ll 
IOnn 
.nn 
	WriteLinenn 
(nn 
(nn 
longnn "
)nn" #
datann# '
)nn' (
;nn( )
}oo 
}pp 	
}qq 
}ss 
}tt Ô%
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_41 B
:C D
AbstractTestCaseE U
{ 
private 
static 
void 
BadSink 
(  
double  &
data' +
), -
{ 
{ 	
IO   
.   
	WriteLine   
(   
(   
long   
)   
data   #
)  # $
;  $ %
}!! 	
}"" 
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
double&& 
data&& 
;&& 
data'' 
='' 
double'' 
.'' 
MinValue'' 
;'' 
{)) 	
	WebClient** 
client** 
=** 
new** "
	WebClient**# ,
(**, -
)**- .
;**. /
StreamReader++ 
sr++ 
=++ 
null++ "
;++" #
try,, 
{-- 
sr.. 
=.. 
new.. 
StreamReader.. %
(..% &
client..& ,
..., -
OpenRead..- 5
(..5 6
$str..6 O
)..O P
)..P Q
;..Q R
string22 
stringNumber22 #
=22$ %
sr22& (
.22( )
ReadLine22) 1
(221 2
)222 3
;223 4
if33 
(33 
stringNumber33  
!=33! #
null33$ (
)33( )
{44 
try55 
{66 
data77 
=77 
double77 %
.77% &
Parse77& +
(77+ ,
stringNumber77, 8
.778 9
Trim779 =
(77= >
)77> ?
)77? @
;77@ A
}88 
catch99 
(99 
FormatException99 *
exceptNumberFormat99+ =
)99= >
{:: 
IO;; 
.;; 
Logger;; !
.;;! "
Log;;" %
(;;% &
NLog;;& *
.;;* +
LogLevel;;+ 3
.;;3 4
Warn;;4 8
,;;8 9
exceptNumberFormat;;: L
,;;L M
$str	;;N Ä
)
;;Ä Å
;
;;Å Ç
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryFF 
{GG 
ifHH 
(HH 
srHH 
!=HH 
nullHH "
)HH" #
{II 
srJJ 
.JJ 
CloseJJ  
(JJ  !
)JJ! "
;JJ" #
}KK 
}LL 
catchMM 
(MM 
IOExceptionMM "
exceptIOMM# +
)MM+ ,
{NN 
IOOO 
.OO 
LoggerOO 
.OO 
LogOO !
(OO! "
NLogOO" &
.OO& '
LogLevelOO' /
.OO/ 0
WarnOO0 4
,OO4 5
exceptIOOO6 >
,OO> ?
$strOO@ \
)OO\ ]
;OO] ^
}PP 
}QQ 
}RR 	
BadSinkSS 
(SS 
dataSS 
)SS 
;SS 
}TT 
publicWW 

overrideWW 
voidWW 
GoodWW 
(WW 
)WW 
{XX 
GoodG2BYY 
(YY 
)YY 
;YY 
}ZZ 
private\\ 
static\\ 
void\\ 
GoodG2BSink\\ #
(\\# $
double\\$ *
data\\+ /
)\\0 1
{]] 
{^^ 	
IO`` 
.`` 
	WriteLine`` 
(`` 
(`` 
long`` 
)`` 
data`` #
)``# $
;``$ %
}aa 	
}bb 
privateee 
staticee 
voidee 
GoodG2Bee 
(ee  
)ee  !
{ff 
doublegg 
datagg 
;gg 
dataii 
=ii 
$numii 
;ii 
GoodG2BSinkjj 
(jj 
datajj 
)jj 
;jj 
}kk 
}mm 
}nn ﬂ&
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_42 B
:C D
AbstractTestCaseE U
{ 
private 
static 
double 
	BadSource #
(# $
)$ %
{ 
double 
data 
; 
data 
= 
double 
. 
MinValue 
; 
{!! 	
	WebClient"" 
client"" 
="" 
new"" "
	WebClient""# ,
("", -
)""- .
;"". /
StreamReader## 
sr## 
=## 
null## "
;##" #
try$$ 
{%% 
sr&& 
=&& 
new&& 
StreamReader&& %
(&&% &
client&&& ,
.&&, -
OpenRead&&- 5
(&&5 6
$str&&6 O
)&&O P
)&&P Q
;&&Q R
string** 
stringNumber** #
=**$ %
sr**& (
.**( )
ReadLine**) 1
(**1 2
)**2 3
;**3 4
if++ 
(++ 
stringNumber++  
!=++! #
null++$ (
)++( )
{,, 
try-- 
{.. 
data// 
=// 
double// %
.//% &
Parse//& +
(//+ ,
stringNumber//, 8
.//8 9
Trim//9 =
(//= >
)//> ?
)//? @
;//@ A
}00 
catch11 
(11 
FormatException11 *
exceptNumberFormat11+ =
)11= >
{22 
IO33 
.33 
Logger33 !
.33! "
Log33" %
(33% &
NLog33& *
.33* +
LogLevel33+ 3
.333 4
Warn334 8
,338 9
exceptNumberFormat33: L
,33L M
$str	33N Ä
)
33Ä Å
;
33Å Ç
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
finally;; 
{<< 
try>> 
{?? 
if@@ 
(@@ 
sr@@ 
!=@@ 
null@@ "
)@@" #
{AA 
srBB 
.BB 
CloseBB  
(BB  !
)BB! "
;BB" #
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE "
exceptIOEE# +
)EE+ ,
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG !
(GG! "
NLogGG" &
.GG& '
LogLevelGG' /
.GG/ 0
WarnGG0 4
,GG4 5
exceptIOGG6 >
,GG> ?
$strGG@ \
)GG\ ]
;GG] ^
}HH 
}II 
}JJ 	
returnKK 
dataKK 
;KK 
}LL 
publicOO 

overrideOO 
voidOO 
BadOO 
(OO 
)OO 
{PP 
doubleQQ 
dataQQ 
=QQ 
	BadSourceQQ 
(QQ  
)QQ  !
;QQ! "
{RR 	
IOTT 
.TT 
	WriteLineTT 
(TT 
(TT 
longTT 
)TT 
dataTT #
)TT# $
;TT$ %
}UU 	
}VV 
privateYY 
staticYY 
doubleYY 
GoodG2BSourceYY '
(YY' (
)YY( )
{ZZ 
double[[ 
data[[ 
;[[ 
data]] 
=]] 
$num]] 
;]] 
return^^ 
data^^ 
;^^ 
}__ 
privatebb 
staticbb 
voidbb 
GoodG2Bbb 
(bb  
)bb  !
{cc 
doubledd 
datadd 
=dd 
GoodG2BSourcedd #
(dd# $
)dd$ %
;dd% &
{ee 	
IOgg 
.gg 
	WriteLinegg 
(gg 
(gg 
longgg 
)gg 
datagg #
)gg# $
;gg$ %
}hh 	
}ii 
publickk 

overridekk 
voidkk 
Goodkk 
(kk 
)kk 
{ll 
GoodG2Bmm 
(mm 
)mm 
;mm 
}nn 
}pp 
}qq •(
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_45 B
:C D
AbstractTestCaseE U
{ 
private 
double 
dataBad 
; 
private 
double 
dataGoodG2B 
; 
private   
void   
BadSink   
(   
)   
{!! 
double"" 
data"" 
="" 
dataBad"" 
;"" 
{## 	
IO%% 
.%% 
	WriteLine%% 
(%% 
(%% 
long%% 
)%% 
data%% #
)%%# $
;%%$ %
}&& 	
}'' 
public** 

override** 
void** 
Bad** 
(** 
)** 
{++ 
double,, 
data,, 
;,, 
data-- 
=-- 
double-- 
.-- 
MinValue-- 
;-- 
{// 	
	WebClient00 
client00 
=00 
new00 "
	WebClient00# ,
(00, -
)00- .
;00. /
StreamReader11 
sr11 
=11 
null11 "
;11" #
try22 
{33 
sr44 
=44 
new44 
StreamReader44 %
(44% &
client44& ,
.44, -
OpenRead44- 5
(445 6
$str446 O
)44O P
)44P Q
;44Q R
string88 
stringNumber88 #
=88$ %
sr88& (
.88( )
ReadLine88) 1
(881 2
)882 3
;883 4
if99 
(99 
stringNumber99  
!=99! #
null99$ (
)99( )
{:: 
try;; 
{<< 
data== 
=== 
double== %
.==% &
Parse==& +
(==+ ,
stringNumber==, 8
.==8 9
Trim==9 =
(=== >
)==> ?
)==? @
;==@ A
}>> 
catch?? 
(?? 
FormatException?? *
exceptNumberFormat??+ =
)??= >
{@@ 
IOAA 
.AA 
LoggerAA !
.AA! "
LogAA" %
(AA% &
NLogAA& *
.AA* +
LogLevelAA+ 3
.AA3 4
WarnAA4 8
,AA8 9
exceptNumberFormatAA: L
,AAL M
$str	AAN Ä
)
AAÄ Å
;
AAÅ Ç
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE 
exceptIOEE '
)EE' (
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG 
(GG 
NLogGG "
.GG" #
LogLevelGG# +
.GG+ ,
WarnGG, 0
,GG0 1
exceptIOGG2 :
,GG: ;
$strGG< W
)GGW X
;GGX Y
}HH 
finallyII 
{JJ 
tryLL 
{MM 
ifNN 
(NN 
srNN 
!=NN 
nullNN "
)NN" #
{OO 
srPP 
.PP 
ClosePP  
(PP  !
)PP! "
;PP" #
}QQ 
}RR 
catchSS 
(SS 
IOExceptionSS "
exceptIOSS# +
)SS+ ,
{TT 
IOUU 
.UU 
LoggerUU 
.UU 
LogUU !
(UU! "
NLogUU" &
.UU& '
LogLevelUU' /
.UU/ 0
WarnUU0 4
,UU4 5
exceptIOUU6 >
,UU> ?
$strUU@ \
)UU\ ]
;UU] ^
}VV 
}WW 
}XX 	
dataBadYY 
=YY 
dataYY 
;YY 
BadSinkZZ 
(ZZ 
)ZZ 
;ZZ 
}[[ 
public^^ 

override^^ 
void^^ 
Good^^ 
(^^ 
)^^ 
{__ 
GoodG2B`` 
(`` 
)`` 
;`` 
}aa 
privatecc 
voidcc 
GoodG2BSinkcc 
(cc 
)cc 
{dd 
doubleee 
dataee 
=ee 
dataGoodG2Bee !
;ee! "
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
(hh 
longhh 
)hh 
datahh #
)hh# $
;hh$ %
}ii 	
}jj 
privatemm 
voidmm 
GoodG2Bmm 
(mm 
)mm 
{nn 
doubleoo 
dataoo 
;oo 
dataqq 
=qq 
$numqq 
;qq 
dataGoodG2Brr 
=rr 
datarr 
;rr 
GoodG2BSinkss 
(ss 
)ss 
;ss 
}tt 
}vv 
}ww £!
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_51a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
double 
. 
MinValue 
; 
{!! 	
	WebClient"" 
client"" 
="" 
new"" "
	WebClient""# ,
("", -
)""- .
;"". /
StreamReader## 
sr## 
=## 
null## "
;##" #
try$$ 
{%% 
sr&& 
=&& 
new&& 
StreamReader&& %
(&&% &
client&&& ,
.&&, -
OpenRead&&- 5
(&&5 6
$str&&6 O
)&&O P
)&&P Q
;&&Q R
string** 
stringNumber** #
=**$ %
sr**& (
.**( )
ReadLine**) 1
(**1 2
)**2 3
;**3 4
if++ 
(++ 
stringNumber++  
!=++! #
null++$ (
)++( )
{,, 
try-- 
{.. 
data// 
=// 
double// %
.//% &
Parse//& +
(//+ ,
stringNumber//, 8
.//8 9
Trim//9 =
(//= >
)//> ?
)//? @
;//@ A
}00 
catch11 
(11 
FormatException11 *
exceptNumberFormat11+ =
)11= >
{22 
IO33 
.33 
Logger33 !
.33! "
Log33" %
(33% &
NLog33& *
.33* +
LogLevel33+ 3
.333 4
Warn334 8
,338 9
exceptNumberFormat33: L
,33L M
$str	33N Ä
)
33Ä Å
;
33Å Ç
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
finally;; 
{<< 
try>> 
{?? 
if@@ 
(@@ 
sr@@ 
!=@@ 
null@@ "
)@@" #
{AA 
srBB 
.BB 
CloseBB  
(BB  !
)BB! "
;BB" #
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE "
exceptIOEE# +
)EE+ ,
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG !
(GG! "
NLogGG" &
.GG& '
LogLevelGG' /
.GG/ 0
WarnGG0 4
,GG4 5
exceptIOGG6 >
,GG> ?
$strGG@ \
)GG\ ]
;GG] ^
}HH 
}II 
}JJ 	I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_51bKK E
.KKE F
BadSinkKKF M
(KKM N
dataKKN R
)KKT U
;KKU V
}LL 
publicOO 

overrideOO 
voidOO 
GoodOO 
(OO 
)OO 
{PP 
GoodG2BQQ 
(QQ 
)QQ 
;QQ 
}RR 
privateUU 
voidUU 
GoodG2BUU 
(UU 
)UU 
{VV 
doubleWW 
dataWW 
;WW 
dataYY 
=YY 
$numYY 
;YY I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_51bZZ E
.ZZE F
GoodG2BSinkZZF Q
(ZZQ R
dataZZR V
)ZZX Y
;ZZY Z
}[[ 
}]] 
}^^ ß	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_51b C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
double### )
data##* .
)##/ 0
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
long'' 
)'' 
data'' #
)''# $
;''$ %
}(( 	
})) 
}++ 
},, £!
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_52a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_52bLL E
.LLE F
BadSinkLLF M
(LLM N
dataLLN R
)LLS T
;LLT U
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
voidVV 
GoodG2BVV 
(VV 
)VV 
{WW 
doubleXX 
dataXX 
;XX 
dataZZ 
=ZZ 
$numZZ 
;ZZ I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_52b[[ E
.[[E F
GoodG2BSink[[F Q
([[Q R
data[[R V
)[[W X
;[[X Y
}\\ 
}^^ 
}__ Å	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_52b C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_52c E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_52c## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' ß	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_52c C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
long(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- £!
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_53a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_53bLL E
.LLE F
BadSinkLLF M
(LLM N
dataLLN R
)LLS T
;LLT U
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
voidVV 
GoodG2BVV 
(VV 
)VV 
{WW 
doubleXX 
dataXX 
;XX 
dataZZ 
=ZZ 
$numZZ 
;ZZ I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_53b[[ E
.[[E F
GoodG2BSink[[F Q
([[Q R
data[[R V
)[[W X
;[[X Y
}\\ 
}^^ 
}__ Å	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_53b C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_53c E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_53c## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' Å	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_53c C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_53d E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_53d## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' ß	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_53d C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
long(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- £!
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_54a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_54bLL E
.LLE F
BadSinkLLF M
(LLM N
dataLLN R
)LLS T
;LLT U
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
voidVV 
GoodG2BVV 
(VV 
)VV 
{WW 
doubleXX 
dataXX 
;XX 
dataZZ 
=ZZ 
$numZZ 
;ZZ I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_54b[[ E
.[[E F
GoodG2BSink[[F Q
([[Q R
data[[R V
)[[W X
;[[X Y
}\\ 
}^^ 
}__ Å	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_54b C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_54c E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_54c## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' Å	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_54c C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_54d E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_54d## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' Å	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_54d C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_54e E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_54e## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' ß	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_54e C
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
long(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- ˘
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_61a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
= I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_61b S
.S T
	BadSourceT ]
(] ^
)^ _
;_ `
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
double++ 
data++ 
=++ I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_61b++ S
.++S T
GoodG2BSource++T a
(++a b
)++b c
;++c d
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
long.. 
).. 
data.. #
)..# $
;..$ %
}// 	
}00 
}22 
}33 ’
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_61b C
{ 
public 

static 
double 
	BadSource "
(" #
)# $
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	
returnLL 
dataLL 
;LL 
}MM 
publicRR 

staticRR 
doubleRR 
GoodG2BSourceRR &
(RR& '
)RR' (
{SS 
doubleTT 
dataTT 
;TT 
dataVV 
=VV 
$numVV 
;VV 
returnWW 
dataWW 
;WW 
}XX 
}ZZ 
}[[ ß&
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_66a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	
doubleLL 
[LL 
]LL 
	dataArrayLL 
=LL 
newLL  
doubleLL! '
[LL' (
$numLL( )
]LL) *
;LL* +
	dataArrayMM 
[MM 
$numMM 
]MM 
=MM 
dataMM 
;MM I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_66bNN E
.NNE F
BadSinkNNF M
(NNM N
	dataArrayNNN W
)NNY Z
;NNZ [
}OO 
publicRR 

overrideRR 
voidRR 
GoodRR 
(RR 
)RR 
{SS 
GoodG2BTT 
(TT 
)TT 
;TT 
}UU 
privateXX 
staticXX 
voidXX 
GoodG2BXX 
(XX  
)XX  !
{YY 
doubleZZ 
dataZZ 
;ZZ 
data\\ 
=\\ 
$num\\ 
;\\ 
double]] 
[]] 
]]] 
	dataArray]] 
=]] 
new]]  
double]]! '
[]]' (
$num]]( )
]]]) *
;]]* +
	dataArray^^ 
[^^ 
$num^^ 
]^^ 
=^^ 
data^^ 
;^^ I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_66b__ E
.__E F
GoodG2BSink__F Q
(__Q R
	dataArray__R [
)__] ^
;__^ _
}`` 
}bb 
}cc É
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_66b C
{ 
public 

static 
void 
BadSink 
( 
double %
[% &
]& '
	dataArray( 1
)2 3
{ 
double 
data 
= 
	dataArray 
[  
$num  !
]! "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
double%%# )
[%%) *
]%%* +
	dataArray%%, 5
)%%6 7
{&& 
double'' 
data'' 
='' 
	dataArray'' 
[''  
$num''  !
]''! "
;''" #
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
long** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// ä'
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_67a C
:D E
AbstractTestCaseF V
{ 
public 

class 
	Container 
{ 
public 
double 
containerOne "
;" #
}   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
double$$ 
data$$ 
;$$ 
data%% 
=%% 
double%% 
.%% 
MinValue%% 
;%% 
{'' 	
	WebClient(( 
client(( 
=(( 
new(( "
	WebClient((# ,
(((, -
)((- .
;((. /
StreamReader)) 
sr)) 
=)) 
null)) "
;))" #
try** 
{++ 
sr,, 
=,, 
new,, 
StreamReader,, %
(,,% &
client,,& ,
.,,, -
OpenRead,,- 5
(,,5 6
$str,,6 O
),,O P
),,P Q
;,,Q R
string00 
stringNumber00 #
=00$ %
sr00& (
.00( )
ReadLine00) 1
(001 2
)002 3
;003 4
if11 
(11 
stringNumber11  
!=11! #
null11$ (
)11( )
{22 
try33 
{44 
data55 
=55 
double55 %
.55% &
Parse55& +
(55+ ,
stringNumber55, 8
.558 9
Trim559 =
(55= >
)55> ?
)55? @
;55@ A
}66 
catch77 
(77 
FormatException77 *
exceptNumberFormat77+ =
)77= >
{88 
IO99 
.99 
Logger99 !
.99! "
Log99" %
(99% &
NLog99& *
.99* +
LogLevel99+ 3
.993 4
Warn994 8
,998 9
exceptNumberFormat99: L
,99L M
$str	99N Ä
)
99Ä Å
;
99Å Ç
}:: 
};; 
}<< 
catch== 
(== 
IOException== 
exceptIO== '
)==' (
{>> 
IO?? 
.?? 
Logger?? 
.?? 
Log?? 
(?? 
NLog?? "
.??" #
LogLevel??# +
.??+ ,
Warn??, 0
,??0 1
exceptIO??2 :
,??: ;
$str??< W
)??W X
;??X Y
}@@ 
finallyAA 
{BB 
tryDD 
{EE 
ifFF 
(FF 
srFF 
!=FF 
nullFF "
)FF" #
{GG 
srHH 
.HH 
CloseHH  
(HH  !
)HH! "
;HH" #
}II 
}JJ 
catchKK 
(KK 
IOExceptionKK "
exceptIOKK# +
)KK+ ,
{LL 
IOMM 
.MM 
LoggerMM 
.MM 
LogMM !
(MM! "
NLogMM" &
.MM& '
LogLevelMM' /
.MM/ 0
WarnMM0 4
,MM4 5
exceptIOMM6 >
,MM> ?
$strMM@ \
)MM\ ]
;MM] ^
}NN 
}OO 
}PP 	
	ContainerQQ 
dataContainerQQ 
=QQ  !
newQQ" %
	ContainerQQ& /
(QQ/ 0
)QQ0 1
;QQ1 2
dataContainerRR 
.RR 
containerOneRR "
=RR# $
dataRR% )
;RR) *I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_67bSS E
.SSE F
BadSinkSSF M
(SSM N
dataContainerSSN [
)SS] ^
;SS^ _
}TT 
publicWW 

overrideWW 
voidWW 
GoodWW 
(WW 
)WW 
{XX 
GoodG2BYY 
(YY 
)YY 
;YY 
}ZZ 
private]] 
static]] 
void]] 
GoodG2B]] 
(]]  
)]]  !
{^^ 
double__ 
data__ 
;__ 
dataaa 
=aa 
$numaa 
;aa 
	Containerbb 
dataContainerbb 
=bb  !
newbb" %
	Containerbb& /
(bb/ 0
)bb0 1
;bb1 2
dataContainercc 
.cc 
containerOnecc "
=cc# $
datacc% )
;cc) *I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_67bdd E
.ddE F
GoodG2BSinkddF Q
(ddQ R
dataContainerddR _
)dda b
;ddb c
}ee 
}gg 
}hh É
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_67b C
{ 
public 

static 
void 
BadSink 
( I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_67a \
.\ ]
	Container] f
dataContainerg t
)u v
{ 
double 
data 
= 
dataContainer #
.# $
containerOne$ 0
;0 1
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_67a%%# `
.%%` a
	Container%%a j
dataContainer%%k x
)%%y z
{&& 
double'' 
data'' 
='' 
dataContainer'' #
.''# $
containerOne''$ 0
;''0 1
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
long** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// Ü!
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_68a C
:D E
AbstractTestCaseF V
{ 
public 

static 
double 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_68bLL E
.LLE F
BadSinkLLF M
(LLM N
)LLN O
;LLO P
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
staticVV 
voidVV 
GoodG2BVV 
(VV  
)VV  !
{WW 
dataYY 
=YY 
$numYY 
;YY I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_68bZZ E
.ZZE F
GoodG2BSinkZZF Q
(ZZQ R
)ZZR S
;ZZS T
}[[ 
}]] 
}^^ ª
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_68b C
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
double 
data 
= I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_68a S
.S T
dataT X
;X Y
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
double&& 
data&& 
=&& I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_68a&& S
.&&S T
data&&T X
;&&X Y
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
long)) 
))) 
data)) #
)))# $
;))$ %
}** 	
}++ 
}-- 
}.. õ"
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_71a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_71bLL E
.LLE F
BadSinkLLF M
(LLM N
(LLN O
ObjectLLO U
)LLU V
dataLLV Z
)LL\ ]
;LL] ^
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
staticVV 
voidVV 
GoodG2BVV 
(VV  
)VV  !
{WW 
doubleXX 
dataXX 
;XX 
dataZZ 
=ZZ 
$numZZ 
;ZZ I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_71b[[ E
.[[E F
GoodG2BSink[[F Q
([[Q R
([[R S
Object[[S Y
)[[Y Z
data[[Z ^
)[[` a
;[[a b
}\\ 
}^^ 
}__ œ
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_71b C
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
double 
data 
= 
( 
double 
) 

dataObject (
;( )
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
double(( 
data(( 
=(( 
((( 
double(( 
)(( 

dataObject(( (
;((( )
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
long++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ª+
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_72a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	
	HashtableLL 
dataHashtableLL 
=LL  !
newLL" %
	HashtableLL& /
(LL/ 0
$numLL0 1
)LL1 2
;LL2 3
dataHashtableMM 
.MM 
AddMM 
(MM 
$numMM 
,MM 
dataMM !
)MM! "
;MM" #
dataHashtableNN 
.NN 
AddNN 
(NN 
$numNN 
,NN 
dataNN !
)NN! "
;NN" #
dataHashtableOO 
.OO 
AddOO 
(OO 
$numOO 
,OO 
dataOO !
)OO! "
;OO" #I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_72bPP E
.PPE F
BadSinkPPF M
(PPM N
dataHashtablePPN [
)PP] ^
;PP^ _
}QQ 
publicTT 

overrideTT 
voidTT 
GoodTT 
(TT 
)TT 
{UU 
GoodG2BVV 
(VV 
)VV 
;VV 
}WW 
privateZZ 
staticZZ 
voidZZ 
GoodG2BZZ 
(ZZ  
)ZZ  !
{[[ 
double\\ 
data\\ 
;\\ 
data^^ 
=^^ 
$num^^ 
;^^ 
	Hashtable__ 
dataHashtable__ 
=__  !
new__" %
	Hashtable__& /
(__/ 0
$num__0 1
)__1 2
;__2 3
dataHashtable`` 
.`` 
Add`` 
(`` 
$num`` 
,`` 
data`` !
)``! "
;``" #
dataHashtableaa 
.aa 
Addaa 
(aa 
$numaa 
,aa 
dataaa !
)aa! "
;aa" #
dataHashtablebb 
.bb 
Addbb 
(bb 
$numbb 
,bb 
databb !
)bb! "
;bb" #I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_72bcc E
.ccE F
GoodG2BSinkccF Q
(ccQ R
dataHashtableccR _
)cca b
;ccb c
}dd 
}ff 
}gg ¡
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_72b C
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
double 
data 
= 
( 
double 
) 
dataHashtable ,
[, -
$num- .
]. /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
double(( 
data(( 
=(( 
((( 
double(( 
)(( 
dataHashtable(( ,
[((, -
$num((- .
]((. /
;((/ 0
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
long++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ø+
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_73a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
	WebClient$$ 
client$$ 
=$$ 
new$$ "
	WebClient$$# ,
($$, -
)$$- .
;$$. /
StreamReader%% 
sr%% 
=%% 
null%% "
;%%" #
try&& 
{'' 
sr(( 
=(( 
new(( 
StreamReader(( %
(((% &
client((& ,
.((, -
OpenRead((- 5
(((5 6
$str((6 O
)((O P
)((P Q
;((Q R
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
double11 %
.11% &
Parse11& +
(11+ ,
stringNumber11, 8
.118 9
Trim119 =
(11= >
)11> ?
)11? @
;11@ A
}22 
catch33 
(33 
FormatException33 *
exceptNumberFormat33+ =
)33= >
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ \
)II\ ]
;II] ^
}JJ 
}KK 
}LL 	

LinkedListMM 
<MM 
doubleMM 
>MM 
dataLinkedListMM )
=MM* +
newMM, /

LinkedListMM0 :
<MM: ;
doubleMM; A
>MMA B
(MMB C
)MMC D
;MMD E
dataLinkedListNN 
.NN 
AddLastNN 
(NN 
dataNN #
)NN# $
;NN$ %
dataLinkedListOO 
.OO 
AddLastOO 
(OO 
dataOO #
)OO# $
;OO$ %
dataLinkedListPP 
.PP 
AddLastPP 
(PP 
dataPP #
)PP# $
;PP$ %I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_73bQQ E
.QQE F
BadSinkQQF M
(QQM N
dataLinkedListQQN \
)QQ^ _
;QQ_ `
}RR 
publicUU 

overrideUU 
voidUU 
GoodUU 
(UU 
)UU 
{VV 
GoodG2BWW 
(WW 
)WW 
;WW 
}XX 
private[[ 
static[[ 
void[[ 
GoodG2B[[ 
([[  
)[[  !
{\\ 
double]] 
data]] 
;]] 
data__ 
=__ 
$num__ 
;__ 

LinkedList`` 
<`` 
double`` 
>`` 
dataLinkedList`` )
=``* +
new``, /

LinkedList``0 :
<``: ;
double``; A
>``A B
(``B C
)``C D
;``D E
dataLinkedListaa 
.aa 
AddLastaa 
(aa 
dataaa #
)aa# $
;aa$ %
dataLinkedListbb 
.bb 
AddLastbb 
(bb 
databb #
)bb# $
;bb$ %
dataLinkedListcc 
.cc 
AddLastcc 
(cc 
datacc #
)cc# $
;cc$ %I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_73bdd E
.ddE F
GoodG2BSinkddF Q
(ddQ R
dataLinkedListddR `
)ddb c
;ddc d
}ee 
}gg 
}hh Ì
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_73b C
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
double* 0
>0 1
dataLinkedList2 @
)A B
{ 
double 
data 
= 
dataLinkedList $
.$ %
Last% )
.) *
Value* /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
double&&. 4
>&&4 5
dataLinkedList&&6 D
)&&E F
{'' 
double(( 
data(( 
=(( 
dataLinkedList(( $
.(($ %
Last((% )
.(() *
Value((* /
;((/ 0
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
long++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 Ì-
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_74a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	

DictionaryLL 
<LL 
intLL 
,LL 
doubleLL 
>LL 
dataDictionaryLL -
=LL. /
newLL0 3

DictionaryLL4 >
<LL> ?
intLL? B
,LLB C
doubleLLC I
>LLI J
(LLJ K
)LLK L
;LLL M
dataDictionaryMM 
.MM 
AddMM 
(MM 
$numMM 
,MM 
dataMM "
)MM" #
;MM# $
dataDictionaryNN 
.NN 
AddNN 
(NN 
$numNN 
,NN 
dataNN "
)NN" #
;NN# $
dataDictionaryOO 
.OO 
AddOO 
(OO 
$numOO 
,OO 
dataOO "
)OO" #
;OO# $I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_74bPP E
.PPE F
BadSinkPPF M
(PPM N
dataDictionaryPPN \
)PP^ _
;PP_ `
}QQ 
publicTT 

overrideTT 
voidTT 
GoodTT 
(TT 
)TT 
{UU 
GoodG2BVV 
(VV 
)VV 
;VV 
}WW 
privateZZ 
staticZZ 
voidZZ 
GoodG2BZZ 
(ZZ  
)ZZ  !
{[[ 
double\\ 
data\\ 
;\\ 
data^^ 
=^^ 
$num^^ 
;^^ 

Dictionary__ 
<__ 
int__ 
,__ 
double__ 
>__ 
dataDictionary__ -
=__. /
new__0 3

Dictionary__4 >
<__> ?
int__? B
,__B C
double__C I
>__I J
(__J K
)__K L
;__L M
dataDictionary`` 
.`` 
Add`` 
(`` 
$num`` 
,`` 
data`` "
)``" #
;``# $
dataDictionaryaa 
.aa 
Addaa 
(aa 
$numaa 
,aa 
dataaa "
)aa" #
;aa# $
dataDictionarybb 
.bb 
Addbb 
(bb 
$numbb 
,bb 
databb "
)bb" #
;bb# $I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_74bcc E
.ccE F
GoodG2BSinkccF Q
(ccQ R
dataDictionaryccR `
)ccb c
;ccc d
}dd 
}ff 
}gg á
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_74b C
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
double. 4
>4 5
dataDictionary6 D
)E F
{ 
double 
data 
= 
dataDictionary $
[$ %
$num% &
]& '
;' (
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
double&&2 8
>&&8 9
dataDictionary&&: H
)&&I J
{'' 
double(( 
data(( 
=(( 
dataDictionary(( $
[(($ %
$num((% &
]((& '
;((' (
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
long++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 â5
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_75a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
	WebClient$$ 
client$$ 
=$$ 
new$$ "
	WebClient$$# ,
($$, -
)$$- .
;$$. /
StreamReader%% 
sr%% 
=%% 
null%% "
;%%" #
try&& 
{'' 
sr(( 
=(( 
new(( 
StreamReader(( %
(((% &
client((& ,
.((, -
OpenRead((- 5
(((5 6
$str((6 O
)((O P
)((P Q
;((Q R
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
double11 %
.11% &
Parse11& +
(11+ ,
stringNumber11, 8
.118 9
Trim119 =
(11= >
)11> ?
)11? @
;11@ A
}22 
catch33 
(33 
FormatException33 *
exceptNumberFormat33+ =
)33= >
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ \
)II\ ]
;II] ^
}JJ 
}KK 
}LL 	
byteNN 
[NN 
]NN 
dataSerializedNN 
=NN 
nullNN  $
;NN$ %
tryOO 
{PP 	
BinaryFormatterQQ 
bfQQ 
=QQ  
newQQ! $
BinaryFormatterQQ% 4
(QQ4 5
)QQ5 6
;QQ6 7
usingRR 
(RR 
varRR 
msRR 
=RR 
newRR 
MemoryStreamRR  ,
(RR, -
)RR- .
)RR. /
{SS 
bfTT 
.TT 
	SerializeTT 
(TT 
msTT 
,TT  
dataTT! %
)TT% &
;TT& '
dataSerializedUU 
=UU  
msUU! #
.UU# $
ToArrayUU$ +
(UU+ ,
)UU, -
;UU- .
}VV I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_75bWW I
.WWI J
BadSinkWWJ Q
(WWQ R
dataSerializedWWR `
)WWb c
;WWc d
}XX 	
catchYY 
(YY "
SerializationExceptionYY %
exceptSerializeYY& 5
)YY5 6
{ZZ 	
IO[[ 
.[[ 
Logger[[ 
.[[ 
Log[[ 
([[ 
NLog[[ 
.[[ 
LogLevel[[ '
.[[' (
Warn[[( ,
,[[, -
$str[[. X
,[[X Y
exceptSerialize[[Z i
)[[i j
;[[j k
}\\ 	
}]] 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2Bbb 
(bb 
)bb 
;bb 
}cc 
privateff 
staticff 
voidff 
GoodG2Bff 
(ff  
)ff  !
{gg 
doublehh 
datahh 
;hh 
datajj 
=jj 
$numjj 
;jj 
bytell 
[ll 
]ll 
dataSerializedll 
=ll 
nullll  $
;ll$ %
trymm 
{nn 	
BinaryFormatteroo 
bfoo 
=oo  
newoo! $
BinaryFormatteroo% 4
(oo4 5
)oo5 6
;oo6 7
usingpp 
(pp 
varpp 
mspp 
=pp 
newpp 
MemoryStreampp  ,
(pp, -
)pp- .
)pp. /
{qq 
bfrr 
.rr 
	Serializerr 
(rr 
msrr 
,rr  
datarr! %
)rr% &
;rr& '
dataSerializedss 
=ss  
msss! #
.ss# $
ToArrayss$ +
(ss+ ,
)ss, -
;ss- .
}tt I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_75buu I
.uuI J
GoodG2BSinkuuJ U
(uuU V
dataSerializeduuV d
)uuf g
;uug h
}vv 	
catchww 
(ww "
SerializationExceptionww %
exceptSerializeww& 5
)ww5 6
{xx 	
IOyy 
.yy 
Loggeryy 
.yy 
Logyy 
(yy 
NLogyy 
.yy 
LogLevelyy '
.yy' (
Warnyy( ,
,yy, -
$stryy. X
,yyX Y
exceptSerializeyyZ i
)yyi j
;yyj k
}zz 	
}{{ 
}}} 
}~~ Ì!
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_75b C
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
double   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
double&& 
)&& 
binForm&& &
.&&& '
Deserialize&&' 2
(&&2 3
	memStream&&3 <
)&&< =
;&&= >
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
long** "
)**" #
data**# '
)**' (
;**( )
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
double:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
double@@ 
)@@ 
binForm@@ &
.@@& '
Deserialize@@' 2
(@@2 3
	memStream@@3 <
)@@< =
;@@= >
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
longDD "
)DD" #
dataDD# '
)DD' (
;DD( )
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN Õ$
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_81a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	M
ACWE197_Numeric_Truncation_Error__double_NetClient_to_long_81_baseLL I

baseObjectLLJ T
=LLU V
newLLW ZM
@CWE197_Numeric_Truncation_Error__double_NetClient_to_long_81_bad	LL[ õ
(
LLõ ú
)
LLú ù
;
LLù û

baseObjectMM 
.MM 
ActionMM 
(MM 
dataMM 
)MM  
;MM  !
}NN 
publicQQ 

overrideQQ 
voidQQ 
GoodQQ 
(QQ 
)QQ 
{RR 
GoodG2BSS 
(SS 
)SS 
;SS 
}TT 
privateWW 
voidWW 
GoodG2BWW 
(WW 
)WW 
{XX 
doubleYY 
dataYY 
;YY 
data[[ 
=[[ 
$num[[ 
;[[ M
ACWE197_Numeric_Truncation_Error__double_NetClient_to_long_81_base\\ I

baseObject\\J T
=\\U V
new\\W ZQ
DCWE197_Numeric_Truncation_Error__double_NetClient_to_long_81_goodG2B	\\[ ü
(
\\ü †
)
\\† °
;
\\° ¢

baseObject]] 
.]] 
Action]] 
(]] 
data]] 
)]]  
;]]  !
}^^ 
}`` 
}aa ï
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class L
@CWE197_Numeric_Truncation_Error__double_NetClient_to_long_81_bad F
:G HN
ACWE197_Numeric_Truncation_Error__double_NetClient_to_long_81_base	I ä
{ 
public 

override 
void 
Action 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" ¸
ƒC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 M
ACWE197_Numeric_Truncation_Error__double_NetClient_to_long_81_base P
{ 
public 

abstract 
void 
Action 
(  
double  &
data' +
), -
;- .
} 
} ù
«C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_long_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class P
DCWE197_Numeric_Truncation_Error__double_NetClient_to_long_81_goodG2B J
:K LN
ACWE197_Numeric_Truncation_Error__double_NetClient_to_long_81_base	M é
{ 
public 

override 
void 
Action 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" À!
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_01 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	
{LL 	
IONN 
.NN 
	WriteLineNN 
(NN 
(NN 
shortNN 
)NN  
dataNN  $
)NN$ %
;NN% &
}OO 	
}PP 
publicSS 

overrideSS 
voidSS 
GoodSS 
(SS 
)SS 
{TT 
GoodG2BUU 
(UU 
)UU 
;UU 
}VV 
privateYY 
voidYY 
GoodG2BYY 
(YY 
)YY 
{ZZ 
double[[ 
data[[ 
;[[ 
data]] 
=]] 
$num]] 
;]] 
{^^ 	
IO`` 
.`` 
	WriteLine`` 
(`` 
(`` 
short`` 
)``  
data``  $
)``$ %
;``% &
}aa 	
}bb 
}dd 
}ee Û*
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_02 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
true   
)   
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
shortWW 
)WW  
dataWW  $
)WW$ %
;WW% &
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
false`` 
)`` 
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
shortmm 
)mm  
datamm  $
)mm$ %
;mm% &
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
trueuu 
)uu 
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
short
ÇÇ 
)
ÇÇ  
data
ÇÇ  $
)
ÇÇ$ %
;
ÇÇ% &
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç ÿ+
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_03 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
$num   
==   
$num   
)   
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
shortWW 
)WW  
dataWW  $
)WW$ %
;WW% &
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
$num`` 
!=`` 
$num`` 
)`` 
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
shortmm 
)mm  
datamm  $
)mm$ %
;mm% &
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
$numuu 
==uu 
$numuu 
)uu 
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
short
ÇÇ 
)
ÇÇ  
data
ÇÇ  $
)
ÇÇ$ %
;
ÇÇ% &
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç √-
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_04 C
:D E
AbstractTestCaseF V
{ 
private   
const   
bool   
PRIVATE_CONST_TRUE   )
=  * +
true  , 0
;  0 1
private!! 
const!! 
bool!! 
PRIVATE_CONST_FALSE!! *
=!!+ ,
false!!- 2
;!!2 3
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
double&& 
data&& 
;&& 
if'' 

('' 
PRIVATE_CONST_TRUE'' 
)'' 
{(( 	
data)) 
=)) 
double)) 
.)) 
MinValue)) "
;))" #
{++ 
	WebClient,, 
client,,  
=,,! "
new,,# &
	WebClient,,' 0
(,,0 1
),,1 2
;,,2 3
StreamReader-- 
sr-- 
=--  !
null--" &
;--& '
try.. 
{// 
sr00 
=00 
new00 
StreamReader00 )
(00) *
client00* 0
.000 1
OpenRead001 9
(009 :
$str00: S
)00S T
)00T U
;00U V
string44 
stringNumber44 '
=44( )
sr44* ,
.44, -
ReadLine44- 5
(445 6
)446 7
;447 8
if55 
(55 
stringNumber55 $
!=55% '
null55( ,
)55, -
{66 
try77 
{88 
data99  
=99! "
double99# )
.99) *
Parse99* /
(99/ 0
stringNumber990 <
.99< =
Trim99= A
(99A B
)99B C
)99C D
;99D E
}:: 
catch;; 
(;; 
FormatException;; .
exceptNumberFormat;;/ A
);;A B
{<< 
IO== 
.== 
Logger== %
.==% &
Log==& )
(==) *
NLog==* .
.==. /
LogLevel==/ 7
.==7 8
Warn==8 <
,==< =
exceptNumberFormat==> P
,==P Q
$str	==R Ñ
)
==Ñ Ö
;
==Ö Ü
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryHH 
{II 
ifJJ 
(JJ 
srJJ 
!=JJ !
nullJJ" &
)JJ& '
{KK 
srLL 
.LL 
CloseLL $
(LL$ %
)LL% &
;LL& '
}MM 
}NN 
catchOO 
(OO 
IOExceptionOO &
exceptIOOO' /
)OO/ 0
{PP 
IOQQ 
.QQ 
LoggerQQ !
.QQ! "
LogQQ" %
(QQ% &
NLogQQ& *
.QQ* +
LogLevelQQ+ 3
.QQ3 4
WarnQQ4 8
,QQ8 9
exceptIOQQ: B
,QQB C
$strQQD `
)QQ` a
;QQa b
}RR 
}SS 
}TT 
}UU 	
elseVV 
{WW 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
{\\ 	
IO^^ 
.^^ 
	WriteLine^^ 
(^^ 
(^^ 
short^^ 
)^^  
data^^  $
)^^$ %
;^^% &
}__ 	
}`` 
privatedd 
voiddd 
GoodG2B1dd 
(dd 
)dd 
{ee 
doubleff 
dataff 
;ff 
ifgg 

(gg 
PRIVATE_CONST_FALSEgg 
)gg  
{hh 	
datakk 
=kk 
$numkk 
;kk 
}ll 	
elsemm 
{nn 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
shorttt 
)tt  
datatt  $
)tt$ %
;tt% &
}uu 	
}vv 
privateyy 
voidyy 
GoodG2B2yy 
(yy 
)yy 
{zz 
double{{ 
data{{ 
;{{ 
if|| 

(|| 
PRIVATE_CONST_TRUE|| 
)|| 
{}} 	
data 
= 
$num 
; 
}
ÄÄ 	
else
ÅÅ 
{
ÇÇ 	
data
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
{
áá 	
IO
ââ 
.
ââ 
	WriteLine
ââ 
(
ââ 
(
ââ 
short
ââ 
)
ââ  
data
ââ  $
)
ââ$ %
;
ââ% &
}
ää 	
}
ãã 
public
çç 

override
çç 
void
çç 
Good
çç 
(
çç 
)
çç 
{
éé 
GoodG2B1
èè 
(
èè 
)
èè 
;
èè 
GoodG2B2
êê 
(
êê 
)
êê 
;
êê 
}
ëë 
}ìì 
}îî ˙,
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_05 C
:D E
AbstractTestCaseF V
{ 
private   
bool   
privateTrue   
=   
true   #
;  # $
private!! 
bool!! 
privateFalse!! 
=!! 
false!!  %
;!!% &
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
double&& 
data&& 
;&& 
if'' 

('' 
privateTrue'' 
)'' 
{(( 	
data)) 
=)) 
double)) 
.)) 
MinValue)) "
;))" #
{++ 
	WebClient,, 
client,,  
=,,! "
new,,# &
	WebClient,,' 0
(,,0 1
),,1 2
;,,2 3
StreamReader-- 
sr-- 
=--  !
null--" &
;--& '
try.. 
{// 
sr00 
=00 
new00 
StreamReader00 )
(00) *
client00* 0
.000 1
OpenRead001 9
(009 :
$str00: S
)00S T
)00T U
;00U V
string44 
stringNumber44 '
=44( )
sr44* ,
.44, -
ReadLine44- 5
(445 6
)446 7
;447 8
if55 
(55 
stringNumber55 $
!=55% '
null55( ,
)55, -
{66 
try77 
{88 
data99  
=99! "
double99# )
.99) *
Parse99* /
(99/ 0
stringNumber990 <
.99< =
Trim99= A
(99A B
)99B C
)99C D
;99D E
}:: 
catch;; 
(;; 
FormatException;; .
exceptNumberFormat;;/ A
);;A B
{<< 
IO== 
.== 
Logger== %
.==% &
Log==& )
(==) *
NLog==* .
.==. /
LogLevel==/ 7
.==7 8
Warn==8 <
,==< =
exceptNumberFormat==> P
,==P Q
$str	==R Ñ
)
==Ñ Ö
;
==Ö Ü
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryHH 
{II 
ifJJ 
(JJ 
srJJ 
!=JJ !
nullJJ" &
)JJ& '
{KK 
srLL 
.LL 
CloseLL $
(LL$ %
)LL% &
;LL& '
}MM 
}NN 
catchOO 
(OO 
IOExceptionOO &
exceptIOOO' /
)OO/ 0
{PP 
IOQQ 
.QQ 
LoggerQQ !
.QQ! "
LogQQ" %
(QQ% &
NLogQQ& *
.QQ* +
LogLevelQQ+ 3
.QQ3 4
WarnQQ4 8
,QQ8 9
exceptIOQQ: B
,QQB C
$strQQD `
)QQ` a
;QQa b
}RR 
}SS 
}TT 
}UU 	
elseVV 
{WW 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
{\\ 	
IO^^ 
.^^ 
	WriteLine^^ 
(^^ 
(^^ 
short^^ 
)^^  
data^^  $
)^^$ %
;^^% &
}__ 	
}`` 
privatedd 
voiddd 
GoodG2B1dd 
(dd 
)dd 
{ee 
doubleff 
dataff 
;ff 
ifgg 

(gg 
privateFalsegg 
)gg 
{hh 	
datakk 
=kk 
$numkk 
;kk 
}ll 	
elsemm 
{nn 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
shorttt 
)tt  
datatt  $
)tt$ %
;tt% &
}uu 	
}vv 
privateyy 
voidyy 
GoodG2B2yy 
(yy 
)yy 
{zz 
double{{ 
data{{ 
;{{ 
if|| 

(|| 
privateTrue|| 
)|| 
{}} 	
data 
= 
$num 
; 
}
ÄÄ 	
else
ÅÅ 
{
ÇÇ 	
data
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
{
áá 	
IO
ââ 
.
ââ 
	WriteLine
ââ 
(
ââ 
(
ââ 
short
ââ 
)
ââ  
data
ââ  $
)
ââ$ %
;
ââ% &
}
ää 	
}
ãã 
public
çç 

override
çç 
void
çç 
Good
çç 
(
çç 
)
çç 
{
éé 
GoodG2B1
èè 
(
èè 
)
èè 
;
èè 
GoodG2B2
êê 
(
êê 
)
êê 
;
êê 
}
ëë 
}ìì 
}îî ô-
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_06 C
:D E
AbstractTestCaseF V
{ 
private   
const   
int   
PRIVATE_CONST_FIVE   (
=  ) *
$num  + ,
;  , -
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
double%% 
data%% 
;%% 
if&& 

(&& 
PRIVATE_CONST_FIVE&& 
==&& !
$num&&" #
)&&# $
{'' 	
data(( 
=(( 
double(( 
.(( 
MinValue(( "
;((" #
{** 
	WebClient++ 
client++  
=++! "
new++# &
	WebClient++' 0
(++0 1
)++1 2
;++2 3
StreamReader,, 
sr,, 
=,,  !
null,," &
;,,& '
try-- 
{.. 
sr// 
=// 
new// 
StreamReader// )
(//) *
client//* 0
.//0 1
OpenRead//1 9
(//9 :
$str//: S
)//S T
)//T U
;//U V
string33 
stringNumber33 '
=33( )
sr33* ,
.33, -
ReadLine33- 5
(335 6
)336 7
;337 8
if44 
(44 
stringNumber44 $
!=44% '
null44( ,
)44, -
{55 
try66 
{77 
data88  
=88! "
double88# )
.88) *
Parse88* /
(88/ 0
stringNumber880 <
.88< =
Trim88= A
(88A B
)88B C
)88C D
;88D E
}99 
catch:: 
(:: 
FormatException:: .
exceptNumberFormat::/ A
)::A B
{;; 
IO<< 
.<< 
Logger<< %
.<<% &
Log<<& )
(<<) *
NLog<<* .
.<<. /
LogLevel<</ 7
.<<7 8
Warn<<8 <
,<<< =
exceptNumberFormat<<> P
,<<P Q
$str	<<R Ñ
)
<<Ñ Ö
;
<<Ö Ü
}== 
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ "
exceptIO@@# +
)@@+ ,
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB !
(BB! "
NLogBB" &
.BB& '
LogLevelBB' /
.BB/ 0
WarnBB0 4
,BB4 5
exceptIOBB6 >
,BB> ?
$strBB@ [
)BB[ \
;BB\ ]
}CC 
finallyDD 
{EE 
tryGG 
{HH 
ifII 
(II 
srII 
!=II !
nullII" &
)II& '
{JJ 
srKK 
.KK 
CloseKK $
(KK$ %
)KK% &
;KK& '
}LL 
}MM 
catchNN 
(NN 
IOExceptionNN &
exceptIONN' /
)NN/ 0
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
exceptIOPP: B
,PPB C
$strPPD `
)PP` a
;PPa b
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
short]] 
)]]  
data]]  $
)]]$ %
;]]% &
}^^ 	
}__ 
privatecc 
voidcc 
GoodG2B1cc 
(cc 
)cc 
{dd 
doubleee 
dataee 
;ee 
ifff 

(ff 
PRIVATE_CONST_FIVEff 
!=ff !
$numff" #
)ff# $
{gg 	
datajj 
=jj 
$numjj 
;jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
shortss 
)ss  
datass  $
)ss$ %
;ss% &
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
)xx 
{yy 
doublezz 
datazz 
;zz 
if{{ 

({{ 
PRIVATE_CONST_FIVE{{ 
=={{ !
$num{{" #
){{# $
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
else
ÄÄ 
{
ÅÅ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
{
ÜÜ 	
IO
àà 
.
àà 
	WriteLine
àà 
(
àà 
(
àà 
short
àà 
)
àà  
data
àà  $
)
àà$ %
;
àà% &
}
ââ 	
}
ää 
public
åå 

override
åå 
void
åå 
Good
åå 
(
åå 
)
åå 
{
çç 
GoodG2B1
éé 
(
éé 
)
éé 
;
éé 
GoodG2B2
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì Í,
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_07 C
:D E
AbstractTestCaseF V
{ 
private   
int   
privateFive   
=   
$num   
;    
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
double%% 
data%% 
;%% 
if&& 

(&& 
privateFive&& 
==&& 
$num&& 
)&& 
{'' 	
data(( 
=(( 
double(( 
.(( 
MinValue(( "
;((" #
{** 
	WebClient++ 
client++  
=++! "
new++# &
	WebClient++' 0
(++0 1
)++1 2
;++2 3
StreamReader,, 
sr,, 
=,,  !
null,," &
;,,& '
try-- 
{.. 
sr// 
=// 
new// 
StreamReader// )
(//) *
client//* 0
.//0 1
OpenRead//1 9
(//9 :
$str//: S
)//S T
)//T U
;//U V
string33 
stringNumber33 '
=33( )
sr33* ,
.33, -
ReadLine33- 5
(335 6
)336 7
;337 8
if44 
(44 
stringNumber44 $
!=44% '
null44( ,
)44, -
{55 
try66 
{77 
data88  
=88! "
double88# )
.88) *
Parse88* /
(88/ 0
stringNumber880 <
.88< =
Trim88= A
(88A B
)88B C
)88C D
;88D E
}99 
catch:: 
(:: 
FormatException:: .
exceptNumberFormat::/ A
)::A B
{;; 
IO<< 
.<< 
Logger<< %
.<<% &
Log<<& )
(<<) *
NLog<<* .
.<<. /
LogLevel<</ 7
.<<7 8
Warn<<8 <
,<<< =
exceptNumberFormat<<> P
,<<P Q
$str	<<R Ñ
)
<<Ñ Ö
;
<<Ö Ü
}== 
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ "
exceptIO@@# +
)@@+ ,
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB !
(BB! "
NLogBB" &
.BB& '
LogLevelBB' /
.BB/ 0
WarnBB0 4
,BB4 5
exceptIOBB6 >
,BB> ?
$strBB@ [
)BB[ \
;BB\ ]
}CC 
finallyDD 
{EE 
tryGG 
{HH 
ifII 
(II 
srII 
!=II !
nullII" &
)II& '
{JJ 
srKK 
.KK 
CloseKK $
(KK$ %
)KK% &
;KK& '
}LL 
}MM 
catchNN 
(NN 
IOExceptionNN &
exceptIONN' /
)NN/ 0
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
exceptIOPP: B
,PPB C
$strPPD `
)PP` a
;PPa b
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
short]] 
)]]  
data]]  $
)]]$ %
;]]% &
}^^ 	
}__ 
privatecc 
voidcc 
GoodG2B1cc 
(cc 
)cc 
{dd 
doubleee 
dataee 
;ee 
ifff 

(ff 
privateFiveff 
!=ff 
$numff 
)ff 
{gg 	
datajj 
=jj 
$numjj 
;jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
shortss 
)ss  
datass  $
)ss$ %
;ss% &
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
)xx 
{yy 
doublezz 
datazz 
;zz 
if{{ 

({{ 
privateFive{{ 
=={{ 
$num{{ 
){{ 
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
else
ÄÄ 
{
ÅÅ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
{
ÜÜ 	
IO
àà 
.
àà 
	WriteLine
àà 
(
àà 
(
àà 
short
àà 
)
àà  
data
àà  $
)
àà$ %
;
àà% &
}
ââ 	
}
ää 
public
åå 

override
åå 
void
åå 
Good
åå 
(
åå 
)
åå 
{
çç 
GoodG2B1
éé 
(
éé 
)
éé 
;
éé 
GoodG2B2
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì …/
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_08 C
:D E
AbstractTestCaseF V
{ 
private   
static   
bool   
PrivateReturnsTrue   *
(  * +
)  + ,
{!! 
return"" 
true"" 
;"" 
}## 
private%% 
static%% 
bool%% 
PrivateReturnsFalse%% +
(%%+ ,
)%%, -
{&& 
return'' 
false'' 
;'' 
}(( 
public++ 

override++ 
void++ 
Bad++ 
(++ 
)++ 
{,, 
double-- 
data-- 
;-- 
if.. 

(.. 
PrivateReturnsTrue.. 
(.. 
)..  
)..  !
{// 	
data00 
=00 
double00 
.00 
MinValue00 "
;00" #
{22 
	WebClient33 
client33  
=33! "
new33# &
	WebClient33' 0
(330 1
)331 2
;332 3
StreamReader44 
sr44 
=44  !
null44" &
;44& '
try55 
{66 
sr77 
=77 
new77 
StreamReader77 )
(77) *
client77* 0
.770 1
OpenRead771 9
(779 :
$str77: S
)77S T
)77T U
;77U V
string;; 
stringNumber;; '
=;;( )
sr;;* ,
.;;, -
ReadLine;;- 5
(;;5 6
);;6 7
;;;7 8
if<< 
(<< 
stringNumber<< $
!=<<% '
null<<( ,
)<<, -
{== 
try>> 
{?? 
data@@  
=@@! "
double@@# )
.@@) *
Parse@@* /
(@@/ 0
stringNumber@@0 <
.@@< =
Trim@@= A
(@@A B
)@@B C
)@@C D
;@@D E
}AA 
catchBB 
(BB 
FormatExceptionBB .
exceptNumberFormatBB/ A
)BBA B
{CC 
IODD 
.DD 
LoggerDD %
.DD% &
LogDD& )
(DD) *
NLogDD* .
.DD. /
LogLevelDD/ 7
.DD7 8
WarnDD8 <
,DD< =
exceptNumberFormatDD> P
,DDP Q
$str	DDR Ñ
)
DDÑ Ö
;
DDÖ Ü
}EE 
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH "
exceptIOHH# +
)HH+ ,
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ !
(JJ! "
NLogJJ" &
.JJ& '
LogLevelJJ' /
.JJ/ 0
WarnJJ0 4
,JJ4 5
exceptIOJJ6 >
,JJ> ?
$strJJ@ [
)JJ[ \
;JJ\ ]
}KK 
finallyLL 
{MM 
tryOO 
{PP 
ifQQ 
(QQ 
srQQ 
!=QQ !
nullQQ" &
)QQ& '
{RR 
srSS 
.SS 
CloseSS $
(SS$ %
)SS% &
;SS& '
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD `
)XX` a
;XXa b
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
shortee 
)ee  
dataee  $
)ee$ %
;ee% &
}ff 	
}gg 
privatekk 
voidkk 
GoodG2B1kk 
(kk 
)kk 
{ll 
doublemm 
datamm 
;mm 
ifnn 

(nn 
PrivateReturnsFalsenn 
(nn  
)nn  !
)nn! "
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
short{{ 
){{  
data{{  $
){{$ %
;{{% &
}|| 	
}}} 
private
ÄÄ 
void
ÄÄ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
double
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ  
PrivateReturnsTrue
ÉÉ 
(
ÉÉ 
)
ÉÉ  
)
ÉÉ  !
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
else
àà 
{
ââ 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
short
êê 
)
êê  
data
êê  $
)
êê$ %
;
êê% &
}
ëë 	
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
)
îî 
{
ïï 
GoodG2B1
ññ 
(
ññ 
)
ññ 
;
ññ 
GoodG2B2
óó 
(
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ Ä,
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_09 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.    
STATIC_READONLY_TRUE   #
)  # $
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
shortWW 
)WW  
dataWW  $
)WW$ %
;WW% &
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` !
STATIC_READONLY_FALSE`` $
)``$ %
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
shortmm 
)mm  
datamm  $
)mm$ %
;mm% &
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
IOuu 
.uu  
STATIC_READONLY_TRUEuu #
)uu# $
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
short
ÇÇ 
)
ÇÇ  
data
ÇÇ  $
)
ÇÇ$ %
;
ÇÇ% &
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç ‚+
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_10 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.   

staticTrue   
)   
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
shortWW 
)WW  
dataWW  $
)WW$ %
;WW% &
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` 
staticFalse`` 
)`` 
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
shortmm 
)mm  
datamm  $
)mm$ %
;mm% &
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
IOuu 
.uu 

staticTrueuu 
)uu 
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
short
ÇÇ 
)
ÇÇ  
data
ÇÇ  $
)
ÇÇ$ %
;
ÇÇ% &
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç —,
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_11 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.   
StaticReturnsTrue    
(    !
)  ! "
)  " #
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
shortWW 
)WW  
dataWW  $
)WW$ %
;WW% &
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` 
StaticReturnsFalse`` !
(``! "
)``" #
)``# $
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
shortmm 
)mm  
datamm  $
)mm$ %
;mm% &
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
IOuu 
.uu 
StaticReturnsTrueuu  
(uu  !
)uu! "
)uu" #
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
short
ÇÇ 
)
ÇÇ  
data
ÇÇ  $
)
ÇÇ$ %
;
ÇÇ% &
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç ç&
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_12 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.   $
StaticReturnsTrueOrFalse   '
(  ' (
)  ( )
)  ) *
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
{TT 	
IOVV 
.VV 
	WriteLineVV 
(VV 
(VV 
shortVV 
)VV  
dataVV  $
)VV$ %
;VV% &
}WW 	
}XX 
private]] 
void]] 
GoodG2B]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` $
StaticReturnsTrueOrFalse`` '
(``' (
)``( )
)``) *
{aa 	
datacc 
=cc 
$numcc 
;cc 
}dd 	
elseee 
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
{jj 	
IOll 
.ll 
	WriteLinell 
(ll 
(ll 
shortll 
)ll  
datall  $
)ll$ %
;ll% &
}mm 	
}nn 
publicpp 

overridepp 
voidpp 
Goodpp 
(pp 
)pp 
{qq 
GoodG2Brr 
(rr 
)rr 
;rr 
}ss 
}uu 
}vv Â,
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_13 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.    
STATIC_READONLY_FIVE   #
==  $ &
$num  ' (
)  ( )
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
shortWW 
)WW  
dataWW  $
)WW$ %
;WW% &
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.``  
STATIC_READONLY_FIVE`` #
!=``$ &
$num``' (
)``( )
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
shortmm 
)mm  
datamm  $
)mm$ %
;mm% &
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
IOuu 
.uu  
STATIC_READONLY_FIVEuu #
==uu$ &
$numuu' (
)uu( )
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
short
ÇÇ 
)
ÇÇ  
data
ÇÇ  $
)
ÇÇ$ %
;
ÇÇ% &
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç «,
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_14 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if   

(   
IO   
.   

staticFive   
==   
$num   
)   
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
shortWW 
)WW  
dataWW  $
)WW$ %
;WW% &
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
double__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` 

staticFive`` 
!=`` 
$num`` 
)`` 
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
shortmm 
)mm  
datamm  $
)mm$ %
;mm% &
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
doublett 
datatt 
;tt 
ifuu 

(uu 
IOuu 
.uu 

staticFiveuu 
==uu 
$numuu 
)uu 
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
short
ÇÇ 
)
ÇÇ  
data
ÇÇ  $
)
ÇÇ$ %
;
ÇÇ% &
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç ∞.
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_15 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
= 
$num 
; 
switch   
(   
$num   
)   
{!! 	
case"" 
$num"" 
:"" 
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
	WebClient&& 
client&&  
=&&! "
new&&# &
	WebClient&&' 0
(&&0 1
)&&1 2
;&&2 3
StreamReader'' 
sr'' 
=''  !
null''" &
;''& '
try(( 
{)) 
sr** 
=** 
new** 
StreamReader** )
(**) *
client*** 0
.**0 1
OpenRead**1 9
(**9 :
$str**: S
)**S T
)**T U
;**U V
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
double33# )
.33) *
Parse33* /
(33/ 0
stringNumber330 <
.33< =
Trim33= A
(33A B
)33B C
)33C D
;33D E
}44 
catch55 
(55 
FormatException55 .
exceptNumberFormat55/ A
)55A B
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD `
)KK` a
;KKa b
}LL 
}MM 
}NN 
breakOO 
;OO 
defaultPP 
:PP 
dataSS 
=SS 
$numSS 
;SS 
breakTT 
;TT 
}UU 	
{VV 	
IOXX 
.XX 
	WriteLineXX 
(XX 
(XX 
shortXX 
)XX  
dataXX  $
)XX$ %
;XX% &
}YY 	
}ZZ 
private^^ 
void^^ 
GoodG2B1^^ 
(^^ 
)^^ 
{__ 
double`` 
data`` 
=`` 
$num`` 
;`` 
switchaa 
(aa 
$numaa 
)aa 
{bb 	
casecc 
$numcc 
:cc 
dataff 
=ff 
$numff 
;ff 
breakgg 
;gg 
defaulthh 
:hh 
datajj 
=jj 
$numjj 
;jj 
breakkk 
;kk 
}ll 	
{mm 	
IOoo 
.oo 
	WriteLineoo 
(oo 
(oo 
shortoo 
)oo  
dataoo  $
)oo$ %
;oo% &
}pp 	
}qq 
privatett 
voidtt 
GoodG2B2tt 
(tt 
)tt 
{uu 
doublevv 
datavv 
=vv 
$numvv 
;vv 
switchww 
(ww 
$numww 
)ww 
{xx 	
caseyy 
$numyy 
:yy 
data{{ 
={{ 
$num{{ 
;{{ 
break|| 
;|| 
default}} 
:}} 
data
ÄÄ 
=
ÄÄ 
$num
ÄÄ 
;
ÄÄ 
break
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
{
ÉÉ 	
IO
ÖÖ 
.
ÖÖ 
	WriteLine
ÖÖ 
(
ÖÖ 
(
ÖÖ 
short
ÖÖ 
)
ÖÖ  
data
ÖÖ  $
)
ÖÖ$ %
;
ÖÖ% &
}
ÜÜ 	
}
áá 
public
ââ 

override
ââ 
void
ââ 
Good
ââ 
(
ââ 
)
ââ 
{
ää 
GoodG2B1
ãã 
(
ãã 
)
ãã 
;
ãã 
GoodG2B2
åå 
(
åå 
)
åå 
;
åå 
}
çç 
}èè 
}êê —#
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_16 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
while   
(   
true   
)   
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
breakNN 
;NN 
}OO 	
{PP 	
IORR 
.RR 
	WriteLineRR 
(RR 
(RR 
shortRR 
)RR  
dataRR  $
)RR$ %
;RR% &
}SS 	
}TT 
privateXX 
voidXX 
GoodG2BXX 
(XX 
)XX 
{YY 
doubleZZ 
dataZZ 
;ZZ 
while[[ 
([[ 
true[[ 
)[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
break__ 
;__ 
}`` 	
{aa 	
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
shortcc 
)cc  
datacc  $
)cc$ %
;cc% &
}dd 	
}ee 
publicgg 

overridegg 
voidgg 
Goodgg 
(gg 
)gg 
{hh 
GoodG2Bii 
(ii 
)ii 
;ii 
}jj 
}ll 
}mm ¡%
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_17 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	
forLL 
(LL 
intLL 
iLL 
=LL 
$numLL 
;LL 
iLL 
<LL 
$numLL 
;LL 
iLL  
++LL  "
)LL" #
{MM 	
{NN 
IOPP 
.PP 
	WriteLinePP 
(PP 
(PP 
shortPP #
)PP# $
dataPP$ (
)PP( )
;PP) *
}QQ 
}RR 	
}SS 
privateXX 
voidXX 
GoodG2BXX 
(XX 
)XX 
{YY 
doubleZZ 
dataZZ 
;ZZ 
data\\ 
=\\ 
$num\\ 
;\\ 
for]] 
(]] 
int]] 
i]] 
=]] 
$num]] 
;]] 
i]] 
<]] 
$num]] 
;]] 
i]]  
++]]  "
)]]" #
{^^ 	
{__ 
IOaa 
.aa 
	WriteLineaa 
(aa 
(aa 
shortaa #
)aa# $
dataaa$ (
)aa( )
;aa) *
}bb 
}cc 	
}dd 
publicff 

overrideff 
voidff 
Goodff 
(ff 
)ff 
{gg 
GoodG2Bhh 
(hh 
)hh 
;hh 
}ii 
}kk 
}ll ˆ8
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_21 C
:D E
AbstractTestCaseF V
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public   

override   
void   
Bad   
(   
)   
{!! 
double"" 
data"" 
;"" 

badPrivate## 
=## 
true## 
;## 
data$$ 
=$$ 

Bad_source$$ 
($$ 
)$$ 
;$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
short'' 
)''  
data''  $
)''$ %
;''% &
}(( 	
})) 
private++ 
double++ 

Bad_source++ 
(++ 
)++ 
{,, 
double-- 
data-- 
;-- 
if.. 

(.. 

badPrivate.. 
).. 
{// 	
data00 
=00 
double00 
.00 
MinValue00 "
;00" #
{22 
	WebClient33 
client33  
=33! "
new33# &
	WebClient33' 0
(330 1
)331 2
;332 3
StreamReader44 
sr44 
=44  !
null44" &
;44& '
try55 
{66 
sr77 
=77 
new77 
StreamReader77 )
(77) *
client77* 0
.770 1
OpenRead771 9
(779 :
$str77: S
)77S T
)77T U
;77U V
string;; 
stringNumber;; '
=;;( )
sr;;* ,
.;;, -
ReadLine;;- 5
(;;5 6
);;6 7
;;;7 8
if<< 
(<< 
stringNumber<< $
!=<<% '
null<<( ,
)<<, -
{== 
try>> 
{?? 
data@@  
=@@! "
double@@# )
.@@) *
Parse@@* /
(@@/ 0
stringNumber@@0 <
.@@< =
Trim@@= A
(@@A B
)@@B C
)@@C D
;@@D E
}AA 
catchBB 
(BB 
FormatExceptionBB .
exceptNumberFormatBB/ A
)BBA B
{CC 
IODD 
.DD 
LoggerDD %
.DD% &
LogDD& )
(DD) *
NLogDD* .
.DD. /
LogLevelDD/ 7
.DD7 8
WarnDD8 <
,DD< =
exceptNumberFormatDD> P
,DDP Q
$str	DDR Ñ
)
DDÑ Ö
;
DDÖ Ü
}EE 
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH "
exceptIOHH# +
)HH+ ,
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ !
(JJ! "
NLogJJ" &
.JJ& '
LogLevelJJ' /
.JJ/ 0
WarnJJ0 4
,JJ4 5
exceptIOJJ6 >
,JJ> ?
$strJJ@ [
)JJ[ \
;JJ\ ]
}KK 
finallyLL 
{MM 
tryOO 
{PP 
ifQQ 
(QQ 
srQQ 
!=QQ !
nullQQ" &
)QQ& '
{RR 
srSS 
.SS 
CloseSS $
(SS$ %
)SS% &
;SS& '
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD `
)XX` a
;XXa b
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
returncc 
datacc 
;cc 
}dd 
privategg 
boolgg 
goodG2B1_privategg !
=gg" #
falsegg$ )
;gg) *
privatehh 
boolhh 
GoodG2B2_privatehh !
=hh" #
falsehh$ )
;hh) *
publicjj 

overridejj 
voidjj 
Goodjj 
(jj 
)jj 
{kk 
GoodG2B1ll 
(ll 
)ll 
;ll 
GoodG2B2mm 
(mm 
)mm 
;mm 
}nn 
privateqq 
voidqq 
GoodG2B1qq 
(qq 
)qq 
{rr 
doubless 
datass 
;ss 
goodG2B1_privatett 
=tt 
falsett  
;tt  !
datauu 
=uu 
GoodG2B1_sourceuu 
(uu 
)uu  
;uu  !
{vv 	
IOxx 
.xx 
	WriteLinexx 
(xx 
(xx 
shortxx 
)xx  
dataxx  $
)xx$ %
;xx% &
}yy 	
}zz 
private|| 
double|| 
GoodG2B1_source|| "
(||" #
)||# $
{}} 
double~~ 
data~~ 
=~~ 
$num~~ 
;~~ 
if 

( 
goodG2B1_private 
) 
{
ÄÄ 	
data
ÉÉ 
=
ÉÉ 
$num
ÉÉ 
;
ÉÉ 
}
ÑÑ 	
else
ÖÖ 
{
ÜÜ 	
data
àà 
=
àà 
$num
àà 
;
àà 
}
ââ 	
return
ää 
data
ää 
;
ää 
}
ãã 
private
éé 
void
éé 
GoodG2B2
éé 
(
éé 
)
éé 
{
èè 
double
êê 
data
êê 
;
êê 
GoodG2B2_private
ëë 
=
ëë 
true
ëë 
;
ëë  
data
íí 
=
íí 
GoodG2B2_source
íí 
(
íí 
)
íí  
;
íí  !
{
ìì 	
IO
ïï 
.
ïï 
	WriteLine
ïï 
(
ïï 
(
ïï 
short
ïï 
)
ïï  
data
ïï  $
)
ïï$ %
;
ïï% &
}
ññ 	
}
óó 
private
ôô 
double
ôô 
GoodG2B2_source
ôô "
(
ôô" #
)
ôô# $
{
öö 
double
õõ 
data
õõ 
=
õõ 
$num
õõ 
;
õõ 
if
úú 

(
úú 
GoodG2B2_private
úú 
)
úú 
{
ùù 	
data
üü 
=
üü 
$num
üü 
;
üü 
}
†† 	
else
°° 
{
¢¢ 	
data
•• 
=
•• 
$num
•• 
;
•• 
}
¶¶ 	
return
ßß 
data
ßß 
;
ßß 
}
®® 
}™™ 
}´´ æ
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_22a D
:E F
AbstractTestCaseG W
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_22b!! M
.!!M N
	BadSource!!N W
(!!W X
)!!X Y
;!!Y Z
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
short$$ 
)$$  
data$$  $
)$$$ %
;$$% &
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
double66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_22b88 M
.88M N
GoodG2B1Source88N \
(88\ ]
)88] ^
;88^ _
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
short;; 
);;  
data;;  $
);;$ %
;;;% &
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
doubleBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_22bDD M
.DDM N
GoodG2B2SourceDDN \
(DD\ ]
)DD] ^
;DD^ _
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
}KK 
}LL ƒ'
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_22b D
{ 
public 

static 
double 
	BadSource "
(" #
)# $
{ 
double 
data 
; 
if   

(   J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_22a   J
.  J K
badPublicStatic  K Z
)  Z [
{!! 	
data"" 
="" 
double"" 
."" 
MinValue"" "
;""" #
{$$ 
	WebClient%% 
client%%  
=%%! "
new%%# &
	WebClient%%' 0
(%%0 1
)%%1 2
;%%2 3
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
sr)) 
=)) 
new)) 
StreamReader)) )
())) *
client))* 0
.))0 1
OpenRead))1 9
())9 :
$str)): S
)))S T
)))T U
;))U V
string-- 
stringNumber-- '
=--( )
sr--* ,
.--, -
ReadLine--- 5
(--5 6
)--6 7
;--7 8
if.. 
(.. 
stringNumber.. $
!=..% '
null..( ,
).., -
{// 
try00 
{11 
data22  
=22! "
double22# )
.22) *
Parse22* /
(22/ 0
stringNumber220 <
.22< =
Trim22= A
(22A B
)22B C
)22C D
;22D E
}33 
catch44 
(44 
FormatException44 .
exceptNumberFormat44/ A
)44A B
{55 
IO66 
.66 
Logger66 %
.66% &
Log66& )
(66) *
NLog66* .
.66. /
LogLevel66/ 7
.667 8
Warn668 <
,66< =
exceptNumberFormat66> P
,66P Q
$str	66R Ñ
)
66Ñ Ö
;
66Ö Ü
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC !
nullCC" &
)CC& '
{DD 
srEE 
.EE 
CloseEE $
(EE$ %
)EE% &
;EE& '
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH &
exceptIOHH' /
)HH/ 0
{II 
IOJJ 
.JJ 
LoggerJJ !
.JJ! "
LogJJ" %
(JJ% &
NLogJJ& *
.JJ* +
LogLevelJJ+ 3
.JJ3 4
WarnJJ4 8
,JJ8 9
exceptIOJJ: B
,JJB C
$strJJD `
)JJ` a
;JJa b
}KK 
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
returnUU 
dataUU 
;UU 
}VV 
public[[ 

static[[ 
double[[ 
GoodG2B1Source[[ '
([[' (
)[[( )
{\\ 
double]] 
data]] 
;]] 
if^^ 

(^^ J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_22a^^ J
.^^J K 
goodG2B1PublicStatic^^K _
)^^_ `
{__ 	
databb 
=bb 
$numbb 
;bb 
}cc 	
elsedd 
{ee 	
datagg 
=gg 
$numgg 
;gg 
}hh 	
returnii 
dataii 
;ii 
}jj 
publicmm 

staticmm 
doublemm 
GoodG2B2Sourcemm '
(mm' (
)mm( )
{nn 
doubleoo 
dataoo 
;oo 
ifpp 

(pp J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_22app J
.ppJ K 
GoodG2B2PublicStaticppK _
)pp_ `
{qq 	
datass 
=ss 
$numss 
;ss 
}tt 	
elseuu 
{vv 	
datayy 
=yy 
$numyy 
;yy 
}zz 	
return{{ 
data{{ 
;{{ 
}|| 
}~~ 
} ı%
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_31 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
dataCopy   
;   
{!! 	
double"" 
data"" 
;"" 
data## 
=## 
double## 
.## 
MinValue## "
;##" #
{%% 
	WebClient&& 
client&&  
=&&! "
new&&# &
	WebClient&&' 0
(&&0 1
)&&1 2
;&&2 3
StreamReader'' 
sr'' 
=''  !
null''" &
;''& '
try(( 
{)) 
sr** 
=** 
new** 
StreamReader** )
(**) *
client*** 0
.**0 1
OpenRead**1 9
(**9 :
$str**: S
)**S T
)**T U
;**U V
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
double33# )
.33) *
Parse33* /
(33/ 0
stringNumber330 <
.33< =
Trim33= A
(33A B
)33B C
)33C D
;33D E
}44 
catch55 
(55 
FormatException55 .
exceptNumberFormat55/ A
)55A B
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD `
)KK` a
;KKa b
}LL 
}MM 
}NN 
dataCopyOO 
=OO 
dataOO 
;OO 
}PP 	
{QQ 	
doubleRR 
dataRR 
=RR 
dataCopyRR "
;RR" #
{SS 
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU #
)UU# $
dataUU$ (
)UU( )
;UU) *
}VV 
}WW 	
}XX 
public[[ 

override[[ 
void[[ 
Good[[ 
([[ 
)[[ 
{\\ 
GoodG2B]] 
(]] 
)]] 
;]] 
}^^ 
privateaa 
voidaa 
GoodG2Baa 
(aa 
)aa 
{bb 
doublecc 
dataCopycc 
;cc 
{dd 	
doubleee 
dataee 
;ee 
datagg 
=gg 
$numgg 
;gg 
dataCopyhh 
=hh 
datahh 
;hh 
}ii 	
{jj 	
doublekk 
datakk 
=kk 
dataCopykk "
;kk" #
{ll 
IOnn 
.nn 
	WriteLinenn 
(nn 
(nn 
shortnn #
)nn# $
datann$ (
)nn( )
;nn) *
}oo 
}pp 	
}qq 
}ss 
}tt Û%
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_41 C
:D E
AbstractTestCaseF V
{ 
private 
static 
void 
BadSink 
(  
double  &
data' +
), -
{ 
{ 	
IO   
.   
	WriteLine   
(   
(   
short   
)    
data    $
)  $ %
;  % &
}!! 	
}"" 
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
double&& 
data&& 
;&& 
data'' 
='' 
double'' 
.'' 
MinValue'' 
;'' 
{)) 	
	WebClient** 
client** 
=** 
new** "
	WebClient**# ,
(**, -
)**- .
;**. /
StreamReader++ 
sr++ 
=++ 
null++ "
;++" #
try,, 
{-- 
sr.. 
=.. 
new.. 
StreamReader.. %
(..% &
client..& ,
..., -
OpenRead..- 5
(..5 6
$str..6 O
)..O P
)..P Q
;..Q R
string22 
stringNumber22 #
=22$ %
sr22& (
.22( )
ReadLine22) 1
(221 2
)222 3
;223 4
if33 
(33 
stringNumber33  
!=33! #
null33$ (
)33( )
{44 
try55 
{66 
data77 
=77 
double77 %
.77% &
Parse77& +
(77+ ,
stringNumber77, 8
.778 9
Trim779 =
(77= >
)77> ?
)77? @
;77@ A
}88 
catch99 
(99 
FormatException99 *
exceptNumberFormat99+ =
)99= >
{:: 
IO;; 
.;; 
Logger;; !
.;;! "
Log;;" %
(;;% &
NLog;;& *
.;;* +
LogLevel;;+ 3
.;;3 4
Warn;;4 8
,;;8 9
exceptNumberFormat;;: L
,;;L M
$str	;;N Ä
)
;;Ä Å
;
;;Å Ç
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryFF 
{GG 
ifHH 
(HH 
srHH 
!=HH 
nullHH "
)HH" #
{II 
srJJ 
.JJ 
CloseJJ  
(JJ  !
)JJ! "
;JJ" #
}KK 
}LL 
catchMM 
(MM 
IOExceptionMM "
exceptIOMM# +
)MM+ ,
{NN 
IOOO 
.OO 
LoggerOO 
.OO 
LogOO !
(OO! "
NLogOO" &
.OO& '
LogLevelOO' /
.OO/ 0
WarnOO0 4
,OO4 5
exceptIOOO6 >
,OO> ?
$strOO@ \
)OO\ ]
;OO] ^
}PP 
}QQ 
}RR 	
BadSinkSS 
(SS 
dataSS 
)SS 
;SS 
}TT 
publicWW 

overrideWW 
voidWW 
GoodWW 
(WW 
)WW 
{XX 
GoodG2BYY 
(YY 
)YY 
;YY 
}ZZ 
private\\ 
static\\ 
void\\ 
GoodG2BSink\\ #
(\\# $
double\\$ *
data\\+ /
)\\0 1
{]] 
{^^ 	
IO`` 
.`` 
	WriteLine`` 
(`` 
(`` 
short`` 
)``  
data``  $
)``$ %
;``% &
}aa 	
}bb 
privateee 
staticee 
voidee 
GoodG2Bee 
(ee  
)ee  !
{ff 
doublegg 
datagg 
;gg 
dataii 
=ii 
$numii 
;ii 
GoodG2BSinkjj 
(jj 
datajj 
)jj 
;jj 
}kk 
}mm 
}nn „&
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_42 C
:D E
AbstractTestCaseF V
{ 
private 
static 
double 
	BadSource #
(# $
)$ %
{ 
double 
data 
; 
data 
= 
double 
. 
MinValue 
; 
{!! 	
	WebClient"" 
client"" 
="" 
new"" "
	WebClient""# ,
("", -
)""- .
;"". /
StreamReader## 
sr## 
=## 
null## "
;##" #
try$$ 
{%% 
sr&& 
=&& 
new&& 
StreamReader&& %
(&&% &
client&&& ,
.&&, -
OpenRead&&- 5
(&&5 6
$str&&6 O
)&&O P
)&&P Q
;&&Q R
string** 
stringNumber** #
=**$ %
sr**& (
.**( )
ReadLine**) 1
(**1 2
)**2 3
;**3 4
if++ 
(++ 
stringNumber++  
!=++! #
null++$ (
)++( )
{,, 
try-- 
{.. 
data// 
=// 
double// %
.//% &
Parse//& +
(//+ ,
stringNumber//, 8
.//8 9
Trim//9 =
(//= >
)//> ?
)//? @
;//@ A
}00 
catch11 
(11 
FormatException11 *
exceptNumberFormat11+ =
)11= >
{22 
IO33 
.33 
Logger33 !
.33! "
Log33" %
(33% &
NLog33& *
.33* +
LogLevel33+ 3
.333 4
Warn334 8
,338 9
exceptNumberFormat33: L
,33L M
$str	33N Ä
)
33Ä Å
;
33Å Ç
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
finally;; 
{<< 
try>> 
{?? 
if@@ 
(@@ 
sr@@ 
!=@@ 
null@@ "
)@@" #
{AA 
srBB 
.BB 
CloseBB  
(BB  !
)BB! "
;BB" #
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE "
exceptIOEE# +
)EE+ ,
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG !
(GG! "
NLogGG" &
.GG& '
LogLevelGG' /
.GG/ 0
WarnGG0 4
,GG4 5
exceptIOGG6 >
,GG> ?
$strGG@ \
)GG\ ]
;GG] ^
}HH 
}II 
}JJ 	
returnKK 
dataKK 
;KK 
}LL 
publicOO 

overrideOO 
voidOO 
BadOO 
(OO 
)OO 
{PP 
doubleQQ 
dataQQ 
=QQ 
	BadSourceQQ 
(QQ  
)QQ  !
;QQ! "
{RR 	
IOTT 
.TT 
	WriteLineTT 
(TT 
(TT 
shortTT 
)TT  
dataTT  $
)TT$ %
;TT% &
}UU 	
}VV 
privateYY 
staticYY 
doubleYY 
GoodG2BSourceYY '
(YY' (
)YY( )
{ZZ 
double[[ 
data[[ 
;[[ 
data]] 
=]] 
$num]] 
;]] 
return^^ 
data^^ 
;^^ 
}__ 
privatebb 
staticbb 
voidbb 
GoodG2Bbb 
(bb  
)bb  !
{cc 
doubledd 
datadd 
=dd 
GoodG2BSourcedd #
(dd# $
)dd$ %
;dd% &
{ee 	
IOgg 
.gg 
	WriteLinegg 
(gg 
(gg 
shortgg 
)gg  
datagg  $
)gg$ %
;gg% &
}hh 	
}ii 
publickk 

overridekk 
voidkk 
Goodkk 
(kk 
)kk 
{ll 
GoodG2Bmm 
(mm 
)mm 
;mm 
}nn 
}pp 
}qq ©(
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_45 C
:D E
AbstractTestCaseF V
{ 
private 
double 
dataBad 
; 
private 
double 
dataGoodG2B 
; 
private   
void   
BadSink   
(   
)   
{!! 
double"" 
data"" 
="" 
dataBad"" 
;"" 
{## 	
IO%% 
.%% 
	WriteLine%% 
(%% 
(%% 
short%% 
)%%  
data%%  $
)%%$ %
;%%% &
}&& 	
}'' 
public** 

override** 
void** 
Bad** 
(** 
)** 
{++ 
double,, 
data,, 
;,, 
data-- 
=-- 
double-- 
.-- 
MinValue-- 
;-- 
{// 	
	WebClient00 
client00 
=00 
new00 "
	WebClient00# ,
(00, -
)00- .
;00. /
StreamReader11 
sr11 
=11 
null11 "
;11" #
try22 
{33 
sr44 
=44 
new44 
StreamReader44 %
(44% &
client44& ,
.44, -
OpenRead44- 5
(445 6
$str446 O
)44O P
)44P Q
;44Q R
string88 
stringNumber88 #
=88$ %
sr88& (
.88( )
ReadLine88) 1
(881 2
)882 3
;883 4
if99 
(99 
stringNumber99  
!=99! #
null99$ (
)99( )
{:: 
try;; 
{<< 
data== 
=== 
double== %
.==% &
Parse==& +
(==+ ,
stringNumber==, 8
.==8 9
Trim==9 =
(=== >
)==> ?
)==? @
;==@ A
}>> 
catch?? 
(?? 
FormatException?? *
exceptNumberFormat??+ =
)??= >
{@@ 
IOAA 
.AA 
LoggerAA !
.AA! "
LogAA" %
(AA% &
NLogAA& *
.AA* +
LogLevelAA+ 3
.AA3 4
WarnAA4 8
,AA8 9
exceptNumberFormatAA: L
,AAL M
$str	AAN Ä
)
AAÄ Å
;
AAÅ Ç
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE 
exceptIOEE '
)EE' (
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG 
(GG 
NLogGG "
.GG" #
LogLevelGG# +
.GG+ ,
WarnGG, 0
,GG0 1
exceptIOGG2 :
,GG: ;
$strGG< W
)GGW X
;GGX Y
}HH 
finallyII 
{JJ 
tryLL 
{MM 
ifNN 
(NN 
srNN 
!=NN 
nullNN "
)NN" #
{OO 
srPP 
.PP 
ClosePP  
(PP  !
)PP! "
;PP" #
}QQ 
}RR 
catchSS 
(SS 
IOExceptionSS "
exceptIOSS# +
)SS+ ,
{TT 
IOUU 
.UU 
LoggerUU 
.UU 
LogUU !
(UU! "
NLogUU" &
.UU& '
LogLevelUU' /
.UU/ 0
WarnUU0 4
,UU4 5
exceptIOUU6 >
,UU> ?
$strUU@ \
)UU\ ]
;UU] ^
}VV 
}WW 
}XX 	
dataBadYY 
=YY 
dataYY 
;YY 
BadSinkZZ 
(ZZ 
)ZZ 
;ZZ 
}[[ 
public^^ 

override^^ 
void^^ 
Good^^ 
(^^ 
)^^ 
{__ 
GoodG2B`` 
(`` 
)`` 
;`` 
}aa 
privatecc 
voidcc 
GoodG2BSinkcc 
(cc 
)cc 
{dd 
doubleee 
dataee 
=ee 
dataGoodG2Bee !
;ee! "
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
(hh 
shorthh 
)hh  
datahh  $
)hh$ %
;hh% &
}ii 	
}jj 
privatemm 
voidmm 
GoodG2Bmm 
(mm 
)mm 
{nn 
doubleoo 
dataoo 
;oo 
dataqq 
=qq 
$numqq 
;qq 
dataGoodG2Brr 
=rr 
datarr 
;rr 
GoodG2BSinkss 
(ss 
)ss 
;ss 
}tt 
}vv 
}ww ß!
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_51a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
double 
. 
MinValue 
; 
{!! 	
	WebClient"" 
client"" 
="" 
new"" "
	WebClient""# ,
("", -
)""- .
;"". /
StreamReader## 
sr## 
=## 
null## "
;##" #
try$$ 
{%% 
sr&& 
=&& 
new&& 
StreamReader&& %
(&&% &
client&&& ,
.&&, -
OpenRead&&- 5
(&&5 6
$str&&6 O
)&&O P
)&&P Q
;&&Q R
string** 
stringNumber** #
=**$ %
sr**& (
.**( )
ReadLine**) 1
(**1 2
)**2 3
;**3 4
if++ 
(++ 
stringNumber++  
!=++! #
null++$ (
)++( )
{,, 
try-- 
{.. 
data// 
=// 
double// %
.//% &
Parse//& +
(//+ ,
stringNumber//, 8
.//8 9
Trim//9 =
(//= >
)//> ?
)//? @
;//@ A
}00 
catch11 
(11 
FormatException11 *
exceptNumberFormat11+ =
)11= >
{22 
IO33 
.33 
Logger33 !
.33! "
Log33" %
(33% &
NLog33& *
.33* +
LogLevel33+ 3
.333 4
Warn334 8
,338 9
exceptNumberFormat33: L
,33L M
$str	33N Ä
)
33Ä Å
;
33Å Ç
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
finally;; 
{<< 
try>> 
{?? 
if@@ 
(@@ 
sr@@ 
!=@@ 
null@@ "
)@@" #
{AA 
srBB 
.BB 
CloseBB  
(BB  !
)BB! "
;BB" #
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE "
exceptIOEE# +
)EE+ ,
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG !
(GG! "
NLogGG" &
.GG& '
LogLevelGG' /
.GG/ 0
WarnGG0 4
,GG4 5
exceptIOGG6 >
,GG> ?
$strGG@ \
)GG\ ]
;GG] ^
}HH 
}II 
}JJ 	J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_51bKK F
.KKF G
BadSinkKKG N
(KKN O
dataKKO S
)KKU V
;KKV W
}LL 
publicOO 

overrideOO 
voidOO 
GoodOO 
(OO 
)OO 
{PP 
GoodG2BQQ 
(QQ 
)QQ 
;QQ 
}RR 
privateUU 
voidUU 
GoodG2BUU 
(UU 
)UU 
{VV 
doubleWW 
dataWW 
;WW 
dataYY 
=YY 
$numYY 
;YY J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_51bZZ F
.ZZF G
GoodG2BSinkZZG R
(ZZR S
dataZZS W
)ZZY Z
;ZZZ [
}[[ 
}]] 
}^^ ´	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_51b D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
double### )
data##* .
)##/ 0
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
short'' 
)''  
data''  $
)''$ %
;''% &
}(( 	
})) 
}++ 
},, ß!
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_52a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_52bLL F
.LLF G
BadSinkLLG N
(LLN O
dataLLO S
)LLT U
;LLU V
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
voidVV 
GoodG2BVV 
(VV 
)VV 
{WW 
doubleXX 
dataXX 
;XX 
dataZZ 
=ZZ 
$numZZ 
;ZZ J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_52b[[ F
.[[F G
GoodG2BSink[[G R
([[R S
data[[S W
)[[X Y
;[[Y Z
}\\ 
}^^ 
}__ Ö	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_52b D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_52c F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_52c## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' ´	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_52c D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- ß!
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_53a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_53bLL F
.LLF G
BadSinkLLG N
(LLN O
dataLLO S
)LLT U
;LLU V
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
voidVV 
GoodG2BVV 
(VV 
)VV 
{WW 
doubleXX 
dataXX 
;XX 
dataZZ 
=ZZ 
$numZZ 
;ZZ J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_53b[[ F
.[[F G
GoodG2BSink[[G R
([[R S
data[[S W
)[[X Y
;[[Y Z
}\\ 
}^^ 
}__ Ö	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_53b D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_53c F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_53c## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' Ö	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_53c D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_53d F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_53d## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' ´	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_53d D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- ß!
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_54a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_54bLL F
.LLF G
BadSinkLLG N
(LLN O
dataLLO S
)LLT U
;LLU V
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
voidVV 
GoodG2BVV 
(VV 
)VV 
{WW 
doubleXX 
dataXX 
;XX 
dataZZ 
=ZZ 
$numZZ 
;ZZ J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_54b[[ F
.[[F G
GoodG2BSink[[G R
([[R S
data[[S W
)[[X Y
;[[Y Z
}\\ 
}^^ 
}__ Ö	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_54b D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_54c F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_54c## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' Ö	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_54c D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_54d F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_54d## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' Ö	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_54d D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_54e F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_54e## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' ´	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_54e D
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- ˇ
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_61a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
= J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_61b T
.T U
	BadSourceU ^
(^ _
)_ `
;` a
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
double++ 
data++ 
=++ J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_61b++ T
.++T U
GoodG2BSource++U b
(++b c
)++c d
;++d e
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
short.. 
)..  
data..  $
)..$ %
;..% &
}// 	
}00 
}22 
}33 ◊
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_61b D
{ 
public 

static 
double 
	BadSource "
(" #
)# $
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	
returnLL 
dataLL 
;LL 
}MM 
publicRR 

staticRR 
doubleRR 
GoodG2BSourceRR &
(RR& '
)RR' (
{SS 
doubleTT 
dataTT 
;TT 
dataVV 
=VV 
$numVV 
;VV 
returnWW 
dataWW 
;WW 
}XX 
}ZZ 
}[[ ´&
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_66a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	
doubleLL 
[LL 
]LL 
	dataArrayLL 
=LL 
newLL  
doubleLL! '
[LL' (
$numLL( )
]LL) *
;LL* +
	dataArrayMM 
[MM 
$numMM 
]MM 
=MM 
dataMM 
;MM J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_66bNN F
.NNF G
BadSinkNNG N
(NNN O
	dataArrayNNO X
)NNZ [
;NN[ \
}OO 
publicRR 

overrideRR 
voidRR 
GoodRR 
(RR 
)RR 
{SS 
GoodG2BTT 
(TT 
)TT 
;TT 
}UU 
privateXX 
staticXX 
voidXX 
GoodG2BXX 
(XX  
)XX  !
{YY 
doubleZZ 
dataZZ 
;ZZ 
data\\ 
=\\ 
$num\\ 
;\\ 
double]] 
[]] 
]]] 
	dataArray]] 
=]] 
new]]  
double]]! '
[]]' (
$num]]( )
]]]) *
;]]* +
	dataArray^^ 
[^^ 
$num^^ 
]^^ 
=^^ 
data^^ 
;^^ J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_66b__ F
.__F G
GoodG2BSink__G R
(__R S
	dataArray__S \
)__^ _
;___ `
}`` 
}bb 
}cc á
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_66b D
{ 
public 

static 
void 
BadSink 
( 
double %
[% &
]& '
	dataArray( 1
)2 3
{ 
double 
data 
= 
	dataArray 
[  
$num  !
]! "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
double%%# )
[%%) *
]%%* +
	dataArray%%, 5
)%%6 7
{&& 
double'' 
data'' 
='' 
	dataArray'' 
[''  
$num''  !
]''! "
;''" #
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
}.. 
}// é'
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_67a D
:E F
AbstractTestCaseG W
{ 
public 

class 
	Container 
{ 
public 
double 
containerOne "
;" #
}   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
double$$ 
data$$ 
;$$ 
data%% 
=%% 
double%% 
.%% 
MinValue%% 
;%% 
{'' 	
	WebClient(( 
client(( 
=(( 
new(( "
	WebClient((# ,
(((, -
)((- .
;((. /
StreamReader)) 
sr)) 
=)) 
null)) "
;))" #
try** 
{++ 
sr,, 
=,, 
new,, 
StreamReader,, %
(,,% &
client,,& ,
.,,, -
OpenRead,,- 5
(,,5 6
$str,,6 O
),,O P
),,P Q
;,,Q R
string00 
stringNumber00 #
=00$ %
sr00& (
.00( )
ReadLine00) 1
(001 2
)002 3
;003 4
if11 
(11 
stringNumber11  
!=11! #
null11$ (
)11( )
{22 
try33 
{44 
data55 
=55 
double55 %
.55% &
Parse55& +
(55+ ,
stringNumber55, 8
.558 9
Trim559 =
(55= >
)55> ?
)55? @
;55@ A
}66 
catch77 
(77 
FormatException77 *
exceptNumberFormat77+ =
)77= >
{88 
IO99 
.99 
Logger99 !
.99! "
Log99" %
(99% &
NLog99& *
.99* +
LogLevel99+ 3
.993 4
Warn994 8
,998 9
exceptNumberFormat99: L
,99L M
$str	99N Ä
)
99Ä Å
;
99Å Ç
}:: 
};; 
}<< 
catch== 
(== 
IOException== 
exceptIO== '
)==' (
{>> 
IO?? 
.?? 
Logger?? 
.?? 
Log?? 
(?? 
NLog?? "
.??" #
LogLevel??# +
.??+ ,
Warn??, 0
,??0 1
exceptIO??2 :
,??: ;
$str??< W
)??W X
;??X Y
}@@ 
finallyAA 
{BB 
tryDD 
{EE 
ifFF 
(FF 
srFF 
!=FF 
nullFF "
)FF" #
{GG 
srHH 
.HH 
CloseHH  
(HH  !
)HH! "
;HH" #
}II 
}JJ 
catchKK 
(KK 
IOExceptionKK "
exceptIOKK# +
)KK+ ,
{LL 
IOMM 
.MM 
LoggerMM 
.MM 
LogMM !
(MM! "
NLogMM" &
.MM& '
LogLevelMM' /
.MM/ 0
WarnMM0 4
,MM4 5
exceptIOMM6 >
,MM> ?
$strMM@ \
)MM\ ]
;MM] ^
}NN 
}OO 
}PP 	
	ContainerQQ 
dataContainerQQ 
=QQ  !
newQQ" %
	ContainerQQ& /
(QQ/ 0
)QQ0 1
;QQ1 2
dataContainerRR 
.RR 
containerOneRR "
=RR# $
dataRR% )
;RR) *J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_67bSS F
.SSF G
BadSinkSSG N
(SSN O
dataContainerSSO \
)SS^ _
;SS_ `
}TT 
publicWW 

overrideWW 
voidWW 
GoodWW 
(WW 
)WW 
{XX 
GoodG2BYY 
(YY 
)YY 
;YY 
}ZZ 
private]] 
static]] 
void]] 
GoodG2B]] 
(]]  
)]]  !
{^^ 
double__ 
data__ 
;__ 
dataaa 
=aa 
$numaa 
;aa 
	Containerbb 
dataContainerbb 
=bb  !
newbb" %
	Containerbb& /
(bb/ 0
)bb0 1
;bb1 2
dataContainercc 
.cc 
containerOnecc "
=cc# $
datacc% )
;cc) *J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_67bdd F
.ddF G
GoodG2BSinkddG R
(ddR S
dataContainerddS `
)ddb c
;ddc d
}ee 
}gg 
}hh â
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_67b D
{ 
public 

static 
void 
BadSink 
( J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_67a ]
.] ^
	Container^ g
dataContainerh u
)v w
{ 
double 
data 
= 
dataContainer #
.# $
containerOne$ 0
;0 1
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_67a%%# a
.%%a b
	Container%%b k
dataContainer%%l y
)%%z {
{&& 
double'' 
data'' 
='' 
dataContainer'' #
.''# $
containerOne''$ 0
;''0 1
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
}.. 
}// ä!
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_68a D
:E F
AbstractTestCaseG W
{ 
public 

static 
double 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_68bLL F
.LLF G
BadSinkLLG N
(LLN O
)LLO P
;LLP Q
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
staticVV 
voidVV 
GoodG2BVV 
(VV  
)VV  !
{WW 
dataYY 
=YY 
$numYY 
;YY J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_68bZZ F
.ZZF G
GoodG2BSinkZZG R
(ZZR S
)ZZS T
;ZZT U
}[[ 
}]] 
}^^ ¡
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_68b D
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
double 
data 
= J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_68a T
.T U
dataU Y
;Y Z
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
double&& 
data&& 
=&& J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_68a&& T
.&&T U
data&&U Y
;&&Y Z
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
short)) 
)))  
data))  $
)))$ %
;))% &
}** 	
}++ 
}-- 
}.. ü"
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_71a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_71bLL F
.LLF G
BadSinkLLG N
(LLN O
(LLO P
ObjectLLP V
)LLV W
dataLLW [
)LL] ^
;LL^ _
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
staticVV 
voidVV 
GoodG2BVV 
(VV  
)VV  !
{WW 
doubleXX 
dataXX 
;XX 
dataZZ 
=ZZ 
$numZZ 
;ZZ J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_71b[[ F
.[[F G
GoodG2BSink[[G R
([[R S
([[S T
Object[[T Z
)[[Z [
data[[[ _
)[[a b
;[[b c
}\\ 
}^^ 
}__ ”
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_71b D
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
double 
data 
= 
( 
double 
) 

dataObject (
;( )
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
double(( 
data(( 
=(( 
((( 
double(( 
)(( 

dataObject(( (
;((( )
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ø+
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_72a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	
	HashtableLL 
dataHashtableLL 
=LL  !
newLL" %
	HashtableLL& /
(LL/ 0
$numLL0 1
)LL1 2
;LL2 3
dataHashtableMM 
.MM 
AddMM 
(MM 
$numMM 
,MM 
dataMM !
)MM! "
;MM" #
dataHashtableNN 
.NN 
AddNN 
(NN 
$numNN 
,NN 
dataNN !
)NN! "
;NN" #
dataHashtableOO 
.OO 
AddOO 
(OO 
$numOO 
,OO 
dataOO !
)OO! "
;OO" #J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_72bPP F
.PPF G
BadSinkPPG N
(PPN O
dataHashtablePPO \
)PP^ _
;PP_ `
}QQ 
publicTT 

overrideTT 
voidTT 
GoodTT 
(TT 
)TT 
{UU 
GoodG2BVV 
(VV 
)VV 
;VV 
}WW 
privateZZ 
staticZZ 
voidZZ 
GoodG2BZZ 
(ZZ  
)ZZ  !
{[[ 
double\\ 
data\\ 
;\\ 
data^^ 
=^^ 
$num^^ 
;^^ 
	Hashtable__ 
dataHashtable__ 
=__  !
new__" %
	Hashtable__& /
(__/ 0
$num__0 1
)__1 2
;__2 3
dataHashtable`` 
.`` 
Add`` 
(`` 
$num`` 
,`` 
data`` !
)``! "
;``" #
dataHashtableaa 
.aa 
Addaa 
(aa 
$numaa 
,aa 
dataaa !
)aa! "
;aa" #
dataHashtablebb 
.bb 
Addbb 
(bb 
$numbb 
,bb 
databb !
)bb! "
;bb" #J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_72bcc F
.ccF G
GoodG2BSinkccG R
(ccR S
dataHashtableccS `
)ccb c
;ccc d
}dd 
}ff 
}gg ≈
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_72b D
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
double 
data 
= 
( 
double 
) 
dataHashtable ,
[, -
$num- .
]. /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
double(( 
data(( 
=(( 
((( 
double(( 
)(( 
dataHashtable(( ,
[((, -
$num((- .
]((. /
;((/ 0
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 √+
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_73a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
	WebClient$$ 
client$$ 
=$$ 
new$$ "
	WebClient$$# ,
($$, -
)$$- .
;$$. /
StreamReader%% 
sr%% 
=%% 
null%% "
;%%" #
try&& 
{'' 
sr(( 
=(( 
new(( 
StreamReader(( %
(((% &
client((& ,
.((, -
OpenRead((- 5
(((5 6
$str((6 O
)((O P
)((P Q
;((Q R
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
double11 %
.11% &
Parse11& +
(11+ ,
stringNumber11, 8
.118 9
Trim119 =
(11= >
)11> ?
)11? @
;11@ A
}22 
catch33 
(33 
FormatException33 *
exceptNumberFormat33+ =
)33= >
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ \
)II\ ]
;II] ^
}JJ 
}KK 
}LL 	

LinkedListMM 
<MM 
doubleMM 
>MM 
dataLinkedListMM )
=MM* +
newMM, /

LinkedListMM0 :
<MM: ;
doubleMM; A
>MMA B
(MMB C
)MMC D
;MMD E
dataLinkedListNN 
.NN 
AddLastNN 
(NN 
dataNN #
)NN# $
;NN$ %
dataLinkedListOO 
.OO 
AddLastOO 
(OO 
dataOO #
)OO# $
;OO$ %
dataLinkedListPP 
.PP 
AddLastPP 
(PP 
dataPP #
)PP# $
;PP$ %J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_73bQQ F
.QQF G
BadSinkQQG N
(QQN O
dataLinkedListQQO ]
)QQ_ `
;QQ` a
}RR 
publicUU 

overrideUU 
voidUU 
GoodUU 
(UU 
)UU 
{VV 
GoodG2BWW 
(WW 
)WW 
;WW 
}XX 
private[[ 
static[[ 
void[[ 
GoodG2B[[ 
([[  
)[[  !
{\\ 
double]] 
data]] 
;]] 
data__ 
=__ 
$num__ 
;__ 

LinkedList`` 
<`` 
double`` 
>`` 
dataLinkedList`` )
=``* +
new``, /

LinkedList``0 :
<``: ;
double``; A
>``A B
(``B C
)``C D
;``D E
dataLinkedListaa 
.aa 
AddLastaa 
(aa 
dataaa #
)aa# $
;aa$ %
dataLinkedListbb 
.bb 
AddLastbb 
(bb 
databb #
)bb# $
;bb$ %
dataLinkedListcc 
.cc 
AddLastcc 
(cc 
datacc #
)cc# $
;cc$ %J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_73bdd F
.ddF G
GoodG2BSinkddG R
(ddR S
dataLinkedListddS a
)ddc d
;ddd e
}ee 
}gg 
}hh Ò
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_73b D
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
double* 0
>0 1
dataLinkedList2 @
)A B
{ 
double 
data 
= 
dataLinkedList $
.$ %
Last% )
.) *
Value* /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
double&&. 4
>&&4 5
dataLinkedList&&6 D
)&&E F
{'' 
double(( 
data(( 
=(( 
dataLinkedList(( $
.(($ %
Last((% )
.(() *
Value((* /
;((/ 0
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 Ò-
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_74a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	

DictionaryLL 
<LL 
intLL 
,LL 
doubleLL 
>LL 
dataDictionaryLL -
=LL. /
newLL0 3

DictionaryLL4 >
<LL> ?
intLL? B
,LLB C
doubleLLC I
>LLI J
(LLJ K
)LLK L
;LLL M
dataDictionaryMM 
.MM 
AddMM 
(MM 
$numMM 
,MM 
dataMM "
)MM" #
;MM# $
dataDictionaryNN 
.NN 
AddNN 
(NN 
$numNN 
,NN 
dataNN "
)NN" #
;NN# $
dataDictionaryOO 
.OO 
AddOO 
(OO 
$numOO 
,OO 
dataOO "
)OO" #
;OO# $J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_74bPP F
.PPF G
BadSinkPPG N
(PPN O
dataDictionaryPPO ]
)PP_ `
;PP` a
}QQ 
publicTT 

overrideTT 
voidTT 
GoodTT 
(TT 
)TT 
{UU 
GoodG2BVV 
(VV 
)VV 
;VV 
}WW 
privateZZ 
staticZZ 
voidZZ 
GoodG2BZZ 
(ZZ  
)ZZ  !
{[[ 
double\\ 
data\\ 
;\\ 
data^^ 
=^^ 
$num^^ 
;^^ 

Dictionary__ 
<__ 
int__ 
,__ 
double__ 
>__ 
dataDictionary__ -
=__. /
new__0 3

Dictionary__4 >
<__> ?
int__? B
,__B C
double__C I
>__I J
(__J K
)__K L
;__L M
dataDictionary`` 
.`` 
Add`` 
(`` 
$num`` 
,`` 
data`` "
)``" #
;``# $
dataDictionaryaa 
.aa 
Addaa 
(aa 
$numaa 
,aa 
dataaa "
)aa" #
;aa# $
dataDictionarybb 
.bb 
Addbb 
(bb 
$numbb 
,bb 
databb "
)bb" #
;bb# $J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_74bcc F
.ccF G
GoodG2BSinkccG R
(ccR S
dataDictionaryccS a
)ccc d
;ccd e
}dd 
}ff 
}gg ã
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_74b D
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
double. 4
>4 5
dataDictionary6 D
)E F
{ 
double 
data 
= 
dataDictionary $
[$ %
$num% &
]& '
;' (
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
double&&2 8
>&&8 9
dataDictionary&&: H
)&&I J
{'' 
double(( 
data(( 
=(( 
dataDictionary(( $
[(($ %
$num((% &
]((& '
;((' (
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ç5
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_75a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double   
data   
;   
data!! 
=!! 
double!! 
.!! 
MinValue!! 
;!! 
{## 	
	WebClient$$ 
client$$ 
=$$ 
new$$ "
	WebClient$$# ,
($$, -
)$$- .
;$$. /
StreamReader%% 
sr%% 
=%% 
null%% "
;%%" #
try&& 
{'' 
sr(( 
=(( 
new(( 
StreamReader(( %
(((% &
client((& ,
.((, -
OpenRead((- 5
(((5 6
$str((6 O
)((O P
)((P Q
;((Q R
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
double11 %
.11% &
Parse11& +
(11+ ,
stringNumber11, 8
.118 9
Trim119 =
(11= >
)11> ?
)11? @
;11@ A
}22 
catch33 
(33 
FormatException33 *
exceptNumberFormat33+ =
)33= >
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ \
)II\ ]
;II] ^
}JJ 
}KK 
}LL 	
byteNN 
[NN 
]NN 
dataSerializedNN 
=NN 
nullNN  $
;NN$ %
tryOO 
{PP 	
BinaryFormatterQQ 
bfQQ 
=QQ  
newQQ! $
BinaryFormatterQQ% 4
(QQ4 5
)QQ5 6
;QQ6 7
usingRR 
(RR 
varRR 
msRR 
=RR 
newRR 
MemoryStreamRR  ,
(RR, -
)RR- .
)RR. /
{SS 
bfTT 
.TT 
	SerializeTT 
(TT 
msTT 
,TT  
dataTT! %
)TT% &
;TT& '
dataSerializedUU 
=UU  
msUU! #
.UU# $
ToArrayUU$ +
(UU+ ,
)UU, -
;UU- .
}VV J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_75bWW J
.WWJ K
BadSinkWWK R
(WWR S
dataSerializedWWS a
)WWc d
;WWd e
}XX 	
catchYY 
(YY "
SerializationExceptionYY %
exceptSerializeYY& 5
)YY5 6
{ZZ 	
IO[[ 
.[[ 
Logger[[ 
.[[ 
Log[[ 
([[ 
NLog[[ 
.[[ 
LogLevel[[ '
.[[' (
Warn[[( ,
,[[, -
$str[[. X
,[[X Y
exceptSerialize[[Z i
)[[i j
;[[j k
}\\ 	
}]] 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2Bbb 
(bb 
)bb 
;bb 
}cc 
privateff 
staticff 
voidff 
GoodG2Bff 
(ff  
)ff  !
{gg 
doublehh 
datahh 
;hh 
datajj 
=jj 
$numjj 
;jj 
bytell 
[ll 
]ll 
dataSerializedll 
=ll 
nullll  $
;ll$ %
trymm 
{nn 	
BinaryFormatteroo 
bfoo 
=oo  
newoo! $
BinaryFormatteroo% 4
(oo4 5
)oo5 6
;oo6 7
usingpp 
(pp 
varpp 
mspp 
=pp 
newpp 
MemoryStreampp  ,
(pp, -
)pp- .
)pp. /
{qq 
bfrr 
.rr 
	Serializerr 
(rr 
msrr 
,rr  
datarr! %
)rr% &
;rr& '
dataSerializedss 
=ss  
msss! #
.ss# $
ToArrayss$ +
(ss+ ,
)ss, -
;ss- .
}tt J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_75buu J
.uuJ K
GoodG2BSinkuuK V
(uuV W
dataSerializeduuW e
)uug h
;uuh i
}vv 	
catchww 
(ww "
SerializationExceptionww %
exceptSerializeww& 5
)ww5 6
{xx 	
IOyy 
.yy 
Loggeryy 
.yy 
Logyy 
(yy 
NLogyy 
.yy 
LogLevelyy '
.yy' (
Warnyy( ,
,yy, -
$stryy. X
,yyX Y
exceptSerializeyyZ i
)yyi j
;yyj k
}zz 	
}{{ 
}}} 
}~~ Ò!
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_75b D
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
double   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
double&& 
)&& 
binForm&& &
.&&& '
Deserialize&&' 2
(&&2 3
	memStream&&3 <
)&&< =
;&&= >
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
short** #
)**# $
data**$ (
)**( )
;**) *
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
double:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
double@@ 
)@@ 
binForm@@ &
.@@& '
Deserialize@@' 2
(@@2 3
	memStream@@3 <
)@@< =
;@@= >
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
shortDD #
)DD# $
dataDD$ (
)DD( )
;DD) *
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN ”$
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_81a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
double   
.   
MinValue   
;   
{"" 	
	WebClient## 
client## 
=## 
new## "
	WebClient### ,
(##, -
)##- .
;##. /
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
sr'' 
='' 
new'' 
StreamReader'' %
(''% &
client''& ,
.'', -
OpenRead''- 5
(''5 6
$str''6 O
)''O P
)''P Q
;''Q R
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
double00 %
.00% &
Parse00& +
(00+ ,
stringNumber00, 8
.008 9
Trim009 =
(00= >
)00> ?
)00? @
;00@ A
}11 
catch22 
(22 
FormatException22 *
exceptNumberFormat22+ =
)22= >
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ \
)HH\ ]
;HH] ^
}II 
}JJ 
}KK 	N
BCWE197_Numeric_Truncation_Error__double_NetClient_to_short_81_baseLL J

baseObjectLLK U
=LLV W
newLLX [N
ACWE197_Numeric_Truncation_Error__double_NetClient_to_short_81_bad	LL\ ù
(
LLù û
)
LLû ü
;
LLü †

baseObjectMM 
.MM 
ActionMM 
(MM 
dataMM 
)MM  
;MM  !
}NN 
publicQQ 

overrideQQ 
voidQQ 
GoodQQ 
(QQ 
)QQ 
{RR 
GoodG2BSS 
(SS 
)SS 
;SS 
}TT 
privateWW 
voidWW 
GoodG2BWW 
(WW 
)WW 
{XX 
doubleYY 
dataYY 
;YY 
data[[ 
=[[ 
$num[[ 
;[[ N
BCWE197_Numeric_Truncation_Error__double_NetClient_to_short_81_base\\ J

baseObject\\K U
=\\V W
new\\X [R
ECWE197_Numeric_Truncation_Error__double_NetClient_to_short_81_goodG2B	\\\ °
(
\\° ¢
)
\\¢ £
;
\\£ §

baseObject]] 
.]] 
Action]] 
(]] 
data]] 
)]]  
;]]  !
}^^ 
}`` 
}aa ô
ƒC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class M
ACWE197_Numeric_Truncation_Error__double_NetClient_to_short_81_bad G
:H IO
BCWE197_Numeric_Truncation_Error__double_NetClient_to_short_81_base	J å
{ 
public 

override 
void 
Action 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
}!! 
}"" ˛
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 N
BCWE197_Numeric_Truncation_Error__double_NetClient_to_short_81_base Q
{ 
public 

abstract 
void 
Action 
(  
double  &
data' +
), -
;- .
} 
} °
»C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_NetClient_to_short_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class Q
ECWE197_Numeric_Truncation_Error__double_NetClient_to_short_81_goodG2B K
:L MO
BCWE197_Numeric_Truncation_Error__double_NetClient_to_short_81_base	N ê
{ 
public 

override 
void 
Action 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
}!! 
}"" È
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_byte_01 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
{ 	
IO!! 
.!! 
	WriteLine!! 
(!! 
(!! 
byte!! 
)!! 
data!! #
)!!# $
;!!$ %
}"" 	
}## 
public&& 

override&& 
void&& 
Good&& 
(&& 
)&& 
{'' 
GoodG2B(( 
((( 
)(( 
;(( 
})) 
private,, 
void,, 
GoodG2B,, 
(,, 
),, 
{-- 
double.. 
data.. 
;.. 
data00 
=00 
$num00 
;00 
{11 	
IO33 
.33 
	WriteLine33 
(33 
(33 
byte33 
)33 
data33 #
)33# $
;33$ %
}44 	
}55 
}77 
}88 “
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_byte_02 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
true 
) 
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
false33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
byte@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
trueHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ∑
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_byte_03 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
$num 
== 
$num 
) 
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
$num33 
!=33 
$num33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
byte@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
$numHH 
==HH 
$numHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` í
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_byte_04 ?
:@ A
AbstractTestCaseB R
{ 
private 
const 
bool 
PRIVATE_CONST_TRUE )
=* +
true, 0
;0 1
private 
const 
bool 
PRIVATE_CONST_FALSE *
=+ ,
false- 2
;2 3
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
double## 
data## 
;## 
if$$ 

($$ 
PRIVATE_CONST_TRUE$$ 
)$$ 
{%% 	
data'' 
='' 
IO'' 
.'' 
GetRandomDouble'' %
(''% &
)''& '
;''' (
}(( 	
else)) 
{** 	
data-- 
=-- 
$num-- 
;-- 
}.. 	
{// 	
IO11 
.11 
	WriteLine11 
(11 
(11 
byte11 
)11 
data11 #
)11# $
;11$ %
}22 	
}33 
private77 
void77 
GoodG2B177 
(77 
)77 
{88 
double99 
data99 
;99 
if:: 

(:: 
PRIVATE_CONST_FALSE:: 
)::  
{;; 	
data>> 
=>> 
$num>> 
;>> 
}?? 	
else@@ 
{AA 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
privateLL 
voidLL 
GoodG2B2LL 
(LL 
)LL 
{MM 
doubleNN 
dataNN 
;NN 
ifOO 

(OO 
PRIVATE_CONST_TRUEOO 
)OO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
elseTT 
{UU 	
dataXX 
=XX 
$numXX 
;XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
byte\\ 
)\\ 
data\\ #
)\\# $
;\\$ %
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2B1bb 
(bb 
)bb 
;bb 
GoodG2B2cc 
(cc 
)cc 
;cc 
}dd 
}ff 
}gg …
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_byte_05 ?
:@ A
AbstractTestCaseB R
{ 
private 
bool 
privateTrue 
= 
true #
;# $
private 
bool 
privateFalse 
= 
false  %
;% &
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
double## 
data## 
;## 
if$$ 

($$ 
privateTrue$$ 
)$$ 
{%% 	
data'' 
='' 
IO'' 
.'' 
GetRandomDouble'' %
(''% &
)''& '
;''' (
}(( 	
else)) 
{** 	
data-- 
=-- 
$num-- 
;-- 
}.. 	
{// 	
IO11 
.11 
	WriteLine11 
(11 
(11 
byte11 
)11 
data11 #
)11# $
;11$ %
}22 	
}33 
private77 
void77 
GoodG2B177 
(77 
)77 
{88 
double99 
data99 
;99 
if:: 

(:: 
privateFalse:: 
):: 
{;; 	
data>> 
=>> 
$num>> 
;>> 
}?? 	
else@@ 
{AA 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
privateLL 
voidLL 
GoodG2B2LL 
(LL 
)LL 
{MM 
doubleNN 
dataNN 
;NN 
ifOO 

(OO 
privateTrueOO 
)OO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
elseTT 
{UU 	
dataXX 
=XX 
$numXX 
;XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
byte\\ 
)\\ 
data\\ #
)\\# $
;\\$ %
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2B1bb 
(bb 
)bb 
;bb 
GoodG2B2cc 
(cc 
)cc 
;cc 
}dd 
}ff 
}gg Í
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_byte_06 ?
:@ A
AbstractTestCaseB R
{ 
private 
const 
int 
PRIVATE_CONST_FIVE (
=) *
$num+ ,
;, -
public   

override   
void   
Bad   
(   
)   
{!! 
double"" 
data"" 
;"" 
if## 

(## 
PRIVATE_CONST_FIVE## 
==## !
$num##" #
)### $
{$$ 	
data&& 
=&& 
IO&& 
.&& 
GetRandomDouble&& %
(&&% &
)&&& '
;&&' (
}'' 	
else(( 
{)) 	
data,, 
=,, 
$num,, 
;,, 
}-- 	
{.. 	
IO00 
.00 
	WriteLine00 
(00 
(00 
byte00 
)00 
data00 #
)00# $
;00$ %
}11 	
}22 
private66 
void66 
GoodG2B166 
(66 
)66 
{77 
double88 
data88 
;88 
if99 

(99 
PRIVATE_CONST_FIVE99 
!=99 !
$num99" #
)99# $
{:: 	
data== 
=== 
$num== 
;== 
}>> 	
else?? 
{@@ 	
dataBB 
=BB 
$numBB 
;BB 
}CC 	
{DD 	
IOFF 
.FF 
	WriteLineFF 
(FF 
(FF 
byteFF 
)FF 
dataFF #
)FF# $
;FF$ %
}GG 	
}HH 
privateKK 
voidKK 
GoodG2B2KK 
(KK 
)KK 
{LL 
doubleMM 
dataMM 
;MM 
ifNN 

(NN 
PRIVATE_CONST_FIVENN 
==NN !
$numNN" #
)NN# $
{OO 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
elseSS 
{TT 	
dataWW 
=WW 
$numWW 
;WW 
}XX 	
{YY 	
IO[[ 
.[[ 
	WriteLine[[ 
([[ 
([[ 
byte[[ 
)[[ 
data[[ #
)[[# $
;[[$ %
}\\ 	
}]] 
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2B1aa 
(aa 
)aa 
;aa 
GoodG2B2bb 
(bb 
)bb 
;bb 
}cc 
}ee 
}ff ª
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_byte_07 ?
:@ A
AbstractTestCaseB R
{ 
private 
int 
privateFive 
= 
$num 
;  
public   

override   
void   
Bad   
(   
)   
{!! 
double"" 
data"" 
;"" 
if## 

(## 
privateFive## 
==## 
$num## 
)## 
{$$ 	
data&& 
=&& 
IO&& 
.&& 
GetRandomDouble&& %
(&&% &
)&&& '
;&&' (
}'' 	
else(( 
{)) 	
data,, 
=,, 
$num,, 
;,, 
}-- 	
{.. 	
IO00 
.00 
	WriteLine00 
(00 
(00 
byte00 
)00 
data00 #
)00# $
;00$ %
}11 	
}22 
private66 
void66 
GoodG2B166 
(66 
)66 
{77 
double88 
data88 
;88 
if99 

(99 
privateFive99 
!=99 
$num99 
)99 
{:: 	
data== 
=== 
$num== 
;== 
}>> 	
else?? 
{@@ 	
dataBB 
=BB 
$numBB 
;BB 
}CC 	
{DD 	
IOFF 
.FF 
	WriteLineFF 
(FF 
(FF 
byteFF 
)FF 
dataFF #
)FF# $
;FF$ %
}GG 	
}HH 
privateKK 
voidKK 
GoodG2B2KK 
(KK 
)KK 
{LL 
doubleMM 
dataMM 
;MM 
ifNN 

(NN 
privateFiveNN 
==NN 
$numNN 
)NN 
{OO 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
elseSS 
{TT 	
dataWW 
=WW 
$numWW 
;WW 
}XX 	
{YY 	
IO[[ 
.[[ 
	WriteLine[[ 
([[ 
([[ 
byte[[ 
)[[ 
data[[ #
)[[# $
;[[$ %
}\\ 	
}]] 
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2B1aa 
(aa 
)aa 
;aa 
GoodG2B2bb 
(bb 
)bb 
;bb 
}cc 
}ee 
}ff 
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_byte_08 ?
:@ A
AbstractTestCaseB R
{ 
private 
static 
bool 
PrivateReturnsTrue *
(* +
)+ ,
{ 
return 
true 
; 
}   
private"" 
static"" 
bool"" 
PrivateReturnsFalse"" +
(""+ ,
)"", -
{## 
return$$ 
false$$ 
;$$ 
}%% 
public(( 

override(( 
void(( 
Bad(( 
((( 
)(( 
{)) 
double** 
data** 
;** 
if++ 

(++ 
PrivateReturnsTrue++ 
(++ 
)++  
)++  !
{,, 	
data.. 
=.. 
IO.. 
... 
GetRandomDouble.. %
(..% &
)..& '
;..' (
}// 	
else00 
{11 	
data44 
=44 
$num44 
;44 
}55 	
{66 	
IO88 
.88 
	WriteLine88 
(88 
(88 
byte88 
)88 
data88 #
)88# $
;88$ %
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
)>> 
{?? 
double@@ 
data@@ 
;@@ 
ifAA 

(AA 
PrivateReturnsFalseAA 
(AA  
)AA  !
)AA! "
{BB 	
dataEE 
=EE 
$numEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$numJJ 
;JJ 
}KK 	
{LL 	
IONN 
.NN 
	WriteLineNN 
(NN 
(NN 
byteNN 
)NN 
dataNN #
)NN# $
;NN$ %
}OO 	
}PP 
privateSS 
voidSS 
GoodG2B2SS 
(SS 
)SS 
{TT 
doubleUU 
dataUU 
;UU 
ifVV 

(VV 
PrivateReturnsTrueVV 
(VV 
)VV  
)VV  !
{WW 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data__ 
=__ 
$num__ 
;__ 
}`` 	
{aa 	
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
bytecc 
)cc 
datacc #
)cc# $
;cc$ %
}dd 	
}ee 
publicgg 

overridegg 
voidgg 
Goodgg 
(gg 
)gg 
{hh 
GoodG2B1ii 
(ii 
)ii 
;ii 
GoodG2B2jj 
(jj 
)jj 
;jj 
}kk 
}mm 
}nn ﬂ
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_byte_09 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_TRUE #
)# $
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33 !
STATIC_READONLY_FALSE33 $
)33$ %
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
byte@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH  
STATIC_READONLY_TRUEHH #
)HH# $
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ¡
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_byte_10 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
. 

staticTrue 
) 
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33 
staticFalse33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
byte@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 

staticTrueHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ∞
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_byte_11 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
. 
StaticReturnsTrue  
(  !
)! "
)" #
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33 
StaticReturnsFalse33 !
(33! "
)33" #
)33# $
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
byte@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 
StaticReturnsTrueHH  
(HH  !
)HH! "
)HH" #
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ´
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_byte_12 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
. $
StaticReturnsTrueOrFalse '
(' (
)( )
)) *
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data%% 
=%% 
$num%% 
;%% 
}&& 	
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
byte)) 
))) 
data)) #
)))# $
;))$ %
}** 	
}++ 
private00 
void00 
GoodG2B00 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33 $
StaticReturnsTrueOrFalse33 '
(33' (
)33( )
)33) *
{44 	
data66 
=66 
$num66 
;66 
}77 	
else88 
{99 	
data;; 
=;; 
$num;; 
;;; 
}<< 	
{== 	
IO?? 
.?? 
	WriteLine?? 
(?? 
(?? 
byte?? 
)?? 
data?? #
)??# $
;??$ %
}@@ 	
}AA 
publicCC 

overrideCC 
voidCC 
GoodCC 
(CC 
)CC 
{DD 
GoodG2BEE 
(EE 
)EE 
;EE 
}FF 
}HH 
}II ƒ
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_byte_13 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_FIVE #
==$ &
$num' (
)( )
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33  
STATIC_READONLY_FIVE33 #
!=33$ &
$num33' (
)33( )
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
byte@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH  
STATIC_READONLY_FIVEHH #
==HH$ &
$numHH' (
)HH( )
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ¶
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_byte_14 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
. 

staticFive 
== 
$num 
) 
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33 

staticFive33 
!=33 
$num33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
byte@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 

staticFiveHH 
==HH 
$numHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` Å
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_byte_15 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
= 
$num 
; 
switch 
( 
$num 
) 
{ 	
case 
$num 
: 
data!! 
=!! 
IO!! 
.!! 
GetRandomDouble!! %
(!!% &
)!!& '
;!!' (
break"" 
;"" 
default## 
:## 
data&& 
=&& 
$num&& 
;&& 
break'' 
;'' 
}(( 	
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
private11 
void11 
GoodG2B111 
(11 
)11 
{22 
double33 
data33 
=33 
$num33 
;33 
switch44 
(44 
$num44 
)44 
{55 	
case66 
$num66 
:66 
data99 
=99 
$num99 
;99 
break:: 
;:: 
default;; 
:;; 
data== 
=== 
$num== 
;== 
break>> 
;>> 
}?? 	
{@@ 	
IOBB 
.BB 
	WriteLineBB 
(BB 
(BB 
byteBB 
)BB 
dataBB #
)BB# $
;BB$ %
}CC 	
}DD 
privateGG 
voidGG 
GoodG2B2GG 
(GG 
)GG 
{HH 
doubleII 
dataII 
=II 
$numII 
;II 
switchJJ 
(JJ 
$numJJ 
)JJ 
{KK 	
caseLL 
$numLL 
:LL 
dataNN 
=NN 
$numNN 
;NN 
breakOO 
;OO 
defaultPP 
:PP 
dataSS 
=SS 
$numSS 
;SS 
breakTT 
;TT 
}UU 	
{VV 	
IOXX 
.XX 
	WriteLineXX 
(XX 
(XX 
byteXX 
)XX 
dataXX #
)XX# $
;XX$ %
}YY 	
}ZZ 
public\\ 

override\\ 
void\\ 
Good\\ 
(\\ 
)\\ 
{]] 
GoodG2B1^^ 
(^^ 
)^^ 
;^^ 
GoodG2B2__ 
(__ 
)__ 
;__ 
}`` 
}bb 
}cc Ô
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_byte_16 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
while 
( 
true 
) 
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
break!! 
;!! 
}"" 	
{## 	
IO%% 
.%% 
	WriteLine%% 
(%% 
(%% 
byte%% 
)%% 
data%% #
)%%# $
;%%$ %
}&& 	
}'' 
private++ 
void++ 
GoodG2B++ 
(++ 
)++ 
{,, 
double-- 
data-- 
;-- 
while.. 
(.. 
true.. 
).. 
{// 	
data11 
=11 
$num11 
;11 
break22 
;22 
}33 	
{44 	
IO66 
.66 
	WriteLine66 
(66 
(66 
byte66 
)66 
data66 #
)66# $
;66$ %
}77 	
}88 
public:: 

override:: 
void:: 
Good:: 
(:: 
):: 
{;; 
GoodG2B<< 
(<< 
)<< 
;<< 
}== 
}?? 
}@@ ﬂ
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_byte_17 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
for 
( 
int 
i 
= 
$num 
; 
i 
< 
$num 
; 
i  
++  "
)" #
{   	
{!! 
IO## 
.## 
	WriteLine## 
(## 
(## 
byte## "
)##" #
data### '
)##' (
;##( )
}$$ 
}%% 	
}&& 
private++ 
void++ 
GoodG2B++ 
(++ 
)++ 
{,, 
double-- 
data-- 
;-- 
data// 
=// 
$num// 
;// 
for00 
(00 
int00 
i00 
=00 
$num00 
;00 
i00 
<00 
$num00 
;00 
i00  
++00  "
)00" #
{11 	
{22 
IO44 
.44 
	WriteLine44 
(44 
(44 
byte44 "
)44" #
data44# '
)44' (
;44( )
}55 
}66 	
}77 
public99 

override99 
void99 
Good99 
(99 
)99 
{:: 
GoodG2B;; 
(;; 
);; 
;;; 
}<< 
}>> 
}?? Ì"
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_byte_21 ?
:@ A
AbstractTestCaseB R
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 

badPrivate   
=   
true   
;   
data!! 
=!! 

Bad_source!! 
(!! 
)!! 
;!! 
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
byte$$ 
)$$ 
data$$ #
)$$# $
;$$$ %
}%% 	
}&& 
private(( 
double(( 

Bad_source(( 
((( 
)(( 
{)) 
double** 
data** 
;** 
if++ 

(++ 

badPrivate++ 
)++ 
{,, 	
data.. 
=.. 
IO.. 
... 
GetRandomDouble.. %
(..% &
)..& '
;..' (
}// 	
else00 
{11 	
data44 
=44 
$num44 
;44 
}55 	
return66 
data66 
;66 
}77 
private:: 
bool:: 
goodG2B1_private:: !
=::" #
false::$ )
;::) *
private;; 
bool;; 
GoodG2B2_private;; !
=;;" #
false;;$ )
;;;) *
public== 

override== 
void== 
Good== 
(== 
)== 
{>> 
GoodG2B1?? 
(?? 
)?? 
;?? 
GoodG2B2@@ 
(@@ 
)@@ 
;@@ 
}AA 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
)DD 
{EE 
doubleFF 
dataFF 
;FF 
goodG2B1_privateGG 
=GG 
falseGG  
;GG  !
dataHH 
=HH 
GoodG2B1_sourceHH 
(HH 
)HH  
;HH  !
{II 	
IOKK 
.KK 
	WriteLineKK 
(KK 
(KK 
byteKK 
)KK 
dataKK #
)KK# $
;KK$ %
}LL 	
}MM 
privateOO 
doubleOO 
GoodG2B1_sourceOO "
(OO" #
)OO# $
{PP 
doubleQQ 
dataQQ 
=QQ 
$numQQ 
;QQ 
ifRR 

(RR 
goodG2B1_privateRR 
)RR 
{SS 	
dataVV 
=VV 
$numVV 
;VV 
}WW 	
elseXX 
{YY 	
data[[ 
=[[ 
$num[[ 
;[[ 
}\\ 	
return]] 
data]] 
;]] 
}^^ 
privateaa 
voidaa 
GoodG2B2aa 
(aa 
)aa 
{bb 
doublecc 
datacc 
;cc 
GoodG2B2_privatedd 
=dd 
truedd 
;dd  
dataee 
=ee 
GoodG2B2_sourceee 
(ee 
)ee  
;ee  !
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
(hh 
bytehh 
)hh 
datahh #
)hh# $
;hh$ %
}ii 	
}jj 
privatell 
doublell 
GoodG2B2_sourcell "
(ll" #
)ll# $
{mm 
doublenn 
datann 
=nn 
$numnn 
;nn 
ifoo 

(oo 
GoodG2B2_privateoo 
)oo 
{pp 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
returnzz 
datazz 
;zz 
}{{ 
}}} 
}~~ ß
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_22a @
:A B
AbstractTestCaseC S
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_22b!! I
.!!I J
	BadSource!!J S
(!!S T
)!!T U
;!!U V
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
byte$$ 
)$$ 
data$$ #
)$$# $
;$$$ %
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
double66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_22b88 I
.88I J
GoodG2B1Source88J X
(88X Y
)88Y Z
;88Z [
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
byte;; 
);; 
data;; #
);;# $
;;;$ %
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
doubleBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_22bDD I
.DDI J
GoodG2B2SourceDDJ X
(DDX Y
)DDY Z
;DDZ [
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
}KK 
}LL ÿ
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_22b @
{ 
public 

static 
double 
	BadSource "
(" #
)# $
{ 
double 
data 
; 
if 

( F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_22a F
.F G
badPublicStaticG V
)V W
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
return(( 
data(( 
;(( 
})) 
public.. 

static.. 
double.. 
GoodG2B1Source.. '
(..' (
)..( )
{// 
double00 
data00 
;00 
if11 

(11 F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_22a11 F
.11F G 
goodG2B1PublicStatic11G [
)11[ \
{22 	
data55 
=55 
$num55 
;55 
}66 	
else77 
{88 	
data:: 
=:: 
$num:: 
;:: 
};; 	
return<< 
data<< 
;<< 
}== 
public@@ 

static@@ 
double@@ 
GoodG2B2Source@@ '
(@@' (
)@@( )
{AA 
doubleBB 
dataBB 
;BB 
ifCC 

(CC F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_22aCC F
.CCF G 
GoodG2B2PublicStaticCCG [
)CC[ \
{DD 	
dataFF 
=FF 
$numFF 
;FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
returnNN 
dataNN 
;NN 
}OO 
}QQ 
}RR ì
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_byte_31 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
dataCopy 
; 
{ 	
double 
data 
; 
data!! 
=!! 
IO!! 
.!! 
GetRandomDouble!! %
(!!% &
)!!& '
;!!' (
dataCopy"" 
="" 
data"" 
;"" 
}## 	
{$$ 	
double%% 
data%% 
=%% 
dataCopy%% "
;%%" #
{&& 
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( "
)((" #
data((# '
)((' (
;((( )
})) 
}** 	
}++ 
public.. 

override.. 
void.. 
Good.. 
(.. 
).. 
{// 
GoodG2B00 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B44 
(44 
)44 
{55 
double66 
dataCopy66 
;66 
{77 	
double88 
data88 
;88 
data:: 
=:: 
$num:: 
;:: 
dataCopy;; 
=;; 
data;; 
;;; 
}<< 	
{== 	
double>> 
data>> 
=>> 
dataCopy>> "
;>>" #
{?? 
IOAA 
.AA 
	WriteLineAA 
(AA 
(AA 
byteAA "
)AA" #
dataAA# '
)AA' (
;AA( )
}BB 
}CC 	
}DD 
}FF 
}GG ë
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_byte_41 ?
:@ A
AbstractTestCaseB R
{ 
private 
static 
void 
BadSink 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
double## 
data## 
;## 
data%% 
=%% 
IO%% 
.%% 
GetRandomDouble%% !
(%%! "
)%%" #
;%%# $
BadSink&& 
(&& 
data&& 
)&& 
;&& 
}'' 
public** 

override** 
void** 
Good** 
(** 
)** 
{++ 
GoodG2B,, 
(,, 
),, 
;,, 
}-- 
private// 
static// 
void// 
GoodG2BSink// #
(//# $
double//$ *
data//+ /
)//0 1
{00 
{11 	
IO33 
.33 
	WriteLine33 
(33 
(33 
byte33 
)33 
data33 #
)33# $
;33$ %
}44 	
}55 
private88 
static88 
void88 
GoodG2B88 
(88  
)88  !
{99 
double:: 
data:: 
;:: 
data<< 
=<< 
$num<< 
;<< 
GoodG2BSink== 
(== 
data== 
)== 
;== 
}>> 
}@@ 
}AA Å
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_byte_42 ?
:@ A
AbstractTestCaseB R
{ 
private 
static 
double 
	BadSource #
(# $
)$ %
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
return 
data 
; 
} 
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
double$$ 
data$$ 
=$$ 
	BadSource$$ 
($$  
)$$  !
;$$! "
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
byte'' 
)'' 
data'' #
)''# $
;''$ %
}(( 	
})) 
private,, 
static,, 
double,, 
GoodG2BSource,, '
(,,' (
),,( )
{-- 
double.. 
data.. 
;.. 
data00 
=00 
$num00 
;00 
return11 
data11 
;11 
}22 
private55 
static55 
void55 
GoodG2B55 
(55  
)55  !
{66 
double77 
data77 
=77 
GoodG2BSource77 #
(77# $
)77$ %
;77% &
{88 	
IO:: 
.:: 
	WriteLine:: 
(:: 
(:: 
byte:: 
):: 
data:: #
)::# $
;::$ %
};; 	
}<< 
public>> 

override>> 
void>> 
Good>> 
(>> 
)>> 
{?? 
GoodG2B@@ 
(@@ 
)@@ 
;@@ 
}AA 
}CC 
}DD «
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_byte_45 ?
:@ A
AbstractTestCaseB R
{ 
private 
double 
dataBad 
; 
private 
double 
dataGoodG2B 
; 
private 
void 
BadSink 
( 
) 
{ 
double 
data 
= 
dataBad 
; 
{   	
IO"" 
."" 
	WriteLine"" 
("" 
("" 
byte"" 
)"" 
data"" #
)""# $
;""$ %
}## 	
}$$ 
public'' 

override'' 
void'' 
Bad'' 
('' 
)'' 
{(( 
double)) 
data)) 
;)) 
data++ 
=++ 
IO++ 
.++ 
GetRandomDouble++ !
(++! "
)++" #
;++# $
dataBad,, 
=,, 
data,, 
;,, 
BadSink-- 
(-- 
)-- 
;-- 
}.. 
public11 

override11 
void11 
Good11 
(11 
)11 
{22 
GoodG2B33 
(33 
)33 
;33 
}44 
private66 
void66 
GoodG2BSink66 
(66 
)66 
{77 
double88 
data88 
=88 
dataGoodG2B88 !
;88! "
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
byte;; 
);; 
data;; #
);;# $
;;;$ %
}<< 	
}== 
private@@ 
void@@ 
GoodG2B@@ 
(@@ 
)@@ 
{AA 
doubleBB 
dataBB 
;BB 
dataDD 
=DD 
$numDD 
;DD 
dataGoodG2BEE 
=EE 
dataEE 
;EE 
GoodG2BSinkFF 
(FF 
)FF 
;FF 
}GG 
}II 
}JJ ø
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_51a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_51b B
.B C
BadSinkC J
(J K
dataK O
)Q R
;R S
} 
public"" 

override"" 
void"" 
Good"" 
("" 
)"" 
{## 
GoodG2B$$ 
($$ 
)$$ 
;$$ 
}%% 
private(( 
void(( 
GoodG2B(( 
((( 
)(( 
{)) 
double** 
data** 
;** 
data,, 
=,, 
$num,, 
;,, F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_51b-- B
.--B C
GoodG2BSink--C N
(--N O
data--O S
)--U V
;--V W
}.. 
}00 
}11 °	
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_51b @
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
double### )
data##* .
)##/ 0
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
byte'' 
)'' 
data'' #
)''# $
;''$ %
}(( 	
})) 
}++ 
},, ø
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_52a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_52b B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
double++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_52b.. B
...B C
GoodG2BSink..C N
(..N O
data..O S
)..T U
;..U V
}// 
}11 
}22 ı
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_52b @
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_52c B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_52c## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' °	
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_52c @
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- ø
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_53a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_53b B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
double++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_53b.. B
...B C
GoodG2BSink..C N
(..N O
data..O S
)..T U
;..U V
}// 
}11 
}22 ı
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_53b @
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_53c B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_53c## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' ı
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_53c @
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_53d B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_53d## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' °	
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_53d @
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- ø
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_54a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_54b B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
double++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_54b.. B
...B C
GoodG2BSink..C N
(..N O
data..O S
)..T U
;..U V
}// 
}11 
}22 ı
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_54b @
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_54c B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_54c## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' ı
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_54c @
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_54d B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_54d## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' ı
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_54d @
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_54e B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_54e## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' °	
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_54e @
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- Ì
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_61a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
= F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_61b P
.P Q
	BadSourceQ Z
(Z [
)[ \
;\ ]
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
double++ 
data++ 
=++ F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_61b++ P
.++P Q
GoodG2BSource++Q ^
(++^ _
)++_ `
;++` a
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
byte.. 
).. 
data.. #
)..# $
;..$ %
}// 	
}00 
}22 
}33 ˜
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_61b @
{ 
public 

static 
double 
	BadSource "
(" #
)# $
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
return 
data 
; 
}   
public%% 

static%% 
double%% 
GoodG2BSource%% &
(%%& '
)%%' (
{&& 
double'' 
data'' 
;'' 
data)) 
=)) 
$num)) 
;)) 
return** 
data** 
;** 
}++ 
}-- 
}.. √
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_66a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
double 
[ 
] 
	dataArray 
= 
new  
double! '
[' (
$num( )
]) *
;* +
	dataArray   
[   
$num   
]   
=   
data   
;   F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_66b!! B
.!!B C
BadSink!!C J
(!!J K
	dataArray!!K T
)!!V W
;!!W X
}"" 
public%% 

override%% 
void%% 
Good%% 
(%% 
)%% 
{&& 
GoodG2B'' 
('' 
)'' 
;'' 
}(( 
private++ 
static++ 
void++ 
GoodG2B++ 
(++  
)++  !
{,, 
double-- 
data-- 
;-- 
data// 
=// 
$num// 
;// 
double00 
[00 
]00 
	dataArray00 
=00 
new00  
double00! '
[00' (
$num00( )
]00) *
;00* +
	dataArray11 
[11 
$num11 
]11 
=11 
data11 
;11 F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_66b22 B
.22B C
GoodG2BSink22C N
(22N O
	dataArray22O X
)22Z [
;22[ \
}33 
}55 
}66 ˝
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_66b @
{ 
public 

static 
void 
BadSink 
( 
double %
[% &
]& '
	dataArray( 1
)2 3
{ 
double 
data 
= 
	dataArray 
[  
$num  !
]! "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
double%%# )
[%%) *
]%%* +
	dataArray%%, 5
)%%6 7
{&& 
double'' 
data'' 
='' 
	dataArray'' 
[''  
$num''  !
]''! "
;''" #
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// ¶
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_67a @
:A B
AbstractTestCaseC S
{ 
public 

class 
	Container 
{ 
public 
double 
containerOne "
;" #
} 
public 

override 
void 
Bad 
( 
) 
{   
double!! 
data!! 
;!! 
data## 
=## 
IO## 
.## 
GetRandomDouble## !
(##! "
)##" #
;### $
	Container$$ 
dataContainer$$ 
=$$  !
new$$" %
	Container$$& /
($$/ 0
)$$0 1
;$$1 2
dataContainer%% 
.%% 
containerOne%% "
=%%# $
data%%% )
;%%) *F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_67b&& B
.&&B C
BadSink&&C J
(&&J K
dataContainer&&K X
)&&Z [
;&&[ \
}'' 
public** 

override** 
void** 
Good** 
(** 
)** 
{++ 
GoodG2B,, 
(,, 
),, 
;,, 
}-- 
private00 
static00 
void00 
GoodG2B00 
(00  
)00  !
{11 
double22 
data22 
;22 
data44 
=44 
$num44 
;44 
	Container55 
dataContainer55 
=55  !
new55" %
	Container55& /
(55/ 0
)550 1
;551 2
dataContainer66 
.66 
containerOne66 "
=66# $
data66% )
;66) *F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_67b77 B
.77B C
GoodG2BSink77C N
(77N O
dataContainer77O \
)77^ _
;77_ `
}88 
}:: 
};; ˜
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_67b @
{ 
public 

static 
void 
BadSink 
( F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_67a Y
.Y Z
	ContainerZ c
dataContainerd q
)r s
{ 
double 
data 
= 
dataContainer #
.# $
containerOne$ 0
;0 1
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_67a%%# ]
.%%] ^
	Container%%^ g
dataContainer%%h u
)%%v w
{&& 
double'' 
data'' 
='' 
dataContainer'' #
.''# $
containerOne''$ 0
;''0 1
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// ¢
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_68a @
:A B
AbstractTestCaseC S
{ 
public 

static 
double 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_68b B
.B C
BadSinkC J
(J K
)K L
;L M
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
data,, 
=,, 
$num,, 
;,, F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_68b-- B
.--B C
GoodG2BSink--C N
(--N O
)--O P
;--P Q
}.. 
}00 
}11 Ø
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_68b @
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
double 
data 
= F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_68a P
.P Q
dataQ U
;U V
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
double&& 
data&& 
=&& F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_68a&& P
.&&P Q
data&&Q U
;&&U V
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
byte)) 
))) 
data)) #
)))# $
;))$ %
}** 	
}++ 
}-- 
}.. ∑
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_71a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_71b B
.B C
BadSinkC J
(J K
(K L
ObjectL R
)R S
dataS W
)Y Z
;Z [
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
double++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_71b.. B
...B C
GoodG2BSink..C N
(..N O
(..O P
Object..P V
)..V W
data..W [
)..] ^
;..^ _
}// 
}11 
}22 …
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_71b @
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
double 
data 
= 
( 
double 
) 

dataObject (
;( )
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
double(( 
data(( 
=(( 
((( 
double(( 
)(( 

dataObject(( (
;((( )
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ◊
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_72a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
	Hashtable 
dataHashtable 
=  !
new" %
	Hashtable& /
(/ 0
$num0 1
)1 2
;2 3
dataHashtable   
.   
Add   
(   
$num   
,   
data   !
)  ! "
;  " #
dataHashtable!! 
.!! 
Add!! 
(!! 
$num!! 
,!! 
data!! !
)!!! "
;!!" #
dataHashtable"" 
."" 
Add"" 
("" 
$num"" 
,"" 
data"" !
)""! "
;""" #F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_72b## B
.##B C
BadSink##C J
(##J K
dataHashtable##K X
)##Z [
;##[ \
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
)'' 
{(( 
GoodG2B)) 
()) 
))) 
;)) 
}** 
private-- 
static-- 
void-- 
GoodG2B-- 
(--  
)--  !
{.. 
double// 
data// 
;// 
data11 
=11 
$num11 
;11 
	Hashtable22 
dataHashtable22 
=22  !
new22" %
	Hashtable22& /
(22/ 0
$num220 1
)221 2
;222 3
dataHashtable33 
.33 
Add33 
(33 
$num33 
,33 
data33 !
)33! "
;33" #
dataHashtable44 
.44 
Add44 
(44 
$num44 
,44 
data44 !
)44! "
;44" #
dataHashtable55 
.55 
Add55 
(55 
$num55 
,55 
data55 !
)55! "
;55" #F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_72b66 B
.66B C
GoodG2BSink66C N
(66N O
dataHashtable66O \
)66^ _
;66_ `
}77 
}99 
}:: ª
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_72b @
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
double 
data 
= 
( 
double 
) 
dataHashtable ,
[, -
$num- .
]. /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
double(( 
data(( 
=(( 
((( 
double(( 
)(( 
dataHashtable(( ,
[((, -
$num((- .
]((. /
;((/ 0
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 €
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_73a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $

LinkedList   
<   
double   
>   
dataLinkedList   )
=  * +
new  , /

LinkedList  0 :
<  : ;
double  ; A
>  A B
(  B C
)  C D
;  D E
dataLinkedList!! 
.!! 
AddLast!! 
(!! 
data!! #
)!!# $
;!!$ %
dataLinkedList"" 
."" 
AddLast"" 
("" 
data"" #
)""# $
;""$ %
dataLinkedList## 
.## 
AddLast## 
(## 
data## #
)### $
;##$ %F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_73b$$ B
.$$B C
BadSink$$C J
($$J K
dataLinkedList$$K Y
)$$[ \
;$$\ ]
}%% 
public(( 

override(( 
void(( 
Good(( 
((( 
)(( 
{)) 
GoodG2B** 
(** 
)** 
;** 
}++ 
private.. 
static.. 
void.. 
GoodG2B.. 
(..  
)..  !
{// 
double00 
data00 
;00 
data22 
=22 
$num22 
;22 

LinkedList33 
<33 
double33 
>33 
dataLinkedList33 )
=33* +
new33, /

LinkedList330 :
<33: ;
double33; A
>33A B
(33B C
)33C D
;33D E
dataLinkedList44 
.44 
AddLast44 
(44 
data44 #
)44# $
;44$ %
dataLinkedList55 
.55 
AddLast55 
(55 
data55 #
)55# $
;55$ %
dataLinkedList66 
.66 
AddLast66 
(66 
data66 #
)66# $
;66$ %F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_73b77 B
.77B C
GoodG2BSink77C N
(77N O
dataLinkedList77O ]
)77_ `
;77` a
}88 
}:: 
};; Á
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_73b @
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
double* 0
>0 1
dataLinkedList2 @
)A B
{ 
double 
data 
= 
dataLinkedList $
.$ %
Last% )
.) *
Value* /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
double&&. 4
>&&4 5
dataLinkedList&&6 D
)&&E F
{'' 
double(( 
data(( 
=(( 
dataLinkedList(( $
.(($ %
Last((% )
.(() *
Value((* /
;((/ 0
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 â
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_74a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $

Dictionary 
< 
int 
, 
double 
> 
dataDictionary -
=. /
new0 3

Dictionary4 >
<> ?
int? B
,B C
doubleC I
>I J
(J K
)K L
;L M
dataDictionary   
.   
Add   
(   
$num   
,   
data   "
)  " #
;  # $
dataDictionary!! 
.!! 
Add!! 
(!! 
$num!! 
,!! 
data!! "
)!!" #
;!!# $
dataDictionary"" 
."" 
Add"" 
("" 
$num"" 
,"" 
data"" "
)""" #
;""# $F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_74b## B
.##B C
BadSink##C J
(##J K
dataDictionary##K Y
)##[ \
;##\ ]
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
)'' 
{(( 
GoodG2B)) 
()) 
))) 
;)) 
}** 
private-- 
static-- 
void-- 
GoodG2B-- 
(--  
)--  !
{.. 
double// 
data// 
;// 
data11 
=11 
$num11 
;11 

Dictionary22 
<22 
int22 
,22 
double22 
>22 
dataDictionary22 -
=22. /
new220 3

Dictionary224 >
<22> ?
int22? B
,22B C
double22C I
>22I J
(22J K
)22K L
;22L M
dataDictionary33 
.33 
Add33 
(33 
$num33 
,33 
data33 "
)33" #
;33# $
dataDictionary44 
.44 
Add44 
(44 
$num44 
,44 
data44 "
)44" #
;44# $
dataDictionary55 
.55 
Add55 
(55 
$num55 
,55 
data55 "
)55" #
;55# $F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_74b66 B
.66B C
GoodG2BSink66C N
(66N O
dataDictionary66O ]
)66_ `
;66` a
}77 
}99 
}:: Å
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_74b @
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
double. 4
>4 5
dataDictionary6 D
)E F
{ 
double 
data 
= 
dataDictionary $
[$ %
$num% &
]& '
;' (
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
double&&2 8
>&&8 9
dataDictionary&&: H
)&&I J
{'' 
double(( 
data(( 
=(( 
dataDictionary(( $
[(($ %
$num((% &
]((& '
;((' (
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 • 
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_75a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
IO   
.   
GetRandomDouble   !
(  ! "
)  " #
;  # $
byte"" 
["" 
]"" 
dataSerialized"" 
="" 
null""  $
;""$ %
try## 
{$$ 	
BinaryFormatter%% 
bf%% 
=%%  
new%%! $
BinaryFormatter%%% 4
(%%4 5
)%%5 6
;%%6 7
using&& 
(&& 
var&& 
ms&& 
=&& 
new&& 
MemoryStream&&  ,
(&&, -
)&&- .
)&&. /
{'' 
bf(( 
.(( 
	Serialize(( 
((( 
ms(( 
,((  
data((! %
)((% &
;((& '
dataSerialized)) 
=))  
ms))! #
.))# $
ToArray))$ +
())+ ,
))), -
;))- .
}** F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_75b++ F
.++F G
BadSink++G N
(++N O
dataSerialized++O ]
)++_ `
;++` a
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. X
,//X Y
exceptSerialize//Z i
)//i j
;//j k
}00 	
}11 
public44 

override44 
void44 
Good44 
(44 
)44 
{55 
GoodG2B66 
(66 
)66 
;66 
}77 
private:: 
static:: 
void:: 
GoodG2B:: 
(::  
)::  !
{;; 
double<< 
data<< 
;<< 
data>> 
=>> 
$num>> 
;>> 
byte@@ 
[@@ 
]@@ 
dataSerialized@@ 
=@@ 
null@@  $
;@@$ %
tryAA 
{BB 	
BinaryFormatterCC 
bfCC 
=CC  
newCC! $
BinaryFormatterCC% 4
(CC4 5
)CC5 6
;CC6 7
usingDD 
(DD 
varDD 
msDD 
=DD 
newDD 
MemoryStreamDD  ,
(DD, -
)DD- .
)DD. /
{EE 
bfFF 
.FF 
	SerializeFF 
(FF 
msFF 
,FF  
dataFF! %
)FF% &
;FF& '
dataSerializedGG 
=GG  
msGG! #
.GG# $
ToArrayGG$ +
(GG+ ,
)GG, -
;GG- .
}HH F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_75bII F
.IIF G
GoodG2BSinkIIG R
(IIR S
dataSerializedIIS a
)IIc d
;IId e
}JJ 	
catchKK 
(KK "
SerializationExceptionKK %
exceptSerializeKK& 5
)KK5 6
{LL 	
IOMM 
.MM 
LoggerMM 
.MM 
LogMM 
(MM 
NLogMM 
.MM 
LogLevelMM '
.MM' (
WarnMM( ,
,MM, -
$strMM. X
,MMX Y
exceptSerializeMMZ i
)MMi j
;MMj k
}NN 	
}OO 
}QQ 
}RR Á!
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_75b @
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
double   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
double&& 
)&& 
binForm&& &
.&&& '
Deserialize&&' 2
(&&2 3
	memStream&&3 <
)&&< =
;&&= >
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** "
)**" #
data**# '
)**' (
;**( )
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
double:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
double@@ 
)@@ 
binForm@@ &
.@@& '
Deserialize@@' 2
(@@2 3
	memStream@@3 <
)@@< =
;@@= >
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
byteDD "
)DD" #
dataDD# '
)DD' (
;DD( )
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN „
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_byte_81a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $J
>CWE197_Numeric_Truncation_Error__double_random_to_byte_81_base F

baseObjectG Q
=R S
newT WJ
=CWE197_Numeric_Truncation_Error__double_random_to_byte_81_bad	X ï
(
ï ñ
)
ñ ó
;
ó ò

baseObject   
.   
Action   
(   
data   
)    
;    !
}!! 
public$$ 

override$$ 
void$$ 
Good$$ 
($$ 
)$$ 
{%% 
GoodG2B&& 
(&& 
)&& 
;&& 
}'' 
private** 
void** 
GoodG2B** 
(** 
)** 
{++ 
double,, 
data,, 
;,, 
data.. 
=.. 
$num.. 
;.. J
>CWE197_Numeric_Truncation_Error__double_random_to_byte_81_base// F

baseObject//G Q
=//R S
new//T WN
ACWE197_Numeric_Truncation_Error__double_random_to_byte_81_goodG2B	//X ô
(
//ô ö
)
//ö õ
;
//õ ú

baseObject00 
.00 
Action00 
(00 
data00 
)00  
;00  !
}11 
}33 
}44 å
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_random_to_byte_81_bad C
:D EK
>CWE197_Numeric_Truncation_Error__double_random_to_byte_81_base	F Ñ
{ 
public 

override 
void 
Action 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" ˆ
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 J
>CWE197_Numeric_Truncation_Error__double_random_to_byte_81_base M
{ 
public 

abstract 
void 
Action 
(  
double  &
data' +
), -
;- .
} 
} î
ƒC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_byte_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class M
ACWE197_Numeric_Truncation_Error__double_random_to_byte_81_goodG2B G
:H IK
>CWE197_Numeric_Truncation_Error__double_random_to_byte_81_base	J à
{ 
public 

override 
void 
Action 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" Ì
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_float_01 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
{ 	
IO!! 
.!! 
	WriteLine!! 
(!! 
(!! 
float!! 
)!!  
data!!  $
)!!$ %
;!!% &
}"" 	
}## 
public&& 

override&& 
void&& 
Good&& 
(&& 
)&& 
{'' 
GoodG2B(( 
((( 
)(( 
;(( 
})) 
private,, 
void,, 
GoodG2B,, 
(,, 
),, 
{-- 
double.. 
data.. 
;.. 
data00 
=00 
$num00 
;00 
{11 	
IO33 
.33 
	WriteLine33 
(33 
(33 
float33 
)33  
data33  $
)33$ %
;33% &
}44 	
}55 
}77 
}88 ◊
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_float_02 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
true 
) 
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
float** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
false33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
float@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
trueHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
floatUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` º
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_float_03 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
$num 
== 
$num 
) 
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
float** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
$num33 
!=33 
$num33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
float@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
$numHH 
==HH 
$numHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
floatUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ó
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_float_04 @
:A B
AbstractTestCaseC S
{ 
private 
const 
bool 
PRIVATE_CONST_TRUE )
=* +
true, 0
;0 1
private 
const 
bool 
PRIVATE_CONST_FALSE *
=+ ,
false- 2
;2 3
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
double## 
data## 
;## 
if$$ 

($$ 
PRIVATE_CONST_TRUE$$ 
)$$ 
{%% 	
data'' 
='' 
IO'' 
.'' 
GetRandomDouble'' %
(''% &
)''& '
;''' (
}(( 	
else)) 
{** 	
data-- 
=-- 
$num-- 
;-- 
}.. 	
{// 	
IO11 
.11 
	WriteLine11 
(11 
(11 
float11 
)11  
data11  $
)11$ %
;11% &
}22 	
}33 
private77 
void77 
GoodG2B177 
(77 
)77 
{88 
double99 
data99 
;99 
if:: 

(:: 
PRIVATE_CONST_FALSE:: 
)::  
{;; 	
data>> 
=>> 
$num>> 
;>> 
}?? 	
else@@ 
{AA 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
floatGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
privateLL 
voidLL 
GoodG2B2LL 
(LL 
)LL 
{MM 
doubleNN 
dataNN 
;NN 
ifOO 

(OO 
PRIVATE_CONST_TRUEOO 
)OO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
elseTT 
{UU 	
dataXX 
=XX 
$numXX 
;XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
float\\ 
)\\  
data\\  $
)\\$ %
;\\% &
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2B1bb 
(bb 
)bb 
;bb 
GoodG2B2cc 
(cc 
)cc 
;cc 
}dd 
}ff 
}gg Œ
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_float_05 @
:A B
AbstractTestCaseC S
{ 
private 
bool 
privateTrue 
= 
true #
;# $
private 
bool 
privateFalse 
= 
false  %
;% &
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
double## 
data## 
;## 
if$$ 

($$ 
privateTrue$$ 
)$$ 
{%% 	
data'' 
='' 
IO'' 
.'' 
GetRandomDouble'' %
(''% &
)''& '
;''' (
}(( 	
else)) 
{** 	
data-- 
=-- 
$num-- 
;-- 
}.. 	
{// 	
IO11 
.11 
	WriteLine11 
(11 
(11 
float11 
)11  
data11  $
)11$ %
;11% &
}22 	
}33 
private77 
void77 
GoodG2B177 
(77 
)77 
{88 
double99 
data99 
;99 
if:: 

(:: 
privateFalse:: 
):: 
{;; 	
data>> 
=>> 
$num>> 
;>> 
}?? 	
else@@ 
{AA 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
floatGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
privateLL 
voidLL 
GoodG2B2LL 
(LL 
)LL 
{MM 
doubleNN 
dataNN 
;NN 
ifOO 

(OO 
privateTrueOO 
)OO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
elseTT 
{UU 	
dataXX 
=XX 
$numXX 
;XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
float\\ 
)\\  
data\\  $
)\\$ %
;\\% &
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2B1bb 
(bb 
)bb 
;bb 
GoodG2B2cc 
(cc 
)cc 
;cc 
}dd 
}ff 
}gg Ô
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_float_06 @
:A B
AbstractTestCaseC S
{ 
private 
const 
int 
PRIVATE_CONST_FIVE (
=) *
$num+ ,
;, -
public   

override   
void   
Bad   
(   
)   
{!! 
double"" 
data"" 
;"" 
if## 

(## 
PRIVATE_CONST_FIVE## 
==## !
$num##" #
)### $
{$$ 	
data&& 
=&& 
IO&& 
.&& 
GetRandomDouble&& %
(&&% &
)&&& '
;&&' (
}'' 	
else(( 
{)) 	
data,, 
=,, 
$num,, 
;,, 
}-- 	
{.. 	
IO00 
.00 
	WriteLine00 
(00 
(00 
float00 
)00  
data00  $
)00$ %
;00% &
}11 	
}22 
private66 
void66 
GoodG2B166 
(66 
)66 
{77 
double88 
data88 
;88 
if99 

(99 
PRIVATE_CONST_FIVE99 
!=99 !
$num99" #
)99# $
{:: 	
data== 
=== 
$num== 
;== 
}>> 	
else?? 
{@@ 	
dataBB 
=BB 
$numBB 
;BB 
}CC 	
{DD 	
IOFF 
.FF 
	WriteLineFF 
(FF 
(FF 
floatFF 
)FF  
dataFF  $
)FF$ %
;FF% &
}GG 	
}HH 
privateKK 
voidKK 
GoodG2B2KK 
(KK 
)KK 
{LL 
doubleMM 
dataMM 
;MM 
ifNN 

(NN 
PRIVATE_CONST_FIVENN 
==NN !
$numNN" #
)NN# $
{OO 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
elseSS 
{TT 	
dataWW 
=WW 
$numWW 
;WW 
}XX 	
{YY 	
IO[[ 
.[[ 
	WriteLine[[ 
([[ 
([[ 
float[[ 
)[[  
data[[  $
)[[$ %
;[[% &
}\\ 	
}]] 
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2B1aa 
(aa 
)aa 
;aa 
GoodG2B2bb 
(bb 
)bb 
;bb 
}cc 
}ee 
}ff ¿
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_float_07 @
:A B
AbstractTestCaseC S
{ 
private 
int 
privateFive 
= 
$num 
;  
public   

override   
void   
Bad   
(   
)   
{!! 
double"" 
data"" 
;"" 
if## 

(## 
privateFive## 
==## 
$num## 
)## 
{$$ 	
data&& 
=&& 
IO&& 
.&& 
GetRandomDouble&& %
(&&% &
)&&& '
;&&' (
}'' 	
else(( 
{)) 	
data,, 
=,, 
$num,, 
;,, 
}-- 	
{.. 	
IO00 
.00 
	WriteLine00 
(00 
(00 
float00 
)00  
data00  $
)00$ %
;00% &
}11 	
}22 
private66 
void66 
GoodG2B166 
(66 
)66 
{77 
double88 
data88 
;88 
if99 

(99 
privateFive99 
!=99 
$num99 
)99 
{:: 	
data== 
=== 
$num== 
;== 
}>> 	
else?? 
{@@ 	
dataBB 
=BB 
$numBB 
;BB 
}CC 	
{DD 	
IOFF 
.FF 
	WriteLineFF 
(FF 
(FF 
floatFF 
)FF  
dataFF  $
)FF$ %
;FF% &
}GG 	
}HH 
privateKK 
voidKK 
GoodG2B2KK 
(KK 
)KK 
{LL 
doubleMM 
dataMM 
;MM 
ifNN 

(NN 
privateFiveNN 
==NN 
$numNN 
)NN 
{OO 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
elseSS 
{TT 	
dataWW 
=WW 
$numWW 
;WW 
}XX 	
{YY 	
IO[[ 
.[[ 
	WriteLine[[ 
([[ 
([[ 
float[[ 
)[[  
data[[  $
)[[$ %
;[[% &
}\\ 	
}]] 
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2B1aa 
(aa 
)aa 
;aa 
GoodG2B2bb 
(bb 
)bb 
;bb 
}cc 
}ee 
}ff ı
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_float_08 @
:A B
AbstractTestCaseC S
{ 
private 
static 
bool 
PrivateReturnsTrue *
(* +
)+ ,
{ 
return 
true 
; 
}   
private"" 
static"" 
bool"" 
PrivateReturnsFalse"" +
(""+ ,
)"", -
{## 
return$$ 
false$$ 
;$$ 
}%% 
public(( 

override(( 
void(( 
Bad(( 
((( 
)(( 
{)) 
double** 
data** 
;** 
if++ 

(++ 
PrivateReturnsTrue++ 
(++ 
)++  
)++  !
{,, 	
data.. 
=.. 
IO.. 
... 
GetRandomDouble.. %
(..% &
)..& '
;..' (
}// 	
else00 
{11 	
data44 
=44 
$num44 
;44 
}55 	
{66 	
IO88 
.88 
	WriteLine88 
(88 
(88 
float88 
)88  
data88  $
)88$ %
;88% &
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
)>> 
{?? 
double@@ 
data@@ 
;@@ 
ifAA 

(AA 
PrivateReturnsFalseAA 
(AA  
)AA  !
)AA! "
{BB 	
dataEE 
=EE 
$numEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$numJJ 
;JJ 
}KK 	
{LL 	
IONN 
.NN 
	WriteLineNN 
(NN 
(NN 
floatNN 
)NN  
dataNN  $
)NN$ %
;NN% &
}OO 	
}PP 
privateSS 
voidSS 
GoodG2B2SS 
(SS 
)SS 
{TT 
doubleUU 
dataUU 
;UU 
ifVV 

(VV 
PrivateReturnsTrueVV 
(VV 
)VV  
)VV  !
{WW 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data__ 
=__ 
$num__ 
;__ 
}`` 	
{aa 	
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
floatcc 
)cc  
datacc  $
)cc$ %
;cc% &
}dd 	
}ee 
publicgg 

overridegg 
voidgg 
Goodgg 
(gg 
)gg 
{hh 
GoodG2B1ii 
(ii 
)ii 
;ii 
GoodG2B2jj 
(jj 
)jj 
;jj 
}kk 
}mm 
}nn ‰
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_float_09 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_TRUE #
)# $
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
float** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33 !
STATIC_READONLY_FALSE33 $
)33$ %
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
float@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH  
STATIC_READONLY_TRUEHH #
)HH# $
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
floatUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ∆
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_float_10 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
. 

staticTrue 
) 
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
float** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33 
staticFalse33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
float@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 

staticTrueHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
floatUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` µ
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_float_11 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
. 
StaticReturnsTrue  
(  !
)! "
)" #
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
float** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33 
StaticReturnsFalse33 !
(33! "
)33" #
)33# $
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
float@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 
StaticReturnsTrueHH  
(HH  !
)HH! "
)HH" #
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
floatUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` Ø
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_float_12 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
. $
StaticReturnsTrueOrFalse '
(' (
)( )
)) *
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data%% 
=%% 
$num%% 
;%% 
}&& 	
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
float)) 
)))  
data))  $
)))$ %
;))% &
}** 	
}++ 
private00 
void00 
GoodG2B00 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33 $
StaticReturnsTrueOrFalse33 '
(33' (
)33( )
)33) *
{44 	
data66 
=66 
$num66 
;66 
}77 	
else88 
{99 	
data;; 
=;; 
$num;; 
;;; 
}<< 	
{== 	
IO?? 
.?? 
	WriteLine?? 
(?? 
(?? 
float?? 
)??  
data??  $
)??$ %
;??% &
}@@ 	
}AA 
publicCC 

overrideCC 
voidCC 
GoodCC 
(CC 
)CC 
{DD 
GoodG2BEE 
(EE 
)EE 
;EE 
}FF 
}HH 
}II …
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_float_13 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_FIVE #
==$ &
$num' (
)( )
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
float** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33  
STATIC_READONLY_FIVE33 #
!=33$ &
$num33' (
)33( )
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
float@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH  
STATIC_READONLY_FIVEHH #
==HH$ &
$numHH' (
)HH( )
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
floatUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ´
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_float_14 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
. 

staticFive 
== 
$num 
) 
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
float** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33 

staticFive33 
!=33 
$num33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
float@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 

staticFiveHH 
==HH 
$numHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
floatUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` Ü
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_float_15 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
= 
$num 
; 
switch 
( 
$num 
) 
{ 	
case 
$num 
: 
data!! 
=!! 
IO!! 
.!! 
GetRandomDouble!! %
(!!% &
)!!& '
;!!' (
break"" 
;"" 
default## 
:## 
data&& 
=&& 
$num&& 
;&& 
break'' 
;'' 
}(( 	
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
float++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
private11 
void11 
GoodG2B111 
(11 
)11 
{22 
double33 
data33 
=33 
$num33 
;33 
switch44 
(44 
$num44 
)44 
{55 	
case66 
$num66 
:66 
data99 
=99 
$num99 
;99 
break:: 
;:: 
default;; 
:;; 
data== 
=== 
$num== 
;== 
break>> 
;>> 
}?? 	
{@@ 	
IOBB 
.BB 
	WriteLineBB 
(BB 
(BB 
floatBB 
)BB  
dataBB  $
)BB$ %
;BB% &
}CC 	
}DD 
privateGG 
voidGG 
GoodG2B2GG 
(GG 
)GG 
{HH 
doubleII 
dataII 
=II 
$numII 
;II 
switchJJ 
(JJ 
$numJJ 
)JJ 
{KK 	
caseLL 
$numLL 
:LL 
dataNN 
=NN 
$numNN 
;NN 
breakOO 
;OO 
defaultPP 
:PP 
dataSS 
=SS 
$numSS 
;SS 
breakTT 
;TT 
}UU 	
{VV 	
IOXX 
.XX 
	WriteLineXX 
(XX 
(XX 
floatXX 
)XX  
dataXX  $
)XX$ %
;XX% &
}YY 	
}ZZ 
public\\ 

override\\ 
void\\ 
Good\\ 
(\\ 
)\\ 
{]] 
GoodG2B1^^ 
(^^ 
)^^ 
;^^ 
GoodG2B2__ 
(__ 
)__ 
;__ 
}`` 
}bb 
}cc Û
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_float_16 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
while 
( 
true 
) 
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
break!! 
;!! 
}"" 	
{## 	
IO%% 
.%% 
	WriteLine%% 
(%% 
(%% 
float%% 
)%%  
data%%  $
)%%$ %
;%%% &
}&& 	
}'' 
private++ 
void++ 
GoodG2B++ 
(++ 
)++ 
{,, 
double-- 
data-- 
;-- 
while.. 
(.. 
true.. 
).. 
{// 	
data11 
=11 
$num11 
;11 
break22 
;22 
}33 	
{44 	
IO66 
.66 
	WriteLine66 
(66 
(66 
float66 
)66  
data66  $
)66$ %
;66% &
}77 	
}88 
public:: 

override:: 
void:: 
Good:: 
(:: 
):: 
{;; 
GoodG2B<< 
(<< 
)<< 
;<< 
}== 
}?? 
}@@ „
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_float_17 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
for 
( 
int 
i 
= 
$num 
; 
i 
< 
$num 
; 
i  
++  "
)" #
{   	
{!! 
IO## 
.## 
	WriteLine## 
(## 
(## 
float## #
)### $
data##$ (
)##( )
;##) *
}$$ 
}%% 	
}&& 
private++ 
void++ 
GoodG2B++ 
(++ 
)++ 
{,, 
double-- 
data-- 
;-- 
data// 
=// 
$num// 
;// 
for00 
(00 
int00 
i00 
=00 
$num00 
;00 
i00 
<00 
$num00 
;00 
i00  
++00  "
)00" #
{11 	
{22 
IO44 
.44 
	WriteLine44 
(44 
(44 
float44 #
)44# $
data44$ (
)44( )
;44) *
}55 
}66 	
}77 
public99 

override99 
void99 
Good99 
(99 
)99 
{:: 
GoodG2B;; 
(;; 
);; 
;;; 
}<< 
}>> 
}?? Ú"
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_float_21 @
:A B
AbstractTestCaseC S
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 

badPrivate   
=   
true   
;   
data!! 
=!! 

Bad_source!! 
(!! 
)!! 
;!! 
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
float$$ 
)$$  
data$$  $
)$$$ %
;$$% &
}%% 	
}&& 
private(( 
double(( 

Bad_source(( 
((( 
)(( 
{)) 
double** 
data** 
;** 
if++ 

(++ 

badPrivate++ 
)++ 
{,, 	
data.. 
=.. 
IO.. 
... 
GetRandomDouble.. %
(..% &
)..& '
;..' (
}// 	
else00 
{11 	
data44 
=44 
$num44 
;44 
}55 	
return66 
data66 
;66 
}77 
private:: 
bool:: 
goodG2B1_private:: !
=::" #
false::$ )
;::) *
private;; 
bool;; 
GoodG2B2_private;; !
=;;" #
false;;$ )
;;;) *
public== 

override== 
void== 
Good== 
(== 
)== 
{>> 
GoodG2B1?? 
(?? 
)?? 
;?? 
GoodG2B2@@ 
(@@ 
)@@ 
;@@ 
}AA 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
)DD 
{EE 
doubleFF 
dataFF 
;FF 
goodG2B1_privateGG 
=GG 
falseGG  
;GG  !
dataHH 
=HH 
GoodG2B1_sourceHH 
(HH 
)HH  
;HH  !
{II 	
IOKK 
.KK 
	WriteLineKK 
(KK 
(KK 
floatKK 
)KK  
dataKK  $
)KK$ %
;KK% &
}LL 	
}MM 
privateOO 
doubleOO 
GoodG2B1_sourceOO "
(OO" #
)OO# $
{PP 
doubleQQ 
dataQQ 
=QQ 
$numQQ 
;QQ 
ifRR 

(RR 
goodG2B1_privateRR 
)RR 
{SS 	
dataVV 
=VV 
$numVV 
;VV 
}WW 	
elseXX 
{YY 	
data[[ 
=[[ 
$num[[ 
;[[ 
}\\ 	
return]] 
data]] 
;]] 
}^^ 
privateaa 
voidaa 
GoodG2B2aa 
(aa 
)aa 
{bb 
doublecc 
datacc 
;cc 
GoodG2B2_privatedd 
=dd 
truedd 
;dd  
dataee 
=ee 
GoodG2B2_sourceee 
(ee 
)ee  
;ee  !
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
(hh 
floathh 
)hh  
datahh  $
)hh$ %
;hh% &
}ii 	
}jj 
privatell 
doublell 
GoodG2B2_sourcell "
(ll" #
)ll# $
{mm 
doublenn 
datann 
=nn 
$numnn 
;nn 
ifoo 

(oo 
GoodG2B2_privateoo 
)oo 
{pp 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
returnzz 
datazz 
;zz 
}{{ 
}}} 
}~~ Ø
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_22a A
:B C
AbstractTestCaseD T
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! G
;CWE197_Numeric_Truncation_Error__double_random_to_float_22b!! J
.!!J K
	BadSource!!K T
(!!T U
)!!U V
;!!V W
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
float$$ 
)$$  
data$$  $
)$$$ %
;$$% &
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
double66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 G
;CWE197_Numeric_Truncation_Error__double_random_to_float_22b88 J
.88J K
GoodG2B1Source88K Y
(88Y Z
)88Z [
;88[ \
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
float;; 
);;  
data;;  $
);;$ %
;;;% &
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
doubleBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD G
;CWE197_Numeric_Truncation_Error__double_random_to_float_22bDD J
.DDJ K
GoodG2B2SourceDDK Y
(DDY Z
)DDZ [
;DD[ \
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
floatGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
}KK 
}LL ›
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_22b A
{ 
public 

static 
double 
	BadSource "
(" #
)# $
{ 
double 
data 
; 
if 

( G
;CWE197_Numeric_Truncation_Error__double_random_to_float_22a G
.G H
badPublicStaticH W
)W X
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
return(( 
data(( 
;(( 
})) 
public.. 

static.. 
double.. 
GoodG2B1Source.. '
(..' (
)..( )
{// 
double00 
data00 
;00 
if11 

(11 G
;CWE197_Numeric_Truncation_Error__double_random_to_float_22a11 G
.11G H 
goodG2B1PublicStatic11H \
)11\ ]
{22 	
data55 
=55 
$num55 
;55 
}66 	
else77 
{88 	
data:: 
=:: 
$num:: 
;:: 
};; 	
return<< 
data<< 
;<< 
}== 
public@@ 

static@@ 
double@@ 
GoodG2B2Source@@ '
(@@' (
)@@( )
{AA 
doubleBB 
dataBB 
;BB 
ifCC 

(CC G
;CWE197_Numeric_Truncation_Error__double_random_to_float_22aCC G
.CCG H 
GoodG2B2PublicStaticCCH \
)CC\ ]
{DD 	
dataFF 
=FF 
$numFF 
;FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
returnNN 
dataNN 
;NN 
}OO 
}QQ 
}RR ó
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_float_31 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
dataCopy 
; 
{ 	
double 
data 
; 
data!! 
=!! 
IO!! 
.!! 
GetRandomDouble!! %
(!!% &
)!!& '
;!!' (
dataCopy"" 
="" 
data"" 
;"" 
}## 	
{$$ 	
double%% 
data%% 
=%% 
dataCopy%% "
;%%" #
{&& 
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
float(( #
)((# $
data(($ (
)((( )
;(() *
})) 
}** 	
}++ 
public.. 

override.. 
void.. 
Good.. 
(.. 
).. 
{// 
GoodG2B00 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B44 
(44 
)44 
{55 
double66 
dataCopy66 
;66 
{77 	
double88 
data88 
;88 
data:: 
=:: 
$num:: 
;:: 
dataCopy;; 
=;; 
data;; 
;;; 
}<< 	
{== 	
double>> 
data>> 
=>> 
dataCopy>> "
;>>" #
{?? 
IOAA 
.AA 
	WriteLineAA 
(AA 
(AA 
floatAA #
)AA# $
dataAA$ (
)AA( )
;AA) *
}BB 
}CC 	
}DD 
}FF 
}GG ï
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_float_41 @
:A B
AbstractTestCaseC S
{ 
private 
static 
void 
BadSink 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
} 	
} 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
double## 
data## 
;## 
data%% 
=%% 
IO%% 
.%% 
GetRandomDouble%% !
(%%! "
)%%" #
;%%# $
BadSink&& 
(&& 
data&& 
)&& 
;&& 
}'' 
public** 

override** 
void** 
Good** 
(** 
)** 
{++ 
GoodG2B,, 
(,, 
),, 
;,, 
}-- 
private// 
static// 
void// 
GoodG2BSink// #
(//# $
double//$ *
data//+ /
)//0 1
{00 
{11 	
IO33 
.33 
	WriteLine33 
(33 
(33 
float33 
)33  
data33  $
)33$ %
;33% &
}44 	
}55 
private88 
static88 
void88 
GoodG2B88 
(88  
)88  !
{99 
double:: 
data:: 
;:: 
data<< 
=<< 
$num<< 
;<< 
GoodG2BSink== 
(== 
data== 
)== 
;== 
}>> 
}@@ 
}AA Ö
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_float_42 @
:A B
AbstractTestCaseC S
{ 
private 
static 
double 
	BadSource #
(# $
)$ %
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
return 
data 
; 
} 
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
double$$ 
data$$ 
=$$ 
	BadSource$$ 
($$  
)$$  !
;$$! "
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
float'' 
)''  
data''  $
)''$ %
;''% &
}(( 	
})) 
private,, 
static,, 
double,, 
GoodG2BSource,, '
(,,' (
),,( )
{-- 
double.. 
data.. 
;.. 
data00 
=00 
$num00 
;00 
return11 
data11 
;11 
}22 
private55 
static55 
void55 
GoodG2B55 
(55  
)55  !
{66 
double77 
data77 
=77 
GoodG2BSource77 #
(77# $
)77$ %
;77% &
{88 	
IO:: 
.:: 
	WriteLine:: 
(:: 
(:: 
float:: 
)::  
data::  $
)::$ %
;::% &
};; 	
}<< 
public>> 

override>> 
void>> 
Good>> 
(>> 
)>> 
{?? 
GoodG2B@@ 
(@@ 
)@@ 
;@@ 
}AA 
}CC 
}DD À
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_float_45 @
:A B
AbstractTestCaseC S
{ 
private 
double 
dataBad 
; 
private 
double 
dataGoodG2B 
; 
private 
void 
BadSink 
( 
) 
{ 
double 
data 
= 
dataBad 
; 
{   	
IO"" 
."" 
	WriteLine"" 
("" 
("" 
float"" 
)""  
data""  $
)""$ %
;""% &
}## 	
}$$ 
public'' 

override'' 
void'' 
Bad'' 
('' 
)'' 
{(( 
double)) 
data)) 
;)) 
data++ 
=++ 
IO++ 
.++ 
GetRandomDouble++ !
(++! "
)++" #
;++# $
dataBad,, 
=,, 
data,, 
;,, 
BadSink-- 
(-- 
)-- 
;-- 
}.. 
public11 

override11 
void11 
Good11 
(11 
)11 
{22 
GoodG2B33 
(33 
)33 
;33 
}44 
private66 
void66 
GoodG2BSink66 
(66 
)66 
{77 
double88 
data88 
=88 
dataGoodG2B88 !
;88! "
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
float;; 
);;  
data;;  $
);;$ %
;;;% &
}<< 	
}== 
private@@ 
void@@ 
GoodG2B@@ 
(@@ 
)@@ 
{AA 
doubleBB 
dataBB 
;BB 
dataDD 
=DD 
$numDD 
;DD 
dataGoodG2BEE 
=EE 
dataEE 
;EE 
GoodG2BSinkFF 
(FF 
)FF 
;FF 
}GG 
}II 
}JJ √
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_51a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $G
;CWE197_Numeric_Truncation_Error__double_random_to_float_51b C
.C D
BadSinkD K
(K L
dataL P
)R S
;S T
} 
public"" 

override"" 
void"" 
Good"" 
("" 
)"" 
{## 
GoodG2B$$ 
($$ 
)$$ 
;$$ 
}%% 
private(( 
void(( 
GoodG2B(( 
((( 
)(( 
{)) 
double** 
data** 
;** 
data,, 
=,, 
$num,, 
;,, G
;CWE197_Numeric_Truncation_Error__double_random_to_float_51b-- C
.--C D
GoodG2BSink--D O
(--O P
data--P T
)--V W
;--W X
}.. 
}00 
}11 •	
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_51b A
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
double### )
data##* .
)##/ 0
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
float'' 
)''  
data''  $
)''$ %
;''% &
}(( 	
})) 
}++ 
},, √
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_52a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $G
;CWE197_Numeric_Truncation_Error__double_random_to_float_52b C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
double++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- G
;CWE197_Numeric_Truncation_Error__double_random_to_float_52b.. C
...C D
GoodG2BSink..D O
(..O P
data..P T
)..U V
;..V W
}// 
}11 
}22 ˘
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_52b A
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ G
;CWE197_Numeric_Truncation_Error__double_random_to_float_52c C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" G
;CWE197_Numeric_Truncation_Error__double_random_to_float_52c## C
.##C D
GoodG2BSink##D O
(##O P
data##P T
)##U V
;##V W
}$$ 
}&& 
}'' •	
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_52c A
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
float(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- √
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_53a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $G
;CWE197_Numeric_Truncation_Error__double_random_to_float_53b C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
double++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- G
;CWE197_Numeric_Truncation_Error__double_random_to_float_53b.. C
...C D
GoodG2BSink..D O
(..O P
data..P T
)..U V
;..V W
}// 
}11 
}22 ˘
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_53b A
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ G
;CWE197_Numeric_Truncation_Error__double_random_to_float_53c C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" G
;CWE197_Numeric_Truncation_Error__double_random_to_float_53c## C
.##C D
GoodG2BSink##D O
(##O P
data##P T
)##U V
;##V W
}$$ 
}&& 
}'' ˘
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_53c A
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ G
;CWE197_Numeric_Truncation_Error__double_random_to_float_53d C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" G
;CWE197_Numeric_Truncation_Error__double_random_to_float_53d## C
.##C D
GoodG2BSink##D O
(##O P
data##P T
)##U V
;##V W
}$$ 
}&& 
}'' •	
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_53d A
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
float(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- √
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_54a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $G
;CWE197_Numeric_Truncation_Error__double_random_to_float_54b C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
double++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- G
;CWE197_Numeric_Truncation_Error__double_random_to_float_54b.. C
...C D
GoodG2BSink..D O
(..O P
data..P T
)..U V
;..V W
}// 
}11 
}22 ˘
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_54b A
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ G
;CWE197_Numeric_Truncation_Error__double_random_to_float_54c C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" G
;CWE197_Numeric_Truncation_Error__double_random_to_float_54c## C
.##C D
GoodG2BSink##D O
(##O P
data##P T
)##U V
;##V W
}$$ 
}&& 
}'' ˘
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_54c A
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ G
;CWE197_Numeric_Truncation_Error__double_random_to_float_54d C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" G
;CWE197_Numeric_Truncation_Error__double_random_to_float_54d## C
.##C D
GoodG2BSink##D O
(##O P
data##P T
)##U V
;##V W
}$$ 
}&& 
}'' ˘
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_54d A
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ G
;CWE197_Numeric_Truncation_Error__double_random_to_float_54e C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" G
;CWE197_Numeric_Truncation_Error__double_random_to_float_54e## C
.##C D
GoodG2BSink##D O
(##O P
data##P T
)##U V
;##V W
}$$ 
}&& 
}'' •	
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_54e A
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
float(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- Û
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_61a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
= G
;CWE197_Numeric_Truncation_Error__double_random_to_float_61b Q
.Q R
	BadSourceR [
([ \
)\ ]
;] ^
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
double++ 
data++ 
=++ G
;CWE197_Numeric_Truncation_Error__double_random_to_float_61b++ Q
.++Q R
GoodG2BSource++R _
(++_ `
)++` a
;++a b
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
float.. 
)..  
data..  $
)..$ %
;..% &
}// 	
}00 
}22 
}33 ˘
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_61b A
{ 
public 

static 
double 
	BadSource "
(" #
)# $
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
return 
data 
; 
}   
public%% 

static%% 
double%% 
GoodG2BSource%% &
(%%& '
)%%' (
{&& 
double'' 
data'' 
;'' 
data)) 
=)) 
$num)) 
;)) 
return** 
data** 
;** 
}++ 
}-- 
}.. «
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_66a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
double 
[ 
] 
	dataArray 
= 
new  
double! '
[' (
$num( )
]) *
;* +
	dataArray   
[   
$num   
]   
=   
data   
;   G
;CWE197_Numeric_Truncation_Error__double_random_to_float_66b!! C
.!!C D
BadSink!!D K
(!!K L
	dataArray!!L U
)!!W X
;!!X Y
}"" 
public%% 

override%% 
void%% 
Good%% 
(%% 
)%% 
{&& 
GoodG2B'' 
('' 
)'' 
;'' 
}(( 
private++ 
static++ 
void++ 
GoodG2B++ 
(++  
)++  !
{,, 
double-- 
data-- 
;-- 
data// 
=// 
$num// 
;// 
double00 
[00 
]00 
	dataArray00 
=00 
new00  
double00! '
[00' (
$num00( )
]00) *
;00* +
	dataArray11 
[11 
$num11 
]11 
=11 
data11 
;11 G
;CWE197_Numeric_Truncation_Error__double_random_to_float_66b22 C
.22C D
GoodG2BSink22D O
(22O P
	dataArray22P Y
)22[ \
;22\ ]
}33 
}55 
}66 Å
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_66b A
{ 
public 

static 
void 
BadSink 
( 
double %
[% &
]& '
	dataArray( 1
)2 3
{ 
double 
data 
= 
	dataArray 
[  
$num  !
]! "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
double%%# )
[%%) *
]%%* +
	dataArray%%, 5
)%%6 7
{&& 
double'' 
data'' 
='' 
	dataArray'' 
[''  
$num''  !
]''! "
;''" #
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
float** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
}.. 
}// ™
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_67a A
:B C
AbstractTestCaseD T
{ 
public 

class 
	Container 
{ 
public 
double 
containerOne "
;" #
} 
public 

override 
void 
Bad 
( 
) 
{   
double!! 
data!! 
;!! 
data## 
=## 
IO## 
.## 
GetRandomDouble## !
(##! "
)##" #
;### $
	Container$$ 
dataContainer$$ 
=$$  !
new$$" %
	Container$$& /
($$/ 0
)$$0 1
;$$1 2
dataContainer%% 
.%% 
containerOne%% "
=%%# $
data%%% )
;%%) *G
;CWE197_Numeric_Truncation_Error__double_random_to_float_67b&& C
.&&C D
BadSink&&D K
(&&K L
dataContainer&&L Y
)&&[ \
;&&\ ]
}'' 
public** 

override** 
void** 
Good** 
(** 
)** 
{++ 
GoodG2B,, 
(,, 
),, 
;,, 
}-- 
private00 
static00 
void00 
GoodG2B00 
(00  
)00  !
{11 
double22 
data22 
;22 
data44 
=44 
$num44 
;44 
	Container55 
dataContainer55 
=55  !
new55" %
	Container55& /
(55/ 0
)550 1
;551 2
dataContainer66 
.66 
containerOne66 "
=66# $
data66% )
;66) *G
;CWE197_Numeric_Truncation_Error__double_random_to_float_67b77 C
.77C D
GoodG2BSink77D O
(77O P
dataContainer77P ]
)77_ `
;77` a
}88 
}:: 
};; ˝
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_67b A
{ 
public 

static 
void 
BadSink 
( G
;CWE197_Numeric_Truncation_Error__double_random_to_float_67a Z
.Z [
	Container[ d
dataContainere r
)s t
{ 
double 
data 
= 
dataContainer #
.# $
containerOne$ 0
;0 1
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #G
;CWE197_Numeric_Truncation_Error__double_random_to_float_67a%%# ^
.%%^ _
	Container%%_ h
dataContainer%%i v
)%%w x
{&& 
double'' 
data'' 
='' 
dataContainer'' #
.''# $
containerOne''$ 0
;''0 1
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
float** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
}.. 
}// ¶
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_68a A
:B C
AbstractTestCaseD T
{ 
public 

static 
double 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $G
;CWE197_Numeric_Truncation_Error__double_random_to_float_68b C
.C D
BadSinkD K
(K L
)L M
;M N
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
data,, 
=,, 
$num,, 
;,, G
;CWE197_Numeric_Truncation_Error__double_random_to_float_68b-- C
.--C D
GoodG2BSink--D O
(--O P
)--P Q
;--Q R
}.. 
}00 
}11 µ
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_68b A
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
double 
data 
= G
;CWE197_Numeric_Truncation_Error__double_random_to_float_68a Q
.Q R
dataR V
;V W
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
double&& 
data&& 
=&& G
;CWE197_Numeric_Truncation_Error__double_random_to_float_68a&& Q
.&&Q R
data&&R V
;&&V W
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
float)) 
)))  
data))  $
)))$ %
;))% &
}** 	
}++ 
}-- 
}.. ª
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_71a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $G
;CWE197_Numeric_Truncation_Error__double_random_to_float_71b C
.C D
BadSinkD K
(K L
(L M
ObjectM S
)S T
dataT X
)Z [
;[ \
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
double++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- G
;CWE197_Numeric_Truncation_Error__double_random_to_float_71b.. C
...C D
GoodG2BSink..D O
(..O P
(..P Q
Object..Q W
)..W X
data..X \
)..^ _
;.._ `
}// 
}11 
}22 Õ
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_71b A
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
double 
data 
= 
( 
double 
) 

dataObject (
;( )
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
double(( 
data(( 
=(( 
((( 
double(( 
)(( 

dataObject(( (
;((( )
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
float++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 €
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_72a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
	Hashtable 
dataHashtable 
=  !
new" %
	Hashtable& /
(/ 0
$num0 1
)1 2
;2 3
dataHashtable   
.   
Add   
(   
$num   
,   
data   !
)  ! "
;  " #
dataHashtable!! 
.!! 
Add!! 
(!! 
$num!! 
,!! 
data!! !
)!!! "
;!!" #
dataHashtable"" 
."" 
Add"" 
("" 
$num"" 
,"" 
data"" !
)""! "
;""" #G
;CWE197_Numeric_Truncation_Error__double_random_to_float_72b## C
.##C D
BadSink##D K
(##K L
dataHashtable##L Y
)##[ \
;##\ ]
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
)'' 
{(( 
GoodG2B)) 
()) 
))) 
;)) 
}** 
private-- 
static-- 
void-- 
GoodG2B-- 
(--  
)--  !
{.. 
double// 
data// 
;// 
data11 
=11 
$num11 
;11 
	Hashtable22 
dataHashtable22 
=22  !
new22" %
	Hashtable22& /
(22/ 0
$num220 1
)221 2
;222 3
dataHashtable33 
.33 
Add33 
(33 
$num33 
,33 
data33 !
)33! "
;33" #
dataHashtable44 
.44 
Add44 
(44 
$num44 
,44 
data44 !
)44! "
;44" #
dataHashtable55 
.55 
Add55 
(55 
$num55 
,55 
data55 !
)55! "
;55" #G
;CWE197_Numeric_Truncation_Error__double_random_to_float_72b66 C
.66C D
GoodG2BSink66D O
(66O P
dataHashtable66P ]
)66_ `
;66` a
}77 
}99 
}:: ø
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_72b A
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
double 
data 
= 
( 
double 
) 
dataHashtable ,
[, -
$num- .
]. /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
double(( 
data(( 
=(( 
((( 
double(( 
)(( 
dataHashtable(( ,
[((, -
$num((- .
]((. /
;((/ 0
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
float++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ﬂ
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_73a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $

LinkedList   
<   
double   
>   
dataLinkedList   )
=  * +
new  , /

LinkedList  0 :
<  : ;
double  ; A
>  A B
(  B C
)  C D
;  D E
dataLinkedList!! 
.!! 
AddLast!! 
(!! 
data!! #
)!!# $
;!!$ %
dataLinkedList"" 
."" 
AddLast"" 
("" 
data"" #
)""# $
;""$ %
dataLinkedList## 
.## 
AddLast## 
(## 
data## #
)### $
;##$ %G
;CWE197_Numeric_Truncation_Error__double_random_to_float_73b$$ C
.$$C D
BadSink$$D K
($$K L
dataLinkedList$$L Z
)$$\ ]
;$$] ^
}%% 
public(( 

override(( 
void(( 
Good(( 
((( 
)(( 
{)) 
GoodG2B** 
(** 
)** 
;** 
}++ 
private.. 
static.. 
void.. 
GoodG2B.. 
(..  
)..  !
{// 
double00 
data00 
;00 
data22 
=22 
$num22 
;22 

LinkedList33 
<33 
double33 
>33 
dataLinkedList33 )
=33* +
new33, /

LinkedList330 :
<33: ;
double33; A
>33A B
(33B C
)33C D
;33D E
dataLinkedList44 
.44 
AddLast44 
(44 
data44 #
)44# $
;44$ %
dataLinkedList55 
.55 
AddLast55 
(55 
data55 #
)55# $
;55$ %
dataLinkedList66 
.66 
AddLast66 
(66 
data66 #
)66# $
;66$ %G
;CWE197_Numeric_Truncation_Error__double_random_to_float_73b77 C
.77C D
GoodG2BSink77D O
(77O P
dataLinkedList77P ^
)77` a
;77a b
}88 
}:: 
};; Î
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_73b A
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
double* 0
>0 1
dataLinkedList2 @
)A B
{ 
double 
data 
= 
dataLinkedList $
.$ %
Last% )
.) *
Value* /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
double&&. 4
>&&4 5
dataLinkedList&&6 D
)&&E F
{'' 
double(( 
data(( 
=(( 
dataLinkedList(( $
.(($ %
Last((% )
.(() *
Value((* /
;((/ 0
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
float++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ç
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_74a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $

Dictionary 
< 
int 
, 
double 
> 
dataDictionary -
=. /
new0 3

Dictionary4 >
<> ?
int? B
,B C
doubleC I
>I J
(J K
)K L
;L M
dataDictionary   
.   
Add   
(   
$num   
,   
data   "
)  " #
;  # $
dataDictionary!! 
.!! 
Add!! 
(!! 
$num!! 
,!! 
data!! "
)!!" #
;!!# $
dataDictionary"" 
."" 
Add"" 
("" 
$num"" 
,"" 
data"" "
)""" #
;""# $G
;CWE197_Numeric_Truncation_Error__double_random_to_float_74b## C
.##C D
BadSink##D K
(##K L
dataDictionary##L Z
)##\ ]
;##] ^
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
)'' 
{(( 
GoodG2B)) 
()) 
))) 
;)) 
}** 
private-- 
static-- 
void-- 
GoodG2B-- 
(--  
)--  !
{.. 
double// 
data// 
;// 
data11 
=11 
$num11 
;11 

Dictionary22 
<22 
int22 
,22 
double22 
>22 
dataDictionary22 -
=22. /
new220 3

Dictionary224 >
<22> ?
int22? B
,22B C
double22C I
>22I J
(22J K
)22K L
;22L M
dataDictionary33 
.33 
Add33 
(33 
$num33 
,33 
data33 "
)33" #
;33# $
dataDictionary44 
.44 
Add44 
(44 
$num44 
,44 
data44 "
)44" #
;44# $
dataDictionary55 
.55 
Add55 
(55 
$num55 
,55 
data55 "
)55" #
;55# $G
;CWE197_Numeric_Truncation_Error__double_random_to_float_74b66 C
.66C D
GoodG2BSink66D O
(66O P
dataDictionary66P ^
)66` a
;66a b
}77 
}99 
}:: Ö
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_74b A
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
double. 4
>4 5
dataDictionary6 D
)E F
{ 
double 
data 
= 
dataDictionary $
[$ %
$num% &
]& '
;' (
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
double&&2 8
>&&8 9
dataDictionary&&: H
)&&I J
{'' 
double(( 
data(( 
=(( 
dataDictionary(( $
[(($ %
$num((% &
]((& '
;((' (
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
float++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 © 
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_75a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
IO   
.   
GetRandomDouble   !
(  ! "
)  " #
;  # $
byte"" 
["" 
]"" 
dataSerialized"" 
="" 
null""  $
;""$ %
try## 
{$$ 	
BinaryFormatter%% 
bf%% 
=%%  
new%%! $
BinaryFormatter%%% 4
(%%4 5
)%%5 6
;%%6 7
using&& 
(&& 
var&& 
ms&& 
=&& 
new&& 
MemoryStream&&  ,
(&&, -
)&&- .
)&&. /
{'' 
bf(( 
.(( 
	Serialize(( 
((( 
ms(( 
,((  
data((! %
)((% &
;((& '
dataSerialized)) 
=))  
ms))! #
.))# $
ToArray))$ +
())+ ,
))), -
;))- .
}** G
;CWE197_Numeric_Truncation_Error__double_random_to_float_75b++ G
.++G H
BadSink++H O
(++O P
dataSerialized++P ^
)++` a
;++a b
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. X
,//X Y
exceptSerialize//Z i
)//i j
;//j k
}00 	
}11 
public44 

override44 
void44 
Good44 
(44 
)44 
{55 
GoodG2B66 
(66 
)66 
;66 
}77 
private:: 
static:: 
void:: 
GoodG2B:: 
(::  
)::  !
{;; 
double<< 
data<< 
;<< 
data>> 
=>> 
$num>> 
;>> 
byte@@ 
[@@ 
]@@ 
dataSerialized@@ 
=@@ 
null@@  $
;@@$ %
tryAA 
{BB 	
BinaryFormatterCC 
bfCC 
=CC  
newCC! $
BinaryFormatterCC% 4
(CC4 5
)CC5 6
;CC6 7
usingDD 
(DD 
varDD 
msDD 
=DD 
newDD 
MemoryStreamDD  ,
(DD, -
)DD- .
)DD. /
{EE 
bfFF 
.FF 
	SerializeFF 
(FF 
msFF 
,FF  
dataFF! %
)FF% &
;FF& '
dataSerializedGG 
=GG  
msGG! #
.GG# $
ToArrayGG$ +
(GG+ ,
)GG, -
;GG- .
}HH G
;CWE197_Numeric_Truncation_Error__double_random_to_float_75bII G
.IIG H
GoodG2BSinkIIH S
(IIS T
dataSerializedIIT b
)IId e
;IIe f
}JJ 	
catchKK 
(KK "
SerializationExceptionKK %
exceptSerializeKK& 5
)KK5 6
{LL 	
IOMM 
.MM 
LoggerMM 
.MM 
LogMM 
(MM 
NLogMM 
.MM 
LogLevelMM '
.MM' (
WarnMM( ,
,MM, -
$strMM. X
,MMX Y
exceptSerializeMMZ i
)MMi j
;MMj k
}NN 	
}OO 
}QQ 
}RR Î!
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_75b A
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
double   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
double&& 
)&& 
binForm&& &
.&&& '
Deserialize&&' 2
(&&2 3
	memStream&&3 <
)&&< =
;&&= >
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
float** #
)**# $
data**$ (
)**( )
;**) *
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
double:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
double@@ 
)@@ 
binForm@@ &
.@@& '
Deserialize@@' 2
(@@2 3
	memStream@@3 <
)@@< =
;@@= >
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
floatDD #
)DD# $
dataDD$ (
)DD( )
;DD) *
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN È
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_float_81a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $K
?CWE197_Numeric_Truncation_Error__double_random_to_float_81_base G

baseObjectH R
=S T
newU XK
>CWE197_Numeric_Truncation_Error__double_random_to_float_81_bad	Y ó
(
ó ò
)
ò ô
;
ô ö

baseObject   
.   
Action   
(   
data   
)    
;    !
}!! 
public$$ 

override$$ 
void$$ 
Good$$ 
($$ 
)$$ 
{%% 
GoodG2B&& 
(&& 
)&& 
;&& 
}'' 
private** 
void** 
GoodG2B** 
(** 
)** 
{++ 
double,, 
data,, 
;,, 
data.. 
=.. 
$num.. 
;.. K
?CWE197_Numeric_Truncation_Error__double_random_to_float_81_base// G

baseObject//H R
=//S T
new//U XO
BCWE197_Numeric_Truncation_Error__double_random_to_float_81_goodG2B	//Y õ
(
//õ ú
)
//ú ù
;
//ù û

baseObject00 
.00 
Action00 
(00 
data00 
)00  
;00  !
}11 
}33 
}44 ê
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_random_to_float_81_bad D
:E FL
?CWE197_Numeric_Truncation_Error__double_random_to_float_81_base	G Ü
{ 
public 

override 
void 
Action 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
} 	
}   
}!! 
}"" ¯
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 K
?CWE197_Numeric_Truncation_Error__double_random_to_float_81_base N
{ 
public 

abstract 
void 
Action 
(  
double  &
data' +
), -
;- .
} 
} ò
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_float_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class N
BCWE197_Numeric_Truncation_Error__double_random_to_float_81_goodG2B H
:I JL
?CWE197_Numeric_Truncation_Error__double_random_to_float_81_base	K ä
{ 
public 

override 
void 
Action 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
float 
)  
data  $
)$ %
;% &
} 	
}   
}!! 
}"" Â
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__double_random_to_int_01 >
:? @
AbstractTestCaseA Q
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
{ 	
IO!! 
.!! 
	WriteLine!! 
(!! 
(!! 
int!! 
)!! 
data!! "
)!!" #
;!!# $
}"" 	
}## 
public&& 

override&& 
void&& 
Good&& 
(&& 
)&& 
{'' 
GoodG2B(( 
((( 
)(( 
;(( 
})) 
private,, 
void,, 
GoodG2B,, 
(,, 
),, 
{-- 
double.. 
data.. 
;.. 
data00 
=00 
$num00 
;00 
{11 	
IO33 
.33 
	WriteLine33 
(33 
(33 
int33 
)33 
data33 "
)33" #
;33# $
}44 	
}55 
}77 
}88 Õ
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__double_random_to_int_02 >
:? @
AbstractTestCaseA Q
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
true 
) 
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
int** 
)** 
data** "
)**" #
;**# $
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
false33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
int@@ 
)@@ 
data@@ "
)@@" #
;@@# $
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
trueHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
intUU 
)UU 
dataUU "
)UU" #
;UU# $
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ≤
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__double_random_to_int_03 >
:? @
AbstractTestCaseA Q
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
$num 
== 
$num 
) 
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
int** 
)** 
data** "
)**" #
;**# $
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
$num33 
!=33 
$num33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
int@@ 
)@@ 
data@@ "
)@@" #
;@@# $
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
$numHH 
==HH 
$numHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
intUU 
)UU 
dataUU "
)UU" #
;UU# $
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ç
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__double_random_to_int_04 >
:? @
AbstractTestCaseA Q
{ 
private 
const 
bool 
PRIVATE_CONST_TRUE )
=* +
true, 0
;0 1
private 
const 
bool 
PRIVATE_CONST_FALSE *
=+ ,
false- 2
;2 3
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
double## 
data## 
;## 
if$$ 

($$ 
PRIVATE_CONST_TRUE$$ 
)$$ 
{%% 	
data'' 
='' 
IO'' 
.'' 
GetRandomDouble'' %
(''% &
)''& '
;''' (
}(( 	
else)) 
{** 	
data-- 
=-- 
$num-- 
;-- 
}.. 	
{// 	
IO11 
.11 
	WriteLine11 
(11 
(11 
int11 
)11 
data11 "
)11" #
;11# $
}22 	
}33 
private77 
void77 
GoodG2B177 
(77 
)77 
{88 
double99 
data99 
;99 
if:: 

(:: 
PRIVATE_CONST_FALSE:: 
)::  
{;; 	
data>> 
=>> 
$num>> 
;>> 
}?? 	
else@@ 
{AA 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
intGG 
)GG 
dataGG "
)GG" #
;GG# $
}HH 	
}II 
privateLL 
voidLL 
GoodG2B2LL 
(LL 
)LL 
{MM 
doubleNN 
dataNN 
;NN 
ifOO 

(OO 
PRIVATE_CONST_TRUEOO 
)OO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
elseTT 
{UU 	
dataXX 
=XX 
$numXX 
;XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
int\\ 
)\\ 
data\\ "
)\\" #
;\\# $
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2B1bb 
(bb 
)bb 
;bb 
GoodG2B2cc 
(cc 
)cc 
;cc 
}dd 
}ff 
}gg ƒ
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__double_random_to_int_05 >
:? @
AbstractTestCaseA Q
{ 
private 
bool 
privateTrue 
= 
true #
;# $
private 
bool 
privateFalse 
= 
false  %
;% &
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
double## 
data## 
;## 
if$$ 

($$ 
privateTrue$$ 
)$$ 
{%% 	
data'' 
='' 
IO'' 
.'' 
GetRandomDouble'' %
(''% &
)''& '
;''' (
}(( 	
else)) 
{** 	
data-- 
=-- 
$num-- 
;-- 
}.. 	
{// 	
IO11 
.11 
	WriteLine11 
(11 
(11 
int11 
)11 
data11 "
)11" #
;11# $
}22 	
}33 
private77 
void77 
GoodG2B177 
(77 
)77 
{88 
double99 
data99 
;99 
if:: 

(:: 
privateFalse:: 
):: 
{;; 	
data>> 
=>> 
$num>> 
;>> 
}?? 	
else@@ 
{AA 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
intGG 
)GG 
dataGG "
)GG" #
;GG# $
}HH 	
}II 
privateLL 
voidLL 
GoodG2B2LL 
(LL 
)LL 
{MM 
doubleNN 
dataNN 
;NN 
ifOO 

(OO 
privateTrueOO 
)OO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
elseTT 
{UU 	
dataXX 
=XX 
$numXX 
;XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
int\\ 
)\\ 
data\\ "
)\\" #
;\\# $
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2B1bb 
(bb 
)bb 
;bb 
GoodG2B2cc 
(cc 
)cc 
;cc 
}dd 
}ff 
}gg Â
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__double_random_to_int_06 >
:? @
AbstractTestCaseA Q
{ 
private 
const 
int 
PRIVATE_CONST_FIVE (
=) *
$num+ ,
;, -
public   

override   
void   
Bad   
(   
)   
{!! 
double"" 
data"" 
;"" 
if## 

(## 
PRIVATE_CONST_FIVE## 
==## !
$num##" #
)### $
{$$ 	
data&& 
=&& 
IO&& 
.&& 
GetRandomDouble&& %
(&&% &
)&&& '
;&&' (
}'' 	
else(( 
{)) 	
data,, 
=,, 
$num,, 
;,, 
}-- 	
{.. 	
IO00 
.00 
	WriteLine00 
(00 
(00 
int00 
)00 
data00 "
)00" #
;00# $
}11 	
}22 
private66 
void66 
GoodG2B166 
(66 
)66 
{77 
double88 
data88 
;88 
if99 

(99 
PRIVATE_CONST_FIVE99 
!=99 !
$num99" #
)99# $
{:: 	
data== 
=== 
$num== 
;== 
}>> 	
else?? 
{@@ 	
dataBB 
=BB 
$numBB 
;BB 
}CC 	
{DD 	
IOFF 
.FF 
	WriteLineFF 
(FF 
(FF 
intFF 
)FF 
dataFF "
)FF" #
;FF# $
}GG 	
}HH 
privateKK 
voidKK 
GoodG2B2KK 
(KK 
)KK 
{LL 
doubleMM 
dataMM 
;MM 
ifNN 

(NN 
PRIVATE_CONST_FIVENN 
==NN !
$numNN" #
)NN# $
{OO 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
elseSS 
{TT 	
dataWW 
=WW 
$numWW 
;WW 
}XX 	
{YY 	
IO[[ 
.[[ 
	WriteLine[[ 
([[ 
([[ 
int[[ 
)[[ 
data[[ "
)[[" #
;[[# $
}\\ 	
}]] 
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2B1aa 
(aa 
)aa 
;aa 
GoodG2B2bb 
(bb 
)bb 
;bb 
}cc 
}ee 
}ff ∂
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__double_random_to_int_07 >
:? @
AbstractTestCaseA Q
{ 
private 
int 
privateFive 
= 
$num 
;  
public   

override   
void   
Bad   
(   
)   
{!! 
double"" 
data"" 
;"" 
if## 

(## 
privateFive## 
==## 
$num## 
)## 
{$$ 	
data&& 
=&& 
IO&& 
.&& 
GetRandomDouble&& %
(&&% &
)&&& '
;&&' (
}'' 	
else(( 
{)) 	
data,, 
=,, 
$num,, 
;,, 
}-- 	
{.. 	
IO00 
.00 
	WriteLine00 
(00 
(00 
int00 
)00 
data00 "
)00" #
;00# $
}11 	
}22 
private66 
void66 
GoodG2B166 
(66 
)66 
{77 
double88 
data88 
;88 
if99 

(99 
privateFive99 
!=99 
$num99 
)99 
{:: 	
data== 
=== 
$num== 
;== 
}>> 	
else?? 
{@@ 	
dataBB 
=BB 
$numBB 
;BB 
}CC 	
{DD 	
IOFF 
.FF 
	WriteLineFF 
(FF 
(FF 
intFF 
)FF 
dataFF "
)FF" #
;FF# $
}GG 	
}HH 
privateKK 
voidKK 
GoodG2B2KK 
(KK 
)KK 
{LL 
doubleMM 
dataMM 
;MM 
ifNN 

(NN 
privateFiveNN 
==NN 
$numNN 
)NN 
{OO 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
elseSS 
{TT 	
dataWW 
=WW 
$numWW 
;WW 
}XX 	
{YY 	
IO[[ 
.[[ 
	WriteLine[[ 
([[ 
([[ 
int[[ 
)[[ 
data[[ "
)[[" #
;[[# $
}\\ 	
}]] 
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2B1aa 
(aa 
)aa 
;aa 
GoodG2B2bb 
(bb 
)bb 
;bb 
}cc 
}ee 
}ff Î
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__double_random_to_int_08 >
:? @
AbstractTestCaseA Q
{ 
private 
static 
bool 
PrivateReturnsTrue *
(* +
)+ ,
{ 
return 
true 
; 
}   
private"" 
static"" 
bool"" 
PrivateReturnsFalse"" +
(""+ ,
)"", -
{## 
return$$ 
false$$ 
;$$ 
}%% 
public(( 

override(( 
void(( 
Bad(( 
((( 
)(( 
{)) 
double** 
data** 
;** 
if++ 

(++ 
PrivateReturnsTrue++ 
(++ 
)++  
)++  !
{,, 	
data.. 
=.. 
IO.. 
... 
GetRandomDouble.. %
(..% &
)..& '
;..' (
}// 	
else00 
{11 	
data44 
=44 
$num44 
;44 
}55 	
{66 	
IO88 
.88 
	WriteLine88 
(88 
(88 
int88 
)88 
data88 "
)88" #
;88# $
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
)>> 
{?? 
double@@ 
data@@ 
;@@ 
ifAA 

(AA 
PrivateReturnsFalseAA 
(AA  
)AA  !
)AA! "
{BB 	
dataEE 
=EE 
$numEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$numJJ 
;JJ 
}KK 	
{LL 	
IONN 
.NN 
	WriteLineNN 
(NN 
(NN 
intNN 
)NN 
dataNN "
)NN" #
;NN# $
}OO 	
}PP 
privateSS 
voidSS 
GoodG2B2SS 
(SS 
)SS 
{TT 
doubleUU 
dataUU 
;UU 
ifVV 

(VV 
PrivateReturnsTrueVV 
(VV 
)VV  
)VV  !
{WW 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data__ 
=__ 
$num__ 
;__ 
}`` 	
{aa 	
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
intcc 
)cc 
datacc "
)cc" #
;cc# $
}dd 	
}ee 
publicgg 

overridegg 
voidgg 
Goodgg 
(gg 
)gg 
{hh 
GoodG2B1ii 
(ii 
)ii 
;ii 
GoodG2B2jj 
(jj 
)jj 
;jj 
}kk 
}mm 
}nn ⁄
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__double_random_to_int_09 >
:? @
AbstractTestCaseA Q
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_TRUE #
)# $
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
int** 
)** 
data** "
)**" #
;**# $
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33 !
STATIC_READONLY_FALSE33 $
)33$ %
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
int@@ 
)@@ 
data@@ "
)@@" #
;@@# $
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH  
STATIC_READONLY_TRUEHH #
)HH# $
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
intUU 
)UU 
dataUU "
)UU" #
;UU# $
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` º
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__double_random_to_int_10 >
:? @
AbstractTestCaseA Q
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
. 

staticTrue 
) 
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
int** 
)** 
data** "
)**" #
;**# $
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33 
staticFalse33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
int@@ 
)@@ 
data@@ "
)@@" #
;@@# $
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 

staticTrueHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
intUU 
)UU 
dataUU "
)UU" #
;UU# $
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ´
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__double_random_to_int_11 >
:? @
AbstractTestCaseA Q
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
. 
StaticReturnsTrue  
(  !
)! "
)" #
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
int** 
)** 
data** "
)**" #
;**# $
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33 
StaticReturnsFalse33 !
(33! "
)33" #
)33# $
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
int@@ 
)@@ 
data@@ "
)@@" #
;@@# $
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 
StaticReturnsTrueHH  
(HH  !
)HH! "
)HH" #
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
intUU 
)UU 
dataUU "
)UU" #
;UU# $
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ß
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__double_random_to_int_12 >
:? @
AbstractTestCaseA Q
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
. $
StaticReturnsTrueOrFalse '
(' (
)( )
)) *
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data%% 
=%% 
$num%% 
;%% 
}&& 	
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
int)) 
))) 
data)) "
)))" #
;))# $
}** 	
}++ 
private00 
void00 
GoodG2B00 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33 $
StaticReturnsTrueOrFalse33 '
(33' (
)33( )
)33) *
{44 	
data66 
=66 
$num66 
;66 
}77 	
else88 
{99 	
data;; 
=;; 
$num;; 
;;; 
}<< 	
{== 	
IO?? 
.?? 
	WriteLine?? 
(?? 
(?? 
int?? 
)?? 
data?? "
)??" #
;??# $
}@@ 	
}AA 
publicCC 

overrideCC 
voidCC 
GoodCC 
(CC 
)CC 
{DD 
GoodG2BEE 
(EE 
)EE 
;EE 
}FF 
}HH 
}II ø
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__double_random_to_int_13 >
:? @
AbstractTestCaseA Q
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_FIVE #
==$ &
$num' (
)( )
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
int** 
)** 
data** "
)**" #
;**# $
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33  
STATIC_READONLY_FIVE33 #
!=33$ &
$num33' (
)33( )
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
int@@ 
)@@ 
data@@ "
)@@" #
;@@# $
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH  
STATIC_READONLY_FIVEHH #
==HH$ &
$numHH' (
)HH( )
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
intUU 
)UU 
dataUU "
)UU" #
;UU# $
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` °
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__double_random_to_int_14 >
:? @
AbstractTestCaseA Q
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
. 

staticFive 
== 
$num 
) 
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
int** 
)** 
data** "
)**" #
;**# $
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33 

staticFive33 
!=33 
$num33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
int@@ 
)@@ 
data@@ "
)@@" #
;@@# $
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 

staticFiveHH 
==HH 
$numHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
intUU 
)UU 
dataUU "
)UU" #
;UU# $
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ¸
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__double_random_to_int_15 >
:? @
AbstractTestCaseA Q
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
= 
$num 
; 
switch 
( 
$num 
) 
{ 	
case 
$num 
: 
data!! 
=!! 
IO!! 
.!! 
GetRandomDouble!! %
(!!% &
)!!& '
;!!' (
break"" 
;"" 
default## 
:## 
data&& 
=&& 
$num&& 
;&& 
break'' 
;'' 
}(( 	
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
int++ 
)++ 
data++ "
)++" #
;++# $
},, 	
}-- 
private11 
void11 
GoodG2B111 
(11 
)11 
{22 
double33 
data33 
=33 
$num33 
;33 
switch44 
(44 
$num44 
)44 
{55 	
case66 
$num66 
:66 
data99 
=99 
$num99 
;99 
break:: 
;:: 
default;; 
:;; 
data== 
=== 
$num== 
;== 
break>> 
;>> 
}?? 	
{@@ 	
IOBB 
.BB 
	WriteLineBB 
(BB 
(BB 
intBB 
)BB 
dataBB "
)BB" #
;BB# $
}CC 	
}DD 
privateGG 
voidGG 
GoodG2B2GG 
(GG 
)GG 
{HH 
doubleII 
dataII 
=II 
$numII 
;II 
switchJJ 
(JJ 
$numJJ 
)JJ 
{KK 	
caseLL 
$numLL 
:LL 
dataNN 
=NN 
$numNN 
;NN 
breakOO 
;OO 
defaultPP 
:PP 
dataSS 
=SS 
$numSS 
;SS 
breakTT 
;TT 
}UU 	
{VV 	
IOXX 
.XX 
	WriteLineXX 
(XX 
(XX 
intXX 
)XX 
dataXX "
)XX" #
;XX# $
}YY 	
}ZZ 
public\\ 

override\\ 
void\\ 
Good\\ 
(\\ 
)\\ 
{]] 
GoodG2B1^^ 
(^^ 
)^^ 
;^^ 
GoodG2B2__ 
(__ 
)__ 
;__ 
}`` 
}bb 
}cc Î
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__double_random_to_int_16 >
:? @
AbstractTestCaseA Q
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
while 
( 
true 
) 
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
break!! 
;!! 
}"" 	
{## 	
IO%% 
.%% 
	WriteLine%% 
(%% 
(%% 
int%% 
)%% 
data%% "
)%%" #
;%%# $
}&& 	
}'' 
private++ 
void++ 
GoodG2B++ 
(++ 
)++ 
{,, 
double-- 
data-- 
;-- 
while.. 
(.. 
true.. 
).. 
{// 	
data11 
=11 
$num11 
;11 
break22 
;22 
}33 	
{44 	
IO66 
.66 
	WriteLine66 
(66 
(66 
int66 
)66 
data66 "
)66" #
;66# $
}77 	
}88 
public:: 

override:: 
void:: 
Good:: 
(:: 
):: 
{;; 
GoodG2B<< 
(<< 
)<< 
;<< 
}== 
}?? 
}@@ €
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__double_random_to_int_17 >
:? @
AbstractTestCaseA Q
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
for 
( 
int 
i 
= 
$num 
; 
i 
< 
$num 
; 
i  
++  "
)" #
{   	
{!! 
IO## 
.## 
	WriteLine## 
(## 
(## 
int## !
)##! "
data##" &
)##& '
;##' (
}$$ 
}%% 	
}&& 
private++ 
void++ 
GoodG2B++ 
(++ 
)++ 
{,, 
double-- 
data-- 
;-- 
data// 
=// 
$num// 
;// 
for00 
(00 
int00 
i00 
=00 
$num00 
;00 
i00 
<00 
$num00 
;00 
i00  
++00  "
)00" #
{11 	
{22 
IO44 
.44 
	WriteLine44 
(44 
(44 
int44 !
)44! "
data44" &
)44& '
;44' (
}55 
}66 	
}77 
public99 

override99 
void99 
Good99 
(99 
)99 
{:: 
GoodG2B;; 
(;; 
);; 
;;; 
}<< 
}>> 
}?? Ë"
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__double_random_to_int_21 >
:? @
AbstractTestCaseA Q
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 

badPrivate   
=   
true   
;   
data!! 
=!! 

Bad_source!! 
(!! 
)!! 
;!! 
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
int$$ 
)$$ 
data$$ "
)$$" #
;$$# $
}%% 	
}&& 
private(( 
double(( 

Bad_source(( 
((( 
)(( 
{)) 
double** 
data** 
;** 
if++ 

(++ 

badPrivate++ 
)++ 
{,, 	
data.. 
=.. 
IO.. 
... 
GetRandomDouble.. %
(..% &
)..& '
;..' (
}// 	
else00 
{11 	
data44 
=44 
$num44 
;44 
}55 	
return66 
data66 
;66 
}77 
private:: 
bool:: 
goodG2B1_private:: !
=::" #
false::$ )
;::) *
private;; 
bool;; 
GoodG2B2_private;; !
=;;" #
false;;$ )
;;;) *
public== 

override== 
void== 
Good== 
(== 
)== 
{>> 
GoodG2B1?? 
(?? 
)?? 
;?? 
GoodG2B2@@ 
(@@ 
)@@ 
;@@ 
}AA 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
)DD 
{EE 
doubleFF 
dataFF 
;FF 
goodG2B1_privateGG 
=GG 
falseGG  
;GG  !
dataHH 
=HH 
GoodG2B1_sourceHH 
(HH 
)HH  
;HH  !
{II 	
IOKK 
.KK 
	WriteLineKK 
(KK 
(KK 
intKK 
)KK 
dataKK "
)KK" #
;KK# $
}LL 	
}MM 
privateOO 
doubleOO 
GoodG2B1_sourceOO "
(OO" #
)OO# $
{PP 
doubleQQ 
dataQQ 
=QQ 
$numQQ 
;QQ 
ifRR 

(RR 
goodG2B1_privateRR 
)RR 
{SS 	
dataVV 
=VV 
$numVV 
;VV 
}WW 	
elseXX 
{YY 	
data[[ 
=[[ 
$num[[ 
;[[ 
}\\ 	
return]] 
data]] 
;]] 
}^^ 
privateaa 
voidaa 
GoodG2B2aa 
(aa 
)aa 
{bb 
doublecc 
datacc 
;cc 
GoodG2B2_privatedd 
=dd 
truedd 
;dd  
dataee 
=ee 
GoodG2B2_sourceee 
(ee 
)ee  
;ee  !
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
(hh 
inthh 
)hh 
datahh "
)hh" #
;hh# $
}ii 	
}jj 
privatell 
doublell 
GoodG2B2_sourcell "
(ll" #
)ll# $
{mm 
doublenn 
datann 
=nn 
$numnn 
;nn 
ifoo 

(oo 
GoodG2B2_privateoo 
)oo 
{pp 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
returnzz 
datazz 
;zz 
}{{ 
}}} 
}~~ ü
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_22a ?
:@ A
AbstractTestCaseB R
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! E
9CWE197_Numeric_Truncation_Error__double_random_to_int_22b!! H
.!!H I
	BadSource!!I R
(!!R S
)!!S T
;!!T U
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
int$$ 
)$$ 
data$$ "
)$$" #
;$$# $
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
double66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 E
9CWE197_Numeric_Truncation_Error__double_random_to_int_22b88 H
.88H I
GoodG2B1Source88I W
(88W X
)88X Y
;88Y Z
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
int;; 
);; 
data;; "
);;" #
;;;# $
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
doubleBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD E
9CWE197_Numeric_Truncation_Error__double_random_to_int_22bDD H
.DDH I
GoodG2B2SourceDDI W
(DDW X
)DDX Y
;DDY Z
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
intGG 
)GG 
dataGG "
)GG" #
;GG# $
}HH 	
}II 
}KK 
}LL ”
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_22b ?
{ 
public 

static 
double 
	BadSource "
(" #
)# $
{ 
double 
data 
; 
if 

( E
9CWE197_Numeric_Truncation_Error__double_random_to_int_22a E
.E F
badPublicStaticF U
)U V
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
return(( 
data(( 
;(( 
})) 
public.. 

static.. 
double.. 
GoodG2B1Source.. '
(..' (
)..( )
{// 
double00 
data00 
;00 
if11 

(11 E
9CWE197_Numeric_Truncation_Error__double_random_to_int_22a11 E
.11E F 
goodG2B1PublicStatic11F Z
)11Z [
{22 	
data55 
=55 
$num55 
;55 
}66 	
else77 
{88 	
data:: 
=:: 
$num:: 
;:: 
};; 	
return<< 
data<< 
;<< 
}== 
public@@ 

static@@ 
double@@ 
GoodG2B2Source@@ '
(@@' (
)@@( )
{AA 
doubleBB 
dataBB 
;BB 
ifCC 

(CC E
9CWE197_Numeric_Truncation_Error__double_random_to_int_22aCC E
.CCE F 
GoodG2B2PublicStaticCCF Z
)CCZ [
{DD 	
dataFF 
=FF 
$numFF 
;FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
returnNN 
dataNN 
;NN 
}OO 
}QQ 
}RR è
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__double_random_to_int_31 >
:? @
AbstractTestCaseA Q
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
dataCopy 
; 
{ 	
double 
data 
; 
data!! 
=!! 
IO!! 
.!! 
GetRandomDouble!! %
(!!% &
)!!& '
;!!' (
dataCopy"" 
="" 
data"" 
;"" 
}## 	
{$$ 	
double%% 
data%% 
=%% 
dataCopy%% "
;%%" #
{&& 
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
int(( !
)((! "
data((" &
)((& '
;((' (
})) 
}** 	
}++ 
public.. 

override.. 
void.. 
Good.. 
(.. 
).. 
{// 
GoodG2B00 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B44 
(44 
)44 
{55 
double66 
dataCopy66 
;66 
{77 	
double88 
data88 
;88 
data:: 
=:: 
$num:: 
;:: 
dataCopy;; 
=;; 
data;; 
;;; 
}<< 	
{== 	
double>> 
data>> 
=>> 
dataCopy>> "
;>>" #
{?? 
IOAA 
.AA 
	WriteLineAA 
(AA 
(AA 
intAA !
)AA! "
dataAA" &
)AA& '
;AA' (
}BB 
}CC 	
}DD 
}FF 
}GG ç
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__double_random_to_int_41 >
:? @
AbstractTestCaseA Q
{ 
private 
static 
void 
BadSink 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
} 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
double## 
data## 
;## 
data%% 
=%% 
IO%% 
.%% 
GetRandomDouble%% !
(%%! "
)%%" #
;%%# $
BadSink&& 
(&& 
data&& 
)&& 
;&& 
}'' 
public** 

override** 
void** 
Good** 
(** 
)** 
{++ 
GoodG2B,, 
(,, 
),, 
;,, 
}-- 
private// 
static// 
void// 
GoodG2BSink// #
(//# $
double//$ *
data//+ /
)//0 1
{00 
{11 	
IO33 
.33 
	WriteLine33 
(33 
(33 
int33 
)33 
data33 "
)33" #
;33# $
}44 	
}55 
private88 
static88 
void88 
GoodG2B88 
(88  
)88  !
{99 
double:: 
data:: 
;:: 
data<< 
=<< 
$num<< 
;<< 
GoodG2BSink== 
(== 
data== 
)== 
;== 
}>> 
}@@ 
}AA ˝
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__double_random_to_int_42 >
:? @
AbstractTestCaseA Q
{ 
private 
static 
double 
	BadSource #
(# $
)$ %
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
return 
data 
; 
} 
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
double$$ 
data$$ 
=$$ 
	BadSource$$ 
($$  
)$$  !
;$$! "
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
int'' 
)'' 
data'' "
)''" #
;''# $
}(( 	
})) 
private,, 
static,, 
double,, 
GoodG2BSource,, '
(,,' (
),,( )
{-- 
double.. 
data.. 
;.. 
data00 
=00 
$num00 
;00 
return11 
data11 
;11 
}22 
private55 
static55 
void55 
GoodG2B55 
(55  
)55  !
{66 
double77 
data77 
=77 
GoodG2BSource77 #
(77# $
)77$ %
;77% &
{88 	
IO:: 
.:: 
	WriteLine:: 
(:: 
(:: 
int:: 
):: 
data:: "
)::" #
;::# $
};; 	
}<< 
public>> 

override>> 
void>> 
Good>> 
(>> 
)>> 
{?? 
GoodG2B@@ 
(@@ 
)@@ 
;@@ 
}AA 
}CC 
}DD √
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__double_random_to_int_45 >
:? @
AbstractTestCaseA Q
{ 
private 
double 
dataBad 
; 
private 
double 
dataGoodG2B 
; 
private 
void 
BadSink 
( 
) 
{ 
double 
data 
= 
dataBad 
; 
{   	
IO"" 
."" 
	WriteLine"" 
("" 
("" 
int"" 
)"" 
data"" "
)""" #
;""# $
}## 	
}$$ 
public'' 

override'' 
void'' 
Bad'' 
('' 
)'' 
{(( 
double)) 
data)) 
;)) 
data++ 
=++ 
IO++ 
.++ 
GetRandomDouble++ !
(++! "
)++" #
;++# $
dataBad,, 
=,, 
data,, 
;,, 
BadSink-- 
(-- 
)-- 
;-- 
}.. 
public11 

override11 
void11 
Good11 
(11 
)11 
{22 
GoodG2B33 
(33 
)33 
;33 
}44 
private66 
void66 
GoodG2BSink66 
(66 
)66 
{77 
double88 
data88 
=88 
dataGoodG2B88 !
;88! "
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
int;; 
);; 
data;; "
);;" #
;;;# $
}<< 	
}== 
private@@ 
void@@ 
GoodG2B@@ 
(@@ 
)@@ 
{AA 
doubleBB 
dataBB 
;BB 
dataDD 
=DD 
$numDD 
;DD 
dataGoodG2BEE 
=EE 
dataEE 
;EE 
GoodG2BSinkFF 
(FF 
)FF 
;FF 
}GG 
}II 
}JJ ª
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_51a ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $E
9CWE197_Numeric_Truncation_Error__double_random_to_int_51b A
.A B
BadSinkB I
(I J
dataJ N
)P Q
;Q R
} 
public"" 

override"" 
void"" 
Good"" 
("" 
)"" 
{## 
GoodG2B$$ 
($$ 
)$$ 
;$$ 
}%% 
private(( 
void(( 
GoodG2B(( 
((( 
)(( 
{)) 
double** 
data** 
;** 
data,, 
=,, 
$num,, 
;,, E
9CWE197_Numeric_Truncation_Error__double_random_to_int_51b-- A
.--A B
GoodG2BSink--B M
(--M N
data--N R
)--T U
;--U V
}.. 
}00 
}11 ù	
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_51b ?
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
double### )
data##* .
)##/ 0
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
int'' 
)'' 
data'' "
)''" #
;''# $
}(( 	
})) 
}++ 
},, ª
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_52a ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $E
9CWE197_Numeric_Truncation_Error__double_random_to_int_52b A
.A B
BadSinkB I
(I J
dataJ N
)O P
;P Q
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
double++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- E
9CWE197_Numeric_Truncation_Error__double_random_to_int_52b.. A
...A B
GoodG2BSink..B M
(..M N
data..N R
)..S T
;..T U
}// 
}11 
}22 Ò
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_52b ?
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ E
9CWE197_Numeric_Truncation_Error__double_random_to_int_52c A
.A B
BadSinkB I
(I J
dataJ N
)O P
;P Q
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" E
9CWE197_Numeric_Truncation_Error__double_random_to_int_52c## A
.##A B
GoodG2BSink##B M
(##M N
data##N R
)##S T
;##T U
}$$ 
}&& 
}'' ù	
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_52c ?
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
int(( 
)(( 
data(( "
)((" #
;((# $
})) 	
}** 
},, 
}-- ª
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_53a ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $E
9CWE197_Numeric_Truncation_Error__double_random_to_int_53b A
.A B
BadSinkB I
(I J
dataJ N
)O P
;P Q
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
double++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- E
9CWE197_Numeric_Truncation_Error__double_random_to_int_53b.. A
...A B
GoodG2BSink..B M
(..M N
data..N R
)..S T
;..T U
}// 
}11 
}22 Ò
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_53b ?
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ E
9CWE197_Numeric_Truncation_Error__double_random_to_int_53c A
.A B
BadSinkB I
(I J
dataJ N
)O P
;P Q
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" E
9CWE197_Numeric_Truncation_Error__double_random_to_int_53c## A
.##A B
GoodG2BSink##B M
(##M N
data##N R
)##S T
;##T U
}$$ 
}&& 
}'' Ò
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_53c ?
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ E
9CWE197_Numeric_Truncation_Error__double_random_to_int_53d A
.A B
BadSinkB I
(I J
dataJ N
)O P
;P Q
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" E
9CWE197_Numeric_Truncation_Error__double_random_to_int_53d## A
.##A B
GoodG2BSink##B M
(##M N
data##N R
)##S T
;##T U
}$$ 
}&& 
}'' ù	
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_53d ?
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
int(( 
)(( 
data(( "
)((" #
;((# $
})) 	
}** 
},, 
}-- ª
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_54a ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $E
9CWE197_Numeric_Truncation_Error__double_random_to_int_54b A
.A B
BadSinkB I
(I J
dataJ N
)O P
;P Q
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
double++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- E
9CWE197_Numeric_Truncation_Error__double_random_to_int_54b.. A
...A B
GoodG2BSink..B M
(..M N
data..N R
)..S T
;..T U
}// 
}11 
}22 Ò
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_54b ?
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ E
9CWE197_Numeric_Truncation_Error__double_random_to_int_54c A
.A B
BadSinkB I
(I J
dataJ N
)O P
;P Q
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" E
9CWE197_Numeric_Truncation_Error__double_random_to_int_54c## A
.##A B
GoodG2BSink##B M
(##M N
data##N R
)##S T
;##T U
}$$ 
}&& 
}'' Ò
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_54c ?
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ E
9CWE197_Numeric_Truncation_Error__double_random_to_int_54d A
.A B
BadSinkB I
(I J
dataJ N
)O P
;P Q
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" E
9CWE197_Numeric_Truncation_Error__double_random_to_int_54d## A
.##A B
GoodG2BSink##B M
(##M N
data##N R
)##S T
;##T U
}$$ 
}&& 
}'' Ò
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_54d ?
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ E
9CWE197_Numeric_Truncation_Error__double_random_to_int_54e A
.A B
BadSinkB I
(I J
dataJ N
)O P
;P Q
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" E
9CWE197_Numeric_Truncation_Error__double_random_to_int_54e## A
.##A B
GoodG2BSink##B M
(##M N
data##N R
)##S T
;##T U
}$$ 
}&& 
}'' ù	
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_54e ?
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
int(( 
)(( 
data(( "
)((" #
;((# $
})) 	
}** 
},, 
}-- Á
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_61a ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
= E
9CWE197_Numeric_Truncation_Error__double_random_to_int_61b O
.O P
	BadSourceP Y
(Y Z
)Z [
;[ \
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
double++ 
data++ 
=++ E
9CWE197_Numeric_Truncation_Error__double_random_to_int_61b++ O
.++O P
GoodG2BSource++P ]
(++] ^
)++^ _
;++_ `
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
int.. 
).. 
data.. "
).." #
;..# $
}// 	
}00 
}22 
}33 ı
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_61b ?
{ 
public 

static 
double 
	BadSource "
(" #
)# $
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
return 
data 
; 
}   
public%% 

static%% 
double%% 
GoodG2BSource%% &
(%%& '
)%%' (
{&& 
double'' 
data'' 
;'' 
data)) 
=)) 
$num)) 
;)) 
return** 
data** 
;** 
}++ 
}-- 
}.. ø
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_66a ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
double 
[ 
] 
	dataArray 
= 
new  
double! '
[' (
$num( )
]) *
;* +
	dataArray   
[   
$num   
]   
=   
data   
;   E
9CWE197_Numeric_Truncation_Error__double_random_to_int_66b!! A
.!!A B
BadSink!!B I
(!!I J
	dataArray!!J S
)!!U V
;!!V W
}"" 
public%% 

override%% 
void%% 
Good%% 
(%% 
)%% 
{&& 
GoodG2B'' 
('' 
)'' 
;'' 
}(( 
private++ 
static++ 
void++ 
GoodG2B++ 
(++  
)++  !
{,, 
double-- 
data-- 
;-- 
data// 
=// 
$num// 
;// 
double00 
[00 
]00 
	dataArray00 
=00 
new00  
double00! '
[00' (
$num00( )
]00) *
;00* +
	dataArray11 
[11 
$num11 
]11 
=11 
data11 
;11 E
9CWE197_Numeric_Truncation_Error__double_random_to_int_66b22 A
.22A B
GoodG2BSink22B M
(22M N
	dataArray22N W
)22Y Z
;22Z [
}33 
}55 
}66 ˘
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_66b ?
{ 
public 

static 
void 
BadSink 
( 
double %
[% &
]& '
	dataArray( 1
)2 3
{ 
double 
data 
= 
	dataArray 
[  
$num  !
]! "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
double%%# )
[%%) *
]%%* +
	dataArray%%, 5
)%%6 7
{&& 
double'' 
data'' 
='' 
	dataArray'' 
[''  
$num''  !
]''! "
;''" #
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
int** 
)** 
data** "
)**" #
;**# $
}++ 	
},, 
}.. 
}// ¢
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_67a ?
:@ A
AbstractTestCaseB R
{ 
public 

class 
	Container 
{ 
public 
double 
containerOne "
;" #
} 
public 

override 
void 
Bad 
( 
) 
{   
double!! 
data!! 
;!! 
data## 
=## 
IO## 
.## 
GetRandomDouble## !
(##! "
)##" #
;### $
	Container$$ 
dataContainer$$ 
=$$  !
new$$" %
	Container$$& /
($$/ 0
)$$0 1
;$$1 2
dataContainer%% 
.%% 
containerOne%% "
=%%# $
data%%% )
;%%) *E
9CWE197_Numeric_Truncation_Error__double_random_to_int_67b&& A
.&&A B
BadSink&&B I
(&&I J
dataContainer&&J W
)&&Y Z
;&&Z [
}'' 
public** 

override** 
void** 
Good** 
(** 
)** 
{++ 
GoodG2B,, 
(,, 
),, 
;,, 
}-- 
private00 
static00 
void00 
GoodG2B00 
(00  
)00  !
{11 
double22 
data22 
;22 
data44 
=44 
$num44 
;44 
	Container55 
dataContainer55 
=55  !
new55" %
	Container55& /
(55/ 0
)550 1
;551 2
dataContainer66 
.66 
containerOne66 "
=66# $
data66% )
;66) *E
9CWE197_Numeric_Truncation_Error__double_random_to_int_67b77 A
.77A B
GoodG2BSink77B M
(77M N
dataContainer77N [
)77] ^
;77^ _
}88 
}:: 
};; Ò
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_67b ?
{ 
public 

static 
void 
BadSink 
( E
9CWE197_Numeric_Truncation_Error__double_random_to_int_67a X
.X Y
	ContainerY b
dataContainerc p
)q r
{ 
double 
data 
= 
dataContainer #
.# $
containerOne$ 0
;0 1
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #E
9CWE197_Numeric_Truncation_Error__double_random_to_int_67a%%# \
.%%\ ]
	Container%%] f
dataContainer%%g t
)%%u v
{&& 
double'' 
data'' 
='' 
dataContainer'' #
.''# $
containerOne''$ 0
;''0 1
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
int** 
)** 
data** "
)**" #
;**# $
}++ 	
},, 
}.. 
}// û
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_68a ?
:@ A
AbstractTestCaseB R
{ 
public 

static 
double 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $E
9CWE197_Numeric_Truncation_Error__double_random_to_int_68b A
.A B
BadSinkB I
(I J
)J K
;K L
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
data,, 
=,, 
$num,, 
;,, E
9CWE197_Numeric_Truncation_Error__double_random_to_int_68b-- A
.--A B
GoodG2BSink--B M
(--M N
)--N O
;--O P
}.. 
}00 
}11 ©
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_68b ?
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
double 
data 
= E
9CWE197_Numeric_Truncation_Error__double_random_to_int_68a O
.O P
dataP T
;T U
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
double&& 
data&& 
=&& E
9CWE197_Numeric_Truncation_Error__double_random_to_int_68a&& O
.&&O P
data&&P T
;&&T U
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
int)) 
))) 
data)) "
)))" #
;))# $
}** 	
}++ 
}-- 
}.. ≥
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_71a ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $E
9CWE197_Numeric_Truncation_Error__double_random_to_int_71b A
.A B
BadSinkB I
(I J
(J K
ObjectK Q
)Q R
dataR V
)X Y
;Y Z
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
double++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- E
9CWE197_Numeric_Truncation_Error__double_random_to_int_71b.. A
...A B
GoodG2BSink..B M
(..M N
(..N O
Object..O U
)..U V
data..V Z
)..\ ]
;..] ^
}// 
}11 
}22 ≈
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_71b ?
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
double 
data 
= 
( 
double 
) 

dataObject (
;( )
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
double(( 
data(( 
=(( 
((( 
double(( 
)(( 

dataObject(( (
;((( )
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
int++ 
)++ 
data++ "
)++" #
;++# $
},, 	
}-- 
}// 
}00 ”
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_72a ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
	Hashtable 
dataHashtable 
=  !
new" %
	Hashtable& /
(/ 0
$num0 1
)1 2
;2 3
dataHashtable   
.   
Add   
(   
$num   
,   
data   !
)  ! "
;  " #
dataHashtable!! 
.!! 
Add!! 
(!! 
$num!! 
,!! 
data!! !
)!!! "
;!!" #
dataHashtable"" 
."" 
Add"" 
("" 
$num"" 
,"" 
data"" !
)""! "
;""" #E
9CWE197_Numeric_Truncation_Error__double_random_to_int_72b## A
.##A B
BadSink##B I
(##I J
dataHashtable##J W
)##Y Z
;##Z [
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
)'' 
{(( 
GoodG2B)) 
()) 
))) 
;)) 
}** 
private-- 
static-- 
void-- 
GoodG2B-- 
(--  
)--  !
{.. 
double// 
data// 
;// 
data11 
=11 
$num11 
;11 
	Hashtable22 
dataHashtable22 
=22  !
new22" %
	Hashtable22& /
(22/ 0
$num220 1
)221 2
;222 3
dataHashtable33 
.33 
Add33 
(33 
$num33 
,33 
data33 !
)33! "
;33" #
dataHashtable44 
.44 
Add44 
(44 
$num44 
,44 
data44 !
)44! "
;44" #
dataHashtable55 
.55 
Add55 
(55 
$num55 
,55 
data55 !
)55! "
;55" #E
9CWE197_Numeric_Truncation_Error__double_random_to_int_72b66 A
.66A B
GoodG2BSink66B M
(66M N
dataHashtable66N [
)66] ^
;66^ _
}77 
}99 
}:: ∑
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_72b ?
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
double 
data 
= 
( 
double 
) 
dataHashtable ,
[, -
$num- .
]. /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
double(( 
data(( 
=(( 
((( 
double(( 
)(( 
dataHashtable(( ,
[((, -
$num((- .
]((. /
;((/ 0
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
int++ 
)++ 
data++ "
)++" #
;++# $
},, 	
}-- 
}// 
}00 ◊
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_73a ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $

LinkedList   
<   
double   
>   
dataLinkedList   )
=  * +
new  , /

LinkedList  0 :
<  : ;
double  ; A
>  A B
(  B C
)  C D
;  D E
dataLinkedList!! 
.!! 
AddLast!! 
(!! 
data!! #
)!!# $
;!!$ %
dataLinkedList"" 
."" 
AddLast"" 
("" 
data"" #
)""# $
;""$ %
dataLinkedList## 
.## 
AddLast## 
(## 
data## #
)### $
;##$ %E
9CWE197_Numeric_Truncation_Error__double_random_to_int_73b$$ A
.$$A B
BadSink$$B I
($$I J
dataLinkedList$$J X
)$$Z [
;$$[ \
}%% 
public(( 

override(( 
void(( 
Good(( 
((( 
)(( 
{)) 
GoodG2B** 
(** 
)** 
;** 
}++ 
private.. 
static.. 
void.. 
GoodG2B.. 
(..  
)..  !
{// 
double00 
data00 
;00 
data22 
=22 
$num22 
;22 

LinkedList33 
<33 
double33 
>33 
dataLinkedList33 )
=33* +
new33, /

LinkedList330 :
<33: ;
double33; A
>33A B
(33B C
)33C D
;33D E
dataLinkedList44 
.44 
AddLast44 
(44 
data44 #
)44# $
;44$ %
dataLinkedList55 
.55 
AddLast55 
(55 
data55 #
)55# $
;55$ %
dataLinkedList66 
.66 
AddLast66 
(66 
data66 #
)66# $
;66$ %E
9CWE197_Numeric_Truncation_Error__double_random_to_int_73b77 A
.77A B
GoodG2BSink77B M
(77M N
dataLinkedList77N \
)77^ _
;77_ `
}88 
}:: 
};; „
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_73b ?
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
double* 0
>0 1
dataLinkedList2 @
)A B
{ 
double 
data 
= 
dataLinkedList $
.$ %
Last% )
.) *
Value* /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
double&&. 4
>&&4 5
dataLinkedList&&6 D
)&&E F
{'' 
double(( 
data(( 
=(( 
dataLinkedList(( $
.(($ %
Last((% )
.(() *
Value((* /
;((/ 0
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
int++ 
)++ 
data++ "
)++" #
;++# $
},, 	
}-- 
}// 
}00 Ö
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_74a ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $

Dictionary 
< 
int 
, 
double 
> 
dataDictionary -
=. /
new0 3

Dictionary4 >
<> ?
int? B
,B C
doubleC I
>I J
(J K
)K L
;L M
dataDictionary   
.   
Add   
(   
$num   
,   
data   "
)  " #
;  # $
dataDictionary!! 
.!! 
Add!! 
(!! 
$num!! 
,!! 
data!! "
)!!" #
;!!# $
dataDictionary"" 
."" 
Add"" 
("" 
$num"" 
,"" 
data"" "
)""" #
;""# $E
9CWE197_Numeric_Truncation_Error__double_random_to_int_74b## A
.##A B
BadSink##B I
(##I J
dataDictionary##J X
)##Z [
;##[ \
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
)'' 
{(( 
GoodG2B)) 
()) 
))) 
;)) 
}** 
private-- 
static-- 
void-- 
GoodG2B-- 
(--  
)--  !
{.. 
double// 
data// 
;// 
data11 
=11 
$num11 
;11 

Dictionary22 
<22 
int22 
,22 
double22 
>22 
dataDictionary22 -
=22. /
new220 3

Dictionary224 >
<22> ?
int22? B
,22B C
double22C I
>22I J
(22J K
)22K L
;22L M
dataDictionary33 
.33 
Add33 
(33 
$num33 
,33 
data33 "
)33" #
;33# $
dataDictionary44 
.44 
Add44 
(44 
$num44 
,44 
data44 "
)44" #
;44# $
dataDictionary55 
.55 
Add55 
(55 
$num55 
,55 
data55 "
)55" #
;55# $E
9CWE197_Numeric_Truncation_Error__double_random_to_int_74b66 A
.66A B
GoodG2BSink66B M
(66M N
dataDictionary66N \
)66^ _
;66_ `
}77 
}99 
}:: ˝
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_74b ?
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
double. 4
>4 5
dataDictionary6 D
)E F
{ 
double 
data 
= 
dataDictionary $
[$ %
$num% &
]& '
;' (
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
double&&2 8
>&&8 9
dataDictionary&&: H
)&&I J
{'' 
double(( 
data(( 
=(( 
dataDictionary(( $
[(($ %
$num((% &
]((& '
;((' (
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
int++ 
)++ 
data++ "
)++" #
;++# $
},, 	
}-- 
}// 
}00 ° 
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_75a ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
IO   
.   
GetRandomDouble   !
(  ! "
)  " #
;  # $
byte"" 
["" 
]"" 
dataSerialized"" 
="" 
null""  $
;""$ %
try## 
{$$ 	
BinaryFormatter%% 
bf%% 
=%%  
new%%! $
BinaryFormatter%%% 4
(%%4 5
)%%5 6
;%%6 7
using&& 
(&& 
var&& 
ms&& 
=&& 
new&& 
MemoryStream&&  ,
(&&, -
)&&- .
)&&. /
{'' 
bf(( 
.(( 
	Serialize(( 
((( 
ms(( 
,((  
data((! %
)((% &
;((& '
dataSerialized)) 
=))  
ms))! #
.))# $
ToArray))$ +
())+ ,
))), -
;))- .
}** E
9CWE197_Numeric_Truncation_Error__double_random_to_int_75b++ E
.++E F
BadSink++F M
(++M N
dataSerialized++N \
)++^ _
;++_ `
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. X
,//X Y
exceptSerialize//Z i
)//i j
;//j k
}00 	
}11 
public44 

override44 
void44 
Good44 
(44 
)44 
{55 
GoodG2B66 
(66 
)66 
;66 
}77 
private:: 
static:: 
void:: 
GoodG2B:: 
(::  
)::  !
{;; 
double<< 
data<< 
;<< 
data>> 
=>> 
$num>> 
;>> 
byte@@ 
[@@ 
]@@ 
dataSerialized@@ 
=@@ 
null@@  $
;@@$ %
tryAA 
{BB 	
BinaryFormatterCC 
bfCC 
=CC  
newCC! $
BinaryFormatterCC% 4
(CC4 5
)CC5 6
;CC6 7
usingDD 
(DD 
varDD 
msDD 
=DD 
newDD 
MemoryStreamDD  ,
(DD, -
)DD- .
)DD. /
{EE 
bfFF 
.FF 
	SerializeFF 
(FF 
msFF 
,FF  
dataFF! %
)FF% &
;FF& '
dataSerializedGG 
=GG  
msGG! #
.GG# $
ToArrayGG$ +
(GG+ ,
)GG, -
;GG- .
}HH E
9CWE197_Numeric_Truncation_Error__double_random_to_int_75bII E
.IIE F
GoodG2BSinkIIF Q
(IIQ R
dataSerializedIIR `
)IIb c
;IIc d
}JJ 	
catchKK 
(KK "
SerializationExceptionKK %
exceptSerializeKK& 5
)KK5 6
{LL 	
IOMM 
.MM 
LoggerMM 
.MM 
LogMM 
(MM 
NLogMM 
.MM 
LogLevelMM '
.MM' (
WarnMM( ,
,MM, -
$strMM. X
,MMX Y
exceptSerializeMMZ i
)MMi j
;MMj k
}NN 	
}OO 
}QQ 
}RR „!
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_75b ?
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
double   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
double&& 
)&& 
binForm&& &
.&&& '
Deserialize&&' 2
(&&2 3
	memStream&&3 <
)&&< =
;&&= >
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
int** !
)**! "
data**" &
)**& '
;**' (
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
double:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
double@@ 
)@@ 
binForm@@ &
.@@& '
Deserialize@@' 2
(@@2 3
	memStream@@3 <
)@@< =
;@@= >
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
intDD !
)DD! "
dataDD" &
)DD& '
;DD' (
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN ›
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_int_81a ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $I
=CWE197_Numeric_Truncation_Error__double_random_to_int_81_base E

baseObjectF P
=Q R
newS VI
<CWE197_Numeric_Truncation_Error__double_random_to_int_81_bad	W ì
(
ì î
)
î ï
;
ï ñ

baseObject   
.   
Action   
(   
data   
)    
;    !
}!! 
public$$ 

override$$ 
void$$ 
Good$$ 
($$ 
)$$ 
{%% 
GoodG2B&& 
(&& 
)&& 
;&& 
}'' 
private** 
void** 
GoodG2B** 
(** 
)** 
{++ 
double,, 
data,, 
;,, 
data.. 
=.. 
$num.. 
;.. I
=CWE197_Numeric_Truncation_Error__double_random_to_int_81_base// E

baseObject//F P
=//Q R
new//S VM
@CWE197_Numeric_Truncation_Error__double_random_to_int_81_goodG2B	//W ó
(
//ó ò
)
//ò ô
;
//ô ö

baseObject00 
.00 
Action00 
(00 
data00 
)00  
;00  !
}11 
}33 
}44 à
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__double_random_to_int_81_bad B
:C DJ
=CWE197_Numeric_Truncation_Error__double_random_to_int_81_base	E Ç
{ 
public 

override 
void 
Action 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
}   
}!! 
}"" Ù
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 I
=CWE197_Numeric_Truncation_Error__double_random_to_int_81_base L
{ 
public 

abstract 
void 
Action 
(  
double  &
data' +
), -
;- .
} 
} ê
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_int_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class L
@CWE197_Numeric_Truncation_Error__double_random_to_int_81_goodG2B F
:G HJ
=CWE197_Numeric_Truncation_Error__double_random_to_int_81_base	I Ü
{ 
public 

override 
void 
Action 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
}   
}!! 
}"" È
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_long_01 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
{ 	
IO!! 
.!! 
	WriteLine!! 
(!! 
(!! 
long!! 
)!! 
data!! #
)!!# $
;!!$ %
}"" 	
}## 
public&& 

override&& 
void&& 
Good&& 
(&& 
)&& 
{'' 
GoodG2B(( 
((( 
)(( 
;(( 
})) 
private,, 
void,, 
GoodG2B,, 
(,, 
),, 
{-- 
double.. 
data.. 
;.. 
data00 
=00 
$num00 
;00 
{11 	
IO33 
.33 
	WriteLine33 
(33 
(33 
long33 
)33 
data33 #
)33# $
;33$ %
}44 	
}55 
}77 
}88 “
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_long_02 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
true 
) 
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
long** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
false33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
long@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
trueHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
longUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ∑
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_long_03 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
$num 
== 
$num 
) 
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
long** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
$num33 
!=33 
$num33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
long@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
$numHH 
==HH 
$numHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
longUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` í
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_long_04 ?
:@ A
AbstractTestCaseB R
{ 
private 
const 
bool 
PRIVATE_CONST_TRUE )
=* +
true, 0
;0 1
private 
const 
bool 
PRIVATE_CONST_FALSE *
=+ ,
false- 2
;2 3
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
double## 
data## 
;## 
if$$ 

($$ 
PRIVATE_CONST_TRUE$$ 
)$$ 
{%% 	
data'' 
='' 
IO'' 
.'' 
GetRandomDouble'' %
(''% &
)''& '
;''' (
}(( 	
else)) 
{** 	
data-- 
=-- 
$num-- 
;-- 
}.. 	
{// 	
IO11 
.11 
	WriteLine11 
(11 
(11 
long11 
)11 
data11 #
)11# $
;11$ %
}22 	
}33 
private77 
void77 
GoodG2B177 
(77 
)77 
{88 
double99 
data99 
;99 
if:: 

(:: 
PRIVATE_CONST_FALSE:: 
)::  
{;; 	
data>> 
=>> 
$num>> 
;>> 
}?? 	
else@@ 
{AA 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
longGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
privateLL 
voidLL 
GoodG2B2LL 
(LL 
)LL 
{MM 
doubleNN 
dataNN 
;NN 
ifOO 

(OO 
PRIVATE_CONST_TRUEOO 
)OO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
elseTT 
{UU 	
dataXX 
=XX 
$numXX 
;XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
long\\ 
)\\ 
data\\ #
)\\# $
;\\$ %
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2B1bb 
(bb 
)bb 
;bb 
GoodG2B2cc 
(cc 
)cc 
;cc 
}dd 
}ff 
}gg …
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_long_05 ?
:@ A
AbstractTestCaseB R
{ 
private 
bool 
privateTrue 
= 
true #
;# $
private 
bool 
privateFalse 
= 
false  %
;% &
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
double## 
data## 
;## 
if$$ 

($$ 
privateTrue$$ 
)$$ 
{%% 	
data'' 
='' 
IO'' 
.'' 
GetRandomDouble'' %
(''% &
)''& '
;''' (
}(( 	
else)) 
{** 	
data-- 
=-- 
$num-- 
;-- 
}.. 	
{// 	
IO11 
.11 
	WriteLine11 
(11 
(11 
long11 
)11 
data11 #
)11# $
;11$ %
}22 	
}33 
private77 
void77 
GoodG2B177 
(77 
)77 
{88 
double99 
data99 
;99 
if:: 

(:: 
privateFalse:: 
):: 
{;; 	
data>> 
=>> 
$num>> 
;>> 
}?? 	
else@@ 
{AA 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
longGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
privateLL 
voidLL 
GoodG2B2LL 
(LL 
)LL 
{MM 
doubleNN 
dataNN 
;NN 
ifOO 

(OO 
privateTrueOO 
)OO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
elseTT 
{UU 	
dataXX 
=XX 
$numXX 
;XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
long\\ 
)\\ 
data\\ #
)\\# $
;\\$ %
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2B1bb 
(bb 
)bb 
;bb 
GoodG2B2cc 
(cc 
)cc 
;cc 
}dd 
}ff 
}gg Í
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_long_06 ?
:@ A
AbstractTestCaseB R
{ 
private 
const 
int 
PRIVATE_CONST_FIVE (
=) *
$num+ ,
;, -
public   

override   
void   
Bad   
(   
)   
{!! 
double"" 
data"" 
;"" 
if## 

(## 
PRIVATE_CONST_FIVE## 
==## !
$num##" #
)### $
{$$ 	
data&& 
=&& 
IO&& 
.&& 
GetRandomDouble&& %
(&&% &
)&&& '
;&&' (
}'' 	
else(( 
{)) 	
data,, 
=,, 
$num,, 
;,, 
}-- 	
{.. 	
IO00 
.00 
	WriteLine00 
(00 
(00 
long00 
)00 
data00 #
)00# $
;00$ %
}11 	
}22 
private66 
void66 
GoodG2B166 
(66 
)66 
{77 
double88 
data88 
;88 
if99 

(99 
PRIVATE_CONST_FIVE99 
!=99 !
$num99" #
)99# $
{:: 	
data== 
=== 
$num== 
;== 
}>> 	
else?? 
{@@ 	
dataBB 
=BB 
$numBB 
;BB 
}CC 	
{DD 	
IOFF 
.FF 
	WriteLineFF 
(FF 
(FF 
longFF 
)FF 
dataFF #
)FF# $
;FF$ %
}GG 	
}HH 
privateKK 
voidKK 
GoodG2B2KK 
(KK 
)KK 
{LL 
doubleMM 
dataMM 
;MM 
ifNN 

(NN 
PRIVATE_CONST_FIVENN 
==NN !
$numNN" #
)NN# $
{OO 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
elseSS 
{TT 	
dataWW 
=WW 
$numWW 
;WW 
}XX 	
{YY 	
IO[[ 
.[[ 
	WriteLine[[ 
([[ 
([[ 
long[[ 
)[[ 
data[[ #
)[[# $
;[[$ %
}\\ 	
}]] 
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2B1aa 
(aa 
)aa 
;aa 
GoodG2B2bb 
(bb 
)bb 
;bb 
}cc 
}ee 
}ff ª
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_long_07 ?
:@ A
AbstractTestCaseB R
{ 
private 
int 
privateFive 
= 
$num 
;  
public   

override   
void   
Bad   
(   
)   
{!! 
double"" 
data"" 
;"" 
if## 

(## 
privateFive## 
==## 
$num## 
)## 
{$$ 	
data&& 
=&& 
IO&& 
.&& 
GetRandomDouble&& %
(&&% &
)&&& '
;&&' (
}'' 	
else(( 
{)) 	
data,, 
=,, 
$num,, 
;,, 
}-- 	
{.. 	
IO00 
.00 
	WriteLine00 
(00 
(00 
long00 
)00 
data00 #
)00# $
;00$ %
}11 	
}22 
private66 
void66 
GoodG2B166 
(66 
)66 
{77 
double88 
data88 
;88 
if99 

(99 
privateFive99 
!=99 
$num99 
)99 
{:: 	
data== 
=== 
$num== 
;== 
}>> 	
else?? 
{@@ 	
dataBB 
=BB 
$numBB 
;BB 
}CC 	
{DD 	
IOFF 
.FF 
	WriteLineFF 
(FF 
(FF 
longFF 
)FF 
dataFF #
)FF# $
;FF$ %
}GG 	
}HH 
privateKK 
voidKK 
GoodG2B2KK 
(KK 
)KK 
{LL 
doubleMM 
dataMM 
;MM 
ifNN 

(NN 
privateFiveNN 
==NN 
$numNN 
)NN 
{OO 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
elseSS 
{TT 	
dataWW 
=WW 
$numWW 
;WW 
}XX 	
{YY 	
IO[[ 
.[[ 
	WriteLine[[ 
([[ 
([[ 
long[[ 
)[[ 
data[[ #
)[[# $
;[[$ %
}\\ 	
}]] 
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2B1aa 
(aa 
)aa 
;aa 
GoodG2B2bb 
(bb 
)bb 
;bb 
}cc 
}ee 
}ff 
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_long_08 ?
:@ A
AbstractTestCaseB R
{ 
private 
static 
bool 
PrivateReturnsTrue *
(* +
)+ ,
{ 
return 
true 
; 
}   
private"" 
static"" 
bool"" 
PrivateReturnsFalse"" +
(""+ ,
)"", -
{## 
return$$ 
false$$ 
;$$ 
}%% 
public(( 

override(( 
void(( 
Bad(( 
((( 
)(( 
{)) 
double** 
data** 
;** 
if++ 

(++ 
PrivateReturnsTrue++ 
(++ 
)++  
)++  !
{,, 	
data.. 
=.. 
IO.. 
... 
GetRandomDouble.. %
(..% &
)..& '
;..' (
}// 	
else00 
{11 	
data44 
=44 
$num44 
;44 
}55 	
{66 	
IO88 
.88 
	WriteLine88 
(88 
(88 
long88 
)88 
data88 #
)88# $
;88$ %
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
)>> 
{?? 
double@@ 
data@@ 
;@@ 
ifAA 

(AA 
PrivateReturnsFalseAA 
(AA  
)AA  !
)AA! "
{BB 	
dataEE 
=EE 
$numEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$numJJ 
;JJ 
}KK 	
{LL 	
IONN 
.NN 
	WriteLineNN 
(NN 
(NN 
longNN 
)NN 
dataNN #
)NN# $
;NN$ %
}OO 	
}PP 
privateSS 
voidSS 
GoodG2B2SS 
(SS 
)SS 
{TT 
doubleUU 
dataUU 
;UU 
ifVV 

(VV 
PrivateReturnsTrueVV 
(VV 
)VV  
)VV  !
{WW 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data__ 
=__ 
$num__ 
;__ 
}`` 	
{aa 	
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
longcc 
)cc 
datacc #
)cc# $
;cc$ %
}dd 	
}ee 
publicgg 

overridegg 
voidgg 
Goodgg 
(gg 
)gg 
{hh 
GoodG2B1ii 
(ii 
)ii 
;ii 
GoodG2B2jj 
(jj 
)jj 
;jj 
}kk 
}mm 
}nn ﬂ
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_long_09 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_TRUE #
)# $
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
long** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33 !
STATIC_READONLY_FALSE33 $
)33$ %
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
long@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH  
STATIC_READONLY_TRUEHH #
)HH# $
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
longUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ¡
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_long_10 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
. 

staticTrue 
) 
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
long** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33 
staticFalse33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
long@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 

staticTrueHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
longUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ∞
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_long_11 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
. 
StaticReturnsTrue  
(  !
)! "
)" #
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
long** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33 
StaticReturnsFalse33 !
(33! "
)33" #
)33# $
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
long@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 
StaticReturnsTrueHH  
(HH  !
)HH! "
)HH" #
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
longUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ´
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_long_12 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
. $
StaticReturnsTrueOrFalse '
(' (
)( )
)) *
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data%% 
=%% 
$num%% 
;%% 
}&& 	
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
long)) 
))) 
data)) #
)))# $
;))$ %
}** 	
}++ 
private00 
void00 
GoodG2B00 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33 $
StaticReturnsTrueOrFalse33 '
(33' (
)33( )
)33) *
{44 	
data66 
=66 
$num66 
;66 
}77 	
else88 
{99 	
data;; 
=;; 
$num;; 
;;; 
}<< 	
{== 	
IO?? 
.?? 
	WriteLine?? 
(?? 
(?? 
long?? 
)?? 
data?? #
)??# $
;??$ %
}@@ 	
}AA 
publicCC 

overrideCC 
voidCC 
GoodCC 
(CC 
)CC 
{DD 
GoodG2BEE 
(EE 
)EE 
;EE 
}FF 
}HH 
}II ƒ
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_long_13 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_FIVE #
==$ &
$num' (
)( )
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
long** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33  
STATIC_READONLY_FIVE33 #
!=33$ &
$num33' (
)33( )
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
long@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH  
STATIC_READONLY_FIVEHH #
==HH$ &
$numHH' (
)HH( )
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
longUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ¶
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_long_14 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
. 

staticFive 
== 
$num 
) 
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
long** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33 

staticFive33 
!=33 
$num33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
long@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 

staticFiveHH 
==HH 
$numHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
longUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` Å
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_long_15 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
= 
$num 
; 
switch 
( 
$num 
) 
{ 	
case 
$num 
: 
data!! 
=!! 
IO!! 
.!! 
GetRandomDouble!! %
(!!% &
)!!& '
;!!' (
break"" 
;"" 
default## 
:## 
data&& 
=&& 
$num&& 
;&& 
break'' 
;'' 
}(( 	
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
long++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
private11 
void11 
GoodG2B111 
(11 
)11 
{22 
double33 
data33 
=33 
$num33 
;33 
switch44 
(44 
$num44 
)44 
{55 	
case66 
$num66 
:66 
data99 
=99 
$num99 
;99 
break:: 
;:: 
default;; 
:;; 
data== 
=== 
$num== 
;== 
break>> 
;>> 
}?? 	
{@@ 	
IOBB 
.BB 
	WriteLineBB 
(BB 
(BB 
longBB 
)BB 
dataBB #
)BB# $
;BB$ %
}CC 	
}DD 
privateGG 
voidGG 
GoodG2B2GG 
(GG 
)GG 
{HH 
doubleII 
dataII 
=II 
$numII 
;II 
switchJJ 
(JJ 
$numJJ 
)JJ 
{KK 	
caseLL 
$numLL 
:LL 
dataNN 
=NN 
$numNN 
;NN 
breakOO 
;OO 
defaultPP 
:PP 
dataSS 
=SS 
$numSS 
;SS 
breakTT 
;TT 
}UU 	
{VV 	
IOXX 
.XX 
	WriteLineXX 
(XX 
(XX 
longXX 
)XX 
dataXX #
)XX# $
;XX$ %
}YY 	
}ZZ 
public\\ 

override\\ 
void\\ 
Good\\ 
(\\ 
)\\ 
{]] 
GoodG2B1^^ 
(^^ 
)^^ 
;^^ 
GoodG2B2__ 
(__ 
)__ 
;__ 
}`` 
}bb 
}cc Ô
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_long_16 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
while 
( 
true 
) 
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
break!! 
;!! 
}"" 	
{## 	
IO%% 
.%% 
	WriteLine%% 
(%% 
(%% 
long%% 
)%% 
data%% #
)%%# $
;%%$ %
}&& 	
}'' 
private++ 
void++ 
GoodG2B++ 
(++ 
)++ 
{,, 
double-- 
data-- 
;-- 
while.. 
(.. 
true.. 
).. 
{// 	
data11 
=11 
$num11 
;11 
break22 
;22 
}33 	
{44 	
IO66 
.66 
	WriteLine66 
(66 
(66 
long66 
)66 
data66 #
)66# $
;66$ %
}77 	
}88 
public:: 

override:: 
void:: 
Good:: 
(:: 
):: 
{;; 
GoodG2B<< 
(<< 
)<< 
;<< 
}== 
}?? 
}@@ ﬂ
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_long_17 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
for 
( 
int 
i 
= 
$num 
; 
i 
< 
$num 
; 
i  
++  "
)" #
{   	
{!! 
IO## 
.## 
	WriteLine## 
(## 
(## 
long## "
)##" #
data### '
)##' (
;##( )
}$$ 
}%% 	
}&& 
private++ 
void++ 
GoodG2B++ 
(++ 
)++ 
{,, 
double-- 
data-- 
;-- 
data// 
=// 
$num// 
;// 
for00 
(00 
int00 
i00 
=00 
$num00 
;00 
i00 
<00 
$num00 
;00 
i00  
++00  "
)00" #
{11 	
{22 
IO44 
.44 
	WriteLine44 
(44 
(44 
long44 "
)44" #
data44# '
)44' (
;44( )
}55 
}66 	
}77 
public99 

override99 
void99 
Good99 
(99 
)99 
{:: 
GoodG2B;; 
(;; 
);; 
;;; 
}<< 
}>> 
}?? Ì"
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_long_21 ?
:@ A
AbstractTestCaseB R
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 

badPrivate   
=   
true   
;   
data!! 
=!! 

Bad_source!! 
(!! 
)!! 
;!! 
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
long$$ 
)$$ 
data$$ #
)$$# $
;$$$ %
}%% 	
}&& 
private(( 
double(( 

Bad_source(( 
((( 
)(( 
{)) 
double** 
data** 
;** 
if++ 

(++ 

badPrivate++ 
)++ 
{,, 	
data.. 
=.. 
IO.. 
... 
GetRandomDouble.. %
(..% &
)..& '
;..' (
}// 	
else00 
{11 	
data44 
=44 
$num44 
;44 
}55 	
return66 
data66 
;66 
}77 
private:: 
bool:: 
goodG2B1_private:: !
=::" #
false::$ )
;::) *
private;; 
bool;; 
GoodG2B2_private;; !
=;;" #
false;;$ )
;;;) *
public== 

override== 
void== 
Good== 
(== 
)== 
{>> 
GoodG2B1?? 
(?? 
)?? 
;?? 
GoodG2B2@@ 
(@@ 
)@@ 
;@@ 
}AA 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
)DD 
{EE 
doubleFF 
dataFF 
;FF 
goodG2B1_privateGG 
=GG 
falseGG  
;GG  !
dataHH 
=HH 
GoodG2B1_sourceHH 
(HH 
)HH  
;HH  !
{II 	
IOKK 
.KK 
	WriteLineKK 
(KK 
(KK 
longKK 
)KK 
dataKK #
)KK# $
;KK$ %
}LL 	
}MM 
privateOO 
doubleOO 
GoodG2B1_sourceOO "
(OO" #
)OO# $
{PP 
doubleQQ 
dataQQ 
=QQ 
$numQQ 
;QQ 
ifRR 

(RR 
goodG2B1_privateRR 
)RR 
{SS 	
dataVV 
=VV 
$numVV 
;VV 
}WW 	
elseXX 
{YY 	
data[[ 
=[[ 
$num[[ 
;[[ 
}\\ 	
return]] 
data]] 
;]] 
}^^ 
privateaa 
voidaa 
GoodG2B2aa 
(aa 
)aa 
{bb 
doublecc 
datacc 
;cc 
GoodG2B2_privatedd 
=dd 
truedd 
;dd  
dataee 
=ee 
GoodG2B2_sourceee 
(ee 
)ee  
;ee  !
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
(hh 
longhh 
)hh 
datahh #
)hh# $
;hh$ %
}ii 	
}jj 
privatell 
doublell 
GoodG2B2_sourcell "
(ll" #
)ll# $
{mm 
doublenn 
datann 
=nn 
$numnn 
;nn 
ifoo 

(oo 
GoodG2B2_privateoo 
)oo 
{pp 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
returnzz 
datazz 
;zz 
}{{ 
}}} 
}~~ ß
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_22a @
:A B
AbstractTestCaseC S
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! F
:CWE197_Numeric_Truncation_Error__double_random_to_long_22b!! I
.!!I J
	BadSource!!J S
(!!S T
)!!T U
;!!U V
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
long$$ 
)$$ 
data$$ #
)$$# $
;$$$ %
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
double66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 F
:CWE197_Numeric_Truncation_Error__double_random_to_long_22b88 I
.88I J
GoodG2B1Source88J X
(88X Y
)88Y Z
;88Z [
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
long;; 
);; 
data;; #
);;# $
;;;$ %
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
doubleBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD F
:CWE197_Numeric_Truncation_Error__double_random_to_long_22bDD I
.DDI J
GoodG2B2SourceDDJ X
(DDX Y
)DDY Z
;DDZ [
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
longGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
}KK 
}LL ÿ
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_22b @
{ 
public 

static 
double 
	BadSource "
(" #
)# $
{ 
double 
data 
; 
if 

( F
:CWE197_Numeric_Truncation_Error__double_random_to_long_22a F
.F G
badPublicStaticG V
)V W
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
return(( 
data(( 
;(( 
})) 
public.. 

static.. 
double.. 
GoodG2B1Source.. '
(..' (
)..( )
{// 
double00 
data00 
;00 
if11 

(11 F
:CWE197_Numeric_Truncation_Error__double_random_to_long_22a11 F
.11F G 
goodG2B1PublicStatic11G [
)11[ \
{22 	
data55 
=55 
$num55 
;55 
}66 	
else77 
{88 	
data:: 
=:: 
$num:: 
;:: 
};; 	
return<< 
data<< 
;<< 
}== 
public@@ 

static@@ 
double@@ 
GoodG2B2Source@@ '
(@@' (
)@@( )
{AA 
doubleBB 
dataBB 
;BB 
ifCC 

(CC F
:CWE197_Numeric_Truncation_Error__double_random_to_long_22aCC F
.CCF G 
GoodG2B2PublicStaticCCG [
)CC[ \
{DD 	
dataFF 
=FF 
$numFF 
;FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
returnNN 
dataNN 
;NN 
}OO 
}QQ 
}RR ì
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_long_31 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
dataCopy 
; 
{ 	
double 
data 
; 
data!! 
=!! 
IO!! 
.!! 
GetRandomDouble!! %
(!!% &
)!!& '
;!!' (
dataCopy"" 
="" 
data"" 
;"" 
}## 	
{$$ 	
double%% 
data%% 
=%% 
dataCopy%% "
;%%" #
{&& 
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
long(( "
)((" #
data((# '
)((' (
;((( )
})) 
}** 	
}++ 
public.. 

override.. 
void.. 
Good.. 
(.. 
).. 
{// 
GoodG2B00 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B44 
(44 
)44 
{55 
double66 
dataCopy66 
;66 
{77 	
double88 
data88 
;88 
data:: 
=:: 
$num:: 
;:: 
dataCopy;; 
=;; 
data;; 
;;; 
}<< 	
{== 	
double>> 
data>> 
=>> 
dataCopy>> "
;>>" #
{?? 
IOAA 
.AA 
	WriteLineAA 
(AA 
(AA 
longAA "
)AA" #
dataAA# '
)AA' (
;AA( )
}BB 
}CC 	
}DD 
}FF 
}GG ë
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_long_41 ?
:@ A
AbstractTestCaseB R
{ 
private 
static 
void 
BadSink 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
} 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
double## 
data## 
;## 
data%% 
=%% 
IO%% 
.%% 
GetRandomDouble%% !
(%%! "
)%%" #
;%%# $
BadSink&& 
(&& 
data&& 
)&& 
;&& 
}'' 
public** 

override** 
void** 
Good** 
(** 
)** 
{++ 
GoodG2B,, 
(,, 
),, 
;,, 
}-- 
private// 
static// 
void// 
GoodG2BSink// #
(//# $
double//$ *
data//+ /
)//0 1
{00 
{11 	
IO33 
.33 
	WriteLine33 
(33 
(33 
long33 
)33 
data33 #
)33# $
;33$ %
}44 	
}55 
private88 
static88 
void88 
GoodG2B88 
(88  
)88  !
{99 
double:: 
data:: 
;:: 
data<< 
=<< 
$num<< 
;<< 
GoodG2BSink== 
(== 
data== 
)== 
;== 
}>> 
}@@ 
}AA Å
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_long_42 ?
:@ A
AbstractTestCaseB R
{ 
private 
static 
double 
	BadSource #
(# $
)$ %
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
return 
data 
; 
} 
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
double$$ 
data$$ 
=$$ 
	BadSource$$ 
($$  
)$$  !
;$$! "
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
long'' 
)'' 
data'' #
)''# $
;''$ %
}(( 	
})) 
private,, 
static,, 
double,, 
GoodG2BSource,, '
(,,' (
),,( )
{-- 
double.. 
data.. 
;.. 
data00 
=00 
$num00 
;00 
return11 
data11 
;11 
}22 
private55 
static55 
void55 
GoodG2B55 
(55  
)55  !
{66 
double77 
data77 
=77 
GoodG2BSource77 #
(77# $
)77$ %
;77% &
{88 	
IO:: 
.:: 
	WriteLine:: 
(:: 
(:: 
long:: 
):: 
data:: #
)::# $
;::$ %
};; 	
}<< 
public>> 

override>> 
void>> 
Good>> 
(>> 
)>> 
{?? 
GoodG2B@@ 
(@@ 
)@@ 
;@@ 
}AA 
}CC 
}DD «
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__double_random_to_long_45 ?
:@ A
AbstractTestCaseB R
{ 
private 
double 
dataBad 
; 
private 
double 
dataGoodG2B 
; 
private 
void 
BadSink 
( 
) 
{ 
double 
data 
= 
dataBad 
; 
{   	
IO"" 
."" 
	WriteLine"" 
("" 
("" 
long"" 
)"" 
data"" #
)""# $
;""$ %
}## 	
}$$ 
public'' 

override'' 
void'' 
Bad'' 
('' 
)'' 
{(( 
double)) 
data)) 
;)) 
data++ 
=++ 
IO++ 
.++ 
GetRandomDouble++ !
(++! "
)++" #
;++# $
dataBad,, 
=,, 
data,, 
;,, 
BadSink-- 
(-- 
)-- 
;-- 
}.. 
public11 

override11 
void11 
Good11 
(11 
)11 
{22 
GoodG2B33 
(33 
)33 
;33 
}44 
private66 
void66 
GoodG2BSink66 
(66 
)66 
{77 
double88 
data88 
=88 
dataGoodG2B88 !
;88! "
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
long;; 
);; 
data;; #
);;# $
;;;$ %
}<< 	
}== 
private@@ 
void@@ 
GoodG2B@@ 
(@@ 
)@@ 
{AA 
doubleBB 
dataBB 
;BB 
dataDD 
=DD 
$numDD 
;DD 
dataGoodG2BEE 
=EE 
dataEE 
;EE 
GoodG2BSinkFF 
(FF 
)FF 
;FF 
}GG 
}II 
}JJ ø
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_51a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $F
:CWE197_Numeric_Truncation_Error__double_random_to_long_51b B
.B C
BadSinkC J
(J K
dataK O
)Q R
;R S
} 
public"" 

override"" 
void"" 
Good"" 
("" 
)"" 
{## 
GoodG2B$$ 
($$ 
)$$ 
;$$ 
}%% 
private(( 
void(( 
GoodG2B(( 
((( 
)(( 
{)) 
double** 
data** 
;** 
data,, 
=,, 
$num,, 
;,, F
:CWE197_Numeric_Truncation_Error__double_random_to_long_51b-- B
.--B C
GoodG2BSink--C N
(--N O
data--O S
)--U V
;--V W
}.. 
}00 
}11 °	
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_51b @
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
double### )
data##* .
)##/ 0
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
long'' 
)'' 
data'' #
)''# $
;''$ %
}(( 	
})) 
}++ 
},, ø
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_52a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $F
:CWE197_Numeric_Truncation_Error__double_random_to_long_52b B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
double++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- F
:CWE197_Numeric_Truncation_Error__double_random_to_long_52b.. B
...B C
GoodG2BSink..C N
(..N O
data..O S
)..T U
;..U V
}// 
}11 
}22 ı
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_52b @
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ F
:CWE197_Numeric_Truncation_Error__double_random_to_long_52c B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" F
:CWE197_Numeric_Truncation_Error__double_random_to_long_52c## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' °	
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_52c @
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
long(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- ø
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_53a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $F
:CWE197_Numeric_Truncation_Error__double_random_to_long_53b B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
double++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- F
:CWE197_Numeric_Truncation_Error__double_random_to_long_53b.. B
...B C
GoodG2BSink..C N
(..N O
data..O S
)..T U
;..U V
}// 
}11 
}22 ı
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_53b @
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ F
:CWE197_Numeric_Truncation_Error__double_random_to_long_53c B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" F
:CWE197_Numeric_Truncation_Error__double_random_to_long_53c## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' ı
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_53c @
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ F
:CWE197_Numeric_Truncation_Error__double_random_to_long_53d B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" F
:CWE197_Numeric_Truncation_Error__double_random_to_long_53d## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' °	
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_53d @
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
long(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- ø
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_54a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $F
:CWE197_Numeric_Truncation_Error__double_random_to_long_54b B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
double++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- F
:CWE197_Numeric_Truncation_Error__double_random_to_long_54b.. B
...B C
GoodG2BSink..C N
(..N O
data..O S
)..T U
;..U V
}// 
}11 
}22 ı
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_54b @
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ F
:CWE197_Numeric_Truncation_Error__double_random_to_long_54c B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" F
:CWE197_Numeric_Truncation_Error__double_random_to_long_54c## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' ı
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_54c @
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ F
:CWE197_Numeric_Truncation_Error__double_random_to_long_54d B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" F
:CWE197_Numeric_Truncation_Error__double_random_to_long_54d## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' ı
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_54d @
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ F
:CWE197_Numeric_Truncation_Error__double_random_to_long_54e B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" F
:CWE197_Numeric_Truncation_Error__double_random_to_long_54e## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' °	
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_54e @
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
long(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- Ì
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_61a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
= F
:CWE197_Numeric_Truncation_Error__double_random_to_long_61b P
.P Q
	BadSourceQ Z
(Z [
)[ \
;\ ]
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
double++ 
data++ 
=++ F
:CWE197_Numeric_Truncation_Error__double_random_to_long_61b++ P
.++P Q
GoodG2BSource++Q ^
(++^ _
)++_ `
;++` a
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
long.. 
).. 
data.. #
)..# $
;..$ %
}// 	
}00 
}22 
}33 ˜
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_61b @
{ 
public 

static 
double 
	BadSource "
(" #
)# $
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
return 
data 
; 
}   
public%% 

static%% 
double%% 
GoodG2BSource%% &
(%%& '
)%%' (
{&& 
double'' 
data'' 
;'' 
data)) 
=)) 
$num)) 
;)) 
return** 
data** 
;** 
}++ 
}-- 
}.. √
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_66a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
double 
[ 
] 
	dataArray 
= 
new  
double! '
[' (
$num( )
]) *
;* +
	dataArray   
[   
$num   
]   
=   
data   
;   F
:CWE197_Numeric_Truncation_Error__double_random_to_long_66b!! B
.!!B C
BadSink!!C J
(!!J K
	dataArray!!K T
)!!V W
;!!W X
}"" 
public%% 

override%% 
void%% 
Good%% 
(%% 
)%% 
{&& 
GoodG2B'' 
('' 
)'' 
;'' 
}(( 
private++ 
static++ 
void++ 
GoodG2B++ 
(++  
)++  !
{,, 
double-- 
data-- 
;-- 
data// 
=// 
$num// 
;// 
double00 
[00 
]00 
	dataArray00 
=00 
new00  
double00! '
[00' (
$num00( )
]00) *
;00* +
	dataArray11 
[11 
$num11 
]11 
=11 
data11 
;11 F
:CWE197_Numeric_Truncation_Error__double_random_to_long_66b22 B
.22B C
GoodG2BSink22C N
(22N O
	dataArray22O X
)22Z [
;22[ \
}33 
}55 
}66 ˝
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_66b @
{ 
public 

static 
void 
BadSink 
( 
double %
[% &
]& '
	dataArray( 1
)2 3
{ 
double 
data 
= 
	dataArray 
[  
$num  !
]! "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
double%%# )
[%%) *
]%%* +
	dataArray%%, 5
)%%6 7
{&& 
double'' 
data'' 
='' 
	dataArray'' 
[''  
$num''  !
]''! "
;''" #
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
long** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// ¶
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_67a @
:A B
AbstractTestCaseC S
{ 
public 

class 
	Container 
{ 
public 
double 
containerOne "
;" #
} 
public 

override 
void 
Bad 
( 
) 
{   
double!! 
data!! 
;!! 
data## 
=## 
IO## 
.## 
GetRandomDouble## !
(##! "
)##" #
;### $
	Container$$ 
dataContainer$$ 
=$$  !
new$$" %
	Container$$& /
($$/ 0
)$$0 1
;$$1 2
dataContainer%% 
.%% 
containerOne%% "
=%%# $
data%%% )
;%%) *F
:CWE197_Numeric_Truncation_Error__double_random_to_long_67b&& B
.&&B C
BadSink&&C J
(&&J K
dataContainer&&K X
)&&Z [
;&&[ \
}'' 
public** 

override** 
void** 
Good** 
(** 
)** 
{++ 
GoodG2B,, 
(,, 
),, 
;,, 
}-- 
private00 
static00 
void00 
GoodG2B00 
(00  
)00  !
{11 
double22 
data22 
;22 
data44 
=44 
$num44 
;44 
	Container55 
dataContainer55 
=55  !
new55" %
	Container55& /
(55/ 0
)550 1
;551 2
dataContainer66 
.66 
containerOne66 "
=66# $
data66% )
;66) *F
:CWE197_Numeric_Truncation_Error__double_random_to_long_67b77 B
.77B C
GoodG2BSink77C N
(77N O
dataContainer77O \
)77^ _
;77_ `
}88 
}:: 
};; ˜
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_67b @
{ 
public 

static 
void 
BadSink 
( F
:CWE197_Numeric_Truncation_Error__double_random_to_long_67a Y
.Y Z
	ContainerZ c
dataContainerd q
)r s
{ 
double 
data 
= 
dataContainer #
.# $
containerOne$ 0
;0 1
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #F
:CWE197_Numeric_Truncation_Error__double_random_to_long_67a%%# ]
.%%] ^
	Container%%^ g
dataContainer%%h u
)%%v w
{&& 
double'' 
data'' 
='' 
dataContainer'' #
.''# $
containerOne''$ 0
;''0 1
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
long** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// ¢
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_68a @
:A B
AbstractTestCaseC S
{ 
public 

static 
double 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $F
:CWE197_Numeric_Truncation_Error__double_random_to_long_68b B
.B C
BadSinkC J
(J K
)K L
;L M
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
data,, 
=,, 
$num,, 
;,, F
:CWE197_Numeric_Truncation_Error__double_random_to_long_68b-- B
.--B C
GoodG2BSink--C N
(--N O
)--O P
;--P Q
}.. 
}00 
}11 Ø
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_68b @
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
double 
data 
= F
:CWE197_Numeric_Truncation_Error__double_random_to_long_68a P
.P Q
dataQ U
;U V
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
double&& 
data&& 
=&& F
:CWE197_Numeric_Truncation_Error__double_random_to_long_68a&& P
.&&P Q
data&&Q U
;&&U V
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
long)) 
))) 
data)) #
)))# $
;))$ %
}** 	
}++ 
}-- 
}.. ∑
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_71a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $F
:CWE197_Numeric_Truncation_Error__double_random_to_long_71b B
.B C
BadSinkC J
(J K
(K L
ObjectL R
)R S
dataS W
)Y Z
;Z [
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
double++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- F
:CWE197_Numeric_Truncation_Error__double_random_to_long_71b.. B
...B C
GoodG2BSink..C N
(..N O
(..O P
Object..P V
)..V W
data..W [
)..] ^
;..^ _
}// 
}11 
}22 …
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_71b @
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
double 
data 
= 
( 
double 
) 

dataObject (
;( )
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
double(( 
data(( 
=(( 
((( 
double(( 
)(( 

dataObject(( (
;((( )
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
long++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ◊
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_72a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
	Hashtable 
dataHashtable 
=  !
new" %
	Hashtable& /
(/ 0
$num0 1
)1 2
;2 3
dataHashtable   
.   
Add   
(   
$num   
,   
data   !
)  ! "
;  " #
dataHashtable!! 
.!! 
Add!! 
(!! 
$num!! 
,!! 
data!! !
)!!! "
;!!" #
dataHashtable"" 
."" 
Add"" 
("" 
$num"" 
,"" 
data"" !
)""! "
;""" #F
:CWE197_Numeric_Truncation_Error__double_random_to_long_72b## B
.##B C
BadSink##C J
(##J K
dataHashtable##K X
)##Z [
;##[ \
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
)'' 
{(( 
GoodG2B)) 
()) 
))) 
;)) 
}** 
private-- 
static-- 
void-- 
GoodG2B-- 
(--  
)--  !
{.. 
double// 
data// 
;// 
data11 
=11 
$num11 
;11 
	Hashtable22 
dataHashtable22 
=22  !
new22" %
	Hashtable22& /
(22/ 0
$num220 1
)221 2
;222 3
dataHashtable33 
.33 
Add33 
(33 
$num33 
,33 
data33 !
)33! "
;33" #
dataHashtable44 
.44 
Add44 
(44 
$num44 
,44 
data44 !
)44! "
;44" #
dataHashtable55 
.55 
Add55 
(55 
$num55 
,55 
data55 !
)55! "
;55" #F
:CWE197_Numeric_Truncation_Error__double_random_to_long_72b66 B
.66B C
GoodG2BSink66C N
(66N O
dataHashtable66O \
)66^ _
;66_ `
}77 
}99 
}:: ª
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_72b @
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
double 
data 
= 
( 
double 
) 
dataHashtable ,
[, -
$num- .
]. /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
double(( 
data(( 
=(( 
((( 
double(( 
)(( 
dataHashtable(( ,
[((, -
$num((- .
]((. /
;((/ 0
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
long++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 €
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_73a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $

LinkedList   
<   
double   
>   
dataLinkedList   )
=  * +
new  , /

LinkedList  0 :
<  : ;
double  ; A
>  A B
(  B C
)  C D
;  D E
dataLinkedList!! 
.!! 
AddLast!! 
(!! 
data!! #
)!!# $
;!!$ %
dataLinkedList"" 
."" 
AddLast"" 
("" 
data"" #
)""# $
;""$ %
dataLinkedList## 
.## 
AddLast## 
(## 
data## #
)### $
;##$ %F
:CWE197_Numeric_Truncation_Error__double_random_to_long_73b$$ B
.$$B C
BadSink$$C J
($$J K
dataLinkedList$$K Y
)$$[ \
;$$\ ]
}%% 
public(( 

override(( 
void(( 
Good(( 
((( 
)(( 
{)) 
GoodG2B** 
(** 
)** 
;** 
}++ 
private.. 
static.. 
void.. 
GoodG2B.. 
(..  
)..  !
{// 
double00 
data00 
;00 
data22 
=22 
$num22 
;22 

LinkedList33 
<33 
double33 
>33 
dataLinkedList33 )
=33* +
new33, /

LinkedList330 :
<33: ;
double33; A
>33A B
(33B C
)33C D
;33D E
dataLinkedList44 
.44 
AddLast44 
(44 
data44 #
)44# $
;44$ %
dataLinkedList55 
.55 
AddLast55 
(55 
data55 #
)55# $
;55$ %
dataLinkedList66 
.66 
AddLast66 
(66 
data66 #
)66# $
;66$ %F
:CWE197_Numeric_Truncation_Error__double_random_to_long_73b77 B
.77B C
GoodG2BSink77C N
(77N O
dataLinkedList77O ]
)77_ `
;77` a
}88 
}:: 
};; Á
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_73b @
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
double* 0
>0 1
dataLinkedList2 @
)A B
{ 
double 
data 
= 
dataLinkedList $
.$ %
Last% )
.) *
Value* /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
double&&. 4
>&&4 5
dataLinkedList&&6 D
)&&E F
{'' 
double(( 
data(( 
=(( 
dataLinkedList(( $
.(($ %
Last((% )
.(() *
Value((* /
;((/ 0
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
long++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 â
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_74a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $

Dictionary 
< 
int 
, 
double 
> 
dataDictionary -
=. /
new0 3

Dictionary4 >
<> ?
int? B
,B C
doubleC I
>I J
(J K
)K L
;L M
dataDictionary   
.   
Add   
(   
$num   
,   
data   "
)  " #
;  # $
dataDictionary!! 
.!! 
Add!! 
(!! 
$num!! 
,!! 
data!! "
)!!" #
;!!# $
dataDictionary"" 
."" 
Add"" 
("" 
$num"" 
,"" 
data"" "
)""" #
;""# $F
:CWE197_Numeric_Truncation_Error__double_random_to_long_74b## B
.##B C
BadSink##C J
(##J K
dataDictionary##K Y
)##[ \
;##\ ]
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
)'' 
{(( 
GoodG2B)) 
()) 
))) 
;)) 
}** 
private-- 
static-- 
void-- 
GoodG2B-- 
(--  
)--  !
{.. 
double// 
data// 
;// 
data11 
=11 
$num11 
;11 

Dictionary22 
<22 
int22 
,22 
double22 
>22 
dataDictionary22 -
=22. /
new220 3

Dictionary224 >
<22> ?
int22? B
,22B C
double22C I
>22I J
(22J K
)22K L
;22L M
dataDictionary33 
.33 
Add33 
(33 
$num33 
,33 
data33 "
)33" #
;33# $
dataDictionary44 
.44 
Add44 
(44 
$num44 
,44 
data44 "
)44" #
;44# $
dataDictionary55 
.55 
Add55 
(55 
$num55 
,55 
data55 "
)55" #
;55# $F
:CWE197_Numeric_Truncation_Error__double_random_to_long_74b66 B
.66B C
GoodG2BSink66C N
(66N O
dataDictionary66O ]
)66_ `
;66` a
}77 
}99 
}:: Å
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_74b @
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
double. 4
>4 5
dataDictionary6 D
)E F
{ 
double 
data 
= 
dataDictionary $
[$ %
$num% &
]& '
;' (
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
double&&2 8
>&&8 9
dataDictionary&&: H
)&&I J
{'' 
double(( 
data(( 
=(( 
dataDictionary(( $
[(($ %
$num((% &
]((& '
;((' (
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
long++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 • 
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_75a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
IO   
.   
GetRandomDouble   !
(  ! "
)  " #
;  # $
byte"" 
["" 
]"" 
dataSerialized"" 
="" 
null""  $
;""$ %
try## 
{$$ 	
BinaryFormatter%% 
bf%% 
=%%  
new%%! $
BinaryFormatter%%% 4
(%%4 5
)%%5 6
;%%6 7
using&& 
(&& 
var&& 
ms&& 
=&& 
new&& 
MemoryStream&&  ,
(&&, -
)&&- .
)&&. /
{'' 
bf(( 
.(( 
	Serialize(( 
((( 
ms(( 
,((  
data((! %
)((% &
;((& '
dataSerialized)) 
=))  
ms))! #
.))# $
ToArray))$ +
())+ ,
))), -
;))- .
}** F
:CWE197_Numeric_Truncation_Error__double_random_to_long_75b++ F
.++F G
BadSink++G N
(++N O
dataSerialized++O ]
)++_ `
;++` a
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. X
,//X Y
exceptSerialize//Z i
)//i j
;//j k
}00 	
}11 
public44 

override44 
void44 
Good44 
(44 
)44 
{55 
GoodG2B66 
(66 
)66 
;66 
}77 
private:: 
static:: 
void:: 
GoodG2B:: 
(::  
)::  !
{;; 
double<< 
data<< 
;<< 
data>> 
=>> 
$num>> 
;>> 
byte@@ 
[@@ 
]@@ 
dataSerialized@@ 
=@@ 
null@@  $
;@@$ %
tryAA 
{BB 	
BinaryFormatterCC 
bfCC 
=CC  
newCC! $
BinaryFormatterCC% 4
(CC4 5
)CC5 6
;CC6 7
usingDD 
(DD 
varDD 
msDD 
=DD 
newDD 
MemoryStreamDD  ,
(DD, -
)DD- .
)DD. /
{EE 
bfFF 
.FF 
	SerializeFF 
(FF 
msFF 
,FF  
dataFF! %
)FF% &
;FF& '
dataSerializedGG 
=GG  
msGG! #
.GG# $
ToArrayGG$ +
(GG+ ,
)GG, -
;GG- .
}HH F
:CWE197_Numeric_Truncation_Error__double_random_to_long_75bII F
.IIF G
GoodG2BSinkIIG R
(IIR S
dataSerializedIIS a
)IIc d
;IId e
}JJ 	
catchKK 
(KK "
SerializationExceptionKK %
exceptSerializeKK& 5
)KK5 6
{LL 	
IOMM 
.MM 
LoggerMM 
.MM 
LogMM 
(MM 
NLogMM 
.MM 
LogLevelMM '
.MM' (
WarnMM( ,
,MM, -
$strMM. X
,MMX Y
exceptSerializeMMZ i
)MMi j
;MMj k
}NN 	
}OO 
}QQ 
}RR Á!
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_75b @
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
double   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
double&& 
)&& 
binForm&& &
.&&& '
Deserialize&&' 2
(&&2 3
	memStream&&3 <
)&&< =
;&&= >
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
long** "
)**" #
data**# '
)**' (
;**( )
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
double:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
double@@ 
)@@ 
binForm@@ &
.@@& '
Deserialize@@' 2
(@@2 3
	memStream@@3 <
)@@< =
;@@= >
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
longDD "
)DD" #
dataDD# '
)DD' (
;DD( )
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN „
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_long_81a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $J
>CWE197_Numeric_Truncation_Error__double_random_to_long_81_base F

baseObjectG Q
=R S
newT WJ
=CWE197_Numeric_Truncation_Error__double_random_to_long_81_bad	X ï
(
ï ñ
)
ñ ó
;
ó ò

baseObject   
.   
Action   
(   
data   
)    
;    !
}!! 
public$$ 

override$$ 
void$$ 
Good$$ 
($$ 
)$$ 
{%% 
GoodG2B&& 
(&& 
)&& 
;&& 
}'' 
private** 
void** 
GoodG2B** 
(** 
)** 
{++ 
double,, 
data,, 
;,, 
data.. 
=.. 
$num.. 
;.. J
>CWE197_Numeric_Truncation_Error__double_random_to_long_81_base// F

baseObject//G Q
=//R S
new//T WN
ACWE197_Numeric_Truncation_Error__double_random_to_long_81_goodG2B	//X ô
(
//ô ö
)
//ö õ
;
//õ ú

baseObject00 
.00 
Action00 
(00 
data00 
)00  
;00  !
}11 
}33 
}44 å
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__double_random_to_long_81_bad C
:D EK
>CWE197_Numeric_Truncation_Error__double_random_to_long_81_base	F Ñ
{ 
public 

override 
void 
Action 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" ˆ
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 J
>CWE197_Numeric_Truncation_Error__double_random_to_long_81_base M
{ 
public 

abstract 
void 
Action 
(  
double  &
data' +
), -
;- .
} 
} î
ƒC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_long_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class M
ACWE197_Numeric_Truncation_Error__double_random_to_long_81_goodG2B G
:H IK
>CWE197_Numeric_Truncation_Error__double_random_to_long_81_base	J à
{ 
public 

override 
void 
Action 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" Ì
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_short_01 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
{ 	
IO!! 
.!! 
	WriteLine!! 
(!! 
(!! 
short!! 
)!!  
data!!  $
)!!$ %
;!!% &
}"" 	
}## 
public&& 

override&& 
void&& 
Good&& 
(&& 
)&& 
{'' 
GoodG2B(( 
((( 
)(( 
;(( 
})) 
private,, 
void,, 
GoodG2B,, 
(,, 
),, 
{-- 
double.. 
data.. 
;.. 
data00 
=00 
$num00 
;00 
{11 	
IO33 
.33 
	WriteLine33 
(33 
(33 
short33 
)33  
data33  $
)33$ %
;33% &
}44 	
}55 
}77 
}88 ◊
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_short_02 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
true 
) 
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
false33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
short@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
trueHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` º
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_short_03 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
$num 
== 
$num 
) 
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
$num33 
!=33 
$num33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
short@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
$numHH 
==HH 
$numHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ó
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_short_04 @
:A B
AbstractTestCaseC S
{ 
private 
const 
bool 
PRIVATE_CONST_TRUE )
=* +
true, 0
;0 1
private 
const 
bool 
PRIVATE_CONST_FALSE *
=+ ,
false- 2
;2 3
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
double## 
data## 
;## 
if$$ 

($$ 
PRIVATE_CONST_TRUE$$ 
)$$ 
{%% 	
data'' 
='' 
IO'' 
.'' 
GetRandomDouble'' %
(''% &
)''& '
;''' (
}(( 	
else)) 
{** 	
data-- 
=-- 
$num-- 
;-- 
}.. 	
{// 	
IO11 
.11 
	WriteLine11 
(11 
(11 
short11 
)11  
data11  $
)11$ %
;11% &
}22 	
}33 
private77 
void77 
GoodG2B177 
(77 
)77 
{88 
double99 
data99 
;99 
if:: 

(:: 
PRIVATE_CONST_FALSE:: 
)::  
{;; 	
data>> 
=>> 
$num>> 
;>> 
}?? 	
else@@ 
{AA 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
privateLL 
voidLL 
GoodG2B2LL 
(LL 
)LL 
{MM 
doubleNN 
dataNN 
;NN 
ifOO 

(OO 
PRIVATE_CONST_TRUEOO 
)OO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
elseTT 
{UU 	
dataXX 
=XX 
$numXX 
;XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
short\\ 
)\\  
data\\  $
)\\$ %
;\\% &
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2B1bb 
(bb 
)bb 
;bb 
GoodG2B2cc 
(cc 
)cc 
;cc 
}dd 
}ff 
}gg Œ
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_short_05 @
:A B
AbstractTestCaseC S
{ 
private 
bool 
privateTrue 
= 
true #
;# $
private 
bool 
privateFalse 
= 
false  %
;% &
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
double## 
data## 
;## 
if$$ 

($$ 
privateTrue$$ 
)$$ 
{%% 	
data'' 
='' 
IO'' 
.'' 
GetRandomDouble'' %
(''% &
)''& '
;''' (
}(( 	
else)) 
{** 	
data-- 
=-- 
$num-- 
;-- 
}.. 	
{// 	
IO11 
.11 
	WriteLine11 
(11 
(11 
short11 
)11  
data11  $
)11$ %
;11% &
}22 	
}33 
private77 
void77 
GoodG2B177 
(77 
)77 
{88 
double99 
data99 
;99 
if:: 

(:: 
privateFalse:: 
):: 
{;; 	
data>> 
=>> 
$num>> 
;>> 
}?? 	
else@@ 
{AA 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
privateLL 
voidLL 
GoodG2B2LL 
(LL 
)LL 
{MM 
doubleNN 
dataNN 
;NN 
ifOO 

(OO 
privateTrueOO 
)OO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
elseTT 
{UU 	
dataXX 
=XX 
$numXX 
;XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
short\\ 
)\\  
data\\  $
)\\$ %
;\\% &
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2B1bb 
(bb 
)bb 
;bb 
GoodG2B2cc 
(cc 
)cc 
;cc 
}dd 
}ff 
}gg Ô
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_short_06 @
:A B
AbstractTestCaseC S
{ 
private 
const 
int 
PRIVATE_CONST_FIVE (
=) *
$num+ ,
;, -
public   

override   
void   
Bad   
(   
)   
{!! 
double"" 
data"" 
;"" 
if## 

(## 
PRIVATE_CONST_FIVE## 
==## !
$num##" #
)### $
{$$ 	
data&& 
=&& 
IO&& 
.&& 
GetRandomDouble&& %
(&&% &
)&&& '
;&&' (
}'' 	
else(( 
{)) 	
data,, 
=,, 
$num,, 
;,, 
}-- 	
{.. 	
IO00 
.00 
	WriteLine00 
(00 
(00 
short00 
)00  
data00  $
)00$ %
;00% &
}11 	
}22 
private66 
void66 
GoodG2B166 
(66 
)66 
{77 
double88 
data88 
;88 
if99 

(99 
PRIVATE_CONST_FIVE99 
!=99 !
$num99" #
)99# $
{:: 	
data== 
=== 
$num== 
;== 
}>> 	
else?? 
{@@ 	
dataBB 
=BB 
$numBB 
;BB 
}CC 	
{DD 	
IOFF 
.FF 
	WriteLineFF 
(FF 
(FF 
shortFF 
)FF  
dataFF  $
)FF$ %
;FF% &
}GG 	
}HH 
privateKK 
voidKK 
GoodG2B2KK 
(KK 
)KK 
{LL 
doubleMM 
dataMM 
;MM 
ifNN 

(NN 
PRIVATE_CONST_FIVENN 
==NN !
$numNN" #
)NN# $
{OO 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
elseSS 
{TT 	
dataWW 
=WW 
$numWW 
;WW 
}XX 	
{YY 	
IO[[ 
.[[ 
	WriteLine[[ 
([[ 
([[ 
short[[ 
)[[  
data[[  $
)[[$ %
;[[% &
}\\ 	
}]] 
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2B1aa 
(aa 
)aa 
;aa 
GoodG2B2bb 
(bb 
)bb 
;bb 
}cc 
}ee 
}ff ¿
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_short_07 @
:A B
AbstractTestCaseC S
{ 
private 
int 
privateFive 
= 
$num 
;  
public   

override   
void   
Bad   
(   
)   
{!! 
double"" 
data"" 
;"" 
if## 

(## 
privateFive## 
==## 
$num## 
)## 
{$$ 	
data&& 
=&& 
IO&& 
.&& 
GetRandomDouble&& %
(&&% &
)&&& '
;&&' (
}'' 	
else(( 
{)) 	
data,, 
=,, 
$num,, 
;,, 
}-- 	
{.. 	
IO00 
.00 
	WriteLine00 
(00 
(00 
short00 
)00  
data00  $
)00$ %
;00% &
}11 	
}22 
private66 
void66 
GoodG2B166 
(66 
)66 
{77 
double88 
data88 
;88 
if99 

(99 
privateFive99 
!=99 
$num99 
)99 
{:: 	
data== 
=== 
$num== 
;== 
}>> 	
else?? 
{@@ 	
dataBB 
=BB 
$numBB 
;BB 
}CC 	
{DD 	
IOFF 
.FF 
	WriteLineFF 
(FF 
(FF 
shortFF 
)FF  
dataFF  $
)FF$ %
;FF% &
}GG 	
}HH 
privateKK 
voidKK 
GoodG2B2KK 
(KK 
)KK 
{LL 
doubleMM 
dataMM 
;MM 
ifNN 

(NN 
privateFiveNN 
==NN 
$numNN 
)NN 
{OO 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
elseSS 
{TT 	
dataWW 
=WW 
$numWW 
;WW 
}XX 	
{YY 	
IO[[ 
.[[ 
	WriteLine[[ 
([[ 
([[ 
short[[ 
)[[  
data[[  $
)[[$ %
;[[% &
}\\ 	
}]] 
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2B1aa 
(aa 
)aa 
;aa 
GoodG2B2bb 
(bb 
)bb 
;bb 
}cc 
}ee 
}ff ı
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_short_08 @
:A B
AbstractTestCaseC S
{ 
private 
static 
bool 
PrivateReturnsTrue *
(* +
)+ ,
{ 
return 
true 
; 
}   
private"" 
static"" 
bool"" 
PrivateReturnsFalse"" +
(""+ ,
)"", -
{## 
return$$ 
false$$ 
;$$ 
}%% 
public(( 

override(( 
void(( 
Bad(( 
((( 
)(( 
{)) 
double** 
data** 
;** 
if++ 

(++ 
PrivateReturnsTrue++ 
(++ 
)++  
)++  !
{,, 	
data.. 
=.. 
IO.. 
... 
GetRandomDouble.. %
(..% &
)..& '
;..' (
}// 	
else00 
{11 	
data44 
=44 
$num44 
;44 
}55 	
{66 	
IO88 
.88 
	WriteLine88 
(88 
(88 
short88 
)88  
data88  $
)88$ %
;88% &
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
)>> 
{?? 
double@@ 
data@@ 
;@@ 
ifAA 

(AA 
PrivateReturnsFalseAA 
(AA  
)AA  !
)AA! "
{BB 	
dataEE 
=EE 
$numEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$numJJ 
;JJ 
}KK 	
{LL 	
IONN 
.NN 
	WriteLineNN 
(NN 
(NN 
shortNN 
)NN  
dataNN  $
)NN$ %
;NN% &
}OO 	
}PP 
privateSS 
voidSS 
GoodG2B2SS 
(SS 
)SS 
{TT 
doubleUU 
dataUU 
;UU 
ifVV 

(VV 
PrivateReturnsTrueVV 
(VV 
)VV  
)VV  !
{WW 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data__ 
=__ 
$num__ 
;__ 
}`` 	
{aa 	
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
shortcc 
)cc  
datacc  $
)cc$ %
;cc% &
}dd 	
}ee 
publicgg 

overridegg 
voidgg 
Goodgg 
(gg 
)gg 
{hh 
GoodG2B1ii 
(ii 
)ii 
;ii 
GoodG2B2jj 
(jj 
)jj 
;jj 
}kk 
}mm 
}nn ‰
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_short_09 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_TRUE #
)# $
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33 !
STATIC_READONLY_FALSE33 $
)33$ %
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
short@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH  
STATIC_READONLY_TRUEHH #
)HH# $
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ∆
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_short_10 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
. 

staticTrue 
) 
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33 
staticFalse33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
short@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 

staticTrueHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` µ
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_short_11 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
. 
StaticReturnsTrue  
(  !
)! "
)" #
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33 
StaticReturnsFalse33 !
(33! "
)33" #
)33# $
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
short@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 
StaticReturnsTrueHH  
(HH  !
)HH! "
)HH" #
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` Ø
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_short_12 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
. $
StaticReturnsTrueOrFalse '
(' (
)( )
)) *
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data%% 
=%% 
$num%% 
;%% 
}&& 	
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
short)) 
)))  
data))  $
)))$ %
;))% &
}** 	
}++ 
private00 
void00 
GoodG2B00 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33 $
StaticReturnsTrueOrFalse33 '
(33' (
)33( )
)33) *
{44 	
data66 
=66 
$num66 
;66 
}77 	
else88 
{99 	
data;; 
=;; 
$num;; 
;;; 
}<< 	
{== 	
IO?? 
.?? 
	WriteLine?? 
(?? 
(?? 
short?? 
)??  
data??  $
)??$ %
;??% &
}@@ 	
}AA 
publicCC 

overrideCC 
voidCC 
GoodCC 
(CC 
)CC 
{DD 
GoodG2BEE 
(EE 
)EE 
;EE 
}FF 
}HH 
}II …
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_short_13 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_FIVE #
==$ &
$num' (
)( )
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33  
STATIC_READONLY_FIVE33 #
!=33$ &
$num33' (
)33( )
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
short@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH  
STATIC_READONLY_FIVEHH #
==HH$ &
$numHH' (
)HH( )
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ´
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_short_14 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
if 

( 
IO 
. 

staticFive 
== 
$num 
) 
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
double22 
data22 
;22 
if33 

(33 
IO33 
.33 

staticFive33 
!=33 
$num33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
short@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
doubleGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 

staticFiveHH 
==HH 
$numHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` Ü
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_short_15 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
= 
$num 
; 
switch 
( 
$num 
) 
{ 	
case 
$num 
: 
data!! 
=!! 
IO!! 
.!! 
GetRandomDouble!! %
(!!% &
)!!& '
;!!' (
break"" 
;"" 
default## 
:## 
data&& 
=&& 
$num&& 
;&& 
break'' 
;'' 
}(( 	
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
private11 
void11 
GoodG2B111 
(11 
)11 
{22 
double33 
data33 
=33 
$num33 
;33 
switch44 
(44 
$num44 
)44 
{55 	
case66 
$num66 
:66 
data99 
=99 
$num99 
;99 
break:: 
;:: 
default;; 
:;; 
data== 
=== 
$num== 
;== 
break>> 
;>> 
}?? 	
{@@ 	
IOBB 
.BB 
	WriteLineBB 
(BB 
(BB 
shortBB 
)BB  
dataBB  $
)BB$ %
;BB% &
}CC 	
}DD 
privateGG 
voidGG 
GoodG2B2GG 
(GG 
)GG 
{HH 
doubleII 
dataII 
=II 
$numII 
;II 
switchJJ 
(JJ 
$numJJ 
)JJ 
{KK 	
caseLL 
$numLL 
:LL 
dataNN 
=NN 
$numNN 
;NN 
breakOO 
;OO 
defaultPP 
:PP 
dataSS 
=SS 
$numSS 
;SS 
breakTT 
;TT 
}UU 	
{VV 	
IOXX 
.XX 
	WriteLineXX 
(XX 
(XX 
shortXX 
)XX  
dataXX  $
)XX$ %
;XX% &
}YY 	
}ZZ 
public\\ 

override\\ 
void\\ 
Good\\ 
(\\ 
)\\ 
{]] 
GoodG2B1^^ 
(^^ 
)^^ 
;^^ 
GoodG2B2__ 
(__ 
)__ 
;__ 
}`` 
}bb 
}cc Û
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_short_16 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
while 
( 
true 
) 
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
break!! 
;!! 
}"" 	
{## 	
IO%% 
.%% 
	WriteLine%% 
(%% 
(%% 
short%% 
)%%  
data%%  $
)%%$ %
;%%% &
}&& 	
}'' 
private++ 
void++ 
GoodG2B++ 
(++ 
)++ 
{,, 
double-- 
data-- 
;-- 
while.. 
(.. 
true.. 
).. 
{// 	
data11 
=11 
$num11 
;11 
break22 
;22 
}33 	
{44 	
IO66 
.66 
	WriteLine66 
(66 
(66 
short66 
)66  
data66  $
)66$ %
;66% &
}77 	
}88 
public:: 

override:: 
void:: 
Good:: 
(:: 
):: 
{;; 
GoodG2B<< 
(<< 
)<< 
;<< 
}== 
}?? 
}@@ „
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_short_17 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
for 
( 
int 
i 
= 
$num 
; 
i 
< 
$num 
; 
i  
++  "
)" #
{   	
{!! 
IO## 
.## 
	WriteLine## 
(## 
(## 
short## #
)### $
data##$ (
)##( )
;##) *
}$$ 
}%% 	
}&& 
private++ 
void++ 
GoodG2B++ 
(++ 
)++ 
{,, 
double-- 
data-- 
;-- 
data// 
=// 
$num// 
;// 
for00 
(00 
int00 
i00 
=00 
$num00 
;00 
i00 
<00 
$num00 
;00 
i00  
++00  "
)00" #
{11 	
{22 
IO44 
.44 
	WriteLine44 
(44 
(44 
short44 #
)44# $
data44$ (
)44( )
;44) *
}55 
}66 	
}77 
public99 

override99 
void99 
Good99 
(99 
)99 
{:: 
GoodG2B;; 
(;; 
);; 
;;; 
}<< 
}>> 
}?? Ú"
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_short_21 @
:A B
AbstractTestCaseC S
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 

badPrivate   
=   
true   
;   
data!! 
=!! 

Bad_source!! 
(!! 
)!! 
;!! 
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
short$$ 
)$$  
data$$  $
)$$$ %
;$$% &
}%% 	
}&& 
private(( 
double(( 

Bad_source(( 
((( 
)(( 
{)) 
double** 
data** 
;** 
if++ 

(++ 

badPrivate++ 
)++ 
{,, 	
data.. 
=.. 
IO.. 
... 
GetRandomDouble.. %
(..% &
)..& '
;..' (
}// 	
else00 
{11 	
data44 
=44 
$num44 
;44 
}55 	
return66 
data66 
;66 
}77 
private:: 
bool:: 
goodG2B1_private:: !
=::" #
false::$ )
;::) *
private;; 
bool;; 
GoodG2B2_private;; !
=;;" #
false;;$ )
;;;) *
public== 

override== 
void== 
Good== 
(== 
)== 
{>> 
GoodG2B1?? 
(?? 
)?? 
;?? 
GoodG2B2@@ 
(@@ 
)@@ 
;@@ 
}AA 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
)DD 
{EE 
doubleFF 
dataFF 
;FF 
goodG2B1_privateGG 
=GG 
falseGG  
;GG  !
dataHH 
=HH 
GoodG2B1_sourceHH 
(HH 
)HH  
;HH  !
{II 	
IOKK 
.KK 
	WriteLineKK 
(KK 
(KK 
shortKK 
)KK  
dataKK  $
)KK$ %
;KK% &
}LL 	
}MM 
privateOO 
doubleOO 
GoodG2B1_sourceOO "
(OO" #
)OO# $
{PP 
doubleQQ 
dataQQ 
=QQ 
$numQQ 
;QQ 
ifRR 

(RR 
goodG2B1_privateRR 
)RR 
{SS 	
dataVV 
=VV 
$numVV 
;VV 
}WW 	
elseXX 
{YY 	
data[[ 
=[[ 
$num[[ 
;[[ 
}\\ 	
return]] 
data]] 
;]] 
}^^ 
privateaa 
voidaa 
GoodG2B2aa 
(aa 
)aa 
{bb 
doublecc 
datacc 
;cc 
GoodG2B2_privatedd 
=dd 
truedd 
;dd  
dataee 
=ee 
GoodG2B2_sourceee 
(ee 
)ee  
;ee  !
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
(hh 
shorthh 
)hh  
datahh  $
)hh$ %
;hh% &
}ii 	
}jj 
privatell 
doublell 
GoodG2B2_sourcell "
(ll" #
)ll# $
{mm 
doublenn 
datann 
=nn 
$numnn 
;nn 
ifoo 

(oo 
GoodG2B2_privateoo 
)oo 
{pp 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
returnzz 
datazz 
;zz 
}{{ 
}}} 
}~~ Ø
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_22a A
:B C
AbstractTestCaseD T
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! G
;CWE197_Numeric_Truncation_Error__double_random_to_short_22b!! J
.!!J K
	BadSource!!K T
(!!T U
)!!U V
;!!V W
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
short$$ 
)$$  
data$$  $
)$$$ %
;$$% &
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
double66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 G
;CWE197_Numeric_Truncation_Error__double_random_to_short_22b88 J
.88J K
GoodG2B1Source88K Y
(88Y Z
)88Z [
;88[ \
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
short;; 
);;  
data;;  $
);;$ %
;;;% &
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
doubleBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD G
;CWE197_Numeric_Truncation_Error__double_random_to_short_22bDD J
.DDJ K
GoodG2B2SourceDDK Y
(DDY Z
)DDZ [
;DD[ \
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
}KK 
}LL ›
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_22b A
{ 
public 

static 
double 
	BadSource "
(" #
)# $
{ 
double 
data 
; 
if 

( G
;CWE197_Numeric_Truncation_Error__double_random_to_short_22a G
.G H
badPublicStaticH W
)W X
{ 	
data   
=   
IO   
.   
GetRandomDouble   %
(  % &
)  & '
;  ' (
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
return(( 
data(( 
;(( 
})) 
public.. 

static.. 
double.. 
GoodG2B1Source.. '
(..' (
)..( )
{// 
double00 
data00 
;00 
if11 

(11 G
;CWE197_Numeric_Truncation_Error__double_random_to_short_22a11 G
.11G H 
goodG2B1PublicStatic11H \
)11\ ]
{22 	
data55 
=55 
$num55 
;55 
}66 	
else77 
{88 	
data:: 
=:: 
$num:: 
;:: 
};; 	
return<< 
data<< 
;<< 
}== 
public@@ 

static@@ 
double@@ 
GoodG2B2Source@@ '
(@@' (
)@@( )
{AA 
doubleBB 
dataBB 
;BB 
ifCC 

(CC G
;CWE197_Numeric_Truncation_Error__double_random_to_short_22aCC G
.CCG H 
GoodG2B2PublicStaticCCH \
)CC\ ]
{DD 	
dataFF 
=FF 
$numFF 
;FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
returnNN 
dataNN 
;NN 
}OO 
}QQ 
}RR ó
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_short_31 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
dataCopy 
; 
{ 	
double 
data 
; 
data!! 
=!! 
IO!! 
.!! 
GetRandomDouble!! %
(!!% &
)!!& '
;!!' (
dataCopy"" 
="" 
data"" 
;"" 
}## 	
{$$ 	
double%% 
data%% 
=%% 
dataCopy%% "
;%%" #
{&& 
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( #
)((# $
data(($ (
)((( )
;(() *
})) 
}** 	
}++ 
public.. 

override.. 
void.. 
Good.. 
(.. 
).. 
{// 
GoodG2B00 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B44 
(44 
)44 
{55 
double66 
dataCopy66 
;66 
{77 	
double88 
data88 
;88 
data:: 
=:: 
$num:: 
;:: 
dataCopy;; 
=;; 
data;; 
;;; 
}<< 	
{== 	
double>> 
data>> 
=>> 
dataCopy>> "
;>>" #
{?? 
IOAA 
.AA 
	WriteLineAA 
(AA 
(AA 
shortAA #
)AA# $
dataAA$ (
)AA( )
;AA) *
}BB 
}CC 	
}DD 
}FF 
}GG ï
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_short_41 @
:A B
AbstractTestCaseC S
{ 
private 
static 
void 
BadSink 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
double## 
data## 
;## 
data%% 
=%% 
IO%% 
.%% 
GetRandomDouble%% !
(%%! "
)%%" #
;%%# $
BadSink&& 
(&& 
data&& 
)&& 
;&& 
}'' 
public** 

override** 
void** 
Good** 
(** 
)** 
{++ 
GoodG2B,, 
(,, 
),, 
;,, 
}-- 
private// 
static// 
void// 
GoodG2BSink// #
(//# $
double//$ *
data//+ /
)//0 1
{00 
{11 	
IO33 
.33 
	WriteLine33 
(33 
(33 
short33 
)33  
data33  $
)33$ %
;33% &
}44 	
}55 
private88 
static88 
void88 
GoodG2B88 
(88  
)88  !
{99 
double:: 
data:: 
;:: 
data<< 
=<< 
$num<< 
;<< 
GoodG2BSink== 
(== 
data== 
)== 
;== 
}>> 
}@@ 
}AA Ö
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_short_42 @
:A B
AbstractTestCaseC S
{ 
private 
static 
double 
	BadSource #
(# $
)$ %
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
return 
data 
; 
} 
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
double$$ 
data$$ 
=$$ 
	BadSource$$ 
($$  
)$$  !
;$$! "
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
short'' 
)''  
data''  $
)''$ %
;''% &
}(( 	
})) 
private,, 
static,, 
double,, 
GoodG2BSource,, '
(,,' (
),,( )
{-- 
double.. 
data.. 
;.. 
data00 
=00 
$num00 
;00 
return11 
data11 
;11 
}22 
private55 
static55 
void55 
GoodG2B55 
(55  
)55  !
{66 
double77 
data77 
=77 
GoodG2BSource77 #
(77# $
)77$ %
;77% &
{88 	
IO:: 
.:: 
	WriteLine:: 
(:: 
(:: 
short:: 
)::  
data::  $
)::$ %
;::% &
};; 	
}<< 
public>> 

override>> 
void>> 
Good>> 
(>> 
)>> 
{?? 
GoodG2B@@ 
(@@ 
)@@ 
;@@ 
}AA 
}CC 
}DD À
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__double_random_to_short_45 @
:A B
AbstractTestCaseC S
{ 
private 
double 
dataBad 
; 
private 
double 
dataGoodG2B 
; 
private 
void 
BadSink 
( 
) 
{ 
double 
data 
= 
dataBad 
; 
{   	
IO"" 
."" 
	WriteLine"" 
("" 
("" 
short"" 
)""  
data""  $
)""$ %
;""% &
}## 	
}$$ 
public'' 

override'' 
void'' 
Bad'' 
('' 
)'' 
{(( 
double)) 
data)) 
;)) 
data++ 
=++ 
IO++ 
.++ 
GetRandomDouble++ !
(++! "
)++" #
;++# $
dataBad,, 
=,, 
data,, 
;,, 
BadSink-- 
(-- 
)-- 
;-- 
}.. 
public11 

override11 
void11 
Good11 
(11 
)11 
{22 
GoodG2B33 
(33 
)33 
;33 
}44 
private66 
void66 
GoodG2BSink66 
(66 
)66 
{77 
double88 
data88 
=88 
dataGoodG2B88 !
;88! "
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
short;; 
);;  
data;;  $
);;$ %
;;;% &
}<< 	
}== 
private@@ 
void@@ 
GoodG2B@@ 
(@@ 
)@@ 
{AA 
doubleBB 
dataBB 
;BB 
dataDD 
=DD 
$numDD 
;DD 
dataGoodG2BEE 
=EE 
dataEE 
;EE 
GoodG2BSinkFF 
(FF 
)FF 
;FF 
}GG 
}II 
}JJ √
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_51a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $G
;CWE197_Numeric_Truncation_Error__double_random_to_short_51b C
.C D
BadSinkD K
(K L
dataL P
)R S
;S T
} 
public"" 

override"" 
void"" 
Good"" 
("" 
)"" 
{## 
GoodG2B$$ 
($$ 
)$$ 
;$$ 
}%% 
private(( 
void(( 
GoodG2B(( 
((( 
)(( 
{)) 
double** 
data** 
;** 
data,, 
=,, 
$num,, 
;,, G
;CWE197_Numeric_Truncation_Error__double_random_to_short_51b-- C
.--C D
GoodG2BSink--D O
(--O P
data--P T
)--V W
;--W X
}.. 
}00 
}11 •	
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_51b A
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
double### )
data##* .
)##/ 0
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
short'' 
)''  
data''  $
)''$ %
;''% &
}(( 	
})) 
}++ 
},, √
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_52a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $G
;CWE197_Numeric_Truncation_Error__double_random_to_short_52b C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
double++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- G
;CWE197_Numeric_Truncation_Error__double_random_to_short_52b.. C
...C D
GoodG2BSink..D O
(..O P
data..P T
)..U V
;..V W
}// 
}11 
}22 ˘
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_52b A
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ G
;CWE197_Numeric_Truncation_Error__double_random_to_short_52c C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" G
;CWE197_Numeric_Truncation_Error__double_random_to_short_52c## C
.##C D
GoodG2BSink##D O
(##O P
data##P T
)##U V
;##V W
}$$ 
}&& 
}'' •	
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_52c A
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- √
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_53a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $G
;CWE197_Numeric_Truncation_Error__double_random_to_short_53b C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
double++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- G
;CWE197_Numeric_Truncation_Error__double_random_to_short_53b.. C
...C D
GoodG2BSink..D O
(..O P
data..P T
)..U V
;..V W
}// 
}11 
}22 ˘
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_53b A
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ G
;CWE197_Numeric_Truncation_Error__double_random_to_short_53c C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" G
;CWE197_Numeric_Truncation_Error__double_random_to_short_53c## C
.##C D
GoodG2BSink##D O
(##O P
data##P T
)##U V
;##V W
}$$ 
}&& 
}'' ˘
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_53c A
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ G
;CWE197_Numeric_Truncation_Error__double_random_to_short_53d C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" G
;CWE197_Numeric_Truncation_Error__double_random_to_short_53d## C
.##C D
GoodG2BSink##D O
(##O P
data##P T
)##U V
;##V W
}$$ 
}&& 
}'' •	
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_53d A
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- √
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_54a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $G
;CWE197_Numeric_Truncation_Error__double_random_to_short_54b C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
double++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- G
;CWE197_Numeric_Truncation_Error__double_random_to_short_54b.. C
...C D
GoodG2BSink..D O
(..O P
data..P T
)..U V
;..V W
}// 
}11 
}22 ˘
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_54b A
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ G
;CWE197_Numeric_Truncation_Error__double_random_to_short_54c C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" G
;CWE197_Numeric_Truncation_Error__double_random_to_short_54c## C
.##C D
GoodG2BSink##D O
(##O P
data##P T
)##U V
;##V W
}$$ 
}&& 
}'' ˘
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_54c A
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ G
;CWE197_Numeric_Truncation_Error__double_random_to_short_54d C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" G
;CWE197_Numeric_Truncation_Error__double_random_to_short_54d## C
.##C D
GoodG2BSink##D O
(##O P
data##P T
)##U V
;##V W
}$$ 
}&& 
}'' ˘
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_54d A
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ G
;CWE197_Numeric_Truncation_Error__double_random_to_short_54e C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
double!!# )
data!!* .
)!!/ 0
{"" G
;CWE197_Numeric_Truncation_Error__double_random_to_short_54e## C
.##C D
GoodG2BSink##D O
(##O P
data##P T
)##U V
;##V W
}$$ 
}&& 
}'' •	
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_54e A
{ 
public 

static 
void 
BadSink 
( 
double %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
double$$# )
data$$* .
)$$/ 0
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- Û
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_61a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
= G
;CWE197_Numeric_Truncation_Error__double_random_to_short_61b Q
.Q R
	BadSourceR [
([ \
)\ ]
;] ^
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
double++ 
data++ 
=++ G
;CWE197_Numeric_Truncation_Error__double_random_to_short_61b++ Q
.++Q R
GoodG2BSource++R _
(++_ `
)++` a
;++a b
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
short.. 
)..  
data..  $
)..$ %
;..% &
}// 	
}00 
}22 
}33 ˘
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_61b A
{ 
public 

static 
double 
	BadSource "
(" #
)# $
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
return 
data 
; 
}   
public%% 

static%% 
double%% 
GoodG2BSource%% &
(%%& '
)%%' (
{&& 
double'' 
data'' 
;'' 
data)) 
=)) 
$num)) 
;)) 
return** 
data** 
;** 
}++ 
}-- 
}.. «
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_66a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
double 
[ 
] 
	dataArray 
= 
new  
double! '
[' (
$num( )
]) *
;* +
	dataArray   
[   
$num   
]   
=   
data   
;   G
;CWE197_Numeric_Truncation_Error__double_random_to_short_66b!! C
.!!C D
BadSink!!D K
(!!K L
	dataArray!!L U
)!!W X
;!!X Y
}"" 
public%% 

override%% 
void%% 
Good%% 
(%% 
)%% 
{&& 
GoodG2B'' 
('' 
)'' 
;'' 
}(( 
private++ 
static++ 
void++ 
GoodG2B++ 
(++  
)++  !
{,, 
double-- 
data-- 
;-- 
data// 
=// 
$num// 
;// 
double00 
[00 
]00 
	dataArray00 
=00 
new00  
double00! '
[00' (
$num00( )
]00) *
;00* +
	dataArray11 
[11 
$num11 
]11 
=11 
data11 
;11 G
;CWE197_Numeric_Truncation_Error__double_random_to_short_66b22 C
.22C D
GoodG2BSink22D O
(22O P
	dataArray22P Y
)22[ \
;22\ ]
}33 
}55 
}66 Å
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_66b A
{ 
public 

static 
void 
BadSink 
( 
double %
[% &
]& '
	dataArray( 1
)2 3
{ 
double 
data 
= 
	dataArray 
[  
$num  !
]! "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
double%%# )
[%%) *
]%%* +
	dataArray%%, 5
)%%6 7
{&& 
double'' 
data'' 
='' 
	dataArray'' 
[''  
$num''  !
]''! "
;''" #
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
}.. 
}// ™
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_67a A
:B C
AbstractTestCaseD T
{ 
public 

class 
	Container 
{ 
public 
double 
containerOne "
;" #
} 
public 

override 
void 
Bad 
( 
) 
{   
double!! 
data!! 
;!! 
data## 
=## 
IO## 
.## 
GetRandomDouble## !
(##! "
)##" #
;### $
	Container$$ 
dataContainer$$ 
=$$  !
new$$" %
	Container$$& /
($$/ 0
)$$0 1
;$$1 2
dataContainer%% 
.%% 
containerOne%% "
=%%# $
data%%% )
;%%) *G
;CWE197_Numeric_Truncation_Error__double_random_to_short_67b&& C
.&&C D
BadSink&&D K
(&&K L
dataContainer&&L Y
)&&[ \
;&&\ ]
}'' 
public** 

override** 
void** 
Good** 
(** 
)** 
{++ 
GoodG2B,, 
(,, 
),, 
;,, 
}-- 
private00 
static00 
void00 
GoodG2B00 
(00  
)00  !
{11 
double22 
data22 
;22 
data44 
=44 
$num44 
;44 
	Container55 
dataContainer55 
=55  !
new55" %
	Container55& /
(55/ 0
)550 1
;551 2
dataContainer66 
.66 
containerOne66 "
=66# $
data66% )
;66) *G
;CWE197_Numeric_Truncation_Error__double_random_to_short_67b77 C
.77C D
GoodG2BSink77D O
(77O P
dataContainer77P ]
)77_ `
;77` a
}88 
}:: 
};; ˝
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_67b A
{ 
public 

static 
void 
BadSink 
( G
;CWE197_Numeric_Truncation_Error__double_random_to_short_67a Z
.Z [
	Container[ d
dataContainere r
)s t
{ 
double 
data 
= 
dataContainer #
.# $
containerOne$ 0
;0 1
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #G
;CWE197_Numeric_Truncation_Error__double_random_to_short_67a%%# ^
.%%^ _
	Container%%_ h
dataContainer%%i v
)%%w x
{&& 
double'' 
data'' 
='' 
dataContainer'' #
.''# $
containerOne''$ 0
;''0 1
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
}.. 
}// ¶
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_68a A
:B C
AbstractTestCaseD T
{ 
public 

static 
double 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $G
;CWE197_Numeric_Truncation_Error__double_random_to_short_68b C
.C D
BadSinkD K
(K L
)L M
;M N
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
data,, 
=,, 
$num,, 
;,, G
;CWE197_Numeric_Truncation_Error__double_random_to_short_68b-- C
.--C D
GoodG2BSink--D O
(--O P
)--P Q
;--Q R
}.. 
}00 
}11 µ
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_68b A
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
double 
data 
= G
;CWE197_Numeric_Truncation_Error__double_random_to_short_68a Q
.Q R
dataR V
;V W
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
double&& 
data&& 
=&& G
;CWE197_Numeric_Truncation_Error__double_random_to_short_68a&& Q
.&&Q R
data&&R V
;&&V W
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
short)) 
)))  
data))  $
)))$ %
;))% &
}** 	
}++ 
}-- 
}.. ª
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_71a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $G
;CWE197_Numeric_Truncation_Error__double_random_to_short_71b C
.C D
BadSinkD K
(K L
(L M
ObjectM S
)S T
dataT X
)Z [
;[ \
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
double++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- G
;CWE197_Numeric_Truncation_Error__double_random_to_short_71b.. C
...C D
GoodG2BSink..D O
(..O P
(..P Q
Object..Q W
)..W X
data..X \
)..^ _
;.._ `
}// 
}11 
}22 Õ
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_71b A
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
double 
data 
= 
( 
double 
) 

dataObject (
;( )
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
double(( 
data(( 
=(( 
((( 
double(( 
)(( 

dataObject(( (
;((( )
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 €
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_72a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $
	Hashtable 
dataHashtable 
=  !
new" %
	Hashtable& /
(/ 0
$num0 1
)1 2
;2 3
dataHashtable   
.   
Add   
(   
$num   
,   
data   !
)  ! "
;  " #
dataHashtable!! 
.!! 
Add!! 
(!! 
$num!! 
,!! 
data!! !
)!!! "
;!!" #
dataHashtable"" 
."" 
Add"" 
("" 
$num"" 
,"" 
data"" !
)""! "
;""" #G
;CWE197_Numeric_Truncation_Error__double_random_to_short_72b## C
.##C D
BadSink##D K
(##K L
dataHashtable##L Y
)##[ \
;##\ ]
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
)'' 
{(( 
GoodG2B)) 
()) 
))) 
;)) 
}** 
private-- 
static-- 
void-- 
GoodG2B-- 
(--  
)--  !
{.. 
double// 
data// 
;// 
data11 
=11 
$num11 
;11 
	Hashtable22 
dataHashtable22 
=22  !
new22" %
	Hashtable22& /
(22/ 0
$num220 1
)221 2
;222 3
dataHashtable33 
.33 
Add33 
(33 
$num33 
,33 
data33 !
)33! "
;33" #
dataHashtable44 
.44 
Add44 
(44 
$num44 
,44 
data44 !
)44! "
;44" #
dataHashtable55 
.55 
Add55 
(55 
$num55 
,55 
data55 !
)55! "
;55" #G
;CWE197_Numeric_Truncation_Error__double_random_to_short_72b66 C
.66C D
GoodG2BSink66D O
(66O P
dataHashtable66P ]
)66_ `
;66` a
}77 
}99 
}:: ø
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_72b A
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
double 
data 
= 
( 
double 
) 
dataHashtable ,
[, -
$num- .
]. /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
double(( 
data(( 
=(( 
((( 
double(( 
)(( 
dataHashtable(( ,
[((, -
$num((- .
]((. /
;((/ 0
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ﬂ
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_73a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $

LinkedList   
<   
double   
>   
dataLinkedList   )
=  * +
new  , /

LinkedList  0 :
<  : ;
double  ; A
>  A B
(  B C
)  C D
;  D E
dataLinkedList!! 
.!! 
AddLast!! 
(!! 
data!! #
)!!# $
;!!$ %
dataLinkedList"" 
."" 
AddLast"" 
("" 
data"" #
)""# $
;""$ %
dataLinkedList## 
.## 
AddLast## 
(## 
data## #
)### $
;##$ %G
;CWE197_Numeric_Truncation_Error__double_random_to_short_73b$$ C
.$$C D
BadSink$$D K
($$K L
dataLinkedList$$L Z
)$$\ ]
;$$] ^
}%% 
public(( 

override(( 
void(( 
Good(( 
((( 
)(( 
{)) 
GoodG2B** 
(** 
)** 
;** 
}++ 
private.. 
static.. 
void.. 
GoodG2B.. 
(..  
)..  !
{// 
double00 
data00 
;00 
data22 
=22 
$num22 
;22 

LinkedList33 
<33 
double33 
>33 
dataLinkedList33 )
=33* +
new33, /

LinkedList330 :
<33: ;
double33; A
>33A B
(33B C
)33C D
;33D E
dataLinkedList44 
.44 
AddLast44 
(44 
data44 #
)44# $
;44$ %
dataLinkedList55 
.55 
AddLast55 
(55 
data55 #
)55# $
;55$ %
dataLinkedList66 
.66 
AddLast66 
(66 
data66 #
)66# $
;66$ %G
;CWE197_Numeric_Truncation_Error__double_random_to_short_73b77 C
.77C D
GoodG2BSink77D O
(77O P
dataLinkedList77P ^
)77` a
;77a b
}88 
}:: 
};; Î
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_73b A
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
double* 0
>0 1
dataLinkedList2 @
)A B
{ 
double 
data 
= 
dataLinkedList $
.$ %
Last% )
.) *
Value* /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
double&&. 4
>&&4 5
dataLinkedList&&6 D
)&&E F
{'' 
double(( 
data(( 
=(( 
dataLinkedList(( $
.(($ %
Last((% )
.(() *
Value((* /
;((/ 0
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ç
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_74a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $

Dictionary 
< 
int 
, 
double 
> 
dataDictionary -
=. /
new0 3

Dictionary4 >
<> ?
int? B
,B C
doubleC I
>I J
(J K
)K L
;L M
dataDictionary   
.   
Add   
(   
$num   
,   
data   "
)  " #
;  # $
dataDictionary!! 
.!! 
Add!! 
(!! 
$num!! 
,!! 
data!! "
)!!" #
;!!# $
dataDictionary"" 
."" 
Add"" 
("" 
$num"" 
,"" 
data"" "
)""" #
;""# $G
;CWE197_Numeric_Truncation_Error__double_random_to_short_74b## C
.##C D
BadSink##D K
(##K L
dataDictionary##L Z
)##\ ]
;##] ^
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
)'' 
{(( 
GoodG2B)) 
()) 
))) 
;)) 
}** 
private-- 
static-- 
void-- 
GoodG2B-- 
(--  
)--  !
{.. 
double// 
data// 
;// 
data11 
=11 
$num11 
;11 

Dictionary22 
<22 
int22 
,22 
double22 
>22 
dataDictionary22 -
=22. /
new220 3

Dictionary224 >
<22> ?
int22? B
,22B C
double22C I
>22I J
(22J K
)22K L
;22L M
dataDictionary33 
.33 
Add33 
(33 
$num33 
,33 
data33 "
)33" #
;33# $
dataDictionary44 
.44 
Add44 
(44 
$num44 
,44 
data44 "
)44" #
;44# $
dataDictionary55 
.55 
Add55 
(55 
$num55 
,55 
data55 "
)55" #
;55# $G
;CWE197_Numeric_Truncation_Error__double_random_to_short_74b66 C
.66C D
GoodG2BSink66D O
(66O P
dataDictionary66P ^
)66` a
;66a b
}77 
}99 
}:: Ö
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_74b A
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
double. 4
>4 5
dataDictionary6 D
)E F
{ 
double 
data 
= 
dataDictionary $
[$ %
$num% &
]& '
;' (
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
double&&2 8
>&&8 9
dataDictionary&&: H
)&&I J
{'' 
double(( 
data(( 
=(( 
dataDictionary(( $
[(($ %
$num((% &
]((& '
;((' (
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 © 
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_75a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data   
=   
IO   
.   
GetRandomDouble   !
(  ! "
)  " #
;  # $
byte"" 
["" 
]"" 
dataSerialized"" 
="" 
null""  $
;""$ %
try## 
{$$ 	
BinaryFormatter%% 
bf%% 
=%%  
new%%! $
BinaryFormatter%%% 4
(%%4 5
)%%5 6
;%%6 7
using&& 
(&& 
var&& 
ms&& 
=&& 
new&& 
MemoryStream&&  ,
(&&, -
)&&- .
)&&. /
{'' 
bf(( 
.(( 
	Serialize(( 
((( 
ms(( 
,((  
data((! %
)((% &
;((& '
dataSerialized)) 
=))  
ms))! #
.))# $
ToArray))$ +
())+ ,
))), -
;))- .
}** G
;CWE197_Numeric_Truncation_Error__double_random_to_short_75b++ G
.++G H
BadSink++H O
(++O P
dataSerialized++P ^
)++` a
;++a b
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. X
,//X Y
exceptSerialize//Z i
)//i j
;//j k
}00 	
}11 
public44 

override44 
void44 
Good44 
(44 
)44 
{55 
GoodG2B66 
(66 
)66 
;66 
}77 
private:: 
static:: 
void:: 
GoodG2B:: 
(::  
)::  !
{;; 
double<< 
data<< 
;<< 
data>> 
=>> 
$num>> 
;>> 
byte@@ 
[@@ 
]@@ 
dataSerialized@@ 
=@@ 
null@@  $
;@@$ %
tryAA 
{BB 	
BinaryFormatterCC 
bfCC 
=CC  
newCC! $
BinaryFormatterCC% 4
(CC4 5
)CC5 6
;CC6 7
usingDD 
(DD 
varDD 
msDD 
=DD 
newDD 
MemoryStreamDD  ,
(DD, -
)DD- .
)DD. /
{EE 
bfFF 
.FF 
	SerializeFF 
(FF 
msFF 
,FF  
dataFF! %
)FF% &
;FF& '
dataSerializedGG 
=GG  
msGG! #
.GG# $
ToArrayGG$ +
(GG+ ,
)GG, -
;GG- .
}HH G
;CWE197_Numeric_Truncation_Error__double_random_to_short_75bII G
.IIG H
GoodG2BSinkIIH S
(IIS T
dataSerializedIIT b
)IId e
;IIe f
}JJ 	
catchKK 
(KK "
SerializationExceptionKK %
exceptSerializeKK& 5
)KK5 6
{LL 	
IOMM 
.MM 
LoggerMM 
.MM 
LogMM 
(MM 
NLogMM 
.MM 
LogLevelMM '
.MM' (
WarnMM( ,
,MM, -
$strMM. X
,MMX Y
exceptSerializeMMZ i
)MMi j
;MMj k
}NN 	
}OO 
}QQ 
}RR Î!
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_75b A
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
double   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
double&& 
)&& 
binForm&& &
.&&& '
Deserialize&&' 2
(&&2 3
	memStream&&3 <
)&&< =
;&&= >
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
short** #
)**# $
data**$ (
)**( )
;**) *
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
double:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
double@@ 
)@@ 
binForm@@ &
.@@& '
Deserialize@@' 2
(@@2 3
	memStream@@3 <
)@@< =
;@@= >
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
shortDD #
)DD# $
dataDD$ (
)DD( )
;DD) *
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN È
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__double_random_to_short_81a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
double 
data 
; 
data 
= 
IO 
. 
GetRandomDouble !
(! "
)" #
;# $K
?CWE197_Numeric_Truncation_Error__double_random_to_short_81_base G

baseObjectH R
=S T
newU XK
>CWE197_Numeric_Truncation_Error__double_random_to_short_81_bad	Y ó
(
ó ò
)
ò ô
;
ô ö

baseObject   
.   
Action   
(   
data   
)    
;    !
}!! 
public$$ 

override$$ 
void$$ 
Good$$ 
($$ 
)$$ 
{%% 
GoodG2B&& 
(&& 
)&& 
;&& 
}'' 
private** 
void** 
GoodG2B** 
(** 
)** 
{++ 
double,, 
data,, 
;,, 
data.. 
=.. 
$num.. 
;.. K
?CWE197_Numeric_Truncation_Error__double_random_to_short_81_base// G

baseObject//H R
=//S T
new//U XO
BCWE197_Numeric_Truncation_Error__double_random_to_short_81_goodG2B	//Y õ
(
//õ ú
)
//ú ù
;
//ù û

baseObject00 
.00 
Action00 
(00 
data00 
)00  
;00  !
}11 
}33 
}44 ê
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__double_random_to_short_81_bad D
:E FL
?CWE197_Numeric_Truncation_Error__double_random_to_short_81_base	G Ü
{ 
public 

override 
void 
Action 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
}!! 
}"" ¯
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 K
?CWE197_Numeric_Truncation_Error__double_random_to_short_81_base N
{ 
public 

abstract 
void 
Action 
(  
double  &
data' +
), -
;- .
} 
} ò
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__double_random_to_short_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class N
BCWE197_Numeric_Truncation_Error__double_random_to_short_81_goodG2B H
:I JL
?CWE197_Numeric_Truncation_Error__double_random_to_short_81_base	K ä
{ 
public 

override 
void 
Action 
(  
double  &
data' +
), -
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
}!! 
}"" ‡'
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_01 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
byte\\ 
)\\ 
data\\ #
)\\# $
;\\$ %
}]] 	
}^^ 
publicaa 

overrideaa 
voidaa 
Goodaa 
(aa 
)aa 
{bb 
GoodG2Bcc 
(cc 
)cc 
;cc 
}dd 
privategg 
voidgg 
GoodG2Bgg 
(gg 
)gg 
{hh 
floatii 
dataii 
;ii 
datakk 
=kk 
$numkk 
;kk 
{ll 	
IOnn 
.nn 
	WriteLinenn 
(nn 
(nn 
bytenn 
)nn 
datann #
)nn# $
;nn$ %
}oo 	
}pp 
}rr 
}ss ∫1
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_02 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if   

(   
true   
)   
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
byteee 
)ee 
dataee #
)ee# $
;ee$ %
}ff 	
}gg 
privatekk 
voidkk 
GoodG2B1kk 
(kk 
)kk 
{ll 
floatmm 
datamm 
;mm 
ifnn 

(nn 
falsenn 
)nn 
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
byte{{ 
){{ 
data{{ #
){{# $
;{{$ %
}|| 	
}}} 
private
ÄÄ 
void
ÄÄ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
float
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ 
true
ÉÉ 
)
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
else
àà 
{
ââ 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
byte
êê 
)
êê 
data
êê #
)
êê# $
;
êê$ %
}
ëë 	
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
)
îî 
{
ïï 
GoodG2B1
ññ 
(
ññ 
)
ññ 
;
ññ 
GoodG2B2
óó 
(
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ £2
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_03 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if   

(   
$num   
==   
$num   
)   
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
byteee 
)ee 
dataee #
)ee# $
;ee$ %
}ff 	
}gg 
privatekk 
voidkk 
GoodG2B1kk 
(kk 
)kk 
{ll 
floatmm 
datamm 
;mm 
ifnn 

(nn 
$numnn 
!=nn 
$numnn 
)nn 
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
byte{{ 
){{ 
data{{ #
){{# $
;{{$ %
}|| 	
}}} 
private
ÄÄ 
void
ÄÄ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
float
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ 
$num
ÉÉ 
==
ÉÉ 
$num
ÉÉ 
)
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
else
àà 
{
ââ 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
byte
êê 
)
êê 
data
êê #
)
êê# $
;
êê$ %
}
ëë 	
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
)
îî 
{
ïï 
GoodG2B1
ññ 
(
ññ 
)
ññ 
;
ññ 
GoodG2B2
óó 
(
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ î4
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_04 C
:D E
AbstractTestCaseF V
{ 
private   
const   
bool   
PRIVATE_CONST_TRUE   )
=  * +
true  , 0
;  0 1
private!! 
const!! 
bool!! 
PRIVATE_CONST_FALSE!! *
=!!+ ,
false!!- 2
;!!2 3
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
float&& 
data&& 
;&& 
if'' 

('' 
PRIVATE_CONST_TRUE'' 
)'' 
{(( 	
data)) 
=)) 
float)) 
.)) 
MinValue)) !
;))! "
{++ 
	TcpClient,, 
tcpConn,, !
=,," #
null,,$ (
;,,( )
StreamReader-- 
sr-- 
=--  !
null--" &
;--& '
try.. 
{// 
tcpConn11 
=11 
new11 !
	TcpClient11" +
(11+ ,
$str11, >
,11> ?
$num11@ E
)11E F
;11F G
sr33 
=33 
new33 
StreamReader33 )
(33) *
tcpConn33* 1
.331 2
	GetStream332 ;
(33; <
)33< =
)33= >
;33> ?
string55 
stringNumber55 '
=55( )
sr55* ,
.55, -
ReadLine55- 5
(555 6
)556 7
;557 8
if66 
(66 
stringNumber66 $
!=66% '
null66( ,
)66, -
{77 
try88 
{99 
data::  
=::! "
float::# (
.::( )
Parse::) .
(::. /
stringNumber::/ ;
.::; <
Trim::< @
(::@ A
)::A B
)::B C
;::C D
};; 
catch<< 
(<< 
FormatException<< -
exceptNumberFormat<<. @
)<<@ A
{== 
IO>> 
.>> 
Logger>> %
.>>% &
Log>>& )
(>>) *
NLog>>* .
.>>. /
LogLevel>>/ 7
.>>7 8
Warn>>8 <
,>>< =
exceptNumberFormat>>> P
,>>P Q
$str	>>R Ñ
)
>>Ñ Ö
;
>>Ö Ü
}?? 
}@@ 
}AA 
catchBB 
(BB 
IOExceptionBB "
exceptIOBB# +
)BB+ ,
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
exceptIODD6 >
,DD> ?
$strDD@ [
)DD[ \
;DD\ ]
}EE 
finallyFF 
{GG 
tryII 
{JJ 
ifKK 
(KK 
srKK 
!=KK !
nullKK" &
)KK& '
{LL 
srMM 
.MM 
CloseMM $
(MM$ %
)MM% &
;MM& '
}NN 
}OO 
catchPP 
(PP 
IOExceptionPP &
exceptIOPP' /
)PP/ 0
{QQ 
IORR 
.RR 
LoggerRR !
.RR! "
LogRR" %
(RR% &
NLogRR& *
.RR* +
LogLevelRR+ 3
.RR3 4
WarnRR4 8
,RR8 9
exceptIORR: B
,RRB C
$strRRD e
)RRe f
;RRf g
}SS 
tryVV 
{WW 
ifXX 
(XX 
tcpConnXX #
!=XX$ &
nullXX' +
)XX+ ,
{YY 
tcpConnZZ #
.ZZ# $
CloseZZ$ )
(ZZ) *
)ZZ* +
;ZZ+ ,
}[[ 
}\\ 
catch]] 
(]] 
IOException]] &
exceptIO]]' /
)]]/ 0
{^^ 
IO__ 
.__ 
Logger__ !
.__! "
Log__" %
(__% &
NLog__& *
.__* +
LogLevel__+ 3
.__3 4
Warn__4 8
,__8 9
exceptIO__: B
,__B C
$str__D Z
)__Z [
;__[ \
}`` 
}aa 
}bb 
}cc 	
elsedd 
{ee 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
{jj 	
IOll 
.ll 
	WriteLinell 
(ll 
(ll 
bytell 
)ll 
datall #
)ll# $
;ll$ %
}mm 	
}nn 
privaterr 
voidrr 
GoodG2B1rr 
(rr 
)rr 
{ss 
floattt 
datatt 
;tt 
ifuu 

(uu 
PRIVATE_CONST_FALSEuu 
)uu  
{vv 	
datayy 
=yy 
$numyy 
;yy 
}zz 	
else{{ 
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
byte
ÇÇ 
)
ÇÇ 
data
ÇÇ #
)
ÇÇ# $
;
ÇÇ$ %
}
ÉÉ 	
}
ÑÑ 
private
áá 
void
áá 
GoodG2B2
áá 
(
áá 
)
áá 
{
àà 
float
ââ 
data
ââ 
;
ââ 
if
ää 

(
ää  
PRIVATE_CONST_TRUE
ää 
)
ää 
{
ãã 	
data
çç 
=
çç 
$num
çç 
;
çç 
}
éé 	
else
èè 
{
êê 	
data
ìì 
=
ìì 
$num
ìì 
;
ìì 
}
îî 	
{
ïï 	
IO
óó 
.
óó 
	WriteLine
óó 
(
óó 
(
óó 
byte
óó 
)
óó 
data
óó #
)
óó# $
;
óó$ %
}
òò 	
}
ôô 
public
õõ 

override
õõ 
void
õõ 
Good
õõ 
(
õõ 
)
õõ 
{
úú 
GoodG2B1
ùù 
(
ùù 
)
ùù 
;
ùù 
GoodG2B2
ûû 
(
ûû 
)
ûû 
;
ûû 
}
üü 
}°° 
}¢¢ À3
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_05 C
:D E
AbstractTestCaseF V
{ 
private   
bool   
privateTrue   
=   
true   #
;  # $
private!! 
bool!! 
privateFalse!! 
=!! 
false!!  %
;!!% &
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
float&& 
data&& 
;&& 
if'' 

('' 
privateTrue'' 
)'' 
{(( 	
data)) 
=)) 
float)) 
.)) 
MinValue)) !
;))! "
{++ 
	TcpClient,, 
tcpConn,, !
=,," #
null,,$ (
;,,( )
StreamReader-- 
sr-- 
=--  !
null--" &
;--& '
try.. 
{// 
tcpConn11 
=11 
new11 !
	TcpClient11" +
(11+ ,
$str11, >
,11> ?
$num11@ E
)11E F
;11F G
sr33 
=33 
new33 
StreamReader33 )
(33) *
tcpConn33* 1
.331 2
	GetStream332 ;
(33; <
)33< =
)33= >
;33> ?
string55 
stringNumber55 '
=55( )
sr55* ,
.55, -
ReadLine55- 5
(555 6
)556 7
;557 8
if66 
(66 
stringNumber66 $
!=66% '
null66( ,
)66, -
{77 
try88 
{99 
data::  
=::! "
float::# (
.::( )
Parse::) .
(::. /
stringNumber::/ ;
.::; <
Trim::< @
(::@ A
)::A B
)::B C
;::C D
};; 
catch<< 
(<< 
FormatException<< -
exceptNumberFormat<<. @
)<<@ A
{== 
IO>> 
.>> 
Logger>> %
.>>% &
Log>>& )
(>>) *
NLog>>* .
.>>. /
LogLevel>>/ 7
.>>7 8
Warn>>8 <
,>>< =
exceptNumberFormat>>> P
,>>P Q
$str	>>R Ñ
)
>>Ñ Ö
;
>>Ö Ü
}?? 
}@@ 
}AA 
catchBB 
(BB 
IOExceptionBB "
exceptIOBB# +
)BB+ ,
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
exceptIODD6 >
,DD> ?
$strDD@ [
)DD[ \
;DD\ ]
}EE 
finallyFF 
{GG 
tryII 
{JJ 
ifKK 
(KK 
srKK 
!=KK !
nullKK" &
)KK& '
{LL 
srMM 
.MM 
CloseMM $
(MM$ %
)MM% &
;MM& '
}NN 
}OO 
catchPP 
(PP 
IOExceptionPP &
exceptIOPP' /
)PP/ 0
{QQ 
IORR 
.RR 
LoggerRR !
.RR! "
LogRR" %
(RR% &
NLogRR& *
.RR* +
LogLevelRR+ 3
.RR3 4
WarnRR4 8
,RR8 9
exceptIORR: B
,RRB C
$strRRD e
)RRe f
;RRf g
}SS 
tryVV 
{WW 
ifXX 
(XX 
tcpConnXX #
!=XX$ &
nullXX' +
)XX+ ,
{YY 
tcpConnZZ #
.ZZ# $
CloseZZ$ )
(ZZ) *
)ZZ* +
;ZZ+ ,
}[[ 
}\\ 
catch]] 
(]] 
IOException]] &
exceptIO]]' /
)]]/ 0
{^^ 
IO__ 
.__ 
Logger__ !
.__! "
Log__" %
(__% &
NLog__& *
.__* +
LogLevel__+ 3
.__3 4
Warn__4 8
,__8 9
exceptIO__: B
,__B C
$str__D Z
)__Z [
;__[ \
}`` 
}aa 
}bb 
}cc 	
elsedd 
{ee 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
{jj 	
IOll 
.ll 
	WriteLinell 
(ll 
(ll 
bytell 
)ll 
datall #
)ll# $
;ll$ %
}mm 	
}nn 
privaterr 
voidrr 
GoodG2B1rr 
(rr 
)rr 
{ss 
floattt 
datatt 
;tt 
ifuu 

(uu 
privateFalseuu 
)uu 
{vv 	
datayy 
=yy 
$numyy 
;yy 
}zz 	
else{{ 
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
byte
ÇÇ 
)
ÇÇ 
data
ÇÇ #
)
ÇÇ# $
;
ÇÇ$ %
}
ÉÉ 	
}
ÑÑ 
private
áá 
void
áá 
GoodG2B2
áá 
(
áá 
)
áá 
{
àà 
float
ââ 
data
ââ 
;
ââ 
if
ää 

(
ää 
privateTrue
ää 
)
ää 
{
ãã 	
data
çç 
=
çç 
$num
çç 
;
çç 
}
éé 	
else
èè 
{
êê 	
data
ìì 
=
ìì 
$num
ìì 
;
ìì 
}
îî 	
{
ïï 	
IO
óó 
.
óó 
	WriteLine
óó 
(
óó 
(
óó 
byte
óó 
)
óó 
data
óó #
)
óó# $
;
óó$ %
}
òò 	
}
ôô 
public
õõ 

override
õõ 
void
õõ 
Good
õõ 
(
õõ 
)
õõ 
{
úú 
GoodG2B1
ùù 
(
ùù 
)
ùù 
;
ùù 
GoodG2B2
ûû 
(
ûû 
)
ûû 
;
ûû 
}
üü 
}°° 
}¢¢ Ó3
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_06 C
:D E
AbstractTestCaseF V
{ 
private   
const   
int   
PRIVATE_CONST_FIVE   (
=  ) *
$num  + ,
;  , -
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
float%% 
data%% 
;%% 
if&& 

(&& 
PRIVATE_CONST_FIVE&& 
==&& !
$num&&" #
)&&# $
{'' 	
data(( 
=(( 
float(( 
.(( 
MinValue(( !
;((! "
{** 
	TcpClient++ 
tcpConn++ !
=++" #
null++$ (
;++( )
StreamReader,, 
sr,, 
=,,  !
null,," &
;,,& '
try-- 
{.. 
tcpConn00 
=00 
new00 !
	TcpClient00" +
(00+ ,
$str00, >
,00> ?
$num00@ E
)00E F
;00F G
sr22 
=22 
new22 
StreamReader22 )
(22) *
tcpConn22* 1
.221 2
	GetStream222 ;
(22; <
)22< =
)22= >
;22> ?
string44 
stringNumber44 '
=44( )
sr44* ,
.44, -
ReadLine44- 5
(445 6
)446 7
;447 8
if55 
(55 
stringNumber55 $
!=55% '
null55( ,
)55, -
{66 
try77 
{88 
data99  
=99! "
float99# (
.99( )
Parse99) .
(99. /
stringNumber99/ ;
.99; <
Trim99< @
(99@ A
)99A B
)99B C
;99C D
}:: 
catch;; 
(;; 
FormatException;; -
exceptNumberFormat;;. @
);;@ A
{<< 
IO== 
.== 
Logger== %
.==% &
Log==& )
(==) *
NLog==* .
.==. /
LogLevel==/ 7
.==7 8
Warn==8 <
,==< =
exceptNumberFormat==> P
,==P Q
$str	==R Ñ
)
==Ñ Ö
;
==Ö Ü
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryHH 
{II 
ifJJ 
(JJ 
srJJ 
!=JJ !
nullJJ" &
)JJ& '
{KK 
srLL 
.LL 
CloseLL $
(LL$ %
)LL% &
;LL& '
}MM 
}NN 
catchOO 
(OO 
IOExceptionOO &
exceptIOOO' /
)OO/ 0
{PP 
IOQQ 
.QQ 
LoggerQQ !
.QQ! "
LogQQ" %
(QQ% &
NLogQQ& *
.QQ* +
LogLevelQQ+ 3
.QQ3 4
WarnQQ4 8
,QQ8 9
exceptIOQQ: B
,QQB C
$strQQD e
)QQe f
;QQf g
}RR 
tryUU 
{VV 
ifWW 
(WW 
tcpConnWW #
!=WW$ &
nullWW' +
)WW+ ,
{XX 
tcpConnYY #
.YY# $
CloseYY$ )
(YY) *
)YY* +
;YY+ ,
}ZZ 
}[[ 
catch\\ 
(\\ 
IOException\\ &
exceptIO\\' /
)\\/ 0
{]] 
IO^^ 
.^^ 
Logger^^ !
.^^! "
Log^^" %
(^^% &
NLog^^& *
.^^* +
LogLevel^^+ 3
.^^3 4
Warn^^4 8
,^^8 9
exceptIO^^: B
,^^B C
$str^^D Z
)^^Z [
;^^[ \
}__ 
}`` 
}aa 
}bb 	
elsecc 
{dd 	
datagg 
=gg 
$numgg 
;gg 
}hh 	
{ii 	
IOkk 
.kk 
	WriteLinekk 
(kk 
(kk 
bytekk 
)kk 
datakk #
)kk# $
;kk$ %
}ll 	
}mm 
privateqq 
voidqq 
GoodG2B1qq 
(qq 
)qq 
{rr 
floatss 
datass 
;ss 
iftt 

(tt 
PRIVATE_CONST_FIVEtt 
!=tt !
$numtt" #
)tt# $
{uu 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data}} 
=}} 
$num}} 
;}} 
}~~ 	
{ 	
IO
ÅÅ 
.
ÅÅ 
	WriteLine
ÅÅ 
(
ÅÅ 
(
ÅÅ 
byte
ÅÅ 
)
ÅÅ 
data
ÅÅ #
)
ÅÅ# $
;
ÅÅ$ %
}
ÇÇ 	
}
ÉÉ 
private
ÜÜ 
void
ÜÜ 
GoodG2B2
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
float
àà 
data
àà 
;
àà 
if
ââ 

(
ââ  
PRIVATE_CONST_FIVE
ââ 
==
ââ !
$num
ââ" #
)
ââ# $
{
ää 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
else
éé 
{
èè 	
data
íí 
=
íí 
$num
íí 
;
íí 
}
ìì 	
{
îî 	
IO
ññ 
.
ññ 
	WriteLine
ññ 
(
ññ 
(
ññ 
byte
ññ 
)
ññ 
data
ññ #
)
ññ# $
;
ññ$ %
}
óó 	
}
òò 
public
öö 

override
öö 
void
öö 
Good
öö 
(
öö 
)
öö 
{
õõ 
GoodG2B1
úú 
(
úú 
)
úú 
;
úú 
GoodG2B2
ùù 
(
ùù 
)
ùù 
;
ùù 
}
ûû 
}†† 
}°° ø3
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_07 C
:D E
AbstractTestCaseF V
{ 
private   
int   
privateFive   
=   
$num   
;    
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
float%% 
data%% 
;%% 
if&& 

(&& 
privateFive&& 
==&& 
$num&& 
)&& 
{'' 	
data(( 
=(( 
float(( 
.(( 
MinValue(( !
;((! "
{** 
	TcpClient++ 
tcpConn++ !
=++" #
null++$ (
;++( )
StreamReader,, 
sr,, 
=,,  !
null,," &
;,,& '
try-- 
{.. 
tcpConn00 
=00 
new00 !
	TcpClient00" +
(00+ ,
$str00, >
,00> ?
$num00@ E
)00E F
;00F G
sr22 
=22 
new22 
StreamReader22 )
(22) *
tcpConn22* 1
.221 2
	GetStream222 ;
(22; <
)22< =
)22= >
;22> ?
string44 
stringNumber44 '
=44( )
sr44* ,
.44, -
ReadLine44- 5
(445 6
)446 7
;447 8
if55 
(55 
stringNumber55 $
!=55% '
null55( ,
)55, -
{66 
try77 
{88 
data99  
=99! "
float99# (
.99( )
Parse99) .
(99. /
stringNumber99/ ;
.99; <
Trim99< @
(99@ A
)99A B
)99B C
;99C D
}:: 
catch;; 
(;; 
FormatException;; -
exceptNumberFormat;;. @
);;@ A
{<< 
IO== 
.== 
Logger== %
.==% &
Log==& )
(==) *
NLog==* .
.==. /
LogLevel==/ 7
.==7 8
Warn==8 <
,==< =
exceptNumberFormat==> P
,==P Q
$str	==R Ñ
)
==Ñ Ö
;
==Ö Ü
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryHH 
{II 
ifJJ 
(JJ 
srJJ 
!=JJ !
nullJJ" &
)JJ& '
{KK 
srLL 
.LL 
CloseLL $
(LL$ %
)LL% &
;LL& '
}MM 
}NN 
catchOO 
(OO 
IOExceptionOO &
exceptIOOO' /
)OO/ 0
{PP 
IOQQ 
.QQ 
LoggerQQ !
.QQ! "
LogQQ" %
(QQ% &
NLogQQ& *
.QQ* +
LogLevelQQ+ 3
.QQ3 4
WarnQQ4 8
,QQ8 9
exceptIOQQ: B
,QQB C
$strQQD e
)QQe f
;QQf g
}RR 
tryUU 
{VV 
ifWW 
(WW 
tcpConnWW #
!=WW$ &
nullWW' +
)WW+ ,
{XX 
tcpConnYY #
.YY# $
CloseYY$ )
(YY) *
)YY* +
;YY+ ,
}ZZ 
}[[ 
catch\\ 
(\\ 
IOException\\ &
exceptIO\\' /
)\\/ 0
{]] 
IO^^ 
.^^ 
Logger^^ !
.^^! "
Log^^" %
(^^% &
NLog^^& *
.^^* +
LogLevel^^+ 3
.^^3 4
Warn^^4 8
,^^8 9
exceptIO^^: B
,^^B C
$str^^D Z
)^^Z [
;^^[ \
}__ 
}`` 
}aa 
}bb 	
elsecc 
{dd 	
datagg 
=gg 
$numgg 
;gg 
}hh 	
{ii 	
IOkk 
.kk 
	WriteLinekk 
(kk 
(kk 
bytekk 
)kk 
datakk #
)kk# $
;kk$ %
}ll 	
}mm 
privateqq 
voidqq 
GoodG2B1qq 
(qq 
)qq 
{rr 
floatss 
datass 
;ss 
iftt 

(tt 
privateFivett 
!=tt 
$numtt 
)tt 
{uu 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data}} 
=}} 
$num}} 
;}} 
}~~ 	
{ 	
IO
ÅÅ 
.
ÅÅ 
	WriteLine
ÅÅ 
(
ÅÅ 
(
ÅÅ 
byte
ÅÅ 
)
ÅÅ 
data
ÅÅ #
)
ÅÅ# $
;
ÅÅ$ %
}
ÇÇ 	
}
ÉÉ 
private
ÜÜ 
void
ÜÜ 
GoodG2B2
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
float
àà 
data
àà 
;
àà 
if
ââ 

(
ââ 
privateFive
ââ 
==
ââ 
$num
ââ 
)
ââ 
{
ää 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
else
éé 
{
èè 	
data
íí 
=
íí 
$num
íí 
;
íí 
}
ìì 	
{
îî 	
IO
ññ 
.
ññ 
	WriteLine
ññ 
(
ññ 
(
ññ 
byte
ññ 
)
ññ 
data
ññ #
)
ññ# $
;
ññ$ %
}
óó 	
}
òò 
public
öö 

override
öö 
void
öö 
Good
öö 
(
öö 
)
öö 
{
õõ 
GoodG2B1
úú 
(
úú 
)
úú 
;
úú 
GoodG2B2
ùù 
(
ùù 
)
ùù 
;
ùù 
}
ûû 
}†† 
}°° é6
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_08 C
:D E
AbstractTestCaseF V
{ 
private   
static   
bool   
PrivateReturnsTrue   *
(  * +
)  + ,
{!! 
return"" 
true"" 
;"" 
}## 
private%% 
static%% 
bool%% 
PrivateReturnsFalse%% +
(%%+ ,
)%%, -
{&& 
return'' 
false'' 
;'' 
}(( 
public++ 

override++ 
void++ 
Bad++ 
(++ 
)++ 
{,, 
float-- 
data-- 
;-- 
if.. 

(.. 
PrivateReturnsTrue.. 
(.. 
)..  
)..  !
{// 	
data00 
=00 
float00 
.00 
MinValue00 !
;00! "
{22 
	TcpClient33 
tcpConn33 !
=33" #
null33$ (
;33( )
StreamReader44 
sr44 
=44  !
null44" &
;44& '
try55 
{66 
tcpConn88 
=88 
new88 !
	TcpClient88" +
(88+ ,
$str88, >
,88> ?
$num88@ E
)88E F
;88F G
sr:: 
=:: 
new:: 
StreamReader:: )
(::) *
tcpConn::* 1
.::1 2
	GetStream::2 ;
(::; <
)::< =
)::= >
;::> ?
string<< 
stringNumber<< '
=<<( )
sr<<* ,
.<<, -
ReadLine<<- 5
(<<5 6
)<<6 7
;<<7 8
if== 
(== 
stringNumber== $
!===% '
null==( ,
)==, -
{>> 
try?? 
{@@ 
dataAA  
=AA! "
floatAA# (
.AA( )
ParseAA) .
(AA. /
stringNumberAA/ ;
.AA; <
TrimAA< @
(AA@ A
)AAA B
)AAB C
;AAC D
}BB 
catchCC 
(CC 
FormatExceptionCC -
exceptNumberFormatCC. @
)CC@ A
{DD 
IOEE 
.EE 
LoggerEE %
.EE% &
LogEE& )
(EE) *
NLogEE* .
.EE. /
LogLevelEE/ 7
.EE7 8
WarnEE8 <
,EE< =
exceptNumberFormatEE> P
,EEP Q
$str	EER Ñ
)
EEÑ Ö
;
EEÖ Ü
}FF 
}GG 
}HH 
catchII 
(II 
IOExceptionII "
exceptIOII# +
)II+ ,
{JJ 
IOKK 
.KK 
LoggerKK 
.KK 
LogKK !
(KK! "
NLogKK" &
.KK& '
LogLevelKK' /
.KK/ 0
WarnKK0 4
,KK4 5
exceptIOKK6 >
,KK> ?
$strKK@ [
)KK[ \
;KK\ ]
}LL 
finallyMM 
{NN 
tryPP 
{QQ 
ifRR 
(RR 
srRR 
!=RR !
nullRR" &
)RR& '
{SS 
srTT 
.TT 
CloseTT $
(TT$ %
)TT% &
;TT& '
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW &
exceptIOWW' /
)WW/ 0
{XX 
IOYY 
.YY 
LoggerYY !
.YY! "
LogYY" %
(YY% &
NLogYY& *
.YY* +
LogLevelYY+ 3
.YY3 4
WarnYY4 8
,YY8 9
exceptIOYY: B
,YYB C
$strYYD e
)YYe f
;YYf g
}ZZ 
try]] 
{^^ 
if__ 
(__ 
tcpConn__ #
!=__$ &
null__' +
)__+ ,
{`` 
tcpConnaa #
.aa# $
Closeaa$ )
(aa) *
)aa* +
;aa+ ,
}bb 
}cc 
catchdd 
(dd 
IOExceptiondd &
exceptIOdd' /
)dd/ 0
{ee 
IOff 
.ff 
Loggerff !
.ff! "
Logff" %
(ff% &
NLogff& *
.ff* +
LogLevelff+ 3
.ff3 4
Warnff4 8
,ff8 9
exceptIOff: B
,ffB C
$strffD Z
)ffZ [
;ff[ \
}gg 
}hh 
}ii 
}jj 	
elsekk 
{ll 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
bytess 
)ss 
datass #
)ss# $
;ss$ %
}tt 	
}uu 
privateyy 
voidyy 
GoodG2B1yy 
(yy 
)yy 
{zz 
float{{ 
data{{ 
;{{ 
if|| 

(|| 
PrivateReturnsFalse|| 
(||  
)||  !
)||! "
{}} 	
data
ÄÄ 
=
ÄÄ 
$num
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
else
ÇÇ 
{
ÉÉ 	
data
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
{
áá 	
IO
ââ 
.
ââ 
	WriteLine
ââ 
(
ââ 
(
ââ 
byte
ââ 
)
ââ 
data
ââ #
)
ââ# $
;
ââ$ %
}
ää 	
}
ãã 
private
éé 
void
éé 
GoodG2B2
éé 
(
éé 
)
éé 
{
èè 
float
êê 
data
êê 
;
êê 
if
ëë 

(
ëë  
PrivateReturnsTrue
ëë 
(
ëë 
)
ëë  
)
ëë  !
{
íí 	
data
îî 
=
îî 
$num
îî 
;
îî 
}
ïï 	
else
ññ 
{
óó 	
data
öö 
=
öö 
$num
öö 
;
öö 
}
õõ 	
{
úú 	
IO
ûû 
.
ûû 
	WriteLine
ûû 
(
ûû 
(
ûû 
byte
ûû 
)
ûû 
data
ûû #
)
ûû# $
;
ûû$ %
}
üü 	
}
†† 
public
¢¢ 

override
¢¢ 
void
¢¢ 
Good
¢¢ 
(
¢¢ 
)
¢¢ 
{
££ 
GoodG2B1
§§ 
(
§§ 
)
§§ 
;
§§ 
GoodG2B2
•• 
(
•• 
)
•• 
;
•• 
}
¶¶ 
}®® 
}©© À2
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_09 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if   

(   
IO   
.    
STATIC_READONLY_TRUE   #
)  # $
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
byteee 
)ee 
dataee #
)ee# $
;ee$ %
}ff 	
}gg 
privatekk 
voidkk 
GoodG2B1kk 
(kk 
)kk 
{ll 
floatmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn !
STATIC_READONLY_FALSEnn $
)nn$ %
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
byte{{ 
){{ 
data{{ #
){{# $
;{{$ %
}|| 	
}}} 
private
ÄÄ 
void
ÄÄ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
float
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ 
IO
ÉÉ 
.
ÉÉ "
STATIC_READONLY_TRUE
ÉÉ #
)
ÉÉ# $
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
else
àà 
{
ââ 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
byte
êê 
)
êê 
data
êê #
)
êê# $
;
êê$ %
}
ëë 	
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
)
îî 
{
ïï 
GoodG2B1
ññ 
(
ññ 
)
ññ 
;
ññ 
GoodG2B2
óó 
(
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ ≠2
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_10 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if   

(   
IO   
.   

staticTrue   
)   
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
byteee 
)ee 
dataee #
)ee# $
;ee$ %
}ff 	
}gg 
privatekk 
voidkk 
GoodG2B1kk 
(kk 
)kk 
{ll 
floatmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn 
staticFalsenn 
)nn 
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
byte{{ 
){{ 
data{{ #
){{# $
;{{$ %
}|| 	
}}} 
private
ÄÄ 
void
ÄÄ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
float
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ 
IO
ÉÉ 
.
ÉÉ 

staticTrue
ÉÉ 
)
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
else
àà 
{
ââ 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
byte
êê 
)
êê 
data
êê #
)
êê# $
;
êê$ %
}
ëë 	
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
)
îî 
{
ïï 
GoodG2B1
ññ 
(
ññ 
)
ññ 
;
ññ 
GoodG2B2
óó 
(
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ †3
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_11 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if   

(   
IO   
.   
StaticReturnsTrue    
(    !
)  ! "
)  " #
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
byteee 
)ee 
dataee #
)ee# $
;ee$ %
}ff 	
}gg 
privatekk 
voidkk 
GoodG2B1kk 
(kk 
)kk 
{ll 
floatmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn 
StaticReturnsFalsenn !
(nn! "
)nn" #
)nn# $
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
byte{{ 
){{ 
data{{ #
){{# $
;{{$ %
}|| 	
}}} 
private
ÄÄ 
void
ÄÄ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
float
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ 
IO
ÉÉ 
.
ÉÉ 
StaticReturnsTrue
ÉÉ  
(
ÉÉ  !
)
ÉÉ! "
)
ÉÉ" #
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
else
àà 
{
ââ 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
byte
êê 
)
êê 
data
êê #
)
êê# $
;
êê$ %
}
ëë 	
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
)
îî 
{
ïï 
GoodG2B1
ññ 
(
ññ 
)
ññ 
;
ññ 
GoodG2B2
óó 
(
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ ∞,
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_12 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if   

(   
IO   
.   $
StaticReturnsTrueOrFalse   '
(  ' (
)  ( )
)  ) *
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
bytedd 
)dd 
datadd #
)dd# $
;dd$ %
}ee 	
}ff 
privatekk 
voidkk 
GoodG2Bkk 
(kk 
)kk 
{ll 
floatmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn $
StaticReturnsTrueOrFalsenn '
(nn' (
)nn( )
)nn) *
{oo 	
dataqq 
=qq 
$numqq 
;qq 
}rr 	
elsess 
{tt 	
datavv 
=vv 
$numvv 
;vv 
}ww 	
{xx 	
IOzz 
.zz 
	WriteLinezz 
(zz 
(zz 
bytezz 
)zz 
datazz #
)zz# $
;zz$ %
}{{ 	
}|| 
public~~ 

override~~ 
void~~ 
Good~~ 
(~~ 
)~~ 
{ 
GoodG2B
ÄÄ 
(
ÄÄ 
)
ÄÄ 
;
ÄÄ 
}
ÅÅ 
}ÉÉ 
}ÑÑ ¥3
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_13 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if   

(   
IO   
.    
STATIC_READONLY_FIVE   #
==  $ &
$num  ' (
)  ( )
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
byteee 
)ee 
dataee #
)ee# $
;ee$ %
}ff 	
}gg 
privatekk 
voidkk 
GoodG2B1kk 
(kk 
)kk 
{ll 
floatmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn  
STATIC_READONLY_FIVEnn #
!=nn$ &
$numnn' (
)nn( )
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
byte{{ 
){{ 
data{{ #
){{# $
;{{$ %
}|| 	
}}} 
private
ÄÄ 
void
ÄÄ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
float
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ 
IO
ÉÉ 
.
ÉÉ "
STATIC_READONLY_FIVE
ÉÉ #
==
ÉÉ$ &
$num
ÉÉ' (
)
ÉÉ( )
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
else
àà 
{
ââ 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
byte
êê 
)
êê 
data
êê #
)
êê# $
;
êê$ %
}
ëë 	
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
)
îî 
{
ïï 
GoodG2B1
ññ 
(
ññ 
)
ññ 
;
ññ 
GoodG2B2
óó 
(
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ ñ3
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_14 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if   

(   
IO   
.   

staticFive   
==   
$num   
)   
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
byteee 
)ee 
dataee #
)ee# $
;ee$ %
}ff 	
}gg 
privatekk 
voidkk 
GoodG2B1kk 
(kk 
)kk 
{ll 
floatmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn 

staticFivenn 
!=nn 
$numnn 
)nn 
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
byte{{ 
){{ 
data{{ #
){{# $
;{{$ %
}|| 	
}}} 
private
ÄÄ 
void
ÄÄ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
float
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ 
IO
ÉÉ 
.
ÉÉ 

staticFive
ÉÉ 
==
ÉÉ 
$num
ÉÉ 
)
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
else
àà 
{
ââ 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
byte
êê 
)
êê 
data
êê #
)
êê# $
;
êê$ %
}
ëë 	
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
)
îî 
{
ïï 
GoodG2B1
ññ 
(
ññ 
)
ññ 
;
ññ 
GoodG2B2
óó 
(
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ ˘4
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_15 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
= 
$num 
; 
switch   
(   
$num   
)   
{!! 	
case"" 
$num"" 
:"" 
data## 
=## 
float## 
.## 
MinValue## !
;##! "
{%% 
	TcpClient&& 
tcpConn&& !
=&&" #
null&&$ (
;&&( )
StreamReader'' 
sr'' 
=''  !
null''" &
;''& '
try(( 
{)) 
tcpConn++ 
=++ 
new++ !
	TcpClient++" +
(+++ ,
$str++, >
,++> ?
$num++@ E
)++E F
;++F G
sr-- 
=-- 
new-- 
StreamReader-- )
(--) *
tcpConn--* 1
.--1 2
	GetStream--2 ;
(--; <
)--< =
)--= >
;--> ?
string// 
stringNumber// '
=//( )
sr//* ,
.//, -
ReadLine//- 5
(//5 6
)//6 7
;//7 8
if00 
(00 
stringNumber00 $
!=00% '
null00( ,
)00, -
{11 
try22 
{33 
data44  
=44! "
float44# (
.44( )
Parse44) .
(44. /
stringNumber44/ ;
.44; <
Trim44< @
(44@ A
)44A B
)44B C
;44C D
}55 
catch66 
(66 
FormatException66 -
exceptNumberFormat66. @
)66@ A
{77 
IO88 
.88 
Logger88 %
.88% &
Log88& )
(88) *
NLog88* .
.88. /
LogLevel88/ 7
.887 8
Warn888 <
,88< =
exceptNumberFormat88> P
,88P Q
$str	88R Ñ
)
88Ñ Ö
;
88Ö Ü
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< "
exceptIO<<# +
)<<+ ,
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> !
(>>! "
NLog>>" &
.>>& '
LogLevel>>' /
.>>/ 0
Warn>>0 4
,>>4 5
exceptIO>>6 >
,>>> ?
$str>>@ [
)>>[ \
;>>\ ]
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE !
nullEE" &
)EE& '
{FF 
srGG 
.GG 
CloseGG $
(GG$ %
)GG% &
;GG& '
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ &
exceptIOJJ' /
)JJ/ 0
{KK 
IOLL 
.LL 
LoggerLL !
.LL! "
LogLL" %
(LL% &
NLogLL& *
.LL* +
LogLevelLL+ 3
.LL3 4
WarnLL4 8
,LL8 9
exceptIOLL: B
,LLB C
$strLLD e
)LLe f
;LLf g
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR #
!=RR$ &
nullRR' +
)RR+ ,
{SS 
tcpConnTT #
.TT# $
CloseTT$ )
(TT) *
)TT* +
;TT+ ,
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW &
exceptIOWW' /
)WW/ 0
{XX 
IOYY 
.YY 
LoggerYY !
.YY! "
LogYY" %
(YY% &
NLogYY& *
.YY* +
LogLevelYY+ 3
.YY3 4
WarnYY4 8
,YY8 9
exceptIOYY: B
,YYB C
$strYYD Z
)YYZ [
;YY[ \
}ZZ 
}[[ 
}\\ 
break]] 
;]] 
default^^ 
:^^ 
dataaa 
=aa 
$numaa 
;aa 
breakbb 
;bb 
}cc 	
{dd 	
IOff 
.ff 
	WriteLineff 
(ff 
(ff 
byteff 
)ff 
dataff #
)ff# $
;ff$ %
}gg 	
}hh 
privatell 
voidll 
GoodG2B1ll 
(ll 
)ll 
{mm 
floatnn 
datann 
=nn 
$numnn 
;nn 
switchoo 
(oo 
$numoo 
)oo 
{pp 	
caseqq 
$numqq 
:qq 
datatt 
=tt 
$numtt 
;tt 
breakuu 
;uu 
defaultvv 
:vv 
dataxx 
=xx 
$numxx 
;xx 
breakyy 
;yy 
}zz 	
{{{ 	
IO}} 
.}} 
	WriteLine}} 
(}} 
(}} 
byte}} 
)}} 
data}} #
)}}# $
;}}$ %
}~~ 	
} 
private
ÇÇ 
void
ÇÇ 
GoodG2B2
ÇÇ 
(
ÇÇ 
)
ÇÇ 
{
ÉÉ 
float
ÑÑ 
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
switch
ÖÖ 
(
ÖÖ 
$num
ÖÖ 
)
ÖÖ 
{
ÜÜ 	
case
áá 
$num
áá 
:
áá 
data
ââ 
=
ââ 
$num
ââ 
;
ââ 
break
ää 
;
ää 
default
ãã 
:
ãã 
data
éé 
=
éé 
$num
éé 
;
éé 
break
èè 
;
èè 
}
êê 	
{
ëë 	
IO
ìì 
.
ìì 
	WriteLine
ìì 
(
ìì 
(
ìì 
byte
ìì 
)
ìì 
data
ìì #
)
ìì# $
;
ìì$ %
}
îî 	
}
ïï 
public
óó 

override
óó 
void
óó 
Good
óó 
(
óó 
)
óó 
{
òò 
GoodG2B1
ôô 
(
ôô 
)
ôô 
;
ôô 
GoodG2B2
öö 
(
öö 
)
öö 
;
öö 
}
õõ 
}ùù 
}ûû Ê)
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_16 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
while   
(   
true   
)   
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
break\\ 
;\\ 
}]] 	
{^^ 	
IO`` 
.`` 
	WriteLine`` 
(`` 
(`` 
byte`` 
)`` 
data`` #
)``# $
;``$ %
}aa 	
}bb 
privateff 
voidff 
GoodG2Bff 
(ff 
)ff 
{gg 
floathh 
datahh 
;hh 
whileii 
(ii 
trueii 
)ii 
{jj 	
datall 
=ll 
$numll 
;ll 
breakmm 
;mm 
}nn 	
{oo 	
IOqq 
.qq 
	WriteLineqq 
(qq 
(qq 
byteqq 
)qq 
dataqq #
)qq# $
;qq$ %
}rr 	
}ss 
publicuu 

overrideuu 
voiduu 
Gooduu 
(uu 
)uu 
{vv 
GoodG2Bww 
(ww 
)ww 
;ww 
}xx 
}zz 
}{{ ÷+
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_17 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	
forZZ 
(ZZ 
intZZ 
iZZ 
=ZZ 
$numZZ 
;ZZ 
iZZ 
<ZZ 
$numZZ 
;ZZ 
iZZ  
++ZZ  "
)ZZ" #
{[[ 	
{\\ 
IO^^ 
.^^ 
	WriteLine^^ 
(^^ 
(^^ 
byte^^ "
)^^" #
data^^# '
)^^' (
;^^( )
}__ 
}`` 	
}aa 
privateff 
voidff 
GoodG2Bff 
(ff 
)ff 
{gg 
floathh 
datahh 
;hh 
datajj 
=jj 
$numjj 
;jj 
forkk 
(kk 
intkk 
ikk 
=kk 
$numkk 
;kk 
ikk 
<kk 
$numkk 
;kk 
ikk  
++kk  "
)kk" #
{ll 	
{mm 
IOoo 
.oo 
	WriteLineoo 
(oo 
(oo 
byteoo "
)oo" #
dataoo# '
)oo' (
;oo( )
}pp 
}qq 	
}rr 
publictt 

overridett 
voidtt 
Goodtt 
(tt 
)tt 
{uu 
GoodG2Bvv 
(vv 
)vv 
;vv 
}ww 
}yy 
}zz ◊?
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_21 C
:D E
AbstractTestCaseF V
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public   

override   
void   
Bad   
(   
)   
{!! 
float"" 
data"" 
;"" 

badPrivate## 
=## 
true## 
;## 
data$$ 
=$$ 

Bad_source$$ 
($$ 
)$$ 
;$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
byte'' 
)'' 
data'' #
)''# $
;''$ %
}(( 	
})) 
private++ 
float++ 

Bad_source++ 
(++ 
)++ 
{,, 
float-- 
data-- 
;-- 
if.. 

(.. 

badPrivate.. 
).. 
{// 	
data00 
=00 
float00 
.00 
MinValue00 !
;00! "
{22 
	TcpClient33 
tcpConn33 !
=33" #
null33$ (
;33( )
StreamReader44 
sr44 
=44  !
null44" &
;44& '
try55 
{66 
tcpConn88 
=88 
new88 !
	TcpClient88" +
(88+ ,
$str88, >
,88> ?
$num88@ E
)88E F
;88F G
sr:: 
=:: 
new:: 
StreamReader:: )
(::) *
tcpConn::* 1
.::1 2
	GetStream::2 ;
(::; <
)::< =
)::= >
;::> ?
string<< 
stringNumber<< '
=<<( )
sr<<* ,
.<<, -
ReadLine<<- 5
(<<5 6
)<<6 7
;<<7 8
if== 
(== 
stringNumber== $
!===% '
null==( ,
)==, -
{>> 
try?? 
{@@ 
dataAA  
=AA! "
floatAA# (
.AA( )
ParseAA) .
(AA. /
stringNumberAA/ ;
.AA; <
TrimAA< @
(AA@ A
)AAA B
)AAB C
;AAC D
}BB 
catchCC 
(CC 
FormatExceptionCC -
exceptNumberFormatCC. @
)CC@ A
{DD 
IOEE 
.EE 
LoggerEE %
.EE% &
LogEE& )
(EE) *
NLogEE* .
.EE. /
LogLevelEE/ 7
.EE7 8
WarnEE8 <
,EE< =
exceptNumberFormatEE> P
,EEP Q
$str	EER Ñ
)
EEÑ Ö
;
EEÖ Ü
}FF 
}GG 
}HH 
catchII 
(II 
IOExceptionII "
exceptIOII# +
)II+ ,
{JJ 
IOKK 
.KK 
LoggerKK 
.KK 
LogKK !
(KK! "
NLogKK" &
.KK& '
LogLevelKK' /
.KK/ 0
WarnKK0 4
,KK4 5
exceptIOKK6 >
,KK> ?
$strKK@ [
)KK[ \
;KK\ ]
}LL 
finallyMM 
{NN 
tryPP 
{QQ 
ifRR 
(RR 
srRR 
!=RR !
nullRR" &
)RR& '
{SS 
srTT 
.TT 
CloseTT $
(TT$ %
)TT% &
;TT& '
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW &
exceptIOWW' /
)WW/ 0
{XX 
IOYY 
.YY 
LoggerYY !
.YY! "
LogYY" %
(YY% &
NLogYY& *
.YY* +
LogLevelYY+ 3
.YY3 4
WarnYY4 8
,YY8 9
exceptIOYY: B
,YYB C
$strYYD e
)YYe f
;YYf g
}ZZ 
try]] 
{^^ 
if__ 
(__ 
tcpConn__ #
!=__$ &
null__' +
)__+ ,
{`` 
tcpConnaa #
.aa# $
Closeaa$ )
(aa) *
)aa* +
;aa+ ,
}bb 
}cc 
catchdd 
(dd 
IOExceptiondd &
exceptIOdd' /
)dd/ 0
{ee 
IOff 
.ff 
Loggerff !
.ff! "
Logff" %
(ff% &
NLogff& *
.ff* +
LogLevelff+ 3
.ff3 4
Warnff4 8
,ff8 9
exceptIOff: B
,ffB C
$strffD Z
)ffZ [
;ff[ \
}gg 
}hh 
}ii 
}jj 	
elsekk 
{ll 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
returnqq 
dataqq 
;qq 
}rr 
privateuu 
booluu 
goodG2B1_privateuu !
=uu" #
falseuu$ )
;uu) *
privatevv 
boolvv 
GoodG2B2_privatevv !
=vv" #
falsevv$ )
;vv) *
publicxx 

overridexx 
voidxx 
Goodxx 
(xx 
)xx 
{yy 
GoodG2B1zz 
(zz 
)zz 
;zz 
GoodG2B2{{ 
({{ 
){{ 
;{{ 
}|| 
private 
void 
GoodG2B1 
( 
) 
{
ÄÄ 
float
ÅÅ 
data
ÅÅ 
;
ÅÅ 
goodG2B1_private
ÇÇ 
=
ÇÇ 
false
ÇÇ  
;
ÇÇ  !
data
ÉÉ 
=
ÉÉ 
GoodG2B1_source
ÉÉ 
(
ÉÉ 
)
ÉÉ  
;
ÉÉ  !
{
ÑÑ 	
IO
ÜÜ 
.
ÜÜ 
	WriteLine
ÜÜ 
(
ÜÜ 
(
ÜÜ 
byte
ÜÜ 
)
ÜÜ 
data
ÜÜ #
)
ÜÜ# $
;
ÜÜ$ %
}
áá 	
}
àà 
private
ää 
float
ää 
GoodG2B1_source
ää !
(
ää! "
)
ää" #
{
ãã 
float
åå 
data
åå 
=
åå 
$num
åå 
;
åå 
if
çç 

(
çç 
goodG2B1_private
çç 
)
çç 
{
éé 	
data
ëë 
=
ëë 
$num
ëë 
;
ëë 
}
íí 	
else
ìì 
{
îî 	
data
ññ 
=
ññ 
$num
ññ 
;
ññ 
}
óó 	
return
òò 
data
òò 
;
òò 
}
ôô 
private
úú 
void
úú 
GoodG2B2
úú 
(
úú 
)
úú 
{
ùù 
float
ûû 
data
ûû 
;
ûû 
GoodG2B2_private
üü 
=
üü 
true
üü 
;
üü  
data
†† 
=
†† 
GoodG2B2_source
†† 
(
†† 
)
††  
;
††  !
{
°° 	
IO
££ 
.
££ 
	WriteLine
££ 
(
££ 
(
££ 
byte
££ 
)
££ 
data
££ #
)
££# $
;
££$ %
}
§§ 	
}
•• 
private
ßß 
float
ßß 
GoodG2B2_source
ßß !
(
ßß! "
)
ßß" #
{
®® 
float
©© 
data
©© 
=
©© 
$num
©© 
;
©© 
if
™™ 

(
™™ 
GoodG2B2_private
™™ 
)
™™ 
{
´´ 	
data
≠≠ 
=
≠≠ 
$num
≠≠ 
;
≠≠ 
}
ÆÆ 	
else
ØØ 
{
∞∞ 	
data
≥≥ 
=
≥≥ 
$num
≥≥ 
;
≥≥ 
}
¥¥ 	
return
µµ 
data
µµ 
;
µµ 
}
∂∂ 
}∏∏ 
}ππ ∏
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_22a D
:E F
AbstractTestCaseG W
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_22b!! M
.!!M N
	BadSource!!N W
(!!W X
)!!X Y
;!!Y Z
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
byte$$ 
)$$ 
data$$ #
)$$# $
;$$$ %
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
float66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_22b88 M
.88M N
GoodG2B1Source88N \
(88\ ]
)88] ^
;88^ _
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
byte;; 
);; 
data;; #
);;# $
;;;$ %
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
floatBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_22bDD M
.DDM N
GoodG2B2SourceDDN \
(DD\ ]
)DD] ^
;DD^ _
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
}KK 
}LL ˚-
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_22b D
{ 
public 

static 
float 
	BadSource !
(! "
)" #
{ 
float 
data 
; 
if   

(   J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_22a   J
.  J K
badPublicStatic  K Z
)  Z [
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
returncc 
datacc 
;cc 
}dd 
publicii 

staticii 
floatii 
GoodG2B1Sourceii &
(ii& '
)ii' (
{jj 
floatkk 
datakk 
;kk 
ifll 

(ll J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_22all J
.llJ K 
goodG2B1PublicStaticllK _
)ll_ `
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
elserr 
{ss 	
datauu 
=uu 
$numuu 
;uu 
}vv 	
returnww 
dataww 
;ww 
}xx 
public{{ 

static{{ 
float{{ 
GoodG2B2Source{{ &
({{& '
){{' (
{|| 
float}} 
data}} 
;}} 
if~~ 

(~~ J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_22a~~ J
.~~J K 
GoodG2B2PublicStatic~~K _
)~~_ `
{ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
else
ÉÉ 
{
ÑÑ 	
data
áá 
=
áá 
$num
áá 
;
áá 
}
àà 	
return
ââ 
data
ââ 
;
ââ 
}
ää 
}åå 
}çç ä,
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_31 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float   
dataCopy   
;   
{!! 	
float"" 
data"" 
;"" 
data## 
=## 
float## 
.## 
MinValue## !
;##! "
{%% 
	TcpClient&& 
tcpConn&& !
=&&" #
null&&$ (
;&&( )
StreamReader'' 
sr'' 
=''  !
null''" &
;''& '
try(( 
{)) 
tcpConn++ 
=++ 
new++ !
	TcpClient++" +
(+++ ,
$str++, >
,++> ?
$num++@ E
)++E F
;++F G
sr-- 
=-- 
new-- 
StreamReader-- )
(--) *
tcpConn--* 1
.--1 2
	GetStream--2 ;
(--; <
)--< =
)--= >
;--> ?
string// 
stringNumber// '
=//( )
sr//* ,
.//, -
ReadLine//- 5
(//5 6
)//6 7
;//7 8
if00 
(00 
stringNumber00 $
!=00% '
null00( ,
)00, -
{11 
try22 
{33 
data44  
=44! "
float44# (
.44( )
Parse44) .
(44. /
stringNumber44/ ;
.44; <
Trim44< @
(44@ A
)44A B
)44B C
;44C D
}55 
catch66 
(66 
FormatException66 -
exceptNumberFormat66. @
)66@ A
{77 
IO88 
.88 
Logger88 %
.88% &
Log88& )
(88) *
NLog88* .
.88. /
LogLevel88/ 7
.887 8
Warn888 <
,88< =
exceptNumberFormat88> P
,88P Q
$str	88R Ñ
)
88Ñ Ö
;
88Ö Ü
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< "
exceptIO<<# +
)<<+ ,
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> !
(>>! "
NLog>>" &
.>>& '
LogLevel>>' /
.>>/ 0
Warn>>0 4
,>>4 5
exceptIO>>6 >
,>>> ?
$str>>@ [
)>>[ \
;>>\ ]
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE !
nullEE" &
)EE& '
{FF 
srGG 
.GG 
CloseGG $
(GG$ %
)GG% &
;GG& '
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ &
exceptIOJJ' /
)JJ/ 0
{KK 
IOLL 
.LL 
LoggerLL !
.LL! "
LogLL" %
(LL% &
NLogLL& *
.LL* +
LogLevelLL+ 3
.LL3 4
WarnLL4 8
,LL8 9
exceptIOLL: B
,LLB C
$strLLD e
)LLe f
;LLf g
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR #
!=RR$ &
nullRR' +
)RR+ ,
{SS 
tcpConnTT #
.TT# $
CloseTT$ )
(TT) *
)TT* +
;TT+ ,
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW &
exceptIOWW' /
)WW/ 0
{XX 
IOYY 
.YY 
LoggerYY !
.YY! "
LogYY" %
(YY% &
NLogYY& *
.YY* +
LogLevelYY+ 3
.YY3 4
WarnYY4 8
,YY8 9
exceptIOYY: B
,YYB C
$strYYD Z
)YYZ [
;YY[ \
}ZZ 
}[[ 
}\\ 
dataCopy]] 
=]] 
data]] 
;]] 
}^^ 	
{__ 	
float`` 
data`` 
=`` 
dataCopy`` !
;``! "
{aa 
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
bytecc "
)cc" #
datacc# '
)cc' (
;cc( )
}dd 
}ee 	
}ff 
publicii 

overrideii 
voidii 
Goodii 
(ii 
)ii 
{jj 
GoodG2Bkk 
(kk 
)kk 
;kk 
}ll 
privateoo 
voidoo 
GoodG2Boo 
(oo 
)oo 
{pp 
floatqq 
dataCopyqq 
;qq 
{rr 	
floatss 
datass 
;ss 
datauu 
=uu 
$numuu 
;uu 
dataCopyvv 
=vv 
datavv 
;vv 
}ww 	
{xx 	
floatyy 
datayy 
=yy 
dataCopyyy !
;yy! "
{zz 
IO|| 
.|| 
	WriteLine|| 
(|| 
(|| 
byte|| "
)||" #
data||# '
)||' (
;||( )
}}} 
}~~ 	
} 
}ÅÅ 
}ÇÇ Ü,
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_41 C
:D E
AbstractTestCaseF V
{ 
private 
static 
void 
BadSink 
(  
float  %
data& *
)+ ,
{ 
{ 	
IO   
.   
	WriteLine   
(   
(   
byte   
)   
data   #
)  # $
;  $ %
}!! 	
}"" 
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
float&& 
data&& 
;&& 
data'' 
='' 
float'' 
.'' 
MinValue'' 
;'' 
{)) 	
	TcpClient** 
tcpConn** 
=** 
null**  $
;**$ %
StreamReader++ 
sr++ 
=++ 
null++ "
;++" #
try,, 
{-- 
tcpConn// 
=// 
new// 
	TcpClient// '
(//' (
$str//( :
,//: ;
$num//< A
)//A B
;//B C
sr11 
=11 
new11 
StreamReader11 %
(11% &
tcpConn11& -
.11- .
	GetStream11. 7
(117 8
)118 9
)119 :
;11: ;
string33 
stringNumber33 #
=33$ %
sr33& (
.33( )
ReadLine33) 1
(331 2
)332 3
;333 4
if44 
(44 
stringNumber44  
!=44! #
null44$ (
)44( )
{55 
try66 
{77 
data88 
=88 
float88 $
.88$ %
Parse88% *
(88* +
stringNumber88+ 7
.887 8
Trim888 <
(88< =
)88= >
)88> ?
;88? @
}99 
catch:: 
(:: 
FormatException:: )
exceptNumberFormat::* <
)::< =
{;; 
IO<< 
.<< 
Logger<< !
.<<! "
Log<<" %
(<<% &
NLog<<& *
.<<* +
LogLevel<<+ 3
.<<3 4
Warn<<4 8
,<<8 9
exceptNumberFormat<<: L
,<<L M
$str	<<N Ä
)
<<Ä Å
;
<<Å Ç
}== 
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ 
exceptIO@@ '
)@@' (
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
exceptIOBB2 :
,BB: ;
$strBB< W
)BBW X
;BBX Y
}CC 
finallyDD 
{EE 
tryGG 
{HH 
ifII 
(II 
srII 
!=II 
nullII "
)II" #
{JJ 
srKK 
.KK 
CloseKK  
(KK  !
)KK! "
;KK" #
}LL 
}MM 
catchNN 
(NN 
IOExceptionNN "
exceptIONN# +
)NN+ ,
{OO 
IOPP 
.PP 
LoggerPP 
.PP 
LogPP !
(PP! "
NLogPP" &
.PP& '
LogLevelPP' /
.PP/ 0
WarnPP0 4
,PP4 5
exceptIOPP6 >
,PP> ?
$strPP@ a
)PPa b
;PPb c
}QQ 
tryTT 
{UU 
ifVV 
(VV 
tcpConnVV 
!=VV  "
nullVV# '
)VV' (
{WW 
tcpConnXX 
.XX  
CloseXX  %
(XX% &
)XX& '
;XX' (
}YY 
}ZZ 
catch[[ 
([[ 
IOException[[ "
exceptIO[[# +
)[[+ ,
{\\ 
IO]] 
.]] 
Logger]] 
.]] 
Log]] !
(]]! "
NLog]]" &
.]]& '
LogLevel]]' /
.]]/ 0
Warn]]0 4
,]]4 5
exceptIO]]6 >
,]]> ?
$str]]@ V
)]]V W
;]]W X
}^^ 
}__ 
}`` 	
BadSinkaa 
(aa 
dataaa 
)aa 
;aa 
}bb 
publicee 

overrideee 
voidee 
Goodee 
(ee 
)ee 
{ff 
GoodG2Bgg 
(gg 
)gg 
;gg 
}hh 
privatejj 
staticjj 
voidjj 
GoodG2BSinkjj #
(jj# $
floatjj$ )
datajj* .
)jj/ 0
{kk 
{ll 	
IOnn 
.nn 
	WriteLinenn 
(nn 
(nn 
bytenn 
)nn 
datann #
)nn# $
;nn$ %
}oo 	
}pp 
privatess 
staticss 
voidss 
GoodG2Bss 
(ss  
)ss  !
{tt 
floatuu 
datauu 
;uu 
dataww 
=ww 
$numww 
;ww 
GoodG2BSinkxx 
(xx 
dataxx 
)xx 
;xx 
}yy 
}{{ 
}|| Ù,
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_42 C
:D E
AbstractTestCaseF V
{ 
private 
static 
float 
	BadSource "
(" #
)# $
{ 
float 
data 
; 
data 
= 
float 
. 
MinValue 
; 
{!! 	
	TcpClient"" 
tcpConn"" 
="" 
null""  $
;""$ %
StreamReader## 
sr## 
=## 
null## "
;##" #
try$$ 
{%% 
tcpConn'' 
='' 
new'' 
	TcpClient'' '
(''' (
$str''( :
,'': ;
$num''< A
)''A B
;''B C
sr)) 
=)) 
new)) 
StreamReader)) %
())% &
tcpConn))& -
.))- .
	GetStream)). 7
())7 8
)))8 9
)))9 :
;)): ;
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
float00 $
.00$ %
Parse00% *
(00* +
stringNumber00+ 7
.007 8
Trim008 <
(00< =
)00= >
)00> ?
;00? @
}11 
catch22 
(22 
FormatException22 )
exceptNumberFormat22* <
)22< =
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ a
)HHa b
;HHb c
}II 
tryLL 
{MM 
ifNN 
(NN 
tcpConnNN 
!=NN  "
nullNN# '
)NN' (
{OO 
tcpConnPP 
.PP  
ClosePP  %
(PP% &
)PP& '
;PP' (
}QQ 
}RR 
catchSS 
(SS 
IOExceptionSS "
exceptIOSS# +
)SS+ ,
{TT 
IOUU 
.UU 
LoggerUU 
.UU 
LogUU !
(UU! "
NLogUU" &
.UU& '
LogLevelUU' /
.UU/ 0
WarnUU0 4
,UU4 5
exceptIOUU6 >
,UU> ?
$strUU@ V
)UUV W
;UUW X
}VV 
}WW 
}XX 	
returnYY 
dataYY 
;YY 
}ZZ 
public]] 

override]] 
void]] 
Bad]] 
(]] 
)]] 
{^^ 
float__ 
data__ 
=__ 
	BadSource__ 
(__ 
)__  
;__  !
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
bytebb 
)bb 
databb #
)bb# $
;bb$ %
}cc 	
}dd 
privategg 
staticgg 
floatgg 
GoodG2BSourcegg &
(gg& '
)gg' (
{hh 
floatii 
dataii 
;ii 
datakk 
=kk 
$numkk 
;kk 
returnll 
datall 
;ll 
}mm 
privatepp 
staticpp 
voidpp 
GoodG2Bpp 
(pp  
)pp  !
{qq 
floatrr 
datarr 
=rr 
GoodG2BSourcerr "
(rr" #
)rr# $
;rr$ %
{ss 	
IOuu 
.uu 
	WriteLineuu 
(uu 
(uu 
byteuu 
)uu 
datauu #
)uu# $
;uu$ %
}vv 	
}ww 
publicyy 

overrideyy 
voidyy 
Goodyy 
(yy 
)yy 
{zz 
GoodG2B{{ 
({{ 
){{ 
;{{ 
}|| 
}~~ 
} –.
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_45 C
:D E
AbstractTestCaseF V
{ 
private 
float 
dataBad 
; 
private 
float 
dataGoodG2B 
; 
private   
void   
BadSink   
(   
)   
{!! 
float"" 
data"" 
="" 
dataBad"" 
;"" 
{## 	
IO%% 
.%% 
	WriteLine%% 
(%% 
(%% 
byte%% 
)%% 
data%% #
)%%# $
;%%$ %
}&& 	
}'' 
public** 

override** 
void** 
Bad** 
(** 
)** 
{++ 
float,, 
data,, 
;,, 
data-- 
=-- 
float-- 
.-- 
MinValue-- 
;-- 
{// 	
	TcpClient00 
tcpConn00 
=00 
null00  $
;00$ %
StreamReader11 
sr11 
=11 
null11 "
;11" #
try22 
{33 
tcpConn55 
=55 
new55 
	TcpClient55 '
(55' (
$str55( :
,55: ;
$num55< A
)55A B
;55B C
sr77 
=77 
new77 
StreamReader77 %
(77% &
tcpConn77& -
.77- .
	GetStream77. 7
(777 8
)778 9
)779 :
;77: ;
string99 
stringNumber99 #
=99$ %
sr99& (
.99( )
ReadLine99) 1
(991 2
)992 3
;993 4
if:: 
(:: 
stringNumber::  
!=::! #
null::$ (
)::( )
{;; 
try<< 
{== 
data>> 
=>> 
float>> $
.>>$ %
Parse>>% *
(>>* +
stringNumber>>+ 7
.>>7 8
Trim>>8 <
(>>< =
)>>= >
)>>> ?
;>>? @
}?? 
catch@@ 
(@@ 
FormatException@@ )
exceptNumberFormat@@* <
)@@< =
{AA 
IOBB 
.BB 
LoggerBB !
.BB! "
LogBB" %
(BB% &
NLogBB& *
.BB* +
LogLevelBB+ 3
.BB3 4
WarnBB4 8
,BB8 9
exceptNumberFormatBB: L
,BBL M
$str	BBN Ä
)
BBÄ Å
;
BBÅ Ç
}CC 
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF 
exceptIOFF '
)FF' (
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH "
.HH" #
LogLevelHH# +
.HH+ ,
WarnHH, 0
,HH0 1
exceptIOHH2 :
,HH: ;
$strHH< W
)HHW X
;HHX Y
}II 
finallyJJ 
{KK 
tryMM 
{NN 
ifOO 
(OO 
srOO 
!=OO 
nullOO "
)OO" #
{PP 
srQQ 
.QQ 
CloseQQ  
(QQ  !
)QQ! "
;QQ" #
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ a
)VVa b
;VVb c
}WW 
tryZZ 
{[[ 
if\\ 
(\\ 
tcpConn\\ 
!=\\  "
null\\# '
)\\' (
{]] 
tcpConn^^ 
.^^  
Close^^  %
(^^% &
)^^& '
;^^' (
}__ 
}`` 
catchaa 
(aa 
IOExceptionaa "
exceptIOaa# +
)aa+ ,
{bb 
IOcc 
.cc 
Loggercc 
.cc 
Logcc !
(cc! "
NLogcc" &
.cc& '
LogLevelcc' /
.cc/ 0
Warncc0 4
,cc4 5
exceptIOcc6 >
,cc> ?
$strcc@ V
)ccV W
;ccW X
}dd 
}ee 
}ff 	
dataBadgg 
=gg 
datagg 
;gg 
BadSinkhh 
(hh 
)hh 
;hh 
}ii 
publicll 

overridell 
voidll 
Goodll 
(ll 
)ll 
{mm 
GoodG2Bnn 
(nn 
)nn 
;nn 
}oo 
privateqq 
voidqq 
GoodG2BSinkqq 
(qq 
)qq 
{rr 
floatss 
datass 
=ss 
dataGoodG2Bss  
;ss  !
{tt 	
IOvv 
.vv 
	WriteLinevv 
(vv 
(vv 
bytevv 
)vv 
datavv #
)vv# $
;vv$ %
}ww 	
}xx 
private{{ 
void{{ 
GoodG2B{{ 
({{ 
){{ 
{|| 
float}} 
data}} 
;}} 
data 
= 
$num 
; 
dataGoodG2B
ÄÄ 
=
ÄÄ 
data
ÄÄ 
;
ÄÄ 
GoodG2BSink
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
}
ÇÇ 
}ÑÑ 
}ÖÖ æ'
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_51a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data 
= 
float 
. 
MinValue 
; 
{!! 	
	TcpClient"" 
tcpConn"" 
="" 
null""  $
;""$ %
StreamReader## 
sr## 
=## 
null## "
;##" #
try$$ 
{%% 
tcpConn'' 
='' 
new'' 
	TcpClient'' '
(''' (
$str''( :
,'': ;
$num''< A
)''A B
;''B C
sr)) 
=)) 
new)) 
StreamReader)) %
())% &
tcpConn))& -
.))- .
	GetStream)). 7
())7 8
)))8 9
)))9 :
;)): ;
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
float00 $
.00$ %
Parse00% *
(00* +
stringNumber00+ 7
.007 8
Trim008 <
(00< =
)00= >
)00> ?
;00? @
}11 
catch22 
(22 
FormatException22 )
exceptNumberFormat22* <
)22< =
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ a
)HHa b
;HHb c
}II 
tryLL 
{MM 
ifNN 
(NN 
tcpConnNN 
!=NN  "
nullNN# '
)NN' (
{OO 
tcpConnPP 
.PP  
ClosePP  %
(PP% &
)PP& '
;PP' (
}QQ 
}RR 
catchSS 
(SS 
IOExceptionSS "
exceptIOSS# +
)SS+ ,
{TT 
IOUU 
.UU 
LoggerUU 
.UU 
LogUU !
(UU! "
NLogUU" &
.UU& '
LogLevelUU' /
.UU/ 0
WarnUU0 4
,UU4 5
exceptIOUU6 >
,UU> ?
$strUU@ V
)UUV W
;UUW X
}VV 
}WW 
}XX 	J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_51bYY F
.YYF G
BadSinkYYG N
(YYN O
dataYYO S
)YYU V
;YYV W
}ZZ 
public]] 

override]] 
void]] 
Good]] 
(]] 
)]] 
{^^ 
GoodG2B__ 
(__ 
)__ 
;__ 
}`` 
privatecc 
voidcc 
GoodG2Bcc 
(cc 
)cc 
{dd 
floatee 
dataee 
;ee 
datagg 
=gg 
$numgg 
;gg J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_51bhh F
.hhF G
GoodG2BSinkhhG R
(hhR S
datahhS W
)hhY Z
;hhZ [
}ii 
}kk 
}ll ß	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_51b D
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
float### (
data##) -
)##. /
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
byte'' 
)'' 
data'' #
)''# $
;''$ %
}(( 	
})) 
}++ 
},, æ'
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_52a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_52bZZ F
.ZZF G
BadSinkZZG N
(ZZN O
dataZZO S
)ZZT U
;ZZU V
}[[ 
public^^ 

override^^ 
void^^ 
Good^^ 
(^^ 
)^^ 
{__ 
GoodG2B`` 
(`` 
)`` 
;`` 
}aa 
privatedd 
voiddd 
GoodG2Bdd 
(dd 
)dd 
{ee 
floatff 
dataff 
;ff 
datahh 
=hh 
$numhh 
;hh J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_52bii F
.iiF G
GoodG2BSinkiiG R
(iiR S
dataiiS W
)iiX Y
;iiY Z
}jj 
}ll 
}mm É	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_52b D
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_52c F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
float!!# (
data!!) -
)!!. /
{"" J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_52c## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' ß	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_52c D
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
float$$# (
data$$) -
)$$. /
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- æ'
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_53a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_53bZZ F
.ZZF G
BadSinkZZG N
(ZZN O
dataZZO S
)ZZT U
;ZZU V
}[[ 
public^^ 

override^^ 
void^^ 
Good^^ 
(^^ 
)^^ 
{__ 
GoodG2B`` 
(`` 
)`` 
;`` 
}aa 
privatedd 
voiddd 
GoodG2Bdd 
(dd 
)dd 
{ee 
floatff 
dataff 
;ff 
datahh 
=hh 
$numhh 
;hh J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_53bii F
.iiF G
GoodG2BSinkiiG R
(iiR S
dataiiS W
)iiX Y
;iiY Z
}jj 
}ll 
}mm É	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_53b D
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_53c F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
float!!# (
data!!) -
)!!. /
{"" J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_53c## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' É	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_53c D
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_53d F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
float!!# (
data!!) -
)!!. /
{"" J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_53d## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' ß	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_53d D
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
float$$# (
data$$) -
)$$. /
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- æ'
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_54a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_54bZZ F
.ZZF G
BadSinkZZG N
(ZZN O
dataZZO S
)ZZT U
;ZZU V
}[[ 
public^^ 

override^^ 
void^^ 
Good^^ 
(^^ 
)^^ 
{__ 
GoodG2B`` 
(`` 
)`` 
;`` 
}aa 
privatedd 
voiddd 
GoodG2Bdd 
(dd 
)dd 
{ee 
floatff 
dataff 
;ff 
datahh 
=hh 
$numhh 
;hh J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_54bii F
.iiF G
GoodG2BSinkiiG R
(iiR S
dataiiS W
)iiX Y
;iiY Z
}jj 
}ll 
}mm É	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_54b D
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_54c F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
float!!# (
data!!) -
)!!. /
{"" J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_54c## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' É	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_54c D
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_54d F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
float!!# (
data!!) -
)!!. /
{"" J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_54d## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' É	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_54d D
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_54e F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
float!!# (
data!!) -
)!!. /
{"" J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_54e## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' ß	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_54e D
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
float$$# (
data$$) -
)$$. /
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- ˚
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_61a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
= J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_61b S
.S T
	BadSourceT ]
(] ^
)^ _
;_ `
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
float++ 
data++ 
=++ J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_61b++ S
.++S T
GoodG2BSource++T a
(++a b
)++b c
;++c d
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
byte.. 
).. 
data.. #
)..# $
;..$ %
}// 	
}00 
}22 
}33 Ï#
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_61b D
{ 
public 

static 
float 
	BadSource !
(! "
)" #
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	
returnZZ 
dataZZ 
;ZZ 
}[[ 
public`` 

static`` 
float`` 
GoodG2BSource`` %
(``% &
)``& '
{aa 
floatbb 
databb 
;bb 
datadd 
=dd 
$numdd 
;dd 
returnee 
dataee 
;ee 
}ff 
}hh 
}ii æ,
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_66a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	
floatZZ 
[ZZ 
]ZZ 
	dataArrayZZ 
=ZZ 
newZZ 
floatZZ  %
[ZZ% &
$numZZ& '
]ZZ' (
;ZZ( )
	dataArray[[ 
[[[ 
$num[[ 
][[ 
=[[ 
data[[ 
;[[ J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_66b\\ F
.\\F G
BadSink\\G N
(\\N O
	dataArray\\O X
)\\Z [
;\\[ \
}]] 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2Bbb 
(bb 
)bb 
;bb 
}cc 
privateff 
staticff 
voidff 
GoodG2Bff 
(ff  
)ff  !
{gg 
floathh 
datahh 
;hh 
datajj 
=jj 
$numjj 
;jj 
floatkk 
[kk 
]kk 
	dataArraykk 
=kk 
newkk 
floatkk  %
[kk% &
$numkk& '
]kk' (
;kk( )
	dataArrayll 
[ll 
$numll 
]ll 
=ll 
datall 
;ll J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_66bmm F
.mmF G
GoodG2BSinkmmG R
(mmR S
	dataArraymmS \
)mm^ _
;mm_ `
}nn 
}pp 
}qq Å
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_66b D
{ 
public 

static 
void 
BadSink 
( 
float $
[$ %
]% &
	dataArray' 0
)1 2
{ 
float 
data 
= 
	dataArray 
[ 
$num  
]  !
;! "
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
float%%# (
[%%( )
]%%) *
	dataArray%%+ 4
)%%5 6
{&& 
float'' 
data'' 
='' 
	dataArray'' 
['' 
$num''  
]''  !
;''! "
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// §-
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_67a D
:E F
AbstractTestCaseG W
{ 
public 

class 
	Container 
{ 
public 
float 
containerOne !
;! "
}   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
float$$ 
data$$ 
;$$ 
data%% 
=%% 
float%% 
.%% 
MinValue%% 
;%% 
{'' 	
	TcpClient(( 
tcpConn(( 
=(( 
null((  $
;(($ %
StreamReader)) 
sr)) 
=)) 
null)) "
;))" #
try** 
{++ 
tcpConn-- 
=-- 
new-- 
	TcpClient-- '
(--' (
$str--( :
,--: ;
$num--< A
)--A B
;--B C
sr// 
=// 
new// 
StreamReader// %
(//% &
tcpConn//& -
.//- .
	GetStream//. 7
(//7 8
)//8 9
)//9 :
;//: ;
string11 
stringNumber11 #
=11$ %
sr11& (
.11( )
ReadLine11) 1
(111 2
)112 3
;113 4
if22 
(22 
stringNumber22  
!=22! #
null22$ (
)22( )
{33 
try44 
{55 
data66 
=66 
float66 $
.66$ %
Parse66% *
(66* +
stringNumber66+ 7
.667 8
Trim668 <
(66< =
)66= >
)66> ?
;66? @
}77 
catch88 
(88 
FormatException88 )
exceptNumberFormat88* <
)88< =
{99 
IO:: 
.:: 
Logger:: !
.::! "
Log::" %
(::% &
NLog::& *
.::* +
LogLevel::+ 3
.::3 4
Warn::4 8
,::8 9
exceptNumberFormat::: L
,::L M
$str	::N Ä
)
::Ä Å
;
::Å Ç
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> 
exceptIO>> '
)>>' (
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ 
(@@ 
NLog@@ "
.@@" #
LogLevel@@# +
.@@+ ,
Warn@@, 0
,@@0 1
exceptIO@@2 :
,@@: ;
$str@@< W
)@@W X
;@@X Y
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG 
nullGG "
)GG" #
{HH 
srII 
.II 
CloseII  
(II  !
)II! "
;II" #
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL "
exceptIOLL# +
)LL+ ,
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
exceptIONN6 >
,NN> ?
$strNN@ a
)NNa b
;NNb c
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT 
!=TT  "
nullTT# '
)TT' (
{UU 
tcpConnVV 
.VV  
CloseVV  %
(VV% &
)VV& '
;VV' (
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY "
exceptIOYY# +
)YY+ ,
{ZZ 
IO[[ 
.[[ 
Logger[[ 
.[[ 
Log[[ !
([[! "
NLog[[" &
.[[& '
LogLevel[[' /
.[[/ 0
Warn[[0 4
,[[4 5
exceptIO[[6 >
,[[> ?
$str[[@ V
)[[V W
;[[W X
}\\ 
}]] 
}^^ 	
	Container__ 
dataContainer__ 
=__  !
new__" %
	Container__& /
(__/ 0
)__0 1
;__1 2
dataContainer`` 
.`` 
containerOne`` "
=``# $
data``% )
;``) *J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_67baa F
.aaF G
BadSinkaaG N
(aaN O
dataContaineraaO \
)aa^ _
;aa_ `
}bb 
publicee 

overrideee 
voidee 
Goodee 
(ee 
)ee 
{ff 
GoodG2Bgg 
(gg 
)gg 
;gg 
}hh 
privatekk 
statickk 
voidkk 
GoodG2Bkk 
(kk  
)kk  !
{ll 
floatmm 
datamm 
;mm 
dataoo 
=oo 
$numoo 
;oo 
	Containerpp 
dataContainerpp 
=pp  !
newpp" %
	Containerpp& /
(pp/ 0
)pp0 1
;pp1 2
dataContainerqq 
.qq 
containerOneqq "
=qq# $
dataqq% )
;qq) *J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_67brr F
.rrF G
GoodG2BSinkrrG R
(rrR S
dataContainerrrS `
)rrb c
;rrc d
}ss 
}uu 
}vv Ö
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_67b D
{ 
public 

static 
void 
BadSink 
( J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_67a ]
.] ^
	Container^ g
dataContainerh u
)v w
{ 
float 
data 
= 
dataContainer "
." #
containerOne# /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_67a%%# a
.%%a b
	Container%%b k
dataContainer%%l y
)%%z {
{&& 
float'' 
data'' 
='' 
dataContainer'' "
.''" #
containerOne''# /
;''/ 0
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// ¢'
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_68a D
:E F
AbstractTestCaseG W
{ 
public 

static 
float 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_68bZZ F
.ZZF G
BadSinkZZG N
(ZZN O
)ZZO P
;ZZP Q
}[[ 
public^^ 

override^^ 
void^^ 
Good^^ 
(^^ 
)^^ 
{__ 
GoodG2B`` 
(`` 
)`` 
;`` 
}aa 
privatedd 
staticdd 
voiddd 
GoodG2Bdd 
(dd  
)dd  !
{ee 
datagg 
=gg 
$numgg 
;gg J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_68bhh F
.hhF G
GoodG2BSinkhhG R
(hhR S
)hhS T
;hhT U
}ii 
}kk 
}ll Ω
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_68b D
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
float 
data 
= J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_68a S
.S T
dataT X
;X Y
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
float&& 
data&& 
=&& J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_68a&& S
.&&S T
data&&T X
;&&X Y
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
byte)) 
))) 
data)) #
)))# $
;))$ %
}** 	
}++ 
}-- 
}.. ∂(
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_71a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_71bZZ F
.ZZF G
BadSinkZZG N
(ZZN O
(ZZO P
ObjectZZP V
)ZZV W
dataZZW [
)ZZ] ^
;ZZ^ _
}[[ 
public^^ 

override^^ 
void^^ 
Good^^ 
(^^ 
)^^ 
{__ 
GoodG2B`` 
(`` 
)`` 
;`` 
}aa 
privatedd 
staticdd 
voiddd 
GoodG2Bdd 
(dd  
)dd  !
{ee 
floatff 
dataff 
;ff 
datahh 
=hh 
$numhh 
;hh J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_71bii F
.iiF G
GoodG2BSinkiiG R
(iiR S
(iiS T
ObjectiiT Z
)iiZ [
dataii[ _
)iia b
;iib c
}jj 
}ll 
}mm Õ
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_71b D
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
float 
data 
= 
( 
float 
) 

dataObject &
;& '
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
float(( 
data(( 
=(( 
((( 
float(( 
)(( 

dataObject(( &
;((& '
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ÷1
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_72a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	
	HashtableZZ 
dataHashtableZZ 
=ZZ  !
newZZ" %
	HashtableZZ& /
(ZZ/ 0
$numZZ0 1
)ZZ1 2
;ZZ2 3
dataHashtable[[ 
.[[ 
Add[[ 
([[ 
$num[[ 
,[[ 
data[[ !
)[[! "
;[[" #
dataHashtable\\ 
.\\ 
Add\\ 
(\\ 
$num\\ 
,\\ 
data\\ !
)\\! "
;\\" #
dataHashtable]] 
.]] 
Add]] 
(]] 
$num]] 
,]] 
data]] !
)]]! "
;]]" #J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_72b^^ F
.^^F G
BadSink^^G N
(^^N O
dataHashtable^^O \
)^^^ _
;^^_ `
}__ 
publicbb 

overridebb 
voidbb 
Goodbb 
(bb 
)bb 
{cc 
GoodG2Bdd 
(dd 
)dd 
;dd 
}ee 
privatehh 
statichh 
voidhh 
GoodG2Bhh 
(hh  
)hh  !
{ii 
floatjj 
datajj 
;jj 
datall 
=ll 
$numll 
;ll 
	Hashtablemm 
dataHashtablemm 
=mm  !
newmm" %
	Hashtablemm& /
(mm/ 0
$nummm0 1
)mm1 2
;mm2 3
dataHashtablenn 
.nn 
Addnn 
(nn 
$numnn 
,nn 
datann !
)nn! "
;nn" #
dataHashtableoo 
.oo 
Addoo 
(oo 
$numoo 
,oo 
dataoo !
)oo! "
;oo" #
dataHashtablepp 
.pp 
Addpp 
(pp 
$numpp 
,pp 
datapp !
)pp! "
;pp" #J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_72bqq F
.qqF G
GoodG2BSinkqqG R
(qqR S
dataHashtableqqS `
)qqb c
;qqc d
}rr 
}tt 
}uu ø
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_72b D
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
float 
data 
= 
( 
float 
) 
dataHashtable *
[* +
$num+ ,
], -
;- .
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
float(( 
data(( 
=(( 
((( 
float(( 
)(( 
dataHashtable(( *
[((* +
$num((+ ,
]((, -
;((- .
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ÷1
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_73a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float   
data   
;   
data!! 
=!! 
float!! 
.!! 
MinValue!! 
;!! 
{## 	
	TcpClient$$ 
tcpConn$$ 
=$$ 
null$$  $
;$$$ %
StreamReader%% 
sr%% 
=%% 
null%% "
;%%" #
try&& 
{'' 
tcpConn)) 
=)) 
new)) 
	TcpClient)) '
())' (
$str))( :
,)): ;
$num))< A
)))A B
;))B C
sr++ 
=++ 
new++ 
StreamReader++ %
(++% &
tcpConn++& -
.++- .
	GetStream++. 7
(++7 8
)++8 9
)++9 :
;++: ;
string-- 
stringNumber-- #
=--$ %
sr--& (
.--( )
ReadLine--) 1
(--1 2
)--2 3
;--3 4
if.. 
(.. 
stringNumber..  
!=..! #
null..$ (
)..( )
{// 
try00 
{11 
data22 
=22 
float22 $
.22$ %
Parse22% *
(22* +
stringNumber22+ 7
.227 8
Trim228 <
(22< =
)22= >
)22> ?
;22? @
}33 
catch44 
(44 
FormatException44 )
exceptNumberFormat44* <
)44< =
{55 
IO66 
.66 
Logger66 !
.66! "
Log66" %
(66% &
NLog66& *
.66* +
LogLevel66+ 3
.663 4
Warn664 8
,668 9
exceptNumberFormat66: L
,66L M
$str	66N Ä
)
66Ä Å
;
66Å Ç
}77 
}88 
}99 
catch:: 
(:: 
IOException:: 
exceptIO:: '
)::' (
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< 
(<< 
NLog<< "
.<<" #
LogLevel<<# +
.<<+ ,
Warn<<, 0
,<<0 1
exceptIO<<2 :
,<<: ;
$str<<< W
)<<W X
;<<X Y
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC 
nullCC "
)CC" #
{DD 
srEE 
.EE 
CloseEE  
(EE  !
)EE! "
;EE" #
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH "
exceptIOHH# +
)HH+ ,
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ !
(JJ! "
NLogJJ" &
.JJ& '
LogLevelJJ' /
.JJ/ 0
WarnJJ0 4
,JJ4 5
exceptIOJJ6 >
,JJ> ?
$strJJ@ a
)JJa b
;JJb c
}KK 
tryNN 
{OO 
ifPP 
(PP 
tcpConnPP 
!=PP  "
nullPP# '
)PP' (
{QQ 
tcpConnRR 
.RR  
CloseRR  %
(RR% &
)RR& '
;RR' (
}SS 
}TT 
catchUU 
(UU 
IOExceptionUU "
exceptIOUU# +
)UU+ ,
{VV 
IOWW 
.WW 
LoggerWW 
.WW 
LogWW !
(WW! "
NLogWW" &
.WW& '
LogLevelWW' /
.WW/ 0
WarnWW0 4
,WW4 5
exceptIOWW6 >
,WW> ?
$strWW@ V
)WWV W
;WWW X
}XX 
}YY 
}ZZ 	

LinkedList[[ 
<[[ 
float[[ 
>[[ 
dataLinkedList[[ (
=[[) *
new[[+ .

LinkedList[[/ 9
<[[9 :
float[[: ?
>[[? @
([[@ A
)[[A B
;[[B C
dataLinkedList\\ 
.\\ 
AddLast\\ 
(\\ 
data\\ #
)\\# $
;\\$ %
dataLinkedList]] 
.]] 
AddLast]] 
(]] 
data]] #
)]]# $
;]]$ %
dataLinkedList^^ 
.^^ 
AddLast^^ 
(^^ 
data^^ #
)^^# $
;^^$ %J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_73b__ F
.__F G
BadSink__G N
(__N O
dataLinkedList__O ]
)___ `
;__` a
}`` 
publiccc 

overridecc 
voidcc 
Goodcc 
(cc 
)cc 
{dd 
GoodG2Bee 
(ee 
)ee 
;ee 
}ff 
privateii 
staticii 
voidii 
GoodG2Bii 
(ii  
)ii  !
{jj 
floatkk 
datakk 
;kk 
datamm 
=mm 
$nummm 
;mm 

LinkedListnn 
<nn 
floatnn 
>nn 
dataLinkedListnn (
=nn) *
newnn+ .

LinkedListnn/ 9
<nn9 :
floatnn: ?
>nn? @
(nn@ A
)nnA B
;nnB C
dataLinkedListoo 
.oo 
AddLastoo 
(oo 
dataoo #
)oo# $
;oo$ %
dataLinkedListpp 
.pp 
AddLastpp 
(pp 
datapp #
)pp# $
;pp$ %
dataLinkedListqq 
.qq 
AddLastqq 
(qq 
dataqq #
)qq# $
;qq$ %J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_73brr F
.rrF G
GoodG2BSinkrrG R
(rrR S
dataLinkedListrrS a
)rrc d
;rrd e
}ss 
}uu 
}vv Î
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_73b D
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
float* /
>/ 0
dataLinkedList1 ?
)@ A
{ 
float 
data 
= 
dataLinkedList #
.# $
Last$ (
.( )
Value) .
;. /
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
float&&. 3
>&&3 4
dataLinkedList&&5 C
)&&D E
{'' 
float(( 
data(( 
=(( 
dataLinkedList(( #
.((# $
Last(($ (
.((( )
Value(() .
;((. /
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 Ñ4
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_74a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	

DictionaryZZ 
<ZZ 
intZZ 
,ZZ 
floatZZ 
>ZZ 
dataDictionaryZZ ,
=ZZ- .
newZZ/ 2

DictionaryZZ3 =
<ZZ= >
intZZ> A
,ZZA B
floatZZB G
>ZZG H
(ZZH I
)ZZI J
;ZZJ K
dataDictionary[[ 
.[[ 
Add[[ 
([[ 
$num[[ 
,[[ 
data[[ "
)[[" #
;[[# $
dataDictionary\\ 
.\\ 
Add\\ 
(\\ 
$num\\ 
,\\ 
data\\ "
)\\" #
;\\# $
dataDictionary]] 
.]] 
Add]] 
(]] 
$num]] 
,]] 
data]] "
)]]" #
;]]# $J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_74b^^ F
.^^F G
BadSink^^G N
(^^N O
dataDictionary^^O ]
)^^_ `
;^^` a
}__ 
publicbb 

overridebb 
voidbb 
Goodbb 
(bb 
)bb 
{cc 
GoodG2Bdd 
(dd 
)dd 
;dd 
}ee 
privatehh 
statichh 
voidhh 
GoodG2Bhh 
(hh  
)hh  !
{ii 
floatjj 
datajj 
;jj 
datall 
=ll 
$numll 
;ll 

Dictionarymm 
<mm 
intmm 
,mm 
floatmm 
>mm 
dataDictionarymm ,
=mm- .
newmm/ 2

Dictionarymm3 =
<mm= >
intmm> A
,mmA B
floatmmB G
>mmG H
(mmH I
)mmI J
;mmJ K
dataDictionarynn 
.nn 
Addnn 
(nn 
$numnn 
,nn 
datann "
)nn" #
;nn# $
dataDictionaryoo 
.oo 
Addoo 
(oo 
$numoo 
,oo 
dataoo "
)oo" #
;oo# $
dataDictionarypp 
.pp 
Addpp 
(pp 
$numpp 
,pp 
datapp "
)pp" #
;pp# $J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_74bqq F
.qqF G
GoodG2BSinkqqG R
(qqR S
dataDictionaryqqS a
)qqc d
;qqd e
}rr 
}tt 
}uu Ö
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_74b D
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
float. 3
>3 4
dataDictionary5 C
)D E
{ 
float 
data 
= 
dataDictionary #
[# $
$num$ %
]% &
;& '
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
float&&2 7
>&&7 8
dataDictionary&&9 G
)&&H I
{'' 
float(( 
data(( 
=(( 
dataDictionary(( #
[((# $
$num(($ %
]((% &
;((& '
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 é<
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_75a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float   
data   
;   
data!! 
=!! 
float!! 
.!! 
MinValue!! 
;!! 
{## 	
	TcpClient$$ 
tcpConn$$ 
=$$ 
null$$  $
;$$$ %
StreamReader%% 
sr%% 
=%% 
null%% "
;%%" #
try&& 
{'' 
tcpConn)) 
=)) 
new)) 
	TcpClient)) '
())' (
$str))( :
,)): ;
$num))< A
)))A B
;))B C
sr++ 
=++ 
new++ 
StreamReader++ %
(++% &
tcpConn++& -
.++- .
	GetStream++. 7
(++7 8
)++8 9
)++9 :
;++: ;
string-- 
stringNumber-- #
=--$ %
sr--& (
.--( )
ReadLine--) 1
(--1 2
)--2 3
;--3 4
if.. 
(.. 
stringNumber..  
!=..! #
null..$ (
)..( )
{// 
try00 
{11 
data22 
=22 
float22 $
.22$ %
Parse22% *
(22* +
stringNumber22+ 7
.227 8
Trim228 <
(22< =
)22= >
)22> ?
;22? @
}33 
catch44 
(44 
FormatException44 )
exceptNumberFormat44* <
)44< =
{55 
IO66 
.66 
Logger66 !
.66! "
Log66" %
(66% &
NLog66& *
.66* +
LogLevel66+ 3
.663 4
Warn664 8
,668 9
exceptNumberFormat66: L
,66L M
$str	66N Ä
)
66Ä Å
;
66Å Ç
}77 
}88 
}99 
catch:: 
(:: 
IOException:: 
exceptIO:: '
)::' (
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< 
(<< 
NLog<< "
.<<" #
LogLevel<<# +
.<<+ ,
Warn<<, 0
,<<0 1
exceptIO<<2 :
,<<: ;
$str<<< W
)<<W X
;<<X Y
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC 
nullCC "
)CC" #
{DD 
srEE 
.EE 
CloseEE  
(EE  !
)EE! "
;EE" #
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH "
exceptIOHH# +
)HH+ ,
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ !
(JJ! "
NLogJJ" &
.JJ& '
LogLevelJJ' /
.JJ/ 0
WarnJJ0 4
,JJ4 5
exceptIOJJ6 >
,JJ> ?
$strJJ@ a
)JJa b
;JJb c
}KK 
tryNN 
{OO 
ifPP 
(PP 
tcpConnPP 
!=PP  "
nullPP# '
)PP' (
{QQ 
tcpConnRR 
.RR  
CloseRR  %
(RR% &
)RR& '
;RR' (
}SS 
}TT 
catchUU 
(UU 
IOExceptionUU "
exceptIOUU# +
)UU+ ,
{VV 
IOWW 
.WW 
LoggerWW 
.WW 
LogWW !
(WW! "
NLogWW" &
.WW& '
LogLevelWW' /
.WW/ 0
WarnWW0 4
,WW4 5
exceptIOWW6 >
,WW> ?
$strWW@ V
)WWV W
;WWW X
}XX 
}YY 
}ZZ 	
byte\\ 
[\\ 
]\\ 
dataSerialized\\ 
=\\ 
null\\  $
;\\$ %
try]] 
{^^ 	
BinaryFormatter__ 
bf__ 
=__  
new__! $
BinaryFormatter__% 4
(__4 5
)__5 6
;__6 7
using`` 
(`` 
var`` 
ms`` 
=`` 
new`` 
MemoryStream``  ,
(``, -
)``- .
)``. /
{aa 
bfbb 
.bb 
	Serializebb 
(bb 
msbb 
,bb  
databb! %
)bb% &
;bb& '
dataSerializedcc 
=cc  
mscc! #
.cc# $
ToArraycc$ +
(cc+ ,
)cc, -
;cc- .
}dd J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_75bee J
.eeJ K
BadSinkeeK R
(eeR S
dataSerializedeeS a
)eec d
;eed e
}ff 	
catchgg 
(gg "
SerializationExceptiongg %
exceptSerializegg& 5
)gg5 6
{hh 	
IOii 
.ii 
Loggerii 
.ii 
Logii 
(ii 
NLogii 
.ii 
LogLevelii '
.ii' (
Warnii( ,
,ii, -
$strii. X
,iiX Y
exceptSerializeiiZ i
)iii j
;iij k
}jj 	
}kk 
publicnn 

overridenn 
voidnn 
Goodnn 
(nn 
)nn 
{oo 
GoodG2Bpp 
(pp 
)pp 
;pp 
}qq 
privatett 
statictt 
voidtt 
GoodG2Btt 
(tt  
)tt  !
{uu 
floatvv 
datavv 
;vv 
dataxx 
=xx 
$numxx 
;xx 
bytezz 
[zz 
]zz 
dataSerializedzz 
=zz 
nullzz  $
;zz$ %
try{{ 
{|| 	
BinaryFormatter}} 
bf}} 
=}}  
new}}! $
BinaryFormatter}}% 4
(}}4 5
)}}5 6
;}}6 7
using~~ 
(~~ 
var~~ 
ms~~ 
=~~ 
new~~ 
MemoryStream~~  ,
(~~, -
)~~- .
)~~. /
{ 
bf
ÄÄ 
.
ÄÄ 
	Serialize
ÄÄ 
(
ÄÄ 
ms
ÄÄ 
,
ÄÄ  
data
ÄÄ! %
)
ÄÄ% &
;
ÄÄ& '
dataSerialized
ÅÅ 
=
ÅÅ  
ms
ÅÅ! #
.
ÅÅ# $
ToArray
ÅÅ$ +
(
ÅÅ+ ,
)
ÅÅ, -
;
ÅÅ- .
}
ÇÇ L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_75b
ÉÉ J
.
ÉÉJ K
GoodG2BSink
ÉÉK V
(
ÉÉV W
dataSerialized
ÉÉW e
)
ÉÉg h
;
ÉÉh i
}
ÑÑ 	
catch
ÖÖ 
(
ÖÖ $
SerializationException
ÖÖ %
exceptSerialize
ÖÖ& 5
)
ÖÖ5 6
{
ÜÜ 	
IO
áá 
.
áá 
Logger
áá 
.
áá 
Log
áá 
(
áá 
NLog
áá 
.
áá 
LogLevel
áá '
.
áá' (
Warn
áá( ,
,
áá, -
$str
áá. X
,
ááX Y
exceptSerialize
ááZ i
)
áái j
;
ááj k
}
àà 	
}
ââ 
}ãã 
}åå Î!
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_75b D
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
float   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
float&& 
)&& 
binForm&& %
.&&% &
Deserialize&&& 1
(&&1 2
	memStream&&2 ;
)&&; <
;&&< =
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** "
)**" #
data**# '
)**' (
;**( )
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
float:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
float@@ 
)@@ 
binForm@@ %
.@@% &
Deserialize@@& 1
(@@1 2
	memStream@@2 ;
)@@; <
;@@< =
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
byteDD "
)DD" #
dataDD# '
)DD' (
;DD( )
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN Í*
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_81a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	N
BCWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_81_baseZZ J

baseObjectZZK U
=ZZV W
newZZX [N
ACWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_81_bad	ZZ\ ù
(
ZZù û
)
ZZû ü
;
ZZü †

baseObject[[ 
.[[ 
Action[[ 
([[ 
data[[ 
)[[  
;[[  !
}\\ 
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2Baa 
(aa 
)aa 
;aa 
}bb 
privateee 
voidee 
GoodG2Bee 
(ee 
)ee 
{ff 
floatgg 
datagg 
;gg 
dataii 
=ii 
$numii 
;ii N
BCWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_81_basejj J

baseObjectjjK U
=jjV W
newjjX [R
ECWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_81_goodG2B	jj\ °
(
jj° ¢
)
jj¢ £
;
jj£ §

baseObjectkk 
.kk 
Actionkk 
(kk 
datakk 
)kk  
;kk  !
}ll 
}nn 
}oo ó
ƒC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class M
ACWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_81_bad G
:H IO
BCWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_81_base	J å
{ 
public 

override 
void 
Action 
(  
float  %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" ˝
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 N
BCWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_81_base Q
{ 
public 

abstract 
void 
Action 
(  
float  %
data& *
)+ ,
;, -
} 
} ü
»C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class Q
ECWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_81_goodG2B K
:L MO
BCWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_81_base	N ê
{ 
public 

override 
void 
Action 
(  
float  %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" ‹'
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_01 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
int\\ 
)\\ 
data\\ "
)\\" #
;\\# $
}]] 	
}^^ 
publicaa 

overrideaa 
voidaa 
Goodaa 
(aa 
)aa 
{bb 
GoodG2Bcc 
(cc 
)cc 
;cc 
}dd 
privategg 
voidgg 
GoodG2Bgg 
(gg 
)gg 
{hh 
floatii 
dataii 
;ii 
datakk 
=kk 
$numkk 
;kk 
{ll 	
IOnn 
.nn 
	WriteLinenn 
(nn 
(nn 
intnn 
)nn 
datann "
)nn" #
;nn# $
}oo 	
}pp 
}rr 
}ss µ1
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_02 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if   

(   
true   
)   
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
intee 
)ee 
dataee "
)ee" #
;ee# $
}ff 	
}gg 
privatekk 
voidkk 
GoodG2B1kk 
(kk 
)kk 
{ll 
floatmm 
datamm 
;mm 
ifnn 

(nn 
falsenn 
)nn 
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
int{{ 
){{ 
data{{ "
){{" #
;{{# $
}|| 	
}}} 
private
ÄÄ 
void
ÄÄ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
float
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ 
true
ÉÉ 
)
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
else
àà 
{
ââ 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
int
êê 
)
êê 
data
êê "
)
êê" #
;
êê# $
}
ëë 	
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
)
îî 
{
ïï 
GoodG2B1
ññ 
(
ññ 
)
ññ 
;
ññ 
GoodG2B2
óó 
(
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ û2
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_03 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if   

(   
$num   
==   
$num   
)   
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
intee 
)ee 
dataee "
)ee" #
;ee# $
}ff 	
}gg 
privatekk 
voidkk 
GoodG2B1kk 
(kk 
)kk 
{ll 
floatmm 
datamm 
;mm 
ifnn 

(nn 
$numnn 
!=nn 
$numnn 
)nn 
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
int{{ 
){{ 
data{{ "
){{" #
;{{# $
}|| 	
}}} 
private
ÄÄ 
void
ÄÄ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
float
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ 
$num
ÉÉ 
==
ÉÉ 
$num
ÉÉ 
)
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
else
àà 
{
ââ 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
int
êê 
)
êê 
data
êê "
)
êê" #
;
êê# $
}
ëë 	
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
)
îî 
{
ïï 
GoodG2B1
ññ 
(
ññ 
)
ññ 
;
ññ 
GoodG2B2
óó 
(
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ è4
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_04 B
:C D
AbstractTestCaseE U
{ 
private   
const   
bool   
PRIVATE_CONST_TRUE   )
=  * +
true  , 0
;  0 1
private!! 
const!! 
bool!! 
PRIVATE_CONST_FALSE!! *
=!!+ ,
false!!- 2
;!!2 3
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
float&& 
data&& 
;&& 
if'' 

('' 
PRIVATE_CONST_TRUE'' 
)'' 
{(( 	
data)) 
=)) 
float)) 
.)) 
MinValue)) !
;))! "
{++ 
	TcpClient,, 
tcpConn,, !
=,," #
null,,$ (
;,,( )
StreamReader-- 
sr-- 
=--  !
null--" &
;--& '
try.. 
{// 
tcpConn11 
=11 
new11 !
	TcpClient11" +
(11+ ,
$str11, >
,11> ?
$num11@ E
)11E F
;11F G
sr33 
=33 
new33 
StreamReader33 )
(33) *
tcpConn33* 1
.331 2
	GetStream332 ;
(33; <
)33< =
)33= >
;33> ?
string55 
stringNumber55 '
=55( )
sr55* ,
.55, -
ReadLine55- 5
(555 6
)556 7
;557 8
if66 
(66 
stringNumber66 $
!=66% '
null66( ,
)66, -
{77 
try88 
{99 
data::  
=::! "
float::# (
.::( )
Parse::) .
(::. /
stringNumber::/ ;
.::; <
Trim::< @
(::@ A
)::A B
)::B C
;::C D
};; 
catch<< 
(<< 
FormatException<< -
exceptNumberFormat<<. @
)<<@ A
{== 
IO>> 
.>> 
Logger>> %
.>>% &
Log>>& )
(>>) *
NLog>>* .
.>>. /
LogLevel>>/ 7
.>>7 8
Warn>>8 <
,>>< =
exceptNumberFormat>>> P
,>>P Q
$str	>>R Ñ
)
>>Ñ Ö
;
>>Ö Ü
}?? 
}@@ 
}AA 
catchBB 
(BB 
IOExceptionBB "
exceptIOBB# +
)BB+ ,
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
exceptIODD6 >
,DD> ?
$strDD@ [
)DD[ \
;DD\ ]
}EE 
finallyFF 
{GG 
tryII 
{JJ 
ifKK 
(KK 
srKK 
!=KK !
nullKK" &
)KK& '
{LL 
srMM 
.MM 
CloseMM $
(MM$ %
)MM% &
;MM& '
}NN 
}OO 
catchPP 
(PP 
IOExceptionPP &
exceptIOPP' /
)PP/ 0
{QQ 
IORR 
.RR 
LoggerRR !
.RR! "
LogRR" %
(RR% &
NLogRR& *
.RR* +
LogLevelRR+ 3
.RR3 4
WarnRR4 8
,RR8 9
exceptIORR: B
,RRB C
$strRRD e
)RRe f
;RRf g
}SS 
tryVV 
{WW 
ifXX 
(XX 
tcpConnXX #
!=XX$ &
nullXX' +
)XX+ ,
{YY 
tcpConnZZ #
.ZZ# $
CloseZZ$ )
(ZZ) *
)ZZ* +
;ZZ+ ,
}[[ 
}\\ 
catch]] 
(]] 
IOException]] &
exceptIO]]' /
)]]/ 0
{^^ 
IO__ 
.__ 
Logger__ !
.__! "
Log__" %
(__% &
NLog__& *
.__* +
LogLevel__+ 3
.__3 4
Warn__4 8
,__8 9
exceptIO__: B
,__B C
$str__D Z
)__Z [
;__[ \
}`` 
}aa 
}bb 
}cc 	
elsedd 
{ee 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
{jj 	
IOll 
.ll 
	WriteLinell 
(ll 
(ll 
intll 
)ll 
datall "
)ll" #
;ll# $
}mm 	
}nn 
privaterr 
voidrr 
GoodG2B1rr 
(rr 
)rr 
{ss 
floattt 
datatt 
;tt 
ifuu 

(uu 
PRIVATE_CONST_FALSEuu 
)uu  
{vv 	
datayy 
=yy 
$numyy 
;yy 
}zz 	
else{{ 
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
int
ÇÇ 
)
ÇÇ 
data
ÇÇ "
)
ÇÇ" #
;
ÇÇ# $
}
ÉÉ 	
}
ÑÑ 
private
áá 
void
áá 
GoodG2B2
áá 
(
áá 
)
áá 
{
àà 
float
ââ 
data
ââ 
;
ââ 
if
ää 

(
ää  
PRIVATE_CONST_TRUE
ää 
)
ää 
{
ãã 	
data
çç 
=
çç 
$num
çç 
;
çç 
}
éé 	
else
èè 
{
êê 	
data
ìì 
=
ìì 
$num
ìì 
;
ìì 
}
îî 	
{
ïï 	
IO
óó 
.
óó 
	WriteLine
óó 
(
óó 
(
óó 
int
óó 
)
óó 
data
óó "
)
óó" #
;
óó# $
}
òò 	
}
ôô 
public
õõ 

override
õõ 
void
õõ 
Good
õõ 
(
õõ 
)
õõ 
{
úú 
GoodG2B1
ùù 
(
ùù 
)
ùù 
;
ùù 
GoodG2B2
ûû 
(
ûû 
)
ûû 
;
ûû 
}
üü 
}°° 
}¢¢ ∆3
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_05 B
:C D
AbstractTestCaseE U
{ 
private   
bool   
privateTrue   
=   
true   #
;  # $
private!! 
bool!! 
privateFalse!! 
=!! 
false!!  %
;!!% &
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
float&& 
data&& 
;&& 
if'' 

('' 
privateTrue'' 
)'' 
{(( 	
data)) 
=)) 
float)) 
.)) 
MinValue)) !
;))! "
{++ 
	TcpClient,, 
tcpConn,, !
=,," #
null,,$ (
;,,( )
StreamReader-- 
sr-- 
=--  !
null--" &
;--& '
try.. 
{// 
tcpConn11 
=11 
new11 !
	TcpClient11" +
(11+ ,
$str11, >
,11> ?
$num11@ E
)11E F
;11F G
sr33 
=33 
new33 
StreamReader33 )
(33) *
tcpConn33* 1
.331 2
	GetStream332 ;
(33; <
)33< =
)33= >
;33> ?
string55 
stringNumber55 '
=55( )
sr55* ,
.55, -
ReadLine55- 5
(555 6
)556 7
;557 8
if66 
(66 
stringNumber66 $
!=66% '
null66( ,
)66, -
{77 
try88 
{99 
data::  
=::! "
float::# (
.::( )
Parse::) .
(::. /
stringNumber::/ ;
.::; <
Trim::< @
(::@ A
)::A B
)::B C
;::C D
};; 
catch<< 
(<< 
FormatException<< -
exceptNumberFormat<<. @
)<<@ A
{== 
IO>> 
.>> 
Logger>> %
.>>% &
Log>>& )
(>>) *
NLog>>* .
.>>. /
LogLevel>>/ 7
.>>7 8
Warn>>8 <
,>>< =
exceptNumberFormat>>> P
,>>P Q
$str	>>R Ñ
)
>>Ñ Ö
;
>>Ö Ü
}?? 
}@@ 
}AA 
catchBB 
(BB 
IOExceptionBB "
exceptIOBB# +
)BB+ ,
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
exceptIODD6 >
,DD> ?
$strDD@ [
)DD[ \
;DD\ ]
}EE 
finallyFF 
{GG 
tryII 
{JJ 
ifKK 
(KK 
srKK 
!=KK !
nullKK" &
)KK& '
{LL 
srMM 
.MM 
CloseMM $
(MM$ %
)MM% &
;MM& '
}NN 
}OO 
catchPP 
(PP 
IOExceptionPP &
exceptIOPP' /
)PP/ 0
{QQ 
IORR 
.RR 
LoggerRR !
.RR! "
LogRR" %
(RR% &
NLogRR& *
.RR* +
LogLevelRR+ 3
.RR3 4
WarnRR4 8
,RR8 9
exceptIORR: B
,RRB C
$strRRD e
)RRe f
;RRf g
}SS 
tryVV 
{WW 
ifXX 
(XX 
tcpConnXX #
!=XX$ &
nullXX' +
)XX+ ,
{YY 
tcpConnZZ #
.ZZ# $
CloseZZ$ )
(ZZ) *
)ZZ* +
;ZZ+ ,
}[[ 
}\\ 
catch]] 
(]] 
IOException]] &
exceptIO]]' /
)]]/ 0
{^^ 
IO__ 
.__ 
Logger__ !
.__! "
Log__" %
(__% &
NLog__& *
.__* +
LogLevel__+ 3
.__3 4
Warn__4 8
,__8 9
exceptIO__: B
,__B C
$str__D Z
)__Z [
;__[ \
}`` 
}aa 
}bb 
}cc 	
elsedd 
{ee 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
{jj 	
IOll 
.ll 
	WriteLinell 
(ll 
(ll 
intll 
)ll 
datall "
)ll" #
;ll# $
}mm 	
}nn 
privaterr 
voidrr 
GoodG2B1rr 
(rr 
)rr 
{ss 
floattt 
datatt 
;tt 
ifuu 

(uu 
privateFalseuu 
)uu 
{vv 	
datayy 
=yy 
$numyy 
;yy 
}zz 	
else{{ 
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
int
ÇÇ 
)
ÇÇ 
data
ÇÇ "
)
ÇÇ" #
;
ÇÇ# $
}
ÉÉ 	
}
ÑÑ 
private
áá 
void
áá 
GoodG2B2
áá 
(
áá 
)
áá 
{
àà 
float
ââ 
data
ââ 
;
ââ 
if
ää 

(
ää 
privateTrue
ää 
)
ää 
{
ãã 	
data
çç 
=
çç 
$num
çç 
;
çç 
}
éé 	
else
èè 
{
êê 	
data
ìì 
=
ìì 
$num
ìì 
;
ìì 
}
îî 	
{
ïï 	
IO
óó 
.
óó 
	WriteLine
óó 
(
óó 
(
óó 
int
óó 
)
óó 
data
óó "
)
óó" #
;
óó# $
}
òò 	
}
ôô 
public
õõ 

override
õõ 
void
õõ 
Good
õõ 
(
õõ 
)
õõ 
{
úú 
GoodG2B1
ùù 
(
ùù 
)
ùù 
;
ùù 
GoodG2B2
ûû 
(
ûû 
)
ûû 
;
ûû 
}
üü 
}°° 
}¢¢ È3
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_06 B
:C D
AbstractTestCaseE U
{ 
private   
const   
int   
PRIVATE_CONST_FIVE   (
=  ) *
$num  + ,
;  , -
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
float%% 
data%% 
;%% 
if&& 

(&& 
PRIVATE_CONST_FIVE&& 
==&& !
$num&&" #
)&&# $
{'' 	
data(( 
=(( 
float(( 
.(( 
MinValue(( !
;((! "
{** 
	TcpClient++ 
tcpConn++ !
=++" #
null++$ (
;++( )
StreamReader,, 
sr,, 
=,,  !
null,," &
;,,& '
try-- 
{.. 
tcpConn00 
=00 
new00 !
	TcpClient00" +
(00+ ,
$str00, >
,00> ?
$num00@ E
)00E F
;00F G
sr22 
=22 
new22 
StreamReader22 )
(22) *
tcpConn22* 1
.221 2
	GetStream222 ;
(22; <
)22< =
)22= >
;22> ?
string44 
stringNumber44 '
=44( )
sr44* ,
.44, -
ReadLine44- 5
(445 6
)446 7
;447 8
if55 
(55 
stringNumber55 $
!=55% '
null55( ,
)55, -
{66 
try77 
{88 
data99  
=99! "
float99# (
.99( )
Parse99) .
(99. /
stringNumber99/ ;
.99; <
Trim99< @
(99@ A
)99A B
)99B C
;99C D
}:: 
catch;; 
(;; 
FormatException;; -
exceptNumberFormat;;. @
);;@ A
{<< 
IO== 
.== 
Logger== %
.==% &
Log==& )
(==) *
NLog==* .
.==. /
LogLevel==/ 7
.==7 8
Warn==8 <
,==< =
exceptNumberFormat==> P
,==P Q
$str	==R Ñ
)
==Ñ Ö
;
==Ö Ü
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryHH 
{II 
ifJJ 
(JJ 
srJJ 
!=JJ !
nullJJ" &
)JJ& '
{KK 
srLL 
.LL 
CloseLL $
(LL$ %
)LL% &
;LL& '
}MM 
}NN 
catchOO 
(OO 
IOExceptionOO &
exceptIOOO' /
)OO/ 0
{PP 
IOQQ 
.QQ 
LoggerQQ !
.QQ! "
LogQQ" %
(QQ% &
NLogQQ& *
.QQ* +
LogLevelQQ+ 3
.QQ3 4
WarnQQ4 8
,QQ8 9
exceptIOQQ: B
,QQB C
$strQQD e
)QQe f
;QQf g
}RR 
tryUU 
{VV 
ifWW 
(WW 
tcpConnWW #
!=WW$ &
nullWW' +
)WW+ ,
{XX 
tcpConnYY #
.YY# $
CloseYY$ )
(YY) *
)YY* +
;YY+ ,
}ZZ 
}[[ 
catch\\ 
(\\ 
IOException\\ &
exceptIO\\' /
)\\/ 0
{]] 
IO^^ 
.^^ 
Logger^^ !
.^^! "
Log^^" %
(^^% &
NLog^^& *
.^^* +
LogLevel^^+ 3
.^^3 4
Warn^^4 8
,^^8 9
exceptIO^^: B
,^^B C
$str^^D Z
)^^Z [
;^^[ \
}__ 
}`` 
}aa 
}bb 	
elsecc 
{dd 	
datagg 
=gg 
$numgg 
;gg 
}hh 	
{ii 	
IOkk 
.kk 
	WriteLinekk 
(kk 
(kk 
intkk 
)kk 
datakk "
)kk" #
;kk# $
}ll 	
}mm 
privateqq 
voidqq 
GoodG2B1qq 
(qq 
)qq 
{rr 
floatss 
datass 
;ss 
iftt 

(tt 
PRIVATE_CONST_FIVEtt 
!=tt !
$numtt" #
)tt# $
{uu 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data}} 
=}} 
$num}} 
;}} 
}~~ 	
{ 	
IO
ÅÅ 
.
ÅÅ 
	WriteLine
ÅÅ 
(
ÅÅ 
(
ÅÅ 
int
ÅÅ 
)
ÅÅ 
data
ÅÅ "
)
ÅÅ" #
;
ÅÅ# $
}
ÇÇ 	
}
ÉÉ 
private
ÜÜ 
void
ÜÜ 
GoodG2B2
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
float
àà 
data
àà 
;
àà 
if
ââ 

(
ââ  
PRIVATE_CONST_FIVE
ââ 
==
ââ !
$num
ââ" #
)
ââ# $
{
ää 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
else
éé 
{
èè 	
data
íí 
=
íí 
$num
íí 
;
íí 
}
ìì 	
{
îî 	
IO
ññ 
.
ññ 
	WriteLine
ññ 
(
ññ 
(
ññ 
int
ññ 
)
ññ 
data
ññ "
)
ññ" #
;
ññ# $
}
óó 	
}
òò 
public
öö 

override
öö 
void
öö 
Good
öö 
(
öö 
)
öö 
{
õõ 
GoodG2B1
úú 
(
úú 
)
úú 
;
úú 
GoodG2B2
ùù 
(
ùù 
)
ùù 
;
ùù 
}
ûû 
}†† 
}°° ∫3
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_07 B
:C D
AbstractTestCaseE U
{ 
private   
int   
privateFive   
=   
$num   
;    
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
float%% 
data%% 
;%% 
if&& 

(&& 
privateFive&& 
==&& 
$num&& 
)&& 
{'' 	
data(( 
=(( 
float(( 
.(( 
MinValue(( !
;((! "
{** 
	TcpClient++ 
tcpConn++ !
=++" #
null++$ (
;++( )
StreamReader,, 
sr,, 
=,,  !
null,," &
;,,& '
try-- 
{.. 
tcpConn00 
=00 
new00 !
	TcpClient00" +
(00+ ,
$str00, >
,00> ?
$num00@ E
)00E F
;00F G
sr22 
=22 
new22 
StreamReader22 )
(22) *
tcpConn22* 1
.221 2
	GetStream222 ;
(22; <
)22< =
)22= >
;22> ?
string44 
stringNumber44 '
=44( )
sr44* ,
.44, -
ReadLine44- 5
(445 6
)446 7
;447 8
if55 
(55 
stringNumber55 $
!=55% '
null55( ,
)55, -
{66 
try77 
{88 
data99  
=99! "
float99# (
.99( )
Parse99) .
(99. /
stringNumber99/ ;
.99; <
Trim99< @
(99@ A
)99A B
)99B C
;99C D
}:: 
catch;; 
(;; 
FormatException;; -
exceptNumberFormat;;. @
);;@ A
{<< 
IO== 
.== 
Logger== %
.==% &
Log==& )
(==) *
NLog==* .
.==. /
LogLevel==/ 7
.==7 8
Warn==8 <
,==< =
exceptNumberFormat==> P
,==P Q
$str	==R Ñ
)
==Ñ Ö
;
==Ö Ü
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryHH 
{II 
ifJJ 
(JJ 
srJJ 
!=JJ !
nullJJ" &
)JJ& '
{KK 
srLL 
.LL 
CloseLL $
(LL$ %
)LL% &
;LL& '
}MM 
}NN 
catchOO 
(OO 
IOExceptionOO &
exceptIOOO' /
)OO/ 0
{PP 
IOQQ 
.QQ 
LoggerQQ !
.QQ! "
LogQQ" %
(QQ% &
NLogQQ& *
.QQ* +
LogLevelQQ+ 3
.QQ3 4
WarnQQ4 8
,QQ8 9
exceptIOQQ: B
,QQB C
$strQQD e
)QQe f
;QQf g
}RR 
tryUU 
{VV 
ifWW 
(WW 
tcpConnWW #
!=WW$ &
nullWW' +
)WW+ ,
{XX 
tcpConnYY #
.YY# $
CloseYY$ )
(YY) *
)YY* +
;YY+ ,
}ZZ 
}[[ 
catch\\ 
(\\ 
IOException\\ &
exceptIO\\' /
)\\/ 0
{]] 
IO^^ 
.^^ 
Logger^^ !
.^^! "
Log^^" %
(^^% &
NLog^^& *
.^^* +
LogLevel^^+ 3
.^^3 4
Warn^^4 8
,^^8 9
exceptIO^^: B
,^^B C
$str^^D Z
)^^Z [
;^^[ \
}__ 
}`` 
}aa 
}bb 	
elsecc 
{dd 	
datagg 
=gg 
$numgg 
;gg 
}hh 	
{ii 	
IOkk 
.kk 
	WriteLinekk 
(kk 
(kk 
intkk 
)kk 
datakk "
)kk" #
;kk# $
}ll 	
}mm 
privateqq 
voidqq 
GoodG2B1qq 
(qq 
)qq 
{rr 
floatss 
datass 
;ss 
iftt 

(tt 
privateFivett 
!=tt 
$numtt 
)tt 
{uu 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data}} 
=}} 
$num}} 
;}} 
}~~ 	
{ 	
IO
ÅÅ 
.
ÅÅ 
	WriteLine
ÅÅ 
(
ÅÅ 
(
ÅÅ 
int
ÅÅ 
)
ÅÅ 
data
ÅÅ "
)
ÅÅ" #
;
ÅÅ# $
}
ÇÇ 	
}
ÉÉ 
private
ÜÜ 
void
ÜÜ 
GoodG2B2
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
float
àà 
data
àà 
;
àà 
if
ââ 

(
ââ 
privateFive
ââ 
==
ââ 
$num
ââ 
)
ââ 
{
ää 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
else
éé 
{
èè 	
data
íí 
=
íí 
$num
íí 
;
íí 
}
ìì 	
{
îî 	
IO
ññ 
.
ññ 
	WriteLine
ññ 
(
ññ 
(
ññ 
int
ññ 
)
ññ 
data
ññ "
)
ññ" #
;
ññ# $
}
óó 	
}
òò 
public
öö 

override
öö 
void
öö 
Good
öö 
(
öö 
)
öö 
{
õõ 
GoodG2B1
úú 
(
úú 
)
úú 
;
úú 
GoodG2B2
ùù 
(
ùù 
)
ùù 
;
ùù 
}
ûû 
}†† 
}°° â6
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_08 B
:C D
AbstractTestCaseE U
{ 
private   
static   
bool   
PrivateReturnsTrue   *
(  * +
)  + ,
{!! 
return"" 
true"" 
;"" 
}## 
private%% 
static%% 
bool%% 
PrivateReturnsFalse%% +
(%%+ ,
)%%, -
{&& 
return'' 
false'' 
;'' 
}(( 
public++ 

override++ 
void++ 
Bad++ 
(++ 
)++ 
{,, 
float-- 
data-- 
;-- 
if.. 

(.. 
PrivateReturnsTrue.. 
(.. 
)..  
)..  !
{// 	
data00 
=00 
float00 
.00 
MinValue00 !
;00! "
{22 
	TcpClient33 
tcpConn33 !
=33" #
null33$ (
;33( )
StreamReader44 
sr44 
=44  !
null44" &
;44& '
try55 
{66 
tcpConn88 
=88 
new88 !
	TcpClient88" +
(88+ ,
$str88, >
,88> ?
$num88@ E
)88E F
;88F G
sr:: 
=:: 
new:: 
StreamReader:: )
(::) *
tcpConn::* 1
.::1 2
	GetStream::2 ;
(::; <
)::< =
)::= >
;::> ?
string<< 
stringNumber<< '
=<<( )
sr<<* ,
.<<, -
ReadLine<<- 5
(<<5 6
)<<6 7
;<<7 8
if== 
(== 
stringNumber== $
!===% '
null==( ,
)==, -
{>> 
try?? 
{@@ 
dataAA  
=AA! "
floatAA# (
.AA( )
ParseAA) .
(AA. /
stringNumberAA/ ;
.AA; <
TrimAA< @
(AA@ A
)AAA B
)AAB C
;AAC D
}BB 
catchCC 
(CC 
FormatExceptionCC -
exceptNumberFormatCC. @
)CC@ A
{DD 
IOEE 
.EE 
LoggerEE %
.EE% &
LogEE& )
(EE) *
NLogEE* .
.EE. /
LogLevelEE/ 7
.EE7 8
WarnEE8 <
,EE< =
exceptNumberFormatEE> P
,EEP Q
$str	EER Ñ
)
EEÑ Ö
;
EEÖ Ü
}FF 
}GG 
}HH 
catchII 
(II 
IOExceptionII "
exceptIOII# +
)II+ ,
{JJ 
IOKK 
.KK 
LoggerKK 
.KK 
LogKK !
(KK! "
NLogKK" &
.KK& '
LogLevelKK' /
.KK/ 0
WarnKK0 4
,KK4 5
exceptIOKK6 >
,KK> ?
$strKK@ [
)KK[ \
;KK\ ]
}LL 
finallyMM 
{NN 
tryPP 
{QQ 
ifRR 
(RR 
srRR 
!=RR !
nullRR" &
)RR& '
{SS 
srTT 
.TT 
CloseTT $
(TT$ %
)TT% &
;TT& '
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW &
exceptIOWW' /
)WW/ 0
{XX 
IOYY 
.YY 
LoggerYY !
.YY! "
LogYY" %
(YY% &
NLogYY& *
.YY* +
LogLevelYY+ 3
.YY3 4
WarnYY4 8
,YY8 9
exceptIOYY: B
,YYB C
$strYYD e
)YYe f
;YYf g
}ZZ 
try]] 
{^^ 
if__ 
(__ 
tcpConn__ #
!=__$ &
null__' +
)__+ ,
{`` 
tcpConnaa #
.aa# $
Closeaa$ )
(aa) *
)aa* +
;aa+ ,
}bb 
}cc 
catchdd 
(dd 
IOExceptiondd &
exceptIOdd' /
)dd/ 0
{ee 
IOff 
.ff 
Loggerff !
.ff! "
Logff" %
(ff% &
NLogff& *
.ff* +
LogLevelff+ 3
.ff3 4
Warnff4 8
,ff8 9
exceptIOff: B
,ffB C
$strffD Z
)ffZ [
;ff[ \
}gg 
}hh 
}ii 
}jj 	
elsekk 
{ll 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
intss 
)ss 
datass "
)ss" #
;ss# $
}tt 	
}uu 
privateyy 
voidyy 
GoodG2B1yy 
(yy 
)yy 
{zz 
float{{ 
data{{ 
;{{ 
if|| 

(|| 
PrivateReturnsFalse|| 
(||  
)||  !
)||! "
{}} 	
data
ÄÄ 
=
ÄÄ 
$num
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
else
ÇÇ 
{
ÉÉ 	
data
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
{
áá 	
IO
ââ 
.
ââ 
	WriteLine
ââ 
(
ââ 
(
ââ 
int
ââ 
)
ââ 
data
ââ "
)
ââ" #
;
ââ# $
}
ää 	
}
ãã 
private
éé 
void
éé 
GoodG2B2
éé 
(
éé 
)
éé 
{
èè 
float
êê 
data
êê 
;
êê 
if
ëë 

(
ëë  
PrivateReturnsTrue
ëë 
(
ëë 
)
ëë  
)
ëë  !
{
íí 	
data
îî 
=
îî 
$num
îî 
;
îî 
}
ïï 	
else
ññ 
{
óó 	
data
öö 
=
öö 
$num
öö 
;
öö 
}
õõ 	
{
úú 	
IO
ûû 
.
ûû 
	WriteLine
ûû 
(
ûû 
(
ûû 
int
ûû 
)
ûû 
data
ûû "
)
ûû" #
;
ûû# $
}
üü 	
}
†† 
public
¢¢ 

override
¢¢ 
void
¢¢ 
Good
¢¢ 
(
¢¢ 
)
¢¢ 
{
££ 
GoodG2B1
§§ 
(
§§ 
)
§§ 
;
§§ 
GoodG2B2
•• 
(
•• 
)
•• 
;
•• 
}
¶¶ 
}®® 
}©© ∆2
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_09 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if   

(   
IO   
.    
STATIC_READONLY_TRUE   #
)  # $
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
intee 
)ee 
dataee "
)ee" #
;ee# $
}ff 	
}gg 
privatekk 
voidkk 
GoodG2B1kk 
(kk 
)kk 
{ll 
floatmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn !
STATIC_READONLY_FALSEnn $
)nn$ %
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
int{{ 
){{ 
data{{ "
){{" #
;{{# $
}|| 	
}}} 
private
ÄÄ 
void
ÄÄ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
float
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ 
IO
ÉÉ 
.
ÉÉ "
STATIC_READONLY_TRUE
ÉÉ #
)
ÉÉ# $
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
else
àà 
{
ââ 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
int
êê 
)
êê 
data
êê "
)
êê" #
;
êê# $
}
ëë 	
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
)
îî 
{
ïï 
GoodG2B1
ññ 
(
ññ 
)
ññ 
;
ññ 
GoodG2B2
óó 
(
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ ®2
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_10 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if   

(   
IO   
.   

staticTrue   
)   
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
intee 
)ee 
dataee "
)ee" #
;ee# $
}ff 	
}gg 
privatekk 
voidkk 
GoodG2B1kk 
(kk 
)kk 
{ll 
floatmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn 
staticFalsenn 
)nn 
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
int{{ 
){{ 
data{{ "
){{" #
;{{# $
}|| 	
}}} 
private
ÄÄ 
void
ÄÄ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
float
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ 
IO
ÉÉ 
.
ÉÉ 

staticTrue
ÉÉ 
)
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
else
àà 
{
ââ 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
int
êê 
)
êê 
data
êê "
)
êê" #
;
êê# $
}
ëë 	
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
)
îî 
{
ïï 
GoodG2B1
ññ 
(
ññ 
)
ññ 
;
ññ 
GoodG2B2
óó 
(
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ õ3
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_11 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if   

(   
IO   
.   
StaticReturnsTrue    
(    !
)  ! "
)  " #
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
intee 
)ee 
dataee "
)ee" #
;ee# $
}ff 	
}gg 
privatekk 
voidkk 
GoodG2B1kk 
(kk 
)kk 
{ll 
floatmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn 
StaticReturnsFalsenn !
(nn! "
)nn" #
)nn# $
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
int{{ 
){{ 
data{{ "
){{" #
;{{# $
}|| 	
}}} 
private
ÄÄ 
void
ÄÄ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
float
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ 
IO
ÉÉ 
.
ÉÉ 
StaticReturnsTrue
ÉÉ  
(
ÉÉ  !
)
ÉÉ! "
)
ÉÉ" #
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
else
àà 
{
ââ 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
int
êê 
)
êê 
data
êê "
)
êê" #
;
êê# $
}
ëë 	
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
)
îî 
{
ïï 
GoodG2B1
ññ 
(
ññ 
)
ññ 
;
ññ 
GoodG2B2
óó 
(
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ ¨,
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_12 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if   

(   
IO   
.   $
StaticReturnsTrueOrFalse   '
(  ' (
)  ( )
)  ) *
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
intdd 
)dd 
datadd "
)dd" #
;dd# $
}ee 	
}ff 
privatekk 
voidkk 
GoodG2Bkk 
(kk 
)kk 
{ll 
floatmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn $
StaticReturnsTrueOrFalsenn '
(nn' (
)nn( )
)nn) *
{oo 	
dataqq 
=qq 
$numqq 
;qq 
}rr 	
elsess 
{tt 	
datavv 
=vv 
$numvv 
;vv 
}ww 	
{xx 	
IOzz 
.zz 
	WriteLinezz 
(zz 
(zz 
intzz 
)zz 
datazz "
)zz" #
;zz# $
}{{ 	
}|| 
public~~ 

override~~ 
void~~ 
Good~~ 
(~~ 
)~~ 
{ 
GoodG2B
ÄÄ 
(
ÄÄ 
)
ÄÄ 
;
ÄÄ 
}
ÅÅ 
}ÉÉ 
}ÑÑ Ø3
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_13 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if   

(   
IO   
.    
STATIC_READONLY_FIVE   #
==  $ &
$num  ' (
)  ( )
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
intee 
)ee 
dataee "
)ee" #
;ee# $
}ff 	
}gg 
privatekk 
voidkk 
GoodG2B1kk 
(kk 
)kk 
{ll 
floatmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn  
STATIC_READONLY_FIVEnn #
!=nn$ &
$numnn' (
)nn( )
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
int{{ 
){{ 
data{{ "
){{" #
;{{# $
}|| 	
}}} 
private
ÄÄ 
void
ÄÄ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
float
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ 
IO
ÉÉ 
.
ÉÉ "
STATIC_READONLY_FIVE
ÉÉ #
==
ÉÉ$ &
$num
ÉÉ' (
)
ÉÉ( )
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
else
àà 
{
ââ 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
int
êê 
)
êê 
data
êê "
)
êê" #
;
êê# $
}
ëë 	
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
)
îî 
{
ïï 
GoodG2B1
ññ 
(
ññ 
)
ññ 
;
ññ 
GoodG2B2
óó 
(
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ ë3
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_14 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if   

(   
IO   
.   

staticFive   
==   
$num   
)   
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
intee 
)ee 
dataee "
)ee" #
;ee# $
}ff 	
}gg 
privatekk 
voidkk 
GoodG2B1kk 
(kk 
)kk 
{ll 
floatmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn 

staticFivenn 
!=nn 
$numnn 
)nn 
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
int{{ 
){{ 
data{{ "
){{" #
;{{# $
}|| 	
}}} 
private
ÄÄ 
void
ÄÄ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
float
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ 
IO
ÉÉ 
.
ÉÉ 

staticFive
ÉÉ 
==
ÉÉ 
$num
ÉÉ 
)
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
else
àà 
{
ââ 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
int
êê 
)
êê 
data
êê "
)
êê" #
;
êê# $
}
ëë 	
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
)
îî 
{
ïï 
GoodG2B1
ññ 
(
ññ 
)
ññ 
;
ññ 
GoodG2B2
óó 
(
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ Ù4
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_15 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
= 
$num 
; 
switch   
(   
$num   
)   
{!! 	
case"" 
$num"" 
:"" 
data## 
=## 
float## 
.## 
MinValue## !
;##! "
{%% 
	TcpClient&& 
tcpConn&& !
=&&" #
null&&$ (
;&&( )
StreamReader'' 
sr'' 
=''  !
null''" &
;''& '
try(( 
{)) 
tcpConn++ 
=++ 
new++ !
	TcpClient++" +
(+++ ,
$str++, >
,++> ?
$num++@ E
)++E F
;++F G
sr-- 
=-- 
new-- 
StreamReader-- )
(--) *
tcpConn--* 1
.--1 2
	GetStream--2 ;
(--; <
)--< =
)--= >
;--> ?
string// 
stringNumber// '
=//( )
sr//* ,
.//, -
ReadLine//- 5
(//5 6
)//6 7
;//7 8
if00 
(00 
stringNumber00 $
!=00% '
null00( ,
)00, -
{11 
try22 
{33 
data44  
=44! "
float44# (
.44( )
Parse44) .
(44. /
stringNumber44/ ;
.44; <
Trim44< @
(44@ A
)44A B
)44B C
;44C D
}55 
catch66 
(66 
FormatException66 -
exceptNumberFormat66. @
)66@ A
{77 
IO88 
.88 
Logger88 %
.88% &
Log88& )
(88) *
NLog88* .
.88. /
LogLevel88/ 7
.887 8
Warn888 <
,88< =
exceptNumberFormat88> P
,88P Q
$str	88R Ñ
)
88Ñ Ö
;
88Ö Ü
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< "
exceptIO<<# +
)<<+ ,
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> !
(>>! "
NLog>>" &
.>>& '
LogLevel>>' /
.>>/ 0
Warn>>0 4
,>>4 5
exceptIO>>6 >
,>>> ?
$str>>@ [
)>>[ \
;>>\ ]
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE !
nullEE" &
)EE& '
{FF 
srGG 
.GG 
CloseGG $
(GG$ %
)GG% &
;GG& '
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ &
exceptIOJJ' /
)JJ/ 0
{KK 
IOLL 
.LL 
LoggerLL !
.LL! "
LogLL" %
(LL% &
NLogLL& *
.LL* +
LogLevelLL+ 3
.LL3 4
WarnLL4 8
,LL8 9
exceptIOLL: B
,LLB C
$strLLD e
)LLe f
;LLf g
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR #
!=RR$ &
nullRR' +
)RR+ ,
{SS 
tcpConnTT #
.TT# $
CloseTT$ )
(TT) *
)TT* +
;TT+ ,
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW &
exceptIOWW' /
)WW/ 0
{XX 
IOYY 
.YY 
LoggerYY !
.YY! "
LogYY" %
(YY% &
NLogYY& *
.YY* +
LogLevelYY+ 3
.YY3 4
WarnYY4 8
,YY8 9
exceptIOYY: B
,YYB C
$strYYD Z
)YYZ [
;YY[ \
}ZZ 
}[[ 
}\\ 
break]] 
;]] 
default^^ 
:^^ 
dataaa 
=aa 
$numaa 
;aa 
breakbb 
;bb 
}cc 	
{dd 	
IOff 
.ff 
	WriteLineff 
(ff 
(ff 
intff 
)ff 
dataff "
)ff" #
;ff# $
}gg 	
}hh 
privatell 
voidll 
GoodG2B1ll 
(ll 
)ll 
{mm 
floatnn 
datann 
=nn 
$numnn 
;nn 
switchoo 
(oo 
$numoo 
)oo 
{pp 	
caseqq 
$numqq 
:qq 
datatt 
=tt 
$numtt 
;tt 
breakuu 
;uu 
defaultvv 
:vv 
dataxx 
=xx 
$numxx 
;xx 
breakyy 
;yy 
}zz 	
{{{ 	
IO}} 
.}} 
	WriteLine}} 
(}} 
(}} 
int}} 
)}} 
data}} "
)}}" #
;}}# $
}~~ 	
} 
private
ÇÇ 
void
ÇÇ 
GoodG2B2
ÇÇ 
(
ÇÇ 
)
ÇÇ 
{
ÉÉ 
float
ÑÑ 
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
switch
ÖÖ 
(
ÖÖ 
$num
ÖÖ 
)
ÖÖ 
{
ÜÜ 	
case
áá 
$num
áá 
:
áá 
data
ââ 
=
ââ 
$num
ââ 
;
ââ 
break
ää 
;
ää 
default
ãã 
:
ãã 
data
éé 
=
éé 
$num
éé 
;
éé 
break
èè 
;
èè 
}
êê 	
{
ëë 	
IO
ìì 
.
ìì 
	WriteLine
ìì 
(
ìì 
(
ìì 
int
ìì 
)
ìì 
data
ìì "
)
ìì" #
;
ìì# $
}
îî 	
}
ïï 
public
óó 

override
óó 
void
óó 
Good
óó 
(
óó 
)
óó 
{
òò 
GoodG2B1
ôô 
(
ôô 
)
ôô 
;
ôô 
GoodG2B2
öö 
(
öö 
)
öö 
;
öö 
}
õõ 
}ùù 
}ûû ‚)
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_16 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
while   
(   
true   
)   
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
break\\ 
;\\ 
}]] 	
{^^ 	
IO`` 
.`` 
	WriteLine`` 
(`` 
(`` 
int`` 
)`` 
data`` "
)``" #
;``# $
}aa 	
}bb 
privateff 
voidff 
GoodG2Bff 
(ff 
)ff 
{gg 
floathh 
datahh 
;hh 
whileii 
(ii 
trueii 
)ii 
{jj 	
datall 
=ll 
$numll 
;ll 
breakmm 
;mm 
}nn 	
{oo 	
IOqq 
.qq 
	WriteLineqq 
(qq 
(qq 
intqq 
)qq 
dataqq "
)qq" #
;qq# $
}rr 	
}ss 
publicuu 

overrideuu 
voiduu 
Gooduu 
(uu 
)uu 
{vv 
GoodG2Bww 
(ww 
)ww 
;ww 
}xx 
}zz 
}{{ “+
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_17 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	
forZZ 
(ZZ 
intZZ 
iZZ 
=ZZ 
$numZZ 
;ZZ 
iZZ 
<ZZ 
$numZZ 
;ZZ 
iZZ  
++ZZ  "
)ZZ" #
{[[ 	
{\\ 
IO^^ 
.^^ 
	WriteLine^^ 
(^^ 
(^^ 
int^^ !
)^^! "
data^^" &
)^^& '
;^^' (
}__ 
}`` 	
}aa 
privateff 
voidff 
GoodG2Bff 
(ff 
)ff 
{gg 
floathh 
datahh 
;hh 
datajj 
=jj 
$numjj 
;jj 
forkk 
(kk 
intkk 
ikk 
=kk 
$numkk 
;kk 
ikk 
<kk 
$numkk 
;kk 
ikk  
++kk  "
)kk" #
{ll 	
{mm 
IOoo 
.oo 
	WriteLineoo 
(oo 
(oo 
intoo !
)oo! "
dataoo" &
)oo& '
;oo' (
}pp 
}qq 	
}rr 
publictt 

overridett 
voidtt 
Goodtt 
(tt 
)tt 
{uu 
GoodG2Bvv 
(vv 
)vv 
;vv 
}ww 
}yy 
}zz “?
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_21 B
:C D
AbstractTestCaseE U
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public   

override   
void   
Bad   
(   
)   
{!! 
float"" 
data"" 
;"" 

badPrivate## 
=## 
true## 
;## 
data$$ 
=$$ 

Bad_source$$ 
($$ 
)$$ 
;$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
int'' 
)'' 
data'' "
)''" #
;''# $
}(( 	
})) 
private++ 
float++ 

Bad_source++ 
(++ 
)++ 
{,, 
float-- 
data-- 
;-- 
if.. 

(.. 

badPrivate.. 
).. 
{// 	
data00 
=00 
float00 
.00 
MinValue00 !
;00! "
{22 
	TcpClient33 
tcpConn33 !
=33" #
null33$ (
;33( )
StreamReader44 
sr44 
=44  !
null44" &
;44& '
try55 
{66 
tcpConn88 
=88 
new88 !
	TcpClient88" +
(88+ ,
$str88, >
,88> ?
$num88@ E
)88E F
;88F G
sr:: 
=:: 
new:: 
StreamReader:: )
(::) *
tcpConn::* 1
.::1 2
	GetStream::2 ;
(::; <
)::< =
)::= >
;::> ?
string<< 
stringNumber<< '
=<<( )
sr<<* ,
.<<, -
ReadLine<<- 5
(<<5 6
)<<6 7
;<<7 8
if== 
(== 
stringNumber== $
!===% '
null==( ,
)==, -
{>> 
try?? 
{@@ 
dataAA  
=AA! "
floatAA# (
.AA( )
ParseAA) .
(AA. /
stringNumberAA/ ;
.AA; <
TrimAA< @
(AA@ A
)AAA B
)AAB C
;AAC D
}BB 
catchCC 
(CC 
FormatExceptionCC -
exceptNumberFormatCC. @
)CC@ A
{DD 
IOEE 
.EE 
LoggerEE %
.EE% &
LogEE& )
(EE) *
NLogEE* .
.EE. /
LogLevelEE/ 7
.EE7 8
WarnEE8 <
,EE< =
exceptNumberFormatEE> P
,EEP Q
$str	EER Ñ
)
EEÑ Ö
;
EEÖ Ü
}FF 
}GG 
}HH 
catchII 
(II 
IOExceptionII "
exceptIOII# +
)II+ ,
{JJ 
IOKK 
.KK 
LoggerKK 
.KK 
LogKK !
(KK! "
NLogKK" &
.KK& '
LogLevelKK' /
.KK/ 0
WarnKK0 4
,KK4 5
exceptIOKK6 >
,KK> ?
$strKK@ [
)KK[ \
;KK\ ]
}LL 
finallyMM 
{NN 
tryPP 
{QQ 
ifRR 
(RR 
srRR 
!=RR !
nullRR" &
)RR& '
{SS 
srTT 
.TT 
CloseTT $
(TT$ %
)TT% &
;TT& '
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW &
exceptIOWW' /
)WW/ 0
{XX 
IOYY 
.YY 
LoggerYY !
.YY! "
LogYY" %
(YY% &
NLogYY& *
.YY* +
LogLevelYY+ 3
.YY3 4
WarnYY4 8
,YY8 9
exceptIOYY: B
,YYB C
$strYYD e
)YYe f
;YYf g
}ZZ 
try]] 
{^^ 
if__ 
(__ 
tcpConn__ #
!=__$ &
null__' +
)__+ ,
{`` 
tcpConnaa #
.aa# $
Closeaa$ )
(aa) *
)aa* +
;aa+ ,
}bb 
}cc 
catchdd 
(dd 
IOExceptiondd &
exceptIOdd' /
)dd/ 0
{ee 
IOff 
.ff 
Loggerff !
.ff! "
Logff" %
(ff% &
NLogff& *
.ff* +
LogLevelff+ 3
.ff3 4
Warnff4 8
,ff8 9
exceptIOff: B
,ffB C
$strffD Z
)ffZ [
;ff[ \
}gg 
}hh 
}ii 
}jj 	
elsekk 
{ll 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
returnqq 
dataqq 
;qq 
}rr 
privateuu 
booluu 
goodG2B1_privateuu !
=uu" #
falseuu$ )
;uu) *
privatevv 
boolvv 
GoodG2B2_privatevv !
=vv" #
falsevv$ )
;vv) *
publicxx 

overridexx 
voidxx 
Goodxx 
(xx 
)xx 
{yy 
GoodG2B1zz 
(zz 
)zz 
;zz 
GoodG2B2{{ 
({{ 
){{ 
;{{ 
}|| 
private 
void 
GoodG2B1 
( 
) 
{
ÄÄ 
float
ÅÅ 
data
ÅÅ 
;
ÅÅ 
goodG2B1_private
ÇÇ 
=
ÇÇ 
false
ÇÇ  
;
ÇÇ  !
data
ÉÉ 
=
ÉÉ 
GoodG2B1_source
ÉÉ 
(
ÉÉ 
)
ÉÉ  
;
ÉÉ  !
{
ÑÑ 	
IO
ÜÜ 
.
ÜÜ 
	WriteLine
ÜÜ 
(
ÜÜ 
(
ÜÜ 
int
ÜÜ 
)
ÜÜ 
data
ÜÜ "
)
ÜÜ" #
;
ÜÜ# $
}
áá 	
}
àà 
private
ää 
float
ää 
GoodG2B1_source
ää !
(
ää! "
)
ää" #
{
ãã 
float
åå 
data
åå 
=
åå 
$num
åå 
;
åå 
if
çç 

(
çç 
goodG2B1_private
çç 
)
çç 
{
éé 	
data
ëë 
=
ëë 
$num
ëë 
;
ëë 
}
íí 	
else
ìì 
{
îî 	
data
ññ 
=
ññ 
$num
ññ 
;
ññ 
}
óó 	
return
òò 
data
òò 
;
òò 
}
ôô 
private
úú 
void
úú 
GoodG2B2
úú 
(
úú 
)
úú 
{
ùù 
float
ûû 
data
ûû 
;
ûû 
GoodG2B2_private
üü 
=
üü 
true
üü 
;
üü  
data
†† 
=
†† 
GoodG2B2_source
†† 
(
†† 
)
††  
;
††  !
{
°° 	
IO
££ 
.
££ 
	WriteLine
££ 
(
££ 
(
££ 
int
££ 
)
££ 
data
££ "
)
££" #
;
££# $
}
§§ 	
}
•• 
private
ßß 
float
ßß 
GoodG2B2_source
ßß !
(
ßß! "
)
ßß" #
{
®® 
float
©© 
data
©© 
=
©© 
$num
©© 
;
©© 
if
™™ 

(
™™ 
GoodG2B2_private
™™ 
)
™™ 
{
´´ 	
data
≠≠ 
=
≠≠ 
$num
≠≠ 
;
≠≠ 
}
ÆÆ 	
else
ØØ 
{
∞∞ 	
data
≥≥ 
=
≥≥ 
$num
≥≥ 
;
≥≥ 
}
¥¥ 	
return
µµ 
data
µµ 
;
µµ 
}
∂∂ 
}∏∏ 
}ππ ∞
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_22a C
:D E
AbstractTestCaseF V
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_22b!! L
.!!L M
	BadSource!!M V
(!!V W
)!!W X
;!!X Y
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
int$$ 
)$$ 
data$$ "
)$$" #
;$$# $
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
float66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_22b88 L
.88L M
GoodG2B1Source88M [
(88[ \
)88\ ]
;88] ^
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
int;; 
);; 
data;; "
);;" #
;;;# $
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
floatBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_22bDD L
.DDL M
GoodG2B2SourceDDM [
(DD[ \
)DD\ ]
;DD] ^
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
intGG 
)GG 
dataGG "
)GG" #
;GG# $
}HH 	
}II 
}KK 
}LL ˆ-
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_22b C
{ 
public 

static 
float 
	BadSource !
(! "
)" #
{ 
float 
data 
; 
if   

(   I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_22a   I
.  I J
badPublicStatic  J Y
)  Y Z
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
returncc 
datacc 
;cc 
}dd 
publicii 

staticii 
floatii 
GoodG2B1Sourceii &
(ii& '
)ii' (
{jj 
floatkk 
datakk 
;kk 
ifll 

(ll I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_22all I
.llI J 
goodG2B1PublicStaticllJ ^
)ll^ _
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
elserr 
{ss 	
datauu 
=uu 
$numuu 
;uu 
}vv 	
returnww 
dataww 
;ww 
}xx 
public{{ 

static{{ 
float{{ 
GoodG2B2Source{{ &
({{& '
){{' (
{|| 
float}} 
data}} 
;}} 
if~~ 

(~~ I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_22a~~ I
.~~I J 
GoodG2B2PublicStatic~~J ^
)~~^ _
{ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
else
ÉÉ 
{
ÑÑ 	
data
áá 
=
áá 
$num
áá 
;
áá 
}
àà 	
return
ââ 
data
ââ 
;
ââ 
}
ää 
}åå 
}çç Ü,
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_31 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float   
dataCopy   
;   
{!! 	
float"" 
data"" 
;"" 
data## 
=## 
float## 
.## 
MinValue## !
;##! "
{%% 
	TcpClient&& 
tcpConn&& !
=&&" #
null&&$ (
;&&( )
StreamReader'' 
sr'' 
=''  !
null''" &
;''& '
try(( 
{)) 
tcpConn++ 
=++ 
new++ !
	TcpClient++" +
(+++ ,
$str++, >
,++> ?
$num++@ E
)++E F
;++F G
sr-- 
=-- 
new-- 
StreamReader-- )
(--) *
tcpConn--* 1
.--1 2
	GetStream--2 ;
(--; <
)--< =
)--= >
;--> ?
string// 
stringNumber// '
=//( )
sr//* ,
.//, -
ReadLine//- 5
(//5 6
)//6 7
;//7 8
if00 
(00 
stringNumber00 $
!=00% '
null00( ,
)00, -
{11 
try22 
{33 
data44  
=44! "
float44# (
.44( )
Parse44) .
(44. /
stringNumber44/ ;
.44; <
Trim44< @
(44@ A
)44A B
)44B C
;44C D
}55 
catch66 
(66 
FormatException66 -
exceptNumberFormat66. @
)66@ A
{77 
IO88 
.88 
Logger88 %
.88% &
Log88& )
(88) *
NLog88* .
.88. /
LogLevel88/ 7
.887 8
Warn888 <
,88< =
exceptNumberFormat88> P
,88P Q
$str	88R Ñ
)
88Ñ Ö
;
88Ö Ü
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< "
exceptIO<<# +
)<<+ ,
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> !
(>>! "
NLog>>" &
.>>& '
LogLevel>>' /
.>>/ 0
Warn>>0 4
,>>4 5
exceptIO>>6 >
,>>> ?
$str>>@ [
)>>[ \
;>>\ ]
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE !
nullEE" &
)EE& '
{FF 
srGG 
.GG 
CloseGG $
(GG$ %
)GG% &
;GG& '
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ &
exceptIOJJ' /
)JJ/ 0
{KK 
IOLL 
.LL 
LoggerLL !
.LL! "
LogLL" %
(LL% &
NLogLL& *
.LL* +
LogLevelLL+ 3
.LL3 4
WarnLL4 8
,LL8 9
exceptIOLL: B
,LLB C
$strLLD e
)LLe f
;LLf g
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR #
!=RR$ &
nullRR' +
)RR+ ,
{SS 
tcpConnTT #
.TT# $
CloseTT$ )
(TT) *
)TT* +
;TT+ ,
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW &
exceptIOWW' /
)WW/ 0
{XX 
IOYY 
.YY 
LoggerYY !
.YY! "
LogYY" %
(YY% &
NLogYY& *
.YY* +
LogLevelYY+ 3
.YY3 4
WarnYY4 8
,YY8 9
exceptIOYY: B
,YYB C
$strYYD Z
)YYZ [
;YY[ \
}ZZ 
}[[ 
}\\ 
dataCopy]] 
=]] 
data]] 
;]] 
}^^ 	
{__ 	
float`` 
data`` 
=`` 
dataCopy`` !
;``! "
{aa 
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
intcc !
)cc! "
datacc" &
)cc& '
;cc' (
}dd 
}ee 	
}ff 
publicii 

overrideii 
voidii 
Goodii 
(ii 
)ii 
{jj 
GoodG2Bkk 
(kk 
)kk 
;kk 
}ll 
privateoo 
voidoo 
GoodG2Boo 
(oo 
)oo 
{pp 
floatqq 
dataCopyqq 
;qq 
{rr 	
floatss 
datass 
;ss 
datauu 
=uu 
$numuu 
;uu 
dataCopyvv 
=vv 
datavv 
;vv 
}ww 	
{xx 	
floatyy 
datayy 
=yy 
dataCopyyy !
;yy! "
{zz 
IO|| 
.|| 
	WriteLine|| 
(|| 
(|| 
int|| !
)||! "
data||" &
)||& '
;||' (
}}} 
}~~ 	
} 
}ÅÅ 
}ÇÇ Ç,
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_41 B
:C D
AbstractTestCaseE U
{ 
private 
static 
void 
BadSink 
(  
float  %
data& *
)+ ,
{ 
{ 	
IO   
.   
	WriteLine   
(   
(   
int   
)   
data   "
)  " #
;  # $
}!! 	
}"" 
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
float&& 
data&& 
;&& 
data'' 
='' 
float'' 
.'' 
MinValue'' 
;'' 
{)) 	
	TcpClient** 
tcpConn** 
=** 
null**  $
;**$ %
StreamReader++ 
sr++ 
=++ 
null++ "
;++" #
try,, 
{-- 
tcpConn// 
=// 
new// 
	TcpClient// '
(//' (
$str//( :
,//: ;
$num//< A
)//A B
;//B C
sr11 
=11 
new11 
StreamReader11 %
(11% &
tcpConn11& -
.11- .
	GetStream11. 7
(117 8
)118 9
)119 :
;11: ;
string33 
stringNumber33 #
=33$ %
sr33& (
.33( )
ReadLine33) 1
(331 2
)332 3
;333 4
if44 
(44 
stringNumber44  
!=44! #
null44$ (
)44( )
{55 
try66 
{77 
data88 
=88 
float88 $
.88$ %
Parse88% *
(88* +
stringNumber88+ 7
.887 8
Trim888 <
(88< =
)88= >
)88> ?
;88? @
}99 
catch:: 
(:: 
FormatException:: )
exceptNumberFormat::* <
)::< =
{;; 
IO<< 
.<< 
Logger<< !
.<<! "
Log<<" %
(<<% &
NLog<<& *
.<<* +
LogLevel<<+ 3
.<<3 4
Warn<<4 8
,<<8 9
exceptNumberFormat<<: L
,<<L M
$str	<<N Ä
)
<<Ä Å
;
<<Å Ç
}== 
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ 
exceptIO@@ '
)@@' (
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
exceptIOBB2 :
,BB: ;
$strBB< W
)BBW X
;BBX Y
}CC 
finallyDD 
{EE 
tryGG 
{HH 
ifII 
(II 
srII 
!=II 
nullII "
)II" #
{JJ 
srKK 
.KK 
CloseKK  
(KK  !
)KK! "
;KK" #
}LL 
}MM 
catchNN 
(NN 
IOExceptionNN "
exceptIONN# +
)NN+ ,
{OO 
IOPP 
.PP 
LoggerPP 
.PP 
LogPP !
(PP! "
NLogPP" &
.PP& '
LogLevelPP' /
.PP/ 0
WarnPP0 4
,PP4 5
exceptIOPP6 >
,PP> ?
$strPP@ a
)PPa b
;PPb c
}QQ 
tryTT 
{UU 
ifVV 
(VV 
tcpConnVV 
!=VV  "
nullVV# '
)VV' (
{WW 
tcpConnXX 
.XX  
CloseXX  %
(XX% &
)XX& '
;XX' (
}YY 
}ZZ 
catch[[ 
([[ 
IOException[[ "
exceptIO[[# +
)[[+ ,
{\\ 
IO]] 
.]] 
Logger]] 
.]] 
Log]] !
(]]! "
NLog]]" &
.]]& '
LogLevel]]' /
.]]/ 0
Warn]]0 4
,]]4 5
exceptIO]]6 >
,]]> ?
$str]]@ V
)]]V W
;]]W X
}^^ 
}__ 
}`` 	
BadSinkaa 
(aa 
dataaa 
)aa 
;aa 
}bb 
publicee 

overrideee 
voidee 
Goodee 
(ee 
)ee 
{ff 
GoodG2Bgg 
(gg 
)gg 
;gg 
}hh 
privatejj 
staticjj 
voidjj 
GoodG2BSinkjj #
(jj# $
floatjj$ )
datajj* .
)jj/ 0
{kk 
{ll 	
IOnn 
.nn 
	WriteLinenn 
(nn 
(nn 
intnn 
)nn 
datann "
)nn" #
;nn# $
}oo 	
}pp 
privatess 
staticss 
voidss 
GoodG2Bss 
(ss  
)ss  !
{tt 
floatuu 
datauu 
;uu 
dataww 
=ww 
$numww 
;ww 
GoodG2BSinkxx 
(xx 
dataxx 
)xx 
;xx 
}yy 
}{{ 
}|| ,
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_42 B
:C D
AbstractTestCaseE U
{ 
private 
static 
float 
	BadSource "
(" #
)# $
{ 
float 
data 
; 
data 
= 
float 
. 
MinValue 
; 
{!! 	
	TcpClient"" 
tcpConn"" 
="" 
null""  $
;""$ %
StreamReader## 
sr## 
=## 
null## "
;##" #
try$$ 
{%% 
tcpConn'' 
='' 
new'' 
	TcpClient'' '
(''' (
$str''( :
,'': ;
$num''< A
)''A B
;''B C
sr)) 
=)) 
new)) 
StreamReader)) %
())% &
tcpConn))& -
.))- .
	GetStream)). 7
())7 8
)))8 9
)))9 :
;)): ;
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
float00 $
.00$ %
Parse00% *
(00* +
stringNumber00+ 7
.007 8
Trim008 <
(00< =
)00= >
)00> ?
;00? @
}11 
catch22 
(22 
FormatException22 )
exceptNumberFormat22* <
)22< =
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ a
)HHa b
;HHb c
}II 
tryLL 
{MM 
ifNN 
(NN 
tcpConnNN 
!=NN  "
nullNN# '
)NN' (
{OO 
tcpConnPP 
.PP  
ClosePP  %
(PP% &
)PP& '
;PP' (
}QQ 
}RR 
catchSS 
(SS 
IOExceptionSS "
exceptIOSS# +
)SS+ ,
{TT 
IOUU 
.UU 
LoggerUU 
.UU 
LogUU !
(UU! "
NLogUU" &
.UU& '
LogLevelUU' /
.UU/ 0
WarnUU0 4
,UU4 5
exceptIOUU6 >
,UU> ?
$strUU@ V
)UUV W
;UUW X
}VV 
}WW 
}XX 	
returnYY 
dataYY 
;YY 
}ZZ 
public]] 

override]] 
void]] 
Bad]] 
(]] 
)]] 
{^^ 
float__ 
data__ 
=__ 
	BadSource__ 
(__ 
)__  
;__  !
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
intbb 
)bb 
databb "
)bb" #
;bb# $
}cc 	
}dd 
privategg 
staticgg 
floatgg 
GoodG2BSourcegg &
(gg& '
)gg' (
{hh 
floatii 
dataii 
;ii 
datakk 
=kk 
$numkk 
;kk 
returnll 
datall 
;ll 
}mm 
privatepp 
staticpp 
voidpp 
GoodG2Bpp 
(pp  
)pp  !
{qq 
floatrr 
datarr 
=rr 
GoodG2BSourcerr "
(rr" #
)rr# $
;rr$ %
{ss 	
IOuu 
.uu 
	WriteLineuu 
(uu 
(uu 
intuu 
)uu 
datauu "
)uu" #
;uu# $
}vv 	
}ww 
publicyy 

overrideyy 
voidyy 
Goodyy 
(yy 
)yy 
{zz 
GoodG2B{{ 
({{ 
){{ 
;{{ 
}|| 
}~~ 
} Ã.
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_45 B
:C D
AbstractTestCaseE U
{ 
private 
float 
dataBad 
; 
private 
float 
dataGoodG2B 
; 
private   
void   
BadSink   
(   
)   
{!! 
float"" 
data"" 
="" 
dataBad"" 
;"" 
{## 	
IO%% 
.%% 
	WriteLine%% 
(%% 
(%% 
int%% 
)%% 
data%% "
)%%" #
;%%# $
}&& 	
}'' 
public** 

override** 
void** 
Bad** 
(** 
)** 
{++ 
float,, 
data,, 
;,, 
data-- 
=-- 
float-- 
.-- 
MinValue-- 
;-- 
{// 	
	TcpClient00 
tcpConn00 
=00 
null00  $
;00$ %
StreamReader11 
sr11 
=11 
null11 "
;11" #
try22 
{33 
tcpConn55 
=55 
new55 
	TcpClient55 '
(55' (
$str55( :
,55: ;
$num55< A
)55A B
;55B C
sr77 
=77 
new77 
StreamReader77 %
(77% &
tcpConn77& -
.77- .
	GetStream77. 7
(777 8
)778 9
)779 :
;77: ;
string99 
stringNumber99 #
=99$ %
sr99& (
.99( )
ReadLine99) 1
(991 2
)992 3
;993 4
if:: 
(:: 
stringNumber::  
!=::! #
null::$ (
)::( )
{;; 
try<< 
{== 
data>> 
=>> 
float>> $
.>>$ %
Parse>>% *
(>>* +
stringNumber>>+ 7
.>>7 8
Trim>>8 <
(>>< =
)>>= >
)>>> ?
;>>? @
}?? 
catch@@ 
(@@ 
FormatException@@ )
exceptNumberFormat@@* <
)@@< =
{AA 
IOBB 
.BB 
LoggerBB !
.BB! "
LogBB" %
(BB% &
NLogBB& *
.BB* +
LogLevelBB+ 3
.BB3 4
WarnBB4 8
,BB8 9
exceptNumberFormatBB: L
,BBL M
$str	BBN Ä
)
BBÄ Å
;
BBÅ Ç
}CC 
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF 
exceptIOFF '
)FF' (
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH "
.HH" #
LogLevelHH# +
.HH+ ,
WarnHH, 0
,HH0 1
exceptIOHH2 :
,HH: ;
$strHH< W
)HHW X
;HHX Y
}II 
finallyJJ 
{KK 
tryMM 
{NN 
ifOO 
(OO 
srOO 
!=OO 
nullOO "
)OO" #
{PP 
srQQ 
.QQ 
CloseQQ  
(QQ  !
)QQ! "
;QQ" #
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ a
)VVa b
;VVb c
}WW 
tryZZ 
{[[ 
if\\ 
(\\ 
tcpConn\\ 
!=\\  "
null\\# '
)\\' (
{]] 
tcpConn^^ 
.^^  
Close^^  %
(^^% &
)^^& '
;^^' (
}__ 
}`` 
catchaa 
(aa 
IOExceptionaa "
exceptIOaa# +
)aa+ ,
{bb 
IOcc 
.cc 
Loggercc 
.cc 
Logcc !
(cc! "
NLogcc" &
.cc& '
LogLevelcc' /
.cc/ 0
Warncc0 4
,cc4 5
exceptIOcc6 >
,cc> ?
$strcc@ V
)ccV W
;ccW X
}dd 
}ee 
}ff 	
dataBadgg 
=gg 
datagg 
;gg 
BadSinkhh 
(hh 
)hh 
;hh 
}ii 
publicll 

overridell 
voidll 
Goodll 
(ll 
)ll 
{mm 
GoodG2Bnn 
(nn 
)nn 
;nn 
}oo 
privateqq 
voidqq 
GoodG2BSinkqq 
(qq 
)qq 
{rr 
floatss 
datass 
=ss 
dataGoodG2Bss  
;ss  !
{tt 	
IOvv 
.vv 
	WriteLinevv 
(vv 
(vv 
intvv 
)vv 
datavv "
)vv" #
;vv# $
}ww 	
}xx 
private{{ 
void{{ 
GoodG2B{{ 
({{ 
){{ 
{|| 
float}} 
data}} 
;}} 
data 
= 
$num 
; 
dataGoodG2B
ÄÄ 
=
ÄÄ 
data
ÄÄ 
;
ÄÄ 
GoodG2BSink
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
}
ÇÇ 
}ÑÑ 
}ÖÖ ∫'
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_51a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data 
= 
float 
. 
MinValue 
; 
{!! 	
	TcpClient"" 
tcpConn"" 
="" 
null""  $
;""$ %
StreamReader## 
sr## 
=## 
null## "
;##" #
try$$ 
{%% 
tcpConn'' 
='' 
new'' 
	TcpClient'' '
(''' (
$str''( :
,'': ;
$num''< A
)''A B
;''B C
sr)) 
=)) 
new)) 
StreamReader)) %
())% &
tcpConn))& -
.))- .
	GetStream)). 7
())7 8
)))8 9
)))9 :
;)): ;
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
float00 $
.00$ %
Parse00% *
(00* +
stringNumber00+ 7
.007 8
Trim008 <
(00< =
)00= >
)00> ?
;00? @
}11 
catch22 
(22 
FormatException22 )
exceptNumberFormat22* <
)22< =
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ a
)HHa b
;HHb c
}II 
tryLL 
{MM 
ifNN 
(NN 
tcpConnNN 
!=NN  "
nullNN# '
)NN' (
{OO 
tcpConnPP 
.PP  
ClosePP  %
(PP% &
)PP& '
;PP' (
}QQ 
}RR 
catchSS 
(SS 
IOExceptionSS "
exceptIOSS# +
)SS+ ,
{TT 
IOUU 
.UU 
LoggerUU 
.UU 
LogUU !
(UU! "
NLogUU" &
.UU& '
LogLevelUU' /
.UU/ 0
WarnUU0 4
,UU4 5
exceptIOUU6 >
,UU> ?
$strUU@ V
)UUV W
;UUW X
}VV 
}WW 
}XX 	I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_51bYY E
.YYE F
BadSinkYYF M
(YYM N
dataYYN R
)YYT U
;YYU V
}ZZ 
public]] 

override]] 
void]] 
Good]] 
(]] 
)]] 
{^^ 
GoodG2B__ 
(__ 
)__ 
;__ 
}`` 
privatecc 
voidcc 
GoodG2Bcc 
(cc 
)cc 
{dd 
floatee 
dataee 
;ee 
datagg 
=gg 
$numgg 
;gg I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_51bhh E
.hhE F
GoodG2BSinkhhF Q
(hhQ R
datahhR V
)hhX Y
;hhY Z
}ii 
}kk 
}ll £	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_51b C
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
float### (
data##) -
)##. /
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
int'' 
)'' 
data'' "
)''" #
;''# $
}(( 	
})) 
}++ 
},, ∫'
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_52a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_52bZZ E
.ZZE F
BadSinkZZF M
(ZZM N
dataZZN R
)ZZS T
;ZZT U
}[[ 
public^^ 

override^^ 
void^^ 
Good^^ 
(^^ 
)^^ 
{__ 
GoodG2B`` 
(`` 
)`` 
;`` 
}aa 
privatedd 
voiddd 
GoodG2Bdd 
(dd 
)dd 
{ee 
floatff 
dataff 
;ff 
datahh 
=hh 
$numhh 
;hh I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_52bii E
.iiE F
GoodG2BSinkiiF Q
(iiQ R
dataiiR V
)iiW X
;iiX Y
}jj 
}ll 
}mm ˇ
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_52b C
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_52c E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
float!!# (
data!!) -
)!!. /
{"" I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_52c## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' £	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_52c C
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
float$$# (
data$$) -
)$$. /
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
int(( 
)(( 
data(( "
)((" #
;((# $
})) 	
}** 
},, 
}-- ∫'
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_53a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_53bZZ E
.ZZE F
BadSinkZZF M
(ZZM N
dataZZN R
)ZZS T
;ZZT U
}[[ 
public^^ 

override^^ 
void^^ 
Good^^ 
(^^ 
)^^ 
{__ 
GoodG2B`` 
(`` 
)`` 
;`` 
}aa 
privatedd 
voiddd 
GoodG2Bdd 
(dd 
)dd 
{ee 
floatff 
dataff 
;ff 
datahh 
=hh 
$numhh 
;hh I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_53bii E
.iiE F
GoodG2BSinkiiF Q
(iiQ R
dataiiR V
)iiW X
;iiX Y
}jj 
}ll 
}mm ˇ
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_53b C
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_53c E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
float!!# (
data!!) -
)!!. /
{"" I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_53c## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' ˇ
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_53c C
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_53d E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
float!!# (
data!!) -
)!!. /
{"" I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_53d## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' £	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_53d C
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
float$$# (
data$$) -
)$$. /
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
int(( 
)(( 
data(( "
)((" #
;((# $
})) 	
}** 
},, 
}-- ∫'
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_54a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_54bZZ E
.ZZE F
BadSinkZZF M
(ZZM N
dataZZN R
)ZZS T
;ZZT U
}[[ 
public^^ 

override^^ 
void^^ 
Good^^ 
(^^ 
)^^ 
{__ 
GoodG2B`` 
(`` 
)`` 
;`` 
}aa 
privatedd 
voiddd 
GoodG2Bdd 
(dd 
)dd 
{ee 
floatff 
dataff 
;ff 
datahh 
=hh 
$numhh 
;hh I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_54bii E
.iiE F
GoodG2BSinkiiF Q
(iiQ R
dataiiR V
)iiW X
;iiX Y
}jj 
}ll 
}mm ˇ
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_54b C
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_54c E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
float!!# (
data!!) -
)!!. /
{"" I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_54c## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' ˇ
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_54c C
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_54d E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
float!!# (
data!!) -
)!!. /
{"" I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_54d## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' ˇ
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_54d C
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_54e E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
float!!# (
data!!) -
)!!. /
{"" I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_54e## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' £	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_54e C
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
float$$# (
data$$) -
)$$. /
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
int(( 
)(( 
data(( "
)((" #
;((# $
})) 	
}** 
},, 
}-- ı
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_61a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
= I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_61b R
.R S
	BadSourceS \
(\ ]
)] ^
;^ _
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
float++ 
data++ 
=++ I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_61b++ R
.++R S
GoodG2BSource++S `
(++` a
)++a b
;++b c
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
int.. 
).. 
data.. "
).." #
;..# $
}// 	
}00 
}22 
}33 Í#
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_61b C
{ 
public 

static 
float 
	BadSource !
(! "
)" #
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	
returnZZ 
dataZZ 
;ZZ 
}[[ 
public`` 

static`` 
float`` 
GoodG2BSource`` %
(``% &
)``& '
{aa 
floatbb 
databb 
;bb 
datadd 
=dd 
$numdd 
;dd 
returnee 
dataee 
;ee 
}ff 
}hh 
}ii ∫,
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_66a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	
floatZZ 
[ZZ 
]ZZ 
	dataArrayZZ 
=ZZ 
newZZ 
floatZZ  %
[ZZ% &
$numZZ& '
]ZZ' (
;ZZ( )
	dataArray[[ 
[[[ 
$num[[ 
][[ 
=[[ 
data[[ 
;[[ I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_66b\\ E
.\\E F
BadSink\\F M
(\\M N
	dataArray\\N W
)\\Y Z
;\\Z [
}]] 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2Bbb 
(bb 
)bb 
;bb 
}cc 
privateff 
staticff 
voidff 
GoodG2Bff 
(ff  
)ff  !
{gg 
floathh 
datahh 
;hh 
datajj 
=jj 
$numjj 
;jj 
floatkk 
[kk 
]kk 
	dataArraykk 
=kk 
newkk 
floatkk  %
[kk% &
$numkk& '
]kk' (
;kk( )
	dataArrayll 
[ll 
$numll 
]ll 
=ll 
datall 
;ll I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_66bmm E
.mmE F
GoodG2BSinkmmF Q
(mmQ R
	dataArraymmR [
)mm] ^
;mm^ _
}nn 
}pp 
}qq ˝
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_66b C
{ 
public 

static 
void 
BadSink 
( 
float $
[$ %
]% &
	dataArray' 0
)1 2
{ 
float 
data 
= 
	dataArray 
[ 
$num  
]  !
;! "
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
float%%# (
[%%( )
]%%) *
	dataArray%%+ 4
)%%5 6
{&& 
float'' 
data'' 
='' 
	dataArray'' 
['' 
$num''  
]''  !
;''! "
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
int** 
)** 
data** "
)**" #
;**# $
}++ 	
},, 
}.. 
}// †-
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_67a C
:D E
AbstractTestCaseF V
{ 
public 

class 
	Container 
{ 
public 
float 
containerOne !
;! "
}   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
float$$ 
data$$ 
;$$ 
data%% 
=%% 
float%% 
.%% 
MinValue%% 
;%% 
{'' 	
	TcpClient(( 
tcpConn(( 
=(( 
null((  $
;(($ %
StreamReader)) 
sr)) 
=)) 
null)) "
;))" #
try** 
{++ 
tcpConn-- 
=-- 
new-- 
	TcpClient-- '
(--' (
$str--( :
,--: ;
$num--< A
)--A B
;--B C
sr// 
=// 
new// 
StreamReader// %
(//% &
tcpConn//& -
.//- .
	GetStream//. 7
(//7 8
)//8 9
)//9 :
;//: ;
string11 
stringNumber11 #
=11$ %
sr11& (
.11( )
ReadLine11) 1
(111 2
)112 3
;113 4
if22 
(22 
stringNumber22  
!=22! #
null22$ (
)22( )
{33 
try44 
{55 
data66 
=66 
float66 $
.66$ %
Parse66% *
(66* +
stringNumber66+ 7
.667 8
Trim668 <
(66< =
)66= >
)66> ?
;66? @
}77 
catch88 
(88 
FormatException88 )
exceptNumberFormat88* <
)88< =
{99 
IO:: 
.:: 
Logger:: !
.::! "
Log::" %
(::% &
NLog::& *
.::* +
LogLevel::+ 3
.::3 4
Warn::4 8
,::8 9
exceptNumberFormat::: L
,::L M
$str	::N Ä
)
::Ä Å
;
::Å Ç
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> 
exceptIO>> '
)>>' (
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ 
(@@ 
NLog@@ "
.@@" #
LogLevel@@# +
.@@+ ,
Warn@@, 0
,@@0 1
exceptIO@@2 :
,@@: ;
$str@@< W
)@@W X
;@@X Y
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG 
nullGG "
)GG" #
{HH 
srII 
.II 
CloseII  
(II  !
)II! "
;II" #
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL "
exceptIOLL# +
)LL+ ,
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
exceptIONN6 >
,NN> ?
$strNN@ a
)NNa b
;NNb c
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT 
!=TT  "
nullTT# '
)TT' (
{UU 
tcpConnVV 
.VV  
CloseVV  %
(VV% &
)VV& '
;VV' (
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY "
exceptIOYY# +
)YY+ ,
{ZZ 
IO[[ 
.[[ 
Logger[[ 
.[[ 
Log[[ !
([[! "
NLog[[" &
.[[& '
LogLevel[[' /
.[[/ 0
Warn[[0 4
,[[4 5
exceptIO[[6 >
,[[> ?
$str[[@ V
)[[V W
;[[W X
}\\ 
}]] 
}^^ 	
	Container__ 
dataContainer__ 
=__  !
new__" %
	Container__& /
(__/ 0
)__0 1
;__1 2
dataContainer`` 
.`` 
containerOne`` "
=``# $
data``% )
;``) *I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_67baa E
.aaE F
BadSinkaaF M
(aaM N
dataContaineraaN [
)aa] ^
;aa^ _
}bb 
publicee 

overrideee 
voidee 
Goodee 
(ee 
)ee 
{ff 
GoodG2Bgg 
(gg 
)gg 
;gg 
}hh 
privatekk 
statickk 
voidkk 
GoodG2Bkk 
(kk  
)kk  !
{ll 
floatmm 
datamm 
;mm 
dataoo 
=oo 
$numoo 
;oo 
	Containerpp 
dataContainerpp 
=pp  !
newpp" %
	Containerpp& /
(pp/ 0
)pp0 1
;pp1 2
dataContainerqq 
.qq 
containerOneqq "
=qq# $
dataqq% )
;qq) *I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_67brr E
.rrE F
GoodG2BSinkrrF Q
(rrQ R
dataContainerrrR _
)rra b
;rrb c
}ss 
}uu 
}vv ˇ
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_67b C
{ 
public 

static 
void 
BadSink 
( I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_67a \
.\ ]
	Container] f
dataContainerg t
)u v
{ 
float 
data 
= 
dataContainer "
." #
containerOne# /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_67a%%# `
.%%` a
	Container%%a j
dataContainer%%k x
)%%y z
{&& 
float'' 
data'' 
='' 
dataContainer'' "
.''" #
containerOne''# /
;''/ 0
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
int** 
)** 
data** "
)**" #
;**# $
}++ 	
},, 
}.. 
}// û'
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_68a C
:D E
AbstractTestCaseF V
{ 
public 

static 
float 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_68bZZ E
.ZZE F
BadSinkZZF M
(ZZM N
)ZZN O
;ZZO P
}[[ 
public^^ 

override^^ 
void^^ 
Good^^ 
(^^ 
)^^ 
{__ 
GoodG2B`` 
(`` 
)`` 
;`` 
}aa 
privatedd 
staticdd 
voiddd 
GoodG2Bdd 
(dd  
)dd  !
{ee 
datagg 
=gg 
$numgg 
;gg I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_68bhh E
.hhE F
GoodG2BSinkhhF Q
(hhQ R
)hhR S
;hhS T
}ii 
}kk 
}ll ∑
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_68b C
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
float 
data 
= I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_68a R
.R S
dataS W
;W X
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
float&& 
data&& 
=&& I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_68a&& R
.&&R S
data&&S W
;&&W X
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
int)) 
))) 
data)) "
)))" #
;))# $
}** 	
}++ 
}-- 
}.. ≤(
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_71a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_71bZZ E
.ZZE F
BadSinkZZF M
(ZZM N
(ZZN O
ObjectZZO U
)ZZU V
dataZZV Z
)ZZ\ ]
;ZZ] ^
}[[ 
public^^ 

override^^ 
void^^ 
Good^^ 
(^^ 
)^^ 
{__ 
GoodG2B`` 
(`` 
)`` 
;`` 
}aa 
privatedd 
staticdd 
voiddd 
GoodG2Bdd 
(dd  
)dd  !
{ee 
floatff 
dataff 
;ff 
datahh 
=hh 
$numhh 
;hh I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_71bii E
.iiE F
GoodG2BSinkiiF Q
(iiQ R
(iiR S
ObjectiiS Y
)iiY Z
dataiiZ ^
)ii` a
;iia b
}jj 
}ll 
}mm …
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_71b C
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
float 
data 
= 
( 
float 
) 

dataObject &
;& '
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
float(( 
data(( 
=(( 
((( 
float(( 
)(( 

dataObject(( &
;((& '
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
int++ 
)++ 
data++ "
)++" #
;++# $
},, 	
}-- 
}// 
}00 “1
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_72a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	
	HashtableZZ 
dataHashtableZZ 
=ZZ  !
newZZ" %
	HashtableZZ& /
(ZZ/ 0
$numZZ0 1
)ZZ1 2
;ZZ2 3
dataHashtable[[ 
.[[ 
Add[[ 
([[ 
$num[[ 
,[[ 
data[[ !
)[[! "
;[[" #
dataHashtable\\ 
.\\ 
Add\\ 
(\\ 
$num\\ 
,\\ 
data\\ !
)\\! "
;\\" #
dataHashtable]] 
.]] 
Add]] 
(]] 
$num]] 
,]] 
data]] !
)]]! "
;]]" #I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_72b^^ E
.^^E F
BadSink^^F M
(^^M N
dataHashtable^^N [
)^^] ^
;^^^ _
}__ 
publicbb 

overridebb 
voidbb 
Goodbb 
(bb 
)bb 
{cc 
GoodG2Bdd 
(dd 
)dd 
;dd 
}ee 
privatehh 
statichh 
voidhh 
GoodG2Bhh 
(hh  
)hh  !
{ii 
floatjj 
datajj 
;jj 
datall 
=ll 
$numll 
;ll 
	Hashtablemm 
dataHashtablemm 
=mm  !
newmm" %
	Hashtablemm& /
(mm/ 0
$nummm0 1
)mm1 2
;mm2 3
dataHashtablenn 
.nn 
Addnn 
(nn 
$numnn 
,nn 
datann !
)nn! "
;nn" #
dataHashtableoo 
.oo 
Addoo 
(oo 
$numoo 
,oo 
dataoo !
)oo! "
;oo" #
dataHashtablepp 
.pp 
Addpp 
(pp 
$numpp 
,pp 
datapp !
)pp! "
;pp" #I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_72bqq E
.qqE F
GoodG2BSinkqqF Q
(qqQ R
dataHashtableqqR _
)qqa b
;qqb c
}rr 
}tt 
}uu ª
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_72b C
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
float 
data 
= 
( 
float 
) 
dataHashtable *
[* +
$num+ ,
], -
;- .
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
float(( 
data(( 
=(( 
((( 
float(( 
)(( 
dataHashtable(( *
[((* +
$num((+ ,
]((, -
;((- .
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
int++ 
)++ 
data++ "
)++" #
;++# $
},, 	
}-- 
}// 
}00 “1
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_73a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float   
data   
;   
data!! 
=!! 
float!! 
.!! 
MinValue!! 
;!! 
{## 	
	TcpClient$$ 
tcpConn$$ 
=$$ 
null$$  $
;$$$ %
StreamReader%% 
sr%% 
=%% 
null%% "
;%%" #
try&& 
{'' 
tcpConn)) 
=)) 
new)) 
	TcpClient)) '
())' (
$str))( :
,)): ;
$num))< A
)))A B
;))B C
sr++ 
=++ 
new++ 
StreamReader++ %
(++% &
tcpConn++& -
.++- .
	GetStream++. 7
(++7 8
)++8 9
)++9 :
;++: ;
string-- 
stringNumber-- #
=--$ %
sr--& (
.--( )
ReadLine--) 1
(--1 2
)--2 3
;--3 4
if.. 
(.. 
stringNumber..  
!=..! #
null..$ (
)..( )
{// 
try00 
{11 
data22 
=22 
float22 $
.22$ %
Parse22% *
(22* +
stringNumber22+ 7
.227 8
Trim228 <
(22< =
)22= >
)22> ?
;22? @
}33 
catch44 
(44 
FormatException44 )
exceptNumberFormat44* <
)44< =
{55 
IO66 
.66 
Logger66 !
.66! "
Log66" %
(66% &
NLog66& *
.66* +
LogLevel66+ 3
.663 4
Warn664 8
,668 9
exceptNumberFormat66: L
,66L M
$str	66N Ä
)
66Ä Å
;
66Å Ç
}77 
}88 
}99 
catch:: 
(:: 
IOException:: 
exceptIO:: '
)::' (
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< 
(<< 
NLog<< "
.<<" #
LogLevel<<# +
.<<+ ,
Warn<<, 0
,<<0 1
exceptIO<<2 :
,<<: ;
$str<<< W
)<<W X
;<<X Y
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC 
nullCC "
)CC" #
{DD 
srEE 
.EE 
CloseEE  
(EE  !
)EE! "
;EE" #
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH "
exceptIOHH# +
)HH+ ,
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ !
(JJ! "
NLogJJ" &
.JJ& '
LogLevelJJ' /
.JJ/ 0
WarnJJ0 4
,JJ4 5
exceptIOJJ6 >
,JJ> ?
$strJJ@ a
)JJa b
;JJb c
}KK 
tryNN 
{OO 
ifPP 
(PP 
tcpConnPP 
!=PP  "
nullPP# '
)PP' (
{QQ 
tcpConnRR 
.RR  
CloseRR  %
(RR% &
)RR& '
;RR' (
}SS 
}TT 
catchUU 
(UU 
IOExceptionUU "
exceptIOUU# +
)UU+ ,
{VV 
IOWW 
.WW 
LoggerWW 
.WW 
LogWW !
(WW! "
NLogWW" &
.WW& '
LogLevelWW' /
.WW/ 0
WarnWW0 4
,WW4 5
exceptIOWW6 >
,WW> ?
$strWW@ V
)WWV W
;WWW X
}XX 
}YY 
}ZZ 	

LinkedList[[ 
<[[ 
float[[ 
>[[ 
dataLinkedList[[ (
=[[) *
new[[+ .

LinkedList[[/ 9
<[[9 :
float[[: ?
>[[? @
([[@ A
)[[A B
;[[B C
dataLinkedList\\ 
.\\ 
AddLast\\ 
(\\ 
data\\ #
)\\# $
;\\$ %
dataLinkedList]] 
.]] 
AddLast]] 
(]] 
data]] #
)]]# $
;]]$ %
dataLinkedList^^ 
.^^ 
AddLast^^ 
(^^ 
data^^ #
)^^# $
;^^$ %I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_73b__ E
.__E F
BadSink__F M
(__M N
dataLinkedList__N \
)__^ _
;___ `
}`` 
publiccc 

overridecc 
voidcc 
Goodcc 
(cc 
)cc 
{dd 
GoodG2Bee 
(ee 
)ee 
;ee 
}ff 
privateii 
staticii 
voidii 
GoodG2Bii 
(ii  
)ii  !
{jj 
floatkk 
datakk 
;kk 
datamm 
=mm 
$nummm 
;mm 

LinkedListnn 
<nn 
floatnn 
>nn 
dataLinkedListnn (
=nn) *
newnn+ .

LinkedListnn/ 9
<nn9 :
floatnn: ?
>nn? @
(nn@ A
)nnA B
;nnB C
dataLinkedListoo 
.oo 
AddLastoo 
(oo 
dataoo #
)oo# $
;oo$ %
dataLinkedListpp 
.pp 
AddLastpp 
(pp 
datapp #
)pp# $
;pp$ %
dataLinkedListqq 
.qq 
AddLastqq 
(qq 
dataqq #
)qq# $
;qq$ %I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_73brr E
.rrE F
GoodG2BSinkrrF Q
(rrQ R
dataLinkedListrrR `
)rrb c
;rrc d
}ss 
}uu 
}vv Á
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_73b C
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
float* /
>/ 0
dataLinkedList1 ?
)@ A
{ 
float 
data 
= 
dataLinkedList #
.# $
Last$ (
.( )
Value) .
;. /
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
float&&. 3
>&&3 4
dataLinkedList&&5 C
)&&D E
{'' 
float(( 
data(( 
=(( 
dataLinkedList(( #
.((# $
Last(($ (
.((( )
Value(() .
;((. /
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
int++ 
)++ 
data++ "
)++" #
;++# $
},, 	
}-- 
}// 
}00 Ä4
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_74a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	

DictionaryZZ 
<ZZ 
intZZ 
,ZZ 
floatZZ 
>ZZ 
dataDictionaryZZ ,
=ZZ- .
newZZ/ 2

DictionaryZZ3 =
<ZZ= >
intZZ> A
,ZZA B
floatZZB G
>ZZG H
(ZZH I
)ZZI J
;ZZJ K
dataDictionary[[ 
.[[ 
Add[[ 
([[ 
$num[[ 
,[[ 
data[[ "
)[[" #
;[[# $
dataDictionary\\ 
.\\ 
Add\\ 
(\\ 
$num\\ 
,\\ 
data\\ "
)\\" #
;\\# $
dataDictionary]] 
.]] 
Add]] 
(]] 
$num]] 
,]] 
data]] "
)]]" #
;]]# $I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_74b^^ E
.^^E F
BadSink^^F M
(^^M N
dataDictionary^^N \
)^^^ _
;^^_ `
}__ 
publicbb 

overridebb 
voidbb 
Goodbb 
(bb 
)bb 
{cc 
GoodG2Bdd 
(dd 
)dd 
;dd 
}ee 
privatehh 
statichh 
voidhh 
GoodG2Bhh 
(hh  
)hh  !
{ii 
floatjj 
datajj 
;jj 
datall 
=ll 
$numll 
;ll 

Dictionarymm 
<mm 
intmm 
,mm 
floatmm 
>mm 
dataDictionarymm ,
=mm- .
newmm/ 2

Dictionarymm3 =
<mm= >
intmm> A
,mmA B
floatmmB G
>mmG H
(mmH I
)mmI J
;mmJ K
dataDictionarynn 
.nn 
Addnn 
(nn 
$numnn 
,nn 
datann "
)nn" #
;nn# $
dataDictionaryoo 
.oo 
Addoo 
(oo 
$numoo 
,oo 
dataoo "
)oo" #
;oo# $
dataDictionarypp 
.pp 
Addpp 
(pp 
$numpp 
,pp 
datapp "
)pp" #
;pp# $I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_74bqq E
.qqE F
GoodG2BSinkqqF Q
(qqQ R
dataDictionaryqqR `
)qqb c
;qqc d
}rr 
}tt 
}uu Å
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_74b C
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
float. 3
>3 4
dataDictionary5 C
)D E
{ 
float 
data 
= 
dataDictionary #
[# $
$num$ %
]% &
;& '
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
float&&2 7
>&&7 8
dataDictionary&&9 G
)&&H I
{'' 
float(( 
data(( 
=(( 
dataDictionary(( #
[((# $
$num(($ %
]((% &
;((& '
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
int++ 
)++ 
data++ "
)++" #
;++# $
},, 	
}-- 
}// 
}00 ä<
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_75a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float   
data   
;   
data!! 
=!! 
float!! 
.!! 
MinValue!! 
;!! 
{## 	
	TcpClient$$ 
tcpConn$$ 
=$$ 
null$$  $
;$$$ %
StreamReader%% 
sr%% 
=%% 
null%% "
;%%" #
try&& 
{'' 
tcpConn)) 
=)) 
new)) 
	TcpClient)) '
())' (
$str))( :
,)): ;
$num))< A
)))A B
;))B C
sr++ 
=++ 
new++ 
StreamReader++ %
(++% &
tcpConn++& -
.++- .
	GetStream++. 7
(++7 8
)++8 9
)++9 :
;++: ;
string-- 
stringNumber-- #
=--$ %
sr--& (
.--( )
ReadLine--) 1
(--1 2
)--2 3
;--3 4
if.. 
(.. 
stringNumber..  
!=..! #
null..$ (
)..( )
{// 
try00 
{11 
data22 
=22 
float22 $
.22$ %
Parse22% *
(22* +
stringNumber22+ 7
.227 8
Trim228 <
(22< =
)22= >
)22> ?
;22? @
}33 
catch44 
(44 
FormatException44 )
exceptNumberFormat44* <
)44< =
{55 
IO66 
.66 
Logger66 !
.66! "
Log66" %
(66% &
NLog66& *
.66* +
LogLevel66+ 3
.663 4
Warn664 8
,668 9
exceptNumberFormat66: L
,66L M
$str	66N Ä
)
66Ä Å
;
66Å Ç
}77 
}88 
}99 
catch:: 
(:: 
IOException:: 
exceptIO:: '
)::' (
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< 
(<< 
NLog<< "
.<<" #
LogLevel<<# +
.<<+ ,
Warn<<, 0
,<<0 1
exceptIO<<2 :
,<<: ;
$str<<< W
)<<W X
;<<X Y
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC 
nullCC "
)CC" #
{DD 
srEE 
.EE 
CloseEE  
(EE  !
)EE! "
;EE" #
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH "
exceptIOHH# +
)HH+ ,
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ !
(JJ! "
NLogJJ" &
.JJ& '
LogLevelJJ' /
.JJ/ 0
WarnJJ0 4
,JJ4 5
exceptIOJJ6 >
,JJ> ?
$strJJ@ a
)JJa b
;JJb c
}KK 
tryNN 
{OO 
ifPP 
(PP 
tcpConnPP 
!=PP  "
nullPP# '
)PP' (
{QQ 
tcpConnRR 
.RR  
CloseRR  %
(RR% &
)RR& '
;RR' (
}SS 
}TT 
catchUU 
(UU 
IOExceptionUU "
exceptIOUU# +
)UU+ ,
{VV 
IOWW 
.WW 
LoggerWW 
.WW 
LogWW !
(WW! "
NLogWW" &
.WW& '
LogLevelWW' /
.WW/ 0
WarnWW0 4
,WW4 5
exceptIOWW6 >
,WW> ?
$strWW@ V
)WWV W
;WWW X
}XX 
}YY 
}ZZ 	
byte\\ 
[\\ 
]\\ 
dataSerialized\\ 
=\\ 
null\\  $
;\\$ %
try]] 
{^^ 	
BinaryFormatter__ 
bf__ 
=__  
new__! $
BinaryFormatter__% 4
(__4 5
)__5 6
;__6 7
using`` 
(`` 
var`` 
ms`` 
=`` 
new`` 
MemoryStream``  ,
(``, -
)``- .
)``. /
{aa 
bfbb 
.bb 
	Serializebb 
(bb 
msbb 
,bb  
databb! %
)bb% &
;bb& '
dataSerializedcc 
=cc  
mscc! #
.cc# $
ToArraycc$ +
(cc+ ,
)cc, -
;cc- .
}dd I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_75bee I
.eeI J
BadSinkeeJ Q
(eeQ R
dataSerializedeeR `
)eeb c
;eec d
}ff 	
catchgg 
(gg "
SerializationExceptiongg %
exceptSerializegg& 5
)gg5 6
{hh 	
IOii 
.ii 
Loggerii 
.ii 
Logii 
(ii 
NLogii 
.ii 
LogLevelii '
.ii' (
Warnii( ,
,ii, -
$strii. X
,iiX Y
exceptSerializeiiZ i
)iii j
;iij k
}jj 	
}kk 
publicnn 

overridenn 
voidnn 
Goodnn 
(nn 
)nn 
{oo 
GoodG2Bpp 
(pp 
)pp 
;pp 
}qq 
privatett 
statictt 
voidtt 
GoodG2Btt 
(tt  
)tt  !
{uu 
floatvv 
datavv 
;vv 
dataxx 
=xx 
$numxx 
;xx 
bytezz 
[zz 
]zz 
dataSerializedzz 
=zz 
nullzz  $
;zz$ %
try{{ 
{|| 	
BinaryFormatter}} 
bf}} 
=}}  
new}}! $
BinaryFormatter}}% 4
(}}4 5
)}}5 6
;}}6 7
using~~ 
(~~ 
var~~ 
ms~~ 
=~~ 
new~~ 
MemoryStream~~  ,
(~~, -
)~~- .
)~~. /
{ 
bf
ÄÄ 
.
ÄÄ 
	Serialize
ÄÄ 
(
ÄÄ 
ms
ÄÄ 
,
ÄÄ  
data
ÄÄ! %
)
ÄÄ% &
;
ÄÄ& '
dataSerialized
ÅÅ 
=
ÅÅ  
ms
ÅÅ! #
.
ÅÅ# $
ToArray
ÅÅ$ +
(
ÅÅ+ ,
)
ÅÅ, -
;
ÅÅ- .
}
ÇÇ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_75b
ÉÉ I
.
ÉÉI J
GoodG2BSink
ÉÉJ U
(
ÉÉU V
dataSerialized
ÉÉV d
)
ÉÉf g
;
ÉÉg h
}
ÑÑ 	
catch
ÖÖ 
(
ÖÖ $
SerializationException
ÖÖ %
exceptSerialize
ÖÖ& 5
)
ÖÖ5 6
{
ÜÜ 	
IO
áá 
.
áá 
Logger
áá 
.
áá 
Log
áá 
(
áá 
NLog
áá 
.
áá 
LogLevel
áá '
.
áá' (
Warn
áá( ,
,
áá, -
$str
áá. X
,
ááX Y
exceptSerialize
ááZ i
)
áái j
;
ááj k
}
àà 	
}
ââ 
}ãã 
}åå Á!
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_75b C
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
float   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
float&& 
)&& 
binForm&& %
.&&% &
Deserialize&&& 1
(&&1 2
	memStream&&2 ;
)&&; <
;&&< =
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
int** !
)**! "
data**" &
)**& '
;**' (
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
float:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
float@@ 
)@@ 
binForm@@ %
.@@% &
Deserialize@@& 1
(@@1 2
	memStream@@2 ;
)@@; <
;@@< =
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
intDD !
)DD! "
dataDD" &
)DD& '
;DD' (
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN ‰*
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_81a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	M
ACWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_81_baseZZ I

baseObjectZZJ T
=ZZU V
newZZW ZM
@CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_81_bad	ZZ[ õ
(
ZZõ ú
)
ZZú ù
;
ZZù û

baseObject[[ 
.[[ 
Action[[ 
([[ 
data[[ 
)[[  
;[[  !
}\\ 
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2Baa 
(aa 
)aa 
;aa 
}bb 
privateee 
voidee 
GoodG2Bee 
(ee 
)ee 
{ff 
floatgg 
datagg 
;gg 
dataii 
=ii 
$numii 
;ii M
ACWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_81_basejj I

baseObjectjjJ T
=jjU V
newjjW ZQ
DCWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_81_goodG2B	jj[ ü
(
jjü †
)
jj† °
;
jj° ¢

baseObjectkk 
.kk 
Actionkk 
(kk 
datakk 
)kk  
;kk  !
}ll 
}nn 
}oo ì
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class L
@CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_81_bad F
:G HN
ACWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_81_base	I ä
{ 
public 

override 
void 
Action 
(  
float  %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
}   
}!! 
}"" ˚
ƒC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 M
ACWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_81_base P
{ 
public 

abstract 
void 
Action 
(  
float  %
data& *
)+ ,
;, -
} 
} õ
«C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class P
DCWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_81_goodG2B J
:K LN
ACWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_81_base	M é
{ 
public 

override 
void 
Action 
(  
float  %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
int 
) 
data "
)" #
;# $
} 	
}   
}!! 
}"" ‡'
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_01 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
long\\ 
)\\ 
data\\ #
)\\# $
;\\$ %
}]] 	
}^^ 
publicaa 

overrideaa 
voidaa 
Goodaa 
(aa 
)aa 
{bb 
GoodG2Bcc 
(cc 
)cc 
;cc 
}dd 
privategg 
voidgg 
GoodG2Bgg 
(gg 
)gg 
{hh 
floatii 
dataii 
;ii 
datakk 
=kk 
$numkk 
;kk 
{ll 	
IOnn 
.nn 
	WriteLinenn 
(nn 
(nn 
longnn 
)nn 
datann #
)nn# $
;nn$ %
}oo 	
}pp 
}rr 
}ss ∫1
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_02 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if   

(   
true   
)   
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
longee 
)ee 
dataee #
)ee# $
;ee$ %
}ff 	
}gg 
privatekk 
voidkk 
GoodG2B1kk 
(kk 
)kk 
{ll 
floatmm 
datamm 
;mm 
ifnn 

(nn 
falsenn 
)nn 
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
long{{ 
){{ 
data{{ #
){{# $
;{{$ %
}|| 	
}}} 
private
ÄÄ 
void
ÄÄ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
float
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ 
true
ÉÉ 
)
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
else
àà 
{
ââ 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
long
êê 
)
êê 
data
êê #
)
êê# $
;
êê$ %
}
ëë 	
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
)
îî 
{
ïï 
GoodG2B1
ññ 
(
ññ 
)
ññ 
;
ññ 
GoodG2B2
óó 
(
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ £2
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_03 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if   

(   
$num   
==   
$num   
)   
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
longee 
)ee 
dataee #
)ee# $
;ee$ %
}ff 	
}gg 
privatekk 
voidkk 
GoodG2B1kk 
(kk 
)kk 
{ll 
floatmm 
datamm 
;mm 
ifnn 

(nn 
$numnn 
!=nn 
$numnn 
)nn 
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
long{{ 
){{ 
data{{ #
){{# $
;{{$ %
}|| 	
}}} 
private
ÄÄ 
void
ÄÄ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
float
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ 
$num
ÉÉ 
==
ÉÉ 
$num
ÉÉ 
)
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
else
àà 
{
ââ 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
long
êê 
)
êê 
data
êê #
)
êê# $
;
êê$ %
}
ëë 	
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
)
îî 
{
ïï 
GoodG2B1
ññ 
(
ññ 
)
ññ 
;
ññ 
GoodG2B2
óó 
(
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ î4
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_04 C
:D E
AbstractTestCaseF V
{ 
private   
const   
bool   
PRIVATE_CONST_TRUE   )
=  * +
true  , 0
;  0 1
private!! 
const!! 
bool!! 
PRIVATE_CONST_FALSE!! *
=!!+ ,
false!!- 2
;!!2 3
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
float&& 
data&& 
;&& 
if'' 

('' 
PRIVATE_CONST_TRUE'' 
)'' 
{(( 	
data)) 
=)) 
float)) 
.)) 
MinValue)) !
;))! "
{++ 
	TcpClient,, 
tcpConn,, !
=,," #
null,,$ (
;,,( )
StreamReader-- 
sr-- 
=--  !
null--" &
;--& '
try.. 
{// 
tcpConn11 
=11 
new11 !
	TcpClient11" +
(11+ ,
$str11, >
,11> ?
$num11@ E
)11E F
;11F G
sr33 
=33 
new33 
StreamReader33 )
(33) *
tcpConn33* 1
.331 2
	GetStream332 ;
(33; <
)33< =
)33= >
;33> ?
string55 
stringNumber55 '
=55( )
sr55* ,
.55, -
ReadLine55- 5
(555 6
)556 7
;557 8
if66 
(66 
stringNumber66 $
!=66% '
null66( ,
)66, -
{77 
try88 
{99 
data::  
=::! "
float::# (
.::( )
Parse::) .
(::. /
stringNumber::/ ;
.::; <
Trim::< @
(::@ A
)::A B
)::B C
;::C D
};; 
catch<< 
(<< 
FormatException<< -
exceptNumberFormat<<. @
)<<@ A
{== 
IO>> 
.>> 
Logger>> %
.>>% &
Log>>& )
(>>) *
NLog>>* .
.>>. /
LogLevel>>/ 7
.>>7 8
Warn>>8 <
,>>< =
exceptNumberFormat>>> P
,>>P Q
$str	>>R Ñ
)
>>Ñ Ö
;
>>Ö Ü
}?? 
}@@ 
}AA 
catchBB 
(BB 
IOExceptionBB "
exceptIOBB# +
)BB+ ,
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
exceptIODD6 >
,DD> ?
$strDD@ [
)DD[ \
;DD\ ]
}EE 
finallyFF 
{GG 
tryII 
{JJ 
ifKK 
(KK 
srKK 
!=KK !
nullKK" &
)KK& '
{LL 
srMM 
.MM 
CloseMM $
(MM$ %
)MM% &
;MM& '
}NN 
}OO 
catchPP 
(PP 
IOExceptionPP &
exceptIOPP' /
)PP/ 0
{QQ 
IORR 
.RR 
LoggerRR !
.RR! "
LogRR" %
(RR% &
NLogRR& *
.RR* +
LogLevelRR+ 3
.RR3 4
WarnRR4 8
,RR8 9
exceptIORR: B
,RRB C
$strRRD e
)RRe f
;RRf g
}SS 
tryVV 
{WW 
ifXX 
(XX 
tcpConnXX #
!=XX$ &
nullXX' +
)XX+ ,
{YY 
tcpConnZZ #
.ZZ# $
CloseZZ$ )
(ZZ) *
)ZZ* +
;ZZ+ ,
}[[ 
}\\ 
catch]] 
(]] 
IOException]] &
exceptIO]]' /
)]]/ 0
{^^ 
IO__ 
.__ 
Logger__ !
.__! "
Log__" %
(__% &
NLog__& *
.__* +
LogLevel__+ 3
.__3 4
Warn__4 8
,__8 9
exceptIO__: B
,__B C
$str__D Z
)__Z [
;__[ \
}`` 
}aa 
}bb 
}cc 	
elsedd 
{ee 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
{jj 	
IOll 
.ll 
	WriteLinell 
(ll 
(ll 
longll 
)ll 
datall #
)ll# $
;ll$ %
}mm 	
}nn 
privaterr 
voidrr 
GoodG2B1rr 
(rr 
)rr 
{ss 
floattt 
datatt 
;tt 
ifuu 

(uu 
PRIVATE_CONST_FALSEuu 
)uu  
{vv 	
datayy 
=yy 
$numyy 
;yy 
}zz 	
else{{ 
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
long
ÇÇ 
)
ÇÇ 
data
ÇÇ #
)
ÇÇ# $
;
ÇÇ$ %
}
ÉÉ 	
}
ÑÑ 
private
áá 
void
áá 
GoodG2B2
áá 
(
áá 
)
áá 
{
àà 
float
ââ 
data
ââ 
;
ââ 
if
ää 

(
ää  
PRIVATE_CONST_TRUE
ää 
)
ää 
{
ãã 	
data
çç 
=
çç 
$num
çç 
;
çç 
}
éé 	
else
èè 
{
êê 	
data
ìì 
=
ìì 
$num
ìì 
;
ìì 
}
îî 	
{
ïï 	
IO
óó 
.
óó 
	WriteLine
óó 
(
óó 
(
óó 
long
óó 
)
óó 
data
óó #
)
óó# $
;
óó$ %
}
òò 	
}
ôô 
public
õõ 

override
õõ 
void
õõ 
Good
õõ 
(
õõ 
)
õõ 
{
úú 
GoodG2B1
ùù 
(
ùù 
)
ùù 
;
ùù 
GoodG2B2
ûû 
(
ûû 
)
ûû 
;
ûû 
}
üü 
}°° 
}¢¢ À3
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_05 C
:D E
AbstractTestCaseF V
{ 
private   
bool   
privateTrue   
=   
true   #
;  # $
private!! 
bool!! 
privateFalse!! 
=!! 
false!!  %
;!!% &
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
float&& 
data&& 
;&& 
if'' 

('' 
privateTrue'' 
)'' 
{(( 	
data)) 
=)) 
float)) 
.)) 
MinValue)) !
;))! "
{++ 
	TcpClient,, 
tcpConn,, !
=,," #
null,,$ (
;,,( )
StreamReader-- 
sr-- 
=--  !
null--" &
;--& '
try.. 
{// 
tcpConn11 
=11 
new11 !
	TcpClient11" +
(11+ ,
$str11, >
,11> ?
$num11@ E
)11E F
;11F G
sr33 
=33 
new33 
StreamReader33 )
(33) *
tcpConn33* 1
.331 2
	GetStream332 ;
(33; <
)33< =
)33= >
;33> ?
string55 
stringNumber55 '
=55( )
sr55* ,
.55, -
ReadLine55- 5
(555 6
)556 7
;557 8
if66 
(66 
stringNumber66 $
!=66% '
null66( ,
)66, -
{77 
try88 
{99 
data::  
=::! "
float::# (
.::( )
Parse::) .
(::. /
stringNumber::/ ;
.::; <
Trim::< @
(::@ A
)::A B
)::B C
;::C D
};; 
catch<< 
(<< 
FormatException<< -
exceptNumberFormat<<. @
)<<@ A
{== 
IO>> 
.>> 
Logger>> %
.>>% &
Log>>& )
(>>) *
NLog>>* .
.>>. /
LogLevel>>/ 7
.>>7 8
Warn>>8 <
,>>< =
exceptNumberFormat>>> P
,>>P Q
$str	>>R Ñ
)
>>Ñ Ö
;
>>Ö Ü
}?? 
}@@ 
}AA 
catchBB 
(BB 
IOExceptionBB "
exceptIOBB# +
)BB+ ,
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
exceptIODD6 >
,DD> ?
$strDD@ [
)DD[ \
;DD\ ]
}EE 
finallyFF 
{GG 
tryII 
{JJ 
ifKK 
(KK 
srKK 
!=KK !
nullKK" &
)KK& '
{LL 
srMM 
.MM 
CloseMM $
(MM$ %
)MM% &
;MM& '
}NN 
}OO 
catchPP 
(PP 
IOExceptionPP &
exceptIOPP' /
)PP/ 0
{QQ 
IORR 
.RR 
LoggerRR !
.RR! "
LogRR" %
(RR% &
NLogRR& *
.RR* +
LogLevelRR+ 3
.RR3 4
WarnRR4 8
,RR8 9
exceptIORR: B
,RRB C
$strRRD e
)RRe f
;RRf g
}SS 
tryVV 
{WW 
ifXX 
(XX 
tcpConnXX #
!=XX$ &
nullXX' +
)XX+ ,
{YY 
tcpConnZZ #
.ZZ# $
CloseZZ$ )
(ZZ) *
)ZZ* +
;ZZ+ ,
}[[ 
}\\ 
catch]] 
(]] 
IOException]] &
exceptIO]]' /
)]]/ 0
{^^ 
IO__ 
.__ 
Logger__ !
.__! "
Log__" %
(__% &
NLog__& *
.__* +
LogLevel__+ 3
.__3 4
Warn__4 8
,__8 9
exceptIO__: B
,__B C
$str__D Z
)__Z [
;__[ \
}`` 
}aa 
}bb 
}cc 	
elsedd 
{ee 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
{jj 	
IOll 
.ll 
	WriteLinell 
(ll 
(ll 
longll 
)ll 
datall #
)ll# $
;ll$ %
}mm 	
}nn 
privaterr 
voidrr 
GoodG2B1rr 
(rr 
)rr 
{ss 
floattt 
datatt 
;tt 
ifuu 

(uu 
privateFalseuu 
)uu 
{vv 	
datayy 
=yy 
$numyy 
;yy 
}zz 	
else{{ 
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
long
ÇÇ 
)
ÇÇ 
data
ÇÇ #
)
ÇÇ# $
;
ÇÇ$ %
}
ÉÉ 	
}
ÑÑ 
private
áá 
void
áá 
GoodG2B2
áá 
(
áá 
)
áá 
{
àà 
float
ââ 
data
ââ 
;
ââ 
if
ää 

(
ää 
privateTrue
ää 
)
ää 
{
ãã 	
data
çç 
=
çç 
$num
çç 
;
çç 
}
éé 	
else
èè 
{
êê 	
data
ìì 
=
ìì 
$num
ìì 
;
ìì 
}
îî 	
{
ïï 	
IO
óó 
.
óó 
	WriteLine
óó 
(
óó 
(
óó 
long
óó 
)
óó 
data
óó #
)
óó# $
;
óó$ %
}
òò 	
}
ôô 
public
õõ 

override
õõ 
void
õõ 
Good
õõ 
(
õõ 
)
õõ 
{
úú 
GoodG2B1
ùù 
(
ùù 
)
ùù 
;
ùù 
GoodG2B2
ûû 
(
ûû 
)
ûû 
;
ûû 
}
üü 
}°° 
}¢¢ Ó3
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_06 C
:D E
AbstractTestCaseF V
{ 
private   
const   
int   
PRIVATE_CONST_FIVE   (
=  ) *
$num  + ,
;  , -
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
float%% 
data%% 
;%% 
if&& 

(&& 
PRIVATE_CONST_FIVE&& 
==&& !
$num&&" #
)&&# $
{'' 	
data(( 
=(( 
float(( 
.(( 
MinValue(( !
;((! "
{** 
	TcpClient++ 
tcpConn++ !
=++" #
null++$ (
;++( )
StreamReader,, 
sr,, 
=,,  !
null,," &
;,,& '
try-- 
{.. 
tcpConn00 
=00 
new00 !
	TcpClient00" +
(00+ ,
$str00, >
,00> ?
$num00@ E
)00E F
;00F G
sr22 
=22 
new22 
StreamReader22 )
(22) *
tcpConn22* 1
.221 2
	GetStream222 ;
(22; <
)22< =
)22= >
;22> ?
string44 
stringNumber44 '
=44( )
sr44* ,
.44, -
ReadLine44- 5
(445 6
)446 7
;447 8
if55 
(55 
stringNumber55 $
!=55% '
null55( ,
)55, -
{66 
try77 
{88 
data99  
=99! "
float99# (
.99( )
Parse99) .
(99. /
stringNumber99/ ;
.99; <
Trim99< @
(99@ A
)99A B
)99B C
;99C D
}:: 
catch;; 
(;; 
FormatException;; -
exceptNumberFormat;;. @
);;@ A
{<< 
IO== 
.== 
Logger== %
.==% &
Log==& )
(==) *
NLog==* .
.==. /
LogLevel==/ 7
.==7 8
Warn==8 <
,==< =
exceptNumberFormat==> P
,==P Q
$str	==R Ñ
)
==Ñ Ö
;
==Ö Ü
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryHH 
{II 
ifJJ 
(JJ 
srJJ 
!=JJ !
nullJJ" &
)JJ& '
{KK 
srLL 
.LL 
CloseLL $
(LL$ %
)LL% &
;LL& '
}MM 
}NN 
catchOO 
(OO 
IOExceptionOO &
exceptIOOO' /
)OO/ 0
{PP 
IOQQ 
.QQ 
LoggerQQ !
.QQ! "
LogQQ" %
(QQ% &
NLogQQ& *
.QQ* +
LogLevelQQ+ 3
.QQ3 4
WarnQQ4 8
,QQ8 9
exceptIOQQ: B
,QQB C
$strQQD e
)QQe f
;QQf g
}RR 
tryUU 
{VV 
ifWW 
(WW 
tcpConnWW #
!=WW$ &
nullWW' +
)WW+ ,
{XX 
tcpConnYY #
.YY# $
CloseYY$ )
(YY) *
)YY* +
;YY+ ,
}ZZ 
}[[ 
catch\\ 
(\\ 
IOException\\ &
exceptIO\\' /
)\\/ 0
{]] 
IO^^ 
.^^ 
Logger^^ !
.^^! "
Log^^" %
(^^% &
NLog^^& *
.^^* +
LogLevel^^+ 3
.^^3 4
Warn^^4 8
,^^8 9
exceptIO^^: B
,^^B C
$str^^D Z
)^^Z [
;^^[ \
}__ 
}`` 
}aa 
}bb 	
elsecc 
{dd 	
datagg 
=gg 
$numgg 
;gg 
}hh 	
{ii 	
IOkk 
.kk 
	WriteLinekk 
(kk 
(kk 
longkk 
)kk 
datakk #
)kk# $
;kk$ %
}ll 	
}mm 
privateqq 
voidqq 
GoodG2B1qq 
(qq 
)qq 
{rr 
floatss 
datass 
;ss 
iftt 

(tt 
PRIVATE_CONST_FIVEtt 
!=tt !
$numtt" #
)tt# $
{uu 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data}} 
=}} 
$num}} 
;}} 
}~~ 	
{ 	
IO
ÅÅ 
.
ÅÅ 
	WriteLine
ÅÅ 
(
ÅÅ 
(
ÅÅ 
long
ÅÅ 
)
ÅÅ 
data
ÅÅ #
)
ÅÅ# $
;
ÅÅ$ %
}
ÇÇ 	
}
ÉÉ 
private
ÜÜ 
void
ÜÜ 
GoodG2B2
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
float
àà 
data
àà 
;
àà 
if
ââ 

(
ââ  
PRIVATE_CONST_FIVE
ââ 
==
ââ !
$num
ââ" #
)
ââ# $
{
ää 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
else
éé 
{
èè 	
data
íí 
=
íí 
$num
íí 
;
íí 
}
ìì 	
{
îî 	
IO
ññ 
.
ññ 
	WriteLine
ññ 
(
ññ 
(
ññ 
long
ññ 
)
ññ 
data
ññ #
)
ññ# $
;
ññ$ %
}
óó 	
}
òò 
public
öö 

override
öö 
void
öö 
Good
öö 
(
öö 
)
öö 
{
õõ 
GoodG2B1
úú 
(
úú 
)
úú 
;
úú 
GoodG2B2
ùù 
(
ùù 
)
ùù 
;
ùù 
}
ûû 
}†† 
}°° ø3
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_07 C
:D E
AbstractTestCaseF V
{ 
private   
int   
privateFive   
=   
$num   
;    
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
float%% 
data%% 
;%% 
if&& 

(&& 
privateFive&& 
==&& 
$num&& 
)&& 
{'' 	
data(( 
=(( 
float(( 
.(( 
MinValue(( !
;((! "
{** 
	TcpClient++ 
tcpConn++ !
=++" #
null++$ (
;++( )
StreamReader,, 
sr,, 
=,,  !
null,," &
;,,& '
try-- 
{.. 
tcpConn00 
=00 
new00 !
	TcpClient00" +
(00+ ,
$str00, >
,00> ?
$num00@ E
)00E F
;00F G
sr22 
=22 
new22 
StreamReader22 )
(22) *
tcpConn22* 1
.221 2
	GetStream222 ;
(22; <
)22< =
)22= >
;22> ?
string44 
stringNumber44 '
=44( )
sr44* ,
.44, -
ReadLine44- 5
(445 6
)446 7
;447 8
if55 
(55 
stringNumber55 $
!=55% '
null55( ,
)55, -
{66 
try77 
{88 
data99  
=99! "
float99# (
.99( )
Parse99) .
(99. /
stringNumber99/ ;
.99; <
Trim99< @
(99@ A
)99A B
)99B C
;99C D
}:: 
catch;; 
(;; 
FormatException;; -
exceptNumberFormat;;. @
);;@ A
{<< 
IO== 
.== 
Logger== %
.==% &
Log==& )
(==) *
NLog==* .
.==. /
LogLevel==/ 7
.==7 8
Warn==8 <
,==< =
exceptNumberFormat==> P
,==P Q
$str	==R Ñ
)
==Ñ Ö
;
==Ö Ü
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryHH 
{II 
ifJJ 
(JJ 
srJJ 
!=JJ !
nullJJ" &
)JJ& '
{KK 
srLL 
.LL 
CloseLL $
(LL$ %
)LL% &
;LL& '
}MM 
}NN 
catchOO 
(OO 
IOExceptionOO &
exceptIOOO' /
)OO/ 0
{PP 
IOQQ 
.QQ 
LoggerQQ !
.QQ! "
LogQQ" %
(QQ% &
NLogQQ& *
.QQ* +
LogLevelQQ+ 3
.QQ3 4
WarnQQ4 8
,QQ8 9
exceptIOQQ: B
,QQB C
$strQQD e
)QQe f
;QQf g
}RR 
tryUU 
{VV 
ifWW 
(WW 
tcpConnWW #
!=WW$ &
nullWW' +
)WW+ ,
{XX 
tcpConnYY #
.YY# $
CloseYY$ )
(YY) *
)YY* +
;YY+ ,
}ZZ 
}[[ 
catch\\ 
(\\ 
IOException\\ &
exceptIO\\' /
)\\/ 0
{]] 
IO^^ 
.^^ 
Logger^^ !
.^^! "
Log^^" %
(^^% &
NLog^^& *
.^^* +
LogLevel^^+ 3
.^^3 4
Warn^^4 8
,^^8 9
exceptIO^^: B
,^^B C
$str^^D Z
)^^Z [
;^^[ \
}__ 
}`` 
}aa 
}bb 	
elsecc 
{dd 	
datagg 
=gg 
$numgg 
;gg 
}hh 	
{ii 	
IOkk 
.kk 
	WriteLinekk 
(kk 
(kk 
longkk 
)kk 
datakk #
)kk# $
;kk$ %
}ll 	
}mm 
privateqq 
voidqq 
GoodG2B1qq 
(qq 
)qq 
{rr 
floatss 
datass 
;ss 
iftt 

(tt 
privateFivett 
!=tt 
$numtt 
)tt 
{uu 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data}} 
=}} 
$num}} 
;}} 
}~~ 	
{ 	
IO
ÅÅ 
.
ÅÅ 
	WriteLine
ÅÅ 
(
ÅÅ 
(
ÅÅ 
long
ÅÅ 
)
ÅÅ 
data
ÅÅ #
)
ÅÅ# $
;
ÅÅ$ %
}
ÇÇ 	
}
ÉÉ 
private
ÜÜ 
void
ÜÜ 
GoodG2B2
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
float
àà 
data
àà 
;
àà 
if
ââ 

(
ââ 
privateFive
ââ 
==
ââ 
$num
ââ 
)
ââ 
{
ää 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
else
éé 
{
èè 	
data
íí 
=
íí 
$num
íí 
;
íí 
}
ìì 	
{
îî 	
IO
ññ 
.
ññ 
	WriteLine
ññ 
(
ññ 
(
ññ 
long
ññ 
)
ññ 
data
ññ #
)
ññ# $
;
ññ$ %
}
óó 	
}
òò 
public
öö 

override
öö 
void
öö 
Good
öö 
(
öö 
)
öö 
{
õõ 
GoodG2B1
úú 
(
úú 
)
úú 
;
úú 
GoodG2B2
ùù 
(
ùù 
)
ùù 
;
ùù 
}
ûû 
}†† 
}°° é6
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_08 C
:D E
AbstractTestCaseF V
{ 
private   
static   
bool   
PrivateReturnsTrue   *
(  * +
)  + ,
{!! 
return"" 
true"" 
;"" 
}## 
private%% 
static%% 
bool%% 
PrivateReturnsFalse%% +
(%%+ ,
)%%, -
{&& 
return'' 
false'' 
;'' 
}(( 
public++ 

override++ 
void++ 
Bad++ 
(++ 
)++ 
{,, 
float-- 
data-- 
;-- 
if.. 

(.. 
PrivateReturnsTrue.. 
(.. 
)..  
)..  !
{// 	
data00 
=00 
float00 
.00 
MinValue00 !
;00! "
{22 
	TcpClient33 
tcpConn33 !
=33" #
null33$ (
;33( )
StreamReader44 
sr44 
=44  !
null44" &
;44& '
try55 
{66 
tcpConn88 
=88 
new88 !
	TcpClient88" +
(88+ ,
$str88, >
,88> ?
$num88@ E
)88E F
;88F G
sr:: 
=:: 
new:: 
StreamReader:: )
(::) *
tcpConn::* 1
.::1 2
	GetStream::2 ;
(::; <
)::< =
)::= >
;::> ?
string<< 
stringNumber<< '
=<<( )
sr<<* ,
.<<, -
ReadLine<<- 5
(<<5 6
)<<6 7
;<<7 8
if== 
(== 
stringNumber== $
!===% '
null==( ,
)==, -
{>> 
try?? 
{@@ 
dataAA  
=AA! "
floatAA# (
.AA( )
ParseAA) .
(AA. /
stringNumberAA/ ;
.AA; <
TrimAA< @
(AA@ A
)AAA B
)AAB C
;AAC D
}BB 
catchCC 
(CC 
FormatExceptionCC -
exceptNumberFormatCC. @
)CC@ A
{DD 
IOEE 
.EE 
LoggerEE %
.EE% &
LogEE& )
(EE) *
NLogEE* .
.EE. /
LogLevelEE/ 7
.EE7 8
WarnEE8 <
,EE< =
exceptNumberFormatEE> P
,EEP Q
$str	EER Ñ
)
EEÑ Ö
;
EEÖ Ü
}FF 
}GG 
}HH 
catchII 
(II 
IOExceptionII "
exceptIOII# +
)II+ ,
{JJ 
IOKK 
.KK 
LoggerKK 
.KK 
LogKK !
(KK! "
NLogKK" &
.KK& '
LogLevelKK' /
.KK/ 0
WarnKK0 4
,KK4 5
exceptIOKK6 >
,KK> ?
$strKK@ [
)KK[ \
;KK\ ]
}LL 
finallyMM 
{NN 
tryPP 
{QQ 
ifRR 
(RR 
srRR 
!=RR !
nullRR" &
)RR& '
{SS 
srTT 
.TT 
CloseTT $
(TT$ %
)TT% &
;TT& '
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW &
exceptIOWW' /
)WW/ 0
{XX 
IOYY 
.YY 
LoggerYY !
.YY! "
LogYY" %
(YY% &
NLogYY& *
.YY* +
LogLevelYY+ 3
.YY3 4
WarnYY4 8
,YY8 9
exceptIOYY: B
,YYB C
$strYYD e
)YYe f
;YYf g
}ZZ 
try]] 
{^^ 
if__ 
(__ 
tcpConn__ #
!=__$ &
null__' +
)__+ ,
{`` 
tcpConnaa #
.aa# $
Closeaa$ )
(aa) *
)aa* +
;aa+ ,
}bb 
}cc 
catchdd 
(dd 
IOExceptiondd &
exceptIOdd' /
)dd/ 0
{ee 
IOff 
.ff 
Loggerff !
.ff! "
Logff" %
(ff% &
NLogff& *
.ff* +
LogLevelff+ 3
.ff3 4
Warnff4 8
,ff8 9
exceptIOff: B
,ffB C
$strffD Z
)ffZ [
;ff[ \
}gg 
}hh 
}ii 
}jj 	
elsekk 
{ll 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
longss 
)ss 
datass #
)ss# $
;ss$ %
}tt 	
}uu 
privateyy 
voidyy 
GoodG2B1yy 
(yy 
)yy 
{zz 
float{{ 
data{{ 
;{{ 
if|| 

(|| 
PrivateReturnsFalse|| 
(||  
)||  !
)||! "
{}} 	
data
ÄÄ 
=
ÄÄ 
$num
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
else
ÇÇ 
{
ÉÉ 	
data
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
{
áá 	
IO
ââ 
.
ââ 
	WriteLine
ââ 
(
ââ 
(
ââ 
long
ââ 
)
ââ 
data
ââ #
)
ââ# $
;
ââ$ %
}
ää 	
}
ãã 
private
éé 
void
éé 
GoodG2B2
éé 
(
éé 
)
éé 
{
èè 
float
êê 
data
êê 
;
êê 
if
ëë 

(
ëë  
PrivateReturnsTrue
ëë 
(
ëë 
)
ëë  
)
ëë  !
{
íí 	
data
îî 
=
îî 
$num
îî 
;
îî 
}
ïï 	
else
ññ 
{
óó 	
data
öö 
=
öö 
$num
öö 
;
öö 
}
õõ 	
{
úú 	
IO
ûû 
.
ûû 
	WriteLine
ûû 
(
ûû 
(
ûû 
long
ûû 
)
ûû 
data
ûû #
)
ûû# $
;
ûû$ %
}
üü 	
}
†† 
public
¢¢ 

override
¢¢ 
void
¢¢ 
Good
¢¢ 
(
¢¢ 
)
¢¢ 
{
££ 
GoodG2B1
§§ 
(
§§ 
)
§§ 
;
§§ 
GoodG2B2
•• 
(
•• 
)
•• 
;
•• 
}
¶¶ 
}®® 
}©© À2
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_09 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if   

(   
IO   
.    
STATIC_READONLY_TRUE   #
)  # $
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
longee 
)ee 
dataee #
)ee# $
;ee$ %
}ff 	
}gg 
privatekk 
voidkk 
GoodG2B1kk 
(kk 
)kk 
{ll 
floatmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn !
STATIC_READONLY_FALSEnn $
)nn$ %
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
long{{ 
){{ 
data{{ #
){{# $
;{{$ %
}|| 	
}}} 
private
ÄÄ 
void
ÄÄ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
float
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ 
IO
ÉÉ 
.
ÉÉ "
STATIC_READONLY_TRUE
ÉÉ #
)
ÉÉ# $
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
else
àà 
{
ââ 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
long
êê 
)
êê 
data
êê #
)
êê# $
;
êê$ %
}
ëë 	
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
)
îî 
{
ïï 
GoodG2B1
ññ 
(
ññ 
)
ññ 
;
ññ 
GoodG2B2
óó 
(
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ ≠2
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_10 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if   

(   
IO   
.   

staticTrue   
)   
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
longee 
)ee 
dataee #
)ee# $
;ee$ %
}ff 	
}gg 
privatekk 
voidkk 
GoodG2B1kk 
(kk 
)kk 
{ll 
floatmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn 
staticFalsenn 
)nn 
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
long{{ 
){{ 
data{{ #
){{# $
;{{$ %
}|| 	
}}} 
private
ÄÄ 
void
ÄÄ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
float
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ 
IO
ÉÉ 
.
ÉÉ 

staticTrue
ÉÉ 
)
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
else
àà 
{
ââ 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
long
êê 
)
êê 
data
êê #
)
êê# $
;
êê$ %
}
ëë 	
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
)
îî 
{
ïï 
GoodG2B1
ññ 
(
ññ 
)
ññ 
;
ññ 
GoodG2B2
óó 
(
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ †3
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_11 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if   

(   
IO   
.   
StaticReturnsTrue    
(    !
)  ! "
)  " #
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
longee 
)ee 
dataee #
)ee# $
;ee$ %
}ff 	
}gg 
privatekk 
voidkk 
GoodG2B1kk 
(kk 
)kk 
{ll 
floatmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn 
StaticReturnsFalsenn !
(nn! "
)nn" #
)nn# $
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
long{{ 
){{ 
data{{ #
){{# $
;{{$ %
}|| 	
}}} 
private
ÄÄ 
void
ÄÄ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
float
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ 
IO
ÉÉ 
.
ÉÉ 
StaticReturnsTrue
ÉÉ  
(
ÉÉ  !
)
ÉÉ! "
)
ÉÉ" #
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
else
àà 
{
ââ 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
long
êê 
)
êê 
data
êê #
)
êê# $
;
êê$ %
}
ëë 	
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
)
îî 
{
ïï 
GoodG2B1
ññ 
(
ññ 
)
ññ 
;
ññ 
GoodG2B2
óó 
(
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ ∞,
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_12 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if   

(   
IO   
.   $
StaticReturnsTrueOrFalse   '
(  ' (
)  ( )
)  ) *
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
longdd 
)dd 
datadd #
)dd# $
;dd$ %
}ee 	
}ff 
privatekk 
voidkk 
GoodG2Bkk 
(kk 
)kk 
{ll 
floatmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn $
StaticReturnsTrueOrFalsenn '
(nn' (
)nn( )
)nn) *
{oo 	
dataqq 
=qq 
$numqq 
;qq 
}rr 	
elsess 
{tt 	
datavv 
=vv 
$numvv 
;vv 
}ww 	
{xx 	
IOzz 
.zz 
	WriteLinezz 
(zz 
(zz 
longzz 
)zz 
datazz #
)zz# $
;zz$ %
}{{ 	
}|| 
public~~ 

override~~ 
void~~ 
Good~~ 
(~~ 
)~~ 
{ 
GoodG2B
ÄÄ 
(
ÄÄ 
)
ÄÄ 
;
ÄÄ 
}
ÅÅ 
}ÉÉ 
}ÑÑ ¥3
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_13 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if   

(   
IO   
.    
STATIC_READONLY_FIVE   #
==  $ &
$num  ' (
)  ( )
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
longee 
)ee 
dataee #
)ee# $
;ee$ %
}ff 	
}gg 
privatekk 
voidkk 
GoodG2B1kk 
(kk 
)kk 
{ll 
floatmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn  
STATIC_READONLY_FIVEnn #
!=nn$ &
$numnn' (
)nn( )
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
long{{ 
){{ 
data{{ #
){{# $
;{{$ %
}|| 	
}}} 
private
ÄÄ 
void
ÄÄ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
float
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ 
IO
ÉÉ 
.
ÉÉ "
STATIC_READONLY_FIVE
ÉÉ #
==
ÉÉ$ &
$num
ÉÉ' (
)
ÉÉ( )
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
else
àà 
{
ââ 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
long
êê 
)
êê 
data
êê #
)
êê# $
;
êê$ %
}
ëë 	
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
)
îî 
{
ïï 
GoodG2B1
ññ 
(
ññ 
)
ññ 
;
ññ 
GoodG2B2
óó 
(
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ ñ3
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_14 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if   

(   
IO   
.   

staticFive   
==   
$num   
)   
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
longee 
)ee 
dataee #
)ee# $
;ee$ %
}ff 	
}gg 
privatekk 
voidkk 
GoodG2B1kk 
(kk 
)kk 
{ll 
floatmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn 

staticFivenn 
!=nn 
$numnn 
)nn 
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
long{{ 
){{ 
data{{ #
){{# $
;{{$ %
}|| 	
}}} 
private
ÄÄ 
void
ÄÄ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
float
ÇÇ 
data
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ 
IO
ÉÉ 
.
ÉÉ 

staticFive
ÉÉ 
==
ÉÉ 
$num
ÉÉ 
)
ÉÉ 
{
ÑÑ 	
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 	
else
àà 
{
ââ 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
{
éé 	
IO
êê 
.
êê 
	WriteLine
êê 
(
êê 
(
êê 
long
êê 
)
êê 
data
êê #
)
êê# $
;
êê$ %
}
ëë 	
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
)
îî 
{
ïï 
GoodG2B1
ññ 
(
ññ 
)
ññ 
;
ññ 
GoodG2B2
óó 
(
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ ˘4
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_15 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
= 
$num 
; 
switch   
(   
$num   
)   
{!! 	
case"" 
$num"" 
:"" 
data## 
=## 
float## 
.## 
MinValue## !
;##! "
{%% 
	TcpClient&& 
tcpConn&& !
=&&" #
null&&$ (
;&&( )
StreamReader'' 
sr'' 
=''  !
null''" &
;''& '
try(( 
{)) 
tcpConn++ 
=++ 
new++ !
	TcpClient++" +
(+++ ,
$str++, >
,++> ?
$num++@ E
)++E F
;++F G
sr-- 
=-- 
new-- 
StreamReader-- )
(--) *
tcpConn--* 1
.--1 2
	GetStream--2 ;
(--; <
)--< =
)--= >
;--> ?
string// 
stringNumber// '
=//( )
sr//* ,
.//, -
ReadLine//- 5
(//5 6
)//6 7
;//7 8
if00 
(00 
stringNumber00 $
!=00% '
null00( ,
)00, -
{11 
try22 
{33 
data44  
=44! "
float44# (
.44( )
Parse44) .
(44. /
stringNumber44/ ;
.44; <
Trim44< @
(44@ A
)44A B
)44B C
;44C D
}55 
catch66 
(66 
FormatException66 -
exceptNumberFormat66. @
)66@ A
{77 
IO88 
.88 
Logger88 %
.88% &
Log88& )
(88) *
NLog88* .
.88. /
LogLevel88/ 7
.887 8
Warn888 <
,88< =
exceptNumberFormat88> P
,88P Q
$str	88R Ñ
)
88Ñ Ö
;
88Ö Ü
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< "
exceptIO<<# +
)<<+ ,
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> !
(>>! "
NLog>>" &
.>>& '
LogLevel>>' /
.>>/ 0
Warn>>0 4
,>>4 5
exceptIO>>6 >
,>>> ?
$str>>@ [
)>>[ \
;>>\ ]
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE !
nullEE" &
)EE& '
{FF 
srGG 
.GG 
CloseGG $
(GG$ %
)GG% &
;GG& '
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ &
exceptIOJJ' /
)JJ/ 0
{KK 
IOLL 
.LL 
LoggerLL !
.LL! "
LogLL" %
(LL% &
NLogLL& *
.LL* +
LogLevelLL+ 3
.LL3 4
WarnLL4 8
,LL8 9
exceptIOLL: B
,LLB C
$strLLD e
)LLe f
;LLf g
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR #
!=RR$ &
nullRR' +
)RR+ ,
{SS 
tcpConnTT #
.TT# $
CloseTT$ )
(TT) *
)TT* +
;TT+ ,
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW &
exceptIOWW' /
)WW/ 0
{XX 
IOYY 
.YY 
LoggerYY !
.YY! "
LogYY" %
(YY% &
NLogYY& *
.YY* +
LogLevelYY+ 3
.YY3 4
WarnYY4 8
,YY8 9
exceptIOYY: B
,YYB C
$strYYD Z
)YYZ [
;YY[ \
}ZZ 
}[[ 
}\\ 
break]] 
;]] 
default^^ 
:^^ 
dataaa 
=aa 
$numaa 
;aa 
breakbb 
;bb 
}cc 	
{dd 	
IOff 
.ff 
	WriteLineff 
(ff 
(ff 
longff 
)ff 
dataff #
)ff# $
;ff$ %
}gg 	
}hh 
privatell 
voidll 
GoodG2B1ll 
(ll 
)ll 
{mm 
floatnn 
datann 
=nn 
$numnn 
;nn 
switchoo 
(oo 
$numoo 
)oo 
{pp 	
caseqq 
$numqq 
:qq 
datatt 
=tt 
$numtt 
;tt 
breakuu 
;uu 
defaultvv 
:vv 
dataxx 
=xx 
$numxx 
;xx 
breakyy 
;yy 
}zz 	
{{{ 	
IO}} 
.}} 
	WriteLine}} 
(}} 
(}} 
long}} 
)}} 
data}} #
)}}# $
;}}$ %
}~~ 	
} 
private
ÇÇ 
void
ÇÇ 
GoodG2B2
ÇÇ 
(
ÇÇ 
)
ÇÇ 
{
ÉÉ 
float
ÑÑ 
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
switch
ÖÖ 
(
ÖÖ 
$num
ÖÖ 
)
ÖÖ 
{
ÜÜ 	
case
áá 
$num
áá 
:
áá 
data
ââ 
=
ââ 
$num
ââ 
;
ââ 
break
ää 
;
ää 
default
ãã 
:
ãã 
data
éé 
=
éé 
$num
éé 
;
éé 
break
èè 
;
èè 
}
êê 	
{
ëë 	
IO
ìì 
.
ìì 
	WriteLine
ìì 
(
ìì 
(
ìì 
long
ìì 
)
ìì 
data
ìì #
)
ìì# $
;
ìì$ %
}
îî 	
}
ïï 
public
óó 

override
óó 
void
óó 
Good
óó 
(
óó 
)
óó 
{
òò 
GoodG2B1
ôô 
(
ôô 
)
ôô 
;
ôô 
GoodG2B2
öö 
(
öö 
)
öö 
;
öö 
}
õõ 
}ùù 
}ûû Ê)
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_16 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
while   
(   
true   
)   
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
break\\ 
;\\ 
}]] 	
{^^ 	
IO`` 
.`` 
	WriteLine`` 
(`` 
(`` 
long`` 
)`` 
data`` #
)``# $
;``$ %
}aa 	
}bb 
privateff 
voidff 
GoodG2Bff 
(ff 
)ff 
{gg 
floathh 
datahh 
;hh 
whileii 
(ii 
trueii 
)ii 
{jj 	
datall 
=ll 
$numll 
;ll 
breakmm 
;mm 
}nn 	
{oo 	
IOqq 
.qq 
	WriteLineqq 
(qq 
(qq 
longqq 
)qq 
dataqq #
)qq# $
;qq$ %
}rr 	
}ss 
publicuu 

overrideuu 
voiduu 
Gooduu 
(uu 
)uu 
{vv 
GoodG2Bww 
(ww 
)ww 
;ww 
}xx 
}zz 
}{{ ÷+
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_17 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	
forZZ 
(ZZ 
intZZ 
iZZ 
=ZZ 
$numZZ 
;ZZ 
iZZ 
<ZZ 
$numZZ 
;ZZ 
iZZ  
++ZZ  "
)ZZ" #
{[[ 	
{\\ 
IO^^ 
.^^ 
	WriteLine^^ 
(^^ 
(^^ 
long^^ "
)^^" #
data^^# '
)^^' (
;^^( )
}__ 
}`` 	
}aa 
privateff 
voidff 
GoodG2Bff 
(ff 
)ff 
{gg 
floathh 
datahh 
;hh 
datajj 
=jj 
$numjj 
;jj 
forkk 
(kk 
intkk 
ikk 
=kk 
$numkk 
;kk 
ikk 
<kk 
$numkk 
;kk 
ikk  
++kk  "
)kk" #
{ll 	
{mm 
IOoo 
.oo 
	WriteLineoo 
(oo 
(oo 
longoo "
)oo" #
dataoo# '
)oo' (
;oo( )
}pp 
}qq 	
}rr 
publictt 

overridett 
voidtt 
Goodtt 
(tt 
)tt 
{uu 
GoodG2Bvv 
(vv 
)vv 
;vv 
}ww 
}yy 
}zz ◊?
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_21 C
:D E
AbstractTestCaseF V
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public   

override   
void   
Bad   
(   
)   
{!! 
float"" 
data"" 
;"" 

badPrivate## 
=## 
true## 
;## 
data$$ 
=$$ 

Bad_source$$ 
($$ 
)$$ 
;$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
long'' 
)'' 
data'' #
)''# $
;''$ %
}(( 	
})) 
private++ 
float++ 

Bad_source++ 
(++ 
)++ 
{,, 
float-- 
data-- 
;-- 
if.. 

(.. 

badPrivate.. 
).. 
{// 	
data00 
=00 
float00 
.00 
MinValue00 !
;00! "
{22 
	TcpClient33 
tcpConn33 !
=33" #
null33$ (
;33( )
StreamReader44 
sr44 
=44  !
null44" &
;44& '
try55 
{66 
tcpConn88 
=88 
new88 !
	TcpClient88" +
(88+ ,
$str88, >
,88> ?
$num88@ E
)88E F
;88F G
sr:: 
=:: 
new:: 
StreamReader:: )
(::) *
tcpConn::* 1
.::1 2
	GetStream::2 ;
(::; <
)::< =
)::= >
;::> ?
string<< 
stringNumber<< '
=<<( )
sr<<* ,
.<<, -
ReadLine<<- 5
(<<5 6
)<<6 7
;<<7 8
if== 
(== 
stringNumber== $
!===% '
null==( ,
)==, -
{>> 
try?? 
{@@ 
dataAA  
=AA! "
floatAA# (
.AA( )
ParseAA) .
(AA. /
stringNumberAA/ ;
.AA; <
TrimAA< @
(AA@ A
)AAA B
)AAB C
;AAC D
}BB 
catchCC 
(CC 
FormatExceptionCC -
exceptNumberFormatCC. @
)CC@ A
{DD 
IOEE 
.EE 
LoggerEE %
.EE% &
LogEE& )
(EE) *
NLogEE* .
.EE. /
LogLevelEE/ 7
.EE7 8
WarnEE8 <
,EE< =
exceptNumberFormatEE> P
,EEP Q
$str	EER Ñ
)
EEÑ Ö
;
EEÖ Ü
}FF 
}GG 
}HH 
catchII 
(II 
IOExceptionII "
exceptIOII# +
)II+ ,
{JJ 
IOKK 
.KK 
LoggerKK 
.KK 
LogKK !
(KK! "
NLogKK" &
.KK& '
LogLevelKK' /
.KK/ 0
WarnKK0 4
,KK4 5
exceptIOKK6 >
,KK> ?
$strKK@ [
)KK[ \
;KK\ ]
}LL 
finallyMM 
{NN 
tryPP 
{QQ 
ifRR 
(RR 
srRR 
!=RR !
nullRR" &
)RR& '
{SS 
srTT 
.TT 
CloseTT $
(TT$ %
)TT% &
;TT& '
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW &
exceptIOWW' /
)WW/ 0
{XX 
IOYY 
.YY 
LoggerYY !
.YY! "
LogYY" %
(YY% &
NLogYY& *
.YY* +
LogLevelYY+ 3
.YY3 4
WarnYY4 8
,YY8 9
exceptIOYY: B
,YYB C
$strYYD e
)YYe f
;YYf g
}ZZ 
try]] 
{^^ 
if__ 
(__ 
tcpConn__ #
!=__$ &
null__' +
)__+ ,
{`` 
tcpConnaa #
.aa# $
Closeaa$ )
(aa) *
)aa* +
;aa+ ,
}bb 
}cc 
catchdd 
(dd 
IOExceptiondd &
exceptIOdd' /
)dd/ 0
{ee 
IOff 
.ff 
Loggerff !
.ff! "
Logff" %
(ff% &
NLogff& *
.ff* +
LogLevelff+ 3
.ff3 4
Warnff4 8
,ff8 9
exceptIOff: B
,ffB C
$strffD Z
)ffZ [
;ff[ \
}gg 
}hh 
}ii 
}jj 	
elsekk 
{ll 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
returnqq 
dataqq 
;qq 
}rr 
privateuu 
booluu 
goodG2B1_privateuu !
=uu" #
falseuu$ )
;uu) *
privatevv 
boolvv 
GoodG2B2_privatevv !
=vv" #
falsevv$ )
;vv) *
publicxx 

overridexx 
voidxx 
Goodxx 
(xx 
)xx 
{yy 
GoodG2B1zz 
(zz 
)zz 
;zz 
GoodG2B2{{ 
({{ 
){{ 
;{{ 
}|| 
private 
void 
GoodG2B1 
( 
) 
{
ÄÄ 
float
ÅÅ 
data
ÅÅ 
;
ÅÅ 
goodG2B1_private
ÇÇ 
=
ÇÇ 
false
ÇÇ  
;
ÇÇ  !
data
ÉÉ 
=
ÉÉ 
GoodG2B1_source
ÉÉ 
(
ÉÉ 
)
ÉÉ  
;
ÉÉ  !
{
ÑÑ 	
IO
ÜÜ 
.
ÜÜ 
	WriteLine
ÜÜ 
(
ÜÜ 
(
ÜÜ 
long
ÜÜ 
)
ÜÜ 
data
ÜÜ #
)
ÜÜ# $
;
ÜÜ$ %
}
áá 	
}
àà 
private
ää 
float
ää 
GoodG2B1_source
ää !
(
ää! "
)
ää" #
{
ãã 
float
åå 
data
åå 
=
åå 
$num
åå 
;
åå 
if
çç 

(
çç 
goodG2B1_private
çç 
)
çç 
{
éé 	
data
ëë 
=
ëë 
$num
ëë 
;
ëë 
}
íí 	
else
ìì 
{
îî 	
data
ññ 
=
ññ 
$num
ññ 
;
ññ 
}
óó 	
return
òò 
data
òò 
;
òò 
}
ôô 
private
úú 
void
úú 
GoodG2B2
úú 
(
úú 
)
úú 
{
ùù 
float
ûû 
data
ûû 
;
ûû 
GoodG2B2_private
üü 
=
üü 
true
üü 
;
üü  
data
†† 
=
†† 
GoodG2B2_source
†† 
(
†† 
)
††  
;
††  !
{
°° 	
IO
££ 
.
££ 
	WriteLine
££ 
(
££ 
(
££ 
long
££ 
)
££ 
data
££ #
)
££# $
;
££$ %
}
§§ 	
}
•• 
private
ßß 
float
ßß 
GoodG2B2_source
ßß !
(
ßß! "
)
ßß" #
{
®® 
float
©© 
data
©© 
=
©© 
$num
©© 
;
©© 
if
™™ 

(
™™ 
GoodG2B2_private
™™ 
)
™™ 
{
´´ 	
data
≠≠ 
=
≠≠ 
$num
≠≠ 
;
≠≠ 
}
ÆÆ 	
else
ØØ 
{
∞∞ 	
data
≥≥ 
=
≥≥ 
$num
≥≥ 
;
≥≥ 
}
¥¥ 	
return
µµ 
data
µµ 
;
µµ 
}
∂∂ 
}∏∏ 
}ππ ∏
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_22a D
:E F
AbstractTestCaseG W
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_22b!! M
.!!M N
	BadSource!!N W
(!!W X
)!!X Y
;!!Y Z
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
long$$ 
)$$ 
data$$ #
)$$# $
;$$$ %
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
float66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_22b88 M
.88M N
GoodG2B1Source88N \
(88\ ]
)88] ^
;88^ _
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
long;; 
);; 
data;; #
);;# $
;;;$ %
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
floatBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_22bDD M
.DDM N
GoodG2B2SourceDDN \
(DD\ ]
)DD] ^
;DD^ _
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
longGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
}KK 
}LL ˚-
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_22b D
{ 
public 

static 
float 
	BadSource !
(! "
)" #
{ 
float 
data 
; 
if   

(   J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_22a   J
.  J K
badPublicStatic  K Z
)  Z [
{!! 	
data"" 
="" 
float"" 
."" 
MinValue"" !
;""! "
{$$ 
	TcpClient%% 
tcpConn%% !
=%%" #
null%%$ (
;%%( )
StreamReader&& 
sr&& 
=&&  !
null&&" &
;&&& '
try'' 
{(( 
tcpConn** 
=** 
new** !
	TcpClient**" +
(**+ ,
$str**, >
,**> ?
$num**@ E
)**E F
;**F G
sr,, 
=,, 
new,, 
StreamReader,, )
(,,) *
tcpConn,,* 1
.,,1 2
	GetStream,,2 ;
(,,; <
),,< =
),,= >
;,,> ?
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
float33# (
.33( )
Parse33) .
(33. /
stringNumber33/ ;
.33; <
Trim33< @
(33@ A
)33A B
)33B C
;33C D
}44 
catch55 
(55 
FormatException55 -
exceptNumberFormat55. @
)55@ A
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
finally?? 
{@@ 
tryBB 
{CC 
ifDD 
(DD 
srDD 
!=DD !
nullDD" &
)DD& '
{EE 
srFF 
.FF 
CloseFF $
(FF$ %
)FF% &
;FF& '
}GG 
}HH 
catchII 
(II 
IOExceptionII &
exceptIOII' /
)II/ 0
{JJ 
IOKK 
.KK 
LoggerKK !
.KK! "
LogKK" %
(KK% &
NLogKK& *
.KK* +
LogLevelKK+ 3
.KK3 4
WarnKK4 8
,KK8 9
exceptIOKK: B
,KKB C
$strKKD e
)KKe f
;KKf g
}LL 
tryOO 
{PP 
ifQQ 
(QQ 
tcpConnQQ #
!=QQ$ &
nullQQ' +
)QQ+ ,
{RR 
tcpConnSS #
.SS# $
CloseSS$ )
(SS) *
)SS* +
;SS+ ,
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV &
exceptIOVV' /
)VV/ 0
{WW 
IOXX 
.XX 
LoggerXX !
.XX! "
LogXX" %
(XX% &
NLogXX& *
.XX* +
LogLevelXX+ 3
.XX3 4
WarnXX4 8
,XX8 9
exceptIOXX: B
,XXB C
$strXXD Z
)XXZ [
;XX[ \
}YY 
}ZZ 
}[[ 
}\\ 	
else]] 
{^^ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
returncc 
datacc 
;cc 
}dd 
publicii 

staticii 
floatii 
GoodG2B1Sourceii &
(ii& '
)ii' (
{jj 
floatkk 
datakk 
;kk 
ifll 

(ll J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_22all J
.llJ K 
goodG2B1PublicStaticllK _
)ll_ `
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
elserr 
{ss 	
datauu 
=uu 
$numuu 
;uu 
}vv 	
returnww 
dataww 
;ww 
}xx 
public{{ 

static{{ 
float{{ 
GoodG2B2Source{{ &
({{& '
){{' (
{|| 
float}} 
data}} 
;}} 
if~~ 

(~~ J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_22a~~ J
.~~J K 
GoodG2B2PublicStatic~~K _
)~~_ `
{ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
else
ÉÉ 
{
ÑÑ 	
data
áá 
=
áá 
$num
áá 
;
áá 
}
àà 	
return
ââ 
data
ââ 
;
ââ 
}
ää 
}åå 
}çç ä,
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_31 C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float   
dataCopy   
;   
{!! 	
float"" 
data"" 
;"" 
data## 
=## 
float## 
.## 
MinValue## !
;##! "
{%% 
	TcpClient&& 
tcpConn&& !
=&&" #
null&&$ (
;&&( )
StreamReader'' 
sr'' 
=''  !
null''" &
;''& '
try(( 
{)) 
tcpConn++ 
=++ 
new++ !
	TcpClient++" +
(+++ ,
$str++, >
,++> ?
$num++@ E
)++E F
;++F G
sr-- 
=-- 
new-- 
StreamReader-- )
(--) *
tcpConn--* 1
.--1 2
	GetStream--2 ;
(--; <
)--< =
)--= >
;--> ?
string// 
stringNumber// '
=//( )
sr//* ,
.//, -
ReadLine//- 5
(//5 6
)//6 7
;//7 8
if00 
(00 
stringNumber00 $
!=00% '
null00( ,
)00, -
{11 
try22 
{33 
data44  
=44! "
float44# (
.44( )
Parse44) .
(44. /
stringNumber44/ ;
.44; <
Trim44< @
(44@ A
)44A B
)44B C
;44C D
}55 
catch66 
(66 
FormatException66 -
exceptNumberFormat66. @
)66@ A
{77 
IO88 
.88 
Logger88 %
.88% &
Log88& )
(88) *
NLog88* .
.88. /
LogLevel88/ 7
.887 8
Warn888 <
,88< =
exceptNumberFormat88> P
,88P Q
$str	88R Ñ
)
88Ñ Ö
;
88Ö Ü
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< "
exceptIO<<# +
)<<+ ,
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> !
(>>! "
NLog>>" &
.>>& '
LogLevel>>' /
.>>/ 0
Warn>>0 4
,>>4 5
exceptIO>>6 >
,>>> ?
$str>>@ [
)>>[ \
;>>\ ]
}?? 
finally@@ 
{AA 
tryCC 
{DD 
ifEE 
(EE 
srEE 
!=EE !
nullEE" &
)EE& '
{FF 
srGG 
.GG 
CloseGG $
(GG$ %
)GG% &
;GG& '
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ &
exceptIOJJ' /
)JJ/ 0
{KK 
IOLL 
.LL 
LoggerLL !
.LL! "
LogLL" %
(LL% &
NLogLL& *
.LL* +
LogLevelLL+ 3
.LL3 4
WarnLL4 8
,LL8 9
exceptIOLL: B
,LLB C
$strLLD e
)LLe f
;LLf g
}MM 
tryPP 
{QQ 
ifRR 
(RR 
tcpConnRR #
!=RR$ &
nullRR' +
)RR+ ,
{SS 
tcpConnTT #
.TT# $
CloseTT$ )
(TT) *
)TT* +
;TT+ ,
}UU 
}VV 
catchWW 
(WW 
IOExceptionWW &
exceptIOWW' /
)WW/ 0
{XX 
IOYY 
.YY 
LoggerYY !
.YY! "
LogYY" %
(YY% &
NLogYY& *
.YY* +
LogLevelYY+ 3
.YY3 4
WarnYY4 8
,YY8 9
exceptIOYY: B
,YYB C
$strYYD Z
)YYZ [
;YY[ \
}ZZ 
}[[ 
}\\ 
dataCopy]] 
=]] 
data]] 
;]] 
}^^ 	
{__ 	
float`` 
data`` 
=`` 
dataCopy`` !
;``! "
{aa 
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
longcc "
)cc" #
datacc# '
)cc' (
;cc( )
}dd 
}ee 	
}ff 
publicii 

overrideii 
voidii 
Goodii 
(ii 
)ii 
{jj 
GoodG2Bkk 
(kk 
)kk 
;kk 
}ll 
privateoo 
voidoo 
GoodG2Boo 
(oo 
)oo 
{pp 
floatqq 
dataCopyqq 
;qq 
{rr 	
floatss 
datass 
;ss 
datauu 
=uu 
$numuu 
;uu 
dataCopyvv 
=vv 
datavv 
;vv 
}ww 	
{xx 	
floatyy 
datayy 
=yy 
dataCopyyy !
;yy! "
{zz 
IO|| 
.|| 
	WriteLine|| 
(|| 
(|| 
long|| "
)||" #
data||# '
)||' (
;||( )
}}} 
}~~ 	
} 
}ÅÅ 
}ÇÇ Ü,
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_41 C
:D E
AbstractTestCaseF V
{ 
private 
static 
void 
BadSink 
(  
float  %
data& *
)+ ,
{ 
{ 	
IO   
.   
	WriteLine   
(   
(   
long   
)   
data   #
)  # $
;  $ %
}!! 	
}"" 
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
float&& 
data&& 
;&& 
data'' 
='' 
float'' 
.'' 
MinValue'' 
;'' 
{)) 	
	TcpClient** 
tcpConn** 
=** 
null**  $
;**$ %
StreamReader++ 
sr++ 
=++ 
null++ "
;++" #
try,, 
{-- 
tcpConn// 
=// 
new// 
	TcpClient// '
(//' (
$str//( :
,//: ;
$num//< A
)//A B
;//B C
sr11 
=11 
new11 
StreamReader11 %
(11% &
tcpConn11& -
.11- .
	GetStream11. 7
(117 8
)118 9
)119 :
;11: ;
string33 
stringNumber33 #
=33$ %
sr33& (
.33( )
ReadLine33) 1
(331 2
)332 3
;333 4
if44 
(44 
stringNumber44  
!=44! #
null44$ (
)44( )
{55 
try66 
{77 
data88 
=88 
float88 $
.88$ %
Parse88% *
(88* +
stringNumber88+ 7
.887 8
Trim888 <
(88< =
)88= >
)88> ?
;88? @
}99 
catch:: 
(:: 
FormatException:: )
exceptNumberFormat::* <
)::< =
{;; 
IO<< 
.<< 
Logger<< !
.<<! "
Log<<" %
(<<% &
NLog<<& *
.<<* +
LogLevel<<+ 3
.<<3 4
Warn<<4 8
,<<8 9
exceptNumberFormat<<: L
,<<L M
$str	<<N Ä
)
<<Ä Å
;
<<Å Ç
}== 
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ 
exceptIO@@ '
)@@' (
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
exceptIOBB2 :
,BB: ;
$strBB< W
)BBW X
;BBX Y
}CC 
finallyDD 
{EE 
tryGG 
{HH 
ifII 
(II 
srII 
!=II 
nullII "
)II" #
{JJ 
srKK 
.KK 
CloseKK  
(KK  !
)KK! "
;KK" #
}LL 
}MM 
catchNN 
(NN 
IOExceptionNN "
exceptIONN# +
)NN+ ,
{OO 
IOPP 
.PP 
LoggerPP 
.PP 
LogPP !
(PP! "
NLogPP" &
.PP& '
LogLevelPP' /
.PP/ 0
WarnPP0 4
,PP4 5
exceptIOPP6 >
,PP> ?
$strPP@ a
)PPa b
;PPb c
}QQ 
tryTT 
{UU 
ifVV 
(VV 
tcpConnVV 
!=VV  "
nullVV# '
)VV' (
{WW 
tcpConnXX 
.XX  
CloseXX  %
(XX% &
)XX& '
;XX' (
}YY 
}ZZ 
catch[[ 
([[ 
IOException[[ "
exceptIO[[# +
)[[+ ,
{\\ 
IO]] 
.]] 
Logger]] 
.]] 
Log]] !
(]]! "
NLog]]" &
.]]& '
LogLevel]]' /
.]]/ 0
Warn]]0 4
,]]4 5
exceptIO]]6 >
,]]> ?
$str]]@ V
)]]V W
;]]W X
}^^ 
}__ 
}`` 	
BadSinkaa 
(aa 
dataaa 
)aa 
;aa 
}bb 
publicee 

overrideee 
voidee 
Goodee 
(ee 
)ee 
{ff 
GoodG2Bgg 
(gg 
)gg 
;gg 
}hh 
privatejj 
staticjj 
voidjj 
GoodG2BSinkjj #
(jj# $
floatjj$ )
datajj* .
)jj/ 0
{kk 
{ll 	
IOnn 
.nn 
	WriteLinenn 
(nn 
(nn 
longnn 
)nn 
datann #
)nn# $
;nn$ %
}oo 	
}pp 
privatess 
staticss 
voidss 
GoodG2Bss 
(ss  
)ss  !
{tt 
floatuu 
datauu 
;uu 
dataww 
=ww 
$numww 
;ww 
GoodG2BSinkxx 
(xx 
dataxx 
)xx 
;xx 
}yy 
}{{ 
}|| Ù,
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_42 C
:D E
AbstractTestCaseF V
{ 
private 
static 
float 
	BadSource "
(" #
)# $
{ 
float 
data 
; 
data 
= 
float 
. 
MinValue 
; 
{!! 	
	TcpClient"" 
tcpConn"" 
="" 
null""  $
;""$ %
StreamReader## 
sr## 
=## 
null## "
;##" #
try$$ 
{%% 
tcpConn'' 
='' 
new'' 
	TcpClient'' '
(''' (
$str''( :
,'': ;
$num''< A
)''A B
;''B C
sr)) 
=)) 
new)) 
StreamReader)) %
())% &
tcpConn))& -
.))- .
	GetStream)). 7
())7 8
)))8 9
)))9 :
;)): ;
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
float00 $
.00$ %
Parse00% *
(00* +
stringNumber00+ 7
.007 8
Trim008 <
(00< =
)00= >
)00> ?
;00? @
}11 
catch22 
(22 
FormatException22 )
exceptNumberFormat22* <
)22< =
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ a
)HHa b
;HHb c
}II 
tryLL 
{MM 
ifNN 
(NN 
tcpConnNN 
!=NN  "
nullNN# '
)NN' (
{OO 
tcpConnPP 
.PP  
ClosePP  %
(PP% &
)PP& '
;PP' (
}QQ 
}RR 
catchSS 
(SS 
IOExceptionSS "
exceptIOSS# +
)SS+ ,
{TT 
IOUU 
.UU 
LoggerUU 
.UU 
LogUU !
(UU! "
NLogUU" &
.UU& '
LogLevelUU' /
.UU/ 0
WarnUU0 4
,UU4 5
exceptIOUU6 >
,UU> ?
$strUU@ V
)UUV W
;UUW X
}VV 
}WW 
}XX 	
returnYY 
dataYY 
;YY 
}ZZ 
public]] 

override]] 
void]] 
Bad]] 
(]] 
)]] 
{^^ 
float__ 
data__ 
=__ 
	BadSource__ 
(__ 
)__  
;__  !
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
longbb 
)bb 
databb #
)bb# $
;bb$ %
}cc 	
}dd 
privategg 
staticgg 
floatgg 
GoodG2BSourcegg &
(gg& '
)gg' (
{hh 
floatii 
dataii 
;ii 
datakk 
=kk 
$numkk 
;kk 
returnll 
datall 
;ll 
}mm 
privatepp 
staticpp 
voidpp 
GoodG2Bpp 
(pp  
)pp  !
{qq 
floatrr 
datarr 
=rr 
GoodG2BSourcerr "
(rr" #
)rr# $
;rr$ %
{ss 	
IOuu 
.uu 
	WriteLineuu 
(uu 
(uu 
longuu 
)uu 
datauu #
)uu# $
;uu$ %
}vv 	
}ww 
publicyy 

overrideyy 
voidyy 
Goodyy 
(yy 
)yy 
{zz 
GoodG2B{{ 
({{ 
){{ 
;{{ 
}|| 
}~~ 
} –.
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_45 C
:D E
AbstractTestCaseF V
{ 
private 
float 
dataBad 
; 
private 
float 
dataGoodG2B 
; 
private   
void   
BadSink   
(   
)   
{!! 
float"" 
data"" 
="" 
dataBad"" 
;"" 
{## 	
IO%% 
.%% 
	WriteLine%% 
(%% 
(%% 
long%% 
)%% 
data%% #
)%%# $
;%%$ %
}&& 	
}'' 
public** 

override** 
void** 
Bad** 
(** 
)** 
{++ 
float,, 
data,, 
;,, 
data-- 
=-- 
float-- 
.-- 
MinValue-- 
;-- 
{// 	
	TcpClient00 
tcpConn00 
=00 
null00  $
;00$ %
StreamReader11 
sr11 
=11 
null11 "
;11" #
try22 
{33 
tcpConn55 
=55 
new55 
	TcpClient55 '
(55' (
$str55( :
,55: ;
$num55< A
)55A B
;55B C
sr77 
=77 
new77 
StreamReader77 %
(77% &
tcpConn77& -
.77- .
	GetStream77. 7
(777 8
)778 9
)779 :
;77: ;
string99 
stringNumber99 #
=99$ %
sr99& (
.99( )
ReadLine99) 1
(991 2
)992 3
;993 4
if:: 
(:: 
stringNumber::  
!=::! #
null::$ (
)::( )
{;; 
try<< 
{== 
data>> 
=>> 
float>> $
.>>$ %
Parse>>% *
(>>* +
stringNumber>>+ 7
.>>7 8
Trim>>8 <
(>>< =
)>>= >
)>>> ?
;>>? @
}?? 
catch@@ 
(@@ 
FormatException@@ )
exceptNumberFormat@@* <
)@@< =
{AA 
IOBB 
.BB 
LoggerBB !
.BB! "
LogBB" %
(BB% &
NLogBB& *
.BB* +
LogLevelBB+ 3
.BB3 4
WarnBB4 8
,BB8 9
exceptNumberFormatBB: L
,BBL M
$str	BBN Ä
)
BBÄ Å
;
BBÅ Ç
}CC 
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF 
exceptIOFF '
)FF' (
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH "
.HH" #
LogLevelHH# +
.HH+ ,
WarnHH, 0
,HH0 1
exceptIOHH2 :
,HH: ;
$strHH< W
)HHW X
;HHX Y
}II 
finallyJJ 
{KK 
tryMM 
{NN 
ifOO 
(OO 
srOO 
!=OO 
nullOO "
)OO" #
{PP 
srQQ 
.QQ 
CloseQQ  
(QQ  !
)QQ! "
;QQ" #
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ a
)VVa b
;VVb c
}WW 
tryZZ 
{[[ 
if\\ 
(\\ 
tcpConn\\ 
!=\\  "
null\\# '
)\\' (
{]] 
tcpConn^^ 
.^^  
Close^^  %
(^^% &
)^^& '
;^^' (
}__ 
}`` 
catchaa 
(aa 
IOExceptionaa "
exceptIOaa# +
)aa+ ,
{bb 
IOcc 
.cc 
Loggercc 
.cc 
Logcc !
(cc! "
NLogcc" &
.cc& '
LogLevelcc' /
.cc/ 0
Warncc0 4
,cc4 5
exceptIOcc6 >
,cc> ?
$strcc@ V
)ccV W
;ccW X
}dd 
}ee 
}ff 	
dataBadgg 
=gg 
datagg 
;gg 
BadSinkhh 
(hh 
)hh 
;hh 
}ii 
publicll 

overridell 
voidll 
Goodll 
(ll 
)ll 
{mm 
GoodG2Bnn 
(nn 
)nn 
;nn 
}oo 
privateqq 
voidqq 
GoodG2BSinkqq 
(qq 
)qq 
{rr 
floatss 
datass 
=ss 
dataGoodG2Bss  
;ss  !
{tt 	
IOvv 
.vv 
	WriteLinevv 
(vv 
(vv 
longvv 
)vv 
datavv #
)vv# $
;vv$ %
}ww 	
}xx 
private{{ 
void{{ 
GoodG2B{{ 
({{ 
){{ 
{|| 
float}} 
data}} 
;}} 
data 
= 
$num 
; 
dataGoodG2B
ÄÄ 
=
ÄÄ 
data
ÄÄ 
;
ÄÄ 
GoodG2BSink
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
}
ÇÇ 
}ÑÑ 
}ÖÖ æ'
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_51a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data 
= 
float 
. 
MinValue 
; 
{!! 	
	TcpClient"" 
tcpConn"" 
="" 
null""  $
;""$ %
StreamReader## 
sr## 
=## 
null## "
;##" #
try$$ 
{%% 
tcpConn'' 
='' 
new'' 
	TcpClient'' '
(''' (
$str''( :
,'': ;
$num''< A
)''A B
;''B C
sr)) 
=)) 
new)) 
StreamReader)) %
())% &
tcpConn))& -
.))- .
	GetStream)). 7
())7 8
)))8 9
)))9 :
;)): ;
string++ 
stringNumber++ #
=++$ %
sr++& (
.++( )
ReadLine++) 1
(++1 2
)++2 3
;++3 4
if,, 
(,, 
stringNumber,,  
!=,,! #
null,,$ (
),,( )
{-- 
try.. 
{// 
data00 
=00 
float00 $
.00$ %
Parse00% *
(00* +
stringNumber00+ 7
.007 8
Trim008 <
(00< =
)00= >
)00> ?
;00? @
}11 
catch22 
(22 
FormatException22 )
exceptNumberFormat22* <
)22< =
{33 
IO44 
.44 
Logger44 !
.44! "
Log44" %
(44% &
NLog44& *
.44* +
LogLevel44+ 3
.443 4
Warn444 8
,448 9
exceptNumberFormat44: L
,44L M
$str	44N Ä
)
44Ä Å
;
44Å Ç
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
finally<< 
{== 
try?? 
{@@ 
ifAA 
(AA 
srAA 
!=AA 
nullAA "
)AA" #
{BB 
srCC 
.CC 
CloseCC  
(CC  !
)CC! "
;CC" #
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
exceptIOHH6 >
,HH> ?
$strHH@ a
)HHa b
;HHb c
}II 
tryLL 
{MM 
ifNN 
(NN 
tcpConnNN 
!=NN  "
nullNN# '
)NN' (
{OO 
tcpConnPP 
.PP  
ClosePP  %
(PP% &
)PP& '
;PP' (
}QQ 
}RR 
catchSS 
(SS 
IOExceptionSS "
exceptIOSS# +
)SS+ ,
{TT 
IOUU 
.UU 
LoggerUU 
.UU 
LogUU !
(UU! "
NLogUU" &
.UU& '
LogLevelUU' /
.UU/ 0
WarnUU0 4
,UU4 5
exceptIOUU6 >
,UU> ?
$strUU@ V
)UUV W
;UUW X
}VV 
}WW 
}XX 	J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_51bYY F
.YYF G
BadSinkYYG N
(YYN O
dataYYO S
)YYU V
;YYV W
}ZZ 
public]] 

override]] 
void]] 
Good]] 
(]] 
)]] 
{^^ 
GoodG2B__ 
(__ 
)__ 
;__ 
}`` 
privatecc 
voidcc 
GoodG2Bcc 
(cc 
)cc 
{dd 
floatee 
dataee 
;ee 
datagg 
=gg 
$numgg 
;gg J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_51bhh F
.hhF G
GoodG2BSinkhhG R
(hhR S
datahhS W
)hhY Z
;hhZ [
}ii 
}kk 
}ll ß	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_51b D
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
float### (
data##) -
)##. /
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
long'' 
)'' 
data'' #
)''# $
;''$ %
}(( 	
})) 
}++ 
},, æ'
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_52a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_52bZZ F
.ZZF G
BadSinkZZG N
(ZZN O
dataZZO S
)ZZT U
;ZZU V
}[[ 
public^^ 

override^^ 
void^^ 
Good^^ 
(^^ 
)^^ 
{__ 
GoodG2B`` 
(`` 
)`` 
;`` 
}aa 
privatedd 
voiddd 
GoodG2Bdd 
(dd 
)dd 
{ee 
floatff 
dataff 
;ff 
datahh 
=hh 
$numhh 
;hh J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_52bii F
.iiF G
GoodG2BSinkiiG R
(iiR S
dataiiS W
)iiX Y
;iiY Z
}jj 
}ll 
}mm É	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_52b D
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_52c F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
float!!# (
data!!) -
)!!. /
{"" J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_52c## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' ß	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_52c D
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
float$$# (
data$$) -
)$$. /
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
long(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- æ'
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_53a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_53bZZ F
.ZZF G
BadSinkZZG N
(ZZN O
dataZZO S
)ZZT U
;ZZU V
}[[ 
public^^ 

override^^ 
void^^ 
Good^^ 
(^^ 
)^^ 
{__ 
GoodG2B`` 
(`` 
)`` 
;`` 
}aa 
privatedd 
voiddd 
GoodG2Bdd 
(dd 
)dd 
{ee 
floatff 
dataff 
;ff 
datahh 
=hh 
$numhh 
;hh J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_53bii F
.iiF G
GoodG2BSinkiiG R
(iiR S
dataiiS W
)iiX Y
;iiY Z
}jj 
}ll 
}mm É	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_53b D
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_53c F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
float!!# (
data!!) -
)!!. /
{"" J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_53c## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' É	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_53c D
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_53d F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
float!!# (
data!!) -
)!!. /
{"" J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_53d## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' ß	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_53d D
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
float$$# (
data$$) -
)$$. /
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
long(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- æ'
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_54a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_54bZZ F
.ZZF G
BadSinkZZG N
(ZZN O
dataZZO S
)ZZT U
;ZZU V
}[[ 
public^^ 

override^^ 
void^^ 
Good^^ 
(^^ 
)^^ 
{__ 
GoodG2B`` 
(`` 
)`` 
;`` 
}aa 
privatedd 
voiddd 
GoodG2Bdd 
(dd 
)dd 
{ee 
floatff 
dataff 
;ff 
datahh 
=hh 
$numhh 
;hh J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_54bii F
.iiF G
GoodG2BSinkiiG R
(iiR S
dataiiS W
)iiX Y
;iiY Z
}jj 
}ll 
}mm É	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_54b D
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_54c F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
float!!# (
data!!) -
)!!. /
{"" J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_54c## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' É	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_54c D
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_54d F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
float!!# (
data!!) -
)!!. /
{"" J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_54d## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' É	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_54d D
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_54e F
.F G
BadSinkG N
(N O
dataO S
)T U
;U V
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
float!!# (
data!!) -
)!!. /
{"" J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_54e## F
.##F G
GoodG2BSink##G R
(##R S
data##S W
)##X Y
;##Y Z
}$$ 
}&& 
}'' ß	
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_54e D
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
float$$# (
data$$) -
)$$. /
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
long(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- ˚
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_61a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
= J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_61b S
.S T
	BadSourceT ]
(] ^
)^ _
;_ `
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
float++ 
data++ 
=++ J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_61b++ S
.++S T
GoodG2BSource++T a
(++a b
)++b c
;++c d
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
long.. 
).. 
data.. #
)..# $
;..$ %
}// 	
}00 
}22 
}33 Ï#
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_61b D
{ 
public 

static 
float 
	BadSource !
(! "
)" #
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	
returnZZ 
dataZZ 
;ZZ 
}[[ 
public`` 

static`` 
float`` 
GoodG2BSource`` %
(``% &
)``& '
{aa 
floatbb 
databb 
;bb 
datadd 
=dd 
$numdd 
;dd 
returnee 
dataee 
;ee 
}ff 
}hh 
}ii æ,
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_66a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	
floatZZ 
[ZZ 
]ZZ 
	dataArrayZZ 
=ZZ 
newZZ 
floatZZ  %
[ZZ% &
$numZZ& '
]ZZ' (
;ZZ( )
	dataArray[[ 
[[[ 
$num[[ 
][[ 
=[[ 
data[[ 
;[[ J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_66b\\ F
.\\F G
BadSink\\G N
(\\N O
	dataArray\\O X
)\\Z [
;\\[ \
}]] 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2Bbb 
(bb 
)bb 
;bb 
}cc 
privateff 
staticff 
voidff 
GoodG2Bff 
(ff  
)ff  !
{gg 
floathh 
datahh 
;hh 
datajj 
=jj 
$numjj 
;jj 
floatkk 
[kk 
]kk 
	dataArraykk 
=kk 
newkk 
floatkk  %
[kk% &
$numkk& '
]kk' (
;kk( )
	dataArrayll 
[ll 
$numll 
]ll 
=ll 
datall 
;ll J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_66bmm F
.mmF G
GoodG2BSinkmmG R
(mmR S
	dataArraymmS \
)mm^ _
;mm_ `
}nn 
}pp 
}qq Å
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_66b D
{ 
public 

static 
void 
BadSink 
( 
float $
[$ %
]% &
	dataArray' 0
)1 2
{ 
float 
data 
= 
	dataArray 
[ 
$num  
]  !
;! "
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
float%%# (
[%%( )
]%%) *
	dataArray%%+ 4
)%%5 6
{&& 
float'' 
data'' 
='' 
	dataArray'' 
['' 
$num''  
]''  !
;''! "
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
long** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// §-
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_67a D
:E F
AbstractTestCaseG W
{ 
public 

class 
	Container 
{ 
public 
float 
containerOne !
;! "
}   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
float$$ 
data$$ 
;$$ 
data%% 
=%% 
float%% 
.%% 
MinValue%% 
;%% 
{'' 	
	TcpClient(( 
tcpConn(( 
=(( 
null((  $
;(($ %
StreamReader)) 
sr)) 
=)) 
null)) "
;))" #
try** 
{++ 
tcpConn-- 
=-- 
new-- 
	TcpClient-- '
(--' (
$str--( :
,--: ;
$num--< A
)--A B
;--B C
sr// 
=// 
new// 
StreamReader// %
(//% &
tcpConn//& -
.//- .
	GetStream//. 7
(//7 8
)//8 9
)//9 :
;//: ;
string11 
stringNumber11 #
=11$ %
sr11& (
.11( )
ReadLine11) 1
(111 2
)112 3
;113 4
if22 
(22 
stringNumber22  
!=22! #
null22$ (
)22( )
{33 
try44 
{55 
data66 
=66 
float66 $
.66$ %
Parse66% *
(66* +
stringNumber66+ 7
.667 8
Trim668 <
(66< =
)66= >
)66> ?
;66? @
}77 
catch88 
(88 
FormatException88 )
exceptNumberFormat88* <
)88< =
{99 
IO:: 
.:: 
Logger:: !
.::! "
Log::" %
(::% &
NLog::& *
.::* +
LogLevel::+ 3
.::3 4
Warn::4 8
,::8 9
exceptNumberFormat::: L
,::L M
$str	::N Ä
)
::Ä Å
;
::Å Ç
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> 
exceptIO>> '
)>>' (
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ 
(@@ 
NLog@@ "
.@@" #
LogLevel@@# +
.@@+ ,
Warn@@, 0
,@@0 1
exceptIO@@2 :
,@@: ;
$str@@< W
)@@W X
;@@X Y
}AA 
finallyBB 
{CC 
tryEE 
{FF 
ifGG 
(GG 
srGG 
!=GG 
nullGG "
)GG" #
{HH 
srII 
.II 
CloseII  
(II  !
)II! "
;II" #
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL "
exceptIOLL# +
)LL+ ,
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
exceptIONN6 >
,NN> ?
$strNN@ a
)NNa b
;NNb c
}OO 
tryRR 
{SS 
ifTT 
(TT 
tcpConnTT 
!=TT  "
nullTT# '
)TT' (
{UU 
tcpConnVV 
.VV  
CloseVV  %
(VV% &
)VV& '
;VV' (
}WW 
}XX 
catchYY 
(YY 
IOExceptionYY "
exceptIOYY# +
)YY+ ,
{ZZ 
IO[[ 
.[[ 
Logger[[ 
.[[ 
Log[[ !
([[! "
NLog[[" &
.[[& '
LogLevel[[' /
.[[/ 0
Warn[[0 4
,[[4 5
exceptIO[[6 >
,[[> ?
$str[[@ V
)[[V W
;[[W X
}\\ 
}]] 
}^^ 	
	Container__ 
dataContainer__ 
=__  !
new__" %
	Container__& /
(__/ 0
)__0 1
;__1 2
dataContainer`` 
.`` 
containerOne`` "
=``# $
data``% )
;``) *J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_67baa F
.aaF G
BadSinkaaG N
(aaN O
dataContaineraaO \
)aa^ _
;aa_ `
}bb 
publicee 

overrideee 
voidee 
Goodee 
(ee 
)ee 
{ff 
GoodG2Bgg 
(gg 
)gg 
;gg 
}hh 
privatekk 
statickk 
voidkk 
GoodG2Bkk 
(kk  
)kk  !
{ll 
floatmm 
datamm 
;mm 
dataoo 
=oo 
$numoo 
;oo 
	Containerpp 
dataContainerpp 
=pp  !
newpp" %
	Containerpp& /
(pp/ 0
)pp0 1
;pp1 2
dataContainerqq 
.qq 
containerOneqq "
=qq# $
dataqq% )
;qq) *J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_67brr F
.rrF G
GoodG2BSinkrrG R
(rrR S
dataContainerrrS `
)rrb c
;rrc d
}ss 
}uu 
}vv Ö
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_67b D
{ 
public 

static 
void 
BadSink 
( J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_67a ]
.] ^
	Container^ g
dataContainerh u
)v w
{ 
float 
data 
= 
dataContainer "
." #
containerOne# /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_67a%%# a
.%%a b
	Container%%b k
dataContainer%%l y
)%%z {
{&& 
float'' 
data'' 
='' 
dataContainer'' "
.''" #
containerOne''# /
;''/ 0
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
long** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// ¢'
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_68a D
:E F
AbstractTestCaseG W
{ 
public 

static 
float 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_68bZZ F
.ZZF G
BadSinkZZG N
(ZZN O
)ZZO P
;ZZP Q
}[[ 
public^^ 

override^^ 
void^^ 
Good^^ 
(^^ 
)^^ 
{__ 
GoodG2B`` 
(`` 
)`` 
;`` 
}aa 
privatedd 
staticdd 
voiddd 
GoodG2Bdd 
(dd  
)dd  !
{ee 
datagg 
=gg 
$numgg 
;gg J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_68bhh F
.hhF G
GoodG2BSinkhhG R
(hhR S
)hhS T
;hhT U
}ii 
}kk 
}ll Ω
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_68b D
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
float 
data 
= J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_68a S
.S T
dataT X
;X Y
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
float&& 
data&& 
=&& J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_68a&& S
.&&S T
data&&T X
;&&X Y
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
long)) 
))) 
data)) #
)))# $
;))$ %
}** 	
}++ 
}-- 
}.. ∂(
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_71a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_71bZZ F
.ZZF G
BadSinkZZG N
(ZZN O
(ZZO P
ObjectZZP V
)ZZV W
dataZZW [
)ZZ] ^
;ZZ^ _
}[[ 
public^^ 

override^^ 
void^^ 
Good^^ 
(^^ 
)^^ 
{__ 
GoodG2B`` 
(`` 
)`` 
;`` 
}aa 
privatedd 
staticdd 
voiddd 
GoodG2Bdd 
(dd  
)dd  !
{ee 
floatff 
dataff 
;ff 
datahh 
=hh 
$numhh 
;hh J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_71bii F
.iiF G
GoodG2BSinkiiG R
(iiR S
(iiS T
ObjectiiT Z
)iiZ [
dataii[ _
)iia b
;iib c
}jj 
}ll 
}mm Õ
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_71b D
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
float 
data 
= 
( 
float 
) 

dataObject &
;& '
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
float(( 
data(( 
=(( 
((( 
float(( 
)(( 

dataObject(( &
;((& '
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
long++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ÷1
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_72a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	
	HashtableZZ 
dataHashtableZZ 
=ZZ  !
newZZ" %
	HashtableZZ& /
(ZZ/ 0
$numZZ0 1
)ZZ1 2
;ZZ2 3
dataHashtable[[ 
.[[ 
Add[[ 
([[ 
$num[[ 
,[[ 
data[[ !
)[[! "
;[[" #
dataHashtable\\ 
.\\ 
Add\\ 
(\\ 
$num\\ 
,\\ 
data\\ !
)\\! "
;\\" #
dataHashtable]] 
.]] 
Add]] 
(]] 
$num]] 
,]] 
data]] !
)]]! "
;]]" #J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_72b^^ F
.^^F G
BadSink^^G N
(^^N O
dataHashtable^^O \
)^^^ _
;^^_ `
}__ 
publicbb 

overridebb 
voidbb 
Goodbb 
(bb 
)bb 
{cc 
GoodG2Bdd 
(dd 
)dd 
;dd 
}ee 
privatehh 
statichh 
voidhh 
GoodG2Bhh 
(hh  
)hh  !
{ii 
floatjj 
datajj 
;jj 
datall 
=ll 
$numll 
;ll 
	Hashtablemm 
dataHashtablemm 
=mm  !
newmm" %
	Hashtablemm& /
(mm/ 0
$nummm0 1
)mm1 2
;mm2 3
dataHashtablenn 
.nn 
Addnn 
(nn 
$numnn 
,nn 
datann !
)nn! "
;nn" #
dataHashtableoo 
.oo 
Addoo 
(oo 
$numoo 
,oo 
dataoo !
)oo! "
;oo" #
dataHashtablepp 
.pp 
Addpp 
(pp 
$numpp 
,pp 
datapp !
)pp! "
;pp" #J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_72bqq F
.qqF G
GoodG2BSinkqqG R
(qqR S
dataHashtableqqS `
)qqb c
;qqc d
}rr 
}tt 
}uu ø
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_72b D
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
float 
data 
= 
( 
float 
) 
dataHashtable *
[* +
$num+ ,
], -
;- .
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
float(( 
data(( 
=(( 
((( 
float(( 
)(( 
dataHashtable(( *
[((* +
$num((+ ,
]((, -
;((- .
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
long++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ÷1
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_73a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float   
data   
;   
data!! 
=!! 
float!! 
.!! 
MinValue!! 
;!! 
{## 	
	TcpClient$$ 
tcpConn$$ 
=$$ 
null$$  $
;$$$ %
StreamReader%% 
sr%% 
=%% 
null%% "
;%%" #
try&& 
{'' 
tcpConn)) 
=)) 
new)) 
	TcpClient)) '
())' (
$str))( :
,)): ;
$num))< A
)))A B
;))B C
sr++ 
=++ 
new++ 
StreamReader++ %
(++% &
tcpConn++& -
.++- .
	GetStream++. 7
(++7 8
)++8 9
)++9 :
;++: ;
string-- 
stringNumber-- #
=--$ %
sr--& (
.--( )
ReadLine--) 1
(--1 2
)--2 3
;--3 4
if.. 
(.. 
stringNumber..  
!=..! #
null..$ (
)..( )
{// 
try00 
{11 
data22 
=22 
float22 $
.22$ %
Parse22% *
(22* +
stringNumber22+ 7
.227 8
Trim228 <
(22< =
)22= >
)22> ?
;22? @
}33 
catch44 
(44 
FormatException44 )
exceptNumberFormat44* <
)44< =
{55 
IO66 
.66 
Logger66 !
.66! "
Log66" %
(66% &
NLog66& *
.66* +
LogLevel66+ 3
.663 4
Warn664 8
,668 9
exceptNumberFormat66: L
,66L M
$str	66N Ä
)
66Ä Å
;
66Å Ç
}77 
}88 
}99 
catch:: 
(:: 
IOException:: 
exceptIO:: '
)::' (
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< 
(<< 
NLog<< "
.<<" #
LogLevel<<# +
.<<+ ,
Warn<<, 0
,<<0 1
exceptIO<<2 :
,<<: ;
$str<<< W
)<<W X
;<<X Y
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC 
nullCC "
)CC" #
{DD 
srEE 
.EE 
CloseEE  
(EE  !
)EE! "
;EE" #
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH "
exceptIOHH# +
)HH+ ,
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ !
(JJ! "
NLogJJ" &
.JJ& '
LogLevelJJ' /
.JJ/ 0
WarnJJ0 4
,JJ4 5
exceptIOJJ6 >
,JJ> ?
$strJJ@ a
)JJa b
;JJb c
}KK 
tryNN 
{OO 
ifPP 
(PP 
tcpConnPP 
!=PP  "
nullPP# '
)PP' (
{QQ 
tcpConnRR 
.RR  
CloseRR  %
(RR% &
)RR& '
;RR' (
}SS 
}TT 
catchUU 
(UU 
IOExceptionUU "
exceptIOUU# +
)UU+ ,
{VV 
IOWW 
.WW 
LoggerWW 
.WW 
LogWW !
(WW! "
NLogWW" &
.WW& '
LogLevelWW' /
.WW/ 0
WarnWW0 4
,WW4 5
exceptIOWW6 >
,WW> ?
$strWW@ V
)WWV W
;WWW X
}XX 
}YY 
}ZZ 	

LinkedList[[ 
<[[ 
float[[ 
>[[ 
dataLinkedList[[ (
=[[) *
new[[+ .

LinkedList[[/ 9
<[[9 :
float[[: ?
>[[? @
([[@ A
)[[A B
;[[B C
dataLinkedList\\ 
.\\ 
AddLast\\ 
(\\ 
data\\ #
)\\# $
;\\$ %
dataLinkedList]] 
.]] 
AddLast]] 
(]] 
data]] #
)]]# $
;]]$ %
dataLinkedList^^ 
.^^ 
AddLast^^ 
(^^ 
data^^ #
)^^# $
;^^$ %J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_73b__ F
.__F G
BadSink__G N
(__N O
dataLinkedList__O ]
)___ `
;__` a
}`` 
publiccc 

overridecc 
voidcc 
Goodcc 
(cc 
)cc 
{dd 
GoodG2Bee 
(ee 
)ee 
;ee 
}ff 
privateii 
staticii 
voidii 
GoodG2Bii 
(ii  
)ii  !
{jj 
floatkk 
datakk 
;kk 
datamm 
=mm 
$nummm 
;mm 

LinkedListnn 
<nn 
floatnn 
>nn 
dataLinkedListnn (
=nn) *
newnn+ .

LinkedListnn/ 9
<nn9 :
floatnn: ?
>nn? @
(nn@ A
)nnA B
;nnB C
dataLinkedListoo 
.oo 
AddLastoo 
(oo 
dataoo #
)oo# $
;oo$ %
dataLinkedListpp 
.pp 
AddLastpp 
(pp 
datapp #
)pp# $
;pp$ %
dataLinkedListqq 
.qq 
AddLastqq 
(qq 
dataqq #
)qq# $
;qq$ %J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_73brr F
.rrF G
GoodG2BSinkrrG R
(rrR S
dataLinkedListrrS a
)rrc d
;rrd e
}ss 
}uu 
}vv Î
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_73b D
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
float* /
>/ 0
dataLinkedList1 ?
)@ A
{ 
float 
data 
= 
dataLinkedList #
.# $
Last$ (
.( )
Value) .
;. /
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
float&&. 3
>&&3 4
dataLinkedList&&5 C
)&&D E
{'' 
float(( 
data(( 
=(( 
dataLinkedList(( #
.((# $
Last(($ (
.((( )
Value(() .
;((. /
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
long++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 Ñ4
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_74a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	

DictionaryZZ 
<ZZ 
intZZ 
,ZZ 
floatZZ 
>ZZ 
dataDictionaryZZ ,
=ZZ- .
newZZ/ 2

DictionaryZZ3 =
<ZZ= >
intZZ> A
,ZZA B
floatZZB G
>ZZG H
(ZZH I
)ZZI J
;ZZJ K
dataDictionary[[ 
.[[ 
Add[[ 
([[ 
$num[[ 
,[[ 
data[[ "
)[[" #
;[[# $
dataDictionary\\ 
.\\ 
Add\\ 
(\\ 
$num\\ 
,\\ 
data\\ "
)\\" #
;\\# $
dataDictionary]] 
.]] 
Add]] 
(]] 
$num]] 
,]] 
data]] "
)]]" #
;]]# $J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_74b^^ F
.^^F G
BadSink^^G N
(^^N O
dataDictionary^^O ]
)^^_ `
;^^` a
}__ 
publicbb 

overridebb 
voidbb 
Goodbb 
(bb 
)bb 
{cc 
GoodG2Bdd 
(dd 
)dd 
;dd 
}ee 
privatehh 
statichh 
voidhh 
GoodG2Bhh 
(hh  
)hh  !
{ii 
floatjj 
datajj 
;jj 
datall 
=ll 
$numll 
;ll 

Dictionarymm 
<mm 
intmm 
,mm 
floatmm 
>mm 
dataDictionarymm ,
=mm- .
newmm/ 2

Dictionarymm3 =
<mm= >
intmm> A
,mmA B
floatmmB G
>mmG H
(mmH I
)mmI J
;mmJ K
dataDictionarynn 
.nn 
Addnn 
(nn 
$numnn 
,nn 
datann "
)nn" #
;nn# $
dataDictionaryoo 
.oo 
Addoo 
(oo 
$numoo 
,oo 
dataoo "
)oo" #
;oo# $
dataDictionarypp 
.pp 
Addpp 
(pp 
$numpp 
,pp 
datapp "
)pp" #
;pp# $J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_74bqq F
.qqF G
GoodG2BSinkqqG R
(qqR S
dataDictionaryqqS a
)qqc d
;qqd e
}rr 
}tt 
}uu Ö
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_74b D
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
float. 3
>3 4
dataDictionary5 C
)D E
{ 
float 
data 
= 
dataDictionary #
[# $
$num$ %
]% &
;& '
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
float&&2 7
>&&7 8
dataDictionary&&9 G
)&&H I
{'' 
float(( 
data(( 
=(( 
dataDictionary(( #
[((# $
$num(($ %
]((% &
;((& '
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
long++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 é<
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_75a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float   
data   
;   
data!! 
=!! 
float!! 
.!! 
MinValue!! 
;!! 
{## 	
	TcpClient$$ 
tcpConn$$ 
=$$ 
null$$  $
;$$$ %
StreamReader%% 
sr%% 
=%% 
null%% "
;%%" #
try&& 
{'' 
tcpConn)) 
=)) 
new)) 
	TcpClient)) '
())' (
$str))( :
,)): ;
$num))< A
)))A B
;))B C
sr++ 
=++ 
new++ 
StreamReader++ %
(++% &
tcpConn++& -
.++- .
	GetStream++. 7
(++7 8
)++8 9
)++9 :
;++: ;
string-- 
stringNumber-- #
=--$ %
sr--& (
.--( )
ReadLine--) 1
(--1 2
)--2 3
;--3 4
if.. 
(.. 
stringNumber..  
!=..! #
null..$ (
)..( )
{// 
try00 
{11 
data22 
=22 
float22 $
.22$ %
Parse22% *
(22* +
stringNumber22+ 7
.227 8
Trim228 <
(22< =
)22= >
)22> ?
;22? @
}33 
catch44 
(44 
FormatException44 )
exceptNumberFormat44* <
)44< =
{55 
IO66 
.66 
Logger66 !
.66! "
Log66" %
(66% &
NLog66& *
.66* +
LogLevel66+ 3
.663 4
Warn664 8
,668 9
exceptNumberFormat66: L
,66L M
$str	66N Ä
)
66Ä Å
;
66Å Ç
}77 
}88 
}99 
catch:: 
(:: 
IOException:: 
exceptIO:: '
)::' (
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< 
(<< 
NLog<< "
.<<" #
LogLevel<<# +
.<<+ ,
Warn<<, 0
,<<0 1
exceptIO<<2 :
,<<: ;
$str<<< W
)<<W X
;<<X Y
}== 
finally>> 
{?? 
tryAA 
{BB 
ifCC 
(CC 
srCC 
!=CC 
nullCC "
)CC" #
{DD 
srEE 
.EE 
CloseEE  
(EE  !
)EE! "
;EE" #
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH "
exceptIOHH# +
)HH+ ,
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ !
(JJ! "
NLogJJ" &
.JJ& '
LogLevelJJ' /
.JJ/ 0
WarnJJ0 4
,JJ4 5
exceptIOJJ6 >
,JJ> ?
$strJJ@ a
)JJa b
;JJb c
}KK 
tryNN 
{OO 
ifPP 
(PP 
tcpConnPP 
!=PP  "
nullPP# '
)PP' (
{QQ 
tcpConnRR 
.RR  
CloseRR  %
(RR% &
)RR& '
;RR' (
}SS 
}TT 
catchUU 
(UU 
IOExceptionUU "
exceptIOUU# +
)UU+ ,
{VV 
IOWW 
.WW 
LoggerWW 
.WW 
LogWW !
(WW! "
NLogWW" &
.WW& '
LogLevelWW' /
.WW/ 0
WarnWW0 4
,WW4 5
exceptIOWW6 >
,WW> ?
$strWW@ V
)WWV W
;WWW X
}XX 
}YY 
}ZZ 	
byte\\ 
[\\ 
]\\ 
dataSerialized\\ 
=\\ 
null\\  $
;\\$ %
try]] 
{^^ 	
BinaryFormatter__ 
bf__ 
=__  
new__! $
BinaryFormatter__% 4
(__4 5
)__5 6
;__6 7
using`` 
(`` 
var`` 
ms`` 
=`` 
new`` 
MemoryStream``  ,
(``, -
)``- .
)``. /
{aa 
bfbb 
.bb 
	Serializebb 
(bb 
msbb 
,bb  
databb! %
)bb% &
;bb& '
dataSerializedcc 
=cc  
mscc! #
.cc# $
ToArraycc$ +
(cc+ ,
)cc, -
;cc- .
}dd J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_75bee J
.eeJ K
BadSinkeeK R
(eeR S
dataSerializedeeS a
)eec d
;eed e
}ff 	
catchgg 
(gg "
SerializationExceptiongg %
exceptSerializegg& 5
)gg5 6
{hh 	
IOii 
.ii 
Loggerii 
.ii 
Logii 
(ii 
NLogii 
.ii 
LogLevelii '
.ii' (
Warnii( ,
,ii, -
$strii. X
,iiX Y
exceptSerializeiiZ i
)iii j
;iij k
}jj 	
}kk 
publicnn 

overridenn 
voidnn 
Goodnn 
(nn 
)nn 
{oo 
GoodG2Bpp 
(pp 
)pp 
;pp 
}qq 
privatett 
statictt 
voidtt 
GoodG2Btt 
(tt  
)tt  !
{uu 
floatvv 
datavv 
;vv 
dataxx 
=xx 
$numxx 
;xx 
bytezz 
[zz 
]zz 
dataSerializedzz 
=zz 
nullzz  $
;zz$ %
try{{ 
{|| 	
BinaryFormatter}} 
bf}} 
=}}  
new}}! $
BinaryFormatter}}% 4
(}}4 5
)}}5 6
;}}6 7
using~~ 
(~~ 
var~~ 
ms~~ 
=~~ 
new~~ 
MemoryStream~~  ,
(~~, -
)~~- .
)~~. /
{ 
bf
ÄÄ 
.
ÄÄ 
	Serialize
ÄÄ 
(
ÄÄ 
ms
ÄÄ 
,
ÄÄ  
data
ÄÄ! %
)
ÄÄ% &
;
ÄÄ& '
dataSerialized
ÅÅ 
=
ÅÅ  
ms
ÅÅ! #
.
ÅÅ# $
ToArray
ÅÅ$ +
(
ÅÅ+ ,
)
ÅÅ, -
;
ÅÅ- .
}
ÇÇ L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_75b
ÉÉ J
.
ÉÉJ K
GoodG2BSink
ÉÉK V
(
ÉÉV W
dataSerialized
ÉÉW e
)
ÉÉg h
;
ÉÉh i
}
ÑÑ 	
catch
ÖÖ 
(
ÖÖ $
SerializationException
ÖÖ %
exceptSerialize
ÖÖ& 5
)
ÖÖ5 6
{
ÜÜ 	
IO
áá 
.
áá 
Logger
áá 
.
áá 
Log
áá 
(
áá 
NLog
áá 
.
áá 
LogLevel
áá '
.
áá' (
Warn
áá( ,
,
áá, -
$str
áá. X
,
ááX Y
exceptSerialize
ááZ i
)
áái j
;
ááj k
}
àà 	
}
ââ 
}ãã 
}åå Î!
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_75b D
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
float   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
float&& 
)&& 
binForm&& %
.&&% &
Deserialize&&& 1
(&&1 2
	memStream&&2 ;
)&&; <
;&&< =
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
long** "
)**" #
data**# '
)**' (
;**( )
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
float:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
float@@ 
)@@ 
binForm@@ %
.@@% &
Deserialize@@& 1
(@@1 2
	memStream@@2 ;
)@@; <
;@@< =
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
longDD "
)DD" #
dataDD# '
)DD' (
;DD( )
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN Í*
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_81a D
:E F
AbstractTestCaseG W
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
float   
.   
MinValue   
;   
{"" 	
	TcpClient## 
tcpConn## 
=## 
null##  $
;##$ %
StreamReader$$ 
sr$$ 
=$$ 
null$$ "
;$$" #
try%% 
{&& 
tcpConn(( 
=(( 
new(( 
	TcpClient(( '
(((' (
$str((( :
,((: ;
$num((< A
)((A B
;((B C
sr** 
=** 
new** 
StreamReader** %
(**% &
tcpConn**& -
.**- .
	GetStream**. 7
(**7 8
)**8 9
)**9 :
;**: ;
string,, 
stringNumber,, #
=,,$ %
sr,,& (
.,,( )
ReadLine,,) 1
(,,1 2
),,2 3
;,,3 4
if-- 
(-- 
stringNumber--  
!=--! #
null--$ (
)--( )
{.. 
try// 
{00 
data11 
=11 
float11 $
.11$ %
Parse11% *
(11* +
stringNumber11+ 7
.117 8
Trim118 <
(11< =
)11= >
)11> ?
;11? @
}22 
catch33 
(33 
FormatException33 )
exceptNumberFormat33* <
)33< =
{44 
IO55 
.55 
Logger55 !
.55! "
Log55" %
(55% &
NLog55& *
.55* +
LogLevel55+ 3
.553 4
Warn554 8
,558 9
exceptNumberFormat55: L
,55L M
$str	55N Ä
)
55Ä Å
;
55Å Ç
}66 
}77 
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
finally== 
{>> 
try@@ 
{AA 
ifBB 
(BB 
srBB 
!=BB 
nullBB "
)BB" #
{CC 
srDD 
.DD 
CloseDD  
(DD  !
)DD! "
;DD" #
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ a
)IIa b
;IIb c
}JJ 
tryMM 
{NN 
ifOO 
(OO 
tcpConnOO 
!=OO  "
nullOO# '
)OO' (
{PP 
tcpConnQQ 
.QQ  
CloseQQ  %
(QQ% &
)QQ& '
;QQ' (
}RR 
}SS 
catchTT 
(TT 
IOExceptionTT "
exceptIOTT# +
)TT+ ,
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV !
(VV! "
NLogVV" &
.VV& '
LogLevelVV' /
.VV/ 0
WarnVV0 4
,VV4 5
exceptIOVV6 >
,VV> ?
$strVV@ V
)VVV W
;VVW X
}WW 
}XX 
}YY 	N
BCWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_81_baseZZ J

baseObjectZZK U
=ZZV W
newZZX [N
ACWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_81_bad	ZZ\ ù
(
ZZù û
)
ZZû ü
;
ZZü †

baseObject[[ 
.[[ 
Action[[ 
([[ 
data[[ 
)[[  
;[[  !
}\\ 
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2Baa 
(aa 
)aa 
;aa 
}bb 
privateee 
voidee 
GoodG2Bee 
(ee 
)ee 
{ff 
floatgg 
datagg 
;gg 
dataii 
=ii 
$numii 
;ii N
BCWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_81_basejj J

baseObjectjjK U
=jjV W
newjjX [R
ECWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_81_goodG2B	jj\ °
(
jj° ¢
)
jj¢ £
;
jj£ §

baseObjectkk 
.kk 
Actionkk 
(kk 
datakk 
)kk  
;kk  !
}ll 
}nn 
}oo ó
ƒC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class M
ACWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_81_bad G
:H IO
BCWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_81_base	J å
{ 
public 

override 
void 
Action 
(  
float  %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" ˝
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 N
BCWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_81_base Q
{ 
public 

abstract 
void 
Action 
(  
float  %
data& *
)+ ,
;, -
} 
} ü
»C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class Q
ECWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_81_goodG2B K
:L MO
BCWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_81_base	N ê
{ 
public 

override 
void 
Action 
(  
float  %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
long 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" Ö´

äC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\Program.cs
	namespace		 	
	testcases		
 
.		 +
CWE197_Numeric_Truncation_Error		 3
{

 
class 
Program 
{ 
static 
void	 
Main 
( 
string 
[ 
] 
args  
)  !
{" #
if 
( 
args 

.
 
Any 
( 
) 
) 
{ 
if 
( 
args 
[ 
$num 
] 
. 
Equals 
( 
$str 
, 
StringComparison ,
., -
OrdinalIgnoreCase- >
)> ?
||@ B
args 
[ 
$num 
] 
. 
Equals !
(! "
$str" *
,* +
StringComparison, <
.< =
OrdinalIgnoreCase= N
)N O
)O P
{Q R
Console 
. 
	WriteLine 
( 
$str R
+S T
$str b
)b c
;c d
System 
. 
Environment 
. 
Exit 
( 
$num 
) 
;  
} 
foreach"" 
("" 
string"" 
	className"" 
in""  
args""! %
)""% &
{""' (
try$$ 
{$$	 

Type** 

myClass** 
=** 
Type** 
.** 
GetType** !
(**! "
	className**" +
)**+ ,
;**, -
object++ 
myObject++ 
=++ 
	Activator++ !
.++! "
CreateInstance++" 0
(++0 1
myClass++1 8
)++8 9
;++9 :
myClass,, 
.,, 
InvokeMember,, 
(,, 
$str,, $
,,,$ %
BindingFlags-- 
.-- 
InvokeMethod--  
|--! "
BindingFlags--# /
.--/ 0
Instance--0 8
|--9 :
BindingFlags--; G
.--G H
Public--H N
,--N O
null.. 
,.. 
myObject// 
,// 
new00 

object00 
[00 
]00 
{00 
	className00 
}00  !
)00! "
;00" #
}22 
catch22 
(22 
	Exception22 
ex22 
)22 
{22 
Console44 
.44 
	WriteLine44 
(44 
$str44 7
+448 9
	className44: C
)44C D
;44D E
Console55 
.55 
	WriteLine55 
(55 
ex55 
.55 

StackTrace55 %
)55% &
;55& '
}77 
Console99 
.99 
	WriteLine99 
(99 
$str99 
)99 
;99 
};; 
}== 
else== 	
{==
 
RunTestCWE1CC 
(CC 
)CC 
;CC 
RunTestCWE2DD 
(DD 
)DD 
;DD 
RunTestCWE3EE 
(EE 
)EE 
;EE 
RunTestCWE4FF 
(FF 
)FF 
;FF 
RunTestCWE5GG 
(GG 
)GG 
;GG 
RunTestCWE6HH 
(HH 
)HH 
;HH 
RunTestCWE7II 
(II 
)II 
;II 
RunTestCWE8JJ 
(JJ 
)JJ 
;JJ 
RunTestCWE9KK 
(KK 
)KK 
;KK 
}LL 
}MM 
privateOO 
staticOO	 
voidOO 
RunTestCWE1OO  
(OO  !
)OO! "
{OO# $
(QQ 
newQQ H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_01QQ D
(QQD E
)QQE F
)QQF G
.QQG H
RunTestQQH O
(QQO P
$str	QQP é
)
QQé è
;
QQè ê
(RR 
newRR H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_02RR D
(RRD E
)RRE F
)RRF G
.RRG H
RunTestRRH O
(RRO P
$str	RRP é
)
RRé è
;
RRè ê
(SS 
newSS H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_03SS D
(SSD E
)SSE F
)SSF G
.SSG H
RunTestSSH O
(SSO P
$str	SSP é
)
SSé è
;
SSè ê
(TT 
newTT H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_04TT D
(TTD E
)TTE F
)TTF G
.TTG H
RunTestTTH O
(TTO P
$str	TTP é
)
TTé è
;
TTè ê
(UU 
newUU H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_05UU D
(UUD E
)UUE F
)UUF G
.UUG H
RunTestUUH O
(UUO P
$str	UUP é
)
UUé è
;
UUè ê
(VV 
newVV H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_06VV D
(VVD E
)VVE F
)VVF G
.VVG H
RunTestVVH O
(VVO P
$str	VVP é
)
VVé è
;
VVè ê
(WW 
newWW H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_07WW D
(WWD E
)WWE F
)WWF G
.WWG H
RunTestWWH O
(WWO P
$str	WWP é
)
WWé è
;
WWè ê
(XX 
newXX H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_08XX D
(XXD E
)XXE F
)XXF G
.XXG H
RunTestXXH O
(XXO P
$str	XXP é
)
XXé è
;
XXè ê
(YY 
newYY H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_09YY D
(YYD E
)YYE F
)YYF G
.YYG H
RunTestYYH O
(YYO P
$str	YYP é
)
YYé è
;
YYè ê
(ZZ 
newZZ H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_10ZZ D
(ZZD E
)ZZE F
)ZZF G
.ZZG H
RunTestZZH O
(ZZO P
$str	ZZP é
)
ZZé è
;
ZZè ê
([[ 
new[[ H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_11[[ D
([[D E
)[[E F
)[[F G
.[[G H
RunTest[[H O
([[O P
$str	[[P é
)
[[é è
;
[[è ê
(\\ 
new\\ H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_12\\ D
(\\D E
)\\E F
)\\F G
.\\G H
RunTest\\H O
(\\O P
$str	\\P é
)
\\é è
;
\\è ê
(]] 
new]] H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_13]] D
(]]D E
)]]E F
)]]F G
.]]G H
RunTest]]H O
(]]O P
$str	]]P é
)
]]é è
;
]]è ê
(^^ 
new^^ H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_14^^ D
(^^D E
)^^E F
)^^F G
.^^G H
RunTest^^H O
(^^O P
$str	^^P é
)
^^é è
;
^^è ê
(__ 
new__ H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_15__ D
(__D E
)__E F
)__F G
.__G H
RunTest__H O
(__O P
$str	__P é
)
__é è
;
__è ê
(`` 
new`` H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_16`` D
(``D E
)``E F
)``F G
.``G H
RunTest``H O
(``O P
$str	``P é
)
``é è
;
``è ê
(aa 
newaa H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_17aa D
(aaD E
)aaE F
)aaF G
.aaG H
RunTestaaH O
(aaO P
$str	aaP é
)
aaé è
;
aaè ê
(bb 
newbb H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_21bb D
(bbD E
)bbE F
)bbF G
.bbG H
RunTestbbH O
(bbO P
$str	bbP é
)
bbé è
;
bbè ê
(cc 
newcc I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_22acc E
(ccE F
)ccF G
)ccG H
.ccH I
RunTestccI P
(ccP Q
$str	ccQ ê
)
ccê ë
;
ccë í
(dd 
newdd H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_31dd D
(ddD E
)ddE F
)ddF G
.ddG H
RunTestddH O
(ddO P
$str	ddP é
)
ddé è
;
ddè ê
(ee 
newee H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_41ee D
(eeD E
)eeE F
)eeF G
.eeG H
RunTesteeH O
(eeO P
$str	eeP é
)
eeé è
;
eeè ê
(ff 
newff H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_42ff D
(ffD E
)ffE F
)ffF G
.ffG H
RunTestffH O
(ffO P
$str	ffP é
)
ffé è
;
ffè ê
(gg 
newgg H
<CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_45gg D
(ggD E
)ggE F
)ggF G
.ggG H
RunTestggH O
(ggO P
$str	ggP é
)
ggé è
;
ggè ê
(hh 
newhh I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_51ahh E
(hhE F
)hhF G
)hhG H
.hhH I
RunTesthhI P
(hhP Q
$str	hhQ ê
)
hhê ë
;
hhë í
(ii 
newii I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_52aii E
(iiE F
)iiF G
)iiG H
.iiH I
RunTestiiI P
(iiP Q
$str	iiQ ê
)
iiê ë
;
iië í
(jj 
newjj I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_53ajj E
(jjE F
)jjF G
)jjG H
.jjH I
RunTestjjI P
(jjP Q
$str	jjQ ê
)
jjê ë
;
jjë í
(kk 
newkk I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_54akk E
(kkE F
)kkF G
)kkG H
.kkH I
RunTestkkI P
(kkP Q
$str	kkQ ê
)
kkê ë
;
kkë í
(ll 
newll I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_61all E
(llE F
)llF G
)llG H
.llH I
RunTestllI P
(llP Q
$str	llQ ê
)
llê ë
;
llë í
(mm 
newmm I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_66amm E
(mmE F
)mmF G
)mmG H
.mmH I
RunTestmmI P
(mmP Q
$str	mmQ ê
)
mmê ë
;
mmë í
(nn 
newnn I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_67ann E
(nnE F
)nnF G
)nnG H
.nnH I
RunTestnnI P
(nnP Q
$str	nnQ ê
)
nnê ë
;
nnë í
(oo 
newoo I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_68aoo E
(ooE F
)ooF G
)ooG H
.ooH I
RunTestooI P
(ooP Q
$str	ooQ ê
)
ooê ë
;
ooë í
(pp 
newpp I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_71app E
(ppE F
)ppF G
)ppG H
.ppH I
RunTestppI P
(ppP Q
$str	ppQ ê
)
ppê ë
;
ppë í
(qq 
newqq I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_72aqq E
(qqE F
)qqF G
)qqG H
.qqH I
RunTestqqI P
(qqP Q
$str	qqQ ê
)
qqê ë
;
qqë í
(rr 
newrr I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_73arr E
(rrE F
)rrF G
)rrG H
.rrH I
RunTestrrI P
(rrP Q
$str	rrQ ê
)
rrê ë
;
rrë í
(ss 
newss I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_74ass E
(ssE F
)ssF G
)ssG H
.ssH I
RunTestssI P
(ssP Q
$str	ssQ ê
)
ssê ë
;
ssë í
(tt 
newtt I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_75att E
(ttE F
)ttF G
)ttG H
.ttH I
RunTestttI P
(ttP Q
$str	ttQ ê
)
ttê ë
;
ttë í
(uu 
newuu I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_int_81auu E
(uuE F
)uuF G
)uuG H
.uuH I
RunTestuuI P
(uuP Q
$str	uuQ ê
)
uuê ë
;
uuë í
(vv 
newvv I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_01vv E
(vvE F
)vvF G
)vvG H
.vvH I
RunTestvvI P
(vvP Q
$str	vvQ ê
)
vvê ë
;
vvë í
(ww 
newww I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_02ww E
(wwE F
)wwF G
)wwG H
.wwH I
RunTestwwI P
(wwP Q
$str	wwQ ê
)
wwê ë
;
wwë í
(xx 
newxx I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_03xx E
(xxE F
)xxF G
)xxG H
.xxH I
RunTestxxI P
(xxP Q
$str	xxQ ê
)
xxê ë
;
xxë í
(yy 
newyy I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_04yy E
(yyE F
)yyF G
)yyG H
.yyH I
RunTestyyI P
(yyP Q
$str	yyQ ê
)
yyê ë
;
yyë í
(zz 
newzz I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_05zz E
(zzE F
)zzF G
)zzG H
.zzH I
RunTestzzI P
(zzP Q
$str	zzQ ê
)
zzê ë
;
zzë í
({{ 
new{{ I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_06{{ E
({{E F
){{F G
){{G H
.{{H I
RunTest{{I P
({{P Q
$str	{{Q ê
)
{{ê ë
;
{{ë í
(|| 
new|| I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_07|| E
(||E F
)||F G
)||G H
.||H I
RunTest||I P
(||P Q
$str	||Q ê
)
||ê ë
;
||ë í
(}} 
new}} I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_08}} E
(}}E F
)}}F G
)}}G H
.}}H I
RunTest}}I P
(}}P Q
$str	}}Q ê
)
}}ê ë
;
}}ë í
(~~ 
new~~ I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_09~~ E
(~~E F
)~~F G
)~~G H
.~~H I
RunTest~~I P
(~~P Q
$str	~~Q ê
)
~~ê ë
;
~~ë í
( 
new I
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_10 E
(E F
)F G
)G H
.H I
RunTestI P
(P Q
$str	Q ê
)
ê ë
;
ë í
(
ÄÄ 
new
ÄÄ K
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_11
ÄÄ E
(
ÄÄE F
)
ÄÄF G
)
ÄÄG H
.
ÄÄH I
RunTest
ÄÄI P
(
ÄÄP Q
$strÄÄQ ê
)ÄÄê ë
;ÄÄë í
(
ÅÅ 
new
ÅÅ K
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_12
ÅÅ E
(
ÅÅE F
)
ÅÅF G
)
ÅÅG H
.
ÅÅH I
RunTest
ÅÅI P
(
ÅÅP Q
$strÅÅQ ê
)ÅÅê ë
;ÅÅë í
(
ÇÇ 
new
ÇÇ K
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_13
ÇÇ E
(
ÇÇE F
)
ÇÇF G
)
ÇÇG H
.
ÇÇH I
RunTest
ÇÇI P
(
ÇÇP Q
$strÇÇQ ê
)ÇÇê ë
;ÇÇë í
(
ÉÉ 
new
ÉÉ K
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_14
ÉÉ E
(
ÉÉE F
)
ÉÉF G
)
ÉÉG H
.
ÉÉH I
RunTest
ÉÉI P
(
ÉÉP Q
$strÉÉQ ê
)ÉÉê ë
;ÉÉë í
(
ÑÑ 
new
ÑÑ K
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_15
ÑÑ E
(
ÑÑE F
)
ÑÑF G
)
ÑÑG H
.
ÑÑH I
RunTest
ÑÑI P
(
ÑÑP Q
$strÑÑQ ê
)ÑÑê ë
;ÑÑë í
(
ÖÖ 
new
ÖÖ K
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_16
ÖÖ E
(
ÖÖE F
)
ÖÖF G
)
ÖÖG H
.
ÖÖH I
RunTest
ÖÖI P
(
ÖÖP Q
$strÖÖQ ê
)ÖÖê ë
;ÖÖë í
(
ÜÜ 
new
ÜÜ K
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_17
ÜÜ E
(
ÜÜE F
)
ÜÜF G
)
ÜÜG H
.
ÜÜH I
RunTest
ÜÜI P
(
ÜÜP Q
$strÜÜQ ê
)ÜÜê ë
;ÜÜë í
(
áá 
new
áá K
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_21
áá E
(
ááE F
)
ááF G
)
ááG H
.
ááH I
RunTest
ááI P
(
ááP Q
$strááQ ê
)ááê ë
;ááë í
(
àà 
new
àà L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_22a
àà F
(
ààF G
)
ààG H
)
ààH I
.
ààI J
RunTest
ààJ Q
(
ààQ R
$strààR í
)ààí ì
;ààì î
(
ââ 
new
ââ K
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_31
ââ E
(
ââE F
)
ââF G
)
ââG H
.
ââH I
RunTest
ââI P
(
ââP Q
$strââQ ê
)ââê ë
;ââë í
(
ää 
new
ää K
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_41
ää E
(
ääE F
)
ääF G
)
ääG H
.
ääH I
RunTest
ääI P
(
ääP Q
$strääQ ê
)ääê ë
;ääë í
(
ãã 
new
ãã K
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_42
ãã E
(
ããE F
)
ããF G
)
ããG H
.
ããH I
RunTest
ããI P
(
ããP Q
$strããQ ê
)ããê ë
;ããë í
(
åå 
new
åå K
=CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_45
åå E
(
ååE F
)
ååF G
)
ååG H
.
ååH I
RunTest
ååI P
(
ååP Q
$strååQ ê
)ååê ë
;ååë í
(
çç 
new
çç L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_51a
çç F
(
ççF G
)
ççG H
)
ççH I
.
ççI J
RunTest
ççJ Q
(
ççQ R
$strççR í
)ççí ì
;ççì î
(
éé 
new
éé L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_52a
éé F
(
ééF G
)
ééG H
)
ééH I
.
ééI J
RunTest
ééJ Q
(
ééQ R
$strééR í
)ééí ì
;ééì î
(
èè 
new
èè L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_53a
èè F
(
èèF G
)
èèG H
)
èèH I
.
èèI J
RunTest
èèJ Q
(
èèQ R
$strèèR í
)èèí ì
;èèì î
(
êê 
new
êê L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_54a
êê F
(
êêF G
)
êêG H
)
êêH I
.
êêI J
RunTest
êêJ Q
(
êêQ R
$strêêR í
)êêí ì
;êêì î
(
ëë 
new
ëë L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_61a
ëë F
(
ëëF G
)
ëëG H
)
ëëH I
.
ëëI J
RunTest
ëëJ Q
(
ëëQ R
$strëëR í
)ëëí ì
;ëëì î
(
íí 
new
íí L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_66a
íí F
(
ííF G
)
ííG H
)
ííH I
.
ííI J
RunTest
ííJ Q
(
ííQ R
$strííR í
)ííí ì
;ííì î
(
ìì 
new
ìì L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_67a
ìì F
(
ììF G
)
ììG H
)
ììH I
.
ììI J
RunTest
ììJ Q
(
ììQ R
$strììR í
)ììí ì
;ììì î
(
îî 
new
îî L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_68a
îî F
(
îîF G
)
îîG H
)
îîH I
.
îîI J
RunTest
îîJ Q
(
îîQ R
$strîîR í
)îîí ì
;îîì î
(
ïï 
new
ïï L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_71a
ïï F
(
ïïF G
)
ïïG H
)
ïïH I
.
ïïI J
RunTest
ïïJ Q
(
ïïQ R
$strïïR í
)ïïí ì
;ïïì î
(
ññ 
new
ññ L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_72a
ññ F
(
ññF G
)
ññG H
)
ññH I
.
ññI J
RunTest
ññJ Q
(
ññQ R
$strññR í
)ññí ì
;ññì î
(
óó 
new
óó L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_73a
óó F
(
óóF G
)
óóG H
)
óóH I
.
óóI J
RunTest
óóJ Q
(
óóQ R
$stróóR í
)óóí ì
;óóì î
(
òò 
new
òò L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_74a
òò F
(
òòF G
)
òòG H
)
òòH I
.
òòI J
RunTest
òòJ Q
(
òòQ R
$stròòR í
)òòí ì
;òòì î
(
ôô 
new
ôô L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_75a
ôô F
(
ôôF G
)
ôôG H
)
ôôH I
.
ôôI J
RunTest
ôôJ Q
(
ôôQ R
$strôôR í
)ôôí ì
;ôôì î
(
öö 
new
öö L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_long_81a
öö F
(
ööF G
)
ööG H
)
ööH I
.
ööI J
RunTest
ööJ Q
(
ööQ R
$strööR í
)ööí ì
;ööì î
(
õõ 
new
õõ L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_01
õõ F
(
õõF G
)
õõG H
)
õõH I
.
õõI J
RunTest
õõJ Q
(
õõQ R
$strõõR í
)õõí ì
;õõì î
(
úú 
new
úú L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_02
úú F
(
úúF G
)
úúG H
)
úúH I
.
úúI J
RunTest
úúJ Q
(
úúQ R
$strúúR í
)úúí ì
;úúì î
(
ùù 
new
ùù L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_03
ùù F
(
ùùF G
)
ùùG H
)
ùùH I
.
ùùI J
RunTest
ùùJ Q
(
ùùQ R
$strùùR í
)ùùí ì
;ùùì î
(
ûû 
new
ûû L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_04
ûû F
(
ûûF G
)
ûûG H
)
ûûH I
.
ûûI J
RunTest
ûûJ Q
(
ûûQ R
$strûûR í
)ûûí ì
;ûûì î
(
üü 
new
üü L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_05
üü F
(
üüF G
)
üüG H
)
üüH I
.
üüI J
RunTest
üüJ Q
(
üüQ R
$strüüR í
)üüí ì
;üüì î
(
†† 
new
†† L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_06
†† F
(
††F G
)
††G H
)
††H I
.
††I J
RunTest
††J Q
(
††Q R
$str††R í
)††í ì
;††ì î
(
°° 
new
°° L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_07
°° F
(
°°F G
)
°°G H
)
°°H I
.
°°I J
RunTest
°°J Q
(
°°Q R
$str°°R í
)°°í ì
;°°ì î
(
¢¢ 
new
¢¢ L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_08
¢¢ F
(
¢¢F G
)
¢¢G H
)
¢¢H I
.
¢¢I J
RunTest
¢¢J Q
(
¢¢Q R
$str¢¢R í
)¢¢í ì
;¢¢ì î
(
££ 
new
££ L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_09
££ F
(
££F G
)
££G H
)
££H I
.
££I J
RunTest
££J Q
(
££Q R
$str££R í
)££í ì
;££ì î
(
§§ 
new
§§ L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_10
§§ F
(
§§F G
)
§§G H
)
§§H I
.
§§I J
RunTest
§§J Q
(
§§Q R
$str§§R í
)§§í ì
;§§ì î
(
•• 
new
•• L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_11
•• F
(
••F G
)
••G H
)
••H I
.
••I J
RunTest
••J Q
(
••Q R
$str••R í
)••í ì
;••ì î
(
¶¶ 
new
¶¶ L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_12
¶¶ F
(
¶¶F G
)
¶¶G H
)
¶¶H I
.
¶¶I J
RunTest
¶¶J Q
(
¶¶Q R
$str¶¶R í
)¶¶í ì
;¶¶ì î
(
ßß 
new
ßß L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_13
ßß F
(
ßßF G
)
ßßG H
)
ßßH I
.
ßßI J
RunTest
ßßJ Q
(
ßßQ R
$strßßR í
)ßßí ì
;ßßì î
(
®® 
new
®® L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_14
®® F
(
®®F G
)
®®G H
)
®®H I
.
®®I J
RunTest
®®J Q
(
®®Q R
$str®®R í
)®®í ì
;®®ì î
(
©© 
new
©© L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_15
©© F
(
©©F G
)
©©G H
)
©©H I
.
©©I J
RunTest
©©J Q
(
©©Q R
$str©©R í
)©©í ì
;©©ì î
(
™™ 
new
™™ L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_16
™™ F
(
™™F G
)
™™G H
)
™™H I
.
™™I J
RunTest
™™J Q
(
™™Q R
$str™™R í
)™™í ì
;™™ì î
(
´´ 
new
´´ L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_17
´´ F
(
´´F G
)
´´G H
)
´´H I
.
´´I J
RunTest
´´J Q
(
´´Q R
$str´´R í
)´´í ì
;´´ì î
(
¨¨ 
new
¨¨ L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_21
¨¨ F
(
¨¨F G
)
¨¨G H
)
¨¨H I
.
¨¨I J
RunTest
¨¨J Q
(
¨¨Q R
$str¨¨R í
)¨¨í ì
;¨¨ì î
(
≠≠ 
new
≠≠ M
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_22a
≠≠ G
(
≠≠G H
)
≠≠H I
)
≠≠I J
.
≠≠J K
RunTest
≠≠K R
(
≠≠R S
$str≠≠S î
)≠≠î ï
;≠≠ï ñ
(
ÆÆ 
new
ÆÆ L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_31
ÆÆ F
(
ÆÆF G
)
ÆÆG H
)
ÆÆH I
.
ÆÆI J
RunTest
ÆÆJ Q
(
ÆÆQ R
$strÆÆR í
)ÆÆí ì
;ÆÆì î
(
ØØ 
new
ØØ L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_41
ØØ F
(
ØØF G
)
ØØG H
)
ØØH I
.
ØØI J
RunTest
ØØJ Q
(
ØØQ R
$strØØR í
)ØØí ì
;ØØì î
(
∞∞ 
new
∞∞ L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_42
∞∞ F
(
∞∞F G
)
∞∞G H
)
∞∞H I
.
∞∞I J
RunTest
∞∞J Q
(
∞∞Q R
$str∞∞R í
)∞∞í ì
;∞∞ì î
(
±± 
new
±± L
>CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_45
±± F
(
±±F G
)
±±G H
)
±±H I
.
±±I J
RunTest
±±J Q
(
±±Q R
$str±±R í
)±±í ì
;±±ì î
(
≤≤ 
new
≤≤ M
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_51a
≤≤ G
(
≤≤G H
)
≤≤H I
)
≤≤I J
.
≤≤J K
RunTest
≤≤K R
(
≤≤R S
$str≤≤S î
)≤≤î ï
;≤≤ï ñ
(
≥≥ 
new
≥≥ M
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_52a
≥≥ G
(
≥≥G H
)
≥≥H I
)
≥≥I J
.
≥≥J K
RunTest
≥≥K R
(
≥≥R S
$str≥≥S î
)≥≥î ï
;≥≥ï ñ
(
¥¥ 
new
¥¥ M
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_53a
¥¥ G
(
¥¥G H
)
¥¥H I
)
¥¥I J
.
¥¥J K
RunTest
¥¥K R
(
¥¥R S
$str¥¥S î
)¥¥î ï
;¥¥ï ñ
(
µµ 
new
µµ M
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_54a
µµ G
(
µµG H
)
µµH I
)
µµI J
.
µµJ K
RunTest
µµK R
(
µµR S
$strµµS î
)µµî ï
;µµï ñ
(
∂∂ 
new
∂∂ M
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_61a
∂∂ G
(
∂∂G H
)
∂∂H I
)
∂∂I J
.
∂∂J K
RunTest
∂∂K R
(
∂∂R S
$str∂∂S î
)∂∂î ï
;∂∂ï ñ
(
∑∑ 
new
∑∑ M
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_66a
∑∑ G
(
∑∑G H
)
∑∑H I
)
∑∑I J
.
∑∑J K
RunTest
∑∑K R
(
∑∑R S
$str∑∑S î
)∑∑î ï
;∑∑ï ñ
(
∏∏ 
new
∏∏ M
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_67a
∏∏ G
(
∏∏G H
)
∏∏H I
)
∏∏I J
.
∏∏J K
RunTest
∏∏K R
(
∏∏R S
$str∏∏S î
)∏∏î ï
;∏∏ï ñ
(
ππ 
new
ππ M
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_68a
ππ G
(
ππG H
)
ππH I
)
ππI J
.
ππJ K
RunTest
ππK R
(
ππR S
$strππS î
)ππî ï
;ππï ñ
(
∫∫ 
new
∫∫ M
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_71a
∫∫ G
(
∫∫G H
)
∫∫H I
)
∫∫I J
.
∫∫J K
RunTest
∫∫K R
(
∫∫R S
$str∫∫S î
)∫∫î ï
;∫∫ï ñ
(
ªª 
new
ªª M
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_72a
ªª G
(
ªªG H
)
ªªH I
)
ªªI J
.
ªªJ K
RunTest
ªªK R
(
ªªR S
$strªªS î
)ªªî ï
;ªªï ñ
(
ºº 
new
ºº M
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_73a
ºº G
(
ººG H
)
ººH I
)
ººI J
.
ººJ K
RunTest
ººK R
(
ººR S
$strººS î
)ººî ï
;ººï ñ
(
ΩΩ 
new
ΩΩ M
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_74a
ΩΩ G
(
ΩΩG H
)
ΩΩH I
)
ΩΩI J
.
ΩΩJ K
RunTest
ΩΩK R
(
ΩΩR S
$strΩΩS î
)ΩΩî ï
;ΩΩï ñ
(
ææ 
new
ææ M
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_75a
ææ G
(
ææG H
)
ææH I
)
ææI J
.
ææJ K
RunTest
ææK R
(
ææR S
$strææS î
)ææî ï
;ææï ñ
(
øø 
new
øø M
?CWE197_Numeric_Truncation_Error__double_listen_tcp_to_short_81a
øø G
(
øøG H
)
øøH I
)
øøI J
.
øøJ K
RunTest
øøK R
(
øøR S
$strøøS î
)øøî ï
;øøï ñ
(
¿¿ 
new
¿¿ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_01
¿¿ D
(
¿¿D E
)
¿¿E F
)
¿¿F G
.
¿¿G H
RunTest
¿¿H O
(
¿¿O P
$str¿¿P é
)¿¿é è
;¿¿è ê
(
¡¡ 
new
¡¡ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_02
¡¡ D
(
¡¡D E
)
¡¡E F
)
¡¡F G
.
¡¡G H
RunTest
¡¡H O
(
¡¡O P
$str¡¡P é
)¡¡é è
;¡¡è ê
(
¬¬ 
new
¬¬ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_03
¬¬ D
(
¬¬D E
)
¬¬E F
)
¬¬F G
.
¬¬G H
RunTest
¬¬H O
(
¬¬O P
$str¬¬P é
)¬¬é è
;¬¬è ê
(
√√ 
new
√√ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_04
√√ D
(
√√D E
)
√√E F
)
√√F G
.
√√G H
RunTest
√√H O
(
√√O P
$str√√P é
)√√é è
;√√è ê
(
ƒƒ 
new
ƒƒ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_05
ƒƒ D
(
ƒƒD E
)
ƒƒE F
)
ƒƒF G
.
ƒƒG H
RunTest
ƒƒH O
(
ƒƒO P
$strƒƒP é
)ƒƒé è
;ƒƒè ê
(
≈≈ 
new
≈≈ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_06
≈≈ D
(
≈≈D E
)
≈≈E F
)
≈≈F G
.
≈≈G H
RunTest
≈≈H O
(
≈≈O P
$str≈≈P é
)≈≈é è
;≈≈è ê
(
∆∆ 
new
∆∆ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_07
∆∆ D
(
∆∆D E
)
∆∆E F
)
∆∆F G
.
∆∆G H
RunTest
∆∆H O
(
∆∆O P
$str∆∆P é
)∆∆é è
;∆∆è ê
(
«« 
new
«« J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_08
«« D
(
««D E
)
««E F
)
««F G
.
««G H
RunTest
««H O
(
««O P
$str««P é
)««é è
;««è ê
(
»» 
new
»» J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_09
»» D
(
»»D E
)
»»E F
)
»»F G
.
»»G H
RunTest
»»H O
(
»»O P
$str»»P é
)»»é è
;»»è ê
(
…… 
new
…… J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_10
…… D
(
……D E
)
……E F
)
……F G
.
……G H
RunTest
……H O
(
……O P
$str……P é
)……é è
;……è ê
(
   
new
   J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_11
   D
(
  D E
)
  E F
)
  F G
.
  G H
RunTest
  H O
(
  O P
$str  P é
)  é è
;  è ê
(
ÀÀ 
new
ÀÀ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_12
ÀÀ D
(
ÀÀD E
)
ÀÀE F
)
ÀÀF G
.
ÀÀG H
RunTest
ÀÀH O
(
ÀÀO P
$strÀÀP é
)ÀÀé è
;ÀÀè ê
(
ÃÃ 
new
ÃÃ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_13
ÃÃ D
(
ÃÃD E
)
ÃÃE F
)
ÃÃF G
.
ÃÃG H
RunTest
ÃÃH O
(
ÃÃO P
$strÃÃP é
)ÃÃé è
;ÃÃè ê
(
ÕÕ 
new
ÕÕ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_14
ÕÕ D
(
ÕÕD E
)
ÕÕE F
)
ÕÕF G
.
ÕÕG H
RunTest
ÕÕH O
(
ÕÕO P
$strÕÕP é
)ÕÕé è
;ÕÕè ê
(
ŒŒ 
new
ŒŒ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_15
ŒŒ D
(
ŒŒD E
)
ŒŒE F
)
ŒŒF G
.
ŒŒG H
RunTest
ŒŒH O
(
ŒŒO P
$strŒŒP é
)ŒŒé è
;ŒŒè ê
(
œœ 
new
œœ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_16
œœ D
(
œœD E
)
œœE F
)
œœF G
.
œœG H
RunTest
œœH O
(
œœO P
$strœœP é
)œœé è
;œœè ê
(
–– 
new
–– J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_17
–– D
(
––D E
)
––E F
)
––F G
.
––G H
RunTest
––H O
(
––O P
$str––P é
)––é è
;––è ê
(
—— 
new
—— J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_21
—— D
(
——D E
)
——E F
)
——F G
.
——G H
RunTest
——H O
(
——O P
$str——P é
)——é è
;——è ê
(
““ 
new
““ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_22a
““ E
(
““E F
)
““F G
)
““G H
.
““H I
RunTest
““I P
(
““P Q
$str““Q ê
)““ê ë
;““ë í
(
”” 
new
”” J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_31
”” D
(
””D E
)
””E F
)
””F G
.
””G H
RunTest
””H O
(
””O P
$str””P é
)””é è
;””è ê
(
‘‘ 
new
‘‘ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_41
‘‘ D
(
‘‘D E
)
‘‘E F
)
‘‘F G
.
‘‘G H
RunTest
‘‘H O
(
‘‘O P
$str‘‘P é
)‘‘é è
;‘‘è ê
(
’’ 
new
’’ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_42
’’ D
(
’’D E
)
’’E F
)
’’F G
.
’’G H
RunTest
’’H O
(
’’O P
$str’’P é
)’’é è
;’’è ê
(
÷÷ 
new
÷÷ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_45
÷÷ D
(
÷÷D E
)
÷÷E F
)
÷÷F G
.
÷÷G H
RunTest
÷÷H O
(
÷÷O P
$str÷÷P é
)÷÷é è
;÷÷è ê
(
◊◊ 
new
◊◊ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_51a
◊◊ E
(
◊◊E F
)
◊◊F G
)
◊◊G H
.
◊◊H I
RunTest
◊◊I P
(
◊◊P Q
$str◊◊Q ê
)◊◊ê ë
;◊◊ë í
(
ÿÿ 
new
ÿÿ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_52a
ÿÿ E
(
ÿÿE F
)
ÿÿF G
)
ÿÿG H
.
ÿÿH I
RunTest
ÿÿI P
(
ÿÿP Q
$strÿÿQ ê
)ÿÿê ë
;ÿÿë í
(
ŸŸ 
new
ŸŸ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_53a
ŸŸ E
(
ŸŸE F
)
ŸŸF G
)
ŸŸG H
.
ŸŸH I
RunTest
ŸŸI P
(
ŸŸP Q
$strŸŸQ ê
)ŸŸê ë
;ŸŸë í
(
⁄⁄ 
new
⁄⁄ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_54a
⁄⁄ E
(
⁄⁄E F
)
⁄⁄F G
)
⁄⁄G H
.
⁄⁄H I
RunTest
⁄⁄I P
(
⁄⁄P Q
$str⁄⁄Q ê
)⁄⁄ê ë
;⁄⁄ë í
(
€€ 
new
€€ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_61a
€€ E
(
€€E F
)
€€F G
)
€€G H
.
€€H I
RunTest
€€I P
(
€€P Q
$str€€Q ê
)€€ê ë
;€€ë í
(
‹‹ 
new
‹‹ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_66a
‹‹ E
(
‹‹E F
)
‹‹F G
)
‹‹G H
.
‹‹H I
RunTest
‹‹I P
(
‹‹P Q
$str‹‹Q ê
)‹‹ê ë
;‹‹ë í
(
›› 
new
›› K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_67a
›› E
(
››E F
)
››F G
)
››G H
.
››H I
RunTest
››I P
(
››P Q
$str››Q ê
)››ê ë
;››ë í
(
ﬁﬁ 
new
ﬁﬁ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_68a
ﬁﬁ E
(
ﬁﬁE F
)
ﬁﬁF G
)
ﬁﬁG H
.
ﬁﬁH I
RunTest
ﬁﬁI P
(
ﬁﬁP Q
$strﬁﬁQ ê
)ﬁﬁê ë
;ﬁﬁë í
(
ﬂﬂ 
new
ﬂﬂ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_71a
ﬂﬂ E
(
ﬂﬂE F
)
ﬂﬂF G
)
ﬂﬂG H
.
ﬂﬂH I
RunTest
ﬂﬂI P
(
ﬂﬂP Q
$strﬂﬂQ ê
)ﬂﬂê ë
;ﬂﬂë í
(
‡‡ 
new
‡‡ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_72a
‡‡ E
(
‡‡E F
)
‡‡F G
)
‡‡G H
.
‡‡H I
RunTest
‡‡I P
(
‡‡P Q
$str‡‡Q ê
)‡‡ê ë
;‡‡ë í
(
·· 
new
·· K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_73a
·· E
(
··E F
)
··F G
)
··G H
.
··H I
RunTest
··I P
(
··P Q
$str··Q ê
)··ê ë
;··ë í
(
‚‚ 
new
‚‚ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_74a
‚‚ E
(
‚‚E F
)
‚‚F G
)
‚‚G H
.
‚‚H I
RunTest
‚‚I P
(
‚‚P Q
$str‚‚Q ê
)‚‚ê ë
;‚‚ë í
(
„„ 
new
„„ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_75a
„„ E
(
„„E F
)
„„F G
)
„„G H
.
„„H I
RunTest
„„I P
(
„„P Q
$str„„Q ê
)„„ê ë
;„„ë í
(
‰‰ 
new
‰‰ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_byte_81a
‰‰ E
(
‰‰E F
)
‰‰F G
)
‰‰G H
.
‰‰H I
RunTest
‰‰I P
(
‰‰P Q
$str‰‰Q ê
)‰‰ê ë
;‰‰ë í
(
ÂÂ 
new
ÂÂ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_01
ÂÂ E
(
ÂÂE F
)
ÂÂF G
)
ÂÂG H
.
ÂÂH I
RunTest
ÂÂI P
(
ÂÂP Q
$strÂÂQ ê
)ÂÂê ë
;ÂÂë í
(
ÊÊ 
new
ÊÊ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_02
ÊÊ E
(
ÊÊE F
)
ÊÊF G
)
ÊÊG H
.
ÊÊH I
RunTest
ÊÊI P
(
ÊÊP Q
$strÊÊQ ê
)ÊÊê ë
;ÊÊë í
(
ÁÁ 
new
ÁÁ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_03
ÁÁ E
(
ÁÁE F
)
ÁÁF G
)
ÁÁG H
.
ÁÁH I
RunTest
ÁÁI P
(
ÁÁP Q
$strÁÁQ ê
)ÁÁê ë
;ÁÁë í
(
ËË 
new
ËË K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_04
ËË E
(
ËËE F
)
ËËF G
)
ËËG H
.
ËËH I
RunTest
ËËI P
(
ËËP Q
$strËËQ ê
)ËËê ë
;ËËë í
(
ÈÈ 
new
ÈÈ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_05
ÈÈ E
(
ÈÈE F
)
ÈÈF G
)
ÈÈG H
.
ÈÈH I
RunTest
ÈÈI P
(
ÈÈP Q
$strÈÈQ ê
)ÈÈê ë
;ÈÈë í
(
ÍÍ 
new
ÍÍ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_06
ÍÍ E
(
ÍÍE F
)
ÍÍF G
)
ÍÍG H
.
ÍÍH I
RunTest
ÍÍI P
(
ÍÍP Q
$strÍÍQ ê
)ÍÍê ë
;ÍÍë í
(
ÎÎ 
new
ÎÎ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_07
ÎÎ E
(
ÎÎE F
)
ÎÎF G
)
ÎÎG H
.
ÎÎH I
RunTest
ÎÎI P
(
ÎÎP Q
$strÎÎQ ê
)ÎÎê ë
;ÎÎë í
(
ÏÏ 
new
ÏÏ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_08
ÏÏ E
(
ÏÏE F
)
ÏÏF G
)
ÏÏG H
.
ÏÏH I
RunTest
ÏÏI P
(
ÏÏP Q
$strÏÏQ ê
)ÏÏê ë
;ÏÏë í
(
ÌÌ 
new
ÌÌ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_09
ÌÌ E
(
ÌÌE F
)
ÌÌF G
)
ÌÌG H
.
ÌÌH I
RunTest
ÌÌI P
(
ÌÌP Q
$strÌÌQ ê
)ÌÌê ë
;ÌÌë í
(
ÓÓ 
new
ÓÓ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_10
ÓÓ E
(
ÓÓE F
)
ÓÓF G
)
ÓÓG H
.
ÓÓH I
RunTest
ÓÓI P
(
ÓÓP Q
$strÓÓQ ê
)ÓÓê ë
;ÓÓë í
(
ÔÔ 
new
ÔÔ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_11
ÔÔ E
(
ÔÔE F
)
ÔÔF G
)
ÔÔG H
.
ÔÔH I
RunTest
ÔÔI P
(
ÔÔP Q
$strÔÔQ ê
)ÔÔê ë
;ÔÔë í
(
 
new
 K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_12
 E
(
E F
)
F G
)
G H
.
H I
RunTest
I P
(
P Q
$strQ ê
)ê ë
;ë í
(
ÒÒ 
new
ÒÒ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_13
ÒÒ E
(
ÒÒE F
)
ÒÒF G
)
ÒÒG H
.
ÒÒH I
RunTest
ÒÒI P
(
ÒÒP Q
$strÒÒQ ê
)ÒÒê ë
;ÒÒë í
(
ÚÚ 
new
ÚÚ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_14
ÚÚ E
(
ÚÚE F
)
ÚÚF G
)
ÚÚG H
.
ÚÚH I
RunTest
ÚÚI P
(
ÚÚP Q
$strÚÚQ ê
)ÚÚê ë
;ÚÚë í
(
ÛÛ 
new
ÛÛ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_15
ÛÛ E
(
ÛÛE F
)
ÛÛF G
)
ÛÛG H
.
ÛÛH I
RunTest
ÛÛI P
(
ÛÛP Q
$strÛÛQ ê
)ÛÛê ë
;ÛÛë í
(
ÙÙ 
new
ÙÙ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_16
ÙÙ E
(
ÙÙE F
)
ÙÙF G
)
ÙÙG H
.
ÙÙH I
RunTest
ÙÙI P
(
ÙÙP Q
$strÙÙQ ê
)ÙÙê ë
;ÙÙë í
(
ıı 
new
ıı K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_17
ıı E
(
ııE F
)
ııF G
)
ııG H
.
ııH I
RunTest
ııI P
(
ııP Q
$strııQ ê
)ııê ë
;ııë í
(
ˆˆ 
new
ˆˆ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_21
ˆˆ E
(
ˆˆE F
)
ˆˆF G
)
ˆˆG H
.
ˆˆH I
RunTest
ˆˆI P
(
ˆˆP Q
$strˆˆQ ê
)ˆˆê ë
;ˆˆë í
(
˜˜ 
new
˜˜ L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_22a
˜˜ F
(
˜˜F G
)
˜˜G H
)
˜˜H I
.
˜˜I J
RunTest
˜˜J Q
(
˜˜Q R
$str˜˜R í
)˜˜í ì
;˜˜ì î
(
¯¯ 
new
¯¯ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_31
¯¯ E
(
¯¯E F
)
¯¯F G
)
¯¯G H
.
¯¯H I
RunTest
¯¯I P
(
¯¯P Q
$str¯¯Q ê
)¯¯ê ë
;¯¯ë í
(
˘˘ 
new
˘˘ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_41
˘˘ E
(
˘˘E F
)
˘˘F G
)
˘˘G H
.
˘˘H I
RunTest
˘˘I P
(
˘˘P Q
$str˘˘Q ê
)˘˘ê ë
;˘˘ë í
(
˙˙ 
new
˙˙ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_42
˙˙ E
(
˙˙E F
)
˙˙F G
)
˙˙G H
.
˙˙H I
RunTest
˙˙I P
(
˙˙P Q
$str˙˙Q ê
)˙˙ê ë
;˙˙ë í
(
˚˚ 
new
˚˚ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_float_45
˚˚ E
(
˚˚E F
)
˚˚F G
)
˚˚G H
.
˚˚H I
RunTest
˚˚I P
(
˚˚P Q
$str˚˚Q ê
)˚˚ê ë
;˚˚ë í
(
¸¸ 
new
¸¸ L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_51a
¸¸ F
(
¸¸F G
)
¸¸G H
)
¸¸H I
.
¸¸I J
RunTest
¸¸J Q
(
¸¸Q R
$str¸¸R í
)¸¸í ì
;¸¸ì î
(
˝˝ 
new
˝˝ L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_52a
˝˝ F
(
˝˝F G
)
˝˝G H
)
˝˝H I
.
˝˝I J
RunTest
˝˝J Q
(
˝˝Q R
$str˝˝R í
)˝˝í ì
;˝˝ì î
(
˛˛ 
new
˛˛ L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_53a
˛˛ F
(
˛˛F G
)
˛˛G H
)
˛˛H I
.
˛˛I J
RunTest
˛˛J Q
(
˛˛Q R
$str˛˛R í
)˛˛í ì
;˛˛ì î
(
ˇˇ 
new
ˇˇ L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_54a
ˇˇ F
(
ˇˇF G
)
ˇˇG H
)
ˇˇH I
.
ˇˇI J
RunTest
ˇˇJ Q
(
ˇˇQ R
$strˇˇR í
)ˇˇí ì
;ˇˇì î
(
ÄÄ 
new
ÄÄ L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_61a
ÄÄ F
(
ÄÄF G
)
ÄÄG H
)
ÄÄH I
.
ÄÄI J
RunTest
ÄÄJ Q
(
ÄÄQ R
$strÄÄR í
)ÄÄí ì
;ÄÄì î
(
ÅÅ 
new
ÅÅ L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_66a
ÅÅ F
(
ÅÅF G
)
ÅÅG H
)
ÅÅH I
.
ÅÅI J
RunTest
ÅÅJ Q
(
ÅÅQ R
$strÅÅR í
)ÅÅí ì
;ÅÅì î
(
ÇÇ 
new
ÇÇ L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_67a
ÇÇ F
(
ÇÇF G
)
ÇÇG H
)
ÇÇH I
.
ÇÇI J
RunTest
ÇÇJ Q
(
ÇÇQ R
$strÇÇR í
)ÇÇí ì
;ÇÇì î
(
ÉÉ 
new
ÉÉ L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_68a
ÉÉ F
(
ÉÉF G
)
ÉÉG H
)
ÉÉH I
.
ÉÉI J
RunTest
ÉÉJ Q
(
ÉÉQ R
$strÉÉR í
)ÉÉí ì
;ÉÉì î
(
ÑÑ 
new
ÑÑ L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_71a
ÑÑ F
(
ÑÑF G
)
ÑÑG H
)
ÑÑH I
.
ÑÑI J
RunTest
ÑÑJ Q
(
ÑÑQ R
$strÑÑR í
)ÑÑí ì
;ÑÑì î
(
ÖÖ 
new
ÖÖ L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_72a
ÖÖ F
(
ÖÖF G
)
ÖÖG H
)
ÖÖH I
.
ÖÖI J
RunTest
ÖÖJ Q
(
ÖÖQ R
$strÖÖR í
)ÖÖí ì
;ÖÖì î
(
ÜÜ 
new
ÜÜ L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_73a
ÜÜ F
(
ÜÜF G
)
ÜÜG H
)
ÜÜH I
.
ÜÜI J
RunTest
ÜÜJ Q
(
ÜÜQ R
$strÜÜR í
)ÜÜí ì
;ÜÜì î
(
áá 
new
áá L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_74a
áá F
(
ááF G
)
ááG H
)
ááH I
.
ááI J
RunTest
ááJ Q
(
ááQ R
$strááR í
)ááí ì
;ááì î
(
àà 
new
àà L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_75a
àà F
(
ààF G
)
ààG H
)
ààH I
.
ààI J
RunTest
ààJ Q
(
ààQ R
$strààR í
)ààí ì
;ààì î
(
ââ 
new
ââ L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_float_81a
ââ F
(
ââF G
)
ââG H
)
ââH I
.
ââI J
RunTest
ââJ Q
(
ââQ R
$strââR í
)ââí ì
;ââì î
(
ää 
new
ää I
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_01
ää C
(
ääC D
)
ääD E
)
ääE F
.
ääF G
RunTest
ääG N
(
ääN O
$strääO å
)ääå ç
;ääç é
(
ãã 
new
ãã I
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_02
ãã C
(
ããC D
)
ããD E
)
ããE F
.
ããF G
RunTest
ããG N
(
ããN O
$strããO å
)ããå ç
;ããç é
(
åå 
new
åå I
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_03
åå C
(
ååC D
)
ååD E
)
ååE F
.
ååF G
RunTest
ååG N
(
ååN O
$strååO å
)ååå ç
;ååç é
(
çç 
new
çç I
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_04
çç C
(
ççC D
)
ççD E
)
ççE F
.
ççF G
RunTest
ççG N
(
ççN O
$strççO å
)ççå ç
;ççç é
(
éé 
new
éé I
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_05
éé C
(
ééC D
)
ééD E
)
ééE F
.
ééF G
RunTest
ééG N
(
ééN O
$strééO å
)ééå ç
;ééç é
(
èè 
new
èè I
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_06
èè C
(
èèC D
)
èèD E
)
èèE F
.
èèF G
RunTest
èèG N
(
èèN O
$strèèO å
)èèå ç
;èèç é
(
êê 
new
êê I
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_07
êê C
(
êêC D
)
êêD E
)
êêE F
.
êêF G
RunTest
êêG N
(
êêN O
$strêêO å
)êêå ç
;êêç é
(
ëë 
new
ëë I
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_08
ëë C
(
ëëC D
)
ëëD E
)
ëëE F
.
ëëF G
RunTest
ëëG N
(
ëëN O
$strëëO å
)ëëå ç
;ëëç é
(
íí 
new
íí I
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_09
íí C
(
ííC D
)
ííD E
)
ííE F
.
ííF G
RunTest
ííG N
(
ííN O
$strííO å
)ííå ç
;ííç é
(
ìì 
new
ìì I
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_10
ìì C
(
ììC D
)
ììD E
)
ììE F
.
ììF G
RunTest
ììG N
(
ììN O
$strììO å
)ììå ç
;ììç é
(
îî 
new
îî I
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_11
îî C
(
îîC D
)
îîD E
)
îîE F
.
îîF G
RunTest
îîG N
(
îîN O
$strîîO å
)îîå ç
;îîç é
(
ïï 
new
ïï I
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_12
ïï C
(
ïïC D
)
ïïD E
)
ïïE F
.
ïïF G
RunTest
ïïG N
(
ïïN O
$strïïO å
)ïïå ç
;ïïç é
(
ññ 
new
ññ I
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_13
ññ C
(
ññC D
)
ññD E
)
ññE F
.
ññF G
RunTest
ññG N
(
ññN O
$strññO å
)ññå ç
;ññç é
(
óó 
new
óó I
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_14
óó C
(
óóC D
)
óóD E
)
óóE F
.
óóF G
RunTest
óóG N
(
óóN O
$stróóO å
)óóå ç
;óóç é
(
òò 
new
òò I
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_15
òò C
(
òòC D
)
òòD E
)
òòE F
.
òòF G
RunTest
òòG N
(
òòN O
$stròòO å
)òòå ç
;òòç é
(
ôô 
new
ôô I
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_16
ôô C
(
ôôC D
)
ôôD E
)
ôôE F
.
ôôF G
RunTest
ôôG N
(
ôôN O
$strôôO å
)ôôå ç
;ôôç é
(
öö 
new
öö I
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_17
öö C
(
ööC D
)
ööD E
)
ööE F
.
ööF G
RunTest
ööG N
(
ööN O
$strööO å
)ööå ç
;ööç é
(
õõ 
new
õõ I
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_21
õõ C
(
õõC D
)
õõD E
)
õõE F
.
õõF G
RunTest
õõG N
(
õõN O
$strõõO å
)õõå ç
;õõç é
(
úú 
new
úú J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_22a
úú D
(
úúD E
)
úúE F
)
úúF G
.
úúG H
RunTest
úúH O
(
úúO P
$strúúP é
)úúé è
;úúè ê
(
ùù 
new
ùù I
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_31
ùù C
(
ùùC D
)
ùùD E
)
ùùE F
.
ùùF G
RunTest
ùùG N
(
ùùN O
$strùùO å
)ùùå ç
;ùùç é
(
ûû 
new
ûû I
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_41
ûû C
(
ûûC D
)
ûûD E
)
ûûE F
.
ûûF G
RunTest
ûûG N
(
ûûN O
$strûûO å
)ûûå ç
;ûûç é
(
üü 
new
üü I
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_42
üü C
(
üüC D
)
üüD E
)
üüE F
.
üüF G
RunTest
üüG N
(
üüN O
$strüüO å
)üüå ç
;üüç é
(
†† 
new
†† I
;CWE197_Numeric_Truncation_Error__double_NetClient_to_int_45
†† C
(
††C D
)
††D E
)
††E F
.
††F G
RunTest
††G N
(
††N O
$str††O å
)††å ç
;††ç é
(
°° 
new
°° J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_51a
°° D
(
°°D E
)
°°E F
)
°°F G
.
°°G H
RunTest
°°H O
(
°°O P
$str°°P é
)°°é è
;°°è ê
(
¢¢ 
new
¢¢ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_52a
¢¢ D
(
¢¢D E
)
¢¢E F
)
¢¢F G
.
¢¢G H
RunTest
¢¢H O
(
¢¢O P
$str¢¢P é
)¢¢é è
;¢¢è ê
(
££ 
new
££ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_53a
££ D
(
££D E
)
££E F
)
££F G
.
££G H
RunTest
££H O
(
££O P
$str££P é
)££é è
;££è ê
(
§§ 
new
§§ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_54a
§§ D
(
§§D E
)
§§E F
)
§§F G
.
§§G H
RunTest
§§H O
(
§§O P
$str§§P é
)§§é è
;§§è ê
(
•• 
new
•• J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_61a
•• D
(
••D E
)
••E F
)
••F G
.
••G H
RunTest
••H O
(
••O P
$str••P é
)••é è
;••è ê
(
¶¶ 
new
¶¶ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_66a
¶¶ D
(
¶¶D E
)
¶¶E F
)
¶¶F G
.
¶¶G H
RunTest
¶¶H O
(
¶¶O P
$str¶¶P é
)¶¶é è
;¶¶è ê
(
ßß 
new
ßß J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_67a
ßß D
(
ßßD E
)
ßßE F
)
ßßF G
.
ßßG H
RunTest
ßßH O
(
ßßO P
$strßßP é
)ßßé è
;ßßè ê
(
®® 
new
®® J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_68a
®® D
(
®®D E
)
®®E F
)
®®F G
.
®®G H
RunTest
®®H O
(
®®O P
$str®®P é
)®®é è
;®®è ê
(
©© 
new
©© J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_71a
©© D
(
©©D E
)
©©E F
)
©©F G
.
©©G H
RunTest
©©H O
(
©©O P
$str©©P é
)©©é è
;©©è ê
(
™™ 
new
™™ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_72a
™™ D
(
™™D E
)
™™E F
)
™™F G
.
™™G H
RunTest
™™H O
(
™™O P
$str™™P é
)™™é è
;™™è ê
(
´´ 
new
´´ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_73a
´´ D
(
´´D E
)
´´E F
)
´´F G
.
´´G H
RunTest
´´H O
(
´´O P
$str´´P é
)´´é è
;´´è ê
(
¨¨ 
new
¨¨ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_74a
¨¨ D
(
¨¨D E
)
¨¨E F
)
¨¨F G
.
¨¨G H
RunTest
¨¨H O
(
¨¨O P
$str¨¨P é
)¨¨é è
;¨¨è ê
(
≠≠ 
new
≠≠ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_75a
≠≠ D
(
≠≠D E
)
≠≠E F
)
≠≠F G
.
≠≠G H
RunTest
≠≠H O
(
≠≠O P
$str≠≠P é
)≠≠é è
;≠≠è ê
(
ÆÆ 
new
ÆÆ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_int_81a
ÆÆ D
(
ÆÆD E
)
ÆÆE F
)
ÆÆF G
.
ÆÆG H
RunTest
ÆÆH O
(
ÆÆO P
$strÆÆP é
)ÆÆé è
;ÆÆè ê
(
ØØ 
new
ØØ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_01
ØØ D
(
ØØD E
)
ØØE F
)
ØØF G
.
ØØG H
RunTest
ØØH O
(
ØØO P
$strØØP é
)ØØé è
;ØØè ê
(
∞∞ 
new
∞∞ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_02
∞∞ D
(
∞∞D E
)
∞∞E F
)
∞∞F G
.
∞∞G H
RunTest
∞∞H O
(
∞∞O P
$str∞∞P é
)∞∞é è
;∞∞è ê
(
±± 
new
±± J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_03
±± D
(
±±D E
)
±±E F
)
±±F G
.
±±G H
RunTest
±±H O
(
±±O P
$str±±P é
)±±é è
;±±è ê
(
≤≤ 
new
≤≤ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_04
≤≤ D
(
≤≤D E
)
≤≤E F
)
≤≤F G
.
≤≤G H
RunTest
≤≤H O
(
≤≤O P
$str≤≤P é
)≤≤é è
;≤≤è ê
(
≥≥ 
new
≥≥ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_05
≥≥ D
(
≥≥D E
)
≥≥E F
)
≥≥F G
.
≥≥G H
RunTest
≥≥H O
(
≥≥O P
$str≥≥P é
)≥≥é è
;≥≥è ê
(
¥¥ 
new
¥¥ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_06
¥¥ D
(
¥¥D E
)
¥¥E F
)
¥¥F G
.
¥¥G H
RunTest
¥¥H O
(
¥¥O P
$str¥¥P é
)¥¥é è
;¥¥è ê
(
µµ 
new
µµ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_07
µµ D
(
µµD E
)
µµE F
)
µµF G
.
µµG H
RunTest
µµH O
(
µµO P
$strµµP é
)µµé è
;µµè ê
(
∂∂ 
new
∂∂ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_08
∂∂ D
(
∂∂D E
)
∂∂E F
)
∂∂F G
.
∂∂G H
RunTest
∂∂H O
(
∂∂O P
$str∂∂P é
)∂∂é è
;∂∂è ê
(
∑∑ 
new
∑∑ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_09
∑∑ D
(
∑∑D E
)
∑∑E F
)
∑∑F G
.
∑∑G H
RunTest
∑∑H O
(
∑∑O P
$str∑∑P é
)∑∑é è
;∑∑è ê
(
∏∏ 
new
∏∏ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_10
∏∏ D
(
∏∏D E
)
∏∏E F
)
∏∏F G
.
∏∏G H
RunTest
∏∏H O
(
∏∏O P
$str∏∏P é
)∏∏é è
;∏∏è ê
(
ππ 
new
ππ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_11
ππ D
(
ππD E
)
ππE F
)
ππF G
.
ππG H
RunTest
ππH O
(
ππO P
$strππP é
)ππé è
;ππè ê
(
∫∫ 
new
∫∫ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_12
∫∫ D
(
∫∫D E
)
∫∫E F
)
∫∫F G
.
∫∫G H
RunTest
∫∫H O
(
∫∫O P
$str∫∫P é
)∫∫é è
;∫∫è ê
(
ªª 
new
ªª J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_13
ªª D
(
ªªD E
)
ªªE F
)
ªªF G
.
ªªG H
RunTest
ªªH O
(
ªªO P
$strªªP é
)ªªé è
;ªªè ê
(
ºº 
new
ºº J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_14
ºº D
(
ººD E
)
ººE F
)
ººF G
.
ººG H
RunTest
ººH O
(
ººO P
$strººP é
)ººé è
;ººè ê
(
ΩΩ 
new
ΩΩ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_15
ΩΩ D
(
ΩΩD E
)
ΩΩE F
)
ΩΩF G
.
ΩΩG H
RunTest
ΩΩH O
(
ΩΩO P
$strΩΩP é
)ΩΩé è
;ΩΩè ê
(
ææ 
new
ææ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_16
ææ D
(
ææD E
)
ææE F
)
ææF G
.
ææG H
RunTest
ææH O
(
ææO P
$strææP é
)ææé è
;ææè ê
(
øø 
new
øø J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_17
øø D
(
øøD E
)
øøE F
)
øøF G
.
øøG H
RunTest
øøH O
(
øøO P
$strøøP é
)øøé è
;øøè ê
(
¿¿ 
new
¿¿ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_21
¿¿ D
(
¿¿D E
)
¿¿E F
)
¿¿F G
.
¿¿G H
RunTest
¿¿H O
(
¿¿O P
$str¿¿P é
)¿¿é è
;¿¿è ê
(
¡¡ 
new
¡¡ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_22a
¡¡ E
(
¡¡E F
)
¡¡F G
)
¡¡G H
.
¡¡H I
RunTest
¡¡I P
(
¡¡P Q
$str¡¡Q ê
)¡¡ê ë
;¡¡ë í
(
¬¬ 
new
¬¬ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_31
¬¬ D
(
¬¬D E
)
¬¬E F
)
¬¬F G
.
¬¬G H
RunTest
¬¬H O
(
¬¬O P
$str¬¬P é
)¬¬é è
;¬¬è ê
(
√√ 
new
√√ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_41
√√ D
(
√√D E
)
√√E F
)
√√F G
.
√√G H
RunTest
√√H O
(
√√O P
$str√√P é
)√√é è
;√√è ê
(
ƒƒ 
new
ƒƒ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_42
ƒƒ D
(
ƒƒD E
)
ƒƒE F
)
ƒƒF G
.
ƒƒG H
RunTest
ƒƒH O
(
ƒƒO P
$strƒƒP é
)ƒƒé è
;ƒƒè ê
(
≈≈ 
new
≈≈ J
<CWE197_Numeric_Truncation_Error__double_NetClient_to_long_45
≈≈ D
(
≈≈D E
)
≈≈E F
)
≈≈F G
.
≈≈G H
RunTest
≈≈H O
(
≈≈O P
$str≈≈P é
)≈≈é è
;≈≈è ê
(
∆∆ 
new
∆∆ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_51a
∆∆ E
(
∆∆E F
)
∆∆F G
)
∆∆G H
.
∆∆H I
RunTest
∆∆I P
(
∆∆P Q
$str∆∆Q ê
)∆∆ê ë
;∆∆ë í
(
«« 
new
«« K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_52a
«« E
(
««E F
)
««F G
)
««G H
.
««H I
RunTest
««I P
(
««P Q
$str««Q ê
)««ê ë
;««ë í
(
»» 
new
»» K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_53a
»» E
(
»»E F
)
»»F G
)
»»G H
.
»»H I
RunTest
»»I P
(
»»P Q
$str»»Q ê
)»»ê ë
;»»ë í
(
…… 
new
…… K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_54a
…… E
(
……E F
)
……F G
)
……G H
.
……H I
RunTest
……I P
(
……P Q
$str……Q ê
)……ê ë
;……ë í
(
   
new
   K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_61a
   E
(
  E F
)
  F G
)
  G H
.
  H I
RunTest
  I P
(
  P Q
$str  Q ê
)  ê ë
;  ë í
(
ÀÀ 
new
ÀÀ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_66a
ÀÀ E
(
ÀÀE F
)
ÀÀF G
)
ÀÀG H
.
ÀÀH I
RunTest
ÀÀI P
(
ÀÀP Q
$strÀÀQ ê
)ÀÀê ë
;ÀÀë í
(
ÃÃ 
new
ÃÃ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_67a
ÃÃ E
(
ÃÃE F
)
ÃÃF G
)
ÃÃG H
.
ÃÃH I
RunTest
ÃÃI P
(
ÃÃP Q
$strÃÃQ ê
)ÃÃê ë
;ÃÃë í
(
ÕÕ 
new
ÕÕ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_68a
ÕÕ E
(
ÕÕE F
)
ÕÕF G
)
ÕÕG H
.
ÕÕH I
RunTest
ÕÕI P
(
ÕÕP Q
$strÕÕQ ê
)ÕÕê ë
;ÕÕë í
(
ŒŒ 
new
ŒŒ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_71a
ŒŒ E
(
ŒŒE F
)
ŒŒF G
)
ŒŒG H
.
ŒŒH I
RunTest
ŒŒI P
(
ŒŒP Q
$strŒŒQ ê
)ŒŒê ë
;ŒŒë í
(
œœ 
new
œœ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_72a
œœ E
(
œœE F
)
œœF G
)
œœG H
.
œœH I
RunTest
œœI P
(
œœP Q
$strœœQ ê
)œœê ë
;œœë í
(
–– 
new
–– K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_73a
–– E
(
––E F
)
––F G
)
––G H
.
––H I
RunTest
––I P
(
––P Q
$str––Q ê
)––ê ë
;––ë í
(
—— 
new
—— K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_74a
—— E
(
——E F
)
——F G
)
——G H
.
——H I
RunTest
——I P
(
——P Q
$str——Q ê
)——ê ë
;——ë í
(
““ 
new
““ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_75a
““ E
(
““E F
)
““F G
)
““G H
.
““H I
RunTest
““I P
(
““P Q
$str““Q ê
)““ê ë
;““ë í
(
”” 
new
”” K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_long_81a
”” E
(
””E F
)
””F G
)
””G H
.
””H I
RunTest
””I P
(
””P Q
$str””Q ê
)””ê ë
;””ë í
(
‘‘ 
new
‘‘ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_01
‘‘ E
(
‘‘E F
)
‘‘F G
)
‘‘G H
.
‘‘H I
RunTest
‘‘I P
(
‘‘P Q
$str‘‘Q ê
)‘‘ê ë
;‘‘ë í
(
’’ 
new
’’ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_02
’’ E
(
’’E F
)
’’F G
)
’’G H
.
’’H I
RunTest
’’I P
(
’’P Q
$str’’Q ê
)’’ê ë
;’’ë í
(
÷÷ 
new
÷÷ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_03
÷÷ E
(
÷÷E F
)
÷÷F G
)
÷÷G H
.
÷÷H I
RunTest
÷÷I P
(
÷÷P Q
$str÷÷Q ê
)÷÷ê ë
;÷÷ë í
(
◊◊ 
new
◊◊ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_04
◊◊ E
(
◊◊E F
)
◊◊F G
)
◊◊G H
.
◊◊H I
RunTest
◊◊I P
(
◊◊P Q
$str◊◊Q ê
)◊◊ê ë
;◊◊ë í
(
ÿÿ 
new
ÿÿ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_05
ÿÿ E
(
ÿÿE F
)
ÿÿF G
)
ÿÿG H
.
ÿÿH I
RunTest
ÿÿI P
(
ÿÿP Q
$strÿÿQ ê
)ÿÿê ë
;ÿÿë í
(
ŸŸ 
new
ŸŸ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_06
ŸŸ E
(
ŸŸE F
)
ŸŸF G
)
ŸŸG H
.
ŸŸH I
RunTest
ŸŸI P
(
ŸŸP Q
$strŸŸQ ê
)ŸŸê ë
;ŸŸë í
(
⁄⁄ 
new
⁄⁄ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_07
⁄⁄ E
(
⁄⁄E F
)
⁄⁄F G
)
⁄⁄G H
.
⁄⁄H I
RunTest
⁄⁄I P
(
⁄⁄P Q
$str⁄⁄Q ê
)⁄⁄ê ë
;⁄⁄ë í
(
€€ 
new
€€ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_08
€€ E
(
€€E F
)
€€F G
)
€€G H
.
€€H I
RunTest
€€I P
(
€€P Q
$str€€Q ê
)€€ê ë
;€€ë í
(
‹‹ 
new
‹‹ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_09
‹‹ E
(
‹‹E F
)
‹‹F G
)
‹‹G H
.
‹‹H I
RunTest
‹‹I P
(
‹‹P Q
$str‹‹Q ê
)‹‹ê ë
;‹‹ë í
(
›› 
new
›› K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_10
›› E
(
››E F
)
››F G
)
››G H
.
››H I
RunTest
››I P
(
››P Q
$str››Q ê
)››ê ë
;››ë í
(
ﬁﬁ 
new
ﬁﬁ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_11
ﬁﬁ E
(
ﬁﬁE F
)
ﬁﬁF G
)
ﬁﬁG H
.
ﬁﬁH I
RunTest
ﬁﬁI P
(
ﬁﬁP Q
$strﬁﬁQ ê
)ﬁﬁê ë
;ﬁﬁë í
(
ﬂﬂ 
new
ﬂﬂ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_12
ﬂﬂ E
(
ﬂﬂE F
)
ﬂﬂF G
)
ﬂﬂG H
.
ﬂﬂH I
RunTest
ﬂﬂI P
(
ﬂﬂP Q
$strﬂﬂQ ê
)ﬂﬂê ë
;ﬂﬂë í
(
‡‡ 
new
‡‡ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_13
‡‡ E
(
‡‡E F
)
‡‡F G
)
‡‡G H
.
‡‡H I
RunTest
‡‡I P
(
‡‡P Q
$str‡‡Q ê
)‡‡ê ë
;‡‡ë í
(
·· 
new
·· K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_14
·· E
(
··E F
)
··F G
)
··G H
.
··H I
RunTest
··I P
(
··P Q
$str··Q ê
)··ê ë
;··ë í
(
‚‚ 
new
‚‚ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_15
‚‚ E
(
‚‚E F
)
‚‚F G
)
‚‚G H
.
‚‚H I
RunTest
‚‚I P
(
‚‚P Q
$str‚‚Q ê
)‚‚ê ë
;‚‚ë í
(
„„ 
new
„„ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_16
„„ E
(
„„E F
)
„„F G
)
„„G H
.
„„H I
RunTest
„„I P
(
„„P Q
$str„„Q ê
)„„ê ë
;„„ë í
(
‰‰ 
new
‰‰ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_17
‰‰ E
(
‰‰E F
)
‰‰F G
)
‰‰G H
.
‰‰H I
RunTest
‰‰I P
(
‰‰P Q
$str‰‰Q ê
)‰‰ê ë
;‰‰ë í
(
ÂÂ 
new
ÂÂ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_21
ÂÂ E
(
ÂÂE F
)
ÂÂF G
)
ÂÂG H
.
ÂÂH I
RunTest
ÂÂI P
(
ÂÂP Q
$strÂÂQ ê
)ÂÂê ë
;ÂÂë í
(
ÊÊ 
new
ÊÊ L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_22a
ÊÊ F
(
ÊÊF G
)
ÊÊG H
)
ÊÊH I
.
ÊÊI J
RunTest
ÊÊJ Q
(
ÊÊQ R
$strÊÊR í
)ÊÊí ì
;ÊÊì î
(
ÁÁ 
new
ÁÁ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_31
ÁÁ E
(
ÁÁE F
)
ÁÁF G
)
ÁÁG H
.
ÁÁH I
RunTest
ÁÁI P
(
ÁÁP Q
$strÁÁQ ê
)ÁÁê ë
;ÁÁë í
(
ËË 
new
ËË K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_41
ËË E
(
ËËE F
)
ËËF G
)
ËËG H
.
ËËH I
RunTest
ËËI P
(
ËËP Q
$strËËQ ê
)ËËê ë
;ËËë í
(
ÈÈ 
new
ÈÈ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_42
ÈÈ E
(
ÈÈE F
)
ÈÈF G
)
ÈÈG H
.
ÈÈH I
RunTest
ÈÈI P
(
ÈÈP Q
$strÈÈQ ê
)ÈÈê ë
;ÈÈë í
(
ÍÍ 
new
ÍÍ K
=CWE197_Numeric_Truncation_Error__double_NetClient_to_short_45
ÍÍ E
(
ÍÍE F
)
ÍÍF G
)
ÍÍG H
.
ÍÍH I
RunTest
ÍÍI P
(
ÍÍP Q
$strÍÍQ ê
)ÍÍê ë
;ÍÍë í
(
ÎÎ 
new
ÎÎ L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_51a
ÎÎ F
(
ÎÎF G
)
ÎÎG H
)
ÎÎH I
.
ÎÎI J
RunTest
ÎÎJ Q
(
ÎÎQ R
$strÎÎR í
)ÎÎí ì
;ÎÎì î
(
ÏÏ 
new
ÏÏ L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_52a
ÏÏ F
(
ÏÏF G
)
ÏÏG H
)
ÏÏH I
.
ÏÏI J
RunTest
ÏÏJ Q
(
ÏÏQ R
$strÏÏR í
)ÏÏí ì
;ÏÏì î
(
ÌÌ 
new
ÌÌ L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_53a
ÌÌ F
(
ÌÌF G
)
ÌÌG H
)
ÌÌH I
.
ÌÌI J
RunTest
ÌÌJ Q
(
ÌÌQ R
$strÌÌR í
)ÌÌí ì
;ÌÌì î
(
ÓÓ 
new
ÓÓ L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_54a
ÓÓ F
(
ÓÓF G
)
ÓÓG H
)
ÓÓH I
.
ÓÓI J
RunTest
ÓÓJ Q
(
ÓÓQ R
$strÓÓR í
)ÓÓí ì
;ÓÓì î
(
ÔÔ 
new
ÔÔ L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_61a
ÔÔ F
(
ÔÔF G
)
ÔÔG H
)
ÔÔH I
.
ÔÔI J
RunTest
ÔÔJ Q
(
ÔÔQ R
$strÔÔR í
)ÔÔí ì
;ÔÔì î
(
 
new
 L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_66a
 F
(
F G
)
G H
)
H I
.
I J
RunTest
J Q
(
Q R
$strR í
)í ì
;ì î
(
ÒÒ 
new
ÒÒ L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_67a
ÒÒ F
(
ÒÒF G
)
ÒÒG H
)
ÒÒH I
.
ÒÒI J
RunTest
ÒÒJ Q
(
ÒÒQ R
$strÒÒR í
)ÒÒí ì
;ÒÒì î
(
ÚÚ 
new
ÚÚ L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_68a
ÚÚ F
(
ÚÚF G
)
ÚÚG H
)
ÚÚH I
.
ÚÚI J
RunTest
ÚÚJ Q
(
ÚÚQ R
$strÚÚR í
)ÚÚí ì
;ÚÚì î
(
ÛÛ 
new
ÛÛ L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_71a
ÛÛ F
(
ÛÛF G
)
ÛÛG H
)
ÛÛH I
.
ÛÛI J
RunTest
ÛÛJ Q
(
ÛÛQ R
$strÛÛR í
)ÛÛí ì
;ÛÛì î
(
ÙÙ 
new
ÙÙ L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_72a
ÙÙ F
(
ÙÙF G
)
ÙÙG H
)
ÙÙH I
.
ÙÙI J
RunTest
ÙÙJ Q
(
ÙÙQ R
$strÙÙR í
)ÙÙí ì
;ÙÙì î
(
ıı 
new
ıı L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_73a
ıı F
(
ııF G
)
ııG H
)
ııH I
.
ııI J
RunTest
ııJ Q
(
ııQ R
$strııR í
)ııí ì
;ııì î
(
ˆˆ 
new
ˆˆ L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_74a
ˆˆ F
(
ˆˆF G
)
ˆˆG H
)
ˆˆH I
.
ˆˆI J
RunTest
ˆˆJ Q
(
ˆˆQ R
$strˆˆR í
)ˆˆí ì
;ˆˆì î
(
˜˜ 
new
˜˜ L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_75a
˜˜ F
(
˜˜F G
)
˜˜G H
)
˜˜H I
.
˜˜I J
RunTest
˜˜J Q
(
˜˜Q R
$str˜˜R í
)˜˜í ì
;˜˜ì î
(
¯¯ 
new
¯¯ L
>CWE197_Numeric_Truncation_Error__double_NetClient_to_short_81a
¯¯ F
(
¯¯F G
)
¯¯G H
)
¯¯H I
.
¯¯I J
RunTest
¯¯J Q
(
¯¯Q R
$str¯¯R í
)¯¯í ì
;¯¯ì î
(
˘˘ 
new
˘˘ G
9CWE197_Numeric_Truncation_Error__double_random_to_byte_01
˘˘ A
(
˘˘A B
)
˘˘B C
)
˘˘C D
.
˘˘D E
RunTest
˘˘E L
(
˘˘L M
$str˘˘M à
)˘˘à â
;˘˘â ä
(
˙˙ 
new
˙˙ G
9CWE197_Numeric_Truncation_Error__double_random_to_byte_02
˙˙ A
(
˙˙A B
)
˙˙B C
)
˙˙C D
.
˙˙D E
RunTest
˙˙E L
(
˙˙L M
$str˙˙M à
)˙˙à â
;˙˙â ä
(
˚˚ 
new
˚˚ G
9CWE197_Numeric_Truncation_Error__double_random_to_byte_03
˚˚ A
(
˚˚A B
)
˚˚B C
)
˚˚C D
.
˚˚D E
RunTest
˚˚E L
(
˚˚L M
$str˚˚M à
)˚˚à â
;˚˚â ä
(
¸¸ 
new
¸¸ G
9CWE197_Numeric_Truncation_Error__double_random_to_byte_04
¸¸ A
(
¸¸A B
)
¸¸B C
)
¸¸C D
.
¸¸D E
RunTest
¸¸E L
(
¸¸L M
$str¸¸M à
)¸¸à â
;¸¸â ä
(
˝˝ 
new
˝˝ G
9CWE197_Numeric_Truncation_Error__double_random_to_byte_05
˝˝ A
(
˝˝A B
)
˝˝B C
)
˝˝C D
.
˝˝D E
RunTest
˝˝E L
(
˝˝L M
$str˝˝M à
)˝˝à â
;˝˝â ä
(
˛˛ 
new
˛˛ G
9CWE197_Numeric_Truncation_Error__double_random_to_byte_06
˛˛ A
(
˛˛A B
)
˛˛B C
)
˛˛C D
.
˛˛D E
RunTest
˛˛E L
(
˛˛L M
$str˛˛M à
)˛˛à â
;˛˛â ä
(
ˇˇ 
new
ˇˇ G
9CWE197_Numeric_Truncation_Error__double_random_to_byte_07
ˇˇ A
(
ˇˇA B
)
ˇˇB C
)
ˇˇC D
.
ˇˇD E
RunTest
ˇˇE L
(
ˇˇL M
$strˇˇM à
)ˇˇà â
;ˇˇâ ä
(
ÄÄ 
new
ÄÄ G
9CWE197_Numeric_Truncation_Error__double_random_to_byte_08
ÄÄ A
(
ÄÄA B
)
ÄÄB C
)
ÄÄC D
.
ÄÄD E
RunTest
ÄÄE L
(
ÄÄL M
$strÄÄM à
)ÄÄà â
;ÄÄâ ä
(
ÅÅ 
new
ÅÅ G
9CWE197_Numeric_Truncation_Error__double_random_to_byte_09
ÅÅ A
(
ÅÅA B
)
ÅÅB C
)
ÅÅC D
.
ÅÅD E
RunTest
ÅÅE L
(
ÅÅL M
$strÅÅM à
)ÅÅà â
;ÅÅâ ä
(
ÇÇ 
new
ÇÇ G
9CWE197_Numeric_Truncation_Error__double_random_to_byte_10
ÇÇ A
(
ÇÇA B
)
ÇÇB C
)
ÇÇC D
.
ÇÇD E
RunTest
ÇÇE L
(
ÇÇL M
$strÇÇM à
)ÇÇà â
;ÇÇâ ä
(
ÉÉ 
new
ÉÉ G
9CWE197_Numeric_Truncation_Error__double_random_to_byte_11
ÉÉ A
(
ÉÉA B
)
ÉÉB C
)
ÉÉC D
.
ÉÉD E
RunTest
ÉÉE L
(
ÉÉL M
$strÉÉM à
)ÉÉà â
;ÉÉâ ä
(
ÑÑ 
new
ÑÑ G
9CWE197_Numeric_Truncation_Error__double_random_to_byte_12
ÑÑ A
(
ÑÑA B
)
ÑÑB C
)
ÑÑC D
.
ÑÑD E
RunTest
ÑÑE L
(
ÑÑL M
$strÑÑM à
)ÑÑà â
;ÑÑâ ä
(
ÖÖ 
new
ÖÖ G
9CWE197_Numeric_Truncation_Error__double_random_to_byte_13
ÖÖ A
(
ÖÖA B
)
ÖÖB C
)
ÖÖC D
.
ÖÖD E
RunTest
ÖÖE L
(
ÖÖL M
$strÖÖM à
)ÖÖà â
;ÖÖâ ä
(
ÜÜ 
new
ÜÜ G
9CWE197_Numeric_Truncation_Error__double_random_to_byte_14
ÜÜ A
(
ÜÜA B
)
ÜÜB C
)
ÜÜC D
.
ÜÜD E
RunTest
ÜÜE L
(
ÜÜL M
$strÜÜM à
)ÜÜà â
;ÜÜâ ä
(
áá 
new
áá G
9CWE197_Numeric_Truncation_Error__double_random_to_byte_15
áá A
(
ááA B
)
ááB C
)
ááC D
.
ááD E
RunTest
ááE L
(
ááL M
$strááM à
)ááà â
;ááâ ä
(
àà 
new
àà G
9CWE197_Numeric_Truncation_Error__double_random_to_byte_16
àà A
(
ààA B
)
ààB C
)
ààC D
.
ààD E
RunTest
ààE L
(
ààL M
$strààM à
)ààà â
;ààâ ä
(
ââ 
new
ââ G
9CWE197_Numeric_Truncation_Error__double_random_to_byte_17
ââ A
(
ââA B
)
ââB C
)
ââC D
.
ââD E
RunTest
ââE L
(
ââL M
$strââM à
)ââà â
;âââ ä
(
ää 
new
ää G
9CWE197_Numeric_Truncation_Error__double_random_to_byte_21
ää A
(
ääA B
)
ääB C
)
ääC D
.
ääD E
RunTest
ääE L
(
ääL M
$strääM à
)ääà â
;ääâ ä
(
ãã 
new
ãã H
:CWE197_Numeric_Truncation_Error__double_random_to_byte_22a
ãã B
(
ããB C
)
ããC D
)
ããD E
.
ããE F
RunTest
ããF M
(
ããM N
$strããN ä
)ããä ã
;ããã å
(
åå 
new
åå G
9CWE197_Numeric_Truncation_Error__double_random_to_byte_31
åå A
(
ååA B
)
ååB C
)
ååC D
.
ååD E
RunTest
ååE L
(
ååL M
$strååM à
)ååà â
;ååâ ä
(
çç 
new
çç G
9CWE197_Numeric_Truncation_Error__double_random_to_byte_41
çç A
(
ççA B
)
ççB C
)
ççC D
.
ççD E
RunTest
ççE L
(
ççL M
$strççM à
)ççà â
;ççâ ä
(
éé 
new
éé G
9CWE197_Numeric_Truncation_Error__double_random_to_byte_42
éé A
(
ééA B
)
ééB C
)
ééC D
.
ééD E
RunTest
ééE L
(
ééL M
$strééM à
)ééà â
;ééâ ä
(
èè 
new
èè G
9CWE197_Numeric_Truncation_Error__double_random_to_byte_45
èè A
(
èèA B
)
èèB C
)
èèC D
.
èèD E
RunTest
èèE L
(
èèL M
$strèèM à
)èèà â
;èèâ ä
(
êê 
new
êê H
:CWE197_Numeric_Truncation_Error__double_random_to_byte_51a
êê B
(
êêB C
)
êêC D
)
êêD E
.
êêE F
RunTest
êêF M
(
êêM N
$strêêN ä
)êêä ã
;êêã å
(
ëë 
new
ëë H
:CWE197_Numeric_Truncation_Error__double_random_to_byte_52a
ëë B
(
ëëB C
)
ëëC D
)
ëëD E
.
ëëE F
RunTest
ëëF M
(
ëëM N
$strëëN ä
)ëëä ã
;ëëã å
(
íí 
new
íí H
:CWE197_Numeric_Truncation_Error__double_random_to_byte_53a
íí B
(
ííB C
)
ííC D
)
ííD E
.
ííE F
RunTest
ííF M
(
ííM N
$strííN ä
)ííä ã
;ííã å
(
ìì 
new
ìì H
:CWE197_Numeric_Truncation_Error__double_random_to_byte_54a
ìì B
(
ììB C
)
ììC D
)
ììD E
.
ììE F
RunTest
ììF M
(
ììM N
$strììN ä
)ììä ã
;ììã å
(
îî 
new
îî H
:CWE197_Numeric_Truncation_Error__double_random_to_byte_61a
îî B
(
îîB C
)
îîC D
)
îîD E
.
îîE F
RunTest
îîF M
(
îîM N
$strîîN ä
)îîä ã
;îîã å
(
ïï 
new
ïï H
:CWE197_Numeric_Truncation_Error__double_random_to_byte_66a
ïï B
(
ïïB C
)
ïïC D
)
ïïD E
.
ïïE F
RunTest
ïïF M
(
ïïM N
$strïïN ä
)ïïä ã
;ïïã å
(
ññ 
new
ññ H
:CWE197_Numeric_Truncation_Error__double_random_to_byte_67a
ññ B
(
ññB C
)
ññC D
)
ññD E
.
ññE F
RunTest
ññF M
(
ññM N
$strññN ä
)ññä ã
;ññã å
(
óó 
new
óó H
:CWE197_Numeric_Truncation_Error__double_random_to_byte_68a
óó B
(
óóB C
)
óóC D
)
óóD E
.
óóE F
RunTest
óóF M
(
óóM N
$stróóN ä
)óóä ã
;óóã å
(
òò 
new
òò H
:CWE197_Numeric_Truncation_Error__double_random_to_byte_71a
òò B
(
òòB C
)
òòC D
)
òòD E
.
òòE F
RunTest
òòF M
(
òòM N
$stròòN ä
)òòä ã
;òòã å
(
ôô 
new
ôô H
:CWE197_Numeric_Truncation_Error__double_random_to_byte_72a
ôô B
(
ôôB C
)
ôôC D
)
ôôD E
.
ôôE F
RunTest
ôôF M
(
ôôM N
$strôôN ä
)ôôä ã
;ôôã å
(
öö 
new
öö H
:CWE197_Numeric_Truncation_Error__double_random_to_byte_73a
öö B
(
ööB C
)
ööC D
)
ööD E
.
ööE F
RunTest
ööF M
(
ööM N
$strööN ä
)ööä ã
;ööã å
(
õõ 
new
õõ H
:CWE197_Numeric_Truncation_Error__double_random_to_byte_74a
õõ B
(
õõB C
)
õõC D
)
õõD E
.
õõE F
RunTest
õõF M
(
õõM N
$strõõN ä
)õõä ã
;õõã å
(
úú 
new
úú H
:CWE197_Numeric_Truncation_Error__double_random_to_byte_75a
úú B
(
úúB C
)
úúC D
)
úúD E
.
úúE F
RunTest
úúF M
(
úúM N
$strúúN ä
)úúä ã
;úúã å
(
ùù 
new
ùù H
:CWE197_Numeric_Truncation_Error__double_random_to_byte_81a
ùù B
(
ùùB C
)
ùùC D
)
ùùD E
.
ùùE F
RunTest
ùùF M
(
ùùM N
$strùùN ä
)ùùä ã
;ùùã å
(
ûû 
new
ûû H
:CWE197_Numeric_Truncation_Error__double_random_to_float_01
ûû B
(
ûûB C
)
ûûC D
)
ûûD E
.
ûûE F
RunTest
ûûF M
(
ûûM N
$strûûN ä
)ûûä ã
;ûûã å
(
üü 
new
üü H
:CWE197_Numeric_Truncation_Error__double_random_to_float_02
üü B
(
üüB C
)
üüC D
)
üüD E
.
üüE F
RunTest
üüF M
(
üüM N
$strüüN ä
)üüä ã
;üüã å
(
†† 
new
†† H
:CWE197_Numeric_Truncation_Error__double_random_to_float_03
†† B
(
††B C
)
††C D
)
††D E
.
††E F
RunTest
††F M
(
††M N
$str††N ä
)††ä ã
;††ã å
(
°° 
new
°° H
:CWE197_Numeric_Truncation_Error__double_random_to_float_04
°° B
(
°°B C
)
°°C D
)
°°D E
.
°°E F
RunTest
°°F M
(
°°M N
$str°°N ä
)°°ä ã
;°°ã å
(
¢¢ 
new
¢¢ H
:CWE197_Numeric_Truncation_Error__double_random_to_float_05
¢¢ B
(
¢¢B C
)
¢¢C D
)
¢¢D E
.
¢¢E F
RunTest
¢¢F M
(
¢¢M N
$str¢¢N ä
)¢¢ä ã
;¢¢ã å
(
££ 
new
££ H
:CWE197_Numeric_Truncation_Error__double_random_to_float_06
££ B
(
££B C
)
££C D
)
££D E
.
££E F
RunTest
££F M
(
££M N
$str££N ä
)££ä ã
;££ã å
(
§§ 
new
§§ H
:CWE197_Numeric_Truncation_Error__double_random_to_float_07
§§ B
(
§§B C
)
§§C D
)
§§D E
.
§§E F
RunTest
§§F M
(
§§M N
$str§§N ä
)§§ä ã
;§§ã å
(
•• 
new
•• H
:CWE197_Numeric_Truncation_Error__double_random_to_float_08
•• B
(
••B C
)
••C D
)
••D E
.
••E F
RunTest
••F M
(
••M N
$str••N ä
)••ä ã
;••ã å
(
¶¶ 
new
¶¶ H
:CWE197_Numeric_Truncation_Error__double_random_to_float_09
¶¶ B
(
¶¶B C
)
¶¶C D
)
¶¶D E
.
¶¶E F
RunTest
¶¶F M
(
¶¶M N
$str¶¶N ä
)¶¶ä ã
;¶¶ã å
(
ßß 
new
ßß H
:CWE197_Numeric_Truncation_Error__double_random_to_float_10
ßß B
(
ßßB C
)
ßßC D
)
ßßD E
.
ßßE F
RunTest
ßßF M
(
ßßM N
$strßßN ä
)ßßä ã
;ßßã å
(
®® 
new
®® H
:CWE197_Numeric_Truncation_Error__double_random_to_float_11
®® B
(
®®B C
)
®®C D
)
®®D E
.
®®E F
RunTest
®®F M
(
®®M N
$str®®N ä
)®®ä ã
;®®ã å
(
©© 
new
©© H
:CWE197_Numeric_Truncation_Error__double_random_to_float_12
©© B
(
©©B C
)
©©C D
)
©©D E
.
©©E F
RunTest
©©F M
(
©©M N
$str©©N ä
)©©ä ã
;©©ã å
(
™™ 
new
™™ H
:CWE197_Numeric_Truncation_Error__double_random_to_float_13
™™ B
(
™™B C
)
™™C D
)
™™D E
.
™™E F
RunTest
™™F M
(
™™M N
$str™™N ä
)™™ä ã
;™™ã å
(
´´ 
new
´´ H
:CWE197_Numeric_Truncation_Error__double_random_to_float_14
´´ B
(
´´B C
)
´´C D
)
´´D E
.
´´E F
RunTest
´´F M
(
´´M N
$str´´N ä
)´´ä ã
;´´ã å
(
¨¨ 
new
¨¨ H
:CWE197_Numeric_Truncation_Error__double_random_to_float_15
¨¨ B
(
¨¨B C
)
¨¨C D
)
¨¨D E
.
¨¨E F
RunTest
¨¨F M
(
¨¨M N
$str¨¨N ä
)¨¨ä ã
;¨¨ã å
(
≠≠ 
new
≠≠ H
:CWE197_Numeric_Truncation_Error__double_random_to_float_16
≠≠ B
(
≠≠B C
)
≠≠C D
)
≠≠D E
.
≠≠E F
RunTest
≠≠F M
(
≠≠M N
$str≠≠N ä
)≠≠ä ã
;≠≠ã å
(
ÆÆ 
new
ÆÆ H
:CWE197_Numeric_Truncation_Error__double_random_to_float_17
ÆÆ B
(
ÆÆB C
)
ÆÆC D
)
ÆÆD E
.
ÆÆE F
RunTest
ÆÆF M
(
ÆÆM N
$strÆÆN ä
)ÆÆä ã
;ÆÆã å
(
ØØ 
new
ØØ H
:CWE197_Numeric_Truncation_Error__double_random_to_float_21
ØØ B
(
ØØB C
)
ØØC D
)
ØØD E
.
ØØE F
RunTest
ØØF M
(
ØØM N
$strØØN ä
)ØØä ã
;ØØã å
(
∞∞ 
new
∞∞ I
;CWE197_Numeric_Truncation_Error__double_random_to_float_22a
∞∞ C
(
∞∞C D
)
∞∞D E
)
∞∞E F
.
∞∞F G
RunTest
∞∞G N
(
∞∞N O
$str∞∞O å
)∞∞å ç
;∞∞ç é
(
±± 
new
±± H
:CWE197_Numeric_Truncation_Error__double_random_to_float_31
±± B
(
±±B C
)
±±C D
)
±±D E
.
±±E F
RunTest
±±F M
(
±±M N
$str±±N ä
)±±ä ã
;±±ã å
(
≤≤ 
new
≤≤ H
:CWE197_Numeric_Truncation_Error__double_random_to_float_41
≤≤ B
(
≤≤B C
)
≤≤C D
)
≤≤D E
.
≤≤E F
RunTest
≤≤F M
(
≤≤M N
$str≤≤N ä
)≤≤ä ã
;≤≤ã å
(
≥≥ 
new
≥≥ H
:CWE197_Numeric_Truncation_Error__double_random_to_float_42
≥≥ B
(
≥≥B C
)
≥≥C D
)
≥≥D E
.
≥≥E F
RunTest
≥≥F M
(
≥≥M N
$str≥≥N ä
)≥≥ä ã
;≥≥ã å
(
¥¥ 
new
¥¥ H
:CWE197_Numeric_Truncation_Error__double_random_to_float_45
¥¥ B
(
¥¥B C
)
¥¥C D
)
¥¥D E
.
¥¥E F
RunTest
¥¥F M
(
¥¥M N
$str¥¥N ä
)¥¥ä ã
;¥¥ã å
(
µµ 
new
µµ I
;CWE197_Numeric_Truncation_Error__double_random_to_float_51a
µµ C
(
µµC D
)
µµD E
)
µµE F
.
µµF G
RunTest
µµG N
(
µµN O
$strµµO å
)µµå ç
;µµç é
(
∂∂ 
new
∂∂ I
;CWE197_Numeric_Truncation_Error__double_random_to_float_52a
∂∂ C
(
∂∂C D
)
∂∂D E
)
∂∂E F
.
∂∂F G
RunTest
∂∂G N
(
∂∂N O
$str∂∂O å
)∂∂å ç
;∂∂ç é
(
∑∑ 
new
∑∑ I
;CWE197_Numeric_Truncation_Error__double_random_to_float_53a
∑∑ C
(
∑∑C D
)
∑∑D E
)
∑∑E F
.
∑∑F G
RunTest
∑∑G N
(
∑∑N O
$str∑∑O å
)∑∑å ç
;∑∑ç é
(
∏∏ 
new
∏∏ I
;CWE197_Numeric_Truncation_Error__double_random_to_float_54a
∏∏ C
(
∏∏C D
)
∏∏D E
)
∏∏E F
.
∏∏F G
RunTest
∏∏G N
(
∏∏N O
$str∏∏O å
)∏∏å ç
;∏∏ç é
(
ππ 
new
ππ I
;CWE197_Numeric_Truncation_Error__double_random_to_float_61a
ππ C
(
ππC D
)
ππD E
)
ππE F
.
ππF G
RunTest
ππG N
(
ππN O
$strππO å
)ππå ç
;ππç é
(
∫∫ 
new
∫∫ I
;CWE197_Numeric_Truncation_Error__double_random_to_float_66a
∫∫ C
(
∫∫C D
)
∫∫D E
)
∫∫E F
.
∫∫F G
RunTest
∫∫G N
(
∫∫N O
$str∫∫O å
)∫∫å ç
;∫∫ç é
(
ªª 
new
ªª I
;CWE197_Numeric_Truncation_Error__double_random_to_float_67a
ªª C
(
ªªC D
)
ªªD E
)
ªªE F
.
ªªF G
RunTest
ªªG N
(
ªªN O
$strªªO å
)ªªå ç
;ªªç é
(
ºº 
new
ºº I
;CWE197_Numeric_Truncation_Error__double_random_to_float_68a
ºº C
(
ººC D
)
ººD E
)
ººE F
.
ººF G
RunTest
ººG N
(
ººN O
$strººO å
)ººå ç
;ººç é
(
ΩΩ 
new
ΩΩ I
;CWE197_Numeric_Truncation_Error__double_random_to_float_71a
ΩΩ C
(
ΩΩC D
)
ΩΩD E
)
ΩΩE F
.
ΩΩF G
RunTest
ΩΩG N
(
ΩΩN O
$strΩΩO å
)ΩΩå ç
;ΩΩç é
(
ææ 
new
ææ I
;CWE197_Numeric_Truncation_Error__double_random_to_float_72a
ææ C
(
ææC D
)
ææD E
)
ææE F
.
ææF G
RunTest
ææG N
(
ææN O
$strææO å
)ææå ç
;ææç é
(
øø 
new
øø I
;CWE197_Numeric_Truncation_Error__double_random_to_float_73a
øø C
(
øøC D
)
øøD E
)
øøE F
.
øøF G
RunTest
øøG N
(
øøN O
$strøøO å
)øøå ç
;øøç é
(
¿¿ 
new
¿¿ I
;CWE197_Numeric_Truncation_Error__double_random_to_float_74a
¿¿ C
(
¿¿C D
)
¿¿D E
)
¿¿E F
.
¿¿F G
RunTest
¿¿G N
(
¿¿N O
$str¿¿O å
)¿¿å ç
;¿¿ç é
(
¡¡ 
new
¡¡ I
;CWE197_Numeric_Truncation_Error__double_random_to_float_75a
¡¡ C
(
¡¡C D
)
¡¡D E
)
¡¡E F
.
¡¡F G
RunTest
¡¡G N
(
¡¡N O
$str¡¡O å
)¡¡å ç
;¡¡ç é
(
¬¬ 
new
¬¬ I
;CWE197_Numeric_Truncation_Error__double_random_to_float_81a
¬¬ C
(
¬¬C D
)
¬¬D E
)
¬¬E F
.
¬¬F G
RunTest
¬¬G N
(
¬¬N O
$str¬¬O å
)¬¬å ç
;¬¬ç é
(
√√ 
new
√√ F
8CWE197_Numeric_Truncation_Error__double_random_to_int_01
√√ @
(
√√@ A
)
√√A B
)
√√B C
.
√√C D
RunTest
√√D K
(
√√K L
$str√√L Ü
)√√Ü á
;√√á à
(
ƒƒ 
new
ƒƒ F
8CWE197_Numeric_Truncation_Error__double_random_to_int_02
ƒƒ @
(
ƒƒ@ A
)
ƒƒA B
)
ƒƒB C
.
ƒƒC D
RunTest
ƒƒD K
(
ƒƒK L
$strƒƒL Ü
)ƒƒÜ á
;ƒƒá à
(
≈≈ 
new
≈≈ F
8CWE197_Numeric_Truncation_Error__double_random_to_int_03
≈≈ @
(
≈≈@ A
)
≈≈A B
)
≈≈B C
.
≈≈C D
RunTest
≈≈D K
(
≈≈K L
$str≈≈L Ü
)≈≈Ü á
;≈≈á à
(
∆∆ 
new
∆∆ F
8CWE197_Numeric_Truncation_Error__double_random_to_int_04
∆∆ @
(
∆∆@ A
)
∆∆A B
)
∆∆B C
.
∆∆C D
RunTest
∆∆D K
(
∆∆K L
$str∆∆L Ü
)∆∆Ü á
;∆∆á à
(
«« 
new
«« F
8CWE197_Numeric_Truncation_Error__double_random_to_int_05
«« @
(
««@ A
)
««A B
)
««B C
.
««C D
RunTest
««D K
(
««K L
$str««L Ü
)««Ü á
;««á à
(
»» 
new
»» F
8CWE197_Numeric_Truncation_Error__double_random_to_int_06
»» @
(
»»@ A
)
»»A B
)
»»B C
.
»»C D
RunTest
»»D K
(
»»K L
$str»»L Ü
)»»Ü á
;»»á à
(
…… 
new
…… F
8CWE197_Numeric_Truncation_Error__double_random_to_int_07
…… @
(
……@ A
)
……A B
)
……B C
.
……C D
RunTest
……D K
(
……K L
$str……L Ü
)……Ü á
;……á à
(
   
new
   F
8CWE197_Numeric_Truncation_Error__double_random_to_int_08
   @
(
  @ A
)
  A B
)
  B C
.
  C D
RunTest
  D K
(
  K L
$str  L Ü
)  Ü á
;  á à
(
ÀÀ 
new
ÀÀ F
8CWE197_Numeric_Truncation_Error__double_random_to_int_09
ÀÀ @
(
ÀÀ@ A
)
ÀÀA B
)
ÀÀB C
.
ÀÀC D
RunTest
ÀÀD K
(
ÀÀK L
$strÀÀL Ü
)ÀÀÜ á
;ÀÀá à
(
ÃÃ 
new
ÃÃ F
8CWE197_Numeric_Truncation_Error__double_random_to_int_10
ÃÃ @
(
ÃÃ@ A
)
ÃÃA B
)
ÃÃB C
.
ÃÃC D
RunTest
ÃÃD K
(
ÃÃK L
$strÃÃL Ü
)ÃÃÜ á
;ÃÃá à
(
ÕÕ 
new
ÕÕ F
8CWE197_Numeric_Truncation_Error__double_random_to_int_11
ÕÕ @
(
ÕÕ@ A
)
ÕÕA B
)
ÕÕB C
.
ÕÕC D
RunTest
ÕÕD K
(
ÕÕK L
$strÕÕL Ü
)ÕÕÜ á
;ÕÕá à
(
ŒŒ 
new
ŒŒ F
8CWE197_Numeric_Truncation_Error__double_random_to_int_12
ŒŒ @
(
ŒŒ@ A
)
ŒŒA B
)
ŒŒB C
.
ŒŒC D
RunTest
ŒŒD K
(
ŒŒK L
$strŒŒL Ü
)ŒŒÜ á
;ŒŒá à
(
œœ 
new
œœ F
8CWE197_Numeric_Truncation_Error__double_random_to_int_13
œœ @
(
œœ@ A
)
œœA B
)
œœB C
.
œœC D
RunTest
œœD K
(
œœK L
$strœœL Ü
)œœÜ á
;œœá à
(
–– 
new
–– F
8CWE197_Numeric_Truncation_Error__double_random_to_int_14
–– @
(
––@ A
)
––A B
)
––B C
.
––C D
RunTest
––D K
(
––K L
$str––L Ü
)––Ü á
;––á à
(
—— 
new
—— F
8CWE197_Numeric_Truncation_Error__double_random_to_int_15
—— @
(
——@ A
)
——A B
)
——B C
.
——C D
RunTest
——D K
(
——K L
$str——L Ü
)——Ü á
;——á à
(
““ 
new
““ F
8CWE197_Numeric_Truncation_Error__double_random_to_int_16
““ @
(
““@ A
)
““A B
)
““B C
.
““C D
RunTest
““D K
(
““K L
$str““L Ü
)““Ü á
;““á à
(
”” 
new
”” F
8CWE197_Numeric_Truncation_Error__double_random_to_int_17
”” @
(
””@ A
)
””A B
)
””B C
.
””C D
RunTest
””D K
(
””K L
$str””L Ü
)””Ü á
;””á à
(
‘‘ 
new
‘‘ F
8CWE197_Numeric_Truncation_Error__double_random_to_int_21
‘‘ @
(
‘‘@ A
)
‘‘A B
)
‘‘B C
.
‘‘C D
RunTest
‘‘D K
(
‘‘K L
$str‘‘L Ü
)‘‘Ü á
;‘‘á à
(
’’ 
new
’’ G
9CWE197_Numeric_Truncation_Error__double_random_to_int_22a
’’ A
(
’’A B
)
’’B C
)
’’C D
.
’’D E
RunTest
’’E L
(
’’L M
$str’’M à
)’’à â
;’’â ä
(
÷÷ 
new
÷÷ F
8CWE197_Numeric_Truncation_Error__double_random_to_int_31
÷÷ @
(
÷÷@ A
)
÷÷A B
)
÷÷B C
.
÷÷C D
RunTest
÷÷D K
(
÷÷K L
$str÷÷L Ü
)÷÷Ü á
;÷÷á à
(
◊◊ 
new
◊◊ F
8CWE197_Numeric_Truncation_Error__double_random_to_int_41
◊◊ @
(
◊◊@ A
)
◊◊A B
)
◊◊B C
.
◊◊C D
RunTest
◊◊D K
(
◊◊K L
$str◊◊L Ü
)◊◊Ü á
;◊◊á à
(
ÿÿ 
new
ÿÿ F
8CWE197_Numeric_Truncation_Error__double_random_to_int_42
ÿÿ @
(
ÿÿ@ A
)
ÿÿA B
)
ÿÿB C
.
ÿÿC D
RunTest
ÿÿD K
(
ÿÿK L
$strÿÿL Ü
)ÿÿÜ á
;ÿÿá à
(
ŸŸ 
new
ŸŸ F
8CWE197_Numeric_Truncation_Error__double_random_to_int_45
ŸŸ @
(
ŸŸ@ A
)
ŸŸA B
)
ŸŸB C
.
ŸŸC D
RunTest
ŸŸD K
(
ŸŸK L
$strŸŸL Ü
)ŸŸÜ á
;ŸŸá à
(
⁄⁄ 
new
⁄⁄ G
9CWE197_Numeric_Truncation_Error__double_random_to_int_51a
⁄⁄ A
(
⁄⁄A B
)
⁄⁄B C
)
⁄⁄C D
.
⁄⁄D E
RunTest
⁄⁄E L
(
⁄⁄L M
$str⁄⁄M à
)⁄⁄à â
;⁄⁄â ä
(
€€ 
new
€€ G
9CWE197_Numeric_Truncation_Error__double_random_to_int_52a
€€ A
(
€€A B
)
€€B C
)
€€C D
.
€€D E
RunTest
€€E L
(
€€L M
$str€€M à
)€€à â
;€€â ä
(
‹‹ 
new
‹‹ G
9CWE197_Numeric_Truncation_Error__double_random_to_int_53a
‹‹ A
(
‹‹A B
)
‹‹B C
)
‹‹C D
.
‹‹D E
RunTest
‹‹E L
(
‹‹L M
$str‹‹M à
)‹‹à â
;‹‹â ä
(
›› 
new
›› G
9CWE197_Numeric_Truncation_Error__double_random_to_int_54a
›› A
(
››A B
)
››B C
)
››C D
.
››D E
RunTest
››E L
(
››L M
$str››M à
)››à â
;››â ä
(
ﬁﬁ 
new
ﬁﬁ G
9CWE197_Numeric_Truncation_Error__double_random_to_int_61a
ﬁﬁ A
(
ﬁﬁA B
)
ﬁﬁB C
)
ﬁﬁC D
.
ﬁﬁD E
RunTest
ﬁﬁE L
(
ﬁﬁL M
$strﬁﬁM à
)ﬁﬁà â
;ﬁﬁâ ä
(
ﬂﬂ 
new
ﬂﬂ G
9CWE197_Numeric_Truncation_Error__double_random_to_int_66a
ﬂﬂ A
(
ﬂﬂA B
)
ﬂﬂB C
)
ﬂﬂC D
.
ﬂﬂD E
RunTest
ﬂﬂE L
(
ﬂﬂL M
$strﬂﬂM à
)ﬂﬂà â
;ﬂﬂâ ä
(
‡‡ 
new
‡‡ G
9CWE197_Numeric_Truncation_Error__double_random_to_int_67a
‡‡ A
(
‡‡A B
)
‡‡B C
)
‡‡C D
.
‡‡D E
RunTest
‡‡E L
(
‡‡L M
$str‡‡M à
)‡‡à â
;‡‡â ä
(
·· 
new
·· G
9CWE197_Numeric_Truncation_Error__double_random_to_int_68a
·· A
(
··A B
)
··B C
)
··C D
.
··D E
RunTest
··E L
(
··L M
$str··M à
)··à â
;··â ä
(
‚‚ 
new
‚‚ G
9CWE197_Numeric_Truncation_Error__double_random_to_int_71a
‚‚ A
(
‚‚A B
)
‚‚B C
)
‚‚C D
.
‚‚D E
RunTest
‚‚E L
(
‚‚L M
$str‚‚M à
)‚‚à â
;‚‚â ä
(
„„ 
new
„„ G
9CWE197_Numeric_Truncation_Error__double_random_to_int_72a
„„ A
(
„„A B
)
„„B C
)
„„C D
.
„„D E
RunTest
„„E L
(
„„L M
$str„„M à
)„„à â
;„„â ä
(
‰‰ 
new
‰‰ G
9CWE197_Numeric_Truncation_Error__double_random_to_int_73a
‰‰ A
(
‰‰A B
)
‰‰B C
)
‰‰C D
.
‰‰D E
RunTest
‰‰E L
(
‰‰L M
$str‰‰M à
)‰‰à â
;‰‰â ä
(
ÂÂ 
new
ÂÂ G
9CWE197_Numeric_Truncation_Error__double_random_to_int_74a
ÂÂ A
(
ÂÂA B
)
ÂÂB C
)
ÂÂC D
.
ÂÂD E
RunTest
ÂÂE L
(
ÂÂL M
$strÂÂM à
)ÂÂà â
;ÂÂâ ä
(
ÊÊ 
new
ÊÊ G
9CWE197_Numeric_Truncation_Error__double_random_to_int_75a
ÊÊ A
(
ÊÊA B
)
ÊÊB C
)
ÊÊC D
.
ÊÊD E
RunTest
ÊÊE L
(
ÊÊL M
$strÊÊM à
)ÊÊà â
;ÊÊâ ä
(
ÁÁ 
new
ÁÁ G
9CWE197_Numeric_Truncation_Error__double_random_to_int_81a
ÁÁ A
(
ÁÁA B
)
ÁÁB C
)
ÁÁC D
.
ÁÁD E
RunTest
ÁÁE L
(
ÁÁL M
$strÁÁM à
)ÁÁà â
;ÁÁâ ä
(
ËË 
new
ËË G
9CWE197_Numeric_Truncation_Error__double_random_to_long_01
ËË A
(
ËËA B
)
ËËB C
)
ËËC D
.
ËËD E
RunTest
ËËE L
(
ËËL M
$strËËM à
)ËËà â
;ËËâ ä
(
ÈÈ 
new
ÈÈ G
9CWE197_Numeric_Truncation_Error__double_random_to_long_02
ÈÈ A
(
ÈÈA B
)
ÈÈB C
)
ÈÈC D
.
ÈÈD E
RunTest
ÈÈE L
(
ÈÈL M
$strÈÈM à
)ÈÈà â
;ÈÈâ ä
(
ÍÍ 
new
ÍÍ G
9CWE197_Numeric_Truncation_Error__double_random_to_long_03
ÍÍ A
(
ÍÍA B
)
ÍÍB C
)
ÍÍC D
.
ÍÍD E
RunTest
ÍÍE L
(
ÍÍL M
$strÍÍM à
)ÍÍà â
;ÍÍâ ä
(
ÎÎ 
new
ÎÎ G
9CWE197_Numeric_Truncation_Error__double_random_to_long_04
ÎÎ A
(
ÎÎA B
)
ÎÎB C
)
ÎÎC D
.
ÎÎD E
RunTest
ÎÎE L
(
ÎÎL M
$strÎÎM à
)ÎÎà â
;ÎÎâ ä
(
ÏÏ 
new
ÏÏ G
9CWE197_Numeric_Truncation_Error__double_random_to_long_05
ÏÏ A
(
ÏÏA B
)
ÏÏB C
)
ÏÏC D
.
ÏÏD E
RunTest
ÏÏE L
(
ÏÏL M
$strÏÏM à
)ÏÏà â
;ÏÏâ ä
(
ÌÌ 
new
ÌÌ G
9CWE197_Numeric_Truncation_Error__double_random_to_long_06
ÌÌ A
(
ÌÌA B
)
ÌÌB C
)
ÌÌC D
.
ÌÌD E
RunTest
ÌÌE L
(
ÌÌL M
$strÌÌM à
)ÌÌà â
;ÌÌâ ä
(
ÓÓ 
new
ÓÓ G
9CWE197_Numeric_Truncation_Error__double_random_to_long_07
ÓÓ A
(
ÓÓA B
)
ÓÓB C
)
ÓÓC D
.
ÓÓD E
RunTest
ÓÓE L
(
ÓÓL M
$strÓÓM à
)ÓÓà â
;ÓÓâ ä
(
ÔÔ 
new
ÔÔ G
9CWE197_Numeric_Truncation_Error__double_random_to_long_08
ÔÔ A
(
ÔÔA B
)
ÔÔB C
)
ÔÔC D
.
ÔÔD E
RunTest
ÔÔE L
(
ÔÔL M
$strÔÔM à
)ÔÔà â
;ÔÔâ ä
(
 
new
 G
9CWE197_Numeric_Truncation_Error__double_random_to_long_09
 A
(
A B
)
B C
)
C D
.
D E
RunTest
E L
(
L M
$strM à
)à â
;â ä
(
ÒÒ 
new
ÒÒ G
9CWE197_Numeric_Truncation_Error__double_random_to_long_10
ÒÒ A
(
ÒÒA B
)
ÒÒB C
)
ÒÒC D
.
ÒÒD E
RunTest
ÒÒE L
(
ÒÒL M
$strÒÒM à
)ÒÒà â
;ÒÒâ ä
(
ÚÚ 
new
ÚÚ G
9CWE197_Numeric_Truncation_Error__double_random_to_long_11
ÚÚ A
(
ÚÚA B
)
ÚÚB C
)
ÚÚC D
.
ÚÚD E
RunTest
ÚÚE L
(
ÚÚL M
$strÚÚM à
)ÚÚà â
;ÚÚâ ä
(
ÛÛ 
new
ÛÛ G
9CWE197_Numeric_Truncation_Error__double_random_to_long_12
ÛÛ A
(
ÛÛA B
)
ÛÛB C
)
ÛÛC D
.
ÛÛD E
RunTest
ÛÛE L
(
ÛÛL M
$strÛÛM à
)ÛÛà â
;ÛÛâ ä
(
ÙÙ 
new
ÙÙ G
9CWE197_Numeric_Truncation_Error__double_random_to_long_13
ÙÙ A
(
ÙÙA B
)
ÙÙB C
)
ÙÙC D
.
ÙÙD E
RunTest
ÙÙE L
(
ÙÙL M
$strÙÙM à
)ÙÙà â
;ÙÙâ ä
(
ıı 
new
ıı G
9CWE197_Numeric_Truncation_Error__double_random_to_long_14
ıı A
(
ııA B
)
ııB C
)
ııC D
.
ııD E
RunTest
ııE L
(
ııL M
$strııM à
)ııà â
;ııâ ä
(
ˆˆ 
new
ˆˆ G
9CWE197_Numeric_Truncation_Error__double_random_to_long_15
ˆˆ A
(
ˆˆA B
)
ˆˆB C
)
ˆˆC D
.
ˆˆD E
RunTest
ˆˆE L
(
ˆˆL M
$strˆˆM à
)ˆˆà â
;ˆˆâ ä
(
˜˜ 
new
˜˜ G
9CWE197_Numeric_Truncation_Error__double_random_to_long_16
˜˜ A
(
˜˜A B
)
˜˜B C
)
˜˜C D
.
˜˜D E
RunTest
˜˜E L
(
˜˜L M
$str˜˜M à
)˜˜à â
;˜˜â ä
(
¯¯ 
new
¯¯ G
9CWE197_Numeric_Truncation_Error__double_random_to_long_17
¯¯ A
(
¯¯A B
)
¯¯B C
)
¯¯C D
.
¯¯D E
RunTest
¯¯E L
(
¯¯L M
$str¯¯M à
)¯¯à â
;¯¯â ä
(
˘˘ 
new
˘˘ G
9CWE197_Numeric_Truncation_Error__double_random_to_long_21
˘˘ A
(
˘˘A B
)
˘˘B C
)
˘˘C D
.
˘˘D E
RunTest
˘˘E L
(
˘˘L M
$str˘˘M à
)˘˘à â
;˘˘â ä
(
˙˙ 
new
˙˙ H
:CWE197_Numeric_Truncation_Error__double_random_to_long_22a
˙˙ B
(
˙˙B C
)
˙˙C D
)
˙˙D E
.
˙˙E F
RunTest
˙˙F M
(
˙˙M N
$str˙˙N ä
)˙˙ä ã
;˙˙ã å
(
˚˚ 
new
˚˚ G
9CWE197_Numeric_Truncation_Error__double_random_to_long_31
˚˚ A
(
˚˚A B
)
˚˚B C
)
˚˚C D
.
˚˚D E
RunTest
˚˚E L
(
˚˚L M
$str˚˚M à
)˚˚à â
;˚˚â ä
(
¸¸ 
new
¸¸ G
9CWE197_Numeric_Truncation_Error__double_random_to_long_41
¸¸ A
(
¸¸A B
)
¸¸B C
)
¸¸C D
.
¸¸D E
RunTest
¸¸E L
(
¸¸L M
$str¸¸M à
)¸¸à â
;¸¸â ä
(
˝˝ 
new
˝˝ G
9CWE197_Numeric_Truncation_Error__double_random_to_long_42
˝˝ A
(
˝˝A B
)
˝˝B C
)
˝˝C D
.
˝˝D E
RunTest
˝˝E L
(
˝˝L M
$str˝˝M à
)˝˝à â
;˝˝â ä
(
˛˛ 
new
˛˛ G
9CWE197_Numeric_Truncation_Error__double_random_to_long_45
˛˛ A
(
˛˛A B
)
˛˛B C
)
˛˛C D
.
˛˛D E
RunTest
˛˛E L
(
˛˛L M
$str˛˛M à
)˛˛à â
;˛˛â ä
(
ˇˇ 
new
ˇˇ H
:CWE197_Numeric_Truncation_Error__double_random_to_long_51a
ˇˇ B
(
ˇˇB C
)
ˇˇC D
)
ˇˇD E
.
ˇˇE F
RunTest
ˇˇF M
(
ˇˇM N
$strˇˇN ä
)ˇˇä ã
;ˇˇã å
(
ÄÄ 
new
ÄÄ H
:CWE197_Numeric_Truncation_Error__double_random_to_long_52a
ÄÄ B
(
ÄÄB C
)
ÄÄC D
)
ÄÄD E
.
ÄÄE F
RunTest
ÄÄF M
(
ÄÄM N
$strÄÄN ä
)ÄÄä ã
;ÄÄã å
(
ÅÅ 
new
ÅÅ H
:CWE197_Numeric_Truncation_Error__double_random_to_long_53a
ÅÅ B
(
ÅÅB C
)
ÅÅC D
)
ÅÅD E
.
ÅÅE F
RunTest
ÅÅF M
(
ÅÅM N
$strÅÅN ä
)ÅÅä ã
;ÅÅã å
(
ÇÇ 
new
ÇÇ H
:CWE197_Numeric_Truncation_Error__double_random_to_long_54a
ÇÇ B
(
ÇÇB C
)
ÇÇC D
)
ÇÇD E
.
ÇÇE F
RunTest
ÇÇF M
(
ÇÇM N
$strÇÇN ä
)ÇÇä ã
;ÇÇã å
(
ÉÉ 
new
ÉÉ H
:CWE197_Numeric_Truncation_Error__double_random_to_long_61a
ÉÉ B
(
ÉÉB C
)
ÉÉC D
)
ÉÉD E
.
ÉÉE F
RunTest
ÉÉF M
(
ÉÉM N
$strÉÉN ä
)ÉÉä ã
;ÉÉã å
(
ÑÑ 
new
ÑÑ H
:CWE197_Numeric_Truncation_Error__double_random_to_long_66a
ÑÑ B
(
ÑÑB C
)
ÑÑC D
)
ÑÑD E
.
ÑÑE F
RunTest
ÑÑF M
(
ÑÑM N
$strÑÑN ä
)ÑÑä ã
;ÑÑã å
(
ÖÖ 
new
ÖÖ H
:CWE197_Numeric_Truncation_Error__double_random_to_long_67a
ÖÖ B
(
ÖÖB C
)
ÖÖC D
)
ÖÖD E
.
ÖÖE F
RunTest
ÖÖF M
(
ÖÖM N
$strÖÖN ä
)ÖÖä ã
;ÖÖã å
(
ÜÜ 
new
ÜÜ H
:CWE197_Numeric_Truncation_Error__double_random_to_long_68a
ÜÜ B
(
ÜÜB C
)
ÜÜC D
)
ÜÜD E
.
ÜÜE F
RunTest
ÜÜF M
(
ÜÜM N
$strÜÜN ä
)ÜÜä ã
;ÜÜã å
(
áá 
new
áá H
:CWE197_Numeric_Truncation_Error__double_random_to_long_71a
áá B
(
ááB C
)
ááC D
)
ááD E
.
ááE F
RunTest
ááF M
(
ááM N
$strááN ä
)ááä ã
;ááã å
(
àà 
new
àà H
:CWE197_Numeric_Truncation_Error__double_random_to_long_72a
àà B
(
ààB C
)
ààC D
)
ààD E
.
ààE F
RunTest
ààF M
(
ààM N
$strààN ä
)ààä ã
;ààã å
(
ââ 
new
ââ H
:CWE197_Numeric_Truncation_Error__double_random_to_long_73a
ââ B
(
ââB C
)
ââC D
)
ââD E
.
ââE F
RunTest
ââF M
(
ââM N
$strââN ä
)ââä ã
;ââã å
(
ää 
new
ää H
:CWE197_Numeric_Truncation_Error__double_random_to_long_74a
ää B
(
ääB C
)
ääC D
)
ääD E
.
ääE F
RunTest
ääF M
(
ääM N
$strääN ä
)äää ã
;ääã å
(
ãã 
new
ãã H
:CWE197_Numeric_Truncation_Error__double_random_to_long_75a
ãã B
(
ããB C
)
ããC D
)
ããD E
.
ããE F
RunTest
ããF M
(
ããM N
$strããN ä
)ããä ã
;ããã å
(
åå 
new
åå H
:CWE197_Numeric_Truncation_Error__double_random_to_long_81a
åå B
(
ååB C
)
ååC D
)
ååD E
.
ååE F
RunTest
ååF M
(
ååM N
$strååN ä
)ååä ã
;ååã å
(
çç 
new
çç H
:CWE197_Numeric_Truncation_Error__double_random_to_short_01
çç B
(
ççB C
)
ççC D
)
ççD E
.
ççE F
RunTest
ççF M
(
ççM N
$strççN ä
)ççä ã
;ççã å
(
éé 
new
éé H
:CWE197_Numeric_Truncation_Error__double_random_to_short_02
éé B
(
ééB C
)
ééC D
)
ééD E
.
ééE F
RunTest
ééF M
(
ééM N
$strééN ä
)ééä ã
;ééã å
(
èè 
new
èè H
:CWE197_Numeric_Truncation_Error__double_random_to_short_03
èè B
(
èèB C
)
èèC D
)
èèD E
.
èèE F
RunTest
èèF M
(
èèM N
$strèèN ä
)èèä ã
;èèã å
(
êê 
new
êê H
:CWE197_Numeric_Truncation_Error__double_random_to_short_04
êê B
(
êêB C
)
êêC D
)
êêD E
.
êêE F
RunTest
êêF M
(
êêM N
$strêêN ä
)êêä ã
;êêã å
(
ëë 
new
ëë H
:CWE197_Numeric_Truncation_Error__double_random_to_short_05
ëë B
(
ëëB C
)
ëëC D
)
ëëD E
.
ëëE F
RunTest
ëëF M
(
ëëM N
$strëëN ä
)ëëä ã
;ëëã å
(
íí 
new
íí H
:CWE197_Numeric_Truncation_Error__double_random_to_short_06
íí B
(
ííB C
)
ííC D
)
ííD E
.
ííE F
RunTest
ííF M
(
ííM N
$strííN ä
)ííä ã
;ííã å
(
ìì 
new
ìì H
:CWE197_Numeric_Truncation_Error__double_random_to_short_07
ìì B
(
ììB C
)
ììC D
)
ììD E
.
ììE F
RunTest
ììF M
(
ììM N
$strììN ä
)ììä ã
;ììã å
(
îî 
new
îî H
:CWE197_Numeric_Truncation_Error__double_random_to_short_08
îî B
(
îîB C
)
îîC D
)
îîD E
.
îîE F
RunTest
îîF M
(
îîM N
$strîîN ä
)îîä ã
;îîã å
(
ïï 
new
ïï H
:CWE197_Numeric_Truncation_Error__double_random_to_short_09
ïï B
(
ïïB C
)
ïïC D
)
ïïD E
.
ïïE F
RunTest
ïïF M
(
ïïM N
$strïïN ä
)ïïä ã
;ïïã å
(
ññ 
new
ññ H
:CWE197_Numeric_Truncation_Error__double_random_to_short_10
ññ B
(
ññB C
)
ññC D
)
ññD E
.
ññE F
RunTest
ññF M
(
ññM N
$strññN ä
)ññä ã
;ññã å
(
óó 
new
óó H
:CWE197_Numeric_Truncation_Error__double_random_to_short_11
óó B
(
óóB C
)
óóC D
)
óóD E
.
óóE F
RunTest
óóF M
(
óóM N
$stróóN ä
)óóä ã
;óóã å
(
òò 
new
òò H
:CWE197_Numeric_Truncation_Error__double_random_to_short_12
òò B
(
òòB C
)
òòC D
)
òòD E
.
òòE F
RunTest
òòF M
(
òòM N
$stròòN ä
)òòä ã
;òòã å
(
ôô 
new
ôô H
:CWE197_Numeric_Truncation_Error__double_random_to_short_13
ôô B
(
ôôB C
)
ôôC D
)
ôôD E
.
ôôE F
RunTest
ôôF M
(
ôôM N
$strôôN ä
)ôôä ã
;ôôã å
(
öö 
new
öö H
:CWE197_Numeric_Truncation_Error__double_random_to_short_14
öö B
(
ööB C
)
ööC D
)
ööD E
.
ööE F
RunTest
ööF M
(
ööM N
$strööN ä
)ööä ã
;ööã å
(
õõ 
new
õõ H
:CWE197_Numeric_Truncation_Error__double_random_to_short_15
õõ B
(
õõB C
)
õõC D
)
õõD E
.
õõE F
RunTest
õõF M
(
õõM N
$strõõN ä
)õõä ã
;õõã å
(
úú 
new
úú H
:CWE197_Numeric_Truncation_Error__double_random_to_short_16
úú B
(
úúB C
)
úúC D
)
úúD E
.
úúE F
RunTest
úúF M
(
úúM N
$strúúN ä
)úúä ã
;úúã å
(
ùù 
new
ùù H
:CWE197_Numeric_Truncation_Error__double_random_to_short_17
ùù B
(
ùùB C
)
ùùC D
)
ùùD E
.
ùùE F
RunTest
ùùF M
(
ùùM N
$strùùN ä
)ùùä ã
;ùùã å
(
ûû 
new
ûû H
:CWE197_Numeric_Truncation_Error__double_random_to_short_21
ûû B
(
ûûB C
)
ûûC D
)
ûûD E
.
ûûE F
RunTest
ûûF M
(
ûûM N
$strûûN ä
)ûûä ã
;ûûã å
(
üü 
new
üü I
;CWE197_Numeric_Truncation_Error__double_random_to_short_22a
üü C
(
üüC D
)
üüD E
)
üüE F
.
üüF G
RunTest
üüG N
(
üüN O
$strüüO å
)üüå ç
;üüç é
(
†† 
new
†† H
:CWE197_Numeric_Truncation_Error__double_random_to_short_31
†† B
(
††B C
)
††C D
)
††D E
.
††E F
RunTest
††F M
(
††M N
$str††N ä
)††ä ã
;††ã å
(
°° 
new
°° H
:CWE197_Numeric_Truncation_Error__double_random_to_short_41
°° B
(
°°B C
)
°°C D
)
°°D E
.
°°E F
RunTest
°°F M
(
°°M N
$str°°N ä
)°°ä ã
;°°ã å
(
¢¢ 
new
¢¢ H
:CWE197_Numeric_Truncation_Error__double_random_to_short_42
¢¢ B
(
¢¢B C
)
¢¢C D
)
¢¢D E
.
¢¢E F
RunTest
¢¢F M
(
¢¢M N
$str¢¢N ä
)¢¢ä ã
;¢¢ã å
(
££ 
new
££ H
:CWE197_Numeric_Truncation_Error__double_random_to_short_45
££ B
(
££B C
)
££C D
)
££D E
.
££E F
RunTest
££F M
(
££M N
$str££N ä
)££ä ã
;££ã å
(
§§ 
new
§§ I
;CWE197_Numeric_Truncation_Error__double_random_to_short_51a
§§ C
(
§§C D
)
§§D E
)
§§E F
.
§§F G
RunTest
§§G N
(
§§N O
$str§§O å
)§§å ç
;§§ç é
(
•• 
new
•• I
;CWE197_Numeric_Truncation_Error__double_random_to_short_52a
•• C
(
••C D
)
••D E
)
••E F
.
••F G
RunTest
••G N
(
••N O
$str••O å
)••å ç
;••ç é
(
¶¶ 
new
¶¶ I
;CWE197_Numeric_Truncation_Error__double_random_to_short_53a
¶¶ C
(
¶¶C D
)
¶¶D E
)
¶¶E F
.
¶¶F G
RunTest
¶¶G N
(
¶¶N O
$str¶¶O å
)¶¶å ç
;¶¶ç é
(
ßß 
new
ßß I
;CWE197_Numeric_Truncation_Error__double_random_to_short_54a
ßß C
(
ßßC D
)
ßßD E
)
ßßE F
.
ßßF G
RunTest
ßßG N
(
ßßN O
$strßßO å
)ßßå ç
;ßßç é
(
®® 
new
®® I
;CWE197_Numeric_Truncation_Error__double_random_to_short_61a
®® C
(
®®C D
)
®®D E
)
®®E F
.
®®F G
RunTest
®®G N
(
®®N O
$str®®O å
)®®å ç
;®®ç é
(
©© 
new
©© I
;CWE197_Numeric_Truncation_Error__double_random_to_short_66a
©© C
(
©©C D
)
©©D E
)
©©E F
.
©©F G
RunTest
©©G N
(
©©N O
$str©©O å
)©©å ç
;©©ç é
(
™™ 
new
™™ I
;CWE197_Numeric_Truncation_Error__double_random_to_short_67a
™™ C
(
™™C D
)
™™D E
)
™™E F
.
™™F G
RunTest
™™G N
(
™™N O
$str™™O å
)™™å ç
;™™ç é
(
´´ 
new
´´ I
;CWE197_Numeric_Truncation_Error__double_random_to_short_68a
´´ C
(
´´C D
)
´´D E
)
´´E F
.
´´F G
RunTest
´´G N
(
´´N O
$str´´O å
)´´å ç
;´´ç é
(
¨¨ 
new
¨¨ I
;CWE197_Numeric_Truncation_Error__double_random_to_short_71a
¨¨ C
(
¨¨C D
)
¨¨D E
)
¨¨E F
.
¨¨F G
RunTest
¨¨G N
(
¨¨N O
$str¨¨O å
)¨¨å ç
;¨¨ç é
(
≠≠ 
new
≠≠ I
;CWE197_Numeric_Truncation_Error__double_random_to_short_72a
≠≠ C
(
≠≠C D
)
≠≠D E
)
≠≠E F
.
≠≠F G
RunTest
≠≠G N
(
≠≠N O
$str≠≠O å
)≠≠å ç
;≠≠ç é
(
ÆÆ 
new
ÆÆ I
;CWE197_Numeric_Truncation_Error__double_random_to_short_73a
ÆÆ C
(
ÆÆC D
)
ÆÆD E
)
ÆÆE F
.
ÆÆF G
RunTest
ÆÆG N
(
ÆÆN O
$strÆÆO å
)ÆÆå ç
;ÆÆç é
(
ØØ 
new
ØØ I
;CWE197_Numeric_Truncation_Error__double_random_to_short_74a
ØØ C
(
ØØC D
)
ØØD E
)
ØØE F
.
ØØF G
RunTest
ØØG N
(
ØØN O
$strØØO å
)ØØå ç
;ØØç é
(
∞∞ 
new
∞∞ I
;CWE197_Numeric_Truncation_Error__double_random_to_short_75a
∞∞ C
(
∞∞C D
)
∞∞D E
)
∞∞E F
.
∞∞F G
RunTest
∞∞G N
(
∞∞N O
$str∞∞O å
)∞∞å ç
;∞∞ç é
(
±± 
new
±± I
;CWE197_Numeric_Truncation_Error__double_random_to_short_81a
±± C
(
±±C D
)
±±D E
)
±±E F
.
±±F G
RunTest
±±G N
(
±±N O
$str±±O å
)±±å ç
;±±ç é
(
≤≤ 
new
≤≤ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_01
≤≤ E
(
≤≤E F
)
≤≤F G
)
≤≤G H
.
≤≤H I
RunTest
≤≤I P
(
≤≤P Q
$str≤≤Q ê
)≤≤ê ë
;≤≤ë í
(
≥≥ 
new
≥≥ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_02
≥≥ E
(
≥≥E F
)
≥≥F G
)
≥≥G H
.
≥≥H I
RunTest
≥≥I P
(
≥≥P Q
$str≥≥Q ê
)≥≥ê ë
;≥≥ë í
(
¥¥ 
new
¥¥ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_03
¥¥ E
(
¥¥E F
)
¥¥F G
)
¥¥G H
.
¥¥H I
RunTest
¥¥I P
(
¥¥P Q
$str¥¥Q ê
)¥¥ê ë
;¥¥ë í
(
µµ 
new
µµ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_04
µµ E
(
µµE F
)
µµF G
)
µµG H
.
µµH I
RunTest
µµI P
(
µµP Q
$strµµQ ê
)µµê ë
;µµë í
(
∂∂ 
new
∂∂ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_05
∂∂ E
(
∂∂E F
)
∂∂F G
)
∂∂G H
.
∂∂H I
RunTest
∂∂I P
(
∂∂P Q
$str∂∂Q ê
)∂∂ê ë
;∂∂ë í
(
∑∑ 
new
∑∑ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_06
∑∑ E
(
∑∑E F
)
∑∑F G
)
∑∑G H
.
∑∑H I
RunTest
∑∑I P
(
∑∑P Q
$str∑∑Q ê
)∑∑ê ë
;∑∑ë í
(
∏∏ 
new
∏∏ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_07
∏∏ E
(
∏∏E F
)
∏∏F G
)
∏∏G H
.
∏∏H I
RunTest
∏∏I P
(
∏∏P Q
$str∏∏Q ê
)∏∏ê ë
;∏∏ë í
(
ππ 
new
ππ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_08
ππ E
(
ππE F
)
ππF G
)
ππG H
.
ππH I
RunTest
ππI P
(
ππP Q
$strππQ ê
)ππê ë
;ππë í
(
∫∫ 
new
∫∫ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_09
∫∫ E
(
∫∫E F
)
∫∫F G
)
∫∫G H
.
∫∫H I
RunTest
∫∫I P
(
∫∫P Q
$str∫∫Q ê
)∫∫ê ë
;∫∫ë í
(
ªª 
new
ªª K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_10
ªª E
(
ªªE F
)
ªªF G
)
ªªG H
.
ªªH I
RunTest
ªªI P
(
ªªP Q
$strªªQ ê
)ªªê ë
;ªªë í
(
ºº 
new
ºº K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_11
ºº E
(
ººE F
)
ººF G
)
ººG H
.
ººH I
RunTest
ººI P
(
ººP Q
$strººQ ê
)ººê ë
;ººë í
(
ΩΩ 
new
ΩΩ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_12
ΩΩ E
(
ΩΩE F
)
ΩΩF G
)
ΩΩG H
.
ΩΩH I
RunTest
ΩΩI P
(
ΩΩP Q
$strΩΩQ ê
)ΩΩê ë
;ΩΩë í
(
ææ 
new
ææ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_13
ææ E
(
ææE F
)
ææF G
)
ææG H
.
ææH I
RunTest
ææI P
(
ææP Q
$strææQ ê
)ææê ë
;ææë í
(
øø 
new
øø K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_14
øø E
(
øøE F
)
øøF G
)
øøG H
.
øøH I
RunTest
øøI P
(
øøP Q
$strøøQ ê
)øøê ë
;øøë í
(
¿¿ 
new
¿¿ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_15
¿¿ E
(
¿¿E F
)
¿¿F G
)
¿¿G H
.
¿¿H I
RunTest
¿¿I P
(
¿¿P Q
$str¿¿Q ê
)¿¿ê ë
;¿¿ë í
(
¡¡ 
new
¡¡ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_16
¡¡ E
(
¡¡E F
)
¡¡F G
)
¡¡G H
.
¡¡H I
RunTest
¡¡I P
(
¡¡P Q
$str¡¡Q ê
)¡¡ê ë
;¡¡ë í
(
¬¬ 
new
¬¬ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_17
¬¬ E
(
¬¬E F
)
¬¬F G
)
¬¬G H
.
¬¬H I
RunTest
¬¬I P
(
¬¬P Q
$str¬¬Q ê
)¬¬ê ë
;¬¬ë í
(
√√ 
new
√√ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_21
√√ E
(
√√E F
)
√√F G
)
√√G H
.
√√H I
RunTest
√√I P
(
√√P Q
$str√√Q ê
)√√ê ë
;√√ë í
(
ƒƒ 
new
ƒƒ L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_22a
ƒƒ F
(
ƒƒF G
)
ƒƒG H
)
ƒƒH I
.
ƒƒI J
RunTest
ƒƒJ Q
(
ƒƒQ R
$strƒƒR í
)ƒƒí ì
;ƒƒì î
(
≈≈ 
new
≈≈ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_31
≈≈ E
(
≈≈E F
)
≈≈F G
)
≈≈G H
.
≈≈H I
RunTest
≈≈I P
(
≈≈P Q
$str≈≈Q ê
)≈≈ê ë
;≈≈ë í
(
∆∆ 
new
∆∆ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_41
∆∆ E
(
∆∆E F
)
∆∆F G
)
∆∆G H
.
∆∆H I
RunTest
∆∆I P
(
∆∆P Q
$str∆∆Q ê
)∆∆ê ë
;∆∆ë í
(
«« 
new
«« K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_42
«« E
(
««E F
)
««F G
)
««G H
.
««H I
RunTest
««I P
(
««P Q
$str««Q ê
)««ê ë
;««ë í
(
»» 
new
»» K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_45
»» E
(
»»E F
)
»»F G
)
»»G H
.
»»H I
RunTest
»»I P
(
»»P Q
$str»»Q ê
)»»ê ë
;»»ë í
(
…… 
new
…… L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_51a
…… F
(
……F G
)
……G H
)
……H I
.
……I J
RunTest
……J Q
(
……Q R
$str……R í
)……í ì
;……ì î
(
   
new
   L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_52a
   F
(
  F G
)
  G H
)
  H I
.
  I J
RunTest
  J Q
(
  Q R
$str  R í
)  í ì
;  ì î
(
ÀÀ 
new
ÀÀ L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_53a
ÀÀ F
(
ÀÀF G
)
ÀÀG H
)
ÀÀH I
.
ÀÀI J
RunTest
ÀÀJ Q
(
ÀÀQ R
$strÀÀR í
)ÀÀí ì
;ÀÀì î
(
ÃÃ 
new
ÃÃ L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_54a
ÃÃ F
(
ÃÃF G
)
ÃÃG H
)
ÃÃH I
.
ÃÃI J
RunTest
ÃÃJ Q
(
ÃÃQ R
$strÃÃR í
)ÃÃí ì
;ÃÃì î
(
ÕÕ 
new
ÕÕ L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_61a
ÕÕ F
(
ÕÕF G
)
ÕÕG H
)
ÕÕH I
.
ÕÕI J
RunTest
ÕÕJ Q
(
ÕÕQ R
$strÕÕR í
)ÕÕí ì
;ÕÕì î
(
ŒŒ 
new
ŒŒ L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_66a
ŒŒ F
(
ŒŒF G
)
ŒŒG H
)
ŒŒH I
.
ŒŒI J
RunTest
ŒŒJ Q
(
ŒŒQ R
$strŒŒR í
)ŒŒí ì
;ŒŒì î
(
œœ 
new
œœ L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_67a
œœ F
(
œœF G
)
œœG H
)
œœH I
.
œœI J
RunTest
œœJ Q
(
œœQ R
$strœœR í
)œœí ì
;œœì î
(
–– 
new
–– L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_68a
–– F
(
––F G
)
––G H
)
––H I
.
––I J
RunTest
––J Q
(
––Q R
$str––R í
)––í ì
;––ì î
(
—— 
new
—— L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_71a
—— F
(
——F G
)
——G H
)
——H I
.
——I J
RunTest
——J Q
(
——Q R
$str——R í
)——í ì
;——ì î
(
““ 
new
““ L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_72a
““ F
(
““F G
)
““G H
)
““H I
.
““I J
RunTest
““J Q
(
““Q R
$str““R í
)““í ì
;““ì î
(
”” 
new
”” L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_73a
”” F
(
””F G
)
””G H
)
””H I
.
””I J
RunTest
””J Q
(
””Q R
$str””R í
)””í ì
;””ì î
(
‘‘ 
new
‘‘ L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_74a
‘‘ F
(
‘‘F G
)
‘‘G H
)
‘‘H I
.
‘‘I J
RunTest
‘‘J Q
(
‘‘Q R
$str‘‘R í
)‘‘í ì
;‘‘ì î
(
’’ 
new
’’ L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_75a
’’ F
(
’’F G
)
’’G H
)
’’H I
.
’’I J
RunTest
’’J Q
(
’’Q R
$str’’R í
)’’í ì
;’’ì î
(
÷÷ 
new
÷÷ L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_byte_81a
÷÷ F
(
÷÷F G
)
÷÷G H
)
÷÷H I
.
÷÷I J
RunTest
÷÷J Q
(
÷÷Q R
$str÷÷R í
)÷÷í ì
;÷÷ì î
(
◊◊ 
new
◊◊ J
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_01
◊◊ D
(
◊◊D E
)
◊◊E F
)
◊◊F G
.
◊◊G H
RunTest
◊◊H O
(
◊◊O P
$str◊◊P é
)◊◊é è
;◊◊è ê
(
ÿÿ 
new
ÿÿ J
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_02
ÿÿ D
(
ÿÿD E
)
ÿÿE F
)
ÿÿF G
.
ÿÿG H
RunTest
ÿÿH O
(
ÿÿO P
$strÿÿP é
)ÿÿé è
;ÿÿè ê
(
ŸŸ 
new
ŸŸ J
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_03
ŸŸ D
(
ŸŸD E
)
ŸŸE F
)
ŸŸF G
.
ŸŸG H
RunTest
ŸŸH O
(
ŸŸO P
$strŸŸP é
)ŸŸé è
;ŸŸè ê
(
⁄⁄ 
new
⁄⁄ J
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_04
⁄⁄ D
(
⁄⁄D E
)
⁄⁄E F
)
⁄⁄F G
.
⁄⁄G H
RunTest
⁄⁄H O
(
⁄⁄O P
$str⁄⁄P é
)⁄⁄é è
;⁄⁄è ê
(
€€ 
new
€€ J
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_05
€€ D
(
€€D E
)
€€E F
)
€€F G
.
€€G H
RunTest
€€H O
(
€€O P
$str€€P é
)€€é è
;€€è ê
(
‹‹ 
new
‹‹ J
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_06
‹‹ D
(
‹‹D E
)
‹‹E F
)
‹‹F G
.
‹‹G H
RunTest
‹‹H O
(
‹‹O P
$str‹‹P é
)‹‹é è
;‹‹è ê
(
›› 
new
›› J
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_07
›› D
(
››D E
)
››E F
)
››F G
.
››G H
RunTest
››H O
(
››O P
$str››P é
)››é è
;››è ê
(
ﬁﬁ 
new
ﬁﬁ J
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_08
ﬁﬁ D
(
ﬁﬁD E
)
ﬁﬁE F
)
ﬁﬁF G
.
ﬁﬁG H
RunTest
ﬁﬁH O
(
ﬁﬁO P
$strﬁﬁP é
)ﬁﬁé è
;ﬁﬁè ê
(
ﬂﬂ 
new
ﬂﬂ J
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_09
ﬂﬂ D
(
ﬂﬂD E
)
ﬂﬂE F
)
ﬂﬂF G
.
ﬂﬂG H
RunTest
ﬂﬂH O
(
ﬂﬂO P
$strﬂﬂP é
)ﬂﬂé è
;ﬂﬂè ê
(
‡‡ 
new
‡‡ J
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_10
‡‡ D
(
‡‡D E
)
‡‡E F
)
‡‡F G
.
‡‡G H
RunTest
‡‡H O
(
‡‡O P
$str‡‡P é
)‡‡é è
;‡‡è ê
(
·· 
new
·· J
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_11
·· D
(
··D E
)
··E F
)
··F G
.
··G H
RunTest
··H O
(
··O P
$str··P é
)··é è
;··è ê
(
‚‚ 
new
‚‚ J
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_12
‚‚ D
(
‚‚D E
)
‚‚E F
)
‚‚F G
.
‚‚G H
RunTest
‚‚H O
(
‚‚O P
$str‚‚P é
)‚‚é è
;‚‚è ê
(
„„ 
new
„„ J
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_13
„„ D
(
„„D E
)
„„E F
)
„„F G
.
„„G H
RunTest
„„H O
(
„„O P
$str„„P é
)„„é è
;„„è ê
(
‰‰ 
new
‰‰ J
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_14
‰‰ D
(
‰‰D E
)
‰‰E F
)
‰‰F G
.
‰‰G H
RunTest
‰‰H O
(
‰‰O P
$str‰‰P é
)‰‰é è
;‰‰è ê
(
ÂÂ 
new
ÂÂ J
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_15
ÂÂ D
(
ÂÂD E
)
ÂÂE F
)
ÂÂF G
.
ÂÂG H
RunTest
ÂÂH O
(
ÂÂO P
$strÂÂP é
)ÂÂé è
;ÂÂè ê
(
ÊÊ 
new
ÊÊ J
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_16
ÊÊ D
(
ÊÊD E
)
ÊÊE F
)
ÊÊF G
.
ÊÊG H
RunTest
ÊÊH O
(
ÊÊO P
$strÊÊP é
)ÊÊé è
;ÊÊè ê
(
ÁÁ 
new
ÁÁ J
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_17
ÁÁ D
(
ÁÁD E
)
ÁÁE F
)
ÁÁF G
.
ÁÁG H
RunTest
ÁÁH O
(
ÁÁO P
$strÁÁP é
)ÁÁé è
;ÁÁè ê
(
ËË 
new
ËË J
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_21
ËË D
(
ËËD E
)
ËËE F
)
ËËF G
.
ËËG H
RunTest
ËËH O
(
ËËO P
$strËËP é
)ËËé è
;ËËè ê
(
ÈÈ 
new
ÈÈ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_22a
ÈÈ E
(
ÈÈE F
)
ÈÈF G
)
ÈÈG H
.
ÈÈH I
RunTest
ÈÈI P
(
ÈÈP Q
$strÈÈQ ê
)ÈÈê ë
;ÈÈë í
(
ÍÍ 
new
ÍÍ J
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_31
ÍÍ D
(
ÍÍD E
)
ÍÍE F
)
ÍÍF G
.
ÍÍG H
RunTest
ÍÍH O
(
ÍÍO P
$strÍÍP é
)ÍÍé è
;ÍÍè ê
(
ÎÎ 
new
ÎÎ J
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_41
ÎÎ D
(
ÎÎD E
)
ÎÎE F
)
ÎÎF G
.
ÎÎG H
RunTest
ÎÎH O
(
ÎÎO P
$strÎÎP é
)ÎÎé è
;ÎÎè ê
(
ÏÏ 
new
ÏÏ J
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_42
ÏÏ D
(
ÏÏD E
)
ÏÏE F
)
ÏÏF G
.
ÏÏG H
RunTest
ÏÏH O
(
ÏÏO P
$strÏÏP é
)ÏÏé è
;ÏÏè ê
(
ÌÌ 
new
ÌÌ J
<CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_45
ÌÌ D
(
ÌÌD E
)
ÌÌE F
)
ÌÌF G
.
ÌÌG H
RunTest
ÌÌH O
(
ÌÌO P
$strÌÌP é
)ÌÌé è
;ÌÌè ê
(
ÓÓ 
new
ÓÓ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_51a
ÓÓ E
(
ÓÓE F
)
ÓÓF G
)
ÓÓG H
.
ÓÓH I
RunTest
ÓÓI P
(
ÓÓP Q
$strÓÓQ ê
)ÓÓê ë
;ÓÓë í
(
ÔÔ 
new
ÔÔ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_52a
ÔÔ E
(
ÔÔE F
)
ÔÔF G
)
ÔÔG H
.
ÔÔH I
RunTest
ÔÔI P
(
ÔÔP Q
$strÔÔQ ê
)ÔÔê ë
;ÔÔë í
(
 
new
 K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_53a
 E
(
E F
)
F G
)
G H
.
H I
RunTest
I P
(
P Q
$strQ ê
)ê ë
;ë í
(
ÒÒ 
new
ÒÒ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_54a
ÒÒ E
(
ÒÒE F
)
ÒÒF G
)
ÒÒG H
.
ÒÒH I
RunTest
ÒÒI P
(
ÒÒP Q
$strÒÒQ ê
)ÒÒê ë
;ÒÒë í
(
ÚÚ 
new
ÚÚ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_61a
ÚÚ E
(
ÚÚE F
)
ÚÚF G
)
ÚÚG H
.
ÚÚH I
RunTest
ÚÚI P
(
ÚÚP Q
$strÚÚQ ê
)ÚÚê ë
;ÚÚë í
(
ÛÛ 
new
ÛÛ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_66a
ÛÛ E
(
ÛÛE F
)
ÛÛF G
)
ÛÛG H
.
ÛÛH I
RunTest
ÛÛI P
(
ÛÛP Q
$strÛÛQ ê
)ÛÛê ë
;ÛÛë í
(
ÙÙ 
new
ÙÙ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_67a
ÙÙ E
(
ÙÙE F
)
ÙÙF G
)
ÙÙG H
.
ÙÙH I
RunTest
ÙÙI P
(
ÙÙP Q
$strÙÙQ ê
)ÙÙê ë
;ÙÙë í
(
ıı 
new
ıı K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_68a
ıı E
(
ııE F
)
ııF G
)
ııG H
.
ııH I
RunTest
ııI P
(
ııP Q
$strııQ ê
)ııê ë
;ııë í
(
ˆˆ 
new
ˆˆ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_71a
ˆˆ E
(
ˆˆE F
)
ˆˆF G
)
ˆˆG H
.
ˆˆH I
RunTest
ˆˆI P
(
ˆˆP Q
$strˆˆQ ê
)ˆˆê ë
;ˆˆë í
(
˜˜ 
new
˜˜ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_72a
˜˜ E
(
˜˜E F
)
˜˜F G
)
˜˜G H
.
˜˜H I
RunTest
˜˜I P
(
˜˜P Q
$str˜˜Q ê
)˜˜ê ë
;˜˜ë í
(
¯¯ 
new
¯¯ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_73a
¯¯ E
(
¯¯E F
)
¯¯F G
)
¯¯G H
.
¯¯H I
RunTest
¯¯I P
(
¯¯P Q
$str¯¯Q ê
)¯¯ê ë
;¯¯ë í
(
˘˘ 
new
˘˘ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_74a
˘˘ E
(
˘˘E F
)
˘˘F G
)
˘˘G H
.
˘˘H I
RunTest
˘˘I P
(
˘˘P Q
$str˘˘Q ê
)˘˘ê ë
;˘˘ë í
(
˙˙ 
new
˙˙ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_75a
˙˙ E
(
˙˙E F
)
˙˙F G
)
˙˙G H
.
˙˙H I
RunTest
˙˙I P
(
˙˙P Q
$str˙˙Q ê
)˙˙ê ë
;˙˙ë í
(
˚˚ 
new
˚˚ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_int_81a
˚˚ E
(
˚˚E F
)
˚˚F G
)
˚˚G H
.
˚˚H I
RunTest
˚˚I P
(
˚˚P Q
$str˚˚Q ê
)˚˚ê ë
;˚˚ë í
(
¸¸ 
new
¸¸ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_01
¸¸ E
(
¸¸E F
)
¸¸F G
)
¸¸G H
.
¸¸H I
RunTest
¸¸I P
(
¸¸P Q
$str¸¸Q ê
)¸¸ê ë
;¸¸ë í
(
˝˝ 
new
˝˝ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_02
˝˝ E
(
˝˝E F
)
˝˝F G
)
˝˝G H
.
˝˝H I
RunTest
˝˝I P
(
˝˝P Q
$str˝˝Q ê
)˝˝ê ë
;˝˝ë í
(
˛˛ 
new
˛˛ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_03
˛˛ E
(
˛˛E F
)
˛˛F G
)
˛˛G H
.
˛˛H I
RunTest
˛˛I P
(
˛˛P Q
$str˛˛Q ê
)˛˛ê ë
;˛˛ë í
(
ˇˇ 
new
ˇˇ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_04
ˇˇ E
(
ˇˇE F
)
ˇˇF G
)
ˇˇG H
.
ˇˇH I
RunTest
ˇˇI P
(
ˇˇP Q
$strˇˇQ ê
)ˇˇê ë
;ˇˇë í
(
ÄÄ 
new
ÄÄ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_05
ÄÄ E
(
ÄÄE F
)
ÄÄF G
)
ÄÄG H
.
ÄÄH I
RunTest
ÄÄI P
(
ÄÄP Q
$strÄÄQ ê
)ÄÄê ë
;ÄÄë í
(
ÅÅ 
new
ÅÅ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_06
ÅÅ E
(
ÅÅE F
)
ÅÅF G
)
ÅÅG H
.
ÅÅH I
RunTest
ÅÅI P
(
ÅÅP Q
$strÅÅQ ê
)ÅÅê ë
;ÅÅë í
(
ÇÇ 
new
ÇÇ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_07
ÇÇ E
(
ÇÇE F
)
ÇÇF G
)
ÇÇG H
.
ÇÇH I
RunTest
ÇÇI P
(
ÇÇP Q
$strÇÇQ ê
)ÇÇê ë
;ÇÇë í
(
ÉÉ 
new
ÉÉ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_08
ÉÉ E
(
ÉÉE F
)
ÉÉF G
)
ÉÉG H
.
ÉÉH I
RunTest
ÉÉI P
(
ÉÉP Q
$strÉÉQ ê
)ÉÉê ë
;ÉÉë í
(
ÑÑ 
new
ÑÑ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_09
ÑÑ E
(
ÑÑE F
)
ÑÑF G
)
ÑÑG H
.
ÑÑH I
RunTest
ÑÑI P
(
ÑÑP Q
$strÑÑQ ê
)ÑÑê ë
;ÑÑë í
(
ÖÖ 
new
ÖÖ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_10
ÖÖ E
(
ÖÖE F
)
ÖÖF G
)
ÖÖG H
.
ÖÖH I
RunTest
ÖÖI P
(
ÖÖP Q
$strÖÖQ ê
)ÖÖê ë
;ÖÖë í
(
ÜÜ 
new
ÜÜ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_11
ÜÜ E
(
ÜÜE F
)
ÜÜF G
)
ÜÜG H
.
ÜÜH I
RunTest
ÜÜI P
(
ÜÜP Q
$strÜÜQ ê
)ÜÜê ë
;ÜÜë í
(
áá 
new
áá K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_12
áá E
(
ááE F
)
ááF G
)
ááG H
.
ááH I
RunTest
ááI P
(
ááP Q
$strááQ ê
)ááê ë
;ááë í
(
àà 
new
àà K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_13
àà E
(
ààE F
)
ààF G
)
ààG H
.
ààH I
RunTest
ààI P
(
ààP Q
$strààQ ê
)ààê ë
;ààë í
(
ââ 
new
ââ K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_14
ââ E
(
ââE F
)
ââF G
)
ââG H
.
ââH I
RunTest
ââI P
(
ââP Q
$strââQ ê
)ââê ë
;ââë í
(
ää 
new
ää K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_15
ää E
(
ääE F
)
ääF G
)
ääG H
.
ääH I
RunTest
ääI P
(
ääP Q
$strääQ ê
)ääê ë
;ääë í
(
ãã 
new
ãã K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_16
ãã E
(
ããE F
)
ããF G
)
ããG H
.
ããH I
RunTest
ããI P
(
ããP Q
$strããQ ê
)ããê ë
;ããë í
(
åå 
new
åå K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_17
åå E
(
ååE F
)
ååF G
)
ååG H
.
ååH I
RunTest
ååI P
(
ååP Q
$strååQ ê
)ååê ë
;ååë í
(
çç 
new
çç K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_21
çç E
(
ççE F
)
ççF G
)
ççG H
.
ççH I
RunTest
ççI P
(
ççP Q
$strççQ ê
)ççê ë
;ççë í
(
éé 
new
éé L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_22a
éé F
(
ééF G
)
ééG H
)
ééH I
.
ééI J
RunTest
ééJ Q
(
ééQ R
$strééR í
)ééí ì
;ééì î
(
èè 
new
èè K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_31
èè E
(
èèE F
)
èèF G
)
èèG H
.
èèH I
RunTest
èèI P
(
èèP Q
$strèèQ ê
)èèê ë
;èèë í
(
êê 
new
êê K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_41
êê E
(
êêE F
)
êêF G
)
êêG H
.
êêH I
RunTest
êêI P
(
êêP Q
$strêêQ ê
)êêê ë
;êêë í
(
ëë 
new
ëë K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_42
ëë E
(
ëëE F
)
ëëF G
)
ëëG H
.
ëëH I
RunTest
ëëI P
(
ëëP Q
$strëëQ ê
)ëëê ë
;ëëë í
(
íí 
new
íí K
=CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_45
íí E
(
ííE F
)
ííF G
)
ííG H
.
ííH I
RunTest
ííI P
(
ííP Q
$strííQ ê
)ííê ë
;ííë í
(
ìì 
new
ìì L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_51a
ìì F
(
ììF G
)
ììG H
)
ììH I
.
ììI J
RunTest
ììJ Q
(
ììQ R
$strììR í
)ììí ì
;ììì î
(
îî 
new
îî L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_52a
îî F
(
îîF G
)
îîG H
)
îîH I
.
îîI J
RunTest
îîJ Q
(
îîQ R
$strîîR í
)îîí ì
;îîì î
(
ïï 
new
ïï L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_53a
ïï F
(
ïïF G
)
ïïG H
)
ïïH I
.
ïïI J
RunTest
ïïJ Q
(
ïïQ R
$strïïR í
)ïïí ì
;ïïì î
(
ññ 
new
ññ L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_54a
ññ F
(
ññF G
)
ññG H
)
ññH I
.
ññI J
RunTest
ññJ Q
(
ññQ R
$strññR í
)ññí ì
;ññì î
(
óó 
new
óó L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_61a
óó F
(
óóF G
)
óóG H
)
óóH I
.
óóI J
RunTest
óóJ Q
(
óóQ R
$stróóR í
)óóí ì
;óóì î
(
òò 
new
òò L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_66a
òò F
(
òòF G
)
òòG H
)
òòH I
.
òòI J
RunTest
òòJ Q
(
òòQ R
$stròòR í
)òòí ì
;òòì î
(
ôô 
new
ôô L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_67a
ôô F
(
ôôF G
)
ôôG H
)
ôôH I
.
ôôI J
RunTest
ôôJ Q
(
ôôQ R
$strôôR í
)ôôí ì
;ôôì î
(
öö 
new
öö L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_68a
öö F
(
ööF G
)
ööG H
)
ööH I
.
ööI J
RunTest
ööJ Q
(
ööQ R
$strööR í
)ööí ì
;ööì î
(
õõ 
new
õõ L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_71a
õõ F
(
õõF G
)
õõG H
)
õõH I
.
õõI J
RunTest
õõJ Q
(
õõQ R
$strõõR í
)õõí ì
;õõì î
(
úú 
new
úú L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_72a
úú F
(
úúF G
)
úúG H
)
úúH I
.
úúI J
RunTest
úúJ Q
(
úúQ R
$strúúR í
)úúí ì
;úúì î
(
ùù 
new
ùù L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_73a
ùù F
(
ùùF G
)
ùùG H
)
ùùH I
.
ùùI J
RunTest
ùùJ Q
(
ùùQ R
$strùùR í
)ùùí ì
;ùùì î
(
ûû 
new
ûû L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_74a
ûû F
(
ûûF G
)
ûûG H
)
ûûH I
.
ûûI J
RunTest
ûûJ Q
(
ûûQ R
$strûûR í
)ûûí ì
;ûûì î
(
üü 
new
üü L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_75a
üü F
(
üüF G
)
üüG H
)
üüH I
.
üüI J
RunTest
üüJ Q
(
üüQ R
$strüüR í
)üüí ì
;üüì î
(
†† 
new
†† L
>CWE197_Numeric_Truncation_Error__float_connect_tcp_to_long_81a
†† F
(
††F G
)
††G H
)
††H I
.
††I J
RunTest
††J Q
(
††Q R
$str††R í
)††í ì
;††ì î
}
¢¢ 
private
§§ 
static
§§	 
void
§§ 
RunTestCWE2
§§  
(
§§  !
)
§§! "
{
§§# $
}
®® 
private
™™ 
static
™™	 
void
™™ 
RunTestCWE3
™™  
(
™™  !
)
™™! "
{
™™# $
}
ÆÆ 
private
∞∞ 
static
∞∞	 
void
∞∞ 
RunTestCWE4
∞∞  
(
∞∞  !
)
∞∞! "
{
∞∞# $
}
¥¥ 
private
∂∂ 
static
∂∂	 
void
∂∂ 
RunTestCWE5
∂∂  
(
∂∂  !
)
∂∂! "
{
∂∂# $
}
∫∫ 
private
ºº 
static
ºº	 
void
ºº 
RunTestCWE6
ºº  
(
ºº  !
)
ºº! "
{
ºº# $
}
¿¿ 
private
¬¬ 
static
¬¬	 
void
¬¬ 
RunTestCWE7
¬¬  
(
¬¬  !
)
¬¬! "
{
¬¬# $
}
∆∆ 
private
»» 
static
»»	 
void
»» 
RunTestCWE8
»»  
(
»»  !
)
»»! "
{
»»# $
}
ÃÃ 
private
ŒŒ 
static
ŒŒ	 
void
ŒŒ 
RunTestCWE9
ŒŒ  
(
ŒŒ  !
)
ŒŒ! "
{
ŒŒ# $
}
““ 
}”” 
}‘‘ ∆
öC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s03\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str >
)> ?
]? @
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str @
)@ A
]A B
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *