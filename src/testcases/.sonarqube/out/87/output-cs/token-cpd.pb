ÌP
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_01.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_01 F
:G H
AbstractTestCaseI Y
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
password## 
;## 
password$$ 
=$$ 
$str$$ 
;$$ 
{&& 	
try'' 
{(( 
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
new**+ .
	TcpClient**/ 8
(**8 9
$str**9 K
,**K L
$num**M R
)**R S
)**S T
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
tcpConn--> E
.--E F
	GetStream--F O
(--O P
)--P Q
)--Q R
)--R S
{.. 
password00  
=00! "
sr00# %
.00% &
ReadLine00& .
(00. /
)00/ 0
;000 1
}11 
}22 
}33 
catch44 
(44 
IOException44 
exceptIO44 '
)44' (
{55 
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 "
.66" #
LogLevel66# +
.66+ ,
Warn66, 0
,660 1
$str662 M
,66M N
exceptIO66O W
)66W X
;66X Y
}77 
}88 	
try99 
{:: 	
using<< 
(<< 
SqlConnection<<  

connection<<! +
=<<, -
new<<. 1
SqlConnection<<2 ?
(<<? @
$str<<@ v
+<<w x
$str<<y }
+<<~ 
$str
<<Ä å
+
<<ç é
password
<<è ó
)
<<ó ò
)
<<ò ô
{== 

connection>> 
.>> 
Open>> 
(>>  
)>>  !
;>>! "
using?? 
(?? 

SqlCommand?? !
command??" )
=??* +
new??, /

SqlCommand??0 :
(??: ;
$str??; U
,??U V

connection??W a
)??a b
)??b c
{@@ 
commandAA 
.AA 
ExecuteNonQueryAA +
(AA+ ,
)AA, -
;AA- .
}BB 
}CC 
}DD 	
catchEE 
(EE 
SqlExceptionEE 
	exceptSqlEE %
)EE% &
{FF 	
IOGG 
.GG 
LoggerGG 
.GG 
LogGG 
(GG 
NLogGG 
.GG 
LogLevelGG '
.GG' (
WarnGG( ,
,GG, -
$strGG. N
,GGN O
	exceptSqlGGP Y
)GGY Z
;GGZ [
}HH 	
}II 
publicLL 

overrideLL 
voidLL 
GoodLL 
(LL 
)LL 
{MM 
GoodG2BNN 
(NN 
)NN 
;NN 
GoodB2GOO 
(OO 
)OO 
;OO 
}PP 
privateSS 
voidSS 
GoodG2BSS 
(SS 
)SS 
{TT 
stringUU 
passwordUU 
;UU 
passwordXX 
=XX 
$strXX "
;XX" #
tryYY 
{ZZ 	
using\\ 
(\\ 
SqlConnection\\  

connection\\! +
=\\, -
new\\. 1
SqlConnection\\2 ?
(\\? @
$str\\@ v
+\\w x
$str\\y }
+\\~ 
$str
\\Ä å
+
\\ç é
password
\\è ó
)
\\ó ò
)
\\ò ô
{]] 

connection^^ 
.^^ 
Open^^ 
(^^  
)^^  !
;^^! "
using__ 
(__ 

SqlCommand__ !
command__" )
=__* +
new__, /

SqlCommand__0 :
(__: ;
$str__; U
,__U V

connection__W a
)__a b
)__b c
{`` 
commandaa 
.aa 
ExecuteNonQueryaa +
(aa+ ,
)aa, -
;aa- .
}bb 
}cc 
}dd 	
catchee 
(ee 
SqlExceptionee 
	exceptSqlee %
)ee% &
{ff 	
IOgg 
.gg 
Loggergg 
.gg 
Loggg 
(gg 
NLoggg 
.gg 
LogLevelgg '
.gg' (
Warngg( ,
,gg, -
$strgg. N
,ggN O
	exceptSqlggP Y
)ggY Z
;ggZ [
}hh 	
}ii 
privatell 
voidll 
GoodB2Gll 
(ll 
)ll 
{mm 
stringnn 
passwordnn 
;nn 
passwordoo 
=oo 
$stroo 
;oo 
{qq 	
tryrr 
{ss 
usinguu 
(uu 
	TcpClientuu  
tcpConnuu! (
=uu) *
newuu+ .
	TcpClientuu/ 8
(uu8 9
$struu9 K
,uuK L
$numuuM R
)uuR S
)uuS T
{vv 
usingxx 
(xx 
StreamReaderxx '
srxx( *
=xx+ ,
newxx- 0
StreamReaderxx1 =
(xx= >
tcpConnxx> E
.xxE F
	GetStreamxxF O
(xxO P
)xxP Q
)xxQ R
)xxR S
{yy 
password{{  
={{! "
sr{{# %
.{{% &
ReadLine{{& .
({{. /
){{/ 0
;{{0 1
}|| 
}}} 
}~~ 
catch 
( 
IOException 
exceptIO '
)' (
{
ÄÄ 
IO
ÅÅ 
.
ÅÅ 
Logger
ÅÅ 
.
ÅÅ 
Log
ÅÅ 
(
ÅÅ 
NLog
ÅÅ "
.
ÅÅ" #
LogLevel
ÅÅ# +
.
ÅÅ+ ,
Warn
ÅÅ, 0
,
ÅÅ0 1
$str
ÅÅ2 M
,
ÅÅM N
exceptIO
ÅÅO W
)
ÅÅW X
;
ÅÅX Y
}
ÇÇ 
}
ÉÉ 	
if
ÑÑ 

(
ÑÑ 
password
ÑÑ 
!=
ÑÑ 
null
ÑÑ 
)
ÑÑ 
{
ÖÖ 	
{
áá 
using
àà 
(
àà &
AesCryptoServiceProvider
àà /
aesAlg
àà0 6
=
àà7 8
new
àà9 <&
AesCryptoServiceProvider
àà= U
(
ààU V
)
ààV W
)
ààW X
{
ââ 
aesAlg
ää 
.
ää 
Padding
ää "
=
ää# $
PaddingMode
ää% 0
.
ää0 1
None
ää1 5
;
ää5 6
aesAlg
ãã 
.
ãã 
Key
ãã 
=
ãã  
Encoding
ãã! )
.
ãã) *
UTF8
ãã* .
.
ãã. /
GetBytes
ãã/ 7
(
ãã7 8
$str
ãã8 J
)
ããJ K
;
ããK L
ICryptoTransform
çç $
	decryptor
çç% .
=
çç/ 0
aesAlg
çç1 7
.
çç7 8
CreateDecryptor
çç8 G
(
ççG H
aesAlg
ççH N
.
ççN O
Key
ççO R
,
ççR S
aesAlg
ççT Z
.
ççZ [
IV
çç[ ]
)
çç] ^
;
çç^ _
using
èè 
(
èè 
MemoryStream
èè '
	msDecrypt
èè( 1
=
èè2 3
new
èè4 7
MemoryStream
èè8 D
(
èèD E
Encoding
èèE M
.
èèM N
UTF8
èèN R
.
èèR S
GetBytes
èèS [
(
èè[ \
password
èè\ d
)
èèd e
)
èèe f
)
èèf g
{
êê 
using
ëë 
(
ëë 
CryptoStream
ëë +
	csDecrypt
ëë, 5
=
ëë6 7
new
ëë8 ;
CryptoStream
ëë< H
(
ëëH I
	msDecrypt
ëëI R
,
ëëR S
	decryptor
ëëT ]
,
ëë] ^
CryptoStreamMode
ëë_ o
.
ëëo p
Read
ëëp t
)
ëët u
)
ëëu v
{
íí 
using
ìì !
(
ìì" #
StreamReader
ìì# /
	srDecrypt
ìì0 9
=
ìì: ;
new
ìì< ?
StreamReader
ìì@ L
(
ììL M
	csDecrypt
ììM V
)
ììV W
)
ììW X
{
îî 
password
óó  (
=
óó) *
	srDecrypt
óó+ 4
.
óó4 5
	ReadToEnd
óó5 >
(
óó> ?
)
óó? @
;
óó@ A
}
òò 
}
ôô 
}
öö 
}
õõ 
}
úú 
try
ùù 
{
ûû 
using
†† 
(
†† 
SqlConnection
†† $

connection
††% /
=
††0 1
new
††2 5
SqlConnection
††6 C
(
††C D
$str
††D z
+
††{ |
$str††} Å
+††Ç É
$str††Ñ ê
+††ë í
password††ì õ
)††õ ú
)††ú ù
{
°° 

connection
¢¢ 
.
¢¢ 
Open
¢¢ #
(
¢¢# $
)
¢¢$ %
;
¢¢% &
using
££ 
(
££ 

SqlCommand
££ %
command
££& -
=
££. /
new
££0 3

SqlCommand
££4 >
(
££> ?
$str
££? Y
,
££Y Z

connection
££[ e
)
££e f
)
££f g
{
§§ 
command
•• 
.
••  
ExecuteNonQuery
••  /
(
••/ 0
)
••0 1
;
••1 2
}
¶¶ 
}
ßß 
}
®® 
catch
©© 
(
©© 
SqlException
©© 
	exceptSql
©©  )
)
©©) *
{
™™ 
IO
´´ 
.
´´ 
Logger
´´ 
.
´´ 
Log
´´ 
(
´´ 
NLog
´´ "
.
´´" #
LogLevel
´´# +
.
´´+ ,
Warn
´´, 0
,
´´0 1
$str
´´2 R
,
´´R S
	exceptSql
´´T ]
)
´´] ^
;
´´^ _
}
¨¨ 
}
≠≠ 	
}
ÆÆ 
}∞∞ 
}±± ≤ô
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_02.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_02 F
:G H
AbstractTestCaseI Y
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
password## 
;## 
if$$ 

($$ 
true$$ 
)$$ 
{%% 	
password&& 
=&& 
$str&& 
;&& 
{(( 
try)) 
{** 
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
new,,/ 2
	TcpClient,,3 <
(,,< =
$str,,= O
,,,O P
$num,,Q V
),,V W
),,W X
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
password22 $
=22% &
sr22' )
.22) *
ReadLine22* 2
(222 3
)223 4
;224 5
}33 
}44 
}55 
catch66 
(66 
IOException66 "
exceptIO66# +
)66+ ,
{77 
IO88 
.88 
Logger88 
.88 
Log88 !
(88! "
NLog88" &
.88& '
LogLevel88' /
.88/ 0
Warn880 4
,884 5
$str886 Q
,88Q R
exceptIO88S [
)88[ \
;88\ ]
}99 
}:: 
};; 	
else<< 
{== 	
password@@ 
=@@ 
null@@ 
;@@ 
}AA 	
ifBB 

(BB 
trueBB 
)BB 
{CC 	
tryDD 
{EE 
usingGG 
(GG 
SqlConnectionGG $

connectionGG% /
=GG0 1
newGG2 5
SqlConnectionGG6 C
(GGC D
$strGGD z
+GG{ |
$str	GG} Å
+
GGÇ É
$str
GGÑ ê
+
GGë í
password
GGì õ
)
GGõ ú
)
GGú ù
{HH 

connectionII 
.II 
OpenII #
(II# $
)II$ %
;II% &
usingJJ 
(JJ 

SqlCommandJJ %
commandJJ& -
=JJ. /
newJJ0 3

SqlCommandJJ4 >
(JJ> ?
$strJJ? Y
,JJY Z

connectionJJ[ e
)JJe f
)JJf g
{KK 
commandLL 
.LL  
ExecuteNonQueryLL  /
(LL/ 0
)LL0 1
;LL1 2
}MM 
}NN 
}OO 
catchPP 
(PP 
SqlExceptionPP 
	exceptSqlPP  )
)PP) *
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR 
(RR 
NLogRR "
.RR" #
LogLevelRR# +
.RR+ ,
WarnRR, 0
,RR0 1
$strRR2 R
,RRR S
	exceptSqlRRT ]
)RR] ^
;RR^ _
}SS 
}TT 	
}UU 
privateYY 
voidYY 
GoodG2B1YY 
(YY 
)YY 
{ZZ 
string[[ 
password[[ 
;[[ 
if\\ 

(\\ 
false\\ 
)\\ 
{]] 	
password`` 
=`` 
null`` 
;`` 
}aa 	
elsebb 
{cc 	
passwordff 
=ff 
$strff &
;ff& '
}gg 	
ifhh 

(hh 
truehh 
)hh 
{ii 	
tryjj 
{kk 
usingmm 
(mm 
SqlConnectionmm $

connectionmm% /
=mm0 1
newmm2 5
SqlConnectionmm6 C
(mmC D
$strmmD z
+mm{ |
$str	mm} Å
+
mmÇ É
$str
mmÑ ê
+
mmë í
password
mmì õ
)
mmõ ú
)
mmú ù
{nn 

connectionoo 
.oo 
Openoo #
(oo# $
)oo$ %
;oo% &
usingpp 
(pp 

SqlCommandpp %
commandpp& -
=pp. /
newpp0 3

SqlCommandpp4 >
(pp> ?
$strpp? Y
,ppY Z

connectionpp[ e
)ppe f
)ppf g
{qq 
commandrr 
.rr  
ExecuteNonQueryrr  /
(rr/ 0
)rr0 1
;rr1 2
}ss 
}tt 
}uu 
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv  )
)vv) *
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
	exceptSqlxxT ]
)xx] ^
;xx^ _
}yy 
}zz 	
}{{ 
private~~ 
void~~ 
GoodG2B2~~ 
(~~ 
)~~ 
{ 
string
ÄÄ 
password
ÄÄ 
;
ÄÄ 
if
ÅÅ 

(
ÅÅ 
true
ÅÅ 
)
ÅÅ 
{
ÇÇ 	
password
ÖÖ 
=
ÖÖ 
$str
ÖÖ &
;
ÖÖ& '
}
ÜÜ 	
else
áá 
{
àà 	
password
ãã 
=
ãã 
null
ãã 
;
ãã 
}
åå 	
if
çç 

(
çç 
true
çç 
)
çç 
{
éé 	
try
èè 
{
êê 
using
íí 
(
íí 
SqlConnection
íí $

connection
íí% /
=
íí0 1
new
íí2 5
SqlConnection
íí6 C
(
ííC D
$str
ííD z
+
íí{ |
$stríí} Å
+ííÇ É
$strííÑ ê
+ííë í
passwordííì õ
)ííõ ú
)ííú ù
{
ìì 

connection
îî 
.
îî 
Open
îî #
(
îî# $
)
îî$ %
;
îî% &
using
ïï 
(
ïï 

SqlCommand
ïï %
command
ïï& -
=
ïï. /
new
ïï0 3

SqlCommand
ïï4 >
(
ïï> ?
$str
ïï? Y
,
ïïY Z

connection
ïï[ e
)
ïïe f
)
ïïf g
{
ññ 
command
óó 
.
óó  
ExecuteNonQuery
óó  /
(
óó/ 0
)
óó0 1
;
óó1 2
}
òò 
}
ôô 
}
öö 
catch
õõ 
(
õõ 
SqlException
õõ 
	exceptSql
õõ  )
)
õõ) *
{
úú 
IO
ùù 
.
ùù 
Logger
ùù 
.
ùù 
Log
ùù 
(
ùù 
NLog
ùù "
.
ùù" #
LogLevel
ùù# +
.
ùù+ ,
Warn
ùù, 0
,
ùù0 1
$str
ùù2 R
,
ùùR S
	exceptSql
ùùT ]
)
ùù] ^
;
ùù^ _
}
ûû 
}
üü 	
}
†† 
private
££ 
void
££ 
GoodB2G1
££ 
(
££ 
)
££ 
{
§§ 
string
•• 
password
•• 
;
•• 
if
¶¶ 

(
¶¶ 
true
¶¶ 
)
¶¶ 
{
ßß 	
password
®® 
=
®® 
$str
®® 
;
®® 
{
™™ 
try
´´ 
{
¨¨ 
using
ÆÆ 
(
ÆÆ 
	TcpClient
ÆÆ $
tcpConn
ÆÆ% ,
=
ÆÆ- .
new
ÆÆ/ 2
	TcpClient
ÆÆ3 <
(
ÆÆ< =
$str
ÆÆ= O
,
ÆÆO P
$num
ÆÆQ V
)
ÆÆV W
)
ÆÆW X
{
ØØ 
using
±± 
(
±± 
StreamReader
±± +
sr
±±, .
=
±±/ 0
new
±±1 4
StreamReader
±±5 A
(
±±A B
tcpConn
±±B I
.
±±I J
	GetStream
±±J S
(
±±S T
)
±±T U
)
±±U V
)
±±V W
{
≤≤ 
password
¥¥ $
=
¥¥% &
sr
¥¥' )
.
¥¥) *
ReadLine
¥¥* 2
(
¥¥2 3
)
¥¥3 4
;
¥¥4 5
}
µµ 
}
∂∂ 
}
∑∑ 
catch
∏∏ 
(
∏∏ 
IOException
∏∏ "
exceptIO
∏∏# +
)
∏∏+ ,
{
ππ 
IO
∫∫ 
.
∫∫ 
Logger
∫∫ 
.
∫∫ 
Log
∫∫ !
(
∫∫! "
NLog
∫∫" &
.
∫∫& '
LogLevel
∫∫' /
.
∫∫/ 0
Warn
∫∫0 4
,
∫∫4 5
$str
∫∫6 Q
,
∫∫Q R
exceptIO
∫∫S [
)
∫∫[ \
;
∫∫\ ]
}
ªª 
}
ºº 
}
ΩΩ 	
else
ææ 
{
øø 	
password
¬¬ 
=
¬¬ 
null
¬¬ 
;
¬¬ 
}
√√ 	
if
ƒƒ 

(
ƒƒ 
false
ƒƒ 
)
ƒƒ 
{
≈≈ 	
IO
«« 
.
«« 
	WriteLine
«« 
(
«« 
$str
«« /
)
««/ 0
;
««0 1
}
»» 	
else
…… 
{
   	
if
ÀÀ 
(
ÀÀ 
password
ÀÀ 
!=
ÀÀ 
null
ÀÀ  
)
ÀÀ  !
{
ÃÃ 
{
ŒŒ 
using
œœ 
(
œœ &
AesCryptoServiceProvider
œœ 3
aesAlg
œœ4 :
=
œœ; <
new
œœ= @&
AesCryptoServiceProvider
œœA Y
(
œœY Z
)
œœZ [
)
œœ[ \
{
–– 
aesAlg
—— 
.
—— 
Padding
—— &
=
——' (
PaddingMode
——) 4
.
——4 5
None
——5 9
;
——9 :
aesAlg
““ 
.
““ 
Key
““ "
=
““# $
Encoding
““% -
.
““- .
UTF8
““. 2
.
““2 3
GetBytes
““3 ;
(
““; <
$str
““< N
)
““N O
;
““O P
ICryptoTransform
‘‘ (
	decryptor
‘‘) 2
=
‘‘3 4
aesAlg
‘‘5 ;
.
‘‘; <
CreateDecryptor
‘‘< K
(
‘‘K L
aesAlg
‘‘L R
.
‘‘R S
Key
‘‘S V
,
‘‘V W
aesAlg
‘‘X ^
.
‘‘^ _
IV
‘‘_ a
)
‘‘a b
;
‘‘b c
using
÷÷ 
(
÷÷ 
MemoryStream
÷÷ +
	msDecrypt
÷÷, 5
=
÷÷6 7
new
÷÷8 ;
MemoryStream
÷÷< H
(
÷÷H I
Encoding
÷÷I Q
.
÷÷Q R
UTF8
÷÷R V
.
÷÷V W
GetBytes
÷÷W _
(
÷÷_ `
password
÷÷` h
)
÷÷h i
)
÷÷i j
)
÷÷j k
{
◊◊ 
using
ÿÿ !
(
ÿÿ" #
CryptoStream
ÿÿ# /
	csDecrypt
ÿÿ0 9
=
ÿÿ: ;
new
ÿÿ< ?
CryptoStream
ÿÿ@ L
(
ÿÿL M
	msDecrypt
ÿÿM V
,
ÿÿV W
	decryptor
ÿÿX a
,
ÿÿa b
CryptoStreamMode
ÿÿc s
.
ÿÿs t
Read
ÿÿt x
)
ÿÿx y
)
ÿÿy z
{
ŸŸ 
using
⁄⁄  %
(
⁄⁄& '
StreamReader
⁄⁄' 3
	srDecrypt
⁄⁄4 =
=
⁄⁄> ?
new
⁄⁄@ C
StreamReader
⁄⁄D P
(
⁄⁄P Q
	csDecrypt
⁄⁄Q Z
)
⁄⁄Z [
)
⁄⁄[ \
{
€€  !
password
ﬁﬁ$ ,
=
ﬁﬁ- .
	srDecrypt
ﬁﬁ/ 8
.
ﬁﬁ8 9
	ReadToEnd
ﬁﬁ9 B
(
ﬁﬁB C
)
ﬁﬁC D
;
ﬁﬁD E
}
ﬂﬂ  !
}
‡‡ 
}
·· 
}
‚‚ 
}
„„ 
try
‰‰ 
{
ÂÂ 
using
ÁÁ 
(
ÁÁ 
SqlConnection
ÁÁ (

connection
ÁÁ) 3
=
ÁÁ4 5
new
ÁÁ6 9
SqlConnection
ÁÁ: G
(
ÁÁG H
$str
ÁÁH ~
+ÁÁ Ä
$strÁÁÅ Ö
+ÁÁÜ á
$strÁÁà î
+ÁÁï ñ
passwordÁÁó ü
)ÁÁü †
)ÁÁ† °
{
ËË 

connection
ÈÈ "
.
ÈÈ" #
Open
ÈÈ# '
(
ÈÈ' (
)
ÈÈ( )
;
ÈÈ) *
using
ÍÍ 
(
ÍÍ 

SqlCommand
ÍÍ )
command
ÍÍ* 1
=
ÍÍ2 3
new
ÍÍ4 7

SqlCommand
ÍÍ8 B
(
ÍÍB C
$str
ÍÍC ]
,
ÍÍ] ^

connection
ÍÍ_ i
)
ÍÍi j
)
ÍÍj k
{
ÎÎ 
command
ÏÏ #
.
ÏÏ# $
ExecuteNonQuery
ÏÏ$ 3
(
ÏÏ3 4
)
ÏÏ4 5
;
ÏÏ5 6
}
ÌÌ 
}
ÓÓ 
}
ÔÔ 
catch
 
(
 
SqlException
 #
	exceptSql
$ -
)
- .
{
ÒÒ 
IO
ÚÚ 
.
ÚÚ 
Logger
ÚÚ 
.
ÚÚ 
Log
ÚÚ !
(
ÚÚ! "
NLog
ÚÚ" &
.
ÚÚ& '
LogLevel
ÚÚ' /
.
ÚÚ/ 0
Warn
ÚÚ0 4
,
ÚÚ4 5
$str
ÚÚ6 V
,
ÚÚV W
	exceptSql
ÚÚX a
)
ÚÚa b
;
ÚÚb c
}
ÛÛ 
}
ÙÙ 
}
ıı 	
}
ˆˆ 
private
˘˘ 
void
˘˘ 
GoodB2G2
˘˘ 
(
˘˘ 
)
˘˘ 
{
˙˙ 
string
˚˚ 
password
˚˚ 
;
˚˚ 
if
¸¸ 

(
¸¸ 
true
¸¸ 
)
¸¸ 
{
˝˝ 	
password
˛˛ 
=
˛˛ 
$str
˛˛ 
;
˛˛ 
{
ÄÄ 
try
ÅÅ 
{
ÇÇ 
using
ÑÑ 
(
ÑÑ 
	TcpClient
ÑÑ $
tcpConn
ÑÑ% ,
=
ÑÑ- .
new
ÑÑ/ 2
	TcpClient
ÑÑ3 <
(
ÑÑ< =
$str
ÑÑ= O
,
ÑÑO P
$num
ÑÑQ V
)
ÑÑV W
)
ÑÑW X
{
ÖÖ 
using
áá 
(
áá 
StreamReader
áá +
sr
áá, .
=
áá/ 0
new
áá1 4
StreamReader
áá5 A
(
ááA B
tcpConn
ááB I
.
ááI J
	GetStream
ááJ S
(
ááS T
)
ááT U
)
ááU V
)
ááV W
{
àà 
password
ää $
=
ää% &
sr
ää' )
.
ää) *
ReadLine
ää* 2
(
ää2 3
)
ää3 4
;
ää4 5
}
ãã 
}
åå 
}
çç 
catch
éé 
(
éé 
IOException
éé "
exceptIO
éé# +
)
éé+ ,
{
èè 
IO
êê 
.
êê 
Logger
êê 
.
êê 
Log
êê !
(
êê! "
NLog
êê" &
.
êê& '
LogLevel
êê' /
.
êê/ 0
Warn
êê0 4
,
êê4 5
$str
êê6 Q
,
êêQ R
exceptIO
êêS [
)
êê[ \
;
êê\ ]
}
ëë 
}
íí 
}
ìì 	
else
îî 
{
ïï 	
password
òò 
=
òò 
null
òò 
;
òò 
}
ôô 	
if
öö 

(
öö 
true
öö 
)
öö 
{
õõ 	
if
úú 
(
úú 
password
úú 
!=
úú 
null
úú  
)
úú  !
{
ùù 
{
üü 
using
†† 
(
†† &
AesCryptoServiceProvider
†† 3
aesAlg
††4 :
=
††; <
new
††= @&
AesCryptoServiceProvider
††A Y
(
††Y Z
)
††Z [
)
††[ \
{
°° 
aesAlg
¢¢ 
.
¢¢ 
Padding
¢¢ &
=
¢¢' (
PaddingMode
¢¢) 4
.
¢¢4 5
None
¢¢5 9
;
¢¢9 :
aesAlg
££ 
.
££ 
Key
££ "
=
££# $
Encoding
££% -
.
££- .
UTF8
££. 2
.
££2 3
GetBytes
££3 ;
(
££; <
$str
££< N
)
££N O
;
££O P
ICryptoTransform
•• (
	decryptor
••) 2
=
••3 4
aesAlg
••5 ;
.
••; <
CreateDecryptor
••< K
(
••K L
aesAlg
••L R
.
••R S
Key
••S V
,
••V W
aesAlg
••X ^
.
••^ _
IV
••_ a
)
••a b
;
••b c
using
ßß 
(
ßß 
MemoryStream
ßß +
	msDecrypt
ßß, 5
=
ßß6 7
new
ßß8 ;
MemoryStream
ßß< H
(
ßßH I
Encoding
ßßI Q
.
ßßQ R
UTF8
ßßR V
.
ßßV W
GetBytes
ßßW _
(
ßß_ `
password
ßß` h
)
ßßh i
)
ßßi j
)
ßßj k
{
®® 
using
©© !
(
©©" #
CryptoStream
©©# /
	csDecrypt
©©0 9
=
©©: ;
new
©©< ?
CryptoStream
©©@ L
(
©©L M
	msDecrypt
©©M V
,
©©V W
	decryptor
©©X a
,
©©a b
CryptoStreamMode
©©c s
.
©©s t
Read
©©t x
)
©©x y
)
©©y z
{
™™ 
using
´´  %
(
´´& '
StreamReader
´´' 3
	srDecrypt
´´4 =
=
´´> ?
new
´´@ C
StreamReader
´´D P
(
´´P Q
	csDecrypt
´´Q Z
)
´´Z [
)
´´[ \
{
¨¨  !
password
ØØ$ ,
=
ØØ- .
	srDecrypt
ØØ/ 8
.
ØØ8 9
	ReadToEnd
ØØ9 B
(
ØØB C
)
ØØC D
;
ØØD E
}
∞∞  !
}
±± 
}
≤≤ 
}
≥≥ 
}
¥¥ 
try
µµ 
{
∂∂ 
using
∏∏ 
(
∏∏ 
SqlConnection
∏∏ (

connection
∏∏) 3
=
∏∏4 5
new
∏∏6 9
SqlConnection
∏∏: G
(
∏∏G H
$str
∏∏H ~
+∏∏ Ä
$str∏∏Å Ö
+∏∏Ü á
$str∏∏à î
+∏∏ï ñ
password∏∏ó ü
)∏∏ü †
)∏∏† °
{
ππ 

connection
∫∫ "
.
∫∫" #
Open
∫∫# '
(
∫∫' (
)
∫∫( )
;
∫∫) *
using
ªª 
(
ªª 

SqlCommand
ªª )
command
ªª* 1
=
ªª2 3
new
ªª4 7

SqlCommand
ªª8 B
(
ªªB C
$str
ªªC ]
,
ªª] ^

connection
ªª_ i
)
ªªi j
)
ªªj k
{
ºº 
command
ΩΩ #
.
ΩΩ# $
ExecuteNonQuery
ΩΩ$ 3
(
ΩΩ3 4
)
ΩΩ4 5
;
ΩΩ5 6
}
ææ 
}
øø 
}
¿¿ 
catch
¡¡ 
(
¡¡ 
SqlException
¡¡ #
	exceptSql
¡¡$ -
)
¡¡- .
{
¬¬ 
IO
√√ 
.
√√ 
Logger
√√ 
.
√√ 
Log
√√ !
(
√√! "
NLog
√√" &
.
√√& '
LogLevel
√√' /
.
√√/ 0
Warn
√√0 4
,
√√4 5
$str
√√6 V
,
√√V W
	exceptSql
√√X a
)
√√a b
;
√√b c
}
ƒƒ 
}
≈≈ 
}
∆∆ 	
}
«« 
public
…… 

override
…… 
void
…… 
Good
…… 
(
…… 
)
…… 
{
   
GoodG2B1
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
GoodG2B2
ÃÃ 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ 
GoodB2G1
ÕÕ 
(
ÕÕ 
)
ÕÕ 
;
ÕÕ 
GoodB2G2
ŒŒ 
(
ŒŒ 
)
ŒŒ 
;
ŒŒ 
}
œœ 
}—— 
}““ úú
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_03.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_03 F
:G H
AbstractTestCaseI Y
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
password## 
;## 
if$$ 

($$ 
$num$$ 
==$$ 
$num$$ 
)$$ 
{%% 	
password&& 
=&& 
$str&& 
;&& 
{(( 
try)) 
{** 
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
new,,/ 2
	TcpClient,,3 <
(,,< =
$str,,= O
,,,O P
$num,,Q V
),,V W
),,W X
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
password22 $
=22% &
sr22' )
.22) *
ReadLine22* 2
(222 3
)223 4
;224 5
}33 
}44 
}55 
catch66 
(66 
IOException66 "
exceptIO66# +
)66+ ,
{77 
IO88 
.88 
Logger88 
.88 
Log88 !
(88! "
NLog88" &
.88& '
LogLevel88' /
.88/ 0
Warn880 4
,884 5
$str886 Q
,88Q R
exceptIO88S [
)88[ \
;88\ ]
}99 
}:: 
};; 	
else<< 
{== 	
password@@ 
=@@ 
null@@ 
;@@ 
}AA 	
ifBB 

(BB 
$numBB 
==BB 
$numBB 
)BB 
{CC 	
tryDD 
{EE 
usingGG 
(GG 
SqlConnectionGG $

connectionGG% /
=GG0 1
newGG2 5
SqlConnectionGG6 C
(GGC D
$strGGD z
+GG{ |
$str	GG} Å
+
GGÇ É
$str
GGÑ ê
+
GGë í
password
GGì õ
)
GGõ ú
)
GGú ù
{HH 

connectionII 
.II 
OpenII #
(II# $
)II$ %
;II% &
usingJJ 
(JJ 

SqlCommandJJ %
commandJJ& -
=JJ. /
newJJ0 3

SqlCommandJJ4 >
(JJ> ?
$strJJ? Y
,JJY Z

connectionJJ[ e
)JJe f
)JJf g
{KK 
commandLL 
.LL  
ExecuteNonQueryLL  /
(LL/ 0
)LL0 1
;LL1 2
}MM 
}NN 
}OO 
catchPP 
(PP 
SqlExceptionPP 
	exceptSqlPP  )
)PP) *
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR 
(RR 
NLogRR "
.RR" #
LogLevelRR# +
.RR+ ,
WarnRR, 0
,RR0 1
$strRR2 R
,RRR S
	exceptSqlRRT ]
)RR] ^
;RR^ _
}SS 
}TT 	
}UU 
privateYY 
voidYY 
GoodG2B1YY 
(YY 
)YY 
{ZZ 
string[[ 
password[[ 
;[[ 
if\\ 

(\\ 
$num\\ 
!=\\ 
$num\\ 
)\\ 
{]] 	
password`` 
=`` 
null`` 
;`` 
}aa 	
elsebb 
{cc 	
passwordff 
=ff 
$strff &
;ff& '
}gg 	
ifhh 

(hh 
$numhh 
==hh 
$numhh 
)hh 
{ii 	
tryjj 
{kk 
usingmm 
(mm 
SqlConnectionmm $

connectionmm% /
=mm0 1
newmm2 5
SqlConnectionmm6 C
(mmC D
$strmmD z
+mm{ |
$str	mm} Å
+
mmÇ É
$str
mmÑ ê
+
mmë í
password
mmì õ
)
mmõ ú
)
mmú ù
{nn 

connectionoo 
.oo 
Openoo #
(oo# $
)oo$ %
;oo% &
usingpp 
(pp 

SqlCommandpp %
commandpp& -
=pp. /
newpp0 3

SqlCommandpp4 >
(pp> ?
$strpp? Y
,ppY Z

connectionpp[ e
)ppe f
)ppf g
{qq 
commandrr 
.rr  
ExecuteNonQueryrr  /
(rr/ 0
)rr0 1
;rr1 2
}ss 
}tt 
}uu 
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv  )
)vv) *
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
	exceptSqlxxT ]
)xx] ^
;xx^ _
}yy 
}zz 	
}{{ 
private~~ 
void~~ 
GoodG2B2~~ 
(~~ 
)~~ 
{ 
string
ÄÄ 
password
ÄÄ 
;
ÄÄ 
if
ÅÅ 

(
ÅÅ 
$num
ÅÅ 
==
ÅÅ 
$num
ÅÅ 
)
ÅÅ 
{
ÇÇ 	
password
ÖÖ 
=
ÖÖ 
$str
ÖÖ &
;
ÖÖ& '
}
ÜÜ 	
else
áá 
{
àà 	
password
ãã 
=
ãã 
null
ãã 
;
ãã 
}
åå 	
if
çç 

(
çç 
$num
çç 
==
çç 
$num
çç 
)
çç 
{
éé 	
try
èè 
{
êê 
using
íí 
(
íí 
SqlConnection
íí $

connection
íí% /
=
íí0 1
new
íí2 5
SqlConnection
íí6 C
(
ííC D
$str
ííD z
+
íí{ |
$stríí} Å
+ííÇ É
$strííÑ ê
+ííë í
passwordííì õ
)ííõ ú
)ííú ù
{
ìì 

connection
îî 
.
îî 
Open
îî #
(
îî# $
)
îî$ %
;
îî% &
using
ïï 
(
ïï 

SqlCommand
ïï %
command
ïï& -
=
ïï. /
new
ïï0 3

SqlCommand
ïï4 >
(
ïï> ?
$str
ïï? Y
,
ïïY Z

connection
ïï[ e
)
ïïe f
)
ïïf g
{
ññ 
command
óó 
.
óó  
ExecuteNonQuery
óó  /
(
óó/ 0
)
óó0 1
;
óó1 2
}
òò 
}
ôô 
}
öö 
catch
õõ 
(
õõ 
SqlException
õõ 
	exceptSql
õõ  )
)
õõ) *
{
úú 
IO
ùù 
.
ùù 
Logger
ùù 
.
ùù 
Log
ùù 
(
ùù 
NLog
ùù "
.
ùù" #
LogLevel
ùù# +
.
ùù+ ,
Warn
ùù, 0
,
ùù0 1
$str
ùù2 R
,
ùùR S
	exceptSql
ùùT ]
)
ùù] ^
;
ùù^ _
}
ûû 
}
üü 	
}
†† 
private
££ 
void
££ 
GoodB2G1
££ 
(
££ 
)
££ 
{
§§ 
string
•• 
password
•• 
;
•• 
if
¶¶ 

(
¶¶ 
$num
¶¶ 
==
¶¶ 
$num
¶¶ 
)
¶¶ 
{
ßß 	
password
®® 
=
®® 
$str
®® 
;
®® 
{
™™ 
try
´´ 
{
¨¨ 
using
ÆÆ 
(
ÆÆ 
	TcpClient
ÆÆ $
tcpConn
ÆÆ% ,
=
ÆÆ- .
new
ÆÆ/ 2
	TcpClient
ÆÆ3 <
(
ÆÆ< =
$str
ÆÆ= O
,
ÆÆO P
$num
ÆÆQ V
)
ÆÆV W
)
ÆÆW X
{
ØØ 
using
±± 
(
±± 
StreamReader
±± +
sr
±±, .
=
±±/ 0
new
±±1 4
StreamReader
±±5 A
(
±±A B
tcpConn
±±B I
.
±±I J
	GetStream
±±J S
(
±±S T
)
±±T U
)
±±U V
)
±±V W
{
≤≤ 
password
¥¥ $
=
¥¥% &
sr
¥¥' )
.
¥¥) *
ReadLine
¥¥* 2
(
¥¥2 3
)
¥¥3 4
;
¥¥4 5
}
µµ 
}
∂∂ 
}
∑∑ 
catch
∏∏ 
(
∏∏ 
IOException
∏∏ "
exceptIO
∏∏# +
)
∏∏+ ,
{
ππ 
IO
∫∫ 
.
∫∫ 
Logger
∫∫ 
.
∫∫ 
Log
∫∫ !
(
∫∫! "
NLog
∫∫" &
.
∫∫& '
LogLevel
∫∫' /
.
∫∫/ 0
Warn
∫∫0 4
,
∫∫4 5
$str
∫∫6 Q
,
∫∫Q R
exceptIO
∫∫S [
)
∫∫[ \
;
∫∫\ ]
}
ªª 
}
ºº 
}
ΩΩ 	
else
ææ 
{
øø 	
password
¬¬ 
=
¬¬ 
null
¬¬ 
;
¬¬ 
}
√√ 	
if
ƒƒ 

(
ƒƒ 
$num
ƒƒ 
!=
ƒƒ 
$num
ƒƒ 
)
ƒƒ 
{
≈≈ 	
IO
«« 
.
«« 
	WriteLine
«« 
(
«« 
$str
«« /
)
««/ 0
;
««0 1
}
»» 	
else
…… 
{
   	
if
ÀÀ 
(
ÀÀ 
password
ÀÀ 
!=
ÀÀ 
null
ÀÀ  
)
ÀÀ  !
{
ÃÃ 
{
ŒŒ 
using
œœ 
(
œœ &
AesCryptoServiceProvider
œœ 3
aesAlg
œœ4 :
=
œœ; <
new
œœ= @&
AesCryptoServiceProvider
œœA Y
(
œœY Z
)
œœZ [
)
œœ[ \
{
–– 
aesAlg
—— 
.
—— 
Padding
—— &
=
——' (
PaddingMode
——) 4
.
——4 5
None
——5 9
;
——9 :
aesAlg
““ 
.
““ 
Key
““ "
=
““# $
Encoding
““% -
.
““- .
UTF8
““. 2
.
““2 3
GetBytes
““3 ;
(
““; <
$str
““< N
)
““N O
;
““O P
ICryptoTransform
‘‘ (
	decryptor
‘‘) 2
=
‘‘3 4
aesAlg
‘‘5 ;
.
‘‘; <
CreateDecryptor
‘‘< K
(
‘‘K L
aesAlg
‘‘L R
.
‘‘R S
Key
‘‘S V
,
‘‘V W
aesAlg
‘‘X ^
.
‘‘^ _
IV
‘‘_ a
)
‘‘a b
;
‘‘b c
using
÷÷ 
(
÷÷ 
MemoryStream
÷÷ +
	msDecrypt
÷÷, 5
=
÷÷6 7
new
÷÷8 ;
MemoryStream
÷÷< H
(
÷÷H I
Encoding
÷÷I Q
.
÷÷Q R
UTF8
÷÷R V
.
÷÷V W
GetBytes
÷÷W _
(
÷÷_ `
password
÷÷` h
)
÷÷h i
)
÷÷i j
)
÷÷j k
{
◊◊ 
using
ÿÿ !
(
ÿÿ" #
CryptoStream
ÿÿ# /
	csDecrypt
ÿÿ0 9
=
ÿÿ: ;
new
ÿÿ< ?
CryptoStream
ÿÿ@ L
(
ÿÿL M
	msDecrypt
ÿÿM V
,
ÿÿV W
	decryptor
ÿÿX a
,
ÿÿa b
CryptoStreamMode
ÿÿc s
.
ÿÿs t
Read
ÿÿt x
)
ÿÿx y
)
ÿÿy z
{
ŸŸ 
using
⁄⁄  %
(
⁄⁄& '
StreamReader
⁄⁄' 3
	srDecrypt
⁄⁄4 =
=
⁄⁄> ?
new
⁄⁄@ C
StreamReader
⁄⁄D P
(
⁄⁄P Q
	csDecrypt
⁄⁄Q Z
)
⁄⁄Z [
)
⁄⁄[ \
{
€€  !
password
ﬁﬁ$ ,
=
ﬁﬁ- .
	srDecrypt
ﬁﬁ/ 8
.
ﬁﬁ8 9
	ReadToEnd
ﬁﬁ9 B
(
ﬁﬁB C
)
ﬁﬁC D
;
ﬁﬁD E
}
ﬂﬂ  !
}
‡‡ 
}
·· 
}
‚‚ 
}
„„ 
try
‰‰ 
{
ÂÂ 
using
ÁÁ 
(
ÁÁ 
SqlConnection
ÁÁ (

connection
ÁÁ) 3
=
ÁÁ4 5
new
ÁÁ6 9
SqlConnection
ÁÁ: G
(
ÁÁG H
$str
ÁÁH ~
+ÁÁ Ä
$strÁÁÅ Ö
+ÁÁÜ á
$strÁÁà î
+ÁÁï ñ
passwordÁÁó ü
)ÁÁü †
)ÁÁ† °
{
ËË 

connection
ÈÈ "
.
ÈÈ" #
Open
ÈÈ# '
(
ÈÈ' (
)
ÈÈ( )
;
ÈÈ) *
using
ÍÍ 
(
ÍÍ 

SqlCommand
ÍÍ )
command
ÍÍ* 1
=
ÍÍ2 3
new
ÍÍ4 7

SqlCommand
ÍÍ8 B
(
ÍÍB C
$str
ÍÍC ]
,
ÍÍ] ^

connection
ÍÍ_ i
)
ÍÍi j
)
ÍÍj k
{
ÎÎ 
command
ÏÏ #
.
ÏÏ# $
ExecuteNonQuery
ÏÏ$ 3
(
ÏÏ3 4
)
ÏÏ4 5
;
ÏÏ5 6
}
ÌÌ 
}
ÓÓ 
}
ÔÔ 
catch
 
(
 
SqlException
 #
	exceptSql
$ -
)
- .
{
ÒÒ 
IO
ÚÚ 
.
ÚÚ 
Logger
ÚÚ 
.
ÚÚ 
Log
ÚÚ !
(
ÚÚ! "
NLog
ÚÚ" &
.
ÚÚ& '
LogLevel
ÚÚ' /
.
ÚÚ/ 0
Warn
ÚÚ0 4
,
ÚÚ4 5
$str
ÚÚ6 V
,
ÚÚV W
	exceptSql
ÚÚX a
)
ÚÚa b
;
ÚÚb c
}
ÛÛ 
}
ÙÙ 
}
ıı 	
}
ˆˆ 
private
˘˘ 
void
˘˘ 
GoodB2G2
˘˘ 
(
˘˘ 
)
˘˘ 
{
˙˙ 
string
˚˚ 
password
˚˚ 
;
˚˚ 
if
¸¸ 

(
¸¸ 
$num
¸¸ 
==
¸¸ 
$num
¸¸ 
)
¸¸ 
{
˝˝ 	
password
˛˛ 
=
˛˛ 
$str
˛˛ 
;
˛˛ 
{
ÄÄ 
try
ÅÅ 
{
ÇÇ 
using
ÑÑ 
(
ÑÑ 
	TcpClient
ÑÑ $
tcpConn
ÑÑ% ,
=
ÑÑ- .
new
ÑÑ/ 2
	TcpClient
ÑÑ3 <
(
ÑÑ< =
$str
ÑÑ= O
,
ÑÑO P
$num
ÑÑQ V
)
ÑÑV W
)
ÑÑW X
{
ÖÖ 
using
áá 
(
áá 
StreamReader
áá +
sr
áá, .
=
áá/ 0
new
áá1 4
StreamReader
áá5 A
(
ááA B
tcpConn
ááB I
.
ááI J
	GetStream
ááJ S
(
ááS T
)
ááT U
)
ááU V
)
ááV W
{
àà 
password
ää $
=
ää% &
sr
ää' )
.
ää) *
ReadLine
ää* 2
(
ää2 3
)
ää3 4
;
ää4 5
}
ãã 
}
åå 
}
çç 
catch
éé 
(
éé 
IOException
éé "
exceptIO
éé# +
)
éé+ ,
{
èè 
IO
êê 
.
êê 
Logger
êê 
.
êê 
Log
êê !
(
êê! "
NLog
êê" &
.
êê& '
LogLevel
êê' /
.
êê/ 0
Warn
êê0 4
,
êê4 5
$str
êê6 Q
,
êêQ R
exceptIO
êêS [
)
êê[ \
;
êê\ ]
}
ëë 
}
íí 
}
ìì 	
else
îî 
{
ïï 	
password
òò 
=
òò 
null
òò 
;
òò 
}
ôô 	
if
öö 

(
öö 
$num
öö 
==
öö 
$num
öö 
)
öö 
{
õõ 	
if
úú 
(
úú 
password
úú 
!=
úú 
null
úú  
)
úú  !
{
ùù 
{
üü 
using
†† 
(
†† &
AesCryptoServiceProvider
†† 3
aesAlg
††4 :
=
††; <
new
††= @&
AesCryptoServiceProvider
††A Y
(
††Y Z
)
††Z [
)
††[ \
{
°° 
aesAlg
¢¢ 
.
¢¢ 
Padding
¢¢ &
=
¢¢' (
PaddingMode
¢¢) 4
.
¢¢4 5
None
¢¢5 9
;
¢¢9 :
aesAlg
££ 
.
££ 
Key
££ "
=
££# $
Encoding
££% -
.
££- .
UTF8
££. 2
.
££2 3
GetBytes
££3 ;
(
££; <
$str
££< N
)
££N O
;
££O P
ICryptoTransform
•• (
	decryptor
••) 2
=
••3 4
aesAlg
••5 ;
.
••; <
CreateDecryptor
••< K
(
••K L
aesAlg
••L R
.
••R S
Key
••S V
,
••V W
aesAlg
••X ^
.
••^ _
IV
••_ a
)
••a b
;
••b c
using
ßß 
(
ßß 
MemoryStream
ßß +
	msDecrypt
ßß, 5
=
ßß6 7
new
ßß8 ;
MemoryStream
ßß< H
(
ßßH I
Encoding
ßßI Q
.
ßßQ R
UTF8
ßßR V
.
ßßV W
GetBytes
ßßW _
(
ßß_ `
password
ßß` h
)
ßßh i
)
ßßi j
)
ßßj k
{
®® 
using
©© !
(
©©" #
CryptoStream
©©# /
	csDecrypt
©©0 9
=
©©: ;
new
©©< ?
CryptoStream
©©@ L
(
©©L M
	msDecrypt
©©M V
,
©©V W
	decryptor
©©X a
,
©©a b
CryptoStreamMode
©©c s
.
©©s t
Read
©©t x
)
©©x y
)
©©y z
{
™™ 
using
´´  %
(
´´& '
StreamReader
´´' 3
	srDecrypt
´´4 =
=
´´> ?
new
´´@ C
StreamReader
´´D P
(
´´P Q
	csDecrypt
´´Q Z
)
´´Z [
)
´´[ \
{
¨¨  !
password
ØØ$ ,
=
ØØ- .
	srDecrypt
ØØ/ 8
.
ØØ8 9
	ReadToEnd
ØØ9 B
(
ØØB C
)
ØØC D
;
ØØD E
}
∞∞  !
}
±± 
}
≤≤ 
}
≥≥ 
}
¥¥ 
try
µµ 
{
∂∂ 
using
∏∏ 
(
∏∏ 
SqlConnection
∏∏ (

connection
∏∏) 3
=
∏∏4 5
new
∏∏6 9
SqlConnection
∏∏: G
(
∏∏G H
$str
∏∏H ~
+∏∏ Ä
$str∏∏Å Ö
+∏∏Ü á
$str∏∏à î
+∏∏ï ñ
password∏∏ó ü
)∏∏ü †
)∏∏† °
{
ππ 

connection
∫∫ "
.
∫∫" #
Open
∫∫# '
(
∫∫' (
)
∫∫( )
;
∫∫) *
using
ªª 
(
ªª 

SqlCommand
ªª )
command
ªª* 1
=
ªª2 3
new
ªª4 7

SqlCommand
ªª8 B
(
ªªB C
$str
ªªC ]
,
ªª] ^

connection
ªª_ i
)
ªªi j
)
ªªj k
{
ºº 
command
ΩΩ #
.
ΩΩ# $
ExecuteNonQuery
ΩΩ$ 3
(
ΩΩ3 4
)
ΩΩ4 5
;
ΩΩ5 6
}
ææ 
}
øø 
}
¿¿ 
catch
¡¡ 
(
¡¡ 
SqlException
¡¡ #
	exceptSql
¡¡$ -
)
¡¡- .
{
¬¬ 
IO
√√ 
.
√√ 
Logger
√√ 
.
√√ 
Log
√√ !
(
√√! "
NLog
√√" &
.
√√& '
LogLevel
√√' /
.
√√/ 0
Warn
√√0 4
,
√√4 5
$str
√√6 V
,
√√V W
	exceptSql
√√X a
)
√√a b
;
√√b c
}
ƒƒ 
}
≈≈ 
}
∆∆ 	
}
«« 
public
…… 

override
…… 
void
…… 
Good
…… 
(
…… 
)
…… 
{
   
GoodG2B1
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
GoodG2B2
ÃÃ 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ 
GoodB2G1
ÕÕ 
(
ÕÕ 
)
ÕÕ 
;
ÕÕ 
GoodB2G2
ŒŒ 
(
ŒŒ 
)
ŒŒ 
;
ŒŒ 
}
œœ 
}—— 
}““ Êú
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_04.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_04 F
:G H
AbstractTestCaseI Y
{ 
private%% 
const%% 
bool%% 
PRIVATE_CONST_TRUE%% )
=%%* +
true%%, 0
;%%0 1
private&& 
const&& 
bool&& 
PRIVATE_CONST_FALSE&& *
=&&+ ,
false&&- 2
;&&2 3
public(( 

override(( 
void(( 
Bad(( 
((( 
)(( 
{)) 
string** 
password** 
;** 
if++ 

(++ 
PRIVATE_CONST_TRUE++ 
)++ 
{,, 	
password-- 
=-- 
$str-- 
;-- 
{// 
try00 
{11 
using33 
(33 
	TcpClient33 $
tcpConn33% ,
=33- .
new33/ 2
	TcpClient333 <
(33< =
$str33= O
,33O P
$num33Q V
)33V W
)33W X
{44 
using66 
(66 
StreamReader66 +
sr66, .
=66/ 0
new661 4
StreamReader665 A
(66A B
tcpConn66B I
.66I J
	GetStream66J S
(66S T
)66T U
)66U V
)66V W
{77 
password99 $
=99% &
sr99' )
.99) *
ReadLine99* 2
(992 3
)993 4
;994 5
}:: 
};; 
}<< 
catch== 
(== 
IOException== "
exceptIO==# +
)==+ ,
{>> 
IO?? 
.?? 
Logger?? 
.?? 
Log?? !
(??! "
NLog??" &
.??& '
LogLevel??' /
.??/ 0
Warn??0 4
,??4 5
$str??6 Q
,??Q R
exceptIO??S [
)??[ \
;??\ ]
}@@ 
}AA 
}BB 	
elseCC 
{DD 	
passwordGG 
=GG 
nullGG 
;GG 
}HH 	
ifII 

(II 
PRIVATE_CONST_TRUEII 
)II 
{JJ 	
tryKK 
{LL 
usingNN 
(NN 
SqlConnectionNN $

connectionNN% /
=NN0 1
newNN2 5
SqlConnectionNN6 C
(NNC D
$strNND z
+NN{ |
$str	NN} Å
+
NNÇ É
$str
NNÑ ê
+
NNë í
password
NNì õ
)
NNõ ú
)
NNú ù
{OO 

connectionPP 
.PP 
OpenPP #
(PP# $
)PP$ %
;PP% &
usingQQ 
(QQ 

SqlCommandQQ %
commandQQ& -
=QQ. /
newQQ0 3

SqlCommandQQ4 >
(QQ> ?
$strQQ? Y
,QQY Z

connectionQQ[ e
)QQe f
)QQf g
{RR 
commandSS 
.SS  
ExecuteNonQuerySS  /
(SS/ 0
)SS0 1
;SS1 2
}TT 
}UU 
}VV 
catchWW 
(WW 
SqlExceptionWW 
	exceptSqlWW  )
)WW) *
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY 
(YY 
NLogYY "
.YY" #
LogLevelYY# +
.YY+ ,
WarnYY, 0
,YY0 1
$strYY2 R
,YYR S
	exceptSqlYYT ]
)YY] ^
;YY^ _
}ZZ 
}[[ 	
}\\ 
private`` 
void`` 
GoodG2B1`` 
(`` 
)`` 
{aa 
stringbb 
passwordbb 
;bb 
ifcc 

(cc 
PRIVATE_CONST_FALSEcc 
)cc  
{dd 	
passwordgg 
=gg 
nullgg 
;gg 
}hh 	
elseii 
{jj 	
passwordmm 
=mm 
$strmm &
;mm& '
}nn 	
ifoo 

(oo 
PRIVATE_CONST_TRUEoo 
)oo 
{pp 	
tryqq 
{rr 
usingtt 
(tt 
SqlConnectiontt $

connectiontt% /
=tt0 1
newtt2 5
SqlConnectiontt6 C
(ttC D
$strttD z
+tt{ |
$str	tt} Å
+
ttÇ É
$str
ttÑ ê
+
ttë í
password
ttì õ
)
ttõ ú
)
ttú ù
{uu 

connectionvv 
.vv 
Openvv #
(vv# $
)vv$ %
;vv% &
usingww 
(ww 

SqlCommandww %
commandww& -
=ww. /
newww0 3

SqlCommandww4 >
(ww> ?
$strww? Y
,wwY Z

connectionww[ e
)wwe f
)wwf g
{xx 
commandyy 
.yy  
ExecuteNonQueryyy  /
(yy/ 0
)yy0 1
;yy1 2
}zz 
}{{ 
}|| 
catch}} 
(}} 
SqlException}} 
	exceptSql}}  )
)}}) *
{~~ 
IO 
. 
Logger 
. 
Log 
( 
NLog "
." #
LogLevel# +
.+ ,
Warn, 0
,0 1
$str2 R
,R S
	exceptSqlT ]
)] ^
;^ _
}
ÄÄ 
}
ÅÅ 	
}
ÇÇ 
private
ÖÖ 
void
ÖÖ 
GoodG2B2
ÖÖ 
(
ÖÖ 
)
ÖÖ 
{
ÜÜ 
string
áá 
password
áá 
;
áá 
if
àà 

(
àà  
PRIVATE_CONST_TRUE
àà 
)
àà 
{
ââ 	
password
åå 
=
åå 
$str
åå &
;
åå& '
}
çç 	
else
éé 
{
èè 	
password
íí 
=
íí 
null
íí 
;
íí 
}
ìì 	
if
îî 

(
îî  
PRIVATE_CONST_TRUE
îî 
)
îî 
{
ïï 	
try
ññ 
{
óó 
using
ôô 
(
ôô 
SqlConnection
ôô $

connection
ôô% /
=
ôô0 1
new
ôô2 5
SqlConnection
ôô6 C
(
ôôC D
$str
ôôD z
+
ôô{ |
$strôô} Å
+ôôÇ É
$strôôÑ ê
+ôôë í
passwordôôì õ
)ôôõ ú
)ôôú ù
{
öö 

connection
õõ 
.
õõ 
Open
õõ #
(
õõ# $
)
õõ$ %
;
õõ% &
using
úú 
(
úú 

SqlCommand
úú %
command
úú& -
=
úú. /
new
úú0 3

SqlCommand
úú4 >
(
úú> ?
$str
úú? Y
,
úúY Z

connection
úú[ e
)
úúe f
)
úúf g
{
ùù 
command
ûû 
.
ûû  
ExecuteNonQuery
ûû  /
(
ûû/ 0
)
ûû0 1
;
ûû1 2
}
üü 
}
†† 
}
°° 
catch
¢¢ 
(
¢¢ 
SqlException
¢¢ 
	exceptSql
¢¢  )
)
¢¢) *
{
££ 
IO
§§ 
.
§§ 
Logger
§§ 
.
§§ 
Log
§§ 
(
§§ 
NLog
§§ "
.
§§" #
LogLevel
§§# +
.
§§+ ,
Warn
§§, 0
,
§§0 1
$str
§§2 R
,
§§R S
	exceptSql
§§T ]
)
§§] ^
;
§§^ _
}
•• 
}
¶¶ 	
}
ßß 
private
™™ 
void
™™ 
GoodB2G1
™™ 
(
™™ 
)
™™ 
{
´´ 
string
¨¨ 
password
¨¨ 
;
¨¨ 
if
≠≠ 

(
≠≠  
PRIVATE_CONST_TRUE
≠≠ 
)
≠≠ 
{
ÆÆ 	
password
ØØ 
=
ØØ 
$str
ØØ 
;
ØØ 
{
±± 
try
≤≤ 
{
≥≥ 
using
µµ 
(
µµ 
	TcpClient
µµ $
tcpConn
µµ% ,
=
µµ- .
new
µµ/ 2
	TcpClient
µµ3 <
(
µµ< =
$str
µµ= O
,
µµO P
$num
µµQ V
)
µµV W
)
µµW X
{
∂∂ 
using
∏∏ 
(
∏∏ 
StreamReader
∏∏ +
sr
∏∏, .
=
∏∏/ 0
new
∏∏1 4
StreamReader
∏∏5 A
(
∏∏A B
tcpConn
∏∏B I
.
∏∏I J
	GetStream
∏∏J S
(
∏∏S T
)
∏∏T U
)
∏∏U V
)
∏∏V W
{
ππ 
password
ªª $
=
ªª% &
sr
ªª' )
.
ªª) *
ReadLine
ªª* 2
(
ªª2 3
)
ªª3 4
;
ªª4 5
}
ºº 
}
ΩΩ 
}
ææ 
catch
øø 
(
øø 
IOException
øø "
exceptIO
øø# +
)
øø+ ,
{
¿¿ 
IO
¡¡ 
.
¡¡ 
Logger
¡¡ 
.
¡¡ 
Log
¡¡ !
(
¡¡! "
NLog
¡¡" &
.
¡¡& '
LogLevel
¡¡' /
.
¡¡/ 0
Warn
¡¡0 4
,
¡¡4 5
$str
¡¡6 Q
,
¡¡Q R
exceptIO
¡¡S [
)
¡¡[ \
;
¡¡\ ]
}
¬¬ 
}
√√ 
}
ƒƒ 	
else
≈≈ 
{
∆∆ 	
password
…… 
=
…… 
null
…… 
;
…… 
}
   	
if
ÀÀ 

(
ÀÀ !
PRIVATE_CONST_FALSE
ÀÀ 
)
ÀÀ  
{
ÃÃ 	
IO
ŒŒ 
.
ŒŒ 
	WriteLine
ŒŒ 
(
ŒŒ 
$str
ŒŒ /
)
ŒŒ/ 0
;
ŒŒ0 1
}
œœ 	
else
–– 
{
—— 	
if
““ 
(
““ 
password
““ 
!=
““ 
null
““  
)
““  !
{
”” 
{
’’ 
using
÷÷ 
(
÷÷ &
AesCryptoServiceProvider
÷÷ 3
aesAlg
÷÷4 :
=
÷÷; <
new
÷÷= @&
AesCryptoServiceProvider
÷÷A Y
(
÷÷Y Z
)
÷÷Z [
)
÷÷[ \
{
◊◊ 
aesAlg
ÿÿ 
.
ÿÿ 
Padding
ÿÿ &
=
ÿÿ' (
PaddingMode
ÿÿ) 4
.
ÿÿ4 5
None
ÿÿ5 9
;
ÿÿ9 :
aesAlg
ŸŸ 
.
ŸŸ 
Key
ŸŸ "
=
ŸŸ# $
Encoding
ŸŸ% -
.
ŸŸ- .
UTF8
ŸŸ. 2
.
ŸŸ2 3
GetBytes
ŸŸ3 ;
(
ŸŸ; <
$str
ŸŸ< N
)
ŸŸN O
;
ŸŸO P
ICryptoTransform
€€ (
	decryptor
€€) 2
=
€€3 4
aesAlg
€€5 ;
.
€€; <
CreateDecryptor
€€< K
(
€€K L
aesAlg
€€L R
.
€€R S
Key
€€S V
,
€€V W
aesAlg
€€X ^
.
€€^ _
IV
€€_ a
)
€€a b
;
€€b c
using
›› 
(
›› 
MemoryStream
›› +
	msDecrypt
››, 5
=
››6 7
new
››8 ;
MemoryStream
››< H
(
››H I
Encoding
››I Q
.
››Q R
UTF8
››R V
.
››V W
GetBytes
››W _
(
››_ `
password
››` h
)
››h i
)
››i j
)
››j k
{
ﬁﬁ 
using
ﬂﬂ !
(
ﬂﬂ" #
CryptoStream
ﬂﬂ# /
	csDecrypt
ﬂﬂ0 9
=
ﬂﬂ: ;
new
ﬂﬂ< ?
CryptoStream
ﬂﬂ@ L
(
ﬂﬂL M
	msDecrypt
ﬂﬂM V
,
ﬂﬂV W
	decryptor
ﬂﬂX a
,
ﬂﬂa b
CryptoStreamMode
ﬂﬂc s
.
ﬂﬂs t
Read
ﬂﬂt x
)
ﬂﬂx y
)
ﬂﬂy z
{
‡‡ 
using
··  %
(
··& '
StreamReader
··' 3
	srDecrypt
··4 =
=
··> ?
new
··@ C
StreamReader
··D P
(
··P Q
	csDecrypt
··Q Z
)
··Z [
)
··[ \
{
‚‚  !
password
ÂÂ$ ,
=
ÂÂ- .
	srDecrypt
ÂÂ/ 8
.
ÂÂ8 9
	ReadToEnd
ÂÂ9 B
(
ÂÂB C
)
ÂÂC D
;
ÂÂD E
}
ÊÊ  !
}
ÁÁ 
}
ËË 
}
ÈÈ 
}
ÍÍ 
try
ÎÎ 
{
ÏÏ 
using
ÓÓ 
(
ÓÓ 
SqlConnection
ÓÓ (

connection
ÓÓ) 3
=
ÓÓ4 5
new
ÓÓ6 9
SqlConnection
ÓÓ: G
(
ÓÓG H
$str
ÓÓH ~
+ÓÓ Ä
$strÓÓÅ Ö
+ÓÓÜ á
$strÓÓà î
+ÓÓï ñ
passwordÓÓó ü
)ÓÓü †
)ÓÓ† °
{
ÔÔ 

connection
 "
.
" #
Open
# '
(
' (
)
( )
;
) *
using
ÒÒ 
(
ÒÒ 

SqlCommand
ÒÒ )
command
ÒÒ* 1
=
ÒÒ2 3
new
ÒÒ4 7

SqlCommand
ÒÒ8 B
(
ÒÒB C
$str
ÒÒC ]
,
ÒÒ] ^

connection
ÒÒ_ i
)
ÒÒi j
)
ÒÒj k
{
ÚÚ 
command
ÛÛ #
.
ÛÛ# $
ExecuteNonQuery
ÛÛ$ 3
(
ÛÛ3 4
)
ÛÛ4 5
;
ÛÛ5 6
}
ÙÙ 
}
ıı 
}
ˆˆ 
catch
˜˜ 
(
˜˜ 
SqlException
˜˜ #
	exceptSql
˜˜$ -
)
˜˜- .
{
¯¯ 
IO
˘˘ 
.
˘˘ 
Logger
˘˘ 
.
˘˘ 
Log
˘˘ !
(
˘˘! "
NLog
˘˘" &
.
˘˘& '
LogLevel
˘˘' /
.
˘˘/ 0
Warn
˘˘0 4
,
˘˘4 5
$str
˘˘6 V
,
˘˘V W
	exceptSql
˘˘X a
)
˘˘a b
;
˘˘b c
}
˙˙ 
}
˚˚ 
}
¸¸ 	
}
˝˝ 
private
ÄÄ 
void
ÄÄ 
GoodB2G2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
string
ÇÇ 
password
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ  
PRIVATE_CONST_TRUE
ÉÉ 
)
ÉÉ 
{
ÑÑ 	
password
ÖÖ 
=
ÖÖ 
$str
ÖÖ 
;
ÖÖ 
{
áá 
try
àà 
{
ââ 
using
ãã 
(
ãã 
	TcpClient
ãã $
tcpConn
ãã% ,
=
ãã- .
new
ãã/ 2
	TcpClient
ãã3 <
(
ãã< =
$str
ãã= O
,
ããO P
$num
ããQ V
)
ããV W
)
ããW X
{
åå 
using
éé 
(
éé 
StreamReader
éé +
sr
éé, .
=
éé/ 0
new
éé1 4
StreamReader
éé5 A
(
ééA B
tcpConn
ééB I
.
ééI J
	GetStream
ééJ S
(
ééS T
)
ééT U
)
ééU V
)
ééV W
{
èè 
password
ëë $
=
ëë% &
sr
ëë' )
.
ëë) *
ReadLine
ëë* 2
(
ëë2 3
)
ëë3 4
;
ëë4 5
}
íí 
}
ìì 
}
îî 
catch
ïï 
(
ïï 
IOException
ïï "
exceptIO
ïï# +
)
ïï+ ,
{
ññ 
IO
óó 
.
óó 
Logger
óó 
.
óó 
Log
óó !
(
óó! "
NLog
óó" &
.
óó& '
LogLevel
óó' /
.
óó/ 0
Warn
óó0 4
,
óó4 5
$str
óó6 Q
,
óóQ R
exceptIO
óóS [
)
óó[ \
;
óó\ ]
}
òò 
}
ôô 
}
öö 	
else
õõ 
{
úú 	
password
üü 
=
üü 
null
üü 
;
üü 
}
†† 	
if
°° 

(
°°  
PRIVATE_CONST_TRUE
°° 
)
°° 
{
¢¢ 	
if
££ 
(
££ 
password
££ 
!=
££ 
null
££  
)
££  !
{
§§ 
{
¶¶ 
using
ßß 
(
ßß &
AesCryptoServiceProvider
ßß 3
aesAlg
ßß4 :
=
ßß; <
new
ßß= @&
AesCryptoServiceProvider
ßßA Y
(
ßßY Z
)
ßßZ [
)
ßß[ \
{
®® 
aesAlg
©© 
.
©© 
Padding
©© &
=
©©' (
PaddingMode
©©) 4
.
©©4 5
None
©©5 9
;
©©9 :
aesAlg
™™ 
.
™™ 
Key
™™ "
=
™™# $
Encoding
™™% -
.
™™- .
UTF8
™™. 2
.
™™2 3
GetBytes
™™3 ;
(
™™; <
$str
™™< N
)
™™N O
;
™™O P
ICryptoTransform
¨¨ (
	decryptor
¨¨) 2
=
¨¨3 4
aesAlg
¨¨5 ;
.
¨¨; <
CreateDecryptor
¨¨< K
(
¨¨K L
aesAlg
¨¨L R
.
¨¨R S
Key
¨¨S V
,
¨¨V W
aesAlg
¨¨X ^
.
¨¨^ _
IV
¨¨_ a
)
¨¨a b
;
¨¨b c
using
ÆÆ 
(
ÆÆ 
MemoryStream
ÆÆ +
	msDecrypt
ÆÆ, 5
=
ÆÆ6 7
new
ÆÆ8 ;
MemoryStream
ÆÆ< H
(
ÆÆH I
Encoding
ÆÆI Q
.
ÆÆQ R
UTF8
ÆÆR V
.
ÆÆV W
GetBytes
ÆÆW _
(
ÆÆ_ `
password
ÆÆ` h
)
ÆÆh i
)
ÆÆi j
)
ÆÆj k
{
ØØ 
using
∞∞ !
(
∞∞" #
CryptoStream
∞∞# /
	csDecrypt
∞∞0 9
=
∞∞: ;
new
∞∞< ?
CryptoStream
∞∞@ L
(
∞∞L M
	msDecrypt
∞∞M V
,
∞∞V W
	decryptor
∞∞X a
,
∞∞a b
CryptoStreamMode
∞∞c s
.
∞∞s t
Read
∞∞t x
)
∞∞x y
)
∞∞y z
{
±± 
using
≤≤  %
(
≤≤& '
StreamReader
≤≤' 3
	srDecrypt
≤≤4 =
=
≤≤> ?
new
≤≤@ C
StreamReader
≤≤D P
(
≤≤P Q
	csDecrypt
≤≤Q Z
)
≤≤Z [
)
≤≤[ \
{
≥≥  !
password
∂∂$ ,
=
∂∂- .
	srDecrypt
∂∂/ 8
.
∂∂8 9
	ReadToEnd
∂∂9 B
(
∂∂B C
)
∂∂C D
;
∂∂D E
}
∑∑  !
}
∏∏ 
}
ππ 
}
∫∫ 
}
ªª 
try
ºº 
{
ΩΩ 
using
øø 
(
øø 
SqlConnection
øø (

connection
øø) 3
=
øø4 5
new
øø6 9
SqlConnection
øø: G
(
øøG H
$str
øøH ~
+øø Ä
$strøøÅ Ö
+øøÜ á
$strøøà î
+øøï ñ
passwordøøó ü
)øøü †
)øø† °
{
¿¿ 

connection
¡¡ "
.
¡¡" #
Open
¡¡# '
(
¡¡' (
)
¡¡( )
;
¡¡) *
using
¬¬ 
(
¬¬ 

SqlCommand
¬¬ )
command
¬¬* 1
=
¬¬2 3
new
¬¬4 7

SqlCommand
¬¬8 B
(
¬¬B C
$str
¬¬C ]
,
¬¬] ^

connection
¬¬_ i
)
¬¬i j
)
¬¬j k
{
√√ 
command
ƒƒ #
.
ƒƒ# $
ExecuteNonQuery
ƒƒ$ 3
(
ƒƒ3 4
)
ƒƒ4 5
;
ƒƒ5 6
}
≈≈ 
}
∆∆ 
}
«« 
catch
»» 
(
»» 
SqlException
»» #
	exceptSql
»»$ -
)
»»- .
{
…… 
IO
   
.
   
Logger
   
.
   
Log
   !
(
  ! "
NLog
  " &
.
  & '
LogLevel
  ' /
.
  / 0
Warn
  0 4
,
  4 5
$str
  6 V
,
  V W
	exceptSql
  X a
)
  a b
;
  b c
}
ÀÀ 
}
ÃÃ 
}
ÕÕ 	
}
ŒŒ 
public
–– 

override
–– 
void
–– 
Good
–– 
(
–– 
)
–– 
{
—— 
GoodG2B1
““ 
(
““ 
)
““ 
;
““ 
GoodG2B2
”” 
(
”” 
)
”” 
;
”” 
GoodB2G1
‘‘ 
(
‘‘ 
)
‘‘ 
;
‘‘ 
GoodB2G2
’’ 
(
’’ 
)
’’ 
;
’’ 
}
÷÷ 
}ÿÿ 
}ŸŸ Íõ
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_05.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_05 F
:G H
AbstractTestCaseI Y
{ 
private$$ 
bool$$ 
privateTrue$$ 
=$$ 
true$$ #
;$$# $
private%% 
bool%% 
privateFalse%% 
=%% 
false%%  %
;%%% &
public'' 

override'' 
void'' 
Bad'' 
('' 
)'' 
{(( 
string)) 
password)) 
;)) 
if** 

(** 
privateTrue** 
)** 
{++ 	
password,, 
=,, 
$str,, 
;,, 
{.. 
try// 
{00 
using22 
(22 
	TcpClient22 $
tcpConn22% ,
=22- .
new22/ 2
	TcpClient223 <
(22< =
$str22= O
,22O P
$num22Q V
)22V W
)22W X
{33 
using55 
(55 
StreamReader55 +
sr55, .
=55/ 0
new551 4
StreamReader555 A
(55A B
tcpConn55B I
.55I J
	GetStream55J S
(55S T
)55T U
)55U V
)55V W
{66 
password88 $
=88% &
sr88' )
.88) *
ReadLine88* 2
(882 3
)883 4
;884 5
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< "
exceptIO<<# +
)<<+ ,
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> !
(>>! "
NLog>>" &
.>>& '
LogLevel>>' /
.>>/ 0
Warn>>0 4
,>>4 5
$str>>6 Q
,>>Q R
exceptIO>>S [
)>>[ \
;>>\ ]
}?? 
}@@ 
}AA 	
elseBB 
{CC 	
passwordFF 
=FF 
nullFF 
;FF 
}GG 	
ifHH 

(HH 
privateTrueHH 
)HH 
{II 	
tryJJ 
{KK 
usingMM 
(MM 
SqlConnectionMM $

connectionMM% /
=MM0 1
newMM2 5
SqlConnectionMM6 C
(MMC D
$strMMD z
+MM{ |
$str	MM} Å
+
MMÇ É
$str
MMÑ ê
+
MMë í
password
MMì õ
)
MMõ ú
)
MMú ù
{NN 

connectionOO 
.OO 
OpenOO #
(OO# $
)OO$ %
;OO% &
usingPP 
(PP 

SqlCommandPP %
commandPP& -
=PP. /
newPP0 3

SqlCommandPP4 >
(PP> ?
$strPP? Y
,PPY Z

connectionPP[ e
)PPe f
)PPf g
{QQ 
commandRR 
.RR  
ExecuteNonQueryRR  /
(RR/ 0
)RR0 1
;RR1 2
}SS 
}TT 
}UU 
catchVV 
(VV 
SqlExceptionVV 
	exceptSqlVV  )
)VV) *
{WW 
IOXX 
.XX 
LoggerXX 
.XX 
LogXX 
(XX 
NLogXX "
.XX" #
LogLevelXX# +
.XX+ ,
WarnXX, 0
,XX0 1
$strXX2 R
,XXR S
	exceptSqlXXT ]
)XX] ^
;XX^ _
}YY 
}ZZ 	
}[[ 
private__ 
void__ 
GoodG2B1__ 
(__ 
)__ 
{`` 
stringaa 
passwordaa 
;aa 
ifbb 

(bb 
privateFalsebb 
)bb 
{cc 	
passwordff 
=ff 
nullff 
;ff 
}gg 	
elsehh 
{ii 	
passwordll 
=ll 
$strll &
;ll& '
}mm 	
ifnn 

(nn 
privateTruenn 
)nn 
{oo 	
trypp 
{qq 
usingss 
(ss 
SqlConnectionss $

connectionss% /
=ss0 1
newss2 5
SqlConnectionss6 C
(ssC D
$strssD z
+ss{ |
$str	ss} Å
+
ssÇ É
$str
ssÑ ê
+
ssë í
password
ssì õ
)
ssõ ú
)
ssú ù
{tt 

connectionuu 
.uu 
Openuu #
(uu# $
)uu$ %
;uu% &
usingvv 
(vv 

SqlCommandvv %
commandvv& -
=vv. /
newvv0 3

SqlCommandvv4 >
(vv> ?
$strvv? Y
,vvY Z

connectionvv[ e
)vve f
)vvf g
{ww 
commandxx 
.xx  
ExecuteNonQueryxx  /
(xx/ 0
)xx0 1
;xx1 2
}yy 
}zz 
}{{ 
catch|| 
(|| 
SqlException|| 
	exceptSql||  )
)||) *
{}} 
IO~~ 
.~~ 
Logger~~ 
.~~ 
Log~~ 
(~~ 
NLog~~ "
.~~" #
LogLevel~~# +
.~~+ ,
Warn~~, 0
,~~0 1
$str~~2 R
,~~R S
	exceptSql~~T ]
)~~] ^
;~~^ _
} 
}
ÄÄ 	
}
ÅÅ 
private
ÑÑ 
void
ÑÑ 
GoodG2B2
ÑÑ 
(
ÑÑ 
)
ÑÑ 
{
ÖÖ 
string
ÜÜ 
password
ÜÜ 
;
ÜÜ 
if
áá 

(
áá 
privateTrue
áá 
)
áá 
{
àà 	
password
ãã 
=
ãã 
$str
ãã &
;
ãã& '
}
åå 	
else
çç 
{
éé 	
password
ëë 
=
ëë 
null
ëë 
;
ëë 
}
íí 	
if
ìì 

(
ìì 
privateTrue
ìì 
)
ìì 
{
îî 	
try
ïï 
{
ññ 
using
òò 
(
òò 
SqlConnection
òò $

connection
òò% /
=
òò0 1
new
òò2 5
SqlConnection
òò6 C
(
òòC D
$str
òòD z
+
òò{ |
$stròò} Å
+òòÇ É
$stròòÑ ê
+òòë í
passwordòòì õ
)òòõ ú
)òòú ù
{
ôô 

connection
öö 
.
öö 
Open
öö #
(
öö# $
)
öö$ %
;
öö% &
using
õõ 
(
õõ 

SqlCommand
õõ %
command
õõ& -
=
õõ. /
new
õõ0 3

SqlCommand
õõ4 >
(
õõ> ?
$str
õõ? Y
,
õõY Z

connection
õõ[ e
)
õõe f
)
õõf g
{
úú 
command
ùù 
.
ùù  
ExecuteNonQuery
ùù  /
(
ùù/ 0
)
ùù0 1
;
ùù1 2
}
ûû 
}
üü 
}
†† 
catch
°° 
(
°° 
SqlException
°° 
	exceptSql
°°  )
)
°°) *
{
¢¢ 
IO
££ 
.
££ 
Logger
££ 
.
££ 
Log
££ 
(
££ 
NLog
££ "
.
££" #
LogLevel
££# +
.
££+ ,
Warn
££, 0
,
££0 1
$str
££2 R
,
££R S
	exceptSql
££T ]
)
££] ^
;
££^ _
}
§§ 
}
•• 	
}
¶¶ 
private
©© 
void
©© 
GoodB2G1
©© 
(
©© 
)
©© 
{
™™ 
string
´´ 
password
´´ 
;
´´ 
if
¨¨ 

(
¨¨ 
privateTrue
¨¨ 
)
¨¨ 
{
≠≠ 	
password
ÆÆ 
=
ÆÆ 
$str
ÆÆ 
;
ÆÆ 
{
∞∞ 
try
±± 
{
≤≤ 
using
¥¥ 
(
¥¥ 
	TcpClient
¥¥ $
tcpConn
¥¥% ,
=
¥¥- .
new
¥¥/ 2
	TcpClient
¥¥3 <
(
¥¥< =
$str
¥¥= O
,
¥¥O P
$num
¥¥Q V
)
¥¥V W
)
¥¥W X
{
µµ 
using
∑∑ 
(
∑∑ 
StreamReader
∑∑ +
sr
∑∑, .
=
∑∑/ 0
new
∑∑1 4
StreamReader
∑∑5 A
(
∑∑A B
tcpConn
∑∑B I
.
∑∑I J
	GetStream
∑∑J S
(
∑∑S T
)
∑∑T U
)
∑∑U V
)
∑∑V W
{
∏∏ 
password
∫∫ $
=
∫∫% &
sr
∫∫' )
.
∫∫) *
ReadLine
∫∫* 2
(
∫∫2 3
)
∫∫3 4
;
∫∫4 5
}
ªª 
}
ºº 
}
ΩΩ 
catch
ææ 
(
ææ 
IOException
ææ "
exceptIO
ææ# +
)
ææ+ ,
{
øø 
IO
¿¿ 
.
¿¿ 
Logger
¿¿ 
.
¿¿ 
Log
¿¿ !
(
¿¿! "
NLog
¿¿" &
.
¿¿& '
LogLevel
¿¿' /
.
¿¿/ 0
Warn
¿¿0 4
,
¿¿4 5
$str
¿¿6 Q
,
¿¿Q R
exceptIO
¿¿S [
)
¿¿[ \
;
¿¿\ ]
}
¡¡ 
}
¬¬ 
}
√√ 	
else
ƒƒ 
{
≈≈ 	
password
»» 
=
»» 
null
»» 
;
»» 
}
…… 	
if
   

(
   
privateFalse
   
)
   
{
ÀÀ 	
IO
ÕÕ 
.
ÕÕ 
	WriteLine
ÕÕ 
(
ÕÕ 
$str
ÕÕ /
)
ÕÕ/ 0
;
ÕÕ0 1
}
ŒŒ 	
else
œœ 
{
–– 	
if
—— 
(
—— 
password
—— 
!=
—— 
null
——  
)
——  !
{
““ 
{
‘‘ 
using
’’ 
(
’’ &
AesCryptoServiceProvider
’’ 3
aesAlg
’’4 :
=
’’; <
new
’’= @&
AesCryptoServiceProvider
’’A Y
(
’’Y Z
)
’’Z [
)
’’[ \
{
÷÷ 
aesAlg
◊◊ 
.
◊◊ 
Padding
◊◊ &
=
◊◊' (
PaddingMode
◊◊) 4
.
◊◊4 5
None
◊◊5 9
;
◊◊9 :
aesAlg
ÿÿ 
.
ÿÿ 
Key
ÿÿ "
=
ÿÿ# $
Encoding
ÿÿ% -
.
ÿÿ- .
UTF8
ÿÿ. 2
.
ÿÿ2 3
GetBytes
ÿÿ3 ;
(
ÿÿ; <
$str
ÿÿ< N
)
ÿÿN O
;
ÿÿO P
ICryptoTransform
⁄⁄ (
	decryptor
⁄⁄) 2
=
⁄⁄3 4
aesAlg
⁄⁄5 ;
.
⁄⁄; <
CreateDecryptor
⁄⁄< K
(
⁄⁄K L
aesAlg
⁄⁄L R
.
⁄⁄R S
Key
⁄⁄S V
,
⁄⁄V W
aesAlg
⁄⁄X ^
.
⁄⁄^ _
IV
⁄⁄_ a
)
⁄⁄a b
;
⁄⁄b c
using
‹‹ 
(
‹‹ 
MemoryStream
‹‹ +
	msDecrypt
‹‹, 5
=
‹‹6 7
new
‹‹8 ;
MemoryStream
‹‹< H
(
‹‹H I
Encoding
‹‹I Q
.
‹‹Q R
UTF8
‹‹R V
.
‹‹V W
GetBytes
‹‹W _
(
‹‹_ `
password
‹‹` h
)
‹‹h i
)
‹‹i j
)
‹‹j k
{
›› 
using
ﬁﬁ !
(
ﬁﬁ" #
CryptoStream
ﬁﬁ# /
	csDecrypt
ﬁﬁ0 9
=
ﬁﬁ: ;
new
ﬁﬁ< ?
CryptoStream
ﬁﬁ@ L
(
ﬁﬁL M
	msDecrypt
ﬁﬁM V
,
ﬁﬁV W
	decryptor
ﬁﬁX a
,
ﬁﬁa b
CryptoStreamMode
ﬁﬁc s
.
ﬁﬁs t
Read
ﬁﬁt x
)
ﬁﬁx y
)
ﬁﬁy z
{
ﬂﬂ 
using
‡‡  %
(
‡‡& '
StreamReader
‡‡' 3
	srDecrypt
‡‡4 =
=
‡‡> ?
new
‡‡@ C
StreamReader
‡‡D P
(
‡‡P Q
	csDecrypt
‡‡Q Z
)
‡‡Z [
)
‡‡[ \
{
··  !
password
‰‰$ ,
=
‰‰- .
	srDecrypt
‰‰/ 8
.
‰‰8 9
	ReadToEnd
‰‰9 B
(
‰‰B C
)
‰‰C D
;
‰‰D E
}
ÂÂ  !
}
ÊÊ 
}
ÁÁ 
}
ËË 
}
ÈÈ 
try
ÍÍ 
{
ÎÎ 
using
ÌÌ 
(
ÌÌ 
SqlConnection
ÌÌ (

connection
ÌÌ) 3
=
ÌÌ4 5
new
ÌÌ6 9
SqlConnection
ÌÌ: G
(
ÌÌG H
$str
ÌÌH ~
+ÌÌ Ä
$strÌÌÅ Ö
+ÌÌÜ á
$strÌÌà î
+ÌÌï ñ
passwordÌÌó ü
)ÌÌü †
)ÌÌ† °
{
ÓÓ 

connection
ÔÔ "
.
ÔÔ" #
Open
ÔÔ# '
(
ÔÔ' (
)
ÔÔ( )
;
ÔÔ) *
using
 
(
 

SqlCommand
 )
command
* 1
=
2 3
new
4 7

SqlCommand
8 B
(
B C
$str
C ]
,
] ^

connection
_ i
)
i j
)
j k
{
ÒÒ 
command
ÚÚ #
.
ÚÚ# $
ExecuteNonQuery
ÚÚ$ 3
(
ÚÚ3 4
)
ÚÚ4 5
;
ÚÚ5 6
}
ÛÛ 
}
ÙÙ 
}
ıı 
catch
ˆˆ 
(
ˆˆ 
SqlException
ˆˆ #
	exceptSql
ˆˆ$ -
)
ˆˆ- .
{
˜˜ 
IO
¯¯ 
.
¯¯ 
Logger
¯¯ 
.
¯¯ 
Log
¯¯ !
(
¯¯! "
NLog
¯¯" &
.
¯¯& '
LogLevel
¯¯' /
.
¯¯/ 0
Warn
¯¯0 4
,
¯¯4 5
$str
¯¯6 V
,
¯¯V W
	exceptSql
¯¯X a
)
¯¯a b
;
¯¯b c
}
˘˘ 
}
˙˙ 
}
˚˚ 	
}
¸¸ 
private
ˇˇ 
void
ˇˇ 
GoodB2G2
ˇˇ 
(
ˇˇ 
)
ˇˇ 
{
ÄÄ 
string
ÅÅ 
password
ÅÅ 
;
ÅÅ 
if
ÇÇ 

(
ÇÇ 
privateTrue
ÇÇ 
)
ÇÇ 
{
ÉÉ 	
password
ÑÑ 
=
ÑÑ 
$str
ÑÑ 
;
ÑÑ 
{
ÜÜ 
try
áá 
{
àà 
using
ää 
(
ää 
	TcpClient
ää $
tcpConn
ää% ,
=
ää- .
new
ää/ 2
	TcpClient
ää3 <
(
ää< =
$str
ää= O
,
ääO P
$num
ääQ V
)
ääV W
)
ääW X
{
ãã 
using
çç 
(
çç 
StreamReader
çç +
sr
çç, .
=
çç/ 0
new
çç1 4
StreamReader
çç5 A
(
ççA B
tcpConn
ççB I
.
ççI J
	GetStream
ççJ S
(
ççS T
)
ççT U
)
ççU V
)
ççV W
{
éé 
password
êê $
=
êê% &
sr
êê' )
.
êê) *
ReadLine
êê* 2
(
êê2 3
)
êê3 4
;
êê4 5
}
ëë 
}
íí 
}
ìì 
catch
îî 
(
îî 
IOException
îî "
exceptIO
îî# +
)
îî+ ,
{
ïï 
IO
ññ 
.
ññ 
Logger
ññ 
.
ññ 
Log
ññ !
(
ññ! "
NLog
ññ" &
.
ññ& '
LogLevel
ññ' /
.
ññ/ 0
Warn
ññ0 4
,
ññ4 5
$str
ññ6 Q
,
ññQ R
exceptIO
ññS [
)
ññ[ \
;
ññ\ ]
}
óó 
}
òò 
}
ôô 	
else
öö 
{
õõ 	
password
ûû 
=
ûû 
null
ûû 
;
ûû 
}
üü 	
if
†† 

(
†† 
privateTrue
†† 
)
†† 
{
°° 	
if
¢¢ 
(
¢¢ 
password
¢¢ 
!=
¢¢ 
null
¢¢  
)
¢¢  !
{
££ 
{
•• 
using
¶¶ 
(
¶¶ &
AesCryptoServiceProvider
¶¶ 3
aesAlg
¶¶4 :
=
¶¶; <
new
¶¶= @&
AesCryptoServiceProvider
¶¶A Y
(
¶¶Y Z
)
¶¶Z [
)
¶¶[ \
{
ßß 
aesAlg
®® 
.
®® 
Padding
®® &
=
®®' (
PaddingMode
®®) 4
.
®®4 5
None
®®5 9
;
®®9 :
aesAlg
©© 
.
©© 
Key
©© "
=
©©# $
Encoding
©©% -
.
©©- .
UTF8
©©. 2
.
©©2 3
GetBytes
©©3 ;
(
©©; <
$str
©©< N
)
©©N O
;
©©O P
ICryptoTransform
´´ (
	decryptor
´´) 2
=
´´3 4
aesAlg
´´5 ;
.
´´; <
CreateDecryptor
´´< K
(
´´K L
aesAlg
´´L R
.
´´R S
Key
´´S V
,
´´V W
aesAlg
´´X ^
.
´´^ _
IV
´´_ a
)
´´a b
;
´´b c
using
≠≠ 
(
≠≠ 
MemoryStream
≠≠ +
	msDecrypt
≠≠, 5
=
≠≠6 7
new
≠≠8 ;
MemoryStream
≠≠< H
(
≠≠H I
Encoding
≠≠I Q
.
≠≠Q R
UTF8
≠≠R V
.
≠≠V W
GetBytes
≠≠W _
(
≠≠_ `
password
≠≠` h
)
≠≠h i
)
≠≠i j
)
≠≠j k
{
ÆÆ 
using
ØØ !
(
ØØ" #
CryptoStream
ØØ# /
	csDecrypt
ØØ0 9
=
ØØ: ;
new
ØØ< ?
CryptoStream
ØØ@ L
(
ØØL M
	msDecrypt
ØØM V
,
ØØV W
	decryptor
ØØX a
,
ØØa b
CryptoStreamMode
ØØc s
.
ØØs t
Read
ØØt x
)
ØØx y
)
ØØy z
{
∞∞ 
using
±±  %
(
±±& '
StreamReader
±±' 3
	srDecrypt
±±4 =
=
±±> ?
new
±±@ C
StreamReader
±±D P
(
±±P Q
	csDecrypt
±±Q Z
)
±±Z [
)
±±[ \
{
≤≤  !
password
µµ$ ,
=
µµ- .
	srDecrypt
µµ/ 8
.
µµ8 9
	ReadToEnd
µµ9 B
(
µµB C
)
µµC D
;
µµD E
}
∂∂  !
}
∑∑ 
}
∏∏ 
}
ππ 
}
∫∫ 
try
ªª 
{
ºº 
using
ææ 
(
ææ 
SqlConnection
ææ (

connection
ææ) 3
=
ææ4 5
new
ææ6 9
SqlConnection
ææ: G
(
ææG H
$str
ææH ~
+ææ Ä
$strææÅ Ö
+ææÜ á
$strææà î
+ææï ñ
passwordææó ü
)ææü †
)ææ† °
{
øø 

connection
¿¿ "
.
¿¿" #
Open
¿¿# '
(
¿¿' (
)
¿¿( )
;
¿¿) *
using
¡¡ 
(
¡¡ 

SqlCommand
¡¡ )
command
¡¡* 1
=
¡¡2 3
new
¡¡4 7

SqlCommand
¡¡8 B
(
¡¡B C
$str
¡¡C ]
,
¡¡] ^

connection
¡¡_ i
)
¡¡i j
)
¡¡j k
{
¬¬ 
command
√√ #
.
√√# $
ExecuteNonQuery
√√$ 3
(
√√3 4
)
√√4 5
;
√√5 6
}
ƒƒ 
}
≈≈ 
}
∆∆ 
catch
«« 
(
«« 
SqlException
«« #
	exceptSql
««$ -
)
««- .
{
»» 
IO
…… 
.
…… 
Logger
…… 
.
…… 
Log
…… !
(
……! "
NLog
……" &
.
……& '
LogLevel
……' /
.
……/ 0
Warn
……0 4
,
……4 5
$str
……6 V
,
……V W
	exceptSql
……X a
)
……a b
;
……b c
}
   
}
ÀÀ 
}
ÃÃ 	
}
ÕÕ 
public
œœ 

override
œœ 
void
œœ 
Good
œœ 
(
œœ 
)
œœ 
{
–– 
GoodG2B1
—— 
(
—— 
)
—— 
;
—— 
GoodG2B2
““ 
(
““ 
)
““ 
;
““ 
GoodB2G1
”” 
(
”” 
)
”” 
;
”” 
GoodB2G2
‘‘ 
(
‘‘ 
)
‘‘ 
;
‘‘ 
}
’’ 
}◊◊ 
}ÿÿ øû
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_06.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_06 F
:G H
AbstractTestCaseI Y
{ 
private$$ 
const$$ 
int$$ 
PRIVATE_CONST_FIVE$$ (
=$$) *
$num$$+ ,
;$$, -
public&& 

override&& 
void&& 
Bad&& 
(&& 
)&& 
{'' 
string(( 
password(( 
;(( 
if)) 

()) 
PRIVATE_CONST_FIVE)) 
==))  
$num))  !
)))! "
{** 	
password++ 
=++ 
$str++ 
;++ 
{-- 
try.. 
{// 
using11 
(11 
	TcpClient11 $
tcpConn11% ,
=11- .
new11/ 2
	TcpClient113 <
(11< =
$str11= O
,11O P
$num11Q V
)11V W
)11W X
{22 
using44 
(44 
StreamReader44 +
sr44, .
=44/ 0
new441 4
StreamReader445 A
(44A B
tcpConn44B I
.44I J
	GetStream44J S
(44S T
)44T U
)44U V
)44V W
{55 
password77 $
=77% &
sr77' )
.77) *
ReadLine77* 2
(772 3
)773 4
;774 5
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
$str==6 Q
,==Q R
exceptIO==S [
)==[ \
;==\ ]
}>> 
}?? 
}@@ 	
elseAA 
{BB 	
passwordEE 
=EE 
nullEE 
;EE 
}FF 	
ifGG 

(GG 
PRIVATE_CONST_FIVEGG 
==GG  
$numGG  !
)GG! "
{HH 	
tryII 
{JJ 
usingLL 
(LL 
SqlConnectionLL $

connectionLL% /
=LL0 1
newLL2 5
SqlConnectionLL6 C
(LLC D
$strLLD z
+LL{ |
$str	LL} Å
+
LLÇ É
$str
LLÑ ê
+
LLë í
password
LLì õ
)
LLõ ú
)
LLú ù
{MM 

connectionNN 
.NN 
OpenNN #
(NN# $
)NN$ %
;NN% &
usingOO 
(OO 

SqlCommandOO %
commandOO& -
=OO. /
newOO0 3

SqlCommandOO4 >
(OO> ?
$strOO? Y
,OOY Z

connectionOO[ e
)OOe f
)OOf g
{PP 
commandQQ 
.QQ  
ExecuteNonQueryQQ  /
(QQ/ 0
)QQ0 1
;QQ1 2
}RR 
}SS 
}TT 
catchUU 
(UU 
SqlExceptionUU 
	exceptSqlUU  )
)UU) *
{VV 
IOWW 
.WW 
LoggerWW 
.WW 
LogWW 
(WW 
NLogWW "
.WW" #
LogLevelWW# +
.WW+ ,
WarnWW, 0
,WW0 1
$strWW2 R
,WWR S
	exceptSqlWWT ]
)WW] ^
;WW^ _
}XX 
}YY 	
}ZZ 
private^^ 
void^^ 
GoodG2B1^^ 
(^^ 
)^^ 
{__ 
string`` 
password`` 
;`` 
ifaa 

(aa 
PRIVATE_CONST_FIVEaa 
!=aa  
$numaa  !
)aa! "
{bb 	
passwordee 
=ee 
nullee 
;ee 
}ff 	
elsegg 
{hh 	
passwordkk 
=kk 
$strkk &
;kk& '
}ll 	
ifmm 

(mm 
PRIVATE_CONST_FIVEmm 
==mm  
$nummm  !
)mm! "
{nn 	
tryoo 
{pp 
usingrr 
(rr 
SqlConnectionrr $

connectionrr% /
=rr0 1
newrr2 5
SqlConnectionrr6 C
(rrC D
$strrrD z
+rr{ |
$str	rr} Å
+
rrÇ É
$str
rrÑ ê
+
rrë í
password
rrì õ
)
rrõ ú
)
rrú ù
{ss 

connectiontt 
.tt 
Opentt #
(tt# $
)tt$ %
;tt% &
usinguu 
(uu 

SqlCommanduu %
commanduu& -
=uu. /
newuu0 3

SqlCommanduu4 >
(uu> ?
$struu? Y
,uuY Z

connectionuu[ e
)uue f
)uuf g
{vv 
commandww 
.ww  
ExecuteNonQueryww  /
(ww/ 0
)ww0 1
;ww1 2
}xx 
}yy 
}zz 
catch{{ 
({{ 
SqlException{{ 
	exceptSql{{  )
){{) *
{|| 
IO}} 
.}} 
Logger}} 
.}} 
Log}} 
(}} 
NLog}} "
.}}" #
LogLevel}}# +
.}}+ ,
Warn}}, 0
,}}0 1
$str}}2 R
,}}R S
	exceptSql}}T ]
)}}] ^
;}}^ _
}~~ 
} 	
}
ÄÄ 
private
ÉÉ 
void
ÉÉ 
GoodG2B2
ÉÉ 
(
ÉÉ 
)
ÉÉ 
{
ÑÑ 
string
ÖÖ 
password
ÖÖ 
;
ÖÖ 
if
ÜÜ 

(
ÜÜ  
PRIVATE_CONST_FIVE
ÜÜ 
==
ÜÜ  
$num
ÜÜ  !
)
ÜÜ! "
{
áá 	
password
ää 
=
ää 
$str
ää &
;
ää& '
}
ãã 	
else
åå 
{
çç 	
password
êê 
=
êê 
null
êê 
;
êê 
}
ëë 	
if
íí 

(
íí  
PRIVATE_CONST_FIVE
íí 
==
íí  
$num
íí  !
)
íí! "
{
ìì 	
try
îî 
{
ïï 
using
óó 
(
óó 
SqlConnection
óó $

connection
óó% /
=
óó0 1
new
óó2 5
SqlConnection
óó6 C
(
óóC D
$str
óóD z
+
óó{ |
$stróó} Å
+óóÇ É
$stróóÑ ê
+óóë í
passwordóóì õ
)óóõ ú
)óóú ù
{
òò 

connection
ôô 
.
ôô 
Open
ôô #
(
ôô# $
)
ôô$ %
;
ôô% &
using
öö 
(
öö 

SqlCommand
öö %
command
öö& -
=
öö. /
new
öö0 3

SqlCommand
öö4 >
(
öö> ?
$str
öö? Y
,
ööY Z

connection
öö[ e
)
ööe f
)
ööf g
{
õõ 
command
úú 
.
úú  
ExecuteNonQuery
úú  /
(
úú/ 0
)
úú0 1
;
úú1 2
}
ùù 
}
ûû 
}
üü 
catch
†† 
(
†† 
SqlException
†† 
	exceptSql
††  )
)
††) *
{
°° 
IO
¢¢ 
.
¢¢ 
Logger
¢¢ 
.
¢¢ 
Log
¢¢ 
(
¢¢ 
NLog
¢¢ "
.
¢¢" #
LogLevel
¢¢# +
.
¢¢+ ,
Warn
¢¢, 0
,
¢¢0 1
$str
¢¢2 R
,
¢¢R S
	exceptSql
¢¢T ]
)
¢¢] ^
;
¢¢^ _
}
££ 
}
§§ 	
}
•• 
private
®® 
void
®® 
GoodB2G1
®® 
(
®® 
)
®® 
{
©© 
string
™™ 
password
™™ 
;
™™ 
if
´´ 

(
´´  
PRIVATE_CONST_FIVE
´´ 
==
´´  
$num
´´  !
)
´´! "
{
¨¨ 	
password
≠≠ 
=
≠≠ 
$str
≠≠ 
;
≠≠ 
{
ØØ 
try
∞∞ 
{
±± 
using
≥≥ 
(
≥≥ 
	TcpClient
≥≥ $
tcpConn
≥≥% ,
=
≥≥- .
new
≥≥/ 2
	TcpClient
≥≥3 <
(
≥≥< =
$str
≥≥= O
,
≥≥O P
$num
≥≥Q V
)
≥≥V W
)
≥≥W X
{
¥¥ 
using
∂∂ 
(
∂∂ 
StreamReader
∂∂ +
sr
∂∂, .
=
∂∂/ 0
new
∂∂1 4
StreamReader
∂∂5 A
(
∂∂A B
tcpConn
∂∂B I
.
∂∂I J
	GetStream
∂∂J S
(
∂∂S T
)
∂∂T U
)
∂∂U V
)
∂∂V W
{
∑∑ 
password
ππ $
=
ππ% &
sr
ππ' )
.
ππ) *
ReadLine
ππ* 2
(
ππ2 3
)
ππ3 4
;
ππ4 5
}
∫∫ 
}
ªª 
}
ºº 
catch
ΩΩ 
(
ΩΩ 
IOException
ΩΩ "
exceptIO
ΩΩ# +
)
ΩΩ+ ,
{
ææ 
IO
øø 
.
øø 
Logger
øø 
.
øø 
Log
øø !
(
øø! "
NLog
øø" &
.
øø& '
LogLevel
øø' /
.
øø/ 0
Warn
øø0 4
,
øø4 5
$str
øø6 Q
,
øøQ R
exceptIO
øøS [
)
øø[ \
;
øø\ ]
}
¿¿ 
}
¡¡ 
}
¬¬ 	
else
√√ 
{
ƒƒ 	
password
«« 
=
«« 
null
«« 
;
«« 
}
»» 	
if
…… 

(
……  
PRIVATE_CONST_FIVE
…… 
!=
……  
$num
……  !
)
……! "
{
   	
IO
ÃÃ 
.
ÃÃ 
	WriteLine
ÃÃ 
(
ÃÃ 
$str
ÃÃ /
)
ÃÃ/ 0
;
ÃÃ0 1
}
ÕÕ 	
else
ŒŒ 
{
œœ 	
if
–– 
(
–– 
password
–– 
!=
–– 
null
––  
)
––  !
{
—— 
{
”” 
using
‘‘ 
(
‘‘ &
AesCryptoServiceProvider
‘‘ 3
aesAlg
‘‘4 :
=
‘‘; <
new
‘‘= @&
AesCryptoServiceProvider
‘‘A Y
(
‘‘Y Z
)
‘‘Z [
)
‘‘[ \
{
’’ 
aesAlg
÷÷ 
.
÷÷ 
Padding
÷÷ &
=
÷÷' (
PaddingMode
÷÷) 4
.
÷÷4 5
None
÷÷5 9
;
÷÷9 :
aesAlg
◊◊ 
.
◊◊ 
Key
◊◊ "
=
◊◊# $
Encoding
◊◊% -
.
◊◊- .
UTF8
◊◊. 2
.
◊◊2 3
GetBytes
◊◊3 ;
(
◊◊; <
$str
◊◊< N
)
◊◊N O
;
◊◊O P
ICryptoTransform
ŸŸ (
	decryptor
ŸŸ) 2
=
ŸŸ3 4
aesAlg
ŸŸ5 ;
.
ŸŸ; <
CreateDecryptor
ŸŸ< K
(
ŸŸK L
aesAlg
ŸŸL R
.
ŸŸR S
Key
ŸŸS V
,
ŸŸV W
aesAlg
ŸŸX ^
.
ŸŸ^ _
IV
ŸŸ_ a
)
ŸŸa b
;
ŸŸb c
using
€€ 
(
€€ 
MemoryStream
€€ +
	msDecrypt
€€, 5
=
€€6 7
new
€€8 ;
MemoryStream
€€< H
(
€€H I
Encoding
€€I Q
.
€€Q R
UTF8
€€R V
.
€€V W
GetBytes
€€W _
(
€€_ `
password
€€` h
)
€€h i
)
€€i j
)
€€j k
{
‹‹ 
using
›› !
(
››" #
CryptoStream
››# /
	csDecrypt
››0 9
=
››: ;
new
››< ?
CryptoStream
››@ L
(
››L M
	msDecrypt
››M V
,
››V W
	decryptor
››X a
,
››a b
CryptoStreamMode
››c s
.
››s t
Read
››t x
)
››x y
)
››y z
{
ﬁﬁ 
using
ﬂﬂ  %
(
ﬂﬂ& '
StreamReader
ﬂﬂ' 3
	srDecrypt
ﬂﬂ4 =
=
ﬂﬂ> ?
new
ﬂﬂ@ C
StreamReader
ﬂﬂD P
(
ﬂﬂP Q
	csDecrypt
ﬂﬂQ Z
)
ﬂﬂZ [
)
ﬂﬂ[ \
{
‡‡  !
password
„„$ ,
=
„„- .
	srDecrypt
„„/ 8
.
„„8 9
	ReadToEnd
„„9 B
(
„„B C
)
„„C D
;
„„D E
}
‰‰  !
}
ÂÂ 
}
ÊÊ 
}
ÁÁ 
}
ËË 
try
ÈÈ 
{
ÍÍ 
using
ÏÏ 
(
ÏÏ 
SqlConnection
ÏÏ (

connection
ÏÏ) 3
=
ÏÏ4 5
new
ÏÏ6 9
SqlConnection
ÏÏ: G
(
ÏÏG H
$str
ÏÏH ~
+ÏÏ Ä
$strÏÏÅ Ö
+ÏÏÜ á
$strÏÏà î
+ÏÏï ñ
passwordÏÏó ü
)ÏÏü †
)ÏÏ† °
{
ÌÌ 

connection
ÓÓ "
.
ÓÓ" #
Open
ÓÓ# '
(
ÓÓ' (
)
ÓÓ( )
;
ÓÓ) *
using
ÔÔ 
(
ÔÔ 

SqlCommand
ÔÔ )
command
ÔÔ* 1
=
ÔÔ2 3
new
ÔÔ4 7

SqlCommand
ÔÔ8 B
(
ÔÔB C
$str
ÔÔC ]
,
ÔÔ] ^

connection
ÔÔ_ i
)
ÔÔi j
)
ÔÔj k
{
 
command
ÒÒ #
.
ÒÒ# $
ExecuteNonQuery
ÒÒ$ 3
(
ÒÒ3 4
)
ÒÒ4 5
;
ÒÒ5 6
}
ÚÚ 
}
ÛÛ 
}
ÙÙ 
catch
ıı 
(
ıı 
SqlException
ıı #
	exceptSql
ıı$ -
)
ıı- .
{
ˆˆ 
IO
˜˜ 
.
˜˜ 
Logger
˜˜ 
.
˜˜ 
Log
˜˜ !
(
˜˜! "
NLog
˜˜" &
.
˜˜& '
LogLevel
˜˜' /
.
˜˜/ 0
Warn
˜˜0 4
,
˜˜4 5
$str
˜˜6 V
,
˜˜V W
	exceptSql
˜˜X a
)
˜˜a b
;
˜˜b c
}
¯¯ 
}
˘˘ 
}
˙˙ 	
}
˚˚ 
private
˛˛ 
void
˛˛ 
GoodB2G2
˛˛ 
(
˛˛ 
)
˛˛ 
{
ˇˇ 
string
ÄÄ 
password
ÄÄ 
;
ÄÄ 
if
ÅÅ 

(
ÅÅ  
PRIVATE_CONST_FIVE
ÅÅ 
==
ÅÅ  
$num
ÅÅ  !
)
ÅÅ! "
{
ÇÇ 	
password
ÉÉ 
=
ÉÉ 
$str
ÉÉ 
;
ÉÉ 
{
ÖÖ 
try
ÜÜ 
{
áá 
using
ââ 
(
ââ 
	TcpClient
ââ $
tcpConn
ââ% ,
=
ââ- .
new
ââ/ 2
	TcpClient
ââ3 <
(
ââ< =
$str
ââ= O
,
ââO P
$num
ââQ V
)
ââV W
)
ââW X
{
ää 
using
åå 
(
åå 
StreamReader
åå +
sr
åå, .
=
åå/ 0
new
åå1 4
StreamReader
åå5 A
(
ååA B
tcpConn
ååB I
.
ååI J
	GetStream
ååJ S
(
ååS T
)
ååT U
)
ååU V
)
ååV W
{
çç 
password
èè $
=
èè% &
sr
èè' )
.
èè) *
ReadLine
èè* 2
(
èè2 3
)
èè3 4
;
èè4 5
}
êê 
}
ëë 
}
íí 
catch
ìì 
(
ìì 
IOException
ìì "
exceptIO
ìì# +
)
ìì+ ,
{
îî 
IO
ïï 
.
ïï 
Logger
ïï 
.
ïï 
Log
ïï !
(
ïï! "
NLog
ïï" &
.
ïï& '
LogLevel
ïï' /
.
ïï/ 0
Warn
ïï0 4
,
ïï4 5
$str
ïï6 Q
,
ïïQ R
exceptIO
ïïS [
)
ïï[ \
;
ïï\ ]
}
ññ 
}
óó 
}
òò 	
else
ôô 
{
öö 	
password
ùù 
=
ùù 
null
ùù 
;
ùù 
}
ûû 	
if
üü 

(
üü  
PRIVATE_CONST_FIVE
üü 
==
üü  
$num
üü  !
)
üü! "
{
†† 	
if
°° 
(
°° 
password
°° 
!=
°° 
null
°°  
)
°°  !
{
¢¢ 
{
§§ 
using
•• 
(
•• &
AesCryptoServiceProvider
•• 3
aesAlg
••4 :
=
••; <
new
••= @&
AesCryptoServiceProvider
••A Y
(
••Y Z
)
••Z [
)
••[ \
{
¶¶ 
aesAlg
ßß 
.
ßß 
Padding
ßß &
=
ßß' (
PaddingMode
ßß) 4
.
ßß4 5
None
ßß5 9
;
ßß9 :
aesAlg
®® 
.
®® 
Key
®® "
=
®®# $
Encoding
®®% -
.
®®- .
UTF8
®®. 2
.
®®2 3
GetBytes
®®3 ;
(
®®; <
$str
®®< N
)
®®N O
;
®®O P
ICryptoTransform
™™ (
	decryptor
™™) 2
=
™™3 4
aesAlg
™™5 ;
.
™™; <
CreateDecryptor
™™< K
(
™™K L
aesAlg
™™L R
.
™™R S
Key
™™S V
,
™™V W
aesAlg
™™X ^
.
™™^ _
IV
™™_ a
)
™™a b
;
™™b c
using
¨¨ 
(
¨¨ 
MemoryStream
¨¨ +
	msDecrypt
¨¨, 5
=
¨¨6 7
new
¨¨8 ;
MemoryStream
¨¨< H
(
¨¨H I
Encoding
¨¨I Q
.
¨¨Q R
UTF8
¨¨R V
.
¨¨V W
GetBytes
¨¨W _
(
¨¨_ `
password
¨¨` h
)
¨¨h i
)
¨¨i j
)
¨¨j k
{
≠≠ 
using
ÆÆ !
(
ÆÆ" #
CryptoStream
ÆÆ# /
	csDecrypt
ÆÆ0 9
=
ÆÆ: ;
new
ÆÆ< ?
CryptoStream
ÆÆ@ L
(
ÆÆL M
	msDecrypt
ÆÆM V
,
ÆÆV W
	decryptor
ÆÆX a
,
ÆÆa b
CryptoStreamMode
ÆÆc s
.
ÆÆs t
Read
ÆÆt x
)
ÆÆx y
)
ÆÆy z
{
ØØ 
using
∞∞  %
(
∞∞& '
StreamReader
∞∞' 3
	srDecrypt
∞∞4 =
=
∞∞> ?
new
∞∞@ C
StreamReader
∞∞D P
(
∞∞P Q
	csDecrypt
∞∞Q Z
)
∞∞Z [
)
∞∞[ \
{
±±  !
password
¥¥$ ,
=
¥¥- .
	srDecrypt
¥¥/ 8
.
¥¥8 9
	ReadToEnd
¥¥9 B
(
¥¥B C
)
¥¥C D
;
¥¥D E
}
µµ  !
}
∂∂ 
}
∑∑ 
}
∏∏ 
}
ππ 
try
∫∫ 
{
ªª 
using
ΩΩ 
(
ΩΩ 
SqlConnection
ΩΩ (

connection
ΩΩ) 3
=
ΩΩ4 5
new
ΩΩ6 9
SqlConnection
ΩΩ: G
(
ΩΩG H
$str
ΩΩH ~
+ΩΩ Ä
$strΩΩÅ Ö
+ΩΩÜ á
$strΩΩà î
+ΩΩï ñ
passwordΩΩó ü
)ΩΩü †
)ΩΩ† °
{
ææ 

connection
øø "
.
øø" #
Open
øø# '
(
øø' (
)
øø( )
;
øø) *
using
¿¿ 
(
¿¿ 

SqlCommand
¿¿ )
command
¿¿* 1
=
¿¿2 3
new
¿¿4 7

SqlCommand
¿¿8 B
(
¿¿B C
$str
¿¿C ]
,
¿¿] ^

connection
¿¿_ i
)
¿¿i j
)
¿¿j k
{
¡¡ 
command
¬¬ #
.
¬¬# $
ExecuteNonQuery
¬¬$ 3
(
¬¬3 4
)
¬¬4 5
;
¬¬5 6
}
√√ 
}
ƒƒ 
}
≈≈ 
catch
∆∆ 
(
∆∆ 
SqlException
∆∆ #
	exceptSql
∆∆$ -
)
∆∆- .
{
«« 
IO
»» 
.
»» 
Logger
»» 
.
»» 
Log
»» !
(
»»! "
NLog
»»" &
.
»»& '
LogLevel
»»' /
.
»»/ 0
Warn
»»0 4
,
»»4 5
$str
»»6 V
,
»»V W
	exceptSql
»»X a
)
»»a b
;
»»b c
}
…… 
}
   
}
ÀÀ 	
}
ÃÃ 
public
ŒŒ 

override
ŒŒ 
void
ŒŒ 
Good
ŒŒ 
(
ŒŒ 
)
ŒŒ 
{
œœ 
GoodG2B1
–– 
(
–– 
)
–– 
;
–– 
GoodG2B2
—— 
(
—— 
)
—— 
;
—— 
GoodB2G1
““ 
(
““ 
)
““ 
;
““ 
GoodB2G2
”” 
(
”” 
)
”” 
;
”” 
}
‘‘ 
}÷÷ 
}◊◊ ﬂù
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_07.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_07 F
:G H
AbstractTestCaseI Y
{ 
private$$ 
int$$ 
privateFive$$ 
=$$ 
$num$$ 
;$$  
public&& 

override&& 
void&& 
Bad&& 
(&& 
)&& 
{'' 
string(( 
password(( 
;(( 
if)) 

()) 
privateFive)) 
==)) 
$num)) 
))) 
{** 	
password++ 
=++ 
$str++ 
;++ 
{-- 
try.. 
{// 
using11 
(11 
	TcpClient11 $
tcpConn11% ,
=11- .
new11/ 2
	TcpClient113 <
(11< =
$str11= O
,11O P
$num11Q V
)11V W
)11W X
{22 
using44 
(44 
StreamReader44 +
sr44, .
=44/ 0
new441 4
StreamReader445 A
(44A B
tcpConn44B I
.44I J
	GetStream44J S
(44S T
)44T U
)44U V
)44V W
{55 
password77 $
=77% &
sr77' )
.77) *
ReadLine77* 2
(772 3
)773 4
;774 5
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
$str==6 Q
,==Q R
exceptIO==S [
)==[ \
;==\ ]
}>> 
}?? 
}@@ 	
elseAA 
{BB 	
passwordEE 
=EE 
nullEE 
;EE 
}FF 	
ifGG 

(GG 
privateFiveGG 
==GG 
$numGG 
)GG 
{HH 	
tryII 
{JJ 
usingLL 
(LL 
SqlConnectionLL $

connectionLL% /
=LL0 1
newLL2 5
SqlConnectionLL6 C
(LLC D
$strLLD z
+LL{ |
$str	LL} Å
+
LLÇ É
$str
LLÑ ê
+
LLë í
password
LLì õ
)
LLõ ú
)
LLú ù
{MM 

connectionNN 
.NN 
OpenNN #
(NN# $
)NN$ %
;NN% &
usingOO 
(OO 

SqlCommandOO %
commandOO& -
=OO. /
newOO0 3

SqlCommandOO4 >
(OO> ?
$strOO? Y
,OOY Z

connectionOO[ e
)OOe f
)OOf g
{PP 
commandQQ 
.QQ  
ExecuteNonQueryQQ  /
(QQ/ 0
)QQ0 1
;QQ1 2
}RR 
}SS 
}TT 
catchUU 
(UU 
SqlExceptionUU 
	exceptSqlUU  )
)UU) *
{VV 
IOWW 
.WW 
LoggerWW 
.WW 
LogWW 
(WW 
NLogWW "
.WW" #
LogLevelWW# +
.WW+ ,
WarnWW, 0
,WW0 1
$strWW2 R
,WWR S
	exceptSqlWWT ]
)WW] ^
;WW^ _
}XX 
}YY 	
}ZZ 
private^^ 
void^^ 
GoodG2B1^^ 
(^^ 
)^^ 
{__ 
string`` 
password`` 
;`` 
ifaa 

(aa 
privateFiveaa 
!=aa 
$numaa 
)aa 
{bb 	
passwordee 
=ee 
nullee 
;ee 
}ff 	
elsegg 
{hh 	
passwordkk 
=kk 
$strkk &
;kk& '
}ll 	
ifmm 

(mm 
privateFivemm 
==mm 
$nummm 
)mm 
{nn 	
tryoo 
{pp 
usingrr 
(rr 
SqlConnectionrr $

connectionrr% /
=rr0 1
newrr2 5
SqlConnectionrr6 C
(rrC D
$strrrD z
+rr{ |
$str	rr} Å
+
rrÇ É
$str
rrÑ ê
+
rrë í
password
rrì õ
)
rrõ ú
)
rrú ù
{ss 

connectiontt 
.tt 
Opentt #
(tt# $
)tt$ %
;tt% &
usinguu 
(uu 

SqlCommanduu %
commanduu& -
=uu. /
newuu0 3

SqlCommanduu4 >
(uu> ?
$struu? Y
,uuY Z

connectionuu[ e
)uue f
)uuf g
{vv 
commandww 
.ww  
ExecuteNonQueryww  /
(ww/ 0
)ww0 1
;ww1 2
}xx 
}yy 
}zz 
catch{{ 
({{ 
SqlException{{ 
	exceptSql{{  )
){{) *
{|| 
IO}} 
.}} 
Logger}} 
.}} 
Log}} 
(}} 
NLog}} "
.}}" #
LogLevel}}# +
.}}+ ,
Warn}}, 0
,}}0 1
$str}}2 R
,}}R S
	exceptSql}}T ]
)}}] ^
;}}^ _
}~~ 
} 	
}
ÄÄ 
private
ÉÉ 
void
ÉÉ 
GoodG2B2
ÉÉ 
(
ÉÉ 
)
ÉÉ 
{
ÑÑ 
string
ÖÖ 
password
ÖÖ 
;
ÖÖ 
if
ÜÜ 

(
ÜÜ 
privateFive
ÜÜ 
==
ÜÜ 
$num
ÜÜ 
)
ÜÜ 
{
áá 	
password
ää 
=
ää 
$str
ää &
;
ää& '
}
ãã 	
else
åå 
{
çç 	
password
êê 
=
êê 
null
êê 
;
êê 
}
ëë 	
if
íí 

(
íí 
privateFive
íí 
==
íí 
$num
íí 
)
íí 
{
ìì 	
try
îî 
{
ïï 
using
óó 
(
óó 
SqlConnection
óó $

connection
óó% /
=
óó0 1
new
óó2 5
SqlConnection
óó6 C
(
óóC D
$str
óóD z
+
óó{ |
$stróó} Å
+óóÇ É
$stróóÑ ê
+óóë í
passwordóóì õ
)óóõ ú
)óóú ù
{
òò 

connection
ôô 
.
ôô 
Open
ôô #
(
ôô# $
)
ôô$ %
;
ôô% &
using
öö 
(
öö 

SqlCommand
öö %
command
öö& -
=
öö. /
new
öö0 3

SqlCommand
öö4 >
(
öö> ?
$str
öö? Y
,
ööY Z

connection
öö[ e
)
ööe f
)
ööf g
{
õõ 
command
úú 
.
úú  
ExecuteNonQuery
úú  /
(
úú/ 0
)
úú0 1
;
úú1 2
}
ùù 
}
ûû 
}
üü 
catch
†† 
(
†† 
SqlException
†† 
	exceptSql
††  )
)
††) *
{
°° 
IO
¢¢ 
.
¢¢ 
Logger
¢¢ 
.
¢¢ 
Log
¢¢ 
(
¢¢ 
NLog
¢¢ "
.
¢¢" #
LogLevel
¢¢# +
.
¢¢+ ,
Warn
¢¢, 0
,
¢¢0 1
$str
¢¢2 R
,
¢¢R S
	exceptSql
¢¢T ]
)
¢¢] ^
;
¢¢^ _
}
££ 
}
§§ 	
}
•• 
private
®® 
void
®® 
GoodB2G1
®® 
(
®® 
)
®® 
{
©© 
string
™™ 
password
™™ 
;
™™ 
if
´´ 

(
´´ 
privateFive
´´ 
==
´´ 
$num
´´ 
)
´´ 
{
¨¨ 	
password
≠≠ 
=
≠≠ 
$str
≠≠ 
;
≠≠ 
{
ØØ 
try
∞∞ 
{
±± 
using
≥≥ 
(
≥≥ 
	TcpClient
≥≥ $
tcpConn
≥≥% ,
=
≥≥- .
new
≥≥/ 2
	TcpClient
≥≥3 <
(
≥≥< =
$str
≥≥= O
,
≥≥O P
$num
≥≥Q V
)
≥≥V W
)
≥≥W X
{
¥¥ 
using
∂∂ 
(
∂∂ 
StreamReader
∂∂ +
sr
∂∂, .
=
∂∂/ 0
new
∂∂1 4
StreamReader
∂∂5 A
(
∂∂A B
tcpConn
∂∂B I
.
∂∂I J
	GetStream
∂∂J S
(
∂∂S T
)
∂∂T U
)
∂∂U V
)
∂∂V W
{
∑∑ 
password
ππ $
=
ππ% &
sr
ππ' )
.
ππ) *
ReadLine
ππ* 2
(
ππ2 3
)
ππ3 4
;
ππ4 5
}
∫∫ 
}
ªª 
}
ºº 
catch
ΩΩ 
(
ΩΩ 
IOException
ΩΩ "
exceptIO
ΩΩ# +
)
ΩΩ+ ,
{
ææ 
IO
øø 
.
øø 
Logger
øø 
.
øø 
Log
øø !
(
øø! "
NLog
øø" &
.
øø& '
LogLevel
øø' /
.
øø/ 0
Warn
øø0 4
,
øø4 5
$str
øø6 Q
,
øøQ R
exceptIO
øøS [
)
øø[ \
;
øø\ ]
}
¿¿ 
}
¡¡ 
}
¬¬ 	
else
√√ 
{
ƒƒ 	
password
«« 
=
«« 
null
«« 
;
«« 
}
»» 	
if
…… 

(
…… 
privateFive
…… 
!=
…… 
$num
…… 
)
…… 
{
   	
IO
ÃÃ 
.
ÃÃ 
	WriteLine
ÃÃ 
(
ÃÃ 
$str
ÃÃ /
)
ÃÃ/ 0
;
ÃÃ0 1
}
ÕÕ 	
else
ŒŒ 
{
œœ 	
if
–– 
(
–– 
password
–– 
!=
–– 
null
––  
)
––  !
{
—— 
{
”” 
using
‘‘ 
(
‘‘ &
AesCryptoServiceProvider
‘‘ 3
aesAlg
‘‘4 :
=
‘‘; <
new
‘‘= @&
AesCryptoServiceProvider
‘‘A Y
(
‘‘Y Z
)
‘‘Z [
)
‘‘[ \
{
’’ 
aesAlg
÷÷ 
.
÷÷ 
Padding
÷÷ &
=
÷÷' (
PaddingMode
÷÷) 4
.
÷÷4 5
None
÷÷5 9
;
÷÷9 :
aesAlg
◊◊ 
.
◊◊ 
Key
◊◊ "
=
◊◊# $
Encoding
◊◊% -
.
◊◊- .
UTF8
◊◊. 2
.
◊◊2 3
GetBytes
◊◊3 ;
(
◊◊; <
$str
◊◊< N
)
◊◊N O
;
◊◊O P
ICryptoTransform
ŸŸ (
	decryptor
ŸŸ) 2
=
ŸŸ3 4
aesAlg
ŸŸ5 ;
.
ŸŸ; <
CreateDecryptor
ŸŸ< K
(
ŸŸK L
aesAlg
ŸŸL R
.
ŸŸR S
Key
ŸŸS V
,
ŸŸV W
aesAlg
ŸŸX ^
.
ŸŸ^ _
IV
ŸŸ_ a
)
ŸŸa b
;
ŸŸb c
using
€€ 
(
€€ 
MemoryStream
€€ +
	msDecrypt
€€, 5
=
€€6 7
new
€€8 ;
MemoryStream
€€< H
(
€€H I
Encoding
€€I Q
.
€€Q R
UTF8
€€R V
.
€€V W
GetBytes
€€W _
(
€€_ `
password
€€` h
)
€€h i
)
€€i j
)
€€j k
{
‹‹ 
using
›› !
(
››" #
CryptoStream
››# /
	csDecrypt
››0 9
=
››: ;
new
››< ?
CryptoStream
››@ L
(
››L M
	msDecrypt
››M V
,
››V W
	decryptor
››X a
,
››a b
CryptoStreamMode
››c s
.
››s t
Read
››t x
)
››x y
)
››y z
{
ﬁﬁ 
using
ﬂﬂ  %
(
ﬂﬂ& '
StreamReader
ﬂﬂ' 3
	srDecrypt
ﬂﬂ4 =
=
ﬂﬂ> ?
new
ﬂﬂ@ C
StreamReader
ﬂﬂD P
(
ﬂﬂP Q
	csDecrypt
ﬂﬂQ Z
)
ﬂﬂZ [
)
ﬂﬂ[ \
{
‡‡  !
password
„„$ ,
=
„„- .
	srDecrypt
„„/ 8
.
„„8 9
	ReadToEnd
„„9 B
(
„„B C
)
„„C D
;
„„D E
}
‰‰  !
}
ÂÂ 
}
ÊÊ 
}
ÁÁ 
}
ËË 
try
ÈÈ 
{
ÍÍ 
using
ÏÏ 
(
ÏÏ 
SqlConnection
ÏÏ (

connection
ÏÏ) 3
=
ÏÏ4 5
new
ÏÏ6 9
SqlConnection
ÏÏ: G
(
ÏÏG H
$str
ÏÏH ~
+ÏÏ Ä
$strÏÏÅ Ö
+ÏÏÜ á
$strÏÏà î
+ÏÏï ñ
passwordÏÏó ü
)ÏÏü †
)ÏÏ† °
{
ÌÌ 

connection
ÓÓ "
.
ÓÓ" #
Open
ÓÓ# '
(
ÓÓ' (
)
ÓÓ( )
;
ÓÓ) *
using
ÔÔ 
(
ÔÔ 

SqlCommand
ÔÔ )
command
ÔÔ* 1
=
ÔÔ2 3
new
ÔÔ4 7

SqlCommand
ÔÔ8 B
(
ÔÔB C
$str
ÔÔC ]
,
ÔÔ] ^

connection
ÔÔ_ i
)
ÔÔi j
)
ÔÔj k
{
 
command
ÒÒ #
.
ÒÒ# $
ExecuteNonQuery
ÒÒ$ 3
(
ÒÒ3 4
)
ÒÒ4 5
;
ÒÒ5 6
}
ÚÚ 
}
ÛÛ 
}
ÙÙ 
catch
ıı 
(
ıı 
SqlException
ıı #
	exceptSql
ıı$ -
)
ıı- .
{
ˆˆ 
IO
˜˜ 
.
˜˜ 
Logger
˜˜ 
.
˜˜ 
Log
˜˜ !
(
˜˜! "
NLog
˜˜" &
.
˜˜& '
LogLevel
˜˜' /
.
˜˜/ 0
Warn
˜˜0 4
,
˜˜4 5
$str
˜˜6 V
,
˜˜V W
	exceptSql
˜˜X a
)
˜˜a b
;
˜˜b c
}
¯¯ 
}
˘˘ 
}
˙˙ 	
}
˚˚ 
private
˛˛ 
void
˛˛ 
GoodB2G2
˛˛ 
(
˛˛ 
)
˛˛ 
{
ˇˇ 
string
ÄÄ 
password
ÄÄ 
;
ÄÄ 
if
ÅÅ 

(
ÅÅ 
privateFive
ÅÅ 
==
ÅÅ 
$num
ÅÅ 
)
ÅÅ 
{
ÇÇ 	
password
ÉÉ 
=
ÉÉ 
$str
ÉÉ 
;
ÉÉ 
{
ÖÖ 
try
ÜÜ 
{
áá 
using
ââ 
(
ââ 
	TcpClient
ââ $
tcpConn
ââ% ,
=
ââ- .
new
ââ/ 2
	TcpClient
ââ3 <
(
ââ< =
$str
ââ= O
,
ââO P
$num
ââQ V
)
ââV W
)
ââW X
{
ää 
using
åå 
(
åå 
StreamReader
åå +
sr
åå, .
=
åå/ 0
new
åå1 4
StreamReader
åå5 A
(
ååA B
tcpConn
ååB I
.
ååI J
	GetStream
ååJ S
(
ååS T
)
ååT U
)
ååU V
)
ååV W
{
çç 
password
èè $
=
èè% &
sr
èè' )
.
èè) *
ReadLine
èè* 2
(
èè2 3
)
èè3 4
;
èè4 5
}
êê 
}
ëë 
}
íí 
catch
ìì 
(
ìì 
IOException
ìì "
exceptIO
ìì# +
)
ìì+ ,
{
îî 
IO
ïï 
.
ïï 
Logger
ïï 
.
ïï 
Log
ïï !
(
ïï! "
NLog
ïï" &
.
ïï& '
LogLevel
ïï' /
.
ïï/ 0
Warn
ïï0 4
,
ïï4 5
$str
ïï6 Q
,
ïïQ R
exceptIO
ïïS [
)
ïï[ \
;
ïï\ ]
}
ññ 
}
óó 
}
òò 	
else
ôô 
{
öö 	
password
ùù 
=
ùù 
null
ùù 
;
ùù 
}
ûû 	
if
üü 

(
üü 
privateFive
üü 
==
üü 
$num
üü 
)
üü 
{
†† 	
if
°° 
(
°° 
password
°° 
!=
°° 
null
°°  
)
°°  !
{
¢¢ 
{
§§ 
using
•• 
(
•• &
AesCryptoServiceProvider
•• 3
aesAlg
••4 :
=
••; <
new
••= @&
AesCryptoServiceProvider
••A Y
(
••Y Z
)
••Z [
)
••[ \
{
¶¶ 
aesAlg
ßß 
.
ßß 
Padding
ßß &
=
ßß' (
PaddingMode
ßß) 4
.
ßß4 5
None
ßß5 9
;
ßß9 :
aesAlg
®® 
.
®® 
Key
®® "
=
®®# $
Encoding
®®% -
.
®®- .
UTF8
®®. 2
.
®®2 3
GetBytes
®®3 ;
(
®®; <
$str
®®< N
)
®®N O
;
®®O P
ICryptoTransform
™™ (
	decryptor
™™) 2
=
™™3 4
aesAlg
™™5 ;
.
™™; <
CreateDecryptor
™™< K
(
™™K L
aesAlg
™™L R
.
™™R S
Key
™™S V
,
™™V W
aesAlg
™™X ^
.
™™^ _
IV
™™_ a
)
™™a b
;
™™b c
using
¨¨ 
(
¨¨ 
MemoryStream
¨¨ +
	msDecrypt
¨¨, 5
=
¨¨6 7
new
¨¨8 ;
MemoryStream
¨¨< H
(
¨¨H I
Encoding
¨¨I Q
.
¨¨Q R
UTF8
¨¨R V
.
¨¨V W
GetBytes
¨¨W _
(
¨¨_ `
password
¨¨` h
)
¨¨h i
)
¨¨i j
)
¨¨j k
{
≠≠ 
using
ÆÆ !
(
ÆÆ" #
CryptoStream
ÆÆ# /
	csDecrypt
ÆÆ0 9
=
ÆÆ: ;
new
ÆÆ< ?
CryptoStream
ÆÆ@ L
(
ÆÆL M
	msDecrypt
ÆÆM V
,
ÆÆV W
	decryptor
ÆÆX a
,
ÆÆa b
CryptoStreamMode
ÆÆc s
.
ÆÆs t
Read
ÆÆt x
)
ÆÆx y
)
ÆÆy z
{
ØØ 
using
∞∞  %
(
∞∞& '
StreamReader
∞∞' 3
	srDecrypt
∞∞4 =
=
∞∞> ?
new
∞∞@ C
StreamReader
∞∞D P
(
∞∞P Q
	csDecrypt
∞∞Q Z
)
∞∞Z [
)
∞∞[ \
{
±±  !
password
¥¥$ ,
=
¥¥- .
	srDecrypt
¥¥/ 8
.
¥¥8 9
	ReadToEnd
¥¥9 B
(
¥¥B C
)
¥¥C D
;
¥¥D E
}
µµ  !
}
∂∂ 
}
∑∑ 
}
∏∏ 
}
ππ 
try
∫∫ 
{
ªª 
using
ΩΩ 
(
ΩΩ 
SqlConnection
ΩΩ (

connection
ΩΩ) 3
=
ΩΩ4 5
new
ΩΩ6 9
SqlConnection
ΩΩ: G
(
ΩΩG H
$str
ΩΩH ~
+ΩΩ Ä
$strΩΩÅ Ö
+ΩΩÜ á
$strΩΩà î
+ΩΩï ñ
passwordΩΩó ü
)ΩΩü †
)ΩΩ† °
{
ææ 

connection
øø "
.
øø" #
Open
øø# '
(
øø' (
)
øø( )
;
øø) *
using
¿¿ 
(
¿¿ 

SqlCommand
¿¿ )
command
¿¿* 1
=
¿¿2 3
new
¿¿4 7

SqlCommand
¿¿8 B
(
¿¿B C
$str
¿¿C ]
,
¿¿] ^

connection
¿¿_ i
)
¿¿i j
)
¿¿j k
{
¡¡ 
command
¬¬ #
.
¬¬# $
ExecuteNonQuery
¬¬$ 3
(
¬¬3 4
)
¬¬4 5
;
¬¬5 6
}
√√ 
}
ƒƒ 
}
≈≈ 
catch
∆∆ 
(
∆∆ 
SqlException
∆∆ #
	exceptSql
∆∆$ -
)
∆∆- .
{
«« 
IO
»» 
.
»» 
Logger
»» 
.
»» 
Log
»» !
(
»»! "
NLog
»»" &
.
»»& '
LogLevel
»»' /
.
»»/ 0
Warn
»»0 4
,
»»4 5
$str
»»6 V
,
»»V W
	exceptSql
»»X a
)
»»a b
;
»»b c
}
…… 
}
   
}
ÀÀ 	
}
ÃÃ 
public
ŒŒ 

override
ŒŒ 
void
ŒŒ 
Good
ŒŒ 
(
ŒŒ 
)
ŒŒ 
{
œœ 
GoodG2B1
–– 
(
–– 
)
–– 
;
–– 
GoodG2B2
—— 
(
—— 
)
—— 
;
—— 
GoodB2G1
““ 
(
““ 
)
““ 
;
““ 
GoodB2G2
”” 
(
”” 
)
”” 
;
”” 
}
‘‘ 
}÷÷ 
}◊◊ ‚†
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_08.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_08 F
:G H
AbstractTestCaseI Y
{ 
private$$ 
static$$ 
bool$$ 
PrivateReturnsTrue$$ *
($$* +
)$$+ ,
{%% 
return&& 
true&& 
;&& 
}'' 
private)) 
static)) 
bool)) 
PrivateReturnsFalse)) +
())+ ,
))), -
{** 
return++ 
false++ 
;++ 
},, 
public.. 

override.. 
void.. 
Bad.. 
(.. 
).. 
{// 
string00 
password00 
;00 
if11 

(11 
PrivateReturnsTrue11 
(11 
)11  
)11  !
{22 	
password33 
=33 
$str33 
;33 
{55 
try66 
{77 
using99 
(99 
	TcpClient99 $
tcpConn99% ,
=99- .
new99/ 2
	TcpClient993 <
(99< =
$str99= O
,99O P
$num99Q V
)99V W
)99W X
{:: 
using<< 
(<< 
StreamReader<< +
sr<<, .
=<</ 0
new<<1 4
StreamReader<<5 A
(<<A B
tcpConn<<B I
.<<I J
	GetStream<<J S
(<<S T
)<<T U
)<<U V
)<<V W
{== 
password?? $
=??% &
sr??' )
.??) *
ReadLine??* 2
(??2 3
)??3 4
;??4 5
}@@ 
}AA 
}BB 
catchCC 
(CC 
IOExceptionCC "
exceptIOCC# +
)CC+ ,
{DD 
IOEE 
.EE 
LoggerEE 
.EE 
LogEE !
(EE! "
NLogEE" &
.EE& '
LogLevelEE' /
.EE/ 0
WarnEE0 4
,EE4 5
$strEE6 Q
,EEQ R
exceptIOEES [
)EE[ \
;EE\ ]
}FF 
}GG 
}HH 	
elseII 
{JJ 	
passwordMM 
=MM 
nullMM 
;MM 
}NN 	
ifOO 

(OO 
PrivateReturnsTrueOO 
(OO 
)OO  
)OO  !
{PP 	
tryQQ 
{RR 
usingTT 
(TT 
SqlConnectionTT $

connectionTT% /
=TT0 1
newTT2 5
SqlConnectionTT6 C
(TTC D
$strTTD z
+TT{ |
$str	TT} Å
+
TTÇ É
$str
TTÑ ê
+
TTë í
password
TTì õ
)
TTõ ú
)
TTú ù
{UU 

connectionVV 
.VV 
OpenVV #
(VV# $
)VV$ %
;VV% &
usingWW 
(WW 

SqlCommandWW %
commandWW& -
=WW. /
newWW0 3

SqlCommandWW4 >
(WW> ?
$strWW? Y
,WWY Z

connectionWW[ e
)WWe f
)WWf g
{XX 
commandYY 
.YY  
ExecuteNonQueryYY  /
(YY/ 0
)YY0 1
;YY1 2
}ZZ 
}[[ 
}\\ 
catch]] 
(]] 
SqlException]] 
	exceptSql]]  )
)]]) *
{^^ 
IO__ 
.__ 
Logger__ 
.__ 
Log__ 
(__ 
NLog__ "
.__" #
LogLevel__# +
.__+ ,
Warn__, 0
,__0 1
$str__2 R
,__R S
	exceptSql__T ]
)__] ^
;__^ _
}`` 
}aa 	
}bb 
privateff 
voidff 
GoodG2B1ff 
(ff 
)ff 
{gg 
stringhh 
passwordhh 
;hh 
ifii 

(ii 
PrivateReturnsFalseii 
(ii  
)ii  !
)ii! "
{jj 	
passwordmm 
=mm 
nullmm 
;mm 
}nn 	
elseoo 
{pp 	
passwordss 
=ss 
$strss &
;ss& '
}tt 	
ifuu 

(uu 
PrivateReturnsTrueuu 
(uu 
)uu  
)uu  !
{vv 	
tryww 
{xx 
usingzz 
(zz 
SqlConnectionzz $

connectionzz% /
=zz0 1
newzz2 5
SqlConnectionzz6 C
(zzC D
$strzzD z
+zz{ |
$str	zz} Å
+
zzÇ É
$str
zzÑ ê
+
zzë í
password
zzì õ
)
zzõ ú
)
zzú ù
{{{ 

connection|| 
.|| 
Open|| #
(||# $
)||$ %
;||% &
using}} 
(}} 

SqlCommand}} %
command}}& -
=}}. /
new}}0 3

SqlCommand}}4 >
(}}> ?
$str}}? Y
,}}Y Z

connection}}[ e
)}}e f
)}}f g
{~~ 
command 
.  
ExecuteNonQuery  /
(/ 0
)0 1
;1 2
}
ÄÄ 
}
ÅÅ 
}
ÇÇ 
catch
ÉÉ 
(
ÉÉ 
SqlException
ÉÉ 
	exceptSql
ÉÉ  )
)
ÉÉ) *
{
ÑÑ 
IO
ÖÖ 
.
ÖÖ 
Logger
ÖÖ 
.
ÖÖ 
Log
ÖÖ 
(
ÖÖ 
NLog
ÖÖ "
.
ÖÖ" #
LogLevel
ÖÖ# +
.
ÖÖ+ ,
Warn
ÖÖ, 0
,
ÖÖ0 1
$str
ÖÖ2 R
,
ÖÖR S
	exceptSql
ÖÖT ]
)
ÖÖ] ^
;
ÖÖ^ _
}
ÜÜ 
}
áá 	
}
àà 
private
ãã 
void
ãã 
GoodG2B2
ãã 
(
ãã 
)
ãã 
{
åå 
string
çç 
password
çç 
;
çç 
if
éé 

(
éé  
PrivateReturnsTrue
éé 
(
éé 
)
éé  
)
éé  !
{
èè 	
password
íí 
=
íí 
$str
íí &
;
íí& '
}
ìì 	
else
îî 
{
ïï 	
password
òò 
=
òò 
null
òò 
;
òò 
}
ôô 	
if
öö 

(
öö  
PrivateReturnsTrue
öö 
(
öö 
)
öö  
)
öö  !
{
õõ 	
try
úú 
{
ùù 
using
üü 
(
üü 
SqlConnection
üü $

connection
üü% /
=
üü0 1
new
üü2 5
SqlConnection
üü6 C
(
üüC D
$str
üüD z
+
üü{ |
$strüü} Å
+üüÇ É
$strüüÑ ê
+üüë í
passwordüüì õ
)üüõ ú
)üüú ù
{
†† 

connection
°° 
.
°° 
Open
°° #
(
°°# $
)
°°$ %
;
°°% &
using
¢¢ 
(
¢¢ 

SqlCommand
¢¢ %
command
¢¢& -
=
¢¢. /
new
¢¢0 3

SqlCommand
¢¢4 >
(
¢¢> ?
$str
¢¢? Y
,
¢¢Y Z

connection
¢¢[ e
)
¢¢e f
)
¢¢f g
{
££ 
command
§§ 
.
§§  
ExecuteNonQuery
§§  /
(
§§/ 0
)
§§0 1
;
§§1 2
}
•• 
}
¶¶ 
}
ßß 
catch
®® 
(
®® 
SqlException
®® 
	exceptSql
®®  )
)
®®) *
{
©© 
IO
™™ 
.
™™ 
Logger
™™ 
.
™™ 
Log
™™ 
(
™™ 
NLog
™™ "
.
™™" #
LogLevel
™™# +
.
™™+ ,
Warn
™™, 0
,
™™0 1
$str
™™2 R
,
™™R S
	exceptSql
™™T ]
)
™™] ^
;
™™^ _
}
´´ 
}
¨¨ 	
}
≠≠ 
private
∞∞ 
void
∞∞ 
GoodB2G1
∞∞ 
(
∞∞ 
)
∞∞ 
{
±± 
string
≤≤ 
password
≤≤ 
;
≤≤ 
if
≥≥ 

(
≥≥  
PrivateReturnsTrue
≥≥ 
(
≥≥ 
)
≥≥  
)
≥≥  !
{
¥¥ 	
password
µµ 
=
µµ 
$str
µµ 
;
µµ 
{
∑∑ 
try
∏∏ 
{
ππ 
using
ªª 
(
ªª 
	TcpClient
ªª $
tcpConn
ªª% ,
=
ªª- .
new
ªª/ 2
	TcpClient
ªª3 <
(
ªª< =
$str
ªª= O
,
ªªO P
$num
ªªQ V
)
ªªV W
)
ªªW X
{
ºº 
using
ææ 
(
ææ 
StreamReader
ææ +
sr
ææ, .
=
ææ/ 0
new
ææ1 4
StreamReader
ææ5 A
(
ææA B
tcpConn
ææB I
.
ææI J
	GetStream
ææJ S
(
ææS T
)
ææT U
)
ææU V
)
ææV W
{
øø 
password
¡¡ $
=
¡¡% &
sr
¡¡' )
.
¡¡) *
ReadLine
¡¡* 2
(
¡¡2 3
)
¡¡3 4
;
¡¡4 5
}
¬¬ 
}
√√ 
}
ƒƒ 
catch
≈≈ 
(
≈≈ 
IOException
≈≈ "
exceptIO
≈≈# +
)
≈≈+ ,
{
∆∆ 
IO
«« 
.
«« 
Logger
«« 
.
«« 
Log
«« !
(
««! "
NLog
««" &
.
««& '
LogLevel
««' /
.
««/ 0
Warn
««0 4
,
««4 5
$str
««6 Q
,
««Q R
exceptIO
««S [
)
««[ \
;
««\ ]
}
»» 
}
…… 
}
   	
else
ÀÀ 
{
ÃÃ 	
password
œœ 
=
œœ 
null
œœ 
;
œœ 
}
–– 	
if
—— 

(
—— !
PrivateReturnsFalse
—— 
(
——  
)
——  !
)
——! "
{
““ 	
IO
‘‘ 
.
‘‘ 
	WriteLine
‘‘ 
(
‘‘ 
$str
‘‘ /
)
‘‘/ 0
;
‘‘0 1
}
’’ 	
else
÷÷ 
{
◊◊ 	
if
ÿÿ 
(
ÿÿ 
password
ÿÿ 
!=
ÿÿ 
null
ÿÿ  
)
ÿÿ  !
{
ŸŸ 
{
€€ 
using
‹‹ 
(
‹‹ &
AesCryptoServiceProvider
‹‹ 3
aesAlg
‹‹4 :
=
‹‹; <
new
‹‹= @&
AesCryptoServiceProvider
‹‹A Y
(
‹‹Y Z
)
‹‹Z [
)
‹‹[ \
{
›› 
aesAlg
ﬁﬁ 
.
ﬁﬁ 
Padding
ﬁﬁ &
=
ﬁﬁ' (
PaddingMode
ﬁﬁ) 4
.
ﬁﬁ4 5
None
ﬁﬁ5 9
;
ﬁﬁ9 :
aesAlg
ﬂﬂ 
.
ﬂﬂ 
Key
ﬂﬂ "
=
ﬂﬂ# $
Encoding
ﬂﬂ% -
.
ﬂﬂ- .
UTF8
ﬂﬂ. 2
.
ﬂﬂ2 3
GetBytes
ﬂﬂ3 ;
(
ﬂﬂ; <
$str
ﬂﬂ< N
)
ﬂﬂN O
;
ﬂﬂO P
ICryptoTransform
·· (
	decryptor
··) 2
=
··3 4
aesAlg
··5 ;
.
··; <
CreateDecryptor
··< K
(
··K L
aesAlg
··L R
.
··R S
Key
··S V
,
··V W
aesAlg
··X ^
.
··^ _
IV
··_ a
)
··a b
;
··b c
using
„„ 
(
„„ 
MemoryStream
„„ +
	msDecrypt
„„, 5
=
„„6 7
new
„„8 ;
MemoryStream
„„< H
(
„„H I
Encoding
„„I Q
.
„„Q R
UTF8
„„R V
.
„„V W
GetBytes
„„W _
(
„„_ `
password
„„` h
)
„„h i
)
„„i j
)
„„j k
{
‰‰ 
using
ÂÂ !
(
ÂÂ" #
CryptoStream
ÂÂ# /
	csDecrypt
ÂÂ0 9
=
ÂÂ: ;
new
ÂÂ< ?
CryptoStream
ÂÂ@ L
(
ÂÂL M
	msDecrypt
ÂÂM V
,
ÂÂV W
	decryptor
ÂÂX a
,
ÂÂa b
CryptoStreamMode
ÂÂc s
.
ÂÂs t
Read
ÂÂt x
)
ÂÂx y
)
ÂÂy z
{
ÊÊ 
using
ÁÁ  %
(
ÁÁ& '
StreamReader
ÁÁ' 3
	srDecrypt
ÁÁ4 =
=
ÁÁ> ?
new
ÁÁ@ C
StreamReader
ÁÁD P
(
ÁÁP Q
	csDecrypt
ÁÁQ Z
)
ÁÁZ [
)
ÁÁ[ \
{
ËË  !
password
ÎÎ$ ,
=
ÎÎ- .
	srDecrypt
ÎÎ/ 8
.
ÎÎ8 9
	ReadToEnd
ÎÎ9 B
(
ÎÎB C
)
ÎÎC D
;
ÎÎD E
}
ÏÏ  !
}
ÌÌ 
}
ÓÓ 
}
ÔÔ 
}
 
try
ÒÒ 
{
ÚÚ 
using
ÙÙ 
(
ÙÙ 
SqlConnection
ÙÙ (

connection
ÙÙ) 3
=
ÙÙ4 5
new
ÙÙ6 9
SqlConnection
ÙÙ: G
(
ÙÙG H
$str
ÙÙH ~
+ÙÙ Ä
$strÙÙÅ Ö
+ÙÙÜ á
$strÙÙà î
+ÙÙï ñ
passwordÙÙó ü
)ÙÙü †
)ÙÙ† °
{
ıı 

connection
ˆˆ "
.
ˆˆ" #
Open
ˆˆ# '
(
ˆˆ' (
)
ˆˆ( )
;
ˆˆ) *
using
˜˜ 
(
˜˜ 

SqlCommand
˜˜ )
command
˜˜* 1
=
˜˜2 3
new
˜˜4 7

SqlCommand
˜˜8 B
(
˜˜B C
$str
˜˜C ]
,
˜˜] ^

connection
˜˜_ i
)
˜˜i j
)
˜˜j k
{
¯¯ 
command
˘˘ #
.
˘˘# $
ExecuteNonQuery
˘˘$ 3
(
˘˘3 4
)
˘˘4 5
;
˘˘5 6
}
˙˙ 
}
˚˚ 
}
¸¸ 
catch
˝˝ 
(
˝˝ 
SqlException
˝˝ #
	exceptSql
˝˝$ -
)
˝˝- .
{
˛˛ 
IO
ˇˇ 
.
ˇˇ 
Logger
ˇˇ 
.
ˇˇ 
Log
ˇˇ !
(
ˇˇ! "
NLog
ˇˇ" &
.
ˇˇ& '
LogLevel
ˇˇ' /
.
ˇˇ/ 0
Warn
ˇˇ0 4
,
ˇˇ4 5
$str
ˇˇ6 V
,
ˇˇV W
	exceptSql
ˇˇX a
)
ˇˇa b
;
ˇˇb c
}
ÄÄ 
}
ÅÅ 
}
ÇÇ 	
}
ÉÉ 
private
ÜÜ 
void
ÜÜ 
GoodB2G2
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
string
àà 
password
àà 
;
àà 
if
ââ 

(
ââ  
PrivateReturnsTrue
ââ 
(
ââ 
)
ââ  
)
ââ  !
{
ää 	
password
ãã 
=
ãã 
$str
ãã 
;
ãã 
{
çç 
try
éé 
{
èè 
using
ëë 
(
ëë 
	TcpClient
ëë $
tcpConn
ëë% ,
=
ëë- .
new
ëë/ 2
	TcpClient
ëë3 <
(
ëë< =
$str
ëë= O
,
ëëO P
$num
ëëQ V
)
ëëV W
)
ëëW X
{
íí 
using
îî 
(
îî 
StreamReader
îî +
sr
îî, .
=
îî/ 0
new
îî1 4
StreamReader
îî5 A
(
îîA B
tcpConn
îîB I
.
îîI J
	GetStream
îîJ S
(
îîS T
)
îîT U
)
îîU V
)
îîV W
{
ïï 
password
óó $
=
óó% &
sr
óó' )
.
óó) *
ReadLine
óó* 2
(
óó2 3
)
óó3 4
;
óó4 5
}
òò 
}
ôô 
}
öö 
catch
õõ 
(
õõ 
IOException
õõ "
exceptIO
õõ# +
)
õõ+ ,
{
úú 
IO
ùù 
.
ùù 
Logger
ùù 
.
ùù 
Log
ùù !
(
ùù! "
NLog
ùù" &
.
ùù& '
LogLevel
ùù' /
.
ùù/ 0
Warn
ùù0 4
,
ùù4 5
$str
ùù6 Q
,
ùùQ R
exceptIO
ùùS [
)
ùù[ \
;
ùù\ ]
}
ûû 
}
üü 
}
†† 	
else
°° 
{
¢¢ 	
password
•• 
=
•• 
null
•• 
;
•• 
}
¶¶ 	
if
ßß 

(
ßß  
PrivateReturnsTrue
ßß 
(
ßß 
)
ßß  
)
ßß  !
{
®® 	
if
©© 
(
©© 
password
©© 
!=
©© 
null
©©  
)
©©  !
{
™™ 
{
¨¨ 
using
≠≠ 
(
≠≠ &
AesCryptoServiceProvider
≠≠ 3
aesAlg
≠≠4 :
=
≠≠; <
new
≠≠= @&
AesCryptoServiceProvider
≠≠A Y
(
≠≠Y Z
)
≠≠Z [
)
≠≠[ \
{
ÆÆ 
aesAlg
ØØ 
.
ØØ 
Padding
ØØ &
=
ØØ' (
PaddingMode
ØØ) 4
.
ØØ4 5
None
ØØ5 9
;
ØØ9 :
aesAlg
∞∞ 
.
∞∞ 
Key
∞∞ "
=
∞∞# $
Encoding
∞∞% -
.
∞∞- .
UTF8
∞∞. 2
.
∞∞2 3
GetBytes
∞∞3 ;
(
∞∞; <
$str
∞∞< N
)
∞∞N O
;
∞∞O P
ICryptoTransform
≤≤ (
	decryptor
≤≤) 2
=
≤≤3 4
aesAlg
≤≤5 ;
.
≤≤; <
CreateDecryptor
≤≤< K
(
≤≤K L
aesAlg
≤≤L R
.
≤≤R S
Key
≤≤S V
,
≤≤V W
aesAlg
≤≤X ^
.
≤≤^ _
IV
≤≤_ a
)
≤≤a b
;
≤≤b c
using
¥¥ 
(
¥¥ 
MemoryStream
¥¥ +
	msDecrypt
¥¥, 5
=
¥¥6 7
new
¥¥8 ;
MemoryStream
¥¥< H
(
¥¥H I
Encoding
¥¥I Q
.
¥¥Q R
UTF8
¥¥R V
.
¥¥V W
GetBytes
¥¥W _
(
¥¥_ `
password
¥¥` h
)
¥¥h i
)
¥¥i j
)
¥¥j k
{
µµ 
using
∂∂ !
(
∂∂" #
CryptoStream
∂∂# /
	csDecrypt
∂∂0 9
=
∂∂: ;
new
∂∂< ?
CryptoStream
∂∂@ L
(
∂∂L M
	msDecrypt
∂∂M V
,
∂∂V W
	decryptor
∂∂X a
,
∂∂a b
CryptoStreamMode
∂∂c s
.
∂∂s t
Read
∂∂t x
)
∂∂x y
)
∂∂y z
{
∑∑ 
using
∏∏  %
(
∏∏& '
StreamReader
∏∏' 3
	srDecrypt
∏∏4 =
=
∏∏> ?
new
∏∏@ C
StreamReader
∏∏D P
(
∏∏P Q
	csDecrypt
∏∏Q Z
)
∏∏Z [
)
∏∏[ \
{
ππ  !
password
ºº$ ,
=
ºº- .
	srDecrypt
ºº/ 8
.
ºº8 9
	ReadToEnd
ºº9 B
(
ººB C
)
ººC D
;
ººD E
}
ΩΩ  !
}
ææ 
}
øø 
}
¿¿ 
}
¡¡ 
try
¬¬ 
{
√√ 
using
≈≈ 
(
≈≈ 
SqlConnection
≈≈ (

connection
≈≈) 3
=
≈≈4 5
new
≈≈6 9
SqlConnection
≈≈: G
(
≈≈G H
$str
≈≈H ~
+≈≈ Ä
$str≈≈Å Ö
+≈≈Ü á
$str≈≈à î
+≈≈ï ñ
password≈≈ó ü
)≈≈ü †
)≈≈† °
{
∆∆ 

connection
«« "
.
««" #
Open
««# '
(
««' (
)
««( )
;
««) *
using
»» 
(
»» 

SqlCommand
»» )
command
»»* 1
=
»»2 3
new
»»4 7

SqlCommand
»»8 B
(
»»B C
$str
»»C ]
,
»»] ^

connection
»»_ i
)
»»i j
)
»»j k
{
…… 
command
   #
.
  # $
ExecuteNonQuery
  $ 3
(
  3 4
)
  4 5
;
  5 6
}
ÀÀ 
}
ÃÃ 
}
ÕÕ 
catch
ŒŒ 
(
ŒŒ 
SqlException
ŒŒ #
	exceptSql
ŒŒ$ -
)
ŒŒ- .
{
œœ 
IO
–– 
.
–– 
Logger
–– 
.
–– 
Log
–– !
(
––! "
NLog
––" &
.
––& '
LogLevel
––' /
.
––/ 0
Warn
––0 4
,
––4 5
$str
––6 V
,
––V W
	exceptSql
––X a
)
––a b
;
––b c
}
—— 
}
““ 
}
”” 	
}
‘‘ 
public
÷÷ 

override
÷÷ 
void
÷÷ 
Good
÷÷ 
(
÷÷ 
)
÷÷ 
{
◊◊ 
GoodG2B1
ÿÿ 
(
ÿÿ 
)
ÿÿ 
;
ÿÿ 
GoodG2B2
ŸŸ 
(
ŸŸ 
)
ŸŸ 
;
ŸŸ 
GoodB2G1
⁄⁄ 
(
⁄⁄ 
)
⁄⁄ 
;
⁄⁄ 
GoodB2G2
€€ 
(
€€ 
)
€€ 
;
€€ 
}
‹‹ 
}ﬁﬁ 
}ﬂﬂ †ù
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_09.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_09 F
:G H
AbstractTestCaseI Y
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
password## 
;## 
if$$ 

($$ 
IO$$ 
.$$  
STATIC_READONLY_TRUE$$ #
)$$# $
{%% 	
password&& 
=&& 
$str&& 
;&& 
{(( 
try)) 
{** 
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
new,,/ 2
	TcpClient,,3 <
(,,< =
$str,,= O
,,,O P
$num,,Q V
),,V W
),,W X
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
password22 $
=22% &
sr22' )
.22) *
ReadLine22* 2
(222 3
)223 4
;224 5
}33 
}44 
}55 
catch66 
(66 
IOException66 "
exceptIO66# +
)66+ ,
{77 
IO88 
.88 
Logger88 
.88 
Log88 !
(88! "
NLog88" &
.88& '
LogLevel88' /
.88/ 0
Warn880 4
,884 5
$str886 Q
,88Q R
exceptIO88S [
)88[ \
;88\ ]
}99 
}:: 
};; 	
else<< 
{== 	
password@@ 
=@@ 
null@@ 
;@@ 
}AA 	
ifBB 

(BB 
IOBB 
.BB  
STATIC_READONLY_TRUEBB #
)BB# $
{CC 	
tryDD 
{EE 
usingGG 
(GG 
SqlConnectionGG $

connectionGG% /
=GG0 1
newGG2 5
SqlConnectionGG6 C
(GGC D
$strGGD z
+GG{ |
$str	GG} Å
+
GGÇ É
$str
GGÑ ê
+
GGë í
password
GGì õ
)
GGõ ú
)
GGú ù
{HH 

connectionII 
.II 
OpenII #
(II# $
)II$ %
;II% &
usingJJ 
(JJ 

SqlCommandJJ %
commandJJ& -
=JJ. /
newJJ0 3

SqlCommandJJ4 >
(JJ> ?
$strJJ? Y
,JJY Z

connectionJJ[ e
)JJe f
)JJf g
{KK 
commandLL 
.LL  
ExecuteNonQueryLL  /
(LL/ 0
)LL0 1
;LL1 2
}MM 
}NN 
}OO 
catchPP 
(PP 
SqlExceptionPP 
	exceptSqlPP  )
)PP) *
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR 
(RR 
NLogRR "
.RR" #
LogLevelRR# +
.RR+ ,
WarnRR, 0
,RR0 1
$strRR2 R
,RRR S
	exceptSqlRRT ]
)RR] ^
;RR^ _
}SS 
}TT 	
}UU 
privateYY 
voidYY 
GoodG2B1YY 
(YY 
)YY 
{ZZ 
string[[ 
password[[ 
;[[ 
if\\ 

(\\ 
IO\\ 
.\\ !
STATIC_READONLY_FALSE\\ $
)\\$ %
{]] 	
password`` 
=`` 
null`` 
;`` 
}aa 	
elsebb 
{cc 	
passwordff 
=ff 
$strff &
;ff& '
}gg 	
ifhh 

(hh 
IOhh 
.hh  
STATIC_READONLY_TRUEhh #
)hh# $
{ii 	
tryjj 
{kk 
usingmm 
(mm 
SqlConnectionmm $

connectionmm% /
=mm0 1
newmm2 5
SqlConnectionmm6 C
(mmC D
$strmmD z
+mm{ |
$str	mm} Å
+
mmÇ É
$str
mmÑ ê
+
mmë í
password
mmì õ
)
mmõ ú
)
mmú ù
{nn 

connectionoo 
.oo 
Openoo #
(oo# $
)oo$ %
;oo% &
usingpp 
(pp 

SqlCommandpp %
commandpp& -
=pp. /
newpp0 3

SqlCommandpp4 >
(pp> ?
$strpp? Y
,ppY Z

connectionpp[ e
)ppe f
)ppf g
{qq 
commandrr 
.rr  
ExecuteNonQueryrr  /
(rr/ 0
)rr0 1
;rr1 2
}ss 
}tt 
}uu 
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv  )
)vv) *
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
	exceptSqlxxT ]
)xx] ^
;xx^ _
}yy 
}zz 	
}{{ 
private~~ 
void~~ 
GoodG2B2~~ 
(~~ 
)~~ 
{ 
string
ÄÄ 
password
ÄÄ 
;
ÄÄ 
if
ÅÅ 

(
ÅÅ 
IO
ÅÅ 
.
ÅÅ "
STATIC_READONLY_TRUE
ÅÅ #
)
ÅÅ# $
{
ÇÇ 	
password
ÖÖ 
=
ÖÖ 
$str
ÖÖ &
;
ÖÖ& '
}
ÜÜ 	
else
áá 
{
àà 	
password
ãã 
=
ãã 
null
ãã 
;
ãã 
}
åå 	
if
çç 

(
çç 
IO
çç 
.
çç "
STATIC_READONLY_TRUE
çç #
)
çç# $
{
éé 	
try
èè 
{
êê 
using
íí 
(
íí 
SqlConnection
íí $

connection
íí% /
=
íí0 1
new
íí2 5
SqlConnection
íí6 C
(
ííC D
$str
ííD z
+
íí{ |
$stríí} Å
+ííÇ É
$strííÑ ê
+ííë í
passwordííì õ
)ííõ ú
)ííú ù
{
ìì 

connection
îî 
.
îî 
Open
îî #
(
îî# $
)
îî$ %
;
îî% &
using
ïï 
(
ïï 

SqlCommand
ïï %
command
ïï& -
=
ïï. /
new
ïï0 3

SqlCommand
ïï4 >
(
ïï> ?
$str
ïï? Y
,
ïïY Z

connection
ïï[ e
)
ïïe f
)
ïïf g
{
ññ 
command
óó 
.
óó  
ExecuteNonQuery
óó  /
(
óó/ 0
)
óó0 1
;
óó1 2
}
òò 
}
ôô 
}
öö 
catch
õõ 
(
õõ 
SqlException
õõ 
	exceptSql
õõ  )
)
õõ) *
{
úú 
IO
ùù 
.
ùù 
Logger
ùù 
.
ùù 
Log
ùù 
(
ùù 
NLog
ùù "
.
ùù" #
LogLevel
ùù# +
.
ùù+ ,
Warn
ùù, 0
,
ùù0 1
$str
ùù2 R
,
ùùR S
	exceptSql
ùùT ]
)
ùù] ^
;
ùù^ _
}
ûû 
}
üü 	
}
†† 
private
££ 
void
££ 
GoodB2G1
££ 
(
££ 
)
££ 
{
§§ 
string
•• 
password
•• 
;
•• 
if
¶¶ 

(
¶¶ 
IO
¶¶ 
.
¶¶ "
STATIC_READONLY_TRUE
¶¶ #
)
¶¶# $
{
ßß 	
password
®® 
=
®® 
$str
®® 
;
®® 
{
™™ 
try
´´ 
{
¨¨ 
using
ÆÆ 
(
ÆÆ 
	TcpClient
ÆÆ $
tcpConn
ÆÆ% ,
=
ÆÆ- .
new
ÆÆ/ 2
	TcpClient
ÆÆ3 <
(
ÆÆ< =
$str
ÆÆ= O
,
ÆÆO P
$num
ÆÆQ V
)
ÆÆV W
)
ÆÆW X
{
ØØ 
using
±± 
(
±± 
StreamReader
±± +
sr
±±, .
=
±±/ 0
new
±±1 4
StreamReader
±±5 A
(
±±A B
tcpConn
±±B I
.
±±I J
	GetStream
±±J S
(
±±S T
)
±±T U
)
±±U V
)
±±V W
{
≤≤ 
password
¥¥ $
=
¥¥% &
sr
¥¥' )
.
¥¥) *
ReadLine
¥¥* 2
(
¥¥2 3
)
¥¥3 4
;
¥¥4 5
}
µµ 
}
∂∂ 
}
∑∑ 
catch
∏∏ 
(
∏∏ 
IOException
∏∏ "
exceptIO
∏∏# +
)
∏∏+ ,
{
ππ 
IO
∫∫ 
.
∫∫ 
Logger
∫∫ 
.
∫∫ 
Log
∫∫ !
(
∫∫! "
NLog
∫∫" &
.
∫∫& '
LogLevel
∫∫' /
.
∫∫/ 0
Warn
∫∫0 4
,
∫∫4 5
$str
∫∫6 Q
,
∫∫Q R
exceptIO
∫∫S [
)
∫∫[ \
;
∫∫\ ]
}
ªª 
}
ºº 
}
ΩΩ 	
else
ææ 
{
øø 	
password
¬¬ 
=
¬¬ 
null
¬¬ 
;
¬¬ 
}
√√ 	
if
ƒƒ 

(
ƒƒ 
IO
ƒƒ 
.
ƒƒ #
STATIC_READONLY_FALSE
ƒƒ $
)
ƒƒ$ %
{
≈≈ 	
IO
«« 
.
«« 
	WriteLine
«« 
(
«« 
$str
«« /
)
««/ 0
;
««0 1
}
»» 	
else
…… 
{
   	
if
ÀÀ 
(
ÀÀ 
password
ÀÀ 
!=
ÀÀ 
null
ÀÀ  
)
ÀÀ  !
{
ÃÃ 
{
ŒŒ 
using
œœ 
(
œœ &
AesCryptoServiceProvider
œœ 3
aesAlg
œœ4 :
=
œœ; <
new
œœ= @&
AesCryptoServiceProvider
œœA Y
(
œœY Z
)
œœZ [
)
œœ[ \
{
–– 
aesAlg
—— 
.
—— 
Padding
—— &
=
——' (
PaddingMode
——) 4
.
——4 5
None
——5 9
;
——9 :
aesAlg
““ 
.
““ 
Key
““ "
=
““# $
Encoding
““% -
.
““- .
UTF8
““. 2
.
““2 3
GetBytes
““3 ;
(
““; <
$str
““< N
)
““N O
;
““O P
ICryptoTransform
‘‘ (
	decryptor
‘‘) 2
=
‘‘3 4
aesAlg
‘‘5 ;
.
‘‘; <
CreateDecryptor
‘‘< K
(
‘‘K L
aesAlg
‘‘L R
.
‘‘R S
Key
‘‘S V
,
‘‘V W
aesAlg
‘‘X ^
.
‘‘^ _
IV
‘‘_ a
)
‘‘a b
;
‘‘b c
using
÷÷ 
(
÷÷ 
MemoryStream
÷÷ +
	msDecrypt
÷÷, 5
=
÷÷6 7
new
÷÷8 ;
MemoryStream
÷÷< H
(
÷÷H I
Encoding
÷÷I Q
.
÷÷Q R
UTF8
÷÷R V
.
÷÷V W
GetBytes
÷÷W _
(
÷÷_ `
password
÷÷` h
)
÷÷h i
)
÷÷i j
)
÷÷j k
{
◊◊ 
using
ÿÿ !
(
ÿÿ" #
CryptoStream
ÿÿ# /
	csDecrypt
ÿÿ0 9
=
ÿÿ: ;
new
ÿÿ< ?
CryptoStream
ÿÿ@ L
(
ÿÿL M
	msDecrypt
ÿÿM V
,
ÿÿV W
	decryptor
ÿÿX a
,
ÿÿa b
CryptoStreamMode
ÿÿc s
.
ÿÿs t
Read
ÿÿt x
)
ÿÿx y
)
ÿÿy z
{
ŸŸ 
using
⁄⁄  %
(
⁄⁄& '
StreamReader
⁄⁄' 3
	srDecrypt
⁄⁄4 =
=
⁄⁄> ?
new
⁄⁄@ C
StreamReader
⁄⁄D P
(
⁄⁄P Q
	csDecrypt
⁄⁄Q Z
)
⁄⁄Z [
)
⁄⁄[ \
{
€€  !
password
ﬁﬁ$ ,
=
ﬁﬁ- .
	srDecrypt
ﬁﬁ/ 8
.
ﬁﬁ8 9
	ReadToEnd
ﬁﬁ9 B
(
ﬁﬁB C
)
ﬁﬁC D
;
ﬁﬁD E
}
ﬂﬂ  !
}
‡‡ 
}
·· 
}
‚‚ 
}
„„ 
try
‰‰ 
{
ÂÂ 
using
ÁÁ 
(
ÁÁ 
SqlConnection
ÁÁ (

connection
ÁÁ) 3
=
ÁÁ4 5
new
ÁÁ6 9
SqlConnection
ÁÁ: G
(
ÁÁG H
$str
ÁÁH ~
+ÁÁ Ä
$strÁÁÅ Ö
+ÁÁÜ á
$strÁÁà î
+ÁÁï ñ
passwordÁÁó ü
)ÁÁü †
)ÁÁ† °
{
ËË 

connection
ÈÈ "
.
ÈÈ" #
Open
ÈÈ# '
(
ÈÈ' (
)
ÈÈ( )
;
ÈÈ) *
using
ÍÍ 
(
ÍÍ 

SqlCommand
ÍÍ )
command
ÍÍ* 1
=
ÍÍ2 3
new
ÍÍ4 7

SqlCommand
ÍÍ8 B
(
ÍÍB C
$str
ÍÍC ]
,
ÍÍ] ^

connection
ÍÍ_ i
)
ÍÍi j
)
ÍÍj k
{
ÎÎ 
command
ÏÏ #
.
ÏÏ# $
ExecuteNonQuery
ÏÏ$ 3
(
ÏÏ3 4
)
ÏÏ4 5
;
ÏÏ5 6
}
ÌÌ 
}
ÓÓ 
}
ÔÔ 
catch
 
(
 
SqlException
 #
	exceptSql
$ -
)
- .
{
ÒÒ 
IO
ÚÚ 
.
ÚÚ 
Logger
ÚÚ 
.
ÚÚ 
Log
ÚÚ !
(
ÚÚ! "
NLog
ÚÚ" &
.
ÚÚ& '
LogLevel
ÚÚ' /
.
ÚÚ/ 0
Warn
ÚÚ0 4
,
ÚÚ4 5
$str
ÚÚ6 V
,
ÚÚV W
	exceptSql
ÚÚX a
)
ÚÚa b
;
ÚÚb c
}
ÛÛ 
}
ÙÙ 
}
ıı 	
}
ˆˆ 
private
˘˘ 
void
˘˘ 
GoodB2G2
˘˘ 
(
˘˘ 
)
˘˘ 
{
˙˙ 
string
˚˚ 
password
˚˚ 
;
˚˚ 
if
¸¸ 

(
¸¸ 
IO
¸¸ 
.
¸¸ "
STATIC_READONLY_TRUE
¸¸ #
)
¸¸# $
{
˝˝ 	
password
˛˛ 
=
˛˛ 
$str
˛˛ 
;
˛˛ 
{
ÄÄ 
try
ÅÅ 
{
ÇÇ 
using
ÑÑ 
(
ÑÑ 
	TcpClient
ÑÑ $
tcpConn
ÑÑ% ,
=
ÑÑ- .
new
ÑÑ/ 2
	TcpClient
ÑÑ3 <
(
ÑÑ< =
$str
ÑÑ= O
,
ÑÑO P
$num
ÑÑQ V
)
ÑÑV W
)
ÑÑW X
{
ÖÖ 
using
áá 
(
áá 
StreamReader
áá +
sr
áá, .
=
áá/ 0
new
áá1 4
StreamReader
áá5 A
(
ááA B
tcpConn
ááB I
.
ááI J
	GetStream
ááJ S
(
ááS T
)
ááT U
)
ááU V
)
ááV W
{
àà 
password
ää $
=
ää% &
sr
ää' )
.
ää) *
ReadLine
ää* 2
(
ää2 3
)
ää3 4
;
ää4 5
}
ãã 
}
åå 
}
çç 
catch
éé 
(
éé 
IOException
éé "
exceptIO
éé# +
)
éé+ ,
{
èè 
IO
êê 
.
êê 
Logger
êê 
.
êê 
Log
êê !
(
êê! "
NLog
êê" &
.
êê& '
LogLevel
êê' /
.
êê/ 0
Warn
êê0 4
,
êê4 5
$str
êê6 Q
,
êêQ R
exceptIO
êêS [
)
êê[ \
;
êê\ ]
}
ëë 
}
íí 
}
ìì 	
else
îî 
{
ïï 	
password
òò 
=
òò 
null
òò 
;
òò 
}
ôô 	
if
öö 

(
öö 
IO
öö 
.
öö "
STATIC_READONLY_TRUE
öö #
)
öö# $
{
õõ 	
if
úú 
(
úú 
password
úú 
!=
úú 
null
úú  
)
úú  !
{
ùù 
{
üü 
using
†† 
(
†† &
AesCryptoServiceProvider
†† 3
aesAlg
††4 :
=
††; <
new
††= @&
AesCryptoServiceProvider
††A Y
(
††Y Z
)
††Z [
)
††[ \
{
°° 
aesAlg
¢¢ 
.
¢¢ 
Padding
¢¢ &
=
¢¢' (
PaddingMode
¢¢) 4
.
¢¢4 5
None
¢¢5 9
;
¢¢9 :
aesAlg
££ 
.
££ 
Key
££ "
=
££# $
Encoding
££% -
.
££- .
UTF8
££. 2
.
££2 3
GetBytes
££3 ;
(
££; <
$str
££< N
)
££N O
;
££O P
ICryptoTransform
•• (
	decryptor
••) 2
=
••3 4
aesAlg
••5 ;
.
••; <
CreateDecryptor
••< K
(
••K L
aesAlg
••L R
.
••R S
Key
••S V
,
••V W
aesAlg
••X ^
.
••^ _
IV
••_ a
)
••a b
;
••b c
using
ßß 
(
ßß 
MemoryStream
ßß +
	msDecrypt
ßß, 5
=
ßß6 7
new
ßß8 ;
MemoryStream
ßß< H
(
ßßH I
Encoding
ßßI Q
.
ßßQ R
UTF8
ßßR V
.
ßßV W
GetBytes
ßßW _
(
ßß_ `
password
ßß` h
)
ßßh i
)
ßßi j
)
ßßj k
{
®® 
using
©© !
(
©©" #
CryptoStream
©©# /
	csDecrypt
©©0 9
=
©©: ;
new
©©< ?
CryptoStream
©©@ L
(
©©L M
	msDecrypt
©©M V
,
©©V W
	decryptor
©©X a
,
©©a b
CryptoStreamMode
©©c s
.
©©s t
Read
©©t x
)
©©x y
)
©©y z
{
™™ 
using
´´  %
(
´´& '
StreamReader
´´' 3
	srDecrypt
´´4 =
=
´´> ?
new
´´@ C
StreamReader
´´D P
(
´´P Q
	csDecrypt
´´Q Z
)
´´Z [
)
´´[ \
{
¨¨  !
password
ØØ$ ,
=
ØØ- .
	srDecrypt
ØØ/ 8
.
ØØ8 9
	ReadToEnd
ØØ9 B
(
ØØB C
)
ØØC D
;
ØØD E
}
∞∞  !
}
±± 
}
≤≤ 
}
≥≥ 
}
¥¥ 
try
µµ 
{
∂∂ 
using
∏∏ 
(
∏∏ 
SqlConnection
∏∏ (

connection
∏∏) 3
=
∏∏4 5
new
∏∏6 9
SqlConnection
∏∏: G
(
∏∏G H
$str
∏∏H ~
+∏∏ Ä
$str∏∏Å Ö
+∏∏Ü á
$str∏∏à î
+∏∏ï ñ
password∏∏ó ü
)∏∏ü †
)∏∏† °
{
ππ 

connection
∫∫ "
.
∫∫" #
Open
∫∫# '
(
∫∫' (
)
∫∫( )
;
∫∫) *
using
ªª 
(
ªª 

SqlCommand
ªª )
command
ªª* 1
=
ªª2 3
new
ªª4 7

SqlCommand
ªª8 B
(
ªªB C
$str
ªªC ]
,
ªª] ^

connection
ªª_ i
)
ªªi j
)
ªªj k
{
ºº 
command
ΩΩ #
.
ΩΩ# $
ExecuteNonQuery
ΩΩ$ 3
(
ΩΩ3 4
)
ΩΩ4 5
;
ΩΩ5 6
}
ææ 
}
øø 
}
¿¿ 
catch
¡¡ 
(
¡¡ 
SqlException
¡¡ #
	exceptSql
¡¡$ -
)
¡¡- .
{
¬¬ 
IO
√√ 
.
√√ 
Logger
√√ 
.
√√ 
Log
√√ !
(
√√! "
NLog
√√" &
.
√√& '
LogLevel
√√' /
.
√√/ 0
Warn
√√0 4
,
√√4 5
$str
√√6 V
,
√√V W
	exceptSql
√√X a
)
√√a b
;
√√b c
}
ƒƒ 
}
≈≈ 
}
∆∆ 	
}
«« 
public
…… 

override
…… 
void
…… 
Good
…… 
(
…… 
)
…… 
{
   
GoodG2B1
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
GoodG2B2
ÃÃ 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ 
GoodB2G1
ÕÕ 
(
ÕÕ 
)
ÕÕ 
;
ÕÕ 
GoodB2G2
ŒŒ 
(
ŒŒ 
)
ŒŒ 
;
ŒŒ 
}
œœ 
}—— 
}““ ºú
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_10.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_10 F
:G H
AbstractTestCaseI Y
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
password## 
;## 
if$$ 

($$ 
IO$$ 
.$$ 

staticTrue$$ 
)$$ 
{%% 	
password&& 
=&& 
$str&& 
;&& 
{(( 
try)) 
{** 
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
new,,/ 2
	TcpClient,,3 <
(,,< =
$str,,= O
,,,O P
$num,,Q V
),,V W
),,W X
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
password22 $
=22% &
sr22' )
.22) *
ReadLine22* 2
(222 3
)223 4
;224 5
}33 
}44 
}55 
catch66 
(66 
IOException66 "
exceptIO66# +
)66+ ,
{77 
IO88 
.88 
Logger88 
.88 
Log88 !
(88! "
NLog88" &
.88& '
LogLevel88' /
.88/ 0
Warn880 4
,884 5
$str886 Q
,88Q R
exceptIO88S [
)88[ \
;88\ ]
}99 
}:: 
};; 	
else<< 
{== 	
password@@ 
=@@ 
null@@ 
;@@ 
}AA 	
ifBB 

(BB 
IOBB 
.BB 

staticTrueBB 
)BB 
{CC 	
tryDD 
{EE 
usingGG 
(GG 
SqlConnectionGG $

connectionGG% /
=GG0 1
newGG2 5
SqlConnectionGG6 C
(GGC D
$strGGD z
+GG{ |
$str	GG} Å
+
GGÇ É
$str
GGÑ ê
+
GGë í
password
GGì õ
)
GGõ ú
)
GGú ù
{HH 

connectionII 
.II 
OpenII #
(II# $
)II$ %
;II% &
usingJJ 
(JJ 

SqlCommandJJ %
commandJJ& -
=JJ. /
newJJ0 3

SqlCommandJJ4 >
(JJ> ?
$strJJ? Y
,JJY Z

connectionJJ[ e
)JJe f
)JJf g
{KK 
commandLL 
.LL  
ExecuteNonQueryLL  /
(LL/ 0
)LL0 1
;LL1 2
}MM 
}NN 
}OO 
catchPP 
(PP 
SqlExceptionPP 
	exceptSqlPP  )
)PP) *
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR 
(RR 
NLogRR "
.RR" #
LogLevelRR# +
.RR+ ,
WarnRR, 0
,RR0 1
$strRR2 R
,RRR S
	exceptSqlRRT ]
)RR] ^
;RR^ _
}SS 
}TT 	
}UU 
privateYY 
voidYY 
GoodG2B1YY 
(YY 
)YY 
{ZZ 
string[[ 
password[[ 
;[[ 
if\\ 

(\\ 
IO\\ 
.\\ 
staticFalse\\ 
)\\ 
{]] 	
password`` 
=`` 
null`` 
;`` 
}aa 	
elsebb 
{cc 	
passwordff 
=ff 
$strff &
;ff& '
}gg 	
ifhh 

(hh 
IOhh 
.hh 

staticTruehh 
)hh 
{ii 	
tryjj 
{kk 
usingmm 
(mm 
SqlConnectionmm $

connectionmm% /
=mm0 1
newmm2 5
SqlConnectionmm6 C
(mmC D
$strmmD z
+mm{ |
$str	mm} Å
+
mmÇ É
$str
mmÑ ê
+
mmë í
password
mmì õ
)
mmõ ú
)
mmú ù
{nn 

connectionoo 
.oo 
Openoo #
(oo# $
)oo$ %
;oo% &
usingpp 
(pp 

SqlCommandpp %
commandpp& -
=pp. /
newpp0 3

SqlCommandpp4 >
(pp> ?
$strpp? Y
,ppY Z

connectionpp[ e
)ppe f
)ppf g
{qq 
commandrr 
.rr  
ExecuteNonQueryrr  /
(rr/ 0
)rr0 1
;rr1 2
}ss 
}tt 
}uu 
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv  )
)vv) *
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
	exceptSqlxxT ]
)xx] ^
;xx^ _
}yy 
}zz 	
}{{ 
private~~ 
void~~ 
GoodG2B2~~ 
(~~ 
)~~ 
{ 
string
ÄÄ 
password
ÄÄ 
;
ÄÄ 
if
ÅÅ 

(
ÅÅ 
IO
ÅÅ 
.
ÅÅ 

staticTrue
ÅÅ 
)
ÅÅ 
{
ÇÇ 	
password
ÖÖ 
=
ÖÖ 
$str
ÖÖ &
;
ÖÖ& '
}
ÜÜ 	
else
áá 
{
àà 	
password
ãã 
=
ãã 
null
ãã 
;
ãã 
}
åå 	
if
çç 

(
çç 
IO
çç 
.
çç 

staticTrue
çç 
)
çç 
{
éé 	
try
èè 
{
êê 
using
íí 
(
íí 
SqlConnection
íí $

connection
íí% /
=
íí0 1
new
íí2 5
SqlConnection
íí6 C
(
ííC D
$str
ííD z
+
íí{ |
$stríí} Å
+ííÇ É
$strííÑ ê
+ííë í
passwordííì õ
)ííõ ú
)ííú ù
{
ìì 

connection
îî 
.
îî 
Open
îî #
(
îî# $
)
îî$ %
;
îî% &
using
ïï 
(
ïï 

SqlCommand
ïï %
command
ïï& -
=
ïï. /
new
ïï0 3

SqlCommand
ïï4 >
(
ïï> ?
$str
ïï? Y
,
ïïY Z

connection
ïï[ e
)
ïïe f
)
ïïf g
{
ññ 
command
óó 
.
óó  
ExecuteNonQuery
óó  /
(
óó/ 0
)
óó0 1
;
óó1 2
}
òò 
}
ôô 
}
öö 
catch
õõ 
(
õõ 
SqlException
õõ 
	exceptSql
õõ  )
)
õõ) *
{
úú 
IO
ùù 
.
ùù 
Logger
ùù 
.
ùù 
Log
ùù 
(
ùù 
NLog
ùù "
.
ùù" #
LogLevel
ùù# +
.
ùù+ ,
Warn
ùù, 0
,
ùù0 1
$str
ùù2 R
,
ùùR S
	exceptSql
ùùT ]
)
ùù] ^
;
ùù^ _
}
ûû 
}
üü 	
}
†† 
private
££ 
void
££ 
GoodB2G1
££ 
(
££ 
)
££ 
{
§§ 
string
•• 
password
•• 
;
•• 
if
¶¶ 

(
¶¶ 
IO
¶¶ 
.
¶¶ 

staticTrue
¶¶ 
)
¶¶ 
{
ßß 	
password
®® 
=
®® 
$str
®® 
;
®® 
{
™™ 
try
´´ 
{
¨¨ 
using
ÆÆ 
(
ÆÆ 
	TcpClient
ÆÆ $
tcpConn
ÆÆ% ,
=
ÆÆ- .
new
ÆÆ/ 2
	TcpClient
ÆÆ3 <
(
ÆÆ< =
$str
ÆÆ= O
,
ÆÆO P
$num
ÆÆQ V
)
ÆÆV W
)
ÆÆW X
{
ØØ 
using
±± 
(
±± 
StreamReader
±± +
sr
±±, .
=
±±/ 0
new
±±1 4
StreamReader
±±5 A
(
±±A B
tcpConn
±±B I
.
±±I J
	GetStream
±±J S
(
±±S T
)
±±T U
)
±±U V
)
±±V W
{
≤≤ 
password
¥¥ $
=
¥¥% &
sr
¥¥' )
.
¥¥) *
ReadLine
¥¥* 2
(
¥¥2 3
)
¥¥3 4
;
¥¥4 5
}
µµ 
}
∂∂ 
}
∑∑ 
catch
∏∏ 
(
∏∏ 
IOException
∏∏ "
exceptIO
∏∏# +
)
∏∏+ ,
{
ππ 
IO
∫∫ 
.
∫∫ 
Logger
∫∫ 
.
∫∫ 
Log
∫∫ !
(
∫∫! "
NLog
∫∫" &
.
∫∫& '
LogLevel
∫∫' /
.
∫∫/ 0
Warn
∫∫0 4
,
∫∫4 5
$str
∫∫6 Q
,
∫∫Q R
exceptIO
∫∫S [
)
∫∫[ \
;
∫∫\ ]
}
ªª 
}
ºº 
}
ΩΩ 	
else
ææ 
{
øø 	
password
¬¬ 
=
¬¬ 
null
¬¬ 
;
¬¬ 
}
√√ 	
if
ƒƒ 

(
ƒƒ 
IO
ƒƒ 
.
ƒƒ 
staticFalse
ƒƒ 
)
ƒƒ 
{
≈≈ 	
IO
«« 
.
«« 
	WriteLine
«« 
(
«« 
$str
«« /
)
««/ 0
;
««0 1
}
»» 	
else
…… 
{
   	
if
ÀÀ 
(
ÀÀ 
password
ÀÀ 
!=
ÀÀ 
null
ÀÀ  
)
ÀÀ  !
{
ÃÃ 
{
ŒŒ 
using
œœ 
(
œœ &
AesCryptoServiceProvider
œœ 3
aesAlg
œœ4 :
=
œœ; <
new
œœ= @&
AesCryptoServiceProvider
œœA Y
(
œœY Z
)
œœZ [
)
œœ[ \
{
–– 
aesAlg
—— 
.
—— 
Padding
—— &
=
——' (
PaddingMode
——) 4
.
——4 5
None
——5 9
;
——9 :
aesAlg
““ 
.
““ 
Key
““ "
=
““# $
Encoding
““% -
.
““- .
UTF8
““. 2
.
““2 3
GetBytes
““3 ;
(
““; <
$str
““< N
)
““N O
;
““O P
ICryptoTransform
‘‘ (
	decryptor
‘‘) 2
=
‘‘3 4
aesAlg
‘‘5 ;
.
‘‘; <
CreateDecryptor
‘‘< K
(
‘‘K L
aesAlg
‘‘L R
.
‘‘R S
Key
‘‘S V
,
‘‘V W
aesAlg
‘‘X ^
.
‘‘^ _
IV
‘‘_ a
)
‘‘a b
;
‘‘b c
using
÷÷ 
(
÷÷ 
MemoryStream
÷÷ +
	msDecrypt
÷÷, 5
=
÷÷6 7
new
÷÷8 ;
MemoryStream
÷÷< H
(
÷÷H I
Encoding
÷÷I Q
.
÷÷Q R
UTF8
÷÷R V
.
÷÷V W
GetBytes
÷÷W _
(
÷÷_ `
password
÷÷` h
)
÷÷h i
)
÷÷i j
)
÷÷j k
{
◊◊ 
using
ÿÿ !
(
ÿÿ" #
CryptoStream
ÿÿ# /
	csDecrypt
ÿÿ0 9
=
ÿÿ: ;
new
ÿÿ< ?
CryptoStream
ÿÿ@ L
(
ÿÿL M
	msDecrypt
ÿÿM V
,
ÿÿV W
	decryptor
ÿÿX a
,
ÿÿa b
CryptoStreamMode
ÿÿc s
.
ÿÿs t
Read
ÿÿt x
)
ÿÿx y
)
ÿÿy z
{
ŸŸ 
using
⁄⁄  %
(
⁄⁄& '
StreamReader
⁄⁄' 3
	srDecrypt
⁄⁄4 =
=
⁄⁄> ?
new
⁄⁄@ C
StreamReader
⁄⁄D P
(
⁄⁄P Q
	csDecrypt
⁄⁄Q Z
)
⁄⁄Z [
)
⁄⁄[ \
{
€€  !
password
ﬁﬁ$ ,
=
ﬁﬁ- .
	srDecrypt
ﬁﬁ/ 8
.
ﬁﬁ8 9
	ReadToEnd
ﬁﬁ9 B
(
ﬁﬁB C
)
ﬁﬁC D
;
ﬁﬁD E
}
ﬂﬂ  !
}
‡‡ 
}
·· 
}
‚‚ 
}
„„ 
try
‰‰ 
{
ÂÂ 
using
ÁÁ 
(
ÁÁ 
SqlConnection
ÁÁ (

connection
ÁÁ) 3
=
ÁÁ4 5
new
ÁÁ6 9
SqlConnection
ÁÁ: G
(
ÁÁG H
$str
ÁÁH ~
+ÁÁ Ä
$strÁÁÅ Ö
+ÁÁÜ á
$strÁÁà î
+ÁÁï ñ
passwordÁÁó ü
)ÁÁü †
)ÁÁ† °
{
ËË 

connection
ÈÈ "
.
ÈÈ" #
Open
ÈÈ# '
(
ÈÈ' (
)
ÈÈ( )
;
ÈÈ) *
using
ÍÍ 
(
ÍÍ 

SqlCommand
ÍÍ )
command
ÍÍ* 1
=
ÍÍ2 3
new
ÍÍ4 7

SqlCommand
ÍÍ8 B
(
ÍÍB C
$str
ÍÍC ]
,
ÍÍ] ^

connection
ÍÍ_ i
)
ÍÍi j
)
ÍÍj k
{
ÎÎ 
command
ÏÏ #
.
ÏÏ# $
ExecuteNonQuery
ÏÏ$ 3
(
ÏÏ3 4
)
ÏÏ4 5
;
ÏÏ5 6
}
ÌÌ 
}
ÓÓ 
}
ÔÔ 
catch
 
(
 
SqlException
 #
	exceptSql
$ -
)
- .
{
ÒÒ 
IO
ÚÚ 
.
ÚÚ 
Logger
ÚÚ 
.
ÚÚ 
Log
ÚÚ !
(
ÚÚ! "
NLog
ÚÚ" &
.
ÚÚ& '
LogLevel
ÚÚ' /
.
ÚÚ/ 0
Warn
ÚÚ0 4
,
ÚÚ4 5
$str
ÚÚ6 V
,
ÚÚV W
	exceptSql
ÚÚX a
)
ÚÚa b
;
ÚÚb c
}
ÛÛ 
}
ÙÙ 
}
ıı 	
}
ˆˆ 
private
˘˘ 
void
˘˘ 
GoodB2G2
˘˘ 
(
˘˘ 
)
˘˘ 
{
˙˙ 
string
˚˚ 
password
˚˚ 
;
˚˚ 
if
¸¸ 

(
¸¸ 
IO
¸¸ 
.
¸¸ 

staticTrue
¸¸ 
)
¸¸ 
{
˝˝ 	
password
˛˛ 
=
˛˛ 
$str
˛˛ 
;
˛˛ 
{
ÄÄ 
try
ÅÅ 
{
ÇÇ 
using
ÑÑ 
(
ÑÑ 
	TcpClient
ÑÑ $
tcpConn
ÑÑ% ,
=
ÑÑ- .
new
ÑÑ/ 2
	TcpClient
ÑÑ3 <
(
ÑÑ< =
$str
ÑÑ= O
,
ÑÑO P
$num
ÑÑQ V
)
ÑÑV W
)
ÑÑW X
{
ÖÖ 
using
áá 
(
áá 
StreamReader
áá +
sr
áá, .
=
áá/ 0
new
áá1 4
StreamReader
áá5 A
(
ááA B
tcpConn
ááB I
.
ááI J
	GetStream
ááJ S
(
ááS T
)
ááT U
)
ááU V
)
ááV W
{
àà 
password
ää $
=
ää% &
sr
ää' )
.
ää) *
ReadLine
ää* 2
(
ää2 3
)
ää3 4
;
ää4 5
}
ãã 
}
åå 
}
çç 
catch
éé 
(
éé 
IOException
éé "
exceptIO
éé# +
)
éé+ ,
{
èè 
IO
êê 
.
êê 
Logger
êê 
.
êê 
Log
êê !
(
êê! "
NLog
êê" &
.
êê& '
LogLevel
êê' /
.
êê/ 0
Warn
êê0 4
,
êê4 5
$str
êê6 Q
,
êêQ R
exceptIO
êêS [
)
êê[ \
;
êê\ ]
}
ëë 
}
íí 
}
ìì 	
else
îî 
{
ïï 	
password
òò 
=
òò 
null
òò 
;
òò 
}
ôô 	
if
öö 

(
öö 
IO
öö 
.
öö 

staticTrue
öö 
)
öö 
{
õõ 	
if
úú 
(
úú 
password
úú 
!=
úú 
null
úú  
)
úú  !
{
ùù 
{
üü 
using
†† 
(
†† &
AesCryptoServiceProvider
†† 3
aesAlg
††4 :
=
††; <
new
††= @&
AesCryptoServiceProvider
††A Y
(
††Y Z
)
††Z [
)
††[ \
{
°° 
aesAlg
¢¢ 
.
¢¢ 
Padding
¢¢ &
=
¢¢' (
PaddingMode
¢¢) 4
.
¢¢4 5
None
¢¢5 9
;
¢¢9 :
aesAlg
££ 
.
££ 
Key
££ "
=
££# $
Encoding
££% -
.
££- .
UTF8
££. 2
.
££2 3
GetBytes
££3 ;
(
££; <
$str
££< N
)
££N O
;
££O P
ICryptoTransform
•• (
	decryptor
••) 2
=
••3 4
aesAlg
••5 ;
.
••; <
CreateDecryptor
••< K
(
••K L
aesAlg
••L R
.
••R S
Key
••S V
,
••V W
aesAlg
••X ^
.
••^ _
IV
••_ a
)
••a b
;
••b c
using
ßß 
(
ßß 
MemoryStream
ßß +
	msDecrypt
ßß, 5
=
ßß6 7
new
ßß8 ;
MemoryStream
ßß< H
(
ßßH I
Encoding
ßßI Q
.
ßßQ R
UTF8
ßßR V
.
ßßV W
GetBytes
ßßW _
(
ßß_ `
password
ßß` h
)
ßßh i
)
ßßi j
)
ßßj k
{
®® 
using
©© !
(
©©" #
CryptoStream
©©# /
	csDecrypt
©©0 9
=
©©: ;
new
©©< ?
CryptoStream
©©@ L
(
©©L M
	msDecrypt
©©M V
,
©©V W
	decryptor
©©X a
,
©©a b
CryptoStreamMode
©©c s
.
©©s t
Read
©©t x
)
©©x y
)
©©y z
{
™™ 
using
´´  %
(
´´& '
StreamReader
´´' 3
	srDecrypt
´´4 =
=
´´> ?
new
´´@ C
StreamReader
´´D P
(
´´P Q
	csDecrypt
´´Q Z
)
´´Z [
)
´´[ \
{
¨¨  !
password
ØØ$ ,
=
ØØ- .
	srDecrypt
ØØ/ 8
.
ØØ8 9
	ReadToEnd
ØØ9 B
(
ØØB C
)
ØØC D
;
ØØD E
}
∞∞  !
}
±± 
}
≤≤ 
}
≥≥ 
}
¥¥ 
try
µµ 
{
∂∂ 
using
∏∏ 
(
∏∏ 
SqlConnection
∏∏ (

connection
∏∏) 3
=
∏∏4 5
new
∏∏6 9
SqlConnection
∏∏: G
(
∏∏G H
$str
∏∏H ~
+∏∏ Ä
$str∏∏Å Ö
+∏∏Ü á
$str∏∏à î
+∏∏ï ñ
password∏∏ó ü
)∏∏ü †
)∏∏† °
{
ππ 

connection
∫∫ "
.
∫∫" #
Open
∫∫# '
(
∫∫' (
)
∫∫( )
;
∫∫) *
using
ªª 
(
ªª 

SqlCommand
ªª )
command
ªª* 1
=
ªª2 3
new
ªª4 7

SqlCommand
ªª8 B
(
ªªB C
$str
ªªC ]
,
ªª] ^

connection
ªª_ i
)
ªªi j
)
ªªj k
{
ºº 
command
ΩΩ #
.
ΩΩ# $
ExecuteNonQuery
ΩΩ$ 3
(
ΩΩ3 4
)
ΩΩ4 5
;
ΩΩ5 6
}
ææ 
}
øø 
}
¿¿ 
catch
¡¡ 
(
¡¡ 
SqlException
¡¡ #
	exceptSql
¡¡$ -
)
¡¡- .
{
¬¬ 
IO
√√ 
.
√√ 
Logger
√√ 
.
√√ 
Log
√√ !
(
√√! "
NLog
√√" &
.
√√& '
LogLevel
√√' /
.
√√/ 0
Warn
√√0 4
,
√√4 5
$str
√√6 V
,
√√V W
	exceptSql
√√X a
)
√√a b
;
√√b c
}
ƒƒ 
}
≈≈ 
}
∆∆ 	
}
«« 
public
…… 

override
…… 
void
…… 
Good
…… 
(
…… 
)
…… 
{
   
GoodG2B1
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
GoodG2B2
ÃÃ 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ 
GoodB2G1
ÕÕ 
(
ÕÕ 
)
ÕÕ 
;
ÕÕ 
GoodB2G2
ŒŒ 
(
ŒŒ 
)
ŒŒ 
;
ŒŒ 
}
œœ 
}—— 
}““ ∆ü
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_11.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_11 F
:G H
AbstractTestCaseI Y
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
password## 
;## 
if$$ 

($$ 
IO$$ 
.$$ 
StaticReturnsTrue$$  
($$  !
)$$! "
)$$" #
{%% 	
password&& 
=&& 
$str&& 
;&& 
{(( 
try)) 
{** 
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
new,,/ 2
	TcpClient,,3 <
(,,< =
$str,,= O
,,,O P
$num,,Q V
),,V W
),,W X
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
password22 $
=22% &
sr22' )
.22) *
ReadLine22* 2
(222 3
)223 4
;224 5
}33 
}44 
}55 
catch66 
(66 
IOException66 "
exceptIO66# +
)66+ ,
{77 
IO88 
.88 
Logger88 
.88 
Log88 !
(88! "
NLog88" &
.88& '
LogLevel88' /
.88/ 0
Warn880 4
,884 5
$str886 Q
,88Q R
exceptIO88S [
)88[ \
;88\ ]
}99 
}:: 
};; 	
else<< 
{== 	
password@@ 
=@@ 
null@@ 
;@@ 
}AA 	
ifBB 

(BB
 
IOBB 
.BB 
StaticReturnsTrueBB 
(BB  
)BB  !
)BB! "
{CC 	
tryDD 
{EE 
usingGG 
(GG 
SqlConnectionGG $

connectionGG% /
=GG0 1
newGG2 5
SqlConnectionGG6 C
(GGC D
$strGGD z
+GG{ |
$str	GG} Å
+
GGÇ É
$str
GGÑ ê
+
GGë í
password
GGì õ
)
GGõ ú
)
GGú ù
{HH 

connectionII 
.II 
OpenII #
(II# $
)II$ %
;II% &
usingJJ 
(JJ 

SqlCommandJJ %
commandJJ& -
=JJ. /
newJJ0 3

SqlCommandJJ4 >
(JJ> ?
$strJJ? Y
,JJY Z

connectionJJ[ e
)JJe f
)JJf g
{KK 
commandLL 
.LL  
ExecuteNonQueryLL  /
(LL/ 0
)LL0 1
;LL1 2
}MM 
}NN 
}OO 
catchPP 
(PP 
SqlExceptionPP 
	exceptSqlPP  )
)PP) *
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR 
(RR 
NLogRR "
.RR" #
LogLevelRR# +
.RR+ ,
WarnRR, 0
,RR0 1
$strRR2 R
,RRR S
	exceptSqlRRT ]
)RR] ^
;RR^ _
}SS 
}TT 	
}UU 
privateYY 
voidYY 
GoodG2B1YY 
(YY 
)YY 
{ZZ 
string[[ 
password[[ 
;[[ 
if\\ 

(\\ 
IO\\ 
.\\ 
StaticReturnsFalse\\ !
(\\! "
)\\" #
)\\# $
{]] 	
password`` 
=`` 
null`` 
;`` 
}aa 	
elsebb 
{cc 	
passwordff 
=ff 
$strff &
;ff& '
}gg 	
ifhh 

(hh 
IOhh 
.hh 
StaticReturnsTruehh  
(hh  !
)hh! "
)hh" #
{ii 	
tryjj 
{kk 
usingmm 
(mm 
SqlConnectionmm $

connectionmm% /
=mm0 1
newmm2 5
SqlConnectionmm6 C
(mmC D
$strmmD z
+mm{ |
$str	mm} Å
+
mmÇ É
$str
mmÑ ê
+
mmë í
password
mmì õ
)
mmõ ú
)
mmú ù
{nn 

connectionoo 
.oo 
Openoo #
(oo# $
)oo$ %
;oo% &
usingpp 
(pp 

SqlCommandpp %
commandpp& -
=pp. /
newpp0 3

SqlCommandpp4 >
(pp> ?
$strpp? Y
,ppY Z

connectionpp[ e
)ppe f
)ppf g
{qq 
commandrr 
.rr  
ExecuteNonQueryrr  /
(rr/ 0
)rr0 1
;rr1 2
}ss 
}tt 
}uu 
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv  )
)vv) *
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
	exceptSqlxxT ]
)xx] ^
;xx^ _
}yy 
}zz 	
}{{ 
private~~ 
void~~ 
GoodG2B2~~ 
(~~ 
)~~ 
{ 
string
ÄÄ 
password
ÄÄ 
;
ÄÄ 
if
ÅÅ 

(
ÅÅ 
IO
ÅÅ 
.
ÅÅ 
StaticReturnsTrue
ÅÅ  
(
ÅÅ  !
)
ÅÅ! "
)
ÅÅ" #
{
ÇÇ 	
password
ÖÖ 
=
ÖÖ 
$str
ÖÖ &
;
ÖÖ& '
}
ÜÜ 	
else
áá 
{
àà 	
password
ãã 
=
ãã 
null
ãã 
;
ãã 
}
åå 	
if
çç 

(
çç 
IO
çç 
.
çç 
StaticReturnsTrue
çç  
(
çç  !
)
çç! "
)
çç" #
{
éé 	
try
èè 
{
êê 
using
íí 
(
íí 
SqlConnection
íí $

connection
íí% /
=
íí0 1
new
íí2 5
SqlConnection
íí6 C
(
ííC D
$str
ííD z
+
íí{ |
$stríí} Å
+ííÇ É
$strííÑ ê
+ííë í
passwordííì õ
)ííõ ú
)ííú ù
{
ìì 

connection
îî 
.
îî 
Open
îî #
(
îî# $
)
îî$ %
;
îî% &
using
ïï 
(
ïï 

SqlCommand
ïï %
command
ïï& -
=
ïï. /
new
ïï0 3

SqlCommand
ïï4 >
(
ïï> ?
$str
ïï? Y
,
ïïY Z

connection
ïï[ e
)
ïïe f
)
ïïf g
{
ññ 
command
óó 
.
óó  
ExecuteNonQuery
óó  /
(
óó/ 0
)
óó0 1
;
óó1 2
}
òò 
}
ôô 
}
öö 
catch
õõ 
(
õõ 
SqlException
õõ 
	exceptSql
õõ  )
)
õõ) *
{
úú 
IO
ùù 
.
ùù 
Logger
ùù 
.
ùù 
Log
ùù 
(
ùù 
NLog
ùù "
.
ùù" #
LogLevel
ùù# +
.
ùù+ ,
Warn
ùù, 0
,
ùù0 1
$str
ùù2 R
,
ùùR S
	exceptSql
ùùT ]
)
ùù] ^
;
ùù^ _
}
ûû 
}
üü 	
}
†† 
private
££ 
void
££ 
GoodB2G1
££ 
(
££ 
)
££ 
{
§§ 
string
•• 
password
•• 
;
•• 
if
¶¶ 

(
¶¶ 
IO
¶¶ 
.
¶¶ 
StaticReturnsTrue
¶¶  
(
¶¶  !
)
¶¶! "
)
¶¶" #
{
ßß 	
password
®® 
=
®® 
$str
®® 
;
®® 
{
™™ 
try
´´ 
{
¨¨ 
using
ÆÆ 
(
ÆÆ 
	TcpClient
ÆÆ $
tcpConn
ÆÆ% ,
=
ÆÆ- .
new
ÆÆ/ 2
	TcpClient
ÆÆ3 <
(
ÆÆ< =
$str
ÆÆ= O
,
ÆÆO P
$num
ÆÆQ V
)
ÆÆV W
)
ÆÆW X
{
ØØ 
using
±± 
(
±± 
StreamReader
±± +
sr
±±, .
=
±±/ 0
new
±±1 4
StreamReader
±±5 A
(
±±A B
tcpConn
±±B I
.
±±I J
	GetStream
±±J S
(
±±S T
)
±±T U
)
±±U V
)
±±V W
{
≤≤ 
password
¥¥ $
=
¥¥% &
sr
¥¥' )
.
¥¥) *
ReadLine
¥¥* 2
(
¥¥2 3
)
¥¥3 4
;
¥¥4 5
}
µµ 
}
∂∂ 
}
∑∑ 
catch
∏∏ 
(
∏∏ 
IOException
∏∏ "
exceptIO
∏∏# +
)
∏∏+ ,
{
ππ 
IO
∫∫ 
.
∫∫ 
Logger
∫∫ 
.
∫∫ 
Log
∫∫ !
(
∫∫! "
NLog
∫∫" &
.
∫∫& '
LogLevel
∫∫' /
.
∫∫/ 0
Warn
∫∫0 4
,
∫∫4 5
$str
∫∫6 Q
,
∫∫Q R
exceptIO
∫∫S [
)
∫∫[ \
;
∫∫\ ]
}
ªª 
}
ºº 
}
ΩΩ 	
else
ææ 
{
øø 	
password
¬¬ 
=
¬¬ 
null
¬¬ 
;
¬¬ 
}
√√ 	
if
ƒƒ 

(
ƒƒ 
IO
ƒƒ 
.
ƒƒ  
StaticReturnsFalse
ƒƒ !
(
ƒƒ! "
)
ƒƒ" #
)
ƒƒ# $
{
≈≈ 	
IO
«« 
.
«« 
	WriteLine
«« 
(
«« 
$str
«« /
)
««/ 0
;
««0 1
}
»» 	
else
…… 
{
   	
if
ÀÀ 
(
ÀÀ 
password
ÀÀ 
!=
ÀÀ 
null
ÀÀ  
)
ÀÀ  !
{
ÃÃ 
{
ŒŒ 
using
œœ 
(
œœ &
AesCryptoServiceProvider
œœ 3
aesAlg
œœ4 :
=
œœ; <
new
œœ= @&
AesCryptoServiceProvider
œœA Y
(
œœY Z
)
œœZ [
)
œœ[ \
{
–– 
aesAlg
—— 
.
—— 
Padding
—— &
=
——' (
PaddingMode
——) 4
.
——4 5
None
——5 9
;
——9 :
aesAlg
““ 
.
““ 
Key
““ "
=
““# $
Encoding
““% -
.
““- .
UTF8
““. 2
.
““2 3
GetBytes
““3 ;
(
““; <
$str
““< N
)
““N O
;
““O P
ICryptoTransform
‘‘ (
	decryptor
‘‘) 2
=
‘‘3 4
aesAlg
‘‘5 ;
.
‘‘; <
CreateDecryptor
‘‘< K
(
‘‘K L
aesAlg
‘‘L R
.
‘‘R S
Key
‘‘S V
,
‘‘V W
aesAlg
‘‘X ^
.
‘‘^ _
IV
‘‘_ a
)
‘‘a b
;
‘‘b c
using
÷÷ 
(
÷÷ 
MemoryStream
÷÷ +
	msDecrypt
÷÷, 5
=
÷÷6 7
new
÷÷8 ;
MemoryStream
÷÷< H
(
÷÷H I
Encoding
÷÷I Q
.
÷÷Q R
UTF8
÷÷R V
.
÷÷V W
GetBytes
÷÷W _
(
÷÷_ `
password
÷÷` h
)
÷÷h i
)
÷÷i j
)
÷÷j k
{
◊◊ 
using
ÿÿ !
(
ÿÿ" #
CryptoStream
ÿÿ# /
	csDecrypt
ÿÿ0 9
=
ÿÿ: ;
new
ÿÿ< ?
CryptoStream
ÿÿ@ L
(
ÿÿL M
	msDecrypt
ÿÿM V
,
ÿÿV W
	decryptor
ÿÿX a
,
ÿÿa b
CryptoStreamMode
ÿÿc s
.
ÿÿs t
Read
ÿÿt x
)
ÿÿx y
)
ÿÿy z
{
ŸŸ 
using
⁄⁄  %
(
⁄⁄& '
StreamReader
⁄⁄' 3
	srDecrypt
⁄⁄4 =
=
⁄⁄> ?
new
⁄⁄@ C
StreamReader
⁄⁄D P
(
⁄⁄P Q
	csDecrypt
⁄⁄Q Z
)
⁄⁄Z [
)
⁄⁄[ \
{
€€  !
password
ﬁﬁ$ ,
=
ﬁﬁ- .
	srDecrypt
ﬁﬁ/ 8
.
ﬁﬁ8 9
	ReadToEnd
ﬁﬁ9 B
(
ﬁﬁB C
)
ﬁﬁC D
;
ﬁﬁD E
}
ﬂﬂ  !
}
‡‡ 
}
·· 
}
‚‚ 
}
„„ 
try
‰‰ 
{
ÂÂ 
using
ÁÁ 
(
ÁÁ 
SqlConnection
ÁÁ (

connection
ÁÁ) 3
=
ÁÁ4 5
new
ÁÁ6 9
SqlConnection
ÁÁ: G
(
ÁÁG H
$str
ÁÁH ~
+ÁÁ Ä
$strÁÁÅ Ö
+ÁÁÜ á
$strÁÁà î
+ÁÁï ñ
passwordÁÁó ü
)ÁÁü †
)ÁÁ† °
{
ËË 

connection
ÈÈ "
.
ÈÈ" #
Open
ÈÈ# '
(
ÈÈ' (
)
ÈÈ( )
;
ÈÈ) *
using
ÍÍ 
(
ÍÍ 

SqlCommand
ÍÍ )
command
ÍÍ* 1
=
ÍÍ2 3
new
ÍÍ4 7

SqlCommand
ÍÍ8 B
(
ÍÍB C
$str
ÍÍC ]
,
ÍÍ] ^

connection
ÍÍ_ i
)
ÍÍi j
)
ÍÍj k
{
ÎÎ 
command
ÏÏ #
.
ÏÏ# $
ExecuteNonQuery
ÏÏ$ 3
(
ÏÏ3 4
)
ÏÏ4 5
;
ÏÏ5 6
}
ÌÌ 
}
ÓÓ 
}
ÔÔ 
catch
 
(
 
SqlException
 #
	exceptSql
$ -
)
- .
{
ÒÒ 
IO
ÚÚ 
.
ÚÚ 
Logger
ÚÚ 
.
ÚÚ 
Log
ÚÚ !
(
ÚÚ! "
NLog
ÚÚ" &
.
ÚÚ& '
LogLevel
ÚÚ' /
.
ÚÚ/ 0
Warn
ÚÚ0 4
,
ÚÚ4 5
$str
ÚÚ6 V
,
ÚÚV W
	exceptSql
ÚÚX a
)
ÚÚa b
;
ÚÚb c
}
ÛÛ 
}
ÙÙ 
}
ıı 	
}
ˆˆ 
private
˘˘ 
void
˘˘ 
GoodB2G2
˘˘ 
(
˘˘ 
)
˘˘ 
{
˙˙ 
string
˚˚ 
password
˚˚ 
;
˚˚ 
if
¸¸ 

(
¸¸ 
IO
¸¸ 
.
¸¸ 
StaticReturnsTrue
¸¸  
(
¸¸  !
)
¸¸! "
)
¸¸" #
{
˝˝ 	
password
˛˛ 
=
˛˛ 
$str
˛˛ 
;
˛˛ 
{
ÄÄ 
try
ÅÅ 
{
ÇÇ 
using
ÑÑ 
(
ÑÑ 
	TcpClient
ÑÑ $
tcpConn
ÑÑ% ,
=
ÑÑ- .
new
ÑÑ/ 2
	TcpClient
ÑÑ3 <
(
ÑÑ< =
$str
ÑÑ= O
,
ÑÑO P
$num
ÑÑQ V
)
ÑÑV W
)
ÑÑW X
{
ÖÖ 
using
áá 
(
áá 
StreamReader
áá +
sr
áá, .
=
áá/ 0
new
áá1 4
StreamReader
áá5 A
(
ááA B
tcpConn
ááB I
.
ááI J
	GetStream
ááJ S
(
ááS T
)
ááT U
)
ááU V
)
ááV W
{
àà 
password
ää $
=
ää% &
sr
ää' )
.
ää) *
ReadLine
ää* 2
(
ää2 3
)
ää3 4
;
ää4 5
}
ãã 
}
åå 
}
çç 
catch
éé 
(
éé 
IOException
éé "
exceptIO
éé# +
)
éé+ ,
{
èè 
IO
êê 
.
êê 
Logger
êê 
.
êê 
Log
êê !
(
êê! "
NLog
êê" &
.
êê& '
LogLevel
êê' /
.
êê/ 0
Warn
êê0 4
,
êê4 5
$str
êê6 Q
,
êêQ R
exceptIO
êêS [
)
êê[ \
;
êê\ ]
}
ëë 
}
íí 
}
ìì 	
else
îî 
{
ïï 	
password
òò 
=
òò 
null
òò 
;
òò 
}
ôô 	
if
öö 

(
öö 
IO
öö 
.
öö 
StaticReturnsTrue
öö  
(
öö  !
)
öö! "
)
öö" #
{
õõ 	
if
úú 
(
úú 
password
úú 
!=
úú 
null
úú  
)
úú  !
{
ùù 
{
üü 
using
†† 
(
†† &
AesCryptoServiceProvider
†† 3
aesAlg
††4 :
=
††; <
new
††= @&
AesCryptoServiceProvider
††A Y
(
††Y Z
)
††Z [
)
††[ \
{
°° 
aesAlg
¢¢ 
.
¢¢ 
Padding
¢¢ &
=
¢¢' (
PaddingMode
¢¢) 4
.
¢¢4 5
None
¢¢5 9
;
¢¢9 :
aesAlg
££ 
.
££ 
Key
££ "
=
££# $
Encoding
££% -
.
££- .
UTF8
££. 2
.
££2 3
GetBytes
££3 ;
(
££; <
$str
££< N
)
££N O
;
££O P
ICryptoTransform
•• (
	decryptor
••) 2
=
••3 4
aesAlg
••5 ;
.
••; <
CreateDecryptor
••< K
(
••K L
aesAlg
••L R
.
••R S
Key
••S V
,
••V W
aesAlg
••X ^
.
••^ _
IV
••_ a
)
••a b
;
••b c
using
ßß 
(
ßß 
MemoryStream
ßß +
	msDecrypt
ßß, 5
=
ßß6 7
new
ßß8 ;
MemoryStream
ßß< H
(
ßßH I
Encoding
ßßI Q
.
ßßQ R
UTF8
ßßR V
.
ßßV W
GetBytes
ßßW _
(
ßß_ `
password
ßß` h
)
ßßh i
)
ßßi j
)
ßßj k
{
®® 
using
©© !
(
©©" #
CryptoStream
©©# /
	csDecrypt
©©0 9
=
©©: ;
new
©©< ?
CryptoStream
©©@ L
(
©©L M
	msDecrypt
©©M V
,
©©V W
	decryptor
©©X a
,
©©a b
CryptoStreamMode
©©c s
.
©©s t
Read
©©t x
)
©©x y
)
©©y z
{
™™ 
using
´´  %
(
´´& '
StreamReader
´´' 3
	srDecrypt
´´4 =
=
´´> ?
new
´´@ C
StreamReader
´´D P
(
´´P Q
	csDecrypt
´´Q Z
)
´´Z [
)
´´[ \
{
¨¨  !
password
ØØ$ ,
=
ØØ- .
	srDecrypt
ØØ/ 8
.
ØØ8 9
	ReadToEnd
ØØ9 B
(
ØØB C
)
ØØC D
;
ØØD E
}
∞∞  !
}
±± 
}
≤≤ 
}
≥≥ 
}
¥¥ 
try
µµ 
{
∂∂ 
using
∏∏ 
(
∏∏ 
SqlConnection
∏∏ (

connection
∏∏) 3
=
∏∏4 5
new
∏∏6 9
SqlConnection
∏∏: G
(
∏∏G H
$str
∏∏H ~
+∏∏ Ä
$str∏∏Å Ö
+∏∏Ü á
$str∏∏à î
+∏∏ï ñ
password∏∏ó ü
)∏∏ü †
)∏∏† °
{
ππ 

connection
∫∫ "
.
∫∫" #
Open
∫∫# '
(
∫∫' (
)
∫∫( )
;
∫∫) *
using
ªª 
(
ªª 

SqlCommand
ªª )
command
ªª* 1
=
ªª2 3
new
ªª4 7

SqlCommand
ªª8 B
(
ªªB C
$str
ªªC ]
,
ªª] ^

connection
ªª_ i
)
ªªi j
)
ªªj k
{
ºº 
command
ΩΩ #
.
ΩΩ# $
ExecuteNonQuery
ΩΩ$ 3
(
ΩΩ3 4
)
ΩΩ4 5
;
ΩΩ5 6
}
ææ 
}
øø 
}
¿¿ 
catch
¡¡ 
(
¡¡ 
SqlException
¡¡ #
	exceptSql
¡¡$ -
)
¡¡- .
{
¬¬ 
IO
√√ 
.
√√ 
Logger
√√ 
.
√√ 
Log
√√ !
(
√√! "
NLog
√√" &
.
√√& '
LogLevel
√√' /
.
√√/ 0
Warn
√√0 4
,
√√4 5
$str
√√6 V
,
√√V W
	exceptSql
√√X a
)
√√a b
;
√√b c
}
ƒƒ 
}
≈≈ 
}
∆∆ 	
}
«« 
public
…… 

override
…… 
void
…… 
Good
…… 
(
…… 
)
…… 
{
   
GoodG2B1
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
GoodG2B2
ÃÃ 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ 
GoodB2G1
ÕÕ 
(
ÕÕ 
)
ÕÕ 
;
ÕÕ 
GoodB2G2
ŒŒ 
(
ŒŒ 
)
ŒŒ 
;
ŒŒ 
}
œœ 
}—— 
}““ äØ
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_12.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_12 F
:G H
AbstractTestCaseI Y
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
password## 
;## 
if$$ 

($$
 
IO$$ 
.$$ $
StaticReturnsTrueOrFalse$$ &
($$& '
)$$' (
)$$( )
{%% 	
password&& 
=&& 
$str&& 
;&& 
{(( 
try)) 
{** 
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
new,,/ 2
	TcpClient,,3 <
(,,< =
$str,,= O
,,,O P
$num,,Q V
),,V W
),,W X
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
password22 $
=22% &
sr22' )
.22) *
ReadLine22* 2
(222 3
)223 4
;224 5
}33 
}44 
}55 
catch66 
(66 
IOException66 "
exceptIO66# +
)66+ ,
{77 
IO88 
.88 
Logger88 
.88 
Log88 !
(88! "
NLog88" &
.88& '
LogLevel88' /
.88/ 0
Warn880 4
,884 5
$str886 Q
,88Q R
exceptIO88S [
)88[ \
;88\ ]
}99 
}:: 
};; 	
else<< 
{== 	
password@@ 
=@@ 
$str@@ &
;@@& '
}AA 	
ifBB 

(BB
 
IOBB 
.BB $
StaticReturnsTrueOrFalseBB &
(BB& '
)BB' (
)BB( )
{CC 	
tryDD 
{EE 
usingGG 
(GG 
SqlConnectionGG $

connectionGG% /
=GG0 1
newGG2 5
SqlConnectionGG6 C
(GGC D
$strGGD z
+GG{ |
$str	GG} Å
+
GGÇ É
$str
GGÑ ê
+
GGë í
password
GGì õ
)
GGõ ú
)
GGú ù
{HH 

connectionII 
.II 
OpenII #
(II# $
)II$ %
;II% &
usingJJ 
(JJ 

SqlCommandJJ %
commandJJ& -
=JJ. /
newJJ0 3

SqlCommandJJ4 >
(JJ> ?
$strJJ? Y
,JJY Z

connectionJJ[ e
)JJe f
)JJf g
{KK 
commandLL 
.LL  
ExecuteNonQueryLL  /
(LL/ 0
)LL0 1
;LL1 2
}MM 
}NN 
}OO 
catchPP 
(PP 
SqlExceptionPP 
	exceptSqlPP  )
)PP) *
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR 
(RR 
NLogRR "
.RR" #
LogLevelRR# +
.RR+ ,
WarnRR, 0
,RR0 1
$strRR2 R
,RRR S
	exceptSqlRRT ]
)RR] ^
;RR^ _
}SS 
}TT 	
elseUU 
{VV 	
ifWW 
(WW 
passwordWW 
!=WW 
nullWW  
)WW  !
{XX 
{ZZ 
using[[ 
([[ $
AesCryptoServiceProvider[[ 3
aesAlg[[4 :
=[[; <
new[[= @$
AesCryptoServiceProvider[[A Y
([[Y Z
)[[Z [
)[[[ \
{\\ 
aesAlg]] 
.]] 
Padding]] &
=]]' (
PaddingMode]]) 4
.]]4 5
None]]5 9
;]]9 :
aesAlg^^ 
.^^ 
Key^^ "
=^^# $
Encoding^^% -
.^^- .
UTF8^^. 2
.^^2 3
GetBytes^^3 ;
(^^; <
$str^^< N
)^^N O
;^^O P
ICryptoTransform`` (
	decryptor``) 2
=``3 4
aesAlg``5 ;
.``; <
CreateDecryptor``< K
(``K L
aesAlg``L R
.``R S
Key``S V
,``V W
aesAlg``X ^
.``^ _
IV``_ a
)``a b
;``b c
usingbb 
(bb 
MemoryStreambb +
	msDecryptbb, 5
=bb6 7
newbb8 ;
MemoryStreambb< H
(bbH I
EncodingbbI Q
.bbQ R
UTF8bbR V
.bbV W
GetBytesbbW _
(bb_ `
passwordbb` h
)bbh i
)bbi j
)bbj k
{cc 
usingdd !
(dd" #
CryptoStreamdd# /
	csDecryptdd0 9
=dd: ;
newdd< ?
CryptoStreamdd@ L
(ddL M
	msDecryptddM V
,ddV W
	decryptorddX a
,dda b
CryptoStreamModeddc s
.dds t
Readddt x
)ddx y
)ddy z
{ee 
usingff  %
(ff& '
StreamReaderff' 3
	srDecryptff4 =
=ff> ?
newff@ C
StreamReaderffD P
(ffP Q
	csDecryptffQ Z
)ffZ [
)ff[ \
{gg  !
passwordjj$ ,
=jj- .
	srDecryptjj/ 8
.jj8 9
	ReadToEndjj9 B
(jjB C
)jjC D
;jjD E
}kk  !
}ll 
}mm 
}nn 
}oo 
trypp 
{qq 
usingss 
(ss 
SqlConnectionss (

connectionss) 3
=ss4 5
newss6 9
SqlConnectionss: G
(ssG H
$strssH ~
+	ss Ä
$str
ssÅ Ö
+
ssÜ á
$str
ssà î
+
ssï ñ
password
ssó ü
)
ssü †
)
ss† °
{tt 

connectionuu "
.uu" #
Openuu# '
(uu' (
)uu( )
;uu) *
usingvv 
(vv 

SqlCommandvv )
commandvv* 1
=vv2 3
newvv4 7

SqlCommandvv8 B
(vvB C
$strvvC ]
,vv] ^

connectionvv_ i
)vvi j
)vvj k
{ww 
commandxx #
.xx# $
ExecuteNonQueryxx$ 3
(xx3 4
)xx4 5
;xx5 6
}yy 
}zz 
}{{ 
catch|| 
(|| 
SqlException|| #
	exceptSql||$ -
)||- .
{}} 
IO~~ 
.~~ 
Logger~~ 
.~~ 
Log~~ !
(~~! "
NLog~~" &
.~~& '
LogLevel~~' /
.~~/ 0
Warn~~0 4
,~~4 5
$str~~6 V
,~~V W
	exceptSql~~X a
)~~a b
;~~b c
} 
}
ÄÄ 
}
ÅÅ 	
}
ÇÇ 
private
áá 
void
áá 
GoodG2B
áá 
(
áá 
)
áá 
{
àà 
string
ââ 
password
ââ 
;
ââ 
if
ää 

(
ää
 
IO
ää 
.
ää &
StaticReturnsTrueOrFalse
ää &
(
ää& '
)
ää' (
)
ää( )
{
ãã 	
password
éé 
=
éé 
$str
éé &
;
éé& '
}
èè 	
else
êê 
{
ëë 	
password
îî 
=
îî 
$str
îî &
;
îî& '
}
ïï 	
if
ññ 

(
ññ
 
IO
ññ 
.
ññ &
StaticReturnsTrueOrFalse
ññ &
(
ññ& '
)
ññ' (
)
ññ( )
{
óó 	
try
òò 
{
ôô 
using
õõ 
(
õõ 
SqlConnection
õõ $

connection
õõ% /
=
õõ0 1
new
õõ2 5
SqlConnection
õõ6 C
(
õõC D
$str
õõD z
+
õõ{ |
$strõõ} Å
+õõÇ É
$strõõÑ ê
+õõë í
passwordõõì õ
)õõõ ú
)õõú ù
{
úú 

connection
ùù 
.
ùù 
Open
ùù #
(
ùù# $
)
ùù$ %
;
ùù% &
using
ûû 
(
ûû 

SqlCommand
ûû %
command
ûû& -
=
ûû. /
new
ûû0 3

SqlCommand
ûû4 >
(
ûû> ?
$str
ûû? Y
,
ûûY Z

connection
ûû[ e
)
ûûe f
)
ûûf g
{
üü 
command
†† 
.
††  
ExecuteNonQuery
††  /
(
††/ 0
)
††0 1
;
††1 2
}
°° 
}
¢¢ 
}
££ 
catch
§§ 
(
§§ 
SqlException
§§ 
	exceptSql
§§  )
)
§§) *
{
•• 
IO
¶¶ 
.
¶¶ 
Logger
¶¶ 
.
¶¶ 
Log
¶¶ 
(
¶¶ 
NLog
¶¶ "
.
¶¶" #
LogLevel
¶¶# +
.
¶¶+ ,
Warn
¶¶, 0
,
¶¶0 1
$str
¶¶2 R
,
¶¶R S
	exceptSql
¶¶T ]
)
¶¶] ^
;
¶¶^ _
}
ßß 
}
®® 	
else
©© 
{
™™ 	
try
´´ 
{
¨¨ 
using
ÆÆ 
(
ÆÆ 
SqlConnection
ÆÆ $

connection
ÆÆ% /
=
ÆÆ0 1
new
ÆÆ2 5
SqlConnection
ÆÆ6 C
(
ÆÆC D
$str
ÆÆD z
+
ÆÆ{ |
$strÆÆ} Å
+ÆÆÇ É
$strÆÆÑ ê
+ÆÆë í
passwordÆÆì õ
)ÆÆõ ú
)ÆÆú ù
{
ØØ 

connection
∞∞ 
.
∞∞ 
Open
∞∞ #
(
∞∞# $
)
∞∞$ %
;
∞∞% &
using
±± 
(
±± 

SqlCommand
±± %
command
±±& -
=
±±. /
new
±±0 3

SqlCommand
±±4 >
(
±±> ?
$str
±±? Y
,
±±Y Z

connection
±±[ e
)
±±e f
)
±±f g
{
≤≤ 
command
≥≥ 
.
≥≥  
ExecuteNonQuery
≥≥  /
(
≥≥/ 0
)
≥≥0 1
;
≥≥1 2
}
¥¥ 
}
µµ 
}
∂∂ 
catch
∑∑ 
(
∑∑ 
SqlException
∑∑ 
	exceptSql
∑∑  )
)
∑∑) *
{
∏∏ 
IO
ππ 
.
ππ 
Logger
ππ 
.
ππ 
Log
ππ 
(
ππ 
NLog
ππ "
.
ππ" #
LogLevel
ππ# +
.
ππ+ ,
Warn
ππ, 0
,
ππ0 1
$str
ππ2 R
,
ππR S
	exceptSql
ππT ]
)
ππ] ^
;
ππ^ _
}
∫∫ 
}
ªª 	
}
ºº 
private
¿¿ 
void
¿¿ 
GoodB2G
¿¿ 
(
¿¿ 
)
¿¿ 
{
¡¡ 
string
¬¬ 
password
¬¬ 
;
¬¬ 
if
√√ 

(
√√
 
IO
√√ 
.
√√ &
StaticReturnsTrueOrFalse
√√ &
(
√√& '
)
√√' (
)
√√( )
{
ƒƒ 	
password
≈≈ 
=
≈≈ 
$str
≈≈ 
;
≈≈ 
{
«« 
try
»» 
{
…… 
using
ÀÀ 
(
ÀÀ 
	TcpClient
ÀÀ $
tcpConn
ÀÀ% ,
=
ÀÀ- .
new
ÀÀ/ 2
	TcpClient
ÀÀ3 <
(
ÀÀ< =
$str
ÀÀ= O
,
ÀÀO P
$num
ÀÀQ V
)
ÀÀV W
)
ÀÀW X
{
ÃÃ 
using
ŒŒ 
(
ŒŒ 
StreamReader
ŒŒ +
sr
ŒŒ, .
=
ŒŒ/ 0
new
ŒŒ1 4
StreamReader
ŒŒ5 A
(
ŒŒA B
tcpConn
ŒŒB I
.
ŒŒI J
	GetStream
ŒŒJ S
(
ŒŒS T
)
ŒŒT U
)
ŒŒU V
)
ŒŒV W
{
œœ 
password
—— $
=
——% &
sr
——' )
.
——) *
ReadLine
——* 2
(
——2 3
)
——3 4
;
——4 5
}
““ 
}
”” 
}
‘‘ 
catch
’’ 
(
’’ 
IOException
’’ "
exceptIO
’’# +
)
’’+ ,
{
÷÷ 
IO
◊◊ 
.
◊◊ 
Logger
◊◊ 
.
◊◊ 
Log
◊◊ !
(
◊◊! "
NLog
◊◊" &
.
◊◊& '
LogLevel
◊◊' /
.
◊◊/ 0
Warn
◊◊0 4
,
◊◊4 5
$str
◊◊6 Q
,
◊◊Q R
exceptIO
◊◊S [
)
◊◊[ \
;
◊◊\ ]
}
ÿÿ 
}
ŸŸ 
}
⁄⁄ 	
else
€€ 
{
‹‹ 	
password
›› 
=
›› 
$str
›› 
;
›› 
{
ﬂﬂ 
try
‡‡ 
{
·· 
using
„„ 
(
„„ 
	TcpClient
„„ $
tcpConn
„„% ,
=
„„- .
new
„„/ 2
	TcpClient
„„3 <
(
„„< =
$str
„„= O
,
„„O P
$num
„„Q V
)
„„V W
)
„„W X
{
‰‰ 
using
ÊÊ 
(
ÊÊ 
StreamReader
ÊÊ +
sr
ÊÊ, .
=
ÊÊ/ 0
new
ÊÊ1 4
StreamReader
ÊÊ5 A
(
ÊÊA B
tcpConn
ÊÊB I
.
ÊÊI J
	GetStream
ÊÊJ S
(
ÊÊS T
)
ÊÊT U
)
ÊÊU V
)
ÊÊV W
{
ÁÁ 
password
ÈÈ $
=
ÈÈ% &
sr
ÈÈ' )
.
ÈÈ) *
ReadLine
ÈÈ* 2
(
ÈÈ2 3
)
ÈÈ3 4
;
ÈÈ4 5
}
ÍÍ 
}
ÎÎ 
}
ÏÏ 
catch
ÌÌ 
(
ÌÌ 
IOException
ÌÌ "
exceptIO
ÌÌ# +
)
ÌÌ+ ,
{
ÓÓ 
IO
ÔÔ 
.
ÔÔ 
Logger
ÔÔ 
.
ÔÔ 
Log
ÔÔ !
(
ÔÔ! "
NLog
ÔÔ" &
.
ÔÔ& '
LogLevel
ÔÔ' /
.
ÔÔ/ 0
Warn
ÔÔ0 4
,
ÔÔ4 5
$str
ÔÔ6 Q
,
ÔÔQ R
exceptIO
ÔÔS [
)
ÔÔ[ \
;
ÔÔ\ ]
}
 
}
ÒÒ 
}
ÚÚ 	
if
ÛÛ 

(
ÛÛ
 
IO
ÛÛ 
.
ÛÛ &
StaticReturnsTrueOrFalse
ÛÛ &
(
ÛÛ& '
)
ÛÛ' (
)
ÛÛ( )
{
ÙÙ 	
if
ıı 
(
ıı 
password
ıı 
!=
ıı 
null
ıı  
)
ıı  !
{
ˆˆ 
{
¯¯ 
using
˘˘ 
(
˘˘ &
AesCryptoServiceProvider
˘˘ 3
aesAlg
˘˘4 :
=
˘˘; <
new
˘˘= @&
AesCryptoServiceProvider
˘˘A Y
(
˘˘Y Z
)
˘˘Z [
)
˘˘[ \
{
˙˙ 
aesAlg
˚˚ 
.
˚˚ 
Padding
˚˚ &
=
˚˚' (
PaddingMode
˚˚) 4
.
˚˚4 5
None
˚˚5 9
;
˚˚9 :
aesAlg
¸¸ 
.
¸¸ 
Key
¸¸ "
=
¸¸# $
Encoding
¸¸% -
.
¸¸- .
UTF8
¸¸. 2
.
¸¸2 3
GetBytes
¸¸3 ;
(
¸¸; <
$str
¸¸< N
)
¸¸N O
;
¸¸O P
ICryptoTransform
˛˛ (
	decryptor
˛˛) 2
=
˛˛3 4
aesAlg
˛˛5 ;
.
˛˛; <
CreateDecryptor
˛˛< K
(
˛˛K L
aesAlg
˛˛L R
.
˛˛R S
Key
˛˛S V
,
˛˛V W
aesAlg
˛˛X ^
.
˛˛^ _
IV
˛˛_ a
)
˛˛a b
;
˛˛b c
using
ÄÄ 
(
ÄÄ 
MemoryStream
ÄÄ +
	msDecrypt
ÄÄ, 5
=
ÄÄ6 7
new
ÄÄ8 ;
MemoryStream
ÄÄ< H
(
ÄÄH I
Encoding
ÄÄI Q
.
ÄÄQ R
UTF8
ÄÄR V
.
ÄÄV W
GetBytes
ÄÄW _
(
ÄÄ_ `
password
ÄÄ` h
)
ÄÄh i
)
ÄÄi j
)
ÄÄj k
{
ÅÅ 
using
ÇÇ !
(
ÇÇ" #
CryptoStream
ÇÇ# /
	csDecrypt
ÇÇ0 9
=
ÇÇ: ;
new
ÇÇ< ?
CryptoStream
ÇÇ@ L
(
ÇÇL M
	msDecrypt
ÇÇM V
,
ÇÇV W
	decryptor
ÇÇX a
,
ÇÇa b
CryptoStreamMode
ÇÇc s
.
ÇÇs t
Read
ÇÇt x
)
ÇÇx y
)
ÇÇy z
{
ÉÉ 
using
ÑÑ  %
(
ÑÑ& '
StreamReader
ÑÑ' 3
	srDecrypt
ÑÑ4 =
=
ÑÑ> ?
new
ÑÑ@ C
StreamReader
ÑÑD P
(
ÑÑP Q
	csDecrypt
ÑÑQ Z
)
ÑÑZ [
)
ÑÑ[ \
{
ÖÖ  !
password
àà$ ,
=
àà- .
	srDecrypt
àà/ 8
.
àà8 9
	ReadToEnd
àà9 B
(
ààB C
)
ààC D
;
ààD E
}
ââ  !
}
ää 
}
ãã 
}
åå 
}
çç 
try
éé 
{
èè 
using
ëë 
(
ëë 
SqlConnection
ëë (

connection
ëë) 3
=
ëë4 5
new
ëë6 9
SqlConnection
ëë: G
(
ëëG H
$str
ëëH ~
+ëë Ä
$strëëÅ Ö
+ëëÜ á
$strëëà î
+ëëï ñ
passwordëëó ü
)ëëü †
)ëë† °
{
íí 

connection
ìì "
.
ìì" #
Open
ìì# '
(
ìì' (
)
ìì( )
;
ìì) *
using
îî 
(
îî 

SqlCommand
îî )
command
îî* 1
=
îî2 3
new
îî4 7

SqlCommand
îî8 B
(
îîB C
$str
îîC ]
,
îî] ^

connection
îî_ i
)
îîi j
)
îîj k
{
ïï 
command
ññ #
.
ññ# $
ExecuteNonQuery
ññ$ 3
(
ññ3 4
)
ññ4 5
;
ññ5 6
}
óó 
}
òò 
}
ôô 
catch
öö 
(
öö 
SqlException
öö #
	exceptSql
öö$ -
)
öö- .
{
õõ 
IO
úú 
.
úú 
Logger
úú 
.
úú 
Log
úú !
(
úú! "
NLog
úú" &
.
úú& '
LogLevel
úú' /
.
úú/ 0
Warn
úú0 4
,
úú4 5
$str
úú6 V
,
úúV W
	exceptSql
úúX a
)
úúa b
;
úúb c
}
ùù 
}
ûû 
}
üü 	
else
†† 
{
°° 	
if
¢¢ 
(
¢¢ 
password
¢¢ 
!=
¢¢ 
null
¢¢  
)
¢¢  !
{
££ 
{
•• 
using
¶¶ 
(
¶¶ &
AesCryptoServiceProvider
¶¶ 3
aesAlg
¶¶4 :
=
¶¶; <
new
¶¶= @&
AesCryptoServiceProvider
¶¶A Y
(
¶¶Y Z
)
¶¶Z [
)
¶¶[ \
{
ßß 
aesAlg
®® 
.
®® 
Padding
®® &
=
®®' (
PaddingMode
®®) 4
.
®®4 5
None
®®5 9
;
®®9 :
aesAlg
©© 
.
©© 
Key
©© "
=
©©# $
Encoding
©©% -
.
©©- .
UTF8
©©. 2
.
©©2 3
GetBytes
©©3 ;
(
©©; <
$str
©©< N
)
©©N O
;
©©O P
ICryptoTransform
´´ (
	decryptor
´´) 2
=
´´3 4
aesAlg
´´5 ;
.
´´; <
CreateDecryptor
´´< K
(
´´K L
aesAlg
´´L R
.
´´R S
Key
´´S V
,
´´V W
aesAlg
´´X ^
.
´´^ _
IV
´´_ a
)
´´a b
;
´´b c
using
≠≠ 
(
≠≠ 
MemoryStream
≠≠ +
	msDecrypt
≠≠, 5
=
≠≠6 7
new
≠≠8 ;
MemoryStream
≠≠< H
(
≠≠H I
Encoding
≠≠I Q
.
≠≠Q R
UTF8
≠≠R V
.
≠≠V W
GetBytes
≠≠W _
(
≠≠_ `
password
≠≠` h
)
≠≠h i
)
≠≠i j
)
≠≠j k
{
ÆÆ 
using
ØØ !
(
ØØ" #
CryptoStream
ØØ# /
	csDecrypt
ØØ0 9
=
ØØ: ;
new
ØØ< ?
CryptoStream
ØØ@ L
(
ØØL M
	msDecrypt
ØØM V
,
ØØV W
	decryptor
ØØX a
,
ØØa b
CryptoStreamMode
ØØc s
.
ØØs t
Read
ØØt x
)
ØØx y
)
ØØy z
{
∞∞ 
using
±±  %
(
±±& '
StreamReader
±±' 3
	srDecrypt
±±4 =
=
±±> ?
new
±±@ C
StreamReader
±±D P
(
±±P Q
	csDecrypt
±±Q Z
)
±±Z [
)
±±[ \
{
≤≤  !
password
µµ$ ,
=
µµ- .
	srDecrypt
µµ/ 8
.
µµ8 9
	ReadToEnd
µµ9 B
(
µµB C
)
µµC D
;
µµD E
}
∂∂  !
}
∑∑ 
}
∏∏ 
}
ππ 
}
∫∫ 
try
ªª 
{
ºº 
using
ææ 
(
ææ 
SqlConnection
ææ (

connection
ææ) 3
=
ææ4 5
new
ææ6 9
SqlConnection
ææ: G
(
ææG H
$str
ææH ~
+ææ Ä
$strææÅ Ö
+ææÜ á
$strææà î
+ææï ñ
passwordææó ü
)ææü †
)ææ† °
{
øø 

connection
¿¿ "
.
¿¿" #
Open
¿¿# '
(
¿¿' (
)
¿¿( )
;
¿¿) *
using
¡¡ 
(
¡¡ 

SqlCommand
¡¡ )
command
¡¡* 1
=
¡¡2 3
new
¡¡4 7

SqlCommand
¡¡8 B
(
¡¡B C
$str
¡¡C ]
,
¡¡] ^

connection
¡¡_ i
)
¡¡i j
)
¡¡j k
{
¬¬ 
command
√√ #
.
√√# $
ExecuteNonQuery
√√$ 3
(
√√3 4
)
√√4 5
;
√√5 6
}
ƒƒ 
}
≈≈ 
}
∆∆ 
catch
«« 
(
«« 
SqlException
«« #
	exceptSql
««$ -
)
««- .
{
»» 
IO
…… 
.
…… 
Logger
…… 
.
…… 
Log
…… !
(
……! "
NLog
……" &
.
……& '
LogLevel
……' /
.
……/ 0
Warn
……0 4
,
……4 5
$str
……6 V
,
……V W
	exceptSql
……X a
)
……a b
;
……b c
}
   
}
ÀÀ 
}
ÃÃ 	
}
ÕÕ 
public
œœ 

override
œœ 
void
œœ 
Good
œœ 
(
œœ 
)
œœ 
{
—— 
GoodG2B
““ 
(
““ 
)
““ 
;
““ 
GoodB2G
”” 
(
”” 
)
”” 
;
”” 
}
‘‘ 
}÷÷ 
}◊◊ ä†
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_13.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_13 F
:G H
AbstractTestCaseI Y
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
password## 
;## 
if$$ 

($$ 
IO$$ 
.$$  
STATIC_READONLY_FIVE$$ #
==$$# %
$num$$% &
)$$& '
{%% 	
password&& 
=&& 
$str&& 
;&& 
{(( 
try)) 
{** 
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
new,,/ 2
	TcpClient,,3 <
(,,< =
$str,,= O
,,,O P
$num,,Q V
),,V W
),,W X
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
password22 $
=22% &
sr22' )
.22) *
ReadLine22* 2
(222 3
)223 4
;224 5
}33 
}44 
}55 
catch66 
(66 
IOException66 "
exceptIO66# +
)66+ ,
{77 
IO88 
.88 
Logger88 
.88 
Log88 !
(88! "
NLog88" &
.88& '
LogLevel88' /
.88/ 0
Warn880 4
,884 5
$str886 Q
,88Q R
exceptIO88S [
)88[ \
;88\ ]
}99 
}:: 
};; 	
else<< 
{== 	
password@@ 
=@@ 
null@@ 
;@@ 
}AA 	
ifBB 

(BB 
IOBB 
.BB  
STATIC_READONLY_FIVEBB #
==BB# %
$numBB% &
)BB& '
{CC 	
tryDD 
{EE 
usingGG 
(GG 
SqlConnectionGG $

connectionGG% /
=GG0 1
newGG2 5
SqlConnectionGG6 C
(GGC D
$strGGD z
+GG{ |
$str	GG} Å
+
GGÇ É
$str
GGÑ ê
+
GGë í
password
GGì õ
)
GGõ ú
)
GGú ù
{HH 

connectionII 
.II 
OpenII #
(II# $
)II$ %
;II% &
usingJJ 
(JJ 

SqlCommandJJ %
commandJJ& -
=JJ. /
newJJ0 3

SqlCommandJJ4 >
(JJ> ?
$strJJ? Y
,JJY Z

connectionJJ[ e
)JJe f
)JJf g
{KK 
commandLL 
.LL  
ExecuteNonQueryLL  /
(LL/ 0
)LL0 1
;LL1 2
}MM 
}NN 
}OO 
catchPP 
(PP 
SqlExceptionPP 
	exceptSqlPP  )
)PP) *
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR 
(RR 
NLogRR "
.RR" #
LogLevelRR# +
.RR+ ,
WarnRR, 0
,RR0 1
$strRR2 R
,RRR S
	exceptSqlRRT ]
)RR] ^
;RR^ _
}SS 
}TT 	
}UU 
privateYY 
voidYY 
GoodG2B1YY 
(YY 
)YY 
{ZZ 
string[[ 
password[[ 
;[[ 
if\\ 

(\\ 
IO\\ 
.\\  
STATIC_READONLY_FIVE\\ #
!=\\# %
$num\\% &
)\\& '
{]] 	
password`` 
=`` 
null`` 
;`` 
}aa 	
elsebb 
{cc 	
passwordff 
=ff 
$strff &
;ff& '
}gg 	
ifhh 

(hh 
IOhh 
.hh  
STATIC_READONLY_FIVEhh #
==hh# %
$numhh% &
)hh& '
{ii 	
tryjj 
{kk 
usingmm 
(mm 
SqlConnectionmm $

connectionmm% /
=mm0 1
newmm2 5
SqlConnectionmm6 C
(mmC D
$strmmD z
+mm{ |
$str	mm} Å
+
mmÇ É
$str
mmÑ ê
+
mmë í
password
mmì õ
)
mmõ ú
)
mmú ù
{nn 

connectionoo 
.oo 
Openoo #
(oo# $
)oo$ %
;oo% &
usingpp 
(pp 

SqlCommandpp %
commandpp& -
=pp. /
newpp0 3

SqlCommandpp4 >
(pp> ?
$strpp? Y
,ppY Z

connectionpp[ e
)ppe f
)ppf g
{qq 
commandrr 
.rr  
ExecuteNonQueryrr  /
(rr/ 0
)rr0 1
;rr1 2
}ss 
}tt 
}uu 
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv  )
)vv) *
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
	exceptSqlxxT ]
)xx] ^
;xx^ _
}yy 
}zz 	
}{{ 
private~~ 
void~~ 
GoodG2B2~~ 
(~~ 
)~~ 
{ 
string
ÄÄ 
password
ÄÄ 
;
ÄÄ 
if
ÅÅ 

(
ÅÅ 
IO
ÅÅ 
.
ÅÅ "
STATIC_READONLY_FIVE
ÅÅ #
==
ÅÅ# %
$num
ÅÅ% &
)
ÅÅ& '
{
ÇÇ 	
password
ÖÖ 
=
ÖÖ 
$str
ÖÖ &
;
ÖÖ& '
}
ÜÜ 	
else
áá 
{
àà 	
password
ãã 
=
ãã 
null
ãã 
;
ãã 
}
åå 	
if
çç 

(
çç 
IO
çç 
.
çç "
STATIC_READONLY_FIVE
çç #
==
çç# %
$num
çç% &
)
çç& '
{
éé 	
try
èè 
{
êê 
using
íí 
(
íí 
SqlConnection
íí $

connection
íí% /
=
íí0 1
new
íí2 5
SqlConnection
íí6 C
(
ííC D
$str
ííD z
+
íí{ |
$stríí} Å
+ííÇ É
$strííÑ ê
+ííë í
passwordííì õ
)ííõ ú
)ííú ù
{
ìì 

connection
îî 
.
îî 
Open
îî #
(
îî# $
)
îî$ %
;
îî% &
using
ïï 
(
ïï 

SqlCommand
ïï %
command
ïï& -
=
ïï. /
new
ïï0 3

SqlCommand
ïï4 >
(
ïï> ?
$str
ïï? Y
,
ïïY Z

connection
ïï[ e
)
ïïe f
)
ïïf g
{
ññ 
command
óó 
.
óó  
ExecuteNonQuery
óó  /
(
óó/ 0
)
óó0 1
;
óó1 2
}
òò 
}
ôô 
}
öö 
catch
õõ 
(
õõ 
SqlException
õõ 
	exceptSql
õõ  )
)
õõ) *
{
úú 
IO
ùù 
.
ùù 
Logger
ùù 
.
ùù 
Log
ùù 
(
ùù 
NLog
ùù "
.
ùù" #
LogLevel
ùù# +
.
ùù+ ,
Warn
ùù, 0
,
ùù0 1
$str
ùù2 R
,
ùùR S
	exceptSql
ùùT ]
)
ùù] ^
;
ùù^ _
}
ûû 
}
üü 	
}
†† 
private
££ 
void
££ 
GoodB2G1
££ 
(
££ 
)
££ 
{
§§ 
string
•• 
password
•• 
;
•• 
if
¶¶ 

(
¶¶ 
IO
¶¶ 
.
¶¶ "
STATIC_READONLY_FIVE
¶¶ #
==
¶¶# %
$num
¶¶% &
)
¶¶& '
{
ßß 	
password
®® 
=
®® 
$str
®® 
;
®® 
{
™™ 
try
´´ 
{
¨¨ 
using
ÆÆ 
(
ÆÆ 
	TcpClient
ÆÆ $
tcpConn
ÆÆ% ,
=
ÆÆ- .
new
ÆÆ/ 2
	TcpClient
ÆÆ3 <
(
ÆÆ< =
$str
ÆÆ= O
,
ÆÆO P
$num
ÆÆQ V
)
ÆÆV W
)
ÆÆW X
{
ØØ 
using
±± 
(
±± 
StreamReader
±± +
sr
±±, .
=
±±/ 0
new
±±1 4
StreamReader
±±5 A
(
±±A B
tcpConn
±±B I
.
±±I J
	GetStream
±±J S
(
±±S T
)
±±T U
)
±±U V
)
±±V W
{
≤≤ 
password
¥¥ $
=
¥¥% &
sr
¥¥' )
.
¥¥) *
ReadLine
¥¥* 2
(
¥¥2 3
)
¥¥3 4
;
¥¥4 5
}
µµ 
}
∂∂ 
}
∑∑ 
catch
∏∏ 
(
∏∏ 
IOException
∏∏ "
exceptIO
∏∏# +
)
∏∏+ ,
{
ππ 
IO
∫∫ 
.
∫∫ 
Logger
∫∫ 
.
∫∫ 
Log
∫∫ !
(
∫∫! "
NLog
∫∫" &
.
∫∫& '
LogLevel
∫∫' /
.
∫∫/ 0
Warn
∫∫0 4
,
∫∫4 5
$str
∫∫6 Q
,
∫∫Q R
exceptIO
∫∫S [
)
∫∫[ \
;
∫∫\ ]
}
ªª 
}
ºº 
}
ΩΩ 	
else
ææ 
{
øø 	
password
¬¬ 
=
¬¬ 
null
¬¬ 
;
¬¬ 
}
√√ 	
if
ƒƒ 

(
ƒƒ 
IO
ƒƒ 
.
ƒƒ "
STATIC_READONLY_FIVE
ƒƒ #
!=
ƒƒ# %
$num
ƒƒ% &
)
ƒƒ& '
{
≈≈ 	
IO
«« 
.
«« 
	WriteLine
«« 
(
«« 
$str
«« /
)
««/ 0
;
««0 1
}
»» 	
else
…… 
{
   	
if
ÀÀ 
(
ÀÀ 
password
ÀÀ 
!=
ÀÀ 
null
ÀÀ  
)
ÀÀ  !
{
ÃÃ 
{
ŒŒ 
using
œœ 
(
œœ &
AesCryptoServiceProvider
œœ 3
aesAlg
œœ4 :
=
œœ; <
new
œœ= @&
AesCryptoServiceProvider
œœA Y
(
œœY Z
)
œœZ [
)
œœ[ \
{
–– 
aesAlg
—— 
.
—— 
Padding
—— &
=
——' (
PaddingMode
——) 4
.
——4 5
None
——5 9
;
——9 :
aesAlg
““ 
.
““ 
Key
““ "
=
““# $
Encoding
““% -
.
““- .
UTF8
““. 2
.
““2 3
GetBytes
““3 ;
(
““; <
$str
““< N
)
““N O
;
““O P
ICryptoTransform
‘‘ (
	decryptor
‘‘) 2
=
‘‘3 4
aesAlg
‘‘5 ;
.
‘‘; <
CreateDecryptor
‘‘< K
(
‘‘K L
aesAlg
‘‘L R
.
‘‘R S
Key
‘‘S V
,
‘‘V W
aesAlg
‘‘X ^
.
‘‘^ _
IV
‘‘_ a
)
‘‘a b
;
‘‘b c
using
÷÷ 
(
÷÷ 
MemoryStream
÷÷ +
	msDecrypt
÷÷, 5
=
÷÷6 7
new
÷÷8 ;
MemoryStream
÷÷< H
(
÷÷H I
Encoding
÷÷I Q
.
÷÷Q R
UTF8
÷÷R V
.
÷÷V W
GetBytes
÷÷W _
(
÷÷_ `
password
÷÷` h
)
÷÷h i
)
÷÷i j
)
÷÷j k
{
◊◊ 
using
ÿÿ !
(
ÿÿ" #
CryptoStream
ÿÿ# /
	csDecrypt
ÿÿ0 9
=
ÿÿ: ;
new
ÿÿ< ?
CryptoStream
ÿÿ@ L
(
ÿÿL M
	msDecrypt
ÿÿM V
,
ÿÿV W
	decryptor
ÿÿX a
,
ÿÿa b
CryptoStreamMode
ÿÿc s
.
ÿÿs t
Read
ÿÿt x
)
ÿÿx y
)
ÿÿy z
{
ŸŸ 
using
⁄⁄  %
(
⁄⁄& '
StreamReader
⁄⁄' 3
	srDecrypt
⁄⁄4 =
=
⁄⁄> ?
new
⁄⁄@ C
StreamReader
⁄⁄D P
(
⁄⁄P Q
	csDecrypt
⁄⁄Q Z
)
⁄⁄Z [
)
⁄⁄[ \
{
€€  !
password
ﬁﬁ$ ,
=
ﬁﬁ- .
	srDecrypt
ﬁﬁ/ 8
.
ﬁﬁ8 9
	ReadToEnd
ﬁﬁ9 B
(
ﬁﬁB C
)
ﬁﬁC D
;
ﬁﬁD E
}
ﬂﬂ  !
}
‡‡ 
}
·· 
}
‚‚ 
}
„„ 
try
‰‰ 
{
ÂÂ 
using
ÁÁ 
(
ÁÁ 
SqlConnection
ÁÁ (

connection
ÁÁ) 3
=
ÁÁ4 5
new
ÁÁ6 9
SqlConnection
ÁÁ: G
(
ÁÁG H
$str
ÁÁH ~
+ÁÁ Ä
$strÁÁÅ Ö
+ÁÁÜ á
$strÁÁà î
+ÁÁï ñ
passwordÁÁó ü
)ÁÁü †
)ÁÁ† °
{
ËË 

connection
ÈÈ "
.
ÈÈ" #
Open
ÈÈ# '
(
ÈÈ' (
)
ÈÈ( )
;
ÈÈ) *
using
ÍÍ 
(
ÍÍ 

SqlCommand
ÍÍ )
command
ÍÍ* 1
=
ÍÍ2 3
new
ÍÍ4 7

SqlCommand
ÍÍ8 B
(
ÍÍB C
$str
ÍÍC ]
,
ÍÍ] ^

connection
ÍÍ_ i
)
ÍÍi j
)
ÍÍj k
{
ÎÎ 
command
ÏÏ #
.
ÏÏ# $
ExecuteNonQuery
ÏÏ$ 3
(
ÏÏ3 4
)
ÏÏ4 5
;
ÏÏ5 6
}
ÌÌ 
}
ÓÓ 
}
ÔÔ 
catch
 
(
 
SqlException
 #
	exceptSql
$ -
)
- .
{
ÒÒ 
IO
ÚÚ 
.
ÚÚ 
Logger
ÚÚ 
.
ÚÚ 
Log
ÚÚ !
(
ÚÚ! "
NLog
ÚÚ" &
.
ÚÚ& '
LogLevel
ÚÚ' /
.
ÚÚ/ 0
Warn
ÚÚ0 4
,
ÚÚ4 5
$str
ÚÚ6 V
,
ÚÚV W
	exceptSql
ÚÚX a
)
ÚÚa b
;
ÚÚb c
}
ÛÛ 
}
ÙÙ 
}
ıı 	
}
ˆˆ 
private
˘˘ 
void
˘˘ 
GoodB2G2
˘˘ 
(
˘˘ 
)
˘˘ 
{
˙˙ 
string
˚˚ 
password
˚˚ 
;
˚˚ 
if
¸¸ 

(
¸¸ 
IO
¸¸ 
.
¸¸ "
STATIC_READONLY_FIVE
¸¸ #
==
¸¸# %
$num
¸¸% &
)
¸¸& '
{
˝˝ 	
password
˛˛ 
=
˛˛ 
$str
˛˛ 
;
˛˛ 
{
ÄÄ 
try
ÅÅ 
{
ÇÇ 
using
ÑÑ 
(
ÑÑ 
	TcpClient
ÑÑ $
tcpConn
ÑÑ% ,
=
ÑÑ- .
new
ÑÑ/ 2
	TcpClient
ÑÑ3 <
(
ÑÑ< =
$str
ÑÑ= O
,
ÑÑO P
$num
ÑÑQ V
)
ÑÑV W
)
ÑÑW X
{
ÖÖ 
using
áá 
(
áá 
StreamReader
áá +
sr
áá, .
=
áá/ 0
new
áá1 4
StreamReader
áá5 A
(
ááA B
tcpConn
ááB I
.
ááI J
	GetStream
ááJ S
(
ááS T
)
ááT U
)
ááU V
)
ááV W
{
àà 
password
ää $
=
ää% &
sr
ää' )
.
ää) *
ReadLine
ää* 2
(
ää2 3
)
ää3 4
;
ää4 5
}
ãã 
}
åå 
}
çç 
catch
éé 
(
éé 
IOException
éé "
exceptIO
éé# +
)
éé+ ,
{
èè 
IO
êê 
.
êê 
Logger
êê 
.
êê 
Log
êê !
(
êê! "
NLog
êê" &
.
êê& '
LogLevel
êê' /
.
êê/ 0
Warn
êê0 4
,
êê4 5
$str
êê6 Q
,
êêQ R
exceptIO
êêS [
)
êê[ \
;
êê\ ]
}
ëë 
}
íí 
}
ìì 	
else
îî 
{
ïï 	
password
òò 
=
òò 
null
òò 
;
òò 
}
ôô 	
if
öö 

(
öö 
IO
öö 
.
öö "
STATIC_READONLY_FIVE
öö #
==
öö# %
$num
öö% &
)
öö& '
{
õõ 	
if
úú 
(
úú 
password
úú 
!=
úú 
null
úú  
)
úú  !
{
ùù 
{
üü 
using
†† 
(
†† &
AesCryptoServiceProvider
†† 3
aesAlg
††4 :
=
††; <
new
††= @&
AesCryptoServiceProvider
††A Y
(
††Y Z
)
††Z [
)
††[ \
{
°° 
aesAlg
¢¢ 
.
¢¢ 
Padding
¢¢ &
=
¢¢' (
PaddingMode
¢¢) 4
.
¢¢4 5
None
¢¢5 9
;
¢¢9 :
aesAlg
££ 
.
££ 
Key
££ "
=
££# $
Encoding
££% -
.
££- .
UTF8
££. 2
.
££2 3
GetBytes
££3 ;
(
££; <
$str
££< N
)
££N O
;
££O P
ICryptoTransform
•• (
	decryptor
••) 2
=
••3 4
aesAlg
••5 ;
.
••; <
CreateDecryptor
••< K
(
••K L
aesAlg
••L R
.
••R S
Key
••S V
,
••V W
aesAlg
••X ^
.
••^ _
IV
••_ a
)
••a b
;
••b c
using
ßß 
(
ßß 
MemoryStream
ßß +
	msDecrypt
ßß, 5
=
ßß6 7
new
ßß8 ;
MemoryStream
ßß< H
(
ßßH I
Encoding
ßßI Q
.
ßßQ R
UTF8
ßßR V
.
ßßV W
GetBytes
ßßW _
(
ßß_ `
password
ßß` h
)
ßßh i
)
ßßi j
)
ßßj k
{
®® 
using
©© !
(
©©" #
CryptoStream
©©# /
	csDecrypt
©©0 9
=
©©: ;
new
©©< ?
CryptoStream
©©@ L
(
©©L M
	msDecrypt
©©M V
,
©©V W
	decryptor
©©X a
,
©©a b
CryptoStreamMode
©©c s
.
©©s t
Read
©©t x
)
©©x y
)
©©y z
{
™™ 
using
´´  %
(
´´& '
StreamReader
´´' 3
	srDecrypt
´´4 =
=
´´> ?
new
´´@ C
StreamReader
´´D P
(
´´P Q
	csDecrypt
´´Q Z
)
´´Z [
)
´´[ \
{
¨¨  !
password
ØØ$ ,
=
ØØ- .
	srDecrypt
ØØ/ 8
.
ØØ8 9
	ReadToEnd
ØØ9 B
(
ØØB C
)
ØØC D
;
ØØD E
}
∞∞  !
}
±± 
}
≤≤ 
}
≥≥ 
}
¥¥ 
try
µµ 
{
∂∂ 
using
∏∏ 
(
∏∏ 
SqlConnection
∏∏ (

connection
∏∏) 3
=
∏∏4 5
new
∏∏6 9
SqlConnection
∏∏: G
(
∏∏G H
$str
∏∏H ~
+∏∏ Ä
$str∏∏Å Ö
+∏∏Ü á
$str∏∏à î
+∏∏ï ñ
password∏∏ó ü
)∏∏ü †
)∏∏† °
{
ππ 

connection
∫∫ "
.
∫∫" #
Open
∫∫# '
(
∫∫' (
)
∫∫( )
;
∫∫) *
using
ªª 
(
ªª 

SqlCommand
ªª )
command
ªª* 1
=
ªª2 3
new
ªª4 7

SqlCommand
ªª8 B
(
ªªB C
$str
ªªC ]
,
ªª] ^

connection
ªª_ i
)
ªªi j
)
ªªj k
{
ºº 
command
ΩΩ #
.
ΩΩ# $
ExecuteNonQuery
ΩΩ$ 3
(
ΩΩ3 4
)
ΩΩ4 5
;
ΩΩ5 6
}
ææ 
}
øø 
}
¿¿ 
catch
¡¡ 
(
¡¡ 
SqlException
¡¡ #
	exceptSql
¡¡$ -
)
¡¡- .
{
¬¬ 
IO
√√ 
.
√√ 
Logger
√√ 
.
√√ 
Log
√√ !
(
√√! "
NLog
√√" &
.
√√& '
LogLevel
√√' /
.
√√/ 0
Warn
√√0 4
,
√√4 5
$str
√√6 V
,
√√V W
	exceptSql
√√X a
)
√√a b
;
√√b c
}
ƒƒ 
}
≈≈ 
}
∆∆ 	
}
«« 
public
…… 

override
…… 
void
…… 
Good
…… 
(
…… 
)
…… 
{
   
GoodG2B1
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
GoodG2B2
ÃÃ 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ 
GoodB2G1
ÕÕ 
(
ÕÕ 
)
ÕÕ 
;
ÕÕ 
GoodB2G2
ŒŒ 
(
ŒŒ 
)
ŒŒ 
;
ŒŒ 
}
œœ 
}—— 
}““ ¶ü
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_14.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_14 F
:G H
AbstractTestCaseI Y
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
password## 
;## 
if$$ 

($$ 
IO$$ 
.$$ 

staticFive$$ 
==$$ 
$num$$ 
)$$ 
{%% 	
password&& 
=&& 
$str&& 
;&& 
{(( 
try)) 
{** 
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
new,,/ 2
	TcpClient,,3 <
(,,< =
$str,,= O
,,,O P
$num,,Q V
),,V W
),,W X
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
password22 $
=22% &
sr22' )
.22) *
ReadLine22* 2
(222 3
)223 4
;224 5
}33 
}44 
}55 
catch66 
(66 
IOException66 "
exceptIO66# +
)66+ ,
{77 
IO88 
.88 
Logger88 
.88 
Log88 !
(88! "
NLog88" &
.88& '
LogLevel88' /
.88/ 0
Warn880 4
,884 5
$str886 Q
,88Q R
exceptIO88S [
)88[ \
;88\ ]
}99 
}:: 
};; 	
else<< 
{== 	
password@@ 
=@@ 
null@@ 
;@@ 
}AA 	
ifBB 

(BB 
IOBB 
.BB 

staticFiveBB 
==BB 
$numBB 
)BB 
{CC 	
tryDD 
{EE 
usingGG 
(GG 
SqlConnectionGG $

connectionGG% /
=GG0 1
newGG2 5
SqlConnectionGG6 C
(GGC D
$strGGD z
+GG{ |
$str	GG} Å
+
GGÇ É
$str
GGÑ ê
+
GGë í
password
GGì õ
)
GGõ ú
)
GGú ù
{HH 

connectionII 
.II 
OpenII #
(II# $
)II$ %
;II% &
usingJJ 
(JJ 

SqlCommandJJ %
commandJJ& -
=JJ. /
newJJ0 3

SqlCommandJJ4 >
(JJ> ?
$strJJ? Y
,JJY Z

connectionJJ[ e
)JJe f
)JJf g
{KK 
commandLL 
.LL  
ExecuteNonQueryLL  /
(LL/ 0
)LL0 1
;LL1 2
}MM 
}NN 
}OO 
catchPP 
(PP 
SqlExceptionPP 
	exceptSqlPP  )
)PP) *
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR 
(RR 
NLogRR "
.RR" #
LogLevelRR# +
.RR+ ,
WarnRR, 0
,RR0 1
$strRR2 R
,RRR S
	exceptSqlRRT ]
)RR] ^
;RR^ _
}SS 
}TT 	
}UU 
privateYY 
voidYY 
GoodG2B1YY 
(YY 
)YY 
{ZZ 
string[[ 
password[[ 
;[[ 
if\\ 

(\\ 
IO\\ 
.\\ 

staticFive\\ 
!=\\ 
$num\\ 
)\\ 
{]] 	
password`` 
=`` 
null`` 
;`` 
}aa 	
elsebb 
{cc 	
passwordff 
=ff 
$strff &
;ff& '
}gg 	
ifhh 

(hh 
IOhh 
.hh 

staticFivehh 
==hh 
$numhh 
)hh 
{ii 	
tryjj 
{kk 
usingmm 
(mm 
SqlConnectionmm $

connectionmm% /
=mm0 1
newmm2 5
SqlConnectionmm6 C
(mmC D
$strmmD z
+mm{ |
$str	mm} Å
+
mmÇ É
$str
mmÑ ê
+
mmë í
password
mmì õ
)
mmõ ú
)
mmú ù
{nn 

connectionoo 
.oo 
Openoo #
(oo# $
)oo$ %
;oo% &
usingpp 
(pp 

SqlCommandpp %
commandpp& -
=pp. /
newpp0 3

SqlCommandpp4 >
(pp> ?
$strpp? Y
,ppY Z

connectionpp[ e
)ppe f
)ppf g
{qq 
commandrr 
.rr  
ExecuteNonQueryrr  /
(rr/ 0
)rr0 1
;rr1 2
}ss 
}tt 
}uu 
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv  )
)vv) *
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
	exceptSqlxxT ]
)xx] ^
;xx^ _
}yy 
}zz 	
}{{ 
private~~ 
void~~ 
GoodG2B2~~ 
(~~ 
)~~ 
{ 
string
ÄÄ 
password
ÄÄ 
;
ÄÄ 
if
ÅÅ 

(
ÅÅ 
IO
ÅÅ 
.
ÅÅ 

staticFive
ÅÅ 
==
ÅÅ 
$num
ÅÅ 
)
ÅÅ 
{
ÇÇ 	
password
ÖÖ 
=
ÖÖ 
$str
ÖÖ &
;
ÖÖ& '
}
ÜÜ 	
else
áá 
{
àà 	
password
ãã 
=
ãã 
null
ãã 
;
ãã 
}
åå 	
if
çç 

(
çç 
IO
çç 
.
çç 

staticFive
çç 
==
çç 
$num
çç 
)
çç 
{
éé 	
try
èè 
{
êê 
using
íí 
(
íí 
SqlConnection
íí $

connection
íí% /
=
íí0 1
new
íí2 5
SqlConnection
íí6 C
(
ííC D
$str
ííD z
+
íí{ |
$stríí} Å
+ííÇ É
$strííÑ ê
+ííë í
passwordííì õ
)ííõ ú
)ííú ù
{
ìì 

connection
îî 
.
îî 
Open
îî #
(
îî# $
)
îî$ %
;
îî% &
using
ïï 
(
ïï 

SqlCommand
ïï %
command
ïï& -
=
ïï. /
new
ïï0 3

SqlCommand
ïï4 >
(
ïï> ?
$str
ïï? Y
,
ïïY Z

connection
ïï[ e
)
ïïe f
)
ïïf g
{
ññ 
command
óó 
.
óó  
ExecuteNonQuery
óó  /
(
óó/ 0
)
óó0 1
;
óó1 2
}
òò 
}
ôô 
}
öö 
catch
õõ 
(
õõ 
SqlException
õõ 
	exceptSql
õõ  )
)
õõ) *
{
úú 
IO
ùù 
.
ùù 
Logger
ùù 
.
ùù 
Log
ùù 
(
ùù 
NLog
ùù "
.
ùù" #
LogLevel
ùù# +
.
ùù+ ,
Warn
ùù, 0
,
ùù0 1
$str
ùù2 R
,
ùùR S
	exceptSql
ùùT ]
)
ùù] ^
;
ùù^ _
}
ûû 
}
üü 	
}
†† 
private
££ 
void
££ 
GoodB2G1
££ 
(
££ 
)
££ 
{
§§ 
string
•• 
password
•• 
;
•• 
if
¶¶ 

(
¶¶ 
IO
¶¶ 
.
¶¶ 

staticFive
¶¶ 
==
¶¶ 
$num
¶¶ 
)
¶¶ 
{
ßß 	
password
®® 
=
®® 
$str
®® 
;
®® 
{
™™ 
try
´´ 
{
¨¨ 
using
ÆÆ 
(
ÆÆ 
	TcpClient
ÆÆ $
tcpConn
ÆÆ% ,
=
ÆÆ- .
new
ÆÆ/ 2
	TcpClient
ÆÆ3 <
(
ÆÆ< =
$str
ÆÆ= O
,
ÆÆO P
$num
ÆÆQ V
)
ÆÆV W
)
ÆÆW X
{
ØØ 
using
±± 
(
±± 
StreamReader
±± +
sr
±±, .
=
±±/ 0
new
±±1 4
StreamReader
±±5 A
(
±±A B
tcpConn
±±B I
.
±±I J
	GetStream
±±J S
(
±±S T
)
±±T U
)
±±U V
)
±±V W
{
≤≤ 
password
¥¥ $
=
¥¥% &
sr
¥¥' )
.
¥¥) *
ReadLine
¥¥* 2
(
¥¥2 3
)
¥¥3 4
;
¥¥4 5
}
µµ 
}
∂∂ 
}
∑∑ 
catch
∏∏ 
(
∏∏ 
IOException
∏∏ "
exceptIO
∏∏# +
)
∏∏+ ,
{
ππ 
IO
∫∫ 
.
∫∫ 
Logger
∫∫ 
.
∫∫ 
Log
∫∫ !
(
∫∫! "
NLog
∫∫" &
.
∫∫& '
LogLevel
∫∫' /
.
∫∫/ 0
Warn
∫∫0 4
,
∫∫4 5
$str
∫∫6 Q
,
∫∫Q R
exceptIO
∫∫S [
)
∫∫[ \
;
∫∫\ ]
}
ªª 
}
ºº 
}
ΩΩ 	
else
ææ 
{
øø 	
password
¬¬ 
=
¬¬ 
null
¬¬ 
;
¬¬ 
}
√√ 	
if
ƒƒ 

(
ƒƒ 
IO
ƒƒ 
.
ƒƒ 

staticFive
ƒƒ 
!=
ƒƒ 
$num
ƒƒ 
)
ƒƒ 
{
≈≈ 	
IO
«« 
.
«« 
	WriteLine
«« 
(
«« 
$str
«« /
)
««/ 0
;
««0 1
}
»» 	
else
…… 
{
   	
if
ÀÀ 
(
ÀÀ 
password
ÀÀ 
!=
ÀÀ 
null
ÀÀ  
)
ÀÀ  !
{
ÃÃ 
{
ŒŒ 
using
œœ 
(
œœ &
AesCryptoServiceProvider
œœ 3
aesAlg
œœ4 :
=
œœ; <
new
œœ= @&
AesCryptoServiceProvider
œœA Y
(
œœY Z
)
œœZ [
)
œœ[ \
{
–– 
aesAlg
—— 
.
—— 
Padding
—— &
=
——' (
PaddingMode
——) 4
.
——4 5
None
——5 9
;
——9 :
aesAlg
““ 
.
““ 
Key
““ "
=
““# $
Encoding
““% -
.
““- .
UTF8
““. 2
.
““2 3
GetBytes
““3 ;
(
““; <
$str
““< N
)
““N O
;
““O P
ICryptoTransform
‘‘ (
	decryptor
‘‘) 2
=
‘‘3 4
aesAlg
‘‘5 ;
.
‘‘; <
CreateDecryptor
‘‘< K
(
‘‘K L
aesAlg
‘‘L R
.
‘‘R S
Key
‘‘S V
,
‘‘V W
aesAlg
‘‘X ^
.
‘‘^ _
IV
‘‘_ a
)
‘‘a b
;
‘‘b c
using
÷÷ 
(
÷÷ 
MemoryStream
÷÷ +
	msDecrypt
÷÷, 5
=
÷÷6 7
new
÷÷8 ;
MemoryStream
÷÷< H
(
÷÷H I
Encoding
÷÷I Q
.
÷÷Q R
UTF8
÷÷R V
.
÷÷V W
GetBytes
÷÷W _
(
÷÷_ `
password
÷÷` h
)
÷÷h i
)
÷÷i j
)
÷÷j k
{
◊◊ 
using
ÿÿ !
(
ÿÿ" #
CryptoStream
ÿÿ# /
	csDecrypt
ÿÿ0 9
=
ÿÿ: ;
new
ÿÿ< ?
CryptoStream
ÿÿ@ L
(
ÿÿL M
	msDecrypt
ÿÿM V
,
ÿÿV W
	decryptor
ÿÿX a
,
ÿÿa b
CryptoStreamMode
ÿÿc s
.
ÿÿs t
Read
ÿÿt x
)
ÿÿx y
)
ÿÿy z
{
ŸŸ 
using
⁄⁄  %
(
⁄⁄& '
StreamReader
⁄⁄' 3
	srDecrypt
⁄⁄4 =
=
⁄⁄> ?
new
⁄⁄@ C
StreamReader
⁄⁄D P
(
⁄⁄P Q
	csDecrypt
⁄⁄Q Z
)
⁄⁄Z [
)
⁄⁄[ \
{
€€  !
password
ﬁﬁ$ ,
=
ﬁﬁ- .
	srDecrypt
ﬁﬁ/ 8
.
ﬁﬁ8 9
	ReadToEnd
ﬁﬁ9 B
(
ﬁﬁB C
)
ﬁﬁC D
;
ﬁﬁD E
}
ﬂﬂ  !
}
‡‡ 
}
·· 
}
‚‚ 
}
„„ 
try
‰‰ 
{
ÂÂ 
using
ÁÁ 
(
ÁÁ 
SqlConnection
ÁÁ (

connection
ÁÁ) 3
=
ÁÁ4 5
new
ÁÁ6 9
SqlConnection
ÁÁ: G
(
ÁÁG H
$str
ÁÁH ~
+ÁÁ Ä
$strÁÁÅ Ö
+ÁÁÜ á
$strÁÁà î
+ÁÁï ñ
passwordÁÁó ü
)ÁÁü †
)ÁÁ† °
{
ËË 

connection
ÈÈ "
.
ÈÈ" #
Open
ÈÈ# '
(
ÈÈ' (
)
ÈÈ( )
;
ÈÈ) *
using
ÍÍ 
(
ÍÍ 

SqlCommand
ÍÍ )
command
ÍÍ* 1
=
ÍÍ2 3
new
ÍÍ4 7

SqlCommand
ÍÍ8 B
(
ÍÍB C
$str
ÍÍC ]
,
ÍÍ] ^

connection
ÍÍ_ i
)
ÍÍi j
)
ÍÍj k
{
ÎÎ 
command
ÏÏ #
.
ÏÏ# $
ExecuteNonQuery
ÏÏ$ 3
(
ÏÏ3 4
)
ÏÏ4 5
;
ÏÏ5 6
}
ÌÌ 
}
ÓÓ 
}
ÔÔ 
catch
 
(
 
SqlException
 #
	exceptSql
$ -
)
- .
{
ÒÒ 
IO
ÚÚ 
.
ÚÚ 
Logger
ÚÚ 
.
ÚÚ 
Log
ÚÚ !
(
ÚÚ! "
NLog
ÚÚ" &
.
ÚÚ& '
LogLevel
ÚÚ' /
.
ÚÚ/ 0
Warn
ÚÚ0 4
,
ÚÚ4 5
$str
ÚÚ6 V
,
ÚÚV W
	exceptSql
ÚÚX a
)
ÚÚa b
;
ÚÚb c
}
ÛÛ 
}
ÙÙ 
}
ıı 	
}
ˆˆ 
private
˘˘ 
void
˘˘ 
GoodB2G2
˘˘ 
(
˘˘ 
)
˘˘ 
{
˙˙ 
string
˚˚ 
password
˚˚ 
;
˚˚ 
if
¸¸ 

(
¸¸ 
IO
¸¸ 
.
¸¸ 

staticFive
¸¸ 
==
¸¸ 
$num
¸¸ 
)
¸¸ 
{
˝˝ 	
password
˛˛ 
=
˛˛ 
$str
˛˛ 
;
˛˛ 
{
ÄÄ 
try
ÅÅ 
{
ÇÇ 
using
ÑÑ 
(
ÑÑ 
	TcpClient
ÑÑ $
tcpConn
ÑÑ% ,
=
ÑÑ- .
new
ÑÑ/ 2
	TcpClient
ÑÑ3 <
(
ÑÑ< =
$str
ÑÑ= O
,
ÑÑO P
$num
ÑÑQ V
)
ÑÑV W
)
ÑÑW X
{
ÖÖ 
using
áá 
(
áá 
StreamReader
áá +
sr
áá, .
=
áá/ 0
new
áá1 4
StreamReader
áá5 A
(
ááA B
tcpConn
ááB I
.
ááI J
	GetStream
ááJ S
(
ááS T
)
ááT U
)
ááU V
)
ááV W
{
àà 
password
ää $
=
ää% &
sr
ää' )
.
ää) *
ReadLine
ää* 2
(
ää2 3
)
ää3 4
;
ää4 5
}
ãã 
}
åå 
}
çç 
catch
éé 
(
éé 
IOException
éé "
exceptIO
éé# +
)
éé+ ,
{
èè 
IO
êê 
.
êê 
Logger
êê 
.
êê 
Log
êê !
(
êê! "
NLog
êê" &
.
êê& '
LogLevel
êê' /
.
êê/ 0
Warn
êê0 4
,
êê4 5
$str
êê6 Q
,
êêQ R
exceptIO
êêS [
)
êê[ \
;
êê\ ]
}
ëë 
}
íí 
}
ìì 	
else
îî 
{
ïï 	
password
òò 
=
òò 
null
òò 
;
òò 
}
ôô 	
if
öö 

(
öö 
IO
öö 
.
öö 

staticFive
öö 
==
öö 
$num
öö 
)
öö 
{
õõ 	
if
úú 
(
úú 
password
úú 
!=
úú 
null
úú  
)
úú  !
{
ùù 
{
üü 
using
†† 
(
†† &
AesCryptoServiceProvider
†† 3
aesAlg
††4 :
=
††; <
new
††= @&
AesCryptoServiceProvider
††A Y
(
††Y Z
)
††Z [
)
††[ \
{
°° 
aesAlg
¢¢ 
.
¢¢ 
Padding
¢¢ &
=
¢¢' (
PaddingMode
¢¢) 4
.
¢¢4 5
None
¢¢5 9
;
¢¢9 :
aesAlg
££ 
.
££ 
Key
££ "
=
££# $
Encoding
££% -
.
££- .
UTF8
££. 2
.
££2 3
GetBytes
££3 ;
(
££; <
$str
££< N
)
££N O
;
££O P
ICryptoTransform
•• (
	decryptor
••) 2
=
••3 4
aesAlg
••5 ;
.
••; <
CreateDecryptor
••< K
(
••K L
aesAlg
••L R
.
••R S
Key
••S V
,
••V W
aesAlg
••X ^
.
••^ _
IV
••_ a
)
••a b
;
••b c
using
ßß 
(
ßß 
MemoryStream
ßß +
	msDecrypt
ßß, 5
=
ßß6 7
new
ßß8 ;
MemoryStream
ßß< H
(
ßßH I
Encoding
ßßI Q
.
ßßQ R
UTF8
ßßR V
.
ßßV W
GetBytes
ßßW _
(
ßß_ `
password
ßß` h
)
ßßh i
)
ßßi j
)
ßßj k
{
®® 
using
©© !
(
©©" #
CryptoStream
©©# /
	csDecrypt
©©0 9
=
©©: ;
new
©©< ?
CryptoStream
©©@ L
(
©©L M
	msDecrypt
©©M V
,
©©V W
	decryptor
©©X a
,
©©a b
CryptoStreamMode
©©c s
.
©©s t
Read
©©t x
)
©©x y
)
©©y z
{
™™ 
using
´´  %
(
´´& '
StreamReader
´´' 3
	srDecrypt
´´4 =
=
´´> ?
new
´´@ C
StreamReader
´´D P
(
´´P Q
	csDecrypt
´´Q Z
)
´´Z [
)
´´[ \
{
¨¨  !
password
ØØ$ ,
=
ØØ- .
	srDecrypt
ØØ/ 8
.
ØØ8 9
	ReadToEnd
ØØ9 B
(
ØØB C
)
ØØC D
;
ØØD E
}
∞∞  !
}
±± 
}
≤≤ 
}
≥≥ 
}
¥¥ 
try
µµ 
{
∂∂ 
using
∏∏ 
(
∏∏ 
SqlConnection
∏∏ (

connection
∏∏) 3
=
∏∏4 5
new
∏∏6 9
SqlConnection
∏∏: G
(
∏∏G H
$str
∏∏H ~
+∏∏ Ä
$str∏∏Å Ö
+∏∏Ü á
$str∏∏à î
+∏∏ï ñ
password∏∏ó ü
)∏∏ü †
)∏∏† °
{
ππ 

connection
∫∫ "
.
∫∫" #
Open
∫∫# '
(
∫∫' (
)
∫∫( )
;
∫∫) *
using
ªª 
(
ªª 

SqlCommand
ªª )
command
ªª* 1
=
ªª2 3
new
ªª4 7

SqlCommand
ªª8 B
(
ªªB C
$str
ªªC ]
,
ªª] ^

connection
ªª_ i
)
ªªi j
)
ªªj k
{
ºº 
command
ΩΩ #
.
ΩΩ# $
ExecuteNonQuery
ΩΩ$ 3
(
ΩΩ3 4
)
ΩΩ4 5
;
ΩΩ5 6
}
ææ 
}
øø 
}
¿¿ 
catch
¡¡ 
(
¡¡ 
SqlException
¡¡ #
	exceptSql
¡¡$ -
)
¡¡- .
{
¬¬ 
IO
√√ 
.
√√ 
Logger
√√ 
.
√√ 
Log
√√ !
(
√√! "
NLog
√√" &
.
√√& '
LogLevel
√√' /
.
√√/ 0
Warn
√√0 4
,
√√4 5
$str
√√6 V
,
√√V W
	exceptSql
√√X a
)
√√a b
;
√√b c
}
ƒƒ 
}
≈≈ 
}
∆∆ 	
}
«« 
public
…… 

override
…… 
void
…… 
Good
…… 
(
…… 
)
…… 
{
   
GoodG2B1
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
GoodG2B2
ÃÃ 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ 
GoodB2G1
ÕÕ 
(
ÕÕ 
)
ÕÕ 
;
ÕÕ 
GoodB2G2
ŒŒ 
(
ŒŒ 
)
ŒŒ 
;
ŒŒ 
}
œœ 
}—— 
}““ ⁄®
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_15.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_15 F
:G H
AbstractTestCaseI Y
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
password## 
;## 
switch$$ 
($$ 
$num$$ 
)$$ 
{%% 	
case&& 
$num&& 
:&& 
password'' 
='' 
$str'' 
;'' 
{)) 
try** 
{++ 
using-- 
(-- 
	TcpClient-- $
tcpConn--% ,
=--- .
new--/ 2
	TcpClient--3 <
(--< =
$str--= O
,--O P
$num--Q V
)--V W
)--W X
{.. 
using00 
(00 
StreamReader00 +
sr00, .
=00/ 0
new001 4
StreamReader005 A
(00A B
tcpConn00B I
.00I J
	GetStream00J S
(00S T
)00T U
)00U V
)00V W
{11 
password33 $
=33% &
sr33' )
.33) *
ReadLine33* 2
(332 3
)333 4
;334 5
}44 
}55 
}66 
catch77 
(77 
IOException77 "
exceptIO77# +
)77+ ,
{88 
IO99 
.99 
Logger99 
.99 
Log99 !
(99! "
NLog99" &
.99& '
LogLevel99' /
.99/ 0
Warn990 4
,994 5
$str996 Q
,99Q R
exceptIO99S [
)99[ \
;99\ ]
}:: 
};; 
break<< 
;<< 
default== 
:== 
password@@ 
=@@ 
null@@ 
;@@ 
breakAA 
;AA 
}BB 	
switchCC 
(CC 
$numCC 
)CC 
{DD 	
caseEE 
$numEE 
:EE 
tryFF 
{GG 
usingII 
(II 
SqlConnectionII $

connectionII% /
=II0 1
newII2 5
SqlConnectionII6 C
(IIC D
$strIID z
+II{ |
$str	II} Å
+
IIÇ É
$str
IIÑ ê
+
IIë í
password
IIì õ
)
IIõ ú
)
IIú ù
{JJ 

connectionKK 
.KK 
OpenKK #
(KK# $
)KK$ %
;KK% &
usingLL 
(LL 

SqlCommandLL %
commandLL& -
=LL. /
newLL0 3

SqlCommandLL4 >
(LL> ?
$strLL? Y
,LLY Z

connectionLL[ e
)LLe f
)LLf g
{MM 
commandNN 
.NN  
ExecuteNonQueryNN  /
(NN/ 0
)NN0 1
;NN1 2
}OO 
}PP 
}QQ 
catchRR 
(RR 
SqlExceptionRR 
	exceptSqlRR  )
)RR) *
{SS 
IOTT 
.TT 
LoggerTT 
.TT 
LogTT 
(TT 
NLogTT "
.TT" #
LogLevelTT# +
.TT+ ,
WarnTT, 0
,TT0 1
$strTT2 R
,TTR S
	exceptSqlTTT ]
)TT] ^
;TT^ _
}UU 
breakVV 
;VV 
defaultWW 
:WW 
IOYY 
.YY 
	WriteLineYY 
(YY 
$strYY /
)YY/ 0
;YY0 1
breakZZ 
;ZZ 
}[[ 	
}\\ 
private`` 
void`` 
GoodG2B1`` 
(`` 
)`` 
{aa 
stringbb 
passwordbb 
;bb 
switchcc 
(cc 
$numcc 
)cc 
{dd 	
caseee 
$numee 
:ee 
passwordhh 
=hh 
nullhh 
;hh 
breakii 
;ii 
defaultjj 
:jj 
passwordmm 
=mm 
$strmm &
;mm& '
breaknn 
;nn 
}oo 	
switchpp 
(pp 
$numpp 
)pp 
{qq 	
caserr 
$numrr 
:rr 
tryss 
{tt 
usingvv 
(vv 
SqlConnectionvv $

connectionvv% /
=vv0 1
newvv2 5
SqlConnectionvv6 C
(vvC D
$strvvD z
+vv{ |
$str	vv} Å
+
vvÇ É
$str
vvÑ ê
+
vvë í
password
vvì õ
)
vvõ ú
)
vvú ù
{ww 

connectionxx 
.xx 
Openxx #
(xx# $
)xx$ %
;xx% &
usingyy 
(yy 

SqlCommandyy %
commandyy& -
=yy. /
newyy0 3

SqlCommandyy4 >
(yy> ?
$stryy? Y
,yyY Z

connectionyy[ e
)yye f
)yyf g
{zz 
command{{ 
.{{  
ExecuteNonQuery{{  /
({{/ 0
){{0 1
;{{1 2
}|| 
}}} 
}~~ 
catch 
( 
SqlException 
	exceptSql  )
)) *
{
ÄÄ 
IO
ÅÅ 
.
ÅÅ 
Logger
ÅÅ 
.
ÅÅ 
Log
ÅÅ 
(
ÅÅ 
NLog
ÅÅ "
.
ÅÅ" #
LogLevel
ÅÅ# +
.
ÅÅ+ ,
Warn
ÅÅ, 0
,
ÅÅ0 1
$str
ÅÅ2 R
,
ÅÅR S
	exceptSql
ÅÅT ]
)
ÅÅ] ^
;
ÅÅ^ _
}
ÇÇ 
break
ÉÉ 
;
ÉÉ 
default
ÑÑ 
:
ÑÑ 
IO
ÜÜ 
.
ÜÜ 
	WriteLine
ÜÜ 
(
ÜÜ 
$str
ÜÜ /
)
ÜÜ/ 0
;
ÜÜ0 1
break
áá 
;
áá 
}
àà 	
}
ââ 
private
åå 
void
åå 
GoodG2B2
åå 
(
åå 
)
åå 
{
çç 
string
éé 
password
éé 
;
éé 
switch
èè 
(
èè 
$num
èè 
)
èè 
{
êê 	
case
ëë 
$num
ëë 
:
ëë 
password
îî 
=
îî 
$str
îî &
;
îî& '
break
ïï 
;
ïï 
default
ññ 
:
ññ 
password
ôô 
=
ôô 
null
ôô 
;
ôô 
break
öö 
;
öö 
}
õõ 	
switch
úú 
(
úú 
$num
úú 
)
úú 
{
ùù 	
case
ûû 
$num
ûû 
:
ûû 
try
üü 
{
†† 
using
¢¢ 
(
¢¢ 
SqlConnection
¢¢ $

connection
¢¢% /
=
¢¢0 1
new
¢¢2 5
SqlConnection
¢¢6 C
(
¢¢C D
$str
¢¢D z
+
¢¢{ |
$str¢¢} Å
+¢¢Ç É
$str¢¢Ñ ê
+¢¢ë í
password¢¢ì õ
)¢¢õ ú
)¢¢ú ù
{
££ 

connection
§§ 
.
§§ 
Open
§§ #
(
§§# $
)
§§$ %
;
§§% &
using
•• 
(
•• 

SqlCommand
•• %
command
••& -
=
••. /
new
••0 3

SqlCommand
••4 >
(
••> ?
$str
••? Y
,
••Y Z

connection
••[ e
)
••e f
)
••f g
{
¶¶ 
command
ßß 
.
ßß  
ExecuteNonQuery
ßß  /
(
ßß/ 0
)
ßß0 1
;
ßß1 2
}
®® 
}
©© 
}
™™ 
catch
´´ 
(
´´ 
SqlException
´´ 
	exceptSql
´´  )
)
´´) *
{
¨¨ 
IO
≠≠ 
.
≠≠ 
Logger
≠≠ 
.
≠≠ 
Log
≠≠ 
(
≠≠ 
NLog
≠≠ "
.
≠≠" #
LogLevel
≠≠# +
.
≠≠+ ,
Warn
≠≠, 0
,
≠≠0 1
$str
≠≠2 R
,
≠≠R S
	exceptSql
≠≠T ]
)
≠≠] ^
;
≠≠^ _
}
ÆÆ 
break
ØØ 
;
ØØ 
default
∞∞ 
:
∞∞ 
IO
≤≤ 
.
≤≤ 
	WriteLine
≤≤ 
(
≤≤ 
$str
≤≤ /
)
≤≤/ 0
;
≤≤0 1
break
≥≥ 
;
≥≥ 
}
¥¥ 	
}
µµ 
private
∏∏ 
void
∏∏ 
GoodB2G1
∏∏ 
(
∏∏ 
)
∏∏ 
{
ππ 
string
∫∫ 
password
∫∫ 
;
∫∫ 
switch
ªª 
(
ªª 
$num
ªª 
)
ªª 
{
ºº 	
case
ΩΩ 
$num
ΩΩ 
:
ΩΩ 
password
ææ 
=
ææ 
$str
ææ 
;
ææ 
{
¿¿ 
try
¡¡ 
{
¬¬ 
using
ƒƒ 
(
ƒƒ 
	TcpClient
ƒƒ $
tcpConn
ƒƒ% ,
=
ƒƒ- .
new
ƒƒ/ 2
	TcpClient
ƒƒ3 <
(
ƒƒ< =
$str
ƒƒ= O
,
ƒƒO P
$num
ƒƒQ V
)
ƒƒV W
)
ƒƒW X
{
≈≈ 
using
«« 
(
«« 
StreamReader
«« +
sr
««, .
=
««/ 0
new
««1 4
StreamReader
««5 A
(
««A B
tcpConn
««B I
.
««I J
	GetStream
««J S
(
««S T
)
««T U
)
««U V
)
««V W
{
»» 
password
   $
=
  % &
sr
  ' )
.
  ) *
ReadLine
  * 2
(
  2 3
)
  3 4
;
  4 5
}
ÀÀ 
}
ÃÃ 
}
ÕÕ 
catch
ŒŒ 
(
ŒŒ 
IOException
ŒŒ "
exceptIO
ŒŒ# +
)
ŒŒ+ ,
{
œœ 
IO
–– 
.
–– 
Logger
–– 
.
–– 
Log
–– !
(
––! "
NLog
––" &
.
––& '
LogLevel
––' /
.
––/ 0
Warn
––0 4
,
––4 5
$str
––6 Q
,
––Q R
exceptIO
––S [
)
––[ \
;
––\ ]
}
—— 
}
““ 
break
”” 
;
”” 
default
‘‘ 
:
‘‘ 
password
◊◊ 
=
◊◊ 
null
◊◊ 
;
◊◊ 
break
ÿÿ 
;
ÿÿ 
}
ŸŸ 	
switch
⁄⁄ 
(
⁄⁄ 
$num
⁄⁄ 
)
⁄⁄ 
{
€€ 	
case
‹‹ 
$num
‹‹ 
:
‹‹ 
IO
ﬁﬁ 
.
ﬁﬁ 
	WriteLine
ﬁﬁ 
(
ﬁﬁ 
$str
ﬁﬁ /
)
ﬁﬁ/ 0
;
ﬁﬁ0 1
break
ﬂﬂ 
;
ﬂﬂ 
default
‡‡ 
:
‡‡ 
if
·· 
(
·· 
password
·· 
!=
·· 
null
··  
)
··  !
{
‚‚ 
{
‰‰ 
using
ÂÂ 
(
ÂÂ &
AesCryptoServiceProvider
ÂÂ 3
aesAlg
ÂÂ4 :
=
ÂÂ; <
new
ÂÂ= @&
AesCryptoServiceProvider
ÂÂA Y
(
ÂÂY Z
)
ÂÂZ [
)
ÂÂ[ \
{
ÊÊ 
aesAlg
ÁÁ 
.
ÁÁ 
Padding
ÁÁ &
=
ÁÁ' (
PaddingMode
ÁÁ) 4
.
ÁÁ4 5
None
ÁÁ5 9
;
ÁÁ9 :
aesAlg
ËË 
.
ËË 
Key
ËË "
=
ËË# $
Encoding
ËË% -
.
ËË- .
UTF8
ËË. 2
.
ËË2 3
GetBytes
ËË3 ;
(
ËË; <
$str
ËË< N
)
ËËN O
;
ËËO P
ICryptoTransform
ÍÍ (
	decryptor
ÍÍ) 2
=
ÍÍ3 4
aesAlg
ÍÍ5 ;
.
ÍÍ; <
CreateDecryptor
ÍÍ< K
(
ÍÍK L
aesAlg
ÍÍL R
.
ÍÍR S
Key
ÍÍS V
,
ÍÍV W
aesAlg
ÍÍX ^
.
ÍÍ^ _
IV
ÍÍ_ a
)
ÍÍa b
;
ÍÍb c
using
ÏÏ 
(
ÏÏ 
MemoryStream
ÏÏ +
	msDecrypt
ÏÏ, 5
=
ÏÏ6 7
new
ÏÏ8 ;
MemoryStream
ÏÏ< H
(
ÏÏH I
Encoding
ÏÏI Q
.
ÏÏQ R
UTF8
ÏÏR V
.
ÏÏV W
GetBytes
ÏÏW _
(
ÏÏ_ `
password
ÏÏ` h
)
ÏÏh i
)
ÏÏi j
)
ÏÏj k
{
ÌÌ 
using
ÓÓ !
(
ÓÓ" #
CryptoStream
ÓÓ# /
	csDecrypt
ÓÓ0 9
=
ÓÓ: ;
new
ÓÓ< ?
CryptoStream
ÓÓ@ L
(
ÓÓL M
	msDecrypt
ÓÓM V
,
ÓÓV W
	decryptor
ÓÓX a
,
ÓÓa b
CryptoStreamMode
ÓÓc s
.
ÓÓs t
Read
ÓÓt x
)
ÓÓx y
)
ÓÓy z
{
ÔÔ 
using
  %
(
& '
StreamReader
' 3
	srDecrypt
4 =
=
> ?
new
@ C
StreamReader
D P
(
P Q
	csDecrypt
Q Z
)
Z [
)
[ \
{
ÒÒ  !
password
ÙÙ$ ,
=
ÙÙ- .
	srDecrypt
ÙÙ/ 8
.
ÙÙ8 9
	ReadToEnd
ÙÙ9 B
(
ÙÙB C
)
ÙÙC D
;
ÙÙD E
}
ıı  !
}
ˆˆ 
}
˜˜ 
}
¯¯ 
}
˘˘ 
try
˙˙ 
{
˚˚ 
using
˝˝ 
(
˝˝ 
SqlConnection
˝˝ (

connection
˝˝) 3
=
˝˝4 5
new
˝˝6 9
SqlConnection
˝˝: G
(
˝˝G H
$str
˝˝H ~
+˝˝ Ä
$str˝˝Å Ö
+˝˝Ü á
$str˝˝à î
+˝˝ï ñ
password˝˝ó ü
)˝˝ü †
)˝˝† °
{
˛˛ 

connection
ˇˇ "
.
ˇˇ" #
Open
ˇˇ# '
(
ˇˇ' (
)
ˇˇ( )
;
ˇˇ) *
using
ÄÄ 
(
ÄÄ 

SqlCommand
ÄÄ )
command
ÄÄ* 1
=
ÄÄ2 3
new
ÄÄ4 7

SqlCommand
ÄÄ8 B
(
ÄÄB C
$str
ÄÄC ]
,
ÄÄ] ^

connection
ÄÄ_ i
)
ÄÄi j
)
ÄÄj k
{
ÅÅ 
command
ÇÇ #
.
ÇÇ# $
ExecuteNonQuery
ÇÇ$ 3
(
ÇÇ3 4
)
ÇÇ4 5
;
ÇÇ5 6
}
ÉÉ 
}
ÑÑ 
}
ÖÖ 
catch
ÜÜ 
(
ÜÜ 
SqlException
ÜÜ #
	exceptSql
ÜÜ$ -
)
ÜÜ- .
{
áá 
IO
àà 
.
àà 
Logger
àà 
.
àà 
Log
àà !
(
àà! "
NLog
àà" &
.
àà& '
LogLevel
àà' /
.
àà/ 0
Warn
àà0 4
,
àà4 5
$str
àà6 V
,
ààV W
	exceptSql
ààX a
)
ààa b
;
ààb c
}
ââ 
}
ää 
break
ãã 
;
ãã 
}
åå 	
}
çç 
private
êê 
void
êê 
GoodB2G2
êê 
(
êê 
)
êê 
{
ëë 
string
íí 
password
íí 
;
íí 
switch
ìì 
(
ìì 
$num
ìì 
)
ìì 
{
îî 	
case
ïï 
$num
ïï 
:
ïï 
password
ññ 
=
ññ 
$str
ññ 
;
ññ 
{
òò 
try
ôô 
{
öö 
using
úú 
(
úú 
	TcpClient
úú $
tcpConn
úú% ,
=
úú- .
new
úú/ 2
	TcpClient
úú3 <
(
úú< =
$str
úú= O
,
úúO P
$num
úúQ V
)
úúV W
)
úúW X
{
ùù 
using
üü 
(
üü 
StreamReader
üü +
sr
üü, .
=
üü/ 0
new
üü1 4
StreamReader
üü5 A
(
üüA B
tcpConn
üüB I
.
üüI J
	GetStream
üüJ S
(
üüS T
)
üüT U
)
üüU V
)
üüV W
{
†† 
password
¢¢ $
=
¢¢% &
sr
¢¢' )
.
¢¢) *
ReadLine
¢¢* 2
(
¢¢2 3
)
¢¢3 4
;
¢¢4 5
}
££ 
}
§§ 
}
•• 
catch
¶¶ 
(
¶¶ 
IOException
¶¶ "
exceptIO
¶¶# +
)
¶¶+ ,
{
ßß 
IO
®® 
.
®® 
Logger
®® 
.
®® 
Log
®® !
(
®®! "
NLog
®®" &
.
®®& '
LogLevel
®®' /
.
®®/ 0
Warn
®®0 4
,
®®4 5
$str
®®6 Q
,
®®Q R
exceptIO
®®S [
)
®®[ \
;
®®\ ]
}
©© 
}
™™ 
break
´´ 
;
´´ 
default
¨¨ 
:
¨¨ 
password
ØØ 
=
ØØ 
null
ØØ 
;
ØØ 
break
∞∞ 
;
∞∞ 
}
±± 	
switch
≤≤ 
(
≤≤ 
$num
≤≤ 
)
≤≤ 
{
≥≥ 	
case
¥¥ 
$num
¥¥ 
:
¥¥ 
if
µµ 
(
µµ 
password
µµ 
!=
µµ 
null
µµ  
)
µµ  !
{
∂∂ 
{
∏∏ 
using
ππ 
(
ππ &
AesCryptoServiceProvider
ππ 3
aesAlg
ππ4 :
=
ππ; <
new
ππ= @&
AesCryptoServiceProvider
ππA Y
(
ππY Z
)
ππZ [
)
ππ[ \
{
∫∫ 
aesAlg
ªª 
.
ªª 
Padding
ªª &
=
ªª' (
PaddingMode
ªª) 4
.
ªª4 5
None
ªª5 9
;
ªª9 :
aesAlg
ºº 
.
ºº 
Key
ºº "
=
ºº# $
Encoding
ºº% -
.
ºº- .
UTF8
ºº. 2
.
ºº2 3
GetBytes
ºº3 ;
(
ºº; <
$str
ºº< N
)
ººN O
;
ººO P
ICryptoTransform
ææ (
	decryptor
ææ) 2
=
ææ3 4
aesAlg
ææ5 ;
.
ææ; <
CreateDecryptor
ææ< K
(
ææK L
aesAlg
ææL R
.
ææR S
Key
ææS V
,
ææV W
aesAlg
ææX ^
.
ææ^ _
IV
ææ_ a
)
ææa b
;
ææb c
using
¿¿ 
(
¿¿ 
MemoryStream
¿¿ +
	msDecrypt
¿¿, 5
=
¿¿6 7
new
¿¿8 ;
MemoryStream
¿¿< H
(
¿¿H I
Encoding
¿¿I Q
.
¿¿Q R
UTF8
¿¿R V
.
¿¿V W
GetBytes
¿¿W _
(
¿¿_ `
password
¿¿` h
)
¿¿h i
)
¿¿i j
)
¿¿j k
{
¡¡ 
using
¬¬ !
(
¬¬" #
CryptoStream
¬¬# /
	csDecrypt
¬¬0 9
=
¬¬: ;
new
¬¬< ?
CryptoStream
¬¬@ L
(
¬¬L M
	msDecrypt
¬¬M V
,
¬¬V W
	decryptor
¬¬X a
,
¬¬a b
CryptoStreamMode
¬¬c s
.
¬¬s t
Read
¬¬t x
)
¬¬x y
)
¬¬y z
{
√√ 
using
ƒƒ  %
(
ƒƒ& '
StreamReader
ƒƒ' 3
	srDecrypt
ƒƒ4 =
=
ƒƒ> ?
new
ƒƒ@ C
StreamReader
ƒƒD P
(
ƒƒP Q
	csDecrypt
ƒƒQ Z
)
ƒƒZ [
)
ƒƒ[ \
{
≈≈  !
password
»»$ ,
=
»»- .
	srDecrypt
»»/ 8
.
»»8 9
	ReadToEnd
»»9 B
(
»»B C
)
»»C D
;
»»D E
}
……  !
}
   
}
ÀÀ 
}
ÃÃ 
}
ÕÕ 
try
ŒŒ 
{
œœ 
using
—— 
(
—— 
SqlConnection
—— (

connection
——) 3
=
——4 5
new
——6 9
SqlConnection
——: G
(
——G H
$str
——H ~
+—— Ä
$str——Å Ö
+——Ü á
$str——à î
+——ï ñ
password——ó ü
)——ü †
)——† °
{
““ 

connection
”” "
.
””" #
Open
””# '
(
””' (
)
””( )
;
””) *
using
‘‘ 
(
‘‘ 

SqlCommand
‘‘ )
command
‘‘* 1
=
‘‘2 3
new
‘‘4 7

SqlCommand
‘‘8 B
(
‘‘B C
$str
‘‘C ]
,
‘‘] ^

connection
‘‘_ i
)
‘‘i j
)
‘‘j k
{
’’ 
command
÷÷ #
.
÷÷# $
ExecuteNonQuery
÷÷$ 3
(
÷÷3 4
)
÷÷4 5
;
÷÷5 6
}
◊◊ 
}
ÿÿ 
}
ŸŸ 
catch
⁄⁄ 
(
⁄⁄ 
SqlException
⁄⁄ #
	exceptSql
⁄⁄$ -
)
⁄⁄- .
{
€€ 
IO
‹‹ 
.
‹‹ 
Logger
‹‹ 
.
‹‹ 
Log
‹‹ !
(
‹‹! "
NLog
‹‹" &
.
‹‹& '
LogLevel
‹‹' /
.
‹‹/ 0
Warn
‹‹0 4
,
‹‹4 5
$str
‹‹6 V
,
‹‹V W
	exceptSql
‹‹X a
)
‹‹a b
;
‹‹b c
}
›› 
}
ﬁﬁ 
break
ﬂﬂ 
;
ﬂﬂ 
default
‡‡ 
:
‡‡ 
IO
‚‚ 
.
‚‚ 
	WriteLine
‚‚ 
(
‚‚ 
$str
‚‚ /
)
‚‚/ 0
;
‚‚0 1
break
„„ 
;
„„ 
}
‰‰ 	
}
ÂÂ 
public
ÁÁ 

override
ÁÁ 
void
ÁÁ 
Good
ÁÁ 
(
ÁÁ 
)
ÁÁ 
{
ËË 
GoodG2B1
ÈÈ 
(
ÈÈ 
)
ÈÈ 
;
ÈÈ 
GoodG2B2
ÍÍ 
(
ÍÍ 
)
ÍÍ 
;
ÍÍ 
GoodB2G1
ÎÎ 
(
ÎÎ 
)
ÎÎ 
;
ÎÎ 
GoodB2G2
ÏÏ 
(
ÏÏ 
)
ÏÏ 
;
ÏÏ 
}
ÌÌ 
}ÔÔ 
} ôX
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_16.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_16 F
:G H
AbstractTestCaseI Y
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
password## 
;## 
while$$ 
($$ 
true$$ 
)$$ 
{%% 	
password&& 
=&& 
$str&& 
;&& 
{(( 
try)) 
{** 
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
new,,/ 2
	TcpClient,,3 <
(,,< =
$str,,= O
,,,O P
$num,,Q V
),,V W
),,W X
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
password22 $
=22% &
sr22' )
.22) *
ReadLine22* 2
(222 3
)223 4
;224 5
}33 
}44 
}55 
catch66 
(66 
IOException66 "
exceptIO66# +
)66+ ,
{77 
IO88 
.88 
Logger88 
.88 
Log88 !
(88! "
NLog88" &
.88& '
LogLevel88' /
.88/ 0
Warn880 4
,884 5
$str886 Q
,88Q R
exceptIO88S [
)88[ \
;88\ ]
}99 
}:: 
break;; 
;;; 
}<< 	
while== 
(== 
true== 
)== 
{>> 	
try?? 
{@@ 
usingBB 
(BB 
SqlConnectionBB $

connectionBB% /
=BB0 1
newBB2 5
SqlConnectionBB6 C
(BBC D
$strBBD z
+BB{ |
$str	BB} Å
+
BBÇ É
$str
BBÑ ê
+
BBë í
password
BBì õ
)
BBõ ú
)
BBú ù
{CC 

connectionDD 
.DD 
OpenDD #
(DD# $
)DD$ %
;DD% &
usingEE 
(EE 

SqlCommandEE %
commandEE& -
=EE. /
newEE0 3

SqlCommandEE4 >
(EE> ?
$strEE? Y
,EEY Z

connectionEE[ e
)EEe f
)EEf g
{FF 
commandGG 
.GG  
ExecuteNonQueryGG  /
(GG/ 0
)GG0 1
;GG1 2
}HH 
}II 
}JJ 
catchKK 
(KK 
SqlExceptionKK 
	exceptSqlKK  )
)KK) *
{LL 
IOMM 
.MM 
LoggerMM 
.MM 
LogMM 
(MM 
NLogMM "
.MM" #
LogLevelMM# +
.MM+ ,
WarnMM, 0
,MM0 1
$strMM2 R
,MMR S
	exceptSqlMMT ]
)MM] ^
;MM^ _
}NN 
breakOO 
;OO 
}PP 	
}QQ 
privateUU 
voidUU 
GoodG2BUU 
(UU 
)UU 
{VV 
stringWW 
passwordWW 
;WW 
whileXX 
(XX 
trueXX 
)XX 
{YY 	
password\\ 
=\\ 
$str\\ &
;\\& '
break]] 
;]] 
}^^ 	
while__ 
(__ 
true__ 
)__ 
{`` 	
tryaa 
{bb 
usingdd 
(dd 
SqlConnectiondd $

connectiondd% /
=dd0 1
newdd2 5
SqlConnectiondd6 C
(ddC D
$strddD z
+dd{ |
$str	dd} Å
+
ddÇ É
$str
ddÑ ê
+
ddë í
password
ddì õ
)
ddõ ú
)
ddú ù
{ee 

connectionff 
.ff 
Openff #
(ff# $
)ff$ %
;ff% &
usinggg 
(gg 

SqlCommandgg %
commandgg& -
=gg. /
newgg0 3

SqlCommandgg4 >
(gg> ?
$strgg? Y
,ggY Z

connectiongg[ e
)gge f
)ggf g
{hh 
commandii 
.ii  
ExecuteNonQueryii  /
(ii/ 0
)ii0 1
;ii1 2
}jj 
}kk 
}ll 
catchmm 
(mm 
SqlExceptionmm 
	exceptSqlmm  )
)mm) *
{nn 
IOoo 
.oo 
Loggeroo 
.oo 
Logoo 
(oo 
NLogoo "
.oo" #
LogLeveloo# +
.oo+ ,
Warnoo, 0
,oo0 1
$stroo2 R
,ooR S
	exceptSqlooT ]
)oo] ^
;oo^ _
}pp 
breakqq 
;qq 
}rr 	
}ss 
privatevv 
voidvv 
GoodB2Gvv 
(vv 
)vv 
{ww 
stringxx 
passwordxx 
;xx 
whileyy 
(yy 
trueyy 
)yy 
{zz 	
password{{ 
={{ 
$str{{ 
;{{ 
{}} 
try~~ 
{ 
using
ÅÅ 
(
ÅÅ 
	TcpClient
ÅÅ $
tcpConn
ÅÅ% ,
=
ÅÅ- .
new
ÅÅ/ 2
	TcpClient
ÅÅ3 <
(
ÅÅ< =
$str
ÅÅ= O
,
ÅÅO P
$num
ÅÅQ V
)
ÅÅV W
)
ÅÅW X
{
ÇÇ 
using
ÑÑ 
(
ÑÑ 
StreamReader
ÑÑ +
sr
ÑÑ, .
=
ÑÑ/ 0
new
ÑÑ1 4
StreamReader
ÑÑ5 A
(
ÑÑA B
tcpConn
ÑÑB I
.
ÑÑI J
	GetStream
ÑÑJ S
(
ÑÑS T
)
ÑÑT U
)
ÑÑU V
)
ÑÑV W
{
ÖÖ 
password
áá $
=
áá% &
sr
áá' )
.
áá) *
ReadLine
áá* 2
(
áá2 3
)
áá3 4
;
áá4 5
}
àà 
}
ââ 
}
ää 
catch
ãã 
(
ãã 
IOException
ãã "
exceptIO
ãã# +
)
ãã+ ,
{
åå 
IO
çç 
.
çç 
Logger
çç 
.
çç 
Log
çç !
(
çç! "
NLog
çç" &
.
çç& '
LogLevel
çç' /
.
çç/ 0
Warn
çç0 4
,
çç4 5
$str
çç6 Q
,
ççQ R
exceptIO
ççS [
)
çç[ \
;
çç\ ]
}
éé 
}
èè 
break
êê 
;
êê 
}
ëë 	
while
íí 
(
íí 
true
íí 
)
íí 
{
ìì 	
if
îî 
(
îî 
password
îî 
!=
îî 
null
îî  
)
îî  !
{
ïï 
{
óó 
using
òò 
(
òò &
AesCryptoServiceProvider
òò 3
aesAlg
òò4 :
=
òò; <
new
òò= @&
AesCryptoServiceProvider
òòA Y
(
òòY Z
)
òòZ [
)
òò[ \
{
ôô 
aesAlg
öö 
.
öö 
Padding
öö &
=
öö' (
PaddingMode
öö) 4
.
öö4 5
None
öö5 9
;
öö9 :
aesAlg
õõ 
.
õõ 
Key
õõ "
=
õõ# $
Encoding
õõ% -
.
õõ- .
UTF8
õõ. 2
.
õõ2 3
GetBytes
õõ3 ;
(
õõ; <
$str
õõ< N
)
õõN O
;
õõO P
ICryptoTransform
ùù (
	decryptor
ùù) 2
=
ùù3 4
aesAlg
ùù5 ;
.
ùù; <
CreateDecryptor
ùù< K
(
ùùK L
aesAlg
ùùL R
.
ùùR S
Key
ùùS V
,
ùùV W
aesAlg
ùùX ^
.
ùù^ _
IV
ùù_ a
)
ùùa b
;
ùùb c
using
üü 
(
üü 
MemoryStream
üü +
	msDecrypt
üü, 5
=
üü6 7
new
üü8 ;
MemoryStream
üü< H
(
üüH I
Encoding
üüI Q
.
üüQ R
UTF8
üüR V
.
üüV W
GetBytes
üüW _
(
üü_ `
password
üü` h
)
üüh i
)
üüi j
)
üüj k
{
†† 
using
°° !
(
°°" #
CryptoStream
°°# /
	csDecrypt
°°0 9
=
°°: ;
new
°°< ?
CryptoStream
°°@ L
(
°°L M
	msDecrypt
°°M V
,
°°V W
	decryptor
°°X a
,
°°a b
CryptoStreamMode
°°c s
.
°°s t
Read
°°t x
)
°°x y
)
°°y z
{
¢¢ 
using
££  %
(
££& '
StreamReader
££' 3
	srDecrypt
££4 =
=
££> ?
new
££@ C
StreamReader
££D P
(
££P Q
	csDecrypt
££Q Z
)
££Z [
)
££[ \
{
§§  !
password
ßß$ ,
=
ßß- .
	srDecrypt
ßß/ 8
.
ßß8 9
	ReadToEnd
ßß9 B
(
ßßB C
)
ßßC D
;
ßßD E
}
®®  !
}
©© 
}
™™ 
}
´´ 
}
¨¨ 
try
≠≠ 
{
ÆÆ 
using
∞∞ 
(
∞∞ 
SqlConnection
∞∞ (

connection
∞∞) 3
=
∞∞4 5
new
∞∞6 9
SqlConnection
∞∞: G
(
∞∞G H
$str
∞∞H ~
+∞∞ Ä
$str∞∞Å Ö
+∞∞Ü á
$str∞∞à î
+∞∞ï ñ
password∞∞ó ü
)∞∞ü †
)∞∞† °
{
±± 

connection
≤≤ "
.
≤≤" #
Open
≤≤# '
(
≤≤' (
)
≤≤( )
;
≤≤) *
using
≥≥ 
(
≥≥ 

SqlCommand
≥≥ )
command
≥≥* 1
=
≥≥2 3
new
≥≥4 7

SqlCommand
≥≥8 B
(
≥≥B C
$str
≥≥C ]
,
≥≥] ^

connection
≥≥_ i
)
≥≥i j
)
≥≥j k
{
¥¥ 
command
µµ #
.
µµ# $
ExecuteNonQuery
µµ$ 3
(
µµ3 4
)
µµ4 5
;
µµ5 6
}
∂∂ 
}
∑∑ 
}
∏∏ 
catch
ππ 
(
ππ 
SqlException
ππ #
	exceptSql
ππ$ -
)
ππ- .
{
∫∫ 
IO
ªª 
.
ªª 
Logger
ªª 
.
ªª 
Log
ªª !
(
ªª! "
NLog
ªª" &
.
ªª& '
LogLevel
ªª' /
.
ªª/ 0
Warn
ªª0 4
,
ªª4 5
$str
ªª6 V
,
ªªV W
	exceptSql
ªªX a
)
ªªa b
;
ªªb c
}
ºº 
}
ΩΩ 
break
ææ 
;
ææ 
}
øø 	
}
¿¿ 
public
¬¬ 

override
¬¬ 
void
¬¬ 
Good
¬¬ 
(
¬¬ 
)
¬¬ 
{
√√ 
GoodG2B
ƒƒ 
(
ƒƒ 
)
ƒƒ 
;
ƒƒ 
GoodB2G
≈≈ 
(
≈≈ 
)
≈≈ 
;
≈≈ 
}
∆∆ 
}»» 
}…… ∂W
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_17.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_17 F
:G H
AbstractTestCaseI Y
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
password## 
;## 
password(( 
=(( 
$str(( 
;(( 
{** 	
try++ 
{,, 
using.. 
(.. 
	TcpClient..  
tcpConn..! (
=..) *
new..+ .
	TcpClient../ 8
(..8 9
$str..9 K
,..K L
$num..M R
)..R S
)..S T
{// 
using11 
(11 
StreamReader11 '
sr11( *
=11+ ,
new11- 0
StreamReader111 =
(11= >
tcpConn11> E
.11E F
	GetStream11F O
(11O P
)11P Q
)11Q R
)11R S
{22 
password44  
=44! "
sr44# %
.44% &
ReadLine44& .
(44. /
)44/ 0
;440 1
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
$str::2 M
,::M N
exceptIO::O W
)::W X
;::X Y
};; 
}<< 	
for== 
(== 
int== 
j== 
=== 
$num== 
;== 
j== 
<== 
$num== 
;== 
j==  
++==  "
)==" #
{>> 	
try?? 
{@@ 
usingBB 
(BB 
SqlConnectionBB $

connectionBB% /
=BB0 1
newBB2 5
SqlConnectionBB6 C
(BBC D
$strBBD z
+BB{ |
$str	BB} Å
+
BBÇ É
$str
BBÑ ê
+
BBë í
password
BBì õ
)
BBõ ú
)
BBú ù
{CC 

connectionDD 
.DD 
OpenDD #
(DD# $
)DD$ %
;DD% &
usingEE 
(EE 

SqlCommandEE %
commandEE& -
=EE. /
newEE0 3

SqlCommandEE4 >
(EE> ?
$strEE? Y
,EEY Z

connectionEE[ e
)EEe f
)EEf g
{FF 
commandGG 
.GG  
ExecuteNonQueryGG  /
(GG/ 0
)GG0 1
;GG1 2
}HH 
}II 
}JJ 
catchKK 
(KK 
SqlExceptionKK 
	exceptSqlKK  )
)KK) *
{LL 
IOMM 
.MM 
LoggerMM 
.MM 
LogMM 
(MM 
NLogMM "
.MM" #
LogLevelMM# +
.MM+ ,
WarnMM, 0
,MM0 1
$strMM2 R
,MMR S
	exceptSqlMMT ]
)MM] ^
;MM^ _
}NN 
}OO 	
}PP 
privateTT 
voidTT 
GoodG2BTT 
(TT 
)TT 
{UU 
stringVV 
passwordVV 
;VV 
passwordYY 
=YY 
$strYY "
;YY" #
forZZ 
(ZZ 
intZZ 
jZZ 
=ZZ 
$numZZ 
;ZZ 
jZZ 
<ZZ 
$numZZ 
;ZZ 
jZZ  
++ZZ  "
)ZZ" #
{[[ 	
try\\ 
{]] 
using__ 
(__ 
SqlConnection__ $

connection__% /
=__0 1
new__2 5
SqlConnection__6 C
(__C D
$str__D z
+__{ |
$str	__} Å
+
__Ç É
$str
__Ñ ê
+
__ë í
password
__ì õ
)
__õ ú
)
__ú ù
{`` 

connectionaa 
.aa 
Openaa #
(aa# $
)aa$ %
;aa% &
usingbb 
(bb 

SqlCommandbb %
commandbb& -
=bb. /
newbb0 3

SqlCommandbb4 >
(bb> ?
$strbb? Y
,bbY Z

connectionbb[ e
)bbe f
)bbf g
{cc 
commanddd 
.dd  
ExecuteNonQuerydd  /
(dd/ 0
)dd0 1
;dd1 2
}ee 
}ff 
}gg 
catchhh 
(hh 
SqlExceptionhh 
	exceptSqlhh  )
)hh) *
{ii 
IOjj 
.jj 
Loggerjj 
.jj 
Logjj 
(jj 
NLogjj "
.jj" #
LogLeveljj# +
.jj+ ,
Warnjj, 0
,jj0 1
$strjj2 R
,jjR S
	exceptSqljjT ]
)jj] ^
;jj^ _
}kk 
}ll 	
}mm 
privatepp 
voidpp 
GoodB2Gpp 
(pp 
)pp 
{qq 
stringrr 
passwordrr 
;rr 
passwordss 
=ss 
$strss 
;ss 
{uu 	
tryvv 
{ww 
usingyy 
(yy 
	TcpClientyy  
tcpConnyy! (
=yy) *
newyy+ .
	TcpClientyy/ 8
(yy8 9
$stryy9 K
,yyK L
$numyyM R
)yyR S
)yyS T
{zz 
using|| 
(|| 
StreamReader|| '
sr||( *
=||+ ,
new||- 0
StreamReader||1 =
(||= >
tcpConn||> E
.||E F
	GetStream||F O
(||O P
)||P Q
)||Q R
)||R S
{}} 
password  
=! "
sr# %
.% &
ReadLine& .
(. /
)/ 0
;0 1
}
ÄÄ 
}
ÅÅ 
}
ÇÇ 
catch
ÉÉ 
(
ÉÉ 
IOException
ÉÉ 
exceptIO
ÉÉ '
)
ÉÉ' (
{
ÑÑ 
IO
ÖÖ 
.
ÖÖ 
Logger
ÖÖ 
.
ÖÖ 
Log
ÖÖ 
(
ÖÖ 
NLog
ÖÖ "
.
ÖÖ" #
LogLevel
ÖÖ# +
.
ÖÖ+ ,
Warn
ÖÖ, 0
,
ÖÖ0 1
$str
ÖÖ2 M
,
ÖÖM N
exceptIO
ÖÖO W
)
ÖÖW X
;
ÖÖX Y
}
ÜÜ 
}
áá 	
for
àà 
(
àà 
int
àà 
k
àà 
=
àà 
$num
àà 
;
àà 
k
àà 
<
àà 
$num
àà 
;
àà 
k
àà  
++
àà  "
)
àà" #
{
ââ 	
if
ää 
(
ää 
password
ää 
!=
ää 
null
ää  
)
ää  !
{
ãã 
{
çç 
using
éé 
(
éé &
AesCryptoServiceProvider
éé 3
aesAlg
éé4 :
=
éé; <
new
éé= @&
AesCryptoServiceProvider
ééA Y
(
ééY Z
)
ééZ [
)
éé[ \
{
èè 
aesAlg
êê 
.
êê 
Padding
êê &
=
êê' (
PaddingMode
êê) 4
.
êê4 5
None
êê5 9
;
êê9 :
aesAlg
ëë 
.
ëë 
Key
ëë "
=
ëë# $
Encoding
ëë% -
.
ëë- .
UTF8
ëë. 2
.
ëë2 3
GetBytes
ëë3 ;
(
ëë; <
$str
ëë< N
)
ëëN O
;
ëëO P
ICryptoTransform
ìì (
	decryptor
ìì) 2
=
ìì3 4
aesAlg
ìì5 ;
.
ìì; <
CreateDecryptor
ìì< K
(
ììK L
aesAlg
ììL R
.
ììR S
Key
ììS V
,
ììV W
aesAlg
ììX ^
.
ìì^ _
IV
ìì_ a
)
ììa b
;
ììb c
using
ïï 
(
ïï 
MemoryStream
ïï +
	msDecrypt
ïï, 5
=
ïï6 7
new
ïï8 ;
MemoryStream
ïï< H
(
ïïH I
Encoding
ïïI Q
.
ïïQ R
UTF8
ïïR V
.
ïïV W
GetBytes
ïïW _
(
ïï_ `
password
ïï` h
)
ïïh i
)
ïïi j
)
ïïj k
{
ññ 
using
óó !
(
óó" #
CryptoStream
óó# /
	csDecrypt
óó0 9
=
óó: ;
new
óó< ?
CryptoStream
óó@ L
(
óóL M
	msDecrypt
óóM V
,
óóV W
	decryptor
óóX a
,
óóa b
CryptoStreamMode
óóc s
.
óós t
Read
óót x
)
óóx y
)
óóy z
{
òò 
using
ôô  %
(
ôô& '
StreamReader
ôô' 3
	srDecrypt
ôô4 =
=
ôô> ?
new
ôô@ C
StreamReader
ôôD P
(
ôôP Q
	csDecrypt
ôôQ Z
)
ôôZ [
)
ôô[ \
{
öö  !
password
ùù$ ,
=
ùù- .
	srDecrypt
ùù/ 8
.
ùù8 9
	ReadToEnd
ùù9 B
(
ùùB C
)
ùùC D
;
ùùD E
}
ûû  !
}
üü 
}
†† 
}
°° 
}
¢¢ 
try
££ 
{
§§ 
using
¶¶ 
(
¶¶ 
SqlConnection
¶¶ (

connection
¶¶) 3
=
¶¶4 5
new
¶¶6 9
SqlConnection
¶¶: G
(
¶¶G H
$str
¶¶H ~
+¶¶ Ä
$str¶¶Å Ö
+¶¶Ü á
$str¶¶à î
+¶¶ï ñ
password¶¶ó ü
)¶¶ü †
)¶¶† °
{
ßß 

connection
®® "
.
®®" #
Open
®®# '
(
®®' (
)
®®( )
;
®®) *
using
©© 
(
©© 

SqlCommand
©© )
command
©©* 1
=
©©2 3
new
©©4 7

SqlCommand
©©8 B
(
©©B C
$str
©©C ]
,
©©] ^

connection
©©_ i
)
©©i j
)
©©j k
{
™™ 
command
´´ #
.
´´# $
ExecuteNonQuery
´´$ 3
(
´´3 4
)
´´4 5
;
´´5 6
}
¨¨ 
}
≠≠ 
}
ÆÆ 
catch
ØØ 
(
ØØ 
SqlException
ØØ #
	exceptSql
ØØ$ -
)
ØØ- .
{
∞∞ 
IO
±± 
.
±± 
Logger
±± 
.
±± 
Log
±± !
(
±±! "
NLog
±±" &
.
±±& '
LogLevel
±±' /
.
±±/ 0
Warn
±±0 4
,
±±4 5
$str
±±6 V
,
±±V W
	exceptSql
±±X a
)
±±a b
;
±±b c
}
≤≤ 
}
≥≥ 
}
¥¥ 	
}
µµ 
public
∑∑ 

override
∑∑ 
void
∑∑ 
Good
∑∑ 
(
∑∑ 
)
∑∑ 
{
∏∏ 
GoodG2B
ππ 
(
ππ 
)
ππ 
;
ππ 
GoodB2G
∫∫ 
(
∫∫ 
)
∫∫ 
;
∫∫ 
}
ªª 
}ΩΩ 
}ææ Ãê
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_21.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_21 F
:G H
AbstractTestCaseI Y
{ 
private"" 
bool"" 

badPrivate"" 
="" 
false"" #
;""# $
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
string&& 
password&& 
;&& 
password'' 
='' 
$str'' 
;'' 
{)) 	
try** 
{++ 
using-- 
(-- 
	TcpClient--  
tcpConn--! (
=--) *
new--+ .
	TcpClient--/ 8
(--8 9
$str--9 K
,--K L
$num--M R
)--R S
)--S T
{.. 
using00 
(00 
StreamReader00 '
sr00( *
=00+ ,
new00- 0
StreamReader001 =
(00= >
tcpConn00> E
.00E F
	GetStream00F O
(00O P
)00P Q
)00Q R
)00R S
{11 
password33  
=33! "
sr33# %
.33% &
ReadLine33& .
(33. /
)33/ 0
;330 1
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
$str992 M
,99M N
exceptIO99O W
)99W X
;99X Y
}:: 
};; 	

badPrivate<< 
=<< 
true<< 
;<< 
BadSink== 
(== 
password== 
)== 
;== 
}>> 
private@@ 
void@@ 
BadSink@@ 
(@@ 
string@@ 
password@@  (
)@@) *
{AA 
ifBB 

(BB 

badPrivateBB 
)BB 
{CC 	
tryDD 
{EE 
usingGG 
(GG 
SqlConnectionGG $

connectionGG% /
=GG0 1
newGG2 5
SqlConnectionGG6 C
(GGC D
$strGGD z
+GG{ |
$str	GG} Å
+
GGÇ É
$str
GGÑ ê
+
GGë í
password
GGì õ
)
GGõ ú
)
GGú ù
{HH 

connectionII 
.II 
OpenII #
(II# $
)II$ %
;II% &
usingJJ 
(JJ 

SqlCommandJJ %
commandJJ& -
=JJ. /
newJJ0 3

SqlCommandJJ4 >
(JJ> ?
$strJJ? Y
,JJY Z

connectionJJ[ e
)JJe f
)JJf g
{KK 
commandLL 
.LL  
ExecuteNonQueryLL  /
(LL/ 0
)LL0 1
;LL1 2
}MM 
}NN 
}OO 
catchPP 
(PP 
SqlExceptionPP 
	exceptSqlPP  )
)PP) *
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR 
(RR 
NLogRR "
.RR" #
LogLevelRR# +
.RR+ ,
WarnRR, 0
,RR0 1
$strRR2 R
,RRR S
	exceptSqlRRT ]
)RR] ^
;RR^ _
}SS 
}TT 	
}UU 
privateXX 
boolXX 
goodB2G1PrivateXX  
=XX! "
falseXX# (
;XX( )
privateYY 
boolYY 
goodB2G2PrivateYY  
=YY! "
falseYY# (
;YY( )
privateZZ 
boolZZ 
goodG2BPrivateZZ 
=ZZ  !
falseZZ" '
;ZZ' (
public\\ 

override\\ 
void\\ 
Good\\ 
(\\ 
)\\ 
{]] 
GoodB2G1^^ 
(^^ 
)^^ 
;^^ 
GoodB2G2__ 
(__ 
)__ 
;__ 
GoodG2B`` 
(`` 
)`` 
;`` 
}aa 
privatedd 
voiddd 
GoodB2G1dd 
(dd 
)dd 
{ee 
stringff 
passwordff 
;ff 
passwordgg 
=gg 
$strgg 
;gg 
{ii 	
tryjj 
{kk 
usingmm 
(mm 
	TcpClientmm  
tcpConnmm! (
=mm) *
newmm+ .
	TcpClientmm/ 8
(mm8 9
$strmm9 K
,mmK L
$nummmM R
)mmR S
)mmS T
{nn 
usingpp 
(pp 
StreamReaderpp '
srpp( *
=pp+ ,
newpp- 0
StreamReaderpp1 =
(pp= >
tcpConnpp> E
.ppE F
	GetStreamppF O
(ppO P
)ppP Q
)ppQ R
)ppR S
{qq 
passwordss  
=ss! "
srss# %
.ss% &
ReadLiness& .
(ss. /
)ss/ 0
;ss0 1
}tt 
}uu 
}vv 
catchww 
(ww 
IOExceptionww 
exceptIOww '
)ww' (
{xx 
IOyy 
.yy 
Loggeryy 
.yy 
Logyy 
(yy 
NLogyy "
.yy" #
LogLevelyy# +
.yy+ ,
Warnyy, 0
,yy0 1
$stryy2 M
,yyM N
exceptIOyyO W
)yyW X
;yyX Y
}zz 
}{{ 	
goodB2G1Private|| 
=|| 
false|| 
;||  
GoodB2G1Sink}} 
(}} 
password}} 
)}} 
;}}  
}~~ 
private
ÄÄ 
void
ÄÄ 
GoodB2G1Sink
ÄÄ 
(
ÄÄ 
string
ÄÄ $
password
ÄÄ% -
)
ÄÄ. /
{
ÅÅ 
if
ÇÇ 

(
ÇÇ 
goodB2G1Private
ÇÇ 
)
ÇÇ 
{
ÉÉ 	
IO
ÖÖ 
.
ÖÖ 
	WriteLine
ÖÖ 
(
ÖÖ 
$str
ÖÖ /
)
ÖÖ/ 0
;
ÖÖ0 1
}
ÜÜ 	
else
áá 
{
àà 	
if
ââ 
(
ââ 
password
ââ 
!=
ââ 
null
ââ  
)
ââ  !
{
ää 
{
åå 
using
çç 
(
çç &
AesCryptoServiceProvider
çç 3
aesAlg
çç4 :
=
çç; <
new
çç= @&
AesCryptoServiceProvider
ççA Y
(
ççY Z
)
ççZ [
)
çç[ \
{
éé 
aesAlg
èè 
.
èè 
Padding
èè &
=
èè' (
PaddingMode
èè) 4
.
èè4 5
None
èè5 9
;
èè9 :
aesAlg
êê 
.
êê 
Key
êê "
=
êê# $
Encoding
êê% -
.
êê- .
UTF8
êê. 2
.
êê2 3
GetBytes
êê3 ;
(
êê; <
$str
êê< N
)
êêN O
;
êêO P
ICryptoTransform
íí (
	decryptor
íí) 2
=
íí3 4
aesAlg
íí5 ;
.
íí; <
CreateDecryptor
íí< K
(
ííK L
aesAlg
ííL R
.
ííR S
Key
ííS V
,
ííV W
aesAlg
ííX ^
.
íí^ _
IV
íí_ a
)
íía b
;
ííb c
using
îî 
(
îî 
MemoryStream
îî +
	msDecrypt
îî, 5
=
îî6 7
new
îî8 ;
MemoryStream
îî< H
(
îîH I
Encoding
îîI Q
.
îîQ R
UTF8
îîR V
.
îîV W
GetBytes
îîW _
(
îî_ `
password
îî` h
)
îîh i
)
îîi j
)
îîj k
{
ïï 
using
ññ !
(
ññ" #
CryptoStream
ññ# /
	csDecrypt
ññ0 9
=
ññ: ;
new
ññ< ?
CryptoStream
ññ@ L
(
ññL M
	msDecrypt
ññM V
,
ññV W
	decryptor
ññX a
,
ñña b
CryptoStreamMode
ññc s
.
ññs t
Read
ññt x
)
ññx y
)
ññy z
{
óó 
using
òò  %
(
òò& '
StreamReader
òò' 3
	srDecrypt
òò4 =
=
òò> ?
new
òò@ C
StreamReader
òòD P
(
òòP Q
	csDecrypt
òòQ Z
)
òòZ [
)
òò[ \
{
ôô  !
password
úú$ ,
=
úú- .
	srDecrypt
úú/ 8
.
úú8 9
	ReadToEnd
úú9 B
(
úúB C
)
úúC D
;
úúD E
}
ùù  !
}
ûû 
}
üü 
}
†† 
}
°° 
try
¢¢ 
{
££ 
using
•• 
(
•• 
SqlConnection
•• (

connection
••) 3
=
••4 5
new
••6 9
SqlConnection
••: G
(
••G H
$str
••H ~
+•• Ä
$str••Å Ö
+••Ü á
$str••à î
+••ï ñ
password••ó ü
)••ü †
)••† °
{
¶¶ 

connection
ßß "
.
ßß" #
Open
ßß# '
(
ßß' (
)
ßß( )
;
ßß) *
using
®® 
(
®® 

SqlCommand
®® )
command
®®* 1
=
®®2 3
new
®®4 7

SqlCommand
®®8 B
(
®®B C
$str
®®C ]
,
®®] ^

connection
®®_ i
)
®®i j
)
®®j k
{
©© 
command
™™ #
.
™™# $
ExecuteNonQuery
™™$ 3
(
™™3 4
)
™™4 5
;
™™5 6
}
´´ 
}
¨¨ 
}
≠≠ 
catch
ÆÆ 
(
ÆÆ 
SqlException
ÆÆ #
	exceptSql
ÆÆ$ -
)
ÆÆ- .
{
ØØ 
IO
∞∞ 
.
∞∞ 
Logger
∞∞ 
.
∞∞ 
Log
∞∞ !
(
∞∞! "
NLog
∞∞" &
.
∞∞& '
LogLevel
∞∞' /
.
∞∞/ 0
Warn
∞∞0 4
,
∞∞4 5
$str
∞∞6 V
,
∞∞V W
	exceptSql
∞∞X a
)
∞∞a b
;
∞∞b c
}
±± 
}
≤≤ 
}
≥≥ 	
}
¥¥ 
private
∑∑ 
void
∑∑ 
GoodB2G2
∑∑ 
(
∑∑ 
)
∑∑ 
{
∏∏ 
string
ππ 
password
ππ 
;
ππ 
password
∫∫ 
=
∫∫ 
$str
∫∫ 
;
∫∫ 
{
ºº 	
try
ΩΩ 
{
ææ 
using
¿¿ 
(
¿¿ 
	TcpClient
¿¿  
tcpConn
¿¿! (
=
¿¿) *
new
¿¿+ .
	TcpClient
¿¿/ 8
(
¿¿8 9
$str
¿¿9 K
,
¿¿K L
$num
¿¿M R
)
¿¿R S
)
¿¿S T
{
¡¡ 
using
√√ 
(
√√ 
StreamReader
√√ '
sr
√√( *
=
√√+ ,
new
√√- 0
StreamReader
√√1 =
(
√√= >
tcpConn
√√> E
.
√√E F
	GetStream
√√F O
(
√√O P
)
√√P Q
)
√√Q R
)
√√R S
{
ƒƒ 
password
∆∆  
=
∆∆! "
sr
∆∆# %
.
∆∆% &
ReadLine
∆∆& .
(
∆∆. /
)
∆∆/ 0
;
∆∆0 1
}
«« 
}
»» 
}
…… 
catch
   
(
   
IOException
   
exceptIO
   '
)
  ' (
{
ÀÀ 
IO
ÃÃ 
.
ÃÃ 
Logger
ÃÃ 
.
ÃÃ 
Log
ÃÃ 
(
ÃÃ 
NLog
ÃÃ "
.
ÃÃ" #
LogLevel
ÃÃ# +
.
ÃÃ+ ,
Warn
ÃÃ, 0
,
ÃÃ0 1
$str
ÃÃ2 M
,
ÃÃM N
exceptIO
ÃÃO W
)
ÃÃW X
;
ÃÃX Y
}
ÕÕ 
}
ŒŒ 	
goodB2G2Private
œœ 
=
œœ 
true
œœ 
;
œœ 
GoodB2G2Sink
–– 
(
–– 
password
–– 
)
–– 
;
––  
}
—— 
private
”” 
void
”” 
GoodB2G2Sink
”” 
(
”” 
string
”” $
password
””% -
)
””. /
{
‘‘ 
if
’’ 

(
’’ 
goodB2G2Private
’’ 
)
’’ 
{
÷÷ 	
if
◊◊ 
(
◊◊ 
password
◊◊ 
!=
◊◊ 
null
◊◊  
)
◊◊  !
{
ÿÿ 
{
⁄⁄ 
using
€€ 
(
€€ &
AesCryptoServiceProvider
€€ 3
aesAlg
€€4 :
=
€€; <
new
€€= @&
AesCryptoServiceProvider
€€A Y
(
€€Y Z
)
€€Z [
)
€€[ \
{
‹‹ 
aesAlg
›› 
.
›› 
Padding
›› &
=
››' (
PaddingMode
››) 4
.
››4 5
None
››5 9
;
››9 :
aesAlg
ﬁﬁ 
.
ﬁﬁ 
Key
ﬁﬁ "
=
ﬁﬁ# $
Encoding
ﬁﬁ% -
.
ﬁﬁ- .
UTF8
ﬁﬁ. 2
.
ﬁﬁ2 3
GetBytes
ﬁﬁ3 ;
(
ﬁﬁ; <
$str
ﬁﬁ< N
)
ﬁﬁN O
;
ﬁﬁO P
ICryptoTransform
‡‡ (
	decryptor
‡‡) 2
=
‡‡3 4
aesAlg
‡‡5 ;
.
‡‡; <
CreateDecryptor
‡‡< K
(
‡‡K L
aesAlg
‡‡L R
.
‡‡R S
Key
‡‡S V
,
‡‡V W
aesAlg
‡‡X ^
.
‡‡^ _
IV
‡‡_ a
)
‡‡a b
;
‡‡b c
using
‚‚ 
(
‚‚ 
MemoryStream
‚‚ +
	msDecrypt
‚‚, 5
=
‚‚6 7
new
‚‚8 ;
MemoryStream
‚‚< H
(
‚‚H I
Encoding
‚‚I Q
.
‚‚Q R
UTF8
‚‚R V
.
‚‚V W
GetBytes
‚‚W _
(
‚‚_ `
password
‚‚` h
)
‚‚h i
)
‚‚i j
)
‚‚j k
{
„„ 
using
‰‰ !
(
‰‰" #
CryptoStream
‰‰# /
	csDecrypt
‰‰0 9
=
‰‰: ;
new
‰‰< ?
CryptoStream
‰‰@ L
(
‰‰L M
	msDecrypt
‰‰M V
,
‰‰V W
	decryptor
‰‰X a
,
‰‰a b
CryptoStreamMode
‰‰c s
.
‰‰s t
Read
‰‰t x
)
‰‰x y
)
‰‰y z
{
ÂÂ 
using
ÊÊ  %
(
ÊÊ& '
StreamReader
ÊÊ' 3
	srDecrypt
ÊÊ4 =
=
ÊÊ> ?
new
ÊÊ@ C
StreamReader
ÊÊD P
(
ÊÊP Q
	csDecrypt
ÊÊQ Z
)
ÊÊZ [
)
ÊÊ[ \
{
ÁÁ  !
password
ÍÍ$ ,
=
ÍÍ- .
	srDecrypt
ÍÍ/ 8
.
ÍÍ8 9
	ReadToEnd
ÍÍ9 B
(
ÍÍB C
)
ÍÍC D
;
ÍÍD E
}
ÎÎ  !
}
ÏÏ 
}
ÌÌ 
}
ÓÓ 
}
ÔÔ 
try
 
{
ÒÒ 
using
ÛÛ 
(
ÛÛ 
SqlConnection
ÛÛ (

connection
ÛÛ) 3
=
ÛÛ4 5
new
ÛÛ6 9
SqlConnection
ÛÛ: G
(
ÛÛG H
$str
ÛÛH ~
+ÛÛ Ä
$strÛÛÅ Ö
+ÛÛÜ á
$strÛÛà î
+ÛÛï ñ
passwordÛÛó ü
)ÛÛü †
)ÛÛ† °
{
ÙÙ 

connection
ıı "
.
ıı" #
Open
ıı# '
(
ıı' (
)
ıı( )
;
ıı) *
using
ˆˆ 
(
ˆˆ 

SqlCommand
ˆˆ )
command
ˆˆ* 1
=
ˆˆ2 3
new
ˆˆ4 7

SqlCommand
ˆˆ8 B
(
ˆˆB C
$str
ˆˆC ]
,
ˆˆ] ^

connection
ˆˆ_ i
)
ˆˆi j
)
ˆˆj k
{
˜˜ 
command
¯¯ #
.
¯¯# $
ExecuteNonQuery
¯¯$ 3
(
¯¯3 4
)
¯¯4 5
;
¯¯5 6
}
˘˘ 
}
˙˙ 
}
˚˚ 
catch
¸¸ 
(
¸¸ 
SqlException
¸¸ #
	exceptSql
¸¸$ -
)
¸¸- .
{
˝˝ 
IO
˛˛ 
.
˛˛ 
Logger
˛˛ 
.
˛˛ 
Log
˛˛ !
(
˛˛! "
NLog
˛˛" &
.
˛˛& '
LogLevel
˛˛' /
.
˛˛/ 0
Warn
˛˛0 4
,
˛˛4 5
$str
˛˛6 V
,
˛˛V W
	exceptSql
˛˛X a
)
˛˛a b
;
˛˛b c
}
ˇˇ 
}
ÄÄ 
}
ÅÅ 	
}
ÇÇ 
private
ÖÖ 
void
ÖÖ 
GoodG2B
ÖÖ 
(
ÖÖ 
)
ÖÖ 
{
ÜÜ 
string
áá 
password
áá 
;
áá 
password
ää 
=
ää 
$str
ää "
;
ää" #
goodG2BPrivate
ãã 
=
ãã 
true
ãã 
;
ãã 
GoodG2BSink
åå 
(
åå 
password
åå 
)
åå 
;
åå 
}
çç 
private
èè 
void
èè 
GoodG2BSink
èè 
(
èè 
string
èè #
password
èè$ ,
)
èè- .
{
êê 
if
ëë 

(
ëë 
goodG2BPrivate
ëë 
)
ëë 
{
íí 	
try
ìì 
{
îî 
using
ññ 
(
ññ 
SqlConnection
ññ $

connection
ññ% /
=
ññ0 1
new
ññ2 5
SqlConnection
ññ6 C
(
ññC D
$str
ññD z
+
ññ{ |
$strññ} Å
+ññÇ É
$strññÑ ê
+ññë í
passwordññì õ
)ññõ ú
)ññú ù
{
óó 

connection
òò 
.
òò 
Open
òò #
(
òò# $
)
òò$ %
;
òò% &
using
ôô 
(
ôô 

SqlCommand
ôô %
command
ôô& -
=
ôô. /
new
ôô0 3

SqlCommand
ôô4 >
(
ôô> ?
$str
ôô? Y
,
ôôY Z

connection
ôô[ e
)
ôôe f
)
ôôf g
{
öö 
command
õõ 
.
õõ  
ExecuteNonQuery
õõ  /
(
õõ/ 0
)
õõ0 1
;
õõ1 2
}
úú 
}
ùù 
}
ûû 
catch
üü 
(
üü 
SqlException
üü 
	exceptSql
üü  )
)
üü) *
{
†† 
IO
°° 
.
°° 
Logger
°° 
.
°° 
Log
°° 
(
°° 
NLog
°° "
.
°°" #
LogLevel
°°# +
.
°°+ ,
Warn
°°, 0
,
°°0 1
$str
°°2 R
,
°°R S
	exceptSql
°°T ]
)
°°] ^
;
°°^ _
}
¢¢ 
}
££ 	
}
§§ 
}¶¶ 
}ßß °8
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_22a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_22a G
:H I
AbstractTestCaseJ Z
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public   

override   
void   
Bad   
(   
)   
{!! 
string"" 
password"" 
="" 
null"" 
;"" 
password## 
=## 
$str## 
;## 
{%% 	
try&& 
{'' 
using)) 
()) 
	TcpClient))  
tcpConn))! (
=))) *
new))+ .
	TcpClient))/ 8
())8 9
$str))9 K
,))K L
$num))M R
)))R S
)))S T
{** 
using,, 
(,, 
StreamReader,, '
sr,,( *
=,,+ ,
new,,- 0
StreamReader,,1 =
(,,= >
tcpConn,,> E
.,,E F
	GetStream,,F O
(,,O P
),,P Q
),,Q R
),,R S
{-- 
password//  
=//! "
sr//# %
.//% &
ReadLine//& .
(//. /
)/// 0
;//0 1
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
$str552 M
,55M N
exceptIO55O W
)55W X
;55X Y
}66 
}77 	
badPublicStatic88 
=88 
true88 
;88 M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_22b99 I
.99I J
BadSink99J Q
(99Q R
password99R Z
)99[ \
;99\ ]
}:: 
public== 

static== 
bool==  
goodB2G1PublicStatic== +
===, -
false==. 3
;==3 4
public>> 

static>> 
bool>>  
goodB2G2PublicStatic>> +
=>>, -
false>>. 3
;>>3 4
public?? 

static?? 
bool?? 
goodG2BPublicStatic?? *
=??+ ,
false??- 2
;??2 3
publicAA 

overrideAA 
voidAA 
GoodAA 
(AA 
)AA 
{BB 
GoodB2G1CC 
(CC 
)CC 
;CC 
GoodB2G2DD 
(DD 
)DD 
;DD 
GoodG2BEE 
(EE 
)EE 
;EE 
}FF 
privateII 
voidII 
GoodB2G1II 
(II 
)II 
{JJ 
stringKK 
passwordKK 
=KK 
nullKK 
;KK 
passwordLL 
=LL 
$strLL 
;LL 
{NN 	
tryOO 
{PP 
usingRR 
(RR 
	TcpClientRR  
tcpConnRR! (
=RR) *
newRR+ .
	TcpClientRR/ 8
(RR8 9
$strRR9 K
,RRK L
$numRRM R
)RRR S
)RRS T
{SS 
usingUU 
(UU 
StreamReaderUU '
srUU( *
=UU+ ,
newUU- 0
StreamReaderUU1 =
(UU= >
tcpConnUU> E
.UUE F
	GetStreamUUF O
(UUO P
)UUP Q
)UUQ R
)UUR S
{VV 
passwordXX  
=XX! "
srXX# %
.XX% &
ReadLineXX& .
(XX. /
)XX/ 0
;XX0 1
}YY 
}ZZ 
}[[ 
catch\\ 
(\\ 
IOException\\ 
exceptIO\\ '
)\\' (
{]] 
IO^^ 
.^^ 
Logger^^ 
.^^ 
Log^^ 
(^^ 
NLog^^ "
.^^" #
LogLevel^^# +
.^^+ ,
Warn^^, 0
,^^0 1
$str^^2 M
,^^M N
exceptIO^^O W
)^^W X
;^^X Y
}__ 
}`` 	 
goodB2G1PublicStaticaa 
=aa 
falseaa $
;aa$ %M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_22bbb I
.bbI J
GoodB2G1SinkbbJ V
(bbV W
passwordbbW _
)bb` a
;bba b
}cc 
privateff 
voidff 
GoodB2G2ff 
(ff 
)ff 
{gg 
stringhh 
passwordhh 
=hh 
nullhh 
;hh 
passwordii 
=ii 
$strii 
;ii 
{kk 	
tryll 
{mm 
usingoo 
(oo 
	TcpClientoo  
tcpConnoo! (
=oo) *
newoo+ .
	TcpClientoo/ 8
(oo8 9
$stroo9 K
,ooK L
$numooM R
)ooR S
)ooS T
{pp 
usingrr 
(rr 
StreamReaderrr '
srrr( *
=rr+ ,
newrr- 0
StreamReaderrr1 =
(rr= >
tcpConnrr> E
.rrE F
	GetStreamrrF O
(rrO P
)rrP Q
)rrQ R
)rrR S
{ss 
passworduu  
=uu! "
sruu# %
.uu% &
ReadLineuu& .
(uu. /
)uu/ 0
;uu0 1
}vv 
}ww 
}xx 
catchyy 
(yy 
IOExceptionyy 
exceptIOyy '
)yy' (
{zz 
IO{{ 
.{{ 
Logger{{ 
.{{ 
Log{{ 
({{ 
NLog{{ "
.{{" #
LogLevel{{# +
.{{+ ,
Warn{{, 0
,{{0 1
$str{{2 M
,{{M N
exceptIO{{O W
){{W X
;{{X Y
}|| 
}}} 	 
goodB2G2PublicStatic~~ 
=~~ 
true~~ #
;~~# $M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_22b I
.I J
GoodB2G2SinkJ V
(V W
passwordW _
)` a
;a b
}
ÄÄ 
private
ÉÉ 
void
ÉÉ 
GoodG2B
ÉÉ 
(
ÉÉ 
)
ÉÉ 
{
ÑÑ 
string
ÖÖ 
password
ÖÖ 
=
ÖÖ 
null
ÖÖ 
;
ÖÖ 
password
àà 
=
àà 
$str
àà "
;
àà" #!
goodG2BPublicStatic
ââ 
=
ââ 
true
ââ "
;
ââ" #O
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_22b
ää I
.
ääI J
GoodG2BSink
ääJ U
(
ääU V
password
ääV ^
)
ää_ `
;
ää` a
}
ãã 
}çç 
}éé ıa
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_22b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_22b G
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   
if!! 

(!! M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_22a!! M
.!!M N
badPublicStatic!!N ]
)!!] ^
{"" 	
try## 
{$$ 
using&& 
(&& 
SqlConnection&& $

connection&&% /
=&&0 1
new&&2 5
SqlConnection&&6 C
(&&C D
$str&&D z
+&&{ |
$str	&&} Å
+
&&Ç É
$str
&&Ñ ê
+
&&ë í
password
&&ì õ
)
&&õ ú
)
&&ú ù
{'' 

connection(( 
.(( 
Open(( #
(((# $
)(($ %
;((% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
$str))? Y
,))Y Z

connection))[ e
)))e f
)))f g
{** 
command++ 
.++  
ExecuteNonQuery++  /
(++/ 0
)++0 1
;++1 2
},, 
}-- 
}.. 
catch// 
(// 
SqlException// 
	exceptSql//  )
)//) *
{00 
IO11 
.11 
Logger11 
.11 
Log11 
(11 
NLog11 "
.11" #
LogLevel11# +
.11+ ,
Warn11, 0
,110 1
$str112 R
,11R S
	exceptSql11T ]
)11] ^
;11^ _
}22 
}33 	
else44 
{55 	
password88 
=88 
null88 
;88 
}99 	
}:: 
public?? 

static?? 
void?? 
GoodB2G1Sink?? #
(??# $
string??$ *
password??+ 3
)??4 5
{@@ 
ifAA 

(AA M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_22aAA M
.AAM N 
goodB2G1PublicStaticAAN b
)AAb c
{BB 	
passwordEE 
=EE 
nullEE 
;EE 
}FF 	
elseGG 
{HH 	
ifII 
(II 
passwordII 
!=II 
nullII  
)II  !
{JJ 
{LL 
usingMM 
(MM $
AesCryptoServiceProviderMM 3
aesAlgMM4 :
=MM; <
newMM= @$
AesCryptoServiceProviderMMA Y
(MMY Z
)MMZ [
)MM[ \
{NN 
aesAlgOO 
.OO 
PaddingOO &
=OO' (
PaddingModeOO) 4
.OO4 5
NoneOO5 9
;OO9 :
aesAlgPP 
.PP 
KeyPP "
=PP# $
EncodingPP% -
.PP- .
UTF8PP. 2
.PP2 3
GetBytesPP3 ;
(PP; <
$strPP< N
)PPN O
;PPO P
ICryptoTransformRR (
	decryptorRR) 2
=RR3 4
aesAlgRR5 ;
.RR; <
CreateDecryptorRR< K
(RRK L
aesAlgRRL R
.RRR S
KeyRRS V
,RRV W
aesAlgRRX ^
.RR^ _
IVRR_ a
)RRa b
;RRb c
usingTT 
(TT 
MemoryStreamTT +
	msDecryptTT, 5
=TT6 7
newTT8 ;
MemoryStreamTT< H
(TTH I
EncodingTTI Q
.TTQ R
UTF8TTR V
.TTV W
GetBytesTTW _
(TT_ `
passwordTT` h
)TTh i
)TTi j
)TTj k
{UU 
usingVV !
(VV" #
CryptoStreamVV# /
	csDecryptVV0 9
=VV: ;
newVV< ?
CryptoStreamVV@ L
(VVL M
	msDecryptVVM V
,VVV W
	decryptorVVX a
,VVa b
CryptoStreamModeVVc s
.VVs t
ReadVVt x
)VVx y
)VVy z
{WW 
usingXX  %
(XX& '
StreamReaderXX' 3
	srDecryptXX4 =
=XX> ?
newXX@ C
StreamReaderXXD P
(XXP Q
	csDecryptXXQ Z
)XXZ [
)XX[ \
{YY  !
password\\$ ,
=\\- .
	srDecrypt\\/ 8
.\\8 9
	ReadToEnd\\9 B
(\\B C
)\\C D
;\\D E
}]]  !
}^^ 
}__ 
}`` 
}aa 
trybb 
{cc 
usingee 
(ee 
SqlConnectionee (

connectionee) 3
=ee4 5
newee6 9
SqlConnectionee: G
(eeG H
$streeH ~
+	ee Ä
$str
eeÅ Ö
+
eeÜ á
$str
eeà î
+
eeï ñ
password
eeó ü
)
eeü †
)
ee† °
{ff 

connectiongg "
.gg" #
Opengg# '
(gg' (
)gg( )
;gg) *
usinghh 
(hh 

SqlCommandhh )
commandhh* 1
=hh2 3
newhh4 7

SqlCommandhh8 B
(hhB C
$strhhC ]
,hh] ^

connectionhh_ i
)hhi j
)hhj k
{ii 
commandjj #
.jj# $
ExecuteNonQueryjj$ 3
(jj3 4
)jj4 5
;jj5 6
}kk 
}ll 
}mm 
catchnn 
(nn 
SqlExceptionnn #
	exceptSqlnn$ -
)nn- .
{oo 
IOpp 
.pp 
Loggerpp 
.pp 
Logpp !
(pp! "
NLogpp" &
.pp& '
LogLevelpp' /
.pp/ 0
Warnpp0 4
,pp4 5
$strpp6 V
,ppV W
	exceptSqlppX a
)ppa b
;ppb c
}qq 
}rr 
}ss 	
}tt 
publicww 

staticww 
voidww 
GoodB2G2Sinkww #
(ww# $
stringww$ *
passwordww+ 3
)ww4 5
{xx 
ifyy 

(yy M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_22ayy M
.yyM N 
goodB2G2PublicStaticyyN b
)yyb c
{zz 	
if{{ 
({{ 
password{{ 
!={{ 
null{{  
){{  !
{|| 
{~~ 
using 
( $
AesCryptoServiceProvider 3
aesAlg4 :
=; <
new= @$
AesCryptoServiceProviderA Y
(Y Z
)Z [
)[ \
{
ÄÄ 
aesAlg
ÅÅ 
.
ÅÅ 
Padding
ÅÅ &
=
ÅÅ' (
PaddingMode
ÅÅ) 4
.
ÅÅ4 5
None
ÅÅ5 9
;
ÅÅ9 :
aesAlg
ÇÇ 
.
ÇÇ 
Key
ÇÇ "
=
ÇÇ# $
Encoding
ÇÇ% -
.
ÇÇ- .
UTF8
ÇÇ. 2
.
ÇÇ2 3
GetBytes
ÇÇ3 ;
(
ÇÇ; <
$str
ÇÇ< N
)
ÇÇN O
;
ÇÇO P
ICryptoTransform
ÑÑ (
	decryptor
ÑÑ) 2
=
ÑÑ3 4
aesAlg
ÑÑ5 ;
.
ÑÑ; <
CreateDecryptor
ÑÑ< K
(
ÑÑK L
aesAlg
ÑÑL R
.
ÑÑR S
Key
ÑÑS V
,
ÑÑV W
aesAlg
ÑÑX ^
.
ÑÑ^ _
IV
ÑÑ_ a
)
ÑÑa b
;
ÑÑb c
using
ÜÜ 
(
ÜÜ 
MemoryStream
ÜÜ +
	msDecrypt
ÜÜ, 5
=
ÜÜ6 7
new
ÜÜ8 ;
MemoryStream
ÜÜ< H
(
ÜÜH I
Encoding
ÜÜI Q
.
ÜÜQ R
UTF8
ÜÜR V
.
ÜÜV W
GetBytes
ÜÜW _
(
ÜÜ_ `
password
ÜÜ` h
)
ÜÜh i
)
ÜÜi j
)
ÜÜj k
{
áá 
using
àà !
(
àà" #
CryptoStream
àà# /
	csDecrypt
àà0 9
=
àà: ;
new
àà< ?
CryptoStream
àà@ L
(
ààL M
	msDecrypt
ààM V
,
ààV W
	decryptor
ààX a
,
ààa b
CryptoStreamMode
ààc s
.
ààs t
Read
ààt x
)
ààx y
)
àày z
{
ââ 
using
ää  %
(
ää& '
StreamReader
ää' 3
	srDecrypt
ää4 =
=
ää> ?
new
ää@ C
StreamReader
ääD P
(
ääP Q
	csDecrypt
ääQ Z
)
ääZ [
)
ää[ \
{
ãã  !
password
éé$ ,
=
éé- .
	srDecrypt
éé/ 8
.
éé8 9
	ReadToEnd
éé9 B
(
ééB C
)
ééC D
;
ééD E
}
èè  !
}
êê 
}
ëë 
}
íí 
}
ìì 
try
îî 
{
ïï 
using
óó 
(
óó 
SqlConnection
óó (

connection
óó) 3
=
óó4 5
new
óó6 9
SqlConnection
óó: G
(
óóG H
$str
óóH ~
+óó Ä
$stróóÅ Ö
+óóÜ á
$stróóà î
+óóï ñ
passwordóóó ü
)óóü †
)óó† °
{
òò 

connection
ôô "
.
ôô" #
Open
ôô# '
(
ôô' (
)
ôô( )
;
ôô) *
using
öö 
(
öö 

SqlCommand
öö )
command
öö* 1
=
öö2 3
new
öö4 7

SqlCommand
öö8 B
(
ööB C
$str
ööC ]
,
öö] ^

connection
öö_ i
)
ööi j
)
ööj k
{
õõ 
command
úú #
.
úú# $
ExecuteNonQuery
úú$ 3
(
úú3 4
)
úú4 5
;
úú5 6
}
ùù 
}
ûû 
}
üü 
catch
†† 
(
†† 
SqlException
†† #
	exceptSql
††$ -
)
††- .
{
°° 
IO
¢¢ 
.
¢¢ 
Logger
¢¢ 
.
¢¢ 
Log
¢¢ !
(
¢¢! "
NLog
¢¢" &
.
¢¢& '
LogLevel
¢¢' /
.
¢¢/ 0
Warn
¢¢0 4
,
¢¢4 5
$str
¢¢6 V
,
¢¢V W
	exceptSql
¢¢X a
)
¢¢a b
;
¢¢b c
}
££ 
}
§§ 
}
•• 	
else
¶¶ 
{
ßß 	
password
™™ 
=
™™ 
null
™™ 
;
™™ 
}
´´ 	
}
¨¨ 
public
ØØ 

static
ØØ 
void
ØØ 
GoodG2BSink
ØØ "
(
ØØ" #
string
ØØ# )
password
ØØ* 2
)
ØØ3 4
{
∞∞ 
if
±± 

(
±± O
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_22a
±± M
.
±±M N!
goodG2BPublicStatic
±±N a
)
±±a b
{
≤≤ 	
try
≥≥ 
{
¥¥ 
using
∂∂ 
(
∂∂ 
SqlConnection
∂∂ $

connection
∂∂% /
=
∂∂0 1
new
∂∂2 5
SqlConnection
∂∂6 C
(
∂∂C D
$str
∂∂D z
+
∂∂{ |
$str∂∂} Å
+∂∂Ç É
$str∂∂Ñ ê
+∂∂ë í
password∂∂ì õ
)∂∂õ ú
)∂∂ú ù
{
∑∑ 

connection
∏∏ 
.
∏∏ 
Open
∏∏ #
(
∏∏# $
)
∏∏$ %
;
∏∏% &
using
ππ 
(
ππ 

SqlCommand
ππ %
command
ππ& -
=
ππ. /
new
ππ0 3

SqlCommand
ππ4 >
(
ππ> ?
$str
ππ? Y
,
ππY Z

connection
ππ[ e
)
ππe f
)
ππf g
{
∫∫ 
command
ªª 
.
ªª  
ExecuteNonQuery
ªª  /
(
ªª/ 0
)
ªª0 1
;
ªª1 2
}
ºº 
}
ΩΩ 
}
ææ 
catch
øø 
(
øø 
SqlException
øø 
	exceptSql
øø  )
)
øø) *
{
¿¿ 
IO
¡¡ 
.
¡¡ 
Logger
¡¡ 
.
¡¡ 
Log
¡¡ 
(
¡¡ 
NLog
¡¡ "
.
¡¡" #
LogLevel
¡¡# +
.
¡¡+ ,
Warn
¡¡, 0
,
¡¡0 1
$str
¡¡2 R
,
¡¡R S
	exceptSql
¡¡T ]
)
¡¡] ^
;
¡¡^ _
}
¬¬ 
}
√√ 	
else
ƒƒ 
{
≈≈ 	
password
»» 
=
»» 
null
»» 
;
»» 
}
…… 	
}
   
}ÃÃ 
}ÕÕ ÍX
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_31.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_31 F
:G H
AbstractTestCaseI Y
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
passwordCopy## 
;## 
{$$ 	
string%% 
password%% 
;%% 
password&& 
=&& 
$str&& 
;&& 
{(( 
try)) 
{** 
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
new,,/ 2
	TcpClient,,3 <
(,,< =
$str,,= O
,,,O P
$num,,Q V
),,V W
),,W X
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
password22 $
=22% &
sr22' )
.22) *
ReadLine22* 2
(222 3
)223 4
;224 5
}33 
}44 
}55 
catch66 
(66 
IOException66 "
exceptIO66# +
)66+ ,
{77 
IO88 
.88 
Logger88 
.88 
Log88 !
(88! "
NLog88" &
.88& '
LogLevel88' /
.88/ 0
Warn880 4
,884 5
$str886 Q
,88Q R
exceptIO88S [
)88[ \
;88\ ]
}99 
}:: 
passwordCopy;; 
=;; 
password;; #
;;;# $
}<< 	
{== 	
string>> 
password>> 
=>> 
passwordCopy>> *
;>>* +
try?? 
{@@ 
usingBB 
(BB 
SqlConnectionBB $

connectionBB% /
=BB0 1
newBB2 5
SqlConnectionBB6 C
(BBC D
$strBBD z
+BB{ |
$str	BB} Å
+
BBÇ É
$str
BBÑ ê
+
BBë í
password
BBì õ
)
BBõ ú
)
BBú ù
{CC 

connectionDD 
.DD 
OpenDD #
(DD# $
)DD$ %
;DD% &
usingEE 
(EE 

SqlCommandEE %
commandEE& -
=EE. /
newEE0 3

SqlCommandEE4 >
(EE> ?
$strEE? Y
,EEY Z

connectionEE[ e
)EEe f
)EEf g
{FF 
commandGG 
.GG  
ExecuteNonQueryGG  /
(GG/ 0
)GG0 1
;GG1 2
}HH 
}II 
}JJ 
catchKK 
(KK 
SqlExceptionKK 
	exceptSqlKK  )
)KK) *
{LL 
IOMM 
.MM 
LoggerMM 
.MM 
LogMM 
(MM 
NLogMM "
.MM" #
LogLevelMM# +
.MM+ ,
WarnMM, 0
,MM0 1
$strMM2 R
,MMR S
	exceptSqlMMT ]
)MM] ^
;MM^ _
}NN 
}OO 	
}PP 
publicSS 

overrideSS 
voidSS 
GoodSS 
(SS 
)SS 
{TT 
GoodG2BUU 
(UU 
)UU 
;UU 
GoodB2GVV 
(VV 
)VV 
;VV 
}WW 
privateZZ 
voidZZ 
GoodG2BZZ 
(ZZ 
)ZZ 
{[[ 
string\\ 
passwordCopy\\ 
;\\ 
{]] 	
string^^ 
password^^ 
;^^ 
passwordaa 
=aa 
$straa &
;aa& '
passwordCopybb 
=bb 
passwordbb #
;bb# $
}cc 	
{dd 	
stringee 
passwordee 
=ee 
passwordCopyee *
;ee* +
tryff 
{gg 
usingii 
(ii 
SqlConnectionii $

connectionii% /
=ii0 1
newii2 5
SqlConnectionii6 C
(iiC D
$striiD z
+ii{ |
$str	ii} Å
+
iiÇ É
$str
iiÑ ê
+
iië í
password
iiì õ
)
iiõ ú
)
iiú ù
{jj 

connectionkk 
.kk 
Openkk #
(kk# $
)kk$ %
;kk% &
usingll 
(ll 

SqlCommandll %
commandll& -
=ll. /
newll0 3

SqlCommandll4 >
(ll> ?
$strll? Y
,llY Z

connectionll[ e
)lle f
)llf g
{mm 
commandnn 
.nn  
ExecuteNonQuerynn  /
(nn/ 0
)nn0 1
;nn1 2
}oo 
}pp 
}qq 
catchrr 
(rr 
SqlExceptionrr 
	exceptSqlrr  )
)rr) *
{ss 
IOtt 
.tt 
Loggertt 
.tt 
Logtt 
(tt 
NLogtt "
.tt" #
LogLeveltt# +
.tt+ ,
Warntt, 0
,tt0 1
$strtt2 R
,ttR S
	exceptSqlttT ]
)tt] ^
;tt^ _
}uu 
}vv 	
}ww 
privatezz 
voidzz 
GoodB2Gzz 
(zz 
)zz 
{{{ 
string|| 
passwordCopy|| 
;|| 
{}} 	
string~~ 
password~~ 
;~~ 
password 
= 
$str 
; 
{
ÅÅ 
try
ÇÇ 
{
ÉÉ 
using
ÖÖ 
(
ÖÖ 
	TcpClient
ÖÖ $
tcpConn
ÖÖ% ,
=
ÖÖ- .
new
ÖÖ/ 2
	TcpClient
ÖÖ3 <
(
ÖÖ< =
$str
ÖÖ= O
,
ÖÖO P
$num
ÖÖQ V
)
ÖÖV W
)
ÖÖW X
{
ÜÜ 
using
àà 
(
àà 
StreamReader
àà +
sr
àà, .
=
àà/ 0
new
àà1 4
StreamReader
àà5 A
(
ààA B
tcpConn
ààB I
.
ààI J
	GetStream
ààJ S
(
ààS T
)
ààT U
)
ààU V
)
ààV W
{
ââ 
password
ãã $
=
ãã% &
sr
ãã' )
.
ãã) *
ReadLine
ãã* 2
(
ãã2 3
)
ãã3 4
;
ãã4 5
}
åå 
}
çç 
}
éé 
catch
èè 
(
èè 
IOException
èè "
exceptIO
èè# +
)
èè+ ,
{
êê 
IO
ëë 
.
ëë 
Logger
ëë 
.
ëë 
Log
ëë !
(
ëë! "
NLog
ëë" &
.
ëë& '
LogLevel
ëë' /
.
ëë/ 0
Warn
ëë0 4
,
ëë4 5
$str
ëë6 Q
,
ëëQ R
exceptIO
ëëS [
)
ëë[ \
;
ëë\ ]
}
íí 
}
ìì 
passwordCopy
îî 
=
îî 
password
îî #
;
îî# $
}
ïï 	
{
ññ 	
string
óó 
password
óó 
=
óó 
passwordCopy
óó *
;
óó* +
if
òò 
(
òò 
password
òò 
!=
òò 
null
òò  
)
òò  !
{
ôô 
{
õõ 
using
úú 
(
úú &
AesCryptoServiceProvider
úú 3
aesAlg
úú4 :
=
úú; <
new
úú= @&
AesCryptoServiceProvider
úúA Y
(
úúY Z
)
úúZ [
)
úú[ \
{
ùù 
aesAlg
ûû 
.
ûû 
Padding
ûû &
=
ûû' (
PaddingMode
ûû) 4
.
ûû4 5
None
ûû5 9
;
ûû9 :
aesAlg
üü 
.
üü 
Key
üü "
=
üü# $
Encoding
üü% -
.
üü- .
UTF8
üü. 2
.
üü2 3
GetBytes
üü3 ;
(
üü; <
$str
üü< N
)
üüN O
;
üüO P
ICryptoTransform
°° (
	decryptor
°°) 2
=
°°3 4
aesAlg
°°5 ;
.
°°; <
CreateDecryptor
°°< K
(
°°K L
aesAlg
°°L R
.
°°R S
Key
°°S V
,
°°V W
aesAlg
°°X ^
.
°°^ _
IV
°°_ a
)
°°a b
;
°°b c
using
££ 
(
££ 
MemoryStream
££ +
	msDecrypt
££, 5
=
££6 7
new
££8 ;
MemoryStream
££< H
(
££H I
Encoding
££I Q
.
££Q R
UTF8
££R V
.
££V W
GetBytes
££W _
(
££_ `
password
££` h
)
££h i
)
££i j
)
££j k
{
§§ 
using
•• !
(
••" #
CryptoStream
••# /
	csDecrypt
••0 9
=
••: ;
new
••< ?
CryptoStream
••@ L
(
••L M
	msDecrypt
••M V
,
••V W
	decryptor
••X a
,
••a b
CryptoStreamMode
••c s
.
••s t
Read
••t x
)
••x y
)
••y z
{
¶¶ 
using
ßß  %
(
ßß& '
StreamReader
ßß' 3
	srDecrypt
ßß4 =
=
ßß> ?
new
ßß@ C
StreamReader
ßßD P
(
ßßP Q
	csDecrypt
ßßQ Z
)
ßßZ [
)
ßß[ \
{
®®  !
password
´´$ ,
=
´´- .
	srDecrypt
´´/ 8
.
´´8 9
	ReadToEnd
´´9 B
(
´´B C
)
´´C D
;
´´D E
}
¨¨  !
}
≠≠ 
}
ÆÆ 
}
ØØ 
}
∞∞ 
try
±± 
{
≤≤ 
using
¥¥ 
(
¥¥ 
SqlConnection
¥¥ (

connection
¥¥) 3
=
¥¥4 5
new
¥¥6 9
SqlConnection
¥¥: G
(
¥¥G H
$str
¥¥H ~
+¥¥ Ä
$str¥¥Å Ö
+¥¥Ü á
$str¥¥à î
+¥¥ï ñ
password¥¥ó ü
)¥¥ü †
)¥¥† °
{
µµ 

connection
∂∂ "
.
∂∂" #
Open
∂∂# '
(
∂∂' (
)
∂∂( )
;
∂∂) *
using
∑∑ 
(
∑∑ 

SqlCommand
∑∑ )
command
∑∑* 1
=
∑∑2 3
new
∑∑4 7

SqlCommand
∑∑8 B
(
∑∑B C
$str
∑∑C ]
,
∑∑] ^

connection
∑∑_ i
)
∑∑i j
)
∑∑j k
{
∏∏ 
command
ππ #
.
ππ# $
ExecuteNonQuery
ππ$ 3
(
ππ3 4
)
ππ4 5
;
ππ5 6
}
∫∫ 
}
ªª 
}
ºº 
catch
ΩΩ 
(
ΩΩ 
SqlException
ΩΩ #
	exceptSql
ΩΩ$ -
)
ΩΩ- .
{
ææ 
IO
øø 
.
øø 
Logger
øø 
.
øø 
Log
øø !
(
øø! "
NLog
øø" &
.
øø& '
LogLevel
øø' /
.
øø/ 0
Warn
øø0 4
,
øø4 5
$str
øø6 V
,
øøV W
	exceptSql
øøX a
)
øøa b
;
øøb c
}
¿¿ 
}
¡¡ 
}
¬¬ 	
}
√√ 
}≈≈ 
}∆∆ âX
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_41.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_41 F
:G H
AbstractTestCaseI Y
{ 
private!! 
static!! 
void!! 
BadSink!! 
(!!  
string!!  &
password!!' /
)!!0 1
{"" 
try## 
{$$ 	
using&& 
(&& 
SqlConnection&&  

connection&&! +
=&&, -
new&&. 1
SqlConnection&&2 ?
(&&? @
$str&&@ v
+&&w x
$str&&y }
+&&~ 
$str
&&Ä å
+
&&ç é
password
&&è ó
)
&&ó ò
)
&&ò ô
{'' 

connection(( 
.(( 
Open(( 
(((  
)((  !
;((! "
using)) 
()) 

SqlCommand)) !
command))" )
=))* +
new)), /

SqlCommand))0 :
()): ;
$str)); U
,))U V

connection))W a
)))a b
)))b c
{** 
command++ 
.++ 
ExecuteNonQuery++ +
(+++ ,
)++, -
;++- .
},, 
}-- 
}.. 	
catch// 
(// 
SqlException// 
	exceptSql// %
)//% &
{00 	
IO11 
.11 
Logger11 
.11 
Log11 
(11 
NLog11 
.11 
LogLevel11 '
.11' (
Warn11( ,
,11, -
$str11. N
,11N O
	exceptSql11P Y
)11Y Z
;11Z [
}22 	
}33 
public55 

override55 
void55 
Bad55 
(55 
)55 
{66 
string77 
password77 
;77 
password88 
=88 
$str88 
;88 
{:: 	
try;; 
{<< 
using>> 
(>> 
	TcpClient>>  
tcpConn>>! (
=>>) *
new>>+ .
	TcpClient>>/ 8
(>>8 9
$str>>9 K
,>>K L
$num>>M R
)>>R S
)>>S T
{?? 
usingAA 
(AA 
StreamReaderAA '
srAA( *
=AA+ ,
newAA- 0
StreamReaderAA1 =
(AA= >
tcpConnAA> E
.AAE F
	GetStreamAAF O
(AAO P
)AAP Q
)AAQ R
)AAR S
{BB 
passwordDD  
=DD! "
srDD# %
.DD% &
ReadLineDD& .
(DD. /
)DD/ 0
;DD0 1
}EE 
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH 
exceptIOHH '
)HH' (
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ 
(JJ 
NLogJJ "
.JJ" #
LogLevelJJ# +
.JJ+ ,
WarnJJ, 0
,JJ0 1
$strJJ2 M
,JJM N
exceptIOJJO W
)JJW X
;JJX Y
}KK 
}LL 	
BadSinkMM 
(MM 
passwordMM 
)MM 
;MM 
}NN 
publicQQ 

overrideQQ 
voidQQ 
GoodQQ 
(QQ 
)QQ 
{RR 
GoodG2BSS 
(SS 
)SS 
;SS 
GoodB2GTT 
(TT 
)TT 
;TT 
}UU 
privateWW 
staticWW 
voidWW 
GoodG2BSinkWW #
(WW# $
stringWW$ *
passwordWW+ 3
)WW4 5
{XX 
tryYY 
{ZZ 	
using\\ 
(\\ 
SqlConnection\\  

connection\\! +
=\\, -
new\\. 1
SqlConnection\\2 ?
(\\? @
$str\\@ v
+\\w x
$str\\y }
+\\~ 
$str
\\Ä å
+
\\ç é
password
\\è ó
)
\\ó ò
)
\\ò ô
{]] 

connection^^ 
.^^ 
Open^^ 
(^^  
)^^  !
;^^! "
using__ 
(__ 

SqlCommand__ !
command__" )
=__* +
new__, /

SqlCommand__0 :
(__: ;
$str__; U
,__U V

connection__W a
)__a b
)__b c
{`` 
commandaa 
.aa 
ExecuteNonQueryaa +
(aa+ ,
)aa, -
;aa- .
}bb 
}cc 
}dd 	
catchee 
(ee 
SqlExceptionee 
	exceptSqlee %
)ee% &
{ff 	
IOgg 
.gg 
Loggergg 
.gg 
Loggg 
(gg 
NLoggg 
.gg 
LogLevelgg '
.gg' (
Warngg( ,
,gg, -
$strgg. N
,ggN O
	exceptSqlggP Y
)ggY Z
;ggZ [
}hh 	
}ii 
privatell 
staticll 
voidll 
GoodG2Bll 
(ll  
)ll  !
{mm 
stringnn 
passwordnn 
;nn 
passwordqq 
=qq 
$strqq "
;qq" #
GoodG2BSinkrr 
(rr 
passwordrr 
)rr 
;rr  
}ss 
privateuu 
staticuu 
voiduu 
GoodB2GSinkuu #
(uu# $
stringuu$ *
passworduu+ 3
)uu4 5
{vv 
ifww 

(ww 
passwordww 
!=ww 
nullww 
)ww 
{xx 	
{zz 
using{{ 
({{ $
AesCryptoServiceProvider{{ /
aesAlg{{0 6
={{7 8
new{{9 <$
AesCryptoServiceProvider{{= U
({{U V
){{V W
){{W X
{|| 
aesAlg}} 
.}} 
Padding}} "
=}}# $
PaddingMode}}% 0
.}}0 1
None}}1 5
;}}5 6
aesAlg~~ 
.~~ 
Key~~ 
=~~  
Encoding~~! )
.~~) *
UTF8~~* .
.~~. /
GetBytes~~/ 7
(~~7 8
$str~~8 J
)~~J K
;~~K L
ICryptoTransform
ÄÄ $
	decryptor
ÄÄ% .
=
ÄÄ/ 0
aesAlg
ÄÄ1 7
.
ÄÄ7 8
CreateDecryptor
ÄÄ8 G
(
ÄÄG H
aesAlg
ÄÄH N
.
ÄÄN O
Key
ÄÄO R
,
ÄÄR S
aesAlg
ÄÄT Z
.
ÄÄZ [
IV
ÄÄ[ ]
)
ÄÄ] ^
;
ÄÄ^ _
using
ÇÇ 
(
ÇÇ 
MemoryStream
ÇÇ '
	msDecrypt
ÇÇ( 1
=
ÇÇ2 3
new
ÇÇ4 7
MemoryStream
ÇÇ8 D
(
ÇÇD E
Encoding
ÇÇE M
.
ÇÇM N
UTF8
ÇÇN R
.
ÇÇR S
GetBytes
ÇÇS [
(
ÇÇ[ \
password
ÇÇ\ d
)
ÇÇd e
)
ÇÇe f
)
ÇÇf g
{
ÉÉ 
using
ÑÑ 
(
ÑÑ 
CryptoStream
ÑÑ +
	csDecrypt
ÑÑ, 5
=
ÑÑ6 7
new
ÑÑ8 ;
CryptoStream
ÑÑ< H
(
ÑÑH I
	msDecrypt
ÑÑI R
,
ÑÑR S
	decryptor
ÑÑT ]
,
ÑÑ] ^
CryptoStreamMode
ÑÑ_ o
.
ÑÑo p
Read
ÑÑp t
)
ÑÑt u
)
ÑÑu v
{
ÖÖ 
using
ÜÜ !
(
ÜÜ" #
StreamReader
ÜÜ# /
	srDecrypt
ÜÜ0 9
=
ÜÜ: ;
new
ÜÜ< ?
StreamReader
ÜÜ@ L
(
ÜÜL M
	csDecrypt
ÜÜM V
)
ÜÜV W
)
ÜÜW X
{
áá 
password
ää  (
=
ää) *
	srDecrypt
ää+ 4
.
ää4 5
	ReadToEnd
ää5 >
(
ää> ?
)
ää? @
;
ää@ A
}
ãã 
}
åå 
}
çç 
}
éé 
}
èè 
try
êê 
{
ëë 
using
ìì 
(
ìì 
SqlConnection
ìì $

connection
ìì% /
=
ìì0 1
new
ìì2 5
SqlConnection
ìì6 C
(
ììC D
$str
ììD z
+
ìì{ |
$strìì} Å
+ììÇ É
$strììÑ ê
+ììë í
passwordììì õ
)ììõ ú
)ììú ù
{
îî 

connection
ïï 
.
ïï 
Open
ïï #
(
ïï# $
)
ïï$ %
;
ïï% &
using
ññ 
(
ññ 

SqlCommand
ññ %
command
ññ& -
=
ññ. /
new
ññ0 3

SqlCommand
ññ4 >
(
ññ> ?
$str
ññ? Y
,
ññY Z

connection
ññ[ e
)
ññe f
)
ññf g
{
óó 
command
òò 
.
òò  
ExecuteNonQuery
òò  /
(
òò/ 0
)
òò0 1
;
òò1 2
}
ôô 
}
öö 
}
õõ 
catch
úú 
(
úú 
SqlException
úú 
	exceptSql
úú  )
)
úú) *
{
ùù 
IO
ûû 
.
ûû 
Logger
ûû 
.
ûû 
Log
ûû 
(
ûû 
NLog
ûû "
.
ûû" #
LogLevel
ûû# +
.
ûû+ ,
Warn
ûû, 0
,
ûû0 1
$str
ûû2 R
,
ûûR S
	exceptSql
ûûT ]
)
ûû] ^
;
ûû^ _
}
üü 
}
†† 	
}
°° 
private
§§ 
static
§§ 
void
§§ 
GoodB2G
§§ 
(
§§  
)
§§  !
{
•• 
string
¶¶ 
password
¶¶ 
;
¶¶ 
password
ßß 
=
ßß 
$str
ßß 
;
ßß 
{
©© 	
try
™™ 
{
´´ 
using
≠≠ 
(
≠≠ 
	TcpClient
≠≠  
tcpConn
≠≠! (
=
≠≠) *
new
≠≠+ .
	TcpClient
≠≠/ 8
(
≠≠8 9
$str
≠≠9 K
,
≠≠K L
$num
≠≠M R
)
≠≠R S
)
≠≠S T
{
ÆÆ 
using
∞∞ 
(
∞∞ 
StreamReader
∞∞ '
sr
∞∞( *
=
∞∞+ ,
new
∞∞- 0
StreamReader
∞∞1 =
(
∞∞= >
tcpConn
∞∞> E
.
∞∞E F
	GetStream
∞∞F O
(
∞∞O P
)
∞∞P Q
)
∞∞Q R
)
∞∞R S
{
±± 
password
≥≥  
=
≥≥! "
sr
≥≥# %
.
≥≥% &
ReadLine
≥≥& .
(
≥≥. /
)
≥≥/ 0
;
≥≥0 1
}
¥¥ 
}
µµ 
}
∂∂ 
catch
∑∑ 
(
∑∑ 
IOException
∑∑ 
exceptIO
∑∑ '
)
∑∑' (
{
∏∏ 
IO
ππ 
.
ππ 
Logger
ππ 
.
ππ 
Log
ππ 
(
ππ 
NLog
ππ "
.
ππ" #
LogLevel
ππ# +
.
ππ+ ,
Warn
ππ, 0
,
ππ0 1
$str
ππ2 M
,
ππM N
exceptIO
ππO W
)
ππW X
;
ππX Y
}
∫∫ 
}
ªª 	
GoodB2GSink
ºº 
(
ºº 
password
ºº 
)
ºº 
;
ºº  
}
ΩΩ 
}øø 
}¿¿ €Y
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_42.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_42 F
:G H
AbstractTestCaseI Y
{ 
private!! 
static!! 
string!! 
	BadSource!! #
(!!# $
)!!$ %
{"" 
string## 
password## 
;## 
password$$ 
=$$ 
$str$$ 
;$$ 
{&& 	
try'' 
{(( 
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
new**+ .
	TcpClient**/ 8
(**8 9
$str**9 K
,**K L
$num**M R
)**R S
)**S T
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
tcpConn--> E
.--E F
	GetStream--F O
(--O P
)--P Q
)--Q R
)--R S
{.. 
password00  
=00! "
sr00# %
.00% &
ReadLine00& .
(00. /
)00/ 0
;000 1
}11 
}22 
}33 
catch44 
(44 
IOException44 
exceptIO44 '
)44' (
{55 
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 "
.66" #
LogLevel66# +
.66+ ,
Warn66, 0
,660 1
$str662 M
,66M N
exceptIO66O W
)66W X
;66X Y
}77 
}88 	
return99 
password99 
;99 
}:: 
public<< 

override<< 
void<< 
Bad<< 
(<< 
)<< 
{== 
string>> 
password>> 
=>> 
	BadSource>> #
(>># $
)>>$ %
;>>% &
try?? 
{@@ 	
usingBB 
(BB 
SqlConnectionBB  

connectionBB! +
=BB, -
newBB. 1
SqlConnectionBB2 ?
(BB? @
$strBB@ v
+BBw x
$strBBy }
+BB~ 
$str
BBÄ å
+
BBç é
password
BBè ó
)
BBó ò
)
BBò ô
{CC 

connectionDD 
.DD 
OpenDD 
(DD  
)DD  !
;DD! "
usingEE 
(EE 

SqlCommandEE !
commandEE" )
=EE* +
newEE, /

SqlCommandEE0 :
(EE: ;
$strEE; U
,EEU V

connectionEEW a
)EEa b
)EEb c
{FF 
commandGG 
.GG 
ExecuteNonQueryGG +
(GG+ ,
)GG, -
;GG- .
}HH 
}II 
}JJ 	
catchKK 
(KK 
SqlExceptionKK 
	exceptSqlKK %
)KK% &
{LL 	
IOMM 
.MM 
LoggerMM 
.MM 
LogMM 
(MM 
NLogMM 
.MM 
LogLevelMM '
.MM' (
WarnMM( ,
,MM, -
$strMM. N
,MMN O
	exceptSqlMMP Y
)MMY Z
;MMZ [
}NN 	
}OO 
privateSS 
staticSS 
stringSS 
GoodG2BSourceSS '
(SS' (
)SS( )
{TT 
stringUU 
passwordUU 
;UU 
passwordXX 
=XX 
$strXX "
;XX" #
returnYY 
passwordYY 
;YY 
}ZZ 
private\\ 
static\\ 
void\\ 
GoodG2B\\ 
(\\  
)\\  !
{]] 
string^^ 
password^^ 
=^^ 
GoodG2BSource^^ '
(^^' (
)^^( )
;^^) *
try__ 
{`` 	
usingbb 
(bb 
SqlConnectionbb  

connectionbb! +
=bb, -
newbb. 1
SqlConnectionbb2 ?
(bb? @
$strbb@ v
+bbw x
$strbby }
+bb~ 
$str
bbÄ å
+
bbç é
password
bbè ó
)
bbó ò
)
bbò ô
{cc 

connectiondd 
.dd 
Opendd 
(dd  
)dd  !
;dd! "
usingee 
(ee 

SqlCommandee !
commandee" )
=ee* +
newee, /

SqlCommandee0 :
(ee: ;
$stree; U
,eeU V

connectioneeW a
)eea b
)eeb c
{ff 
commandgg 
.gg 
ExecuteNonQuerygg +
(gg+ ,
)gg, -
;gg- .
}hh 
}ii 
}jj 	
catchkk 
(kk 
SqlExceptionkk 
	exceptSqlkk %
)kk% &
{ll 	
IOmm 
.mm 
Loggermm 
.mm 
Logmm 
(mm 
NLogmm 
.mm 
LogLevelmm '
.mm' (
Warnmm( ,
,mm, -
$strmm. N
,mmN O
	exceptSqlmmP Y
)mmY Z
;mmZ [
}nn 	
}oo 
privaterr 
staticrr 
stringrr 
GoodB2GSourcerr '
(rr' (
)rr( )
{ss 
stringtt 
passwordtt 
;tt 
passworduu 
=uu 
$struu 
;uu 
{ww 	
tryxx 
{yy 
using{{ 
({{ 
	TcpClient{{  
tcpConn{{! (
={{) *
new{{+ .
	TcpClient{{/ 8
({{8 9
$str{{9 K
,{{K L
$num{{M R
){{R S
){{S T
{|| 
using~~ 
(~~ 
StreamReader~~ '
sr~~( *
=~~+ ,
new~~- 0
StreamReader~~1 =
(~~= >
tcpConn~~> E
.~~E F
	GetStream~~F O
(~~O P
)~~P Q
)~~Q R
)~~R S
{ 
password
ÅÅ  
=
ÅÅ! "
sr
ÅÅ# %
.
ÅÅ% &
ReadLine
ÅÅ& .
(
ÅÅ. /
)
ÅÅ/ 0
;
ÅÅ0 1
}
ÇÇ 
}
ÉÉ 
}
ÑÑ 
catch
ÖÖ 
(
ÖÖ 
IOException
ÖÖ 
exceptIO
ÖÖ '
)
ÖÖ' (
{
ÜÜ 
IO
áá 
.
áá 
Logger
áá 
.
áá 
Log
áá 
(
áá 
NLog
áá "
.
áá" #
LogLevel
áá# +
.
áá+ ,
Warn
áá, 0
,
áá0 1
$str
áá2 M
,
ááM N
exceptIO
ááO W
)
ááW X
;
ááX Y
}
àà 
}
ââ 	
return
ää 
password
ää 
;
ää 
}
ãã 
private
çç 
static
çç 
void
çç 
GoodB2G
çç 
(
çç  
)
çç  !
{
éé 
string
èè 
password
èè 
=
èè 
GoodB2GSource
èè '
(
èè' (
)
èè( )
;
èè) *
if
êê 

(
êê 
password
êê 
!=
êê 
null
êê 
)
êê 
{
ëë 	
{
ìì 
using
îî 
(
îî &
AesCryptoServiceProvider
îî /
aesAlg
îî0 6
=
îî7 8
new
îî9 <&
AesCryptoServiceProvider
îî= U
(
îîU V
)
îîV W
)
îîW X
{
ïï 
aesAlg
ññ 
.
ññ 
Padding
ññ "
=
ññ# $
PaddingMode
ññ% 0
.
ññ0 1
None
ññ1 5
;
ññ5 6
aesAlg
óó 
.
óó 
Key
óó 
=
óó  
Encoding
óó! )
.
óó) *
UTF8
óó* .
.
óó. /
GetBytes
óó/ 7
(
óó7 8
$str
óó8 J
)
óóJ K
;
óóK L
ICryptoTransform
ôô $
	decryptor
ôô% .
=
ôô/ 0
aesAlg
ôô1 7
.
ôô7 8
CreateDecryptor
ôô8 G
(
ôôG H
aesAlg
ôôH N
.
ôôN O
Key
ôôO R
,
ôôR S
aesAlg
ôôT Z
.
ôôZ [
IV
ôô[ ]
)
ôô] ^
;
ôô^ _
using
õõ 
(
õõ 
MemoryStream
õõ '
	msDecrypt
õõ( 1
=
õõ2 3
new
õõ4 7
MemoryStream
õõ8 D
(
õõD E
Encoding
õõE M
.
õõM N
UTF8
õõN R
.
õõR S
GetBytes
õõS [
(
õõ[ \
password
õõ\ d
)
õõd e
)
õõe f
)
õõf g
{
úú 
using
ùù 
(
ùù 
CryptoStream
ùù +
	csDecrypt
ùù, 5
=
ùù6 7
new
ùù8 ;
CryptoStream
ùù< H
(
ùùH I
	msDecrypt
ùùI R
,
ùùR S
	decryptor
ùùT ]
,
ùù] ^
CryptoStreamMode
ùù_ o
.
ùùo p
Read
ùùp t
)
ùùt u
)
ùùu v
{
ûû 
using
üü !
(
üü" #
StreamReader
üü# /
	srDecrypt
üü0 9
=
üü: ;
new
üü< ?
StreamReader
üü@ L
(
üüL M
	csDecrypt
üüM V
)
üüV W
)
üüW X
{
†† 
password
££  (
=
££) *
	srDecrypt
££+ 4
.
££4 5
	ReadToEnd
££5 >
(
££> ?
)
££? @
;
££@ A
}
§§ 
}
•• 
}
¶¶ 
}
ßß 
}
®® 
try
©© 
{
™™ 
using
¨¨ 
(
¨¨ 
SqlConnection
¨¨ $

connection
¨¨% /
=
¨¨0 1
new
¨¨2 5
SqlConnection
¨¨6 C
(
¨¨C D
$str
¨¨D z
+
¨¨{ |
$str¨¨} Å
+¨¨Ç É
$str¨¨Ñ ê
+¨¨ë í
password¨¨ì õ
)¨¨õ ú
)¨¨ú ù
{
≠≠ 

connection
ÆÆ 
.
ÆÆ 
Open
ÆÆ #
(
ÆÆ# $
)
ÆÆ$ %
;
ÆÆ% &
using
ØØ 
(
ØØ 

SqlCommand
ØØ %
command
ØØ& -
=
ØØ. /
new
ØØ0 3

SqlCommand
ØØ4 >
(
ØØ> ?
$str
ØØ? Y
,
ØØY Z

connection
ØØ[ e
)
ØØe f
)
ØØf g
{
∞∞ 
command
±± 
.
±±  
ExecuteNonQuery
±±  /
(
±±/ 0
)
±±0 1
;
±±1 2
}
≤≤ 
}
≥≥ 
}
¥¥ 
catch
µµ 
(
µµ 
SqlException
µµ 
	exceptSql
µµ  )
)
µµ) *
{
∂∂ 
IO
∑∑ 
.
∑∑ 
Logger
∑∑ 
.
∑∑ 
Log
∑∑ 
(
∑∑ 
NLog
∑∑ "
.
∑∑" #
LogLevel
∑∑# +
.
∑∑+ ,
Warn
∑∑, 0
,
∑∑0 1
$str
∑∑2 R
,
∑∑R S
	exceptSql
∑∑T ]
)
∑∑] ^
;
∑∑^ _
}
∏∏ 
}
ππ 	
}
∫∫ 
public
ºº 

override
ºº 
void
ºº 
Good
ºº 
(
ºº 
)
ºº 
{
ΩΩ 
GoodG2B
ææ 
(
ææ 
)
ææ 
;
ææ 
GoodB2G
øø 
(
øø 
)
øø 
;
øø 
}
¿¿ 
}¬¬ 
}√√ Œ\
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_45.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_45 F
:G H
AbstractTestCaseI Y
{ 
private!! 
string!! 
passwordBad!! 
;!! 
private"" 
string"" 
passwordGoodG2B"" "
;""" #
private## 
string## 
passwordGoodB2G## "
;##" #
private%% 
void%% 
BadSink%% 
(%% 
)%% 
{&& 
string'' 
password'' 
='' 
passwordBad'' %
;''% &
try(( 
{)) 	
using++ 
(++ 
SqlConnection++  

connection++! +
=++, -
new++. 1
SqlConnection++2 ?
(++? @
$str++@ v
+++w x
$str++y }
+++~ 
$str
++Ä å
+
++ç é
password
++è ó
)
++ó ò
)
++ò ô
{,, 

connection-- 
.-- 
Open-- 
(--  
)--  !
;--! "
using.. 
(.. 

SqlCommand.. !
command.." )
=..* +
new.., /

SqlCommand..0 :
(..: ;
$str..; U
,..U V

connection..W a
)..a b
)..b c
{// 
command00 
.00 
ExecuteNonQuery00 +
(00+ ,
)00, -
;00- .
}11 
}22 
}33 	
catch44 
(44 
SqlException44 
	exceptSql44 %
)44% &
{55 	
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 
.66 
LogLevel66 '
.66' (
Warn66( ,
,66, -
$str66. N
,66N O
	exceptSql66P Y
)66Y Z
;66Z [
}77 	
}88 
public:: 

override:: 
void:: 
Bad:: 
(:: 
):: 
{;; 
string<< 
password<< 
;<< 
password== 
=== 
$str== 
;== 
{?? 	
try@@ 
{AA 
usingCC 
(CC 
	TcpClientCC  
tcpConnCC! (
=CC) *
newCC+ .
	TcpClientCC/ 8
(CC8 9
$strCC9 K
,CCK L
$numCCM R
)CCR S
)CCS T
{DD 
usingFF 
(FF 
StreamReaderFF '
srFF( *
=FF+ ,
newFF- 0
StreamReaderFF1 =
(FF= >
tcpConnFF> E
.FFE F
	GetStreamFFF O
(FFO P
)FFP Q
)FFQ R
)FFR S
{GG 
passwordII  
=II! "
srII# %
.II% &
ReadLineII& .
(II. /
)II/ 0
;II0 1
}JJ 
}KK 
}LL 
catchMM 
(MM 
IOExceptionMM 
exceptIOMM '
)MM' (
{NN 
IOOO 
.OO 
LoggerOO 
.OO 
LogOO 
(OO 
NLogOO "
.OO" #
LogLevelOO# +
.OO+ ,
WarnOO, 0
,OO0 1
$strOO2 M
,OOM N
exceptIOOOO W
)OOW X
;OOX Y
}PP 
}QQ 	
passwordBadRR 
=RR 
passwordRR 
;RR 
BadSinkSS 
(SS 
)SS 
;SS 
}TT 
publicWW 

overrideWW 
voidWW 
GoodWW 
(WW 
)WW 
{XX 
GoodG2BYY 
(YY 
)YY 
;YY 
GoodB2GZZ 
(ZZ 
)ZZ 
;ZZ 
}[[ 
private]] 
void]] 
GoodG2BSink]] 
(]] 
)]] 
{^^ 
string__ 
password__ 
=__ 
passwordGoodG2B__ )
;__) *
try`` 
{aa 	
usingcc 
(cc 
SqlConnectioncc  

connectioncc! +
=cc, -
newcc. 1
SqlConnectioncc2 ?
(cc? @
$strcc@ v
+ccw x
$strccy }
+cc~ 
$str
ccÄ å
+
ccç é
password
ccè ó
)
ccó ò
)
ccò ô
{dd 

connectionee 
.ee 
Openee 
(ee  
)ee  !
;ee! "
usingff 
(ff 

SqlCommandff !
commandff" )
=ff* +
newff, /

SqlCommandff0 :
(ff: ;
$strff; U
,ffU V

connectionffW a
)ffa b
)ffb c
{gg 
commandhh 
.hh 
ExecuteNonQueryhh +
(hh+ ,
)hh, -
;hh- .
}ii 
}jj 
}kk 	
catchll 
(ll 
SqlExceptionll 
	exceptSqlll %
)ll% &
{mm 	
IOnn 
.nn 
Loggernn 
.nn 
Lognn 
(nn 
NLognn 
.nn 
LogLevelnn '
.nn' (
Warnnn( ,
,nn, -
$strnn. N
,nnN O
	exceptSqlnnP Y
)nnY Z
;nnZ [
}oo 	
}pp 
privatess 
voidss 
GoodG2Bss 
(ss 
)ss 
{tt 
stringuu 
passworduu 
;uu 
passwordxx 
=xx 
$strxx "
;xx" #
passwordGoodG2Byy 
=yy 
passwordyy "
;yy" #
GoodG2BSinkzz 
(zz 
)zz 
;zz 
}{{ 
private}} 
void}} 
GoodB2GSink}} 
(}} 
)}} 
{~~ 
string 
password 
= 
passwordGoodB2G )
;) *
if
ÄÄ 

(
ÄÄ 
password
ÄÄ 
!=
ÄÄ 
null
ÄÄ 
)
ÄÄ 
{
ÅÅ 	
{
ÉÉ 
using
ÑÑ 
(
ÑÑ &
AesCryptoServiceProvider
ÑÑ /
aesAlg
ÑÑ0 6
=
ÑÑ7 8
new
ÑÑ9 <&
AesCryptoServiceProvider
ÑÑ= U
(
ÑÑU V
)
ÑÑV W
)
ÑÑW X
{
ÖÖ 
aesAlg
ÜÜ 
.
ÜÜ 
Padding
ÜÜ "
=
ÜÜ# $
PaddingMode
ÜÜ% 0
.
ÜÜ0 1
None
ÜÜ1 5
;
ÜÜ5 6
aesAlg
áá 
.
áá 
Key
áá 
=
áá  
Encoding
áá! )
.
áá) *
UTF8
áá* .
.
áá. /
GetBytes
áá/ 7
(
áá7 8
$str
áá8 J
)
ááJ K
;
ááK L
ICryptoTransform
ââ $
	decryptor
ââ% .
=
ââ/ 0
aesAlg
ââ1 7
.
ââ7 8
CreateDecryptor
ââ8 G
(
ââG H
aesAlg
ââH N
.
ââN O
Key
ââO R
,
ââR S
aesAlg
ââT Z
.
ââZ [
IV
ââ[ ]
)
ââ] ^
;
ââ^ _
using
ãã 
(
ãã 
MemoryStream
ãã '
	msDecrypt
ãã( 1
=
ãã2 3
new
ãã4 7
MemoryStream
ãã8 D
(
ããD E
Encoding
ããE M
.
ããM N
UTF8
ããN R
.
ããR S
GetBytes
ããS [
(
ãã[ \
password
ãã\ d
)
ããd e
)
ããe f
)
ããf g
{
åå 
using
çç 
(
çç 
CryptoStream
çç +
	csDecrypt
çç, 5
=
çç6 7
new
çç8 ;
CryptoStream
çç< H
(
ççH I
	msDecrypt
ççI R
,
ççR S
	decryptor
ççT ]
,
çç] ^
CryptoStreamMode
çç_ o
.
çço p
Read
ççp t
)
ççt u
)
ççu v
{
éé 
using
èè !
(
èè" #
StreamReader
èè# /
	srDecrypt
èè0 9
=
èè: ;
new
èè< ?
StreamReader
èè@ L
(
èèL M
	csDecrypt
èèM V
)
èèV W
)
èèW X
{
êê 
password
ìì  (
=
ìì) *
	srDecrypt
ìì+ 4
.
ìì4 5
	ReadToEnd
ìì5 >
(
ìì> ?
)
ìì? @
;
ìì@ A
}
îî 
}
ïï 
}
ññ 
}
óó 
}
òò 
try
ôô 
{
öö 
using
úú 
(
úú 
SqlConnection
úú $

connection
úú% /
=
úú0 1
new
úú2 5
SqlConnection
úú6 C
(
úúC D
$str
úúD z
+
úú{ |
$strúú} Å
+úúÇ É
$strúúÑ ê
+úúë í
passwordúúì õ
)úúõ ú
)úúú ù
{
ùù 

connection
ûû 
.
ûû 
Open
ûû #
(
ûû# $
)
ûû$ %
;
ûû% &
using
üü 
(
üü 

SqlCommand
üü %
command
üü& -
=
üü. /
new
üü0 3

SqlCommand
üü4 >
(
üü> ?
$str
üü? Y
,
üüY Z

connection
üü[ e
)
üüe f
)
üüf g
{
†† 
command
°° 
.
°°  
ExecuteNonQuery
°°  /
(
°°/ 0
)
°°0 1
;
°°1 2
}
¢¢ 
}
££ 
}
§§ 
catch
•• 
(
•• 
SqlException
•• 
	exceptSql
••  )
)
••) *
{
¶¶ 
IO
ßß 
.
ßß 
Logger
ßß 
.
ßß 
Log
ßß 
(
ßß 
NLog
ßß "
.
ßß" #
LogLevel
ßß# +
.
ßß+ ,
Warn
ßß, 0
,
ßß0 1
$str
ßß2 R
,
ßßR S
	exceptSql
ßßT ]
)
ßß] ^
;
ßß^ _
}
®® 
}
©© 	
}
™™ 
private
≠≠ 
void
≠≠ 
GoodB2G
≠≠ 
(
≠≠ 
)
≠≠ 
{
ÆÆ 
string
ØØ 
password
ØØ 
;
ØØ 
password
∞∞ 
=
∞∞ 
$str
∞∞ 
;
∞∞ 
{
≤≤ 	
try
≥≥ 
{
¥¥ 
using
∂∂ 
(
∂∂ 
	TcpClient
∂∂  
tcpConn
∂∂! (
=
∂∂) *
new
∂∂+ .
	TcpClient
∂∂/ 8
(
∂∂8 9
$str
∂∂9 K
,
∂∂K L
$num
∂∂M R
)
∂∂R S
)
∂∂S T
{
∑∑ 
using
ππ 
(
ππ 
StreamReader
ππ '
sr
ππ( *
=
ππ+ ,
new
ππ- 0
StreamReader
ππ1 =
(
ππ= >
tcpConn
ππ> E
.
ππE F
	GetStream
ππF O
(
ππO P
)
ππP Q
)
ππQ R
)
ππR S
{
∫∫ 
password
ºº  
=
ºº! "
sr
ºº# %
.
ºº% &
ReadLine
ºº& .
(
ºº. /
)
ºº/ 0
;
ºº0 1
}
ΩΩ 
}
ææ 
}
øø 
catch
¿¿ 
(
¿¿ 
IOException
¿¿ 
exceptIO
¿¿ '
)
¿¿' (
{
¡¡ 
IO
¬¬ 
.
¬¬ 
Logger
¬¬ 
.
¬¬ 
Log
¬¬ 
(
¬¬ 
NLog
¬¬ "
.
¬¬" #
LogLevel
¬¬# +
.
¬¬+ ,
Warn
¬¬, 0
,
¬¬0 1
$str
¬¬2 M
,
¬¬M N
exceptIO
¬¬O W
)
¬¬W X
;
¬¬X Y
}
√√ 
}
ƒƒ 	
passwordGoodB2G
≈≈ 
=
≈≈ 
password
≈≈ "
;
≈≈" #
GoodB2GSink
∆∆ 
(
∆∆ 
)
∆∆ 
;
∆∆ 
}
«« 
}…… 
}   ⁄"
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_51a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_51a G
:H I
AbstractTestCaseJ Z
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string 
password 
; 
password   
=   
$str   
;   
{"" 	
try## 
{$$ 
using&& 
(&& 
	TcpClient&&  
tcpConn&&! (
=&&) *
new&&+ .
	TcpClient&&/ 8
(&&8 9
$str&&9 K
,&&K L
$num&&M R
)&&R S
)&&S T
{'' 
using)) 
()) 
StreamReader)) '
sr))( *
=))+ ,
new))- 0
StreamReader))1 =
())= >
tcpConn))> E
.))E F
	GetStream))F O
())O P
)))P Q
)))Q R
)))R S
{** 
password,,  
=,,! "
sr,,# %
.,,% &
ReadLine,,& .
(,,. /
),,/ 0
;,,0 1
}-- 
}.. 
}// 
catch00 
(00 
IOException00 
exceptIO00 '
)00' (
{11 
IO22 
.22 
Logger22 
.22 
Log22 
(22 
NLog22 "
.22" #
LogLevel22# +
.22+ ,
Warn22, 0
,220 1
$str222 M
,22M N
exceptIO22O W
)22W X
;22X Y
}33 
}44 	M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_51b55 I
.55I J
BadSink55J Q
(55Q R
password55R Z
)55\ ]
;55] ^
}66 
public99 

override99 
void99 
Good99 
(99 
)99 
{:: 
GoodG2B;; 
(;; 
);; 
;;; 
GoodB2G<< 
(<< 
)<< 
;<< 
}== 
private@@ 
void@@ 
GoodG2B@@ 
(@@ 
)@@ 
{AA 
stringBB 
passwordBB 
;BB 
passwordEE 
=EE 
$strEE "
;EE" #M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_51bFF I
.FFI J
GoodG2BSinkFFJ U
(FFU V
passwordFFV ^
)FF` a
;FFa b
}GG 
privateJJ 
voidJJ 
GoodB2GJJ 
(JJ 
)JJ 
{KK 
stringLL 
passwordLL 
;LL 
passwordMM 
=MM 
$strMM 
;MM 
{OO 	
tryPP 
{QQ 
usingSS 
(SS 
	TcpClientSS  
tcpConnSS! (
=SS) *
newSS+ .
	TcpClientSS/ 8
(SS8 9
$strSS9 K
,SSK L
$numSSM R
)SSR S
)SSS T
{TT 
usingVV 
(VV 
StreamReaderVV '
srVV( *
=VV+ ,
newVV- 0
StreamReaderVV1 =
(VV= >
tcpConnVV> E
.VVE F
	GetStreamVVF O
(VVO P
)VVP Q
)VVQ R
)VVR S
{WW 
passwordYY  
=YY! "
srYY# %
.YY% &
ReadLineYY& .
(YY. /
)YY/ 0
;YY0 1
}ZZ 
}[[ 
}\\ 
catch]] 
(]] 
IOException]] 
exceptIO]] '
)]]' (
{^^ 
IO__ 
.__ 
Logger__ 
.__ 
Log__ 
(__ 
NLog__ "
.__" #
LogLevel__# +
.__+ ,
Warn__, 0
,__0 1
$str__2 M
,__M N
exceptIO__O W
)__W X
;__X Y
}`` 
}aa 	M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_51bbb I
.bbI J
GoodB2GSinkbbJ U
(bbU V
passwordbbV ^
)bb` a
;bba b
}cc 
}ee 
}ff ˝6
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_51b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_51b G
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   
try!! 
{"" 	
using$$ 
($$ 
SqlConnection$$  

connection$$! +
=$$, -
new$$. 1
SqlConnection$$2 ?
($$? @
$str$$@ v
+$$w x
$str$$y }
+$$~ 
$str
$$Ä å
+
$$ç é
password
$$è ó
)
$$ó ò
)
$$ò ô
{%% 

connection&& 
.&& 
Open&& 
(&&  
)&&  !
;&&! "
using'' 
('' 

SqlCommand'' !
command''" )
=''* +
new'', /

SqlCommand''0 :
('': ;
$str''; U
,''U V

connection''W a
)''a b
)''b c
{(( 
command)) 
.)) 
ExecuteNonQuery)) +
())+ ,
))), -
;))- .
}** 
}++ 
},, 	
catch-- 
(-- 
SqlException-- 
	exceptSql-- %
)--% &
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. N
,//N O
	exceptSql//P Y
)//Y Z
;//Z [
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
string66# )
password66* 2
)663 4
{77 
try88 
{99 	
using;; 
(;; 
SqlConnection;;  

connection;;! +
=;;, -
new;;. 1
SqlConnection;;2 ?
(;;? @
$str;;@ v
+;;w x
$str;;y }
+;;~ 
$str
;;Ä å
+
;;ç é
password
;;è ó
)
;;ó ò
)
;;ò ô
{<< 

connection== 
.== 
Open== 
(==  
)==  !
;==! "
using>> 
(>> 

SqlCommand>> !
command>>" )
=>>* +
new>>, /

SqlCommand>>0 :
(>>: ;
$str>>; U
,>>U V

connection>>W a
)>>a b
)>>b c
{?? 
command@@ 
.@@ 
ExecuteNonQuery@@ +
(@@+ ,
)@@, -
;@@- .
}AA 
}BB 
}CC 	
catchDD 
(DD 
SqlExceptionDD 
	exceptSqlDD %
)DD% &
{EE 	
IOFF 
.FF 
LoggerFF 
.FF 
LogFF 
(FF 
NLogFF 
.FF 
LogLevelFF '
.FF' (
WarnFF( ,
,FF, -
$strFF. N
,FFN O
	exceptSqlFFP Y
)FFY Z
;FFZ [
}GG 	
}HH 
publicKK 

staticKK 
voidKK 
GoodB2GSinkKK "
(KK" #
stringKK# )
passwordKK* 2
)KK3 4
{LL 
ifMM 

(MM 
passwordMM 
!=MM 
nullMM 
)MM 
{NN 	
{PP 
usingQQ 
(QQ $
AesCryptoServiceProviderQQ /
aesAlgQQ0 6
=QQ7 8
newQQ9 <$
AesCryptoServiceProviderQQ= U
(QQU V
)QQV W
)QQW X
{RR 
aesAlgSS 
.SS 
PaddingSS "
=SS# $
PaddingModeSS% 0
.SS0 1
NoneSS1 5
;SS5 6
aesAlgTT 
.TT 
KeyTT 
=TT  
EncodingTT! )
.TT) *
UTF8TT* .
.TT. /
GetBytesTT/ 7
(TT7 8
$strTT8 J
)TTJ K
;TTK L
ICryptoTransformVV $
	decryptorVV% .
=VV/ 0
aesAlgVV1 7
.VV7 8
CreateDecryptorVV8 G
(VVG H
aesAlgVVH N
.VVN O
KeyVVO R
,VVR S
aesAlgVVT Z
.VVZ [
IVVV[ ]
)VV] ^
;VV^ _
usingXX 
(XX 
MemoryStreamXX '
	msDecryptXX( 1
=XX2 3
newXX4 7
MemoryStreamXX8 D
(XXD E
EncodingXXE M
.XXM N
UTF8XXN R
.XXR S
GetBytesXXS [
(XX[ \
passwordXX\ d
)XXd e
)XXe f
)XXf g
{YY 
usingZZ 
(ZZ 
CryptoStreamZZ +
	csDecryptZZ, 5
=ZZ6 7
newZZ8 ;
CryptoStreamZZ< H
(ZZH I
	msDecryptZZI R
,ZZR S
	decryptorZZT ]
,ZZ] ^
CryptoStreamModeZZ_ o
.ZZo p
ReadZZp t
)ZZt u
)ZZu v
{[[ 
using\\ !
(\\" #
StreamReader\\# /
	srDecrypt\\0 9
=\\: ;
new\\< ?
StreamReader\\@ L
(\\L M
	csDecrypt\\M V
)\\V W
)\\W X
{]] 
password``  (
=``) *
	srDecrypt``+ 4
.``4 5
	ReadToEnd``5 >
(``> ?
)``? @
;``@ A
}aa 
}bb 
}cc 
}dd 
}ee 
tryff 
{gg 
usingii 
(ii 
SqlConnectionii $

connectionii% /
=ii0 1
newii2 5
SqlConnectionii6 C
(iiC D
$striiD z
+ii{ |
$str	ii} Å
+
iiÇ É
$str
iiÑ ê
+
iië í
password
iiì õ
)
iiõ ú
)
iiú ù
{jj 

connectionkk 
.kk 
Openkk #
(kk# $
)kk$ %
;kk% &
usingll 
(ll 

SqlCommandll %
commandll& -
=ll. /
newll0 3

SqlCommandll4 >
(ll> ?
$strll? Y
,llY Z

connectionll[ e
)lle f
)llf g
{mm 
commandnn 
.nn  
ExecuteNonQuerynn  /
(nn/ 0
)nn0 1
;nn1 2
}oo 
}pp 
}qq 
catchrr 
(rr 
SqlExceptionrr 
	exceptSqlrr  )
)rr) *
{ss 
IOtt 
.tt 
Loggertt 
.tt 
Logtt 
(tt 
NLogtt "
.tt" #
LogLeveltt# +
.tt+ ,
Warntt, 0
,tt0 1
$strtt2 R
,ttR S
	exceptSqlttT ]
)tt] ^
;tt^ _
}uu 
}vv 	
}ww 
}yy 
}zz ⁄"
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_52a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_52a G
:H I
AbstractTestCaseJ Z
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string 
password 
; 
password   
=   
$str   
;   
{"" 	
try## 
{$$ 
using&& 
(&& 
	TcpClient&&  
tcpConn&&! (
=&&) *
new&&+ .
	TcpClient&&/ 8
(&&8 9
$str&&9 K
,&&K L
$num&&M R
)&&R S
)&&S T
{'' 
using)) 
()) 
StreamReader)) '
sr))( *
=))+ ,
new))- 0
StreamReader))1 =
())= >
tcpConn))> E
.))E F
	GetStream))F O
())O P
)))P Q
)))Q R
)))R S
{** 
password,,  
=,,! "
sr,,# %
.,,% &
ReadLine,,& .
(,,. /
),,/ 0
;,,0 1
}-- 
}.. 
}// 
catch00 
(00 
IOException00 
exceptIO00 '
)00' (
{11 
IO22 
.22 
Logger22 
.22 
Log22 
(22 
NLog22 "
.22" #
LogLevel22# +
.22+ ,
Warn22, 0
,220 1
$str222 M
,22M N
exceptIO22O W
)22W X
;22X Y
}33 
}44 	M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_52b55 I
.55I J
BadSink55J Q
(55Q R
password55R Z
)55[ \
;55\ ]
}66 
public99 

override99 
void99 
Good99 
(99 
)99 
{:: 
GoodG2B;; 
(;; 
);; 
;;; 
GoodB2G<< 
(<< 
)<< 
;<< 
}== 
private@@ 
void@@ 
GoodG2B@@ 
(@@ 
)@@ 
{AA 
stringBB 
passwordBB 
;BB 
passwordEE 
=EE 
$strEE "
;EE" #M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_52bFF I
.FFI J
GoodG2BSinkFFJ U
(FFU V
passwordFFV ^
)FF_ `
;FF` a
}GG 
privateJJ 
voidJJ 
GoodB2GJJ 
(JJ 
)JJ 
{KK 
stringLL 
passwordLL 
;LL 
passwordMM 
=MM 
$strMM 
;MM 
{OO 	
tryPP 
{QQ 
usingSS 
(SS 
	TcpClientSS  
tcpConnSS! (
=SS) *
newSS+ .
	TcpClientSS/ 8
(SS8 9
$strSS9 K
,SSK L
$numSSM R
)SSR S
)SSS T
{TT 
usingVV 
(VV 
StreamReaderVV '
srVV( *
=VV+ ,
newVV- 0
StreamReaderVV1 =
(VV= >
tcpConnVV> E
.VVE F
	GetStreamVVF O
(VVO P
)VVP Q
)VVQ R
)VVR S
{WW 
passwordYY  
=YY! "
srYY# %
.YY% &
ReadLineYY& .
(YY. /
)YY/ 0
;YY0 1
}ZZ 
}[[ 
}\\ 
catch]] 
(]] 
IOException]] 
exceptIO]] '
)]]' (
{^^ 
IO__ 
.__ 
Logger__ 
.__ 
Log__ 
(__ 
NLog__ "
.__" #
LogLevel__# +
.__+ ,
Warn__, 0
,__0 1
$str__2 M
,__M N
exceptIO__O W
)__W X
;__X Y
}`` 
}aa 	M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_52bbb I
.bbI J
GoodB2GSinkbbJ U
(bbU V
passwordbbV ^
)bb_ `
;bb` a
}cc 
}ee 
}ff ñ
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_52b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_52b G
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_52c!! I
.!!I J
BadSink!!J Q
(!!Q R
password!!R Z
)!![ \
;!!\ ]
}"" 
public'' 

static'' 
void'' 
GoodG2BSink'' "
(''" #
string''# )
password''* 2
)''3 4
{(( M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_52c)) I
.))I J
GoodG2BSink))J U
())U V
password))V ^
)))_ `
;))` a
}** 
public-- 

static-- 
void-- 
GoodB2GSink-- "
(--" #
string--# )
password--* 2
)--3 4
{.. M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_52c// I
.//I J
GoodB2GSink//J U
(//U V
password//V ^
)//_ `
;//` a
}00 
}22 
}33 ˝6
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_52c.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_52c G
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   
try!! 
{"" 	
using$$ 
($$ 
SqlConnection$$  

connection$$! +
=$$, -
new$$. 1
SqlConnection$$2 ?
($$? @
$str$$@ v
+$$w x
$str$$y }
+$$~ 
$str
$$Ä å
+
$$ç é
password
$$è ó
)
$$ó ò
)
$$ò ô
{%% 

connection&& 
.&& 
Open&& 
(&&  
)&&  !
;&&! "
using'' 
('' 

SqlCommand'' !
command''" )
=''* +
new'', /

SqlCommand''0 :
('': ;
$str''; U
,''U V

connection''W a
)''a b
)''b c
{(( 
command)) 
.)) 
ExecuteNonQuery)) +
())+ ,
))), -
;))- .
}** 
}++ 
},, 	
catch-- 
(-- 
SqlException-- 
	exceptSql-- %
)--% &
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. N
,//N O
	exceptSql//P Y
)//Y Z
;//Z [
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
string66# )
password66* 2
)663 4
{77 
try88 
{99 	
using;; 
(;; 
SqlConnection;;  

connection;;! +
=;;, -
new;;. 1
SqlConnection;;2 ?
(;;? @
$str;;@ v
+;;w x
$str;;y }
+;;~ 
$str
;;Ä å
+
;;ç é
password
;;è ó
)
;;ó ò
)
;;ò ô
{<< 

connection== 
.== 
Open== 
(==  
)==  !
;==! "
using>> 
(>> 

SqlCommand>> !
command>>" )
=>>* +
new>>, /

SqlCommand>>0 :
(>>: ;
$str>>; U
,>>U V

connection>>W a
)>>a b
)>>b c
{?? 
command@@ 
.@@ 
ExecuteNonQuery@@ +
(@@+ ,
)@@, -
;@@- .
}AA 
}BB 
}CC 	
catchDD 
(DD 
SqlExceptionDD 
	exceptSqlDD %
)DD% &
{EE 	
IOFF 
.FF 
LoggerFF 
.FF 
LogFF 
(FF 
NLogFF 
.FF 
LogLevelFF '
.FF' (
WarnFF( ,
,FF, -
$strFF. N
,FFN O
	exceptSqlFFP Y
)FFY Z
;FFZ [
}GG 	
}HH 
publicKK 

staticKK 
voidKK 
GoodB2GSinkKK "
(KK" #
stringKK# )
passwordKK* 2
)KK3 4
{LL 
ifMM 

(MM 
passwordMM 
!=MM 
nullMM 
)MM 
{NN 	
{PP 
usingQQ 
(QQ $
AesCryptoServiceProviderQQ /
aesAlgQQ0 6
=QQ7 8
newQQ9 <$
AesCryptoServiceProviderQQ= U
(QQU V
)QQV W
)QQW X
{RR 
aesAlgSS 
.SS 
PaddingSS "
=SS# $
PaddingModeSS% 0
.SS0 1
NoneSS1 5
;SS5 6
aesAlgTT 
.TT 
KeyTT 
=TT  
EncodingTT! )
.TT) *
UTF8TT* .
.TT. /
GetBytesTT/ 7
(TT7 8
$strTT8 J
)TTJ K
;TTK L
ICryptoTransformVV $
	decryptorVV% .
=VV/ 0
aesAlgVV1 7
.VV7 8
CreateDecryptorVV8 G
(VVG H
aesAlgVVH N
.VVN O
KeyVVO R
,VVR S
aesAlgVVT Z
.VVZ [
IVVV[ ]
)VV] ^
;VV^ _
usingXX 
(XX 
MemoryStreamXX '
	msDecryptXX( 1
=XX2 3
newXX4 7
MemoryStreamXX8 D
(XXD E
EncodingXXE M
.XXM N
UTF8XXN R
.XXR S
GetBytesXXS [
(XX[ \
passwordXX\ d
)XXd e
)XXe f
)XXf g
{YY 
usingZZ 
(ZZ 
CryptoStreamZZ +
	csDecryptZZ, 5
=ZZ6 7
newZZ8 ;
CryptoStreamZZ< H
(ZZH I
	msDecryptZZI R
,ZZR S
	decryptorZZT ]
,ZZ] ^
CryptoStreamModeZZ_ o
.ZZo p
ReadZZp t
)ZZt u
)ZZu v
{[[ 
using\\ !
(\\" #
StreamReader\\# /
	srDecrypt\\0 9
=\\: ;
new\\< ?
StreamReader\\@ L
(\\L M
	csDecrypt\\M V
)\\V W
)\\W X
{]] 
password``  (
=``) *
	srDecrypt``+ 4
.``4 5
	ReadToEnd``5 >
(``> ?
)``? @
;``@ A
}aa 
}bb 
}cc 
}dd 
}ee 
tryff 
{gg 
usingii 
(ii 
SqlConnectionii $

connectionii% /
=ii0 1
newii2 5
SqlConnectionii6 C
(iiC D
$striiD z
+ii{ |
$str	ii} Å
+
iiÇ É
$str
iiÑ ê
+
iië í
password
iiì õ
)
iiõ ú
)
iiú ù
{jj 

connectionkk 
.kk 
Openkk #
(kk# $
)kk$ %
;kk% &
usingll 
(ll 

SqlCommandll %
commandll& -
=ll. /
newll0 3

SqlCommandll4 >
(ll> ?
$strll? Y
,llY Z

connectionll[ e
)lle f
)llf g
{mm 
commandnn 
.nn  
ExecuteNonQuerynn  /
(nn/ 0
)nn0 1
;nn1 2
}oo 
}pp 
}qq 
catchrr 
(rr 
SqlExceptionrr 
	exceptSqlrr  )
)rr) *
{ss 
IOtt 
.tt 
Loggertt 
.tt 
Logtt 
(tt 
NLogtt "
.tt" #
LogLeveltt# +
.tt+ ,
Warntt, 0
,tt0 1
$strtt2 R
,ttR S
	exceptSqlttT ]
)tt] ^
;tt^ _
}uu 
}vv 	
}ww 
}yy 
}zz ⁄"
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_53a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_53a G
:H I
AbstractTestCaseJ Z
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string 
password 
; 
password   
=   
$str   
;   
{"" 	
try## 
{$$ 
using&& 
(&& 
	TcpClient&&  
tcpConn&&! (
=&&) *
new&&+ .
	TcpClient&&/ 8
(&&8 9
$str&&9 K
,&&K L
$num&&M R
)&&R S
)&&S T
{'' 
using)) 
()) 
StreamReader)) '
sr))( *
=))+ ,
new))- 0
StreamReader))1 =
())= >
tcpConn))> E
.))E F
	GetStream))F O
())O P
)))P Q
)))Q R
)))R S
{** 
password,,  
=,,! "
sr,,# %
.,,% &
ReadLine,,& .
(,,. /
),,/ 0
;,,0 1
}-- 
}.. 
}// 
catch00 
(00 
IOException00 
exceptIO00 '
)00' (
{11 
IO22 
.22 
Logger22 
.22 
Log22 
(22 
NLog22 "
.22" #
LogLevel22# +
.22+ ,
Warn22, 0
,220 1
$str222 M
,22M N
exceptIO22O W
)22W X
;22X Y
}33 
}44 	M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_53b55 I
.55I J
BadSink55J Q
(55Q R
password55R Z
)55[ \
;55\ ]
}66 
public99 

override99 
void99 
Good99 
(99 
)99 
{:: 
GoodG2B;; 
(;; 
);; 
;;; 
GoodB2G<< 
(<< 
)<< 
;<< 
}== 
private@@ 
void@@ 
GoodG2B@@ 
(@@ 
)@@ 
{AA 
stringBB 
passwordBB 
;BB 
passwordEE 
=EE 
$strEE "
;EE" #M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_53bFF I
.FFI J
GoodG2BSinkFFJ U
(FFU V
passwordFFV ^
)FF_ `
;FF` a
}GG 
privateJJ 
voidJJ 
GoodB2GJJ 
(JJ 
)JJ 
{KK 
stringLL 
passwordLL 
;LL 
passwordMM 
=MM 
$strMM 
;MM 
{OO 	
tryPP 
{QQ 
usingSS 
(SS 
	TcpClientSS  
tcpConnSS! (
=SS) *
newSS+ .
	TcpClientSS/ 8
(SS8 9
$strSS9 K
,SSK L
$numSSM R
)SSR S
)SSS T
{TT 
usingVV 
(VV 
StreamReaderVV '
srVV( *
=VV+ ,
newVV- 0
StreamReaderVV1 =
(VV= >
tcpConnVV> E
.VVE F
	GetStreamVVF O
(VVO P
)VVP Q
)VVQ R
)VVR S
{WW 
passwordYY  
=YY! "
srYY# %
.YY% &
ReadLineYY& .
(YY. /
)YY/ 0
;YY0 1
}ZZ 
}[[ 
}\\ 
catch]] 
(]] 
IOException]] 
exceptIO]] '
)]]' (
{^^ 
IO__ 
.__ 
Logger__ 
.__ 
Log__ 
(__ 
NLog__ "
.__" #
LogLevel__# +
.__+ ,
Warn__, 0
,__0 1
$str__2 M
,__M N
exceptIO__O W
)__W X
;__X Y
}`` 
}aa 	M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_53bbb I
.bbI J
GoodB2GSinkbbJ U
(bbU V
passwordbbV ^
)bb_ `
;bb` a
}cc 
}ee 
}ff ñ
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_53b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_53b G
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_53c!! I
.!!I J
BadSink!!J Q
(!!Q R
password!!R Z
)!![ \
;!!\ ]
}"" 
public'' 

static'' 
void'' 
GoodG2BSink'' "
(''" #
string''# )
password''* 2
)''3 4
{(( M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_53c)) I
.))I J
GoodG2BSink))J U
())U V
password))V ^
)))_ `
;))` a
}** 
public-- 

static-- 
void-- 
GoodB2GSink-- "
(--" #
string--# )
password--* 2
)--3 4
{.. M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_53c// I
.//I J
GoodB2GSink//J U
(//U V
password//V ^
)//_ `
;//` a
}00 
}22 
}33 ñ
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_53c.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_53c G
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_53d!! I
.!!I J
BadSink!!J Q
(!!Q R
password!!R Z
)!![ \
;!!\ ]
}"" 
public'' 

static'' 
void'' 
GoodG2BSink'' "
(''" #
string''# )
password''* 2
)''3 4
{(( M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_53d)) I
.))I J
GoodG2BSink))J U
())U V
password))V ^
)))_ `
;))` a
}** 
public-- 

static-- 
void-- 
GoodB2GSink-- "
(--" #
string--# )
password--* 2
)--3 4
{.. M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_53d// I
.//I J
GoodB2GSink//J U
(//U V
password//V ^
)//_ `
;//` a
}00 
}22 
}33 ˝6
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_53d.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_53d G
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   
try!! 
{"" 	
using$$ 
($$ 
SqlConnection$$  

connection$$! +
=$$, -
new$$. 1
SqlConnection$$2 ?
($$? @
$str$$@ v
+$$w x
$str$$y }
+$$~ 
$str
$$Ä å
+
$$ç é
password
$$è ó
)
$$ó ò
)
$$ò ô
{%% 

connection&& 
.&& 
Open&& 
(&&  
)&&  !
;&&! "
using'' 
('' 

SqlCommand'' !
command''" )
=''* +
new'', /

SqlCommand''0 :
('': ;
$str''; U
,''U V

connection''W a
)''a b
)''b c
{(( 
command)) 
.)) 
ExecuteNonQuery)) +
())+ ,
))), -
;))- .
}** 
}++ 
},, 	
catch-- 
(-- 
SqlException-- 
	exceptSql-- %
)--% &
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. N
,//N O
	exceptSql//P Y
)//Y Z
;//Z [
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
string66# )
password66* 2
)663 4
{77 
try88 
{99 	
using;; 
(;; 
SqlConnection;;  

connection;;! +
=;;, -
new;;. 1
SqlConnection;;2 ?
(;;? @
$str;;@ v
+;;w x
$str;;y }
+;;~ 
$str
;;Ä å
+
;;ç é
password
;;è ó
)
;;ó ò
)
;;ò ô
{<< 

connection== 
.== 
Open== 
(==  
)==  !
;==! "
using>> 
(>> 

SqlCommand>> !
command>>" )
=>>* +
new>>, /

SqlCommand>>0 :
(>>: ;
$str>>; U
,>>U V

connection>>W a
)>>a b
)>>b c
{?? 
command@@ 
.@@ 
ExecuteNonQuery@@ +
(@@+ ,
)@@, -
;@@- .
}AA 
}BB 
}CC 	
catchDD 
(DD 
SqlExceptionDD 
	exceptSqlDD %
)DD% &
{EE 	
IOFF 
.FF 
LoggerFF 
.FF 
LogFF 
(FF 
NLogFF 
.FF 
LogLevelFF '
.FF' (
WarnFF( ,
,FF, -
$strFF. N
,FFN O
	exceptSqlFFP Y
)FFY Z
;FFZ [
}GG 	
}HH 
publicKK 

staticKK 
voidKK 
GoodB2GSinkKK "
(KK" #
stringKK# )
passwordKK* 2
)KK3 4
{LL 
ifMM 

(MM 
passwordMM 
!=MM 
nullMM 
)MM 
{NN 	
{PP 
usingQQ 
(QQ $
AesCryptoServiceProviderQQ /
aesAlgQQ0 6
=QQ7 8
newQQ9 <$
AesCryptoServiceProviderQQ= U
(QQU V
)QQV W
)QQW X
{RR 
aesAlgSS 
.SS 
PaddingSS "
=SS# $
PaddingModeSS% 0
.SS0 1
NoneSS1 5
;SS5 6
aesAlgTT 
.TT 
KeyTT 
=TT  
EncodingTT! )
.TT) *
UTF8TT* .
.TT. /
GetBytesTT/ 7
(TT7 8
$strTT8 J
)TTJ K
;TTK L
ICryptoTransformVV $
	decryptorVV% .
=VV/ 0
aesAlgVV1 7
.VV7 8
CreateDecryptorVV8 G
(VVG H
aesAlgVVH N
.VVN O
KeyVVO R
,VVR S
aesAlgVVT Z
.VVZ [
IVVV[ ]
)VV] ^
;VV^ _
usingXX 
(XX 
MemoryStreamXX '
	msDecryptXX( 1
=XX2 3
newXX4 7
MemoryStreamXX8 D
(XXD E
EncodingXXE M
.XXM N
UTF8XXN R
.XXR S
GetBytesXXS [
(XX[ \
passwordXX\ d
)XXd e
)XXe f
)XXf g
{YY 
usingZZ 
(ZZ 
CryptoStreamZZ +
	csDecryptZZ, 5
=ZZ6 7
newZZ8 ;
CryptoStreamZZ< H
(ZZH I
	msDecryptZZI R
,ZZR S
	decryptorZZT ]
,ZZ] ^
CryptoStreamModeZZ_ o
.ZZo p
ReadZZp t
)ZZt u
)ZZu v
{[[ 
using\\ !
(\\" #
StreamReader\\# /
	srDecrypt\\0 9
=\\: ;
new\\< ?
StreamReader\\@ L
(\\L M
	csDecrypt\\M V
)\\V W
)\\W X
{]] 
password``  (
=``) *
	srDecrypt``+ 4
.``4 5
	ReadToEnd``5 >
(``> ?
)``? @
;``@ A
}aa 
}bb 
}cc 
}dd 
}ee 
tryff 
{gg 
usingii 
(ii 
SqlConnectionii $

connectionii% /
=ii0 1
newii2 5
SqlConnectionii6 C
(iiC D
$striiD z
+ii{ |
$str	ii} Å
+
iiÇ É
$str
iiÑ ê
+
iië í
password
iiì õ
)
iiõ ú
)
iiú ù
{jj 

connectionkk 
.kk 
Openkk #
(kk# $
)kk$ %
;kk% &
usingll 
(ll 

SqlCommandll %
commandll& -
=ll. /
newll0 3

SqlCommandll4 >
(ll> ?
$strll? Y
,llY Z

connectionll[ e
)lle f
)llf g
{mm 
commandnn 
.nn  
ExecuteNonQuerynn  /
(nn/ 0
)nn0 1
;nn1 2
}oo 
}pp 
}qq 
catchrr 
(rr 
SqlExceptionrr 
	exceptSqlrr  )
)rr) *
{ss 
IOtt 
.tt 
Loggertt 
.tt 
Logtt 
(tt 
NLogtt "
.tt" #
LogLeveltt# +
.tt+ ,
Warntt, 0
,tt0 1
$strtt2 R
,ttR S
	exceptSqlttT ]
)tt] ^
;tt^ _
}uu 
}vv 	
}ww 
}yy 
}zz ⁄"
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_54a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_54a G
:H I
AbstractTestCaseJ Z
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string 
password 
; 
password   
=   
$str   
;   
{"" 	
try## 
{$$ 
using&& 
(&& 
	TcpClient&&  
tcpConn&&! (
=&&) *
new&&+ .
	TcpClient&&/ 8
(&&8 9
$str&&9 K
,&&K L
$num&&M R
)&&R S
)&&S T
{'' 
using)) 
()) 
StreamReader)) '
sr))( *
=))+ ,
new))- 0
StreamReader))1 =
())= >
tcpConn))> E
.))E F
	GetStream))F O
())O P
)))P Q
)))Q R
)))R S
{** 
password,,  
=,,! "
sr,,# %
.,,% &
ReadLine,,& .
(,,. /
),,/ 0
;,,0 1
}-- 
}.. 
}// 
catch00 
(00 
IOException00 
exceptIO00 '
)00' (
{11 
IO22 
.22 
Logger22 
.22 
Log22 
(22 
NLog22 "
.22" #
LogLevel22# +
.22+ ,
Warn22, 0
,220 1
$str222 M
,22M N
exceptIO22O W
)22W X
;22X Y
}33 
}44 	M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_54b55 I
.55I J
BadSink55J Q
(55Q R
password55R Z
)55[ \
;55\ ]
}66 
public99 

override99 
void99 
Good99 
(99 
)99 
{:: 
GoodG2B;; 
(;; 
);; 
;;; 
GoodB2G<< 
(<< 
)<< 
;<< 
}== 
private@@ 
void@@ 
GoodG2B@@ 
(@@ 
)@@ 
{AA 
stringBB 
passwordBB 
;BB 
passwordEE 
=EE 
$strEE "
;EE" #M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_54bFF I
.FFI J
GoodG2BSinkFFJ U
(FFU V
passwordFFV ^
)FF_ `
;FF` a
}GG 
privateJJ 
voidJJ 
GoodB2GJJ 
(JJ 
)JJ 
{KK 
stringLL 
passwordLL 
;LL 
passwordMM 
=MM 
$strMM 
;MM 
{OO 	
tryPP 
{QQ 
usingSS 
(SS 
	TcpClientSS  
tcpConnSS! (
=SS) *
newSS+ .
	TcpClientSS/ 8
(SS8 9
$strSS9 K
,SSK L
$numSSM R
)SSR S
)SSS T
{TT 
usingVV 
(VV 
StreamReaderVV '
srVV( *
=VV+ ,
newVV- 0
StreamReaderVV1 =
(VV= >
tcpConnVV> E
.VVE F
	GetStreamVVF O
(VVO P
)VVP Q
)VVQ R
)VVR S
{WW 
passwordYY  
=YY! "
srYY# %
.YY% &
ReadLineYY& .
(YY. /
)YY/ 0
;YY0 1
}ZZ 
}[[ 
}\\ 
catch]] 
(]] 
IOException]] 
exceptIO]] '
)]]' (
{^^ 
IO__ 
.__ 
Logger__ 
.__ 
Log__ 
(__ 
NLog__ "
.__" #
LogLevel__# +
.__+ ,
Warn__, 0
,__0 1
$str__2 M
,__M N
exceptIO__O W
)__W X
;__X Y
}`` 
}aa 	M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_54bbb I
.bbI J
GoodB2GSinkbbJ U
(bbU V
passwordbbV ^
)bb_ `
;bb` a
}cc 
}ee 
}ff ñ
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_54b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_54b G
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_54c!! I
.!!I J
BadSink!!J Q
(!!Q R
password!!R Z
)!![ \
;!!\ ]
}"" 
public'' 

static'' 
void'' 
GoodG2BSink'' "
(''" #
string''# )
password''* 2
)''3 4
{(( M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_54c)) I
.))I J
GoodG2BSink))J U
())U V
password))V ^
)))_ `
;))` a
}** 
public-- 

static-- 
void-- 
GoodB2GSink-- "
(--" #
string--# )
password--* 2
)--3 4
{.. M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_54c// I
.//I J
GoodB2GSink//J U
(//U V
password//V ^
)//_ `
;//` a
}00 
}22 
}33 ñ
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_54c.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_54c G
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_54d!! I
.!!I J
BadSink!!J Q
(!!Q R
password!!R Z
)!![ \
;!!\ ]
}"" 
public'' 

static'' 
void'' 
GoodG2BSink'' "
(''" #
string''# )
password''* 2
)''3 4
{(( M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_54d)) I
.))I J
GoodG2BSink))J U
())U V
password))V ^
)))_ `
;))` a
}** 
public-- 

static-- 
void-- 
GoodB2GSink-- "
(--" #
string--# )
password--* 2
)--3 4
{.. M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_54d// I
.//I J
GoodB2GSink//J U
(//U V
password//V ^
)//_ `
;//` a
}00 
}22 
}33 ñ
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_54d.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_54d G
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_54e!! I
.!!I J
BadSink!!J Q
(!!Q R
password!!R Z
)!![ \
;!!\ ]
}"" 
public'' 

static'' 
void'' 
GoodG2BSink'' "
(''" #
string''# )
password''* 2
)''3 4
{(( M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_54e)) I
.))I J
GoodG2BSink))J U
())U V
password))V ^
)))_ `
;))` a
}** 
public-- 

static-- 
void-- 
GoodB2GSink-- "
(--" #
string--# )
password--* 2
)--3 4
{.. M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_54e// I
.//I J
GoodB2GSink//J U
(//U V
password//V ^
)//_ `
;//` a
}00 
}22 
}33 ˝6
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_54e.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_54e G
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   
try!! 
{"" 	
using$$ 
($$ 
SqlConnection$$  

connection$$! +
=$$, -
new$$. 1
SqlConnection$$2 ?
($$? @
$str$$@ v
+$$w x
$str$$y }
+$$~ 
$str
$$Ä å
+
$$ç é
password
$$è ó
)
$$ó ò
)
$$ò ô
{%% 

connection&& 
.&& 
Open&& 
(&&  
)&&  !
;&&! "
using'' 
('' 

SqlCommand'' !
command''" )
=''* +
new'', /

SqlCommand''0 :
('': ;
$str''; U
,''U V

connection''W a
)''a b
)''b c
{(( 
command)) 
.)) 
ExecuteNonQuery)) +
())+ ,
))), -
;))- .
}** 
}++ 
},, 	
catch-- 
(-- 
SqlException-- 
	exceptSql-- %
)--% &
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. N
,//N O
	exceptSql//P Y
)//Y Z
;//Z [
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
string66# )
password66* 2
)663 4
{77 
try88 
{99 	
using;; 
(;; 
SqlConnection;;  

connection;;! +
=;;, -
new;;. 1
SqlConnection;;2 ?
(;;? @
$str;;@ v
+;;w x
$str;;y }
+;;~ 
$str
;;Ä å
+
;;ç é
password
;;è ó
)
;;ó ò
)
;;ò ô
{<< 

connection== 
.== 
Open== 
(==  
)==  !
;==! "
using>> 
(>> 

SqlCommand>> !
command>>" )
=>>* +
new>>, /

SqlCommand>>0 :
(>>: ;
$str>>; U
,>>U V

connection>>W a
)>>a b
)>>b c
{?? 
command@@ 
.@@ 
ExecuteNonQuery@@ +
(@@+ ,
)@@, -
;@@- .
}AA 
}BB 
}CC 	
catchDD 
(DD 
SqlExceptionDD 
	exceptSqlDD %
)DD% &
{EE 	
IOFF 
.FF 
LoggerFF 
.FF 
LogFF 
(FF 
NLogFF 
.FF 
LogLevelFF '
.FF' (
WarnFF( ,
,FF, -
$strFF. N
,FFN O
	exceptSqlFFP Y
)FFY Z
;FFZ [
}GG 	
}HH 
publicKK 

staticKK 
voidKK 
GoodB2GSinkKK "
(KK" #
stringKK# )
passwordKK* 2
)KK3 4
{LL 
ifMM 

(MM 
passwordMM 
!=MM 
nullMM 
)MM 
{NN 	
{PP 
usingQQ 
(QQ $
AesCryptoServiceProviderQQ /
aesAlgQQ0 6
=QQ7 8
newQQ9 <$
AesCryptoServiceProviderQQ= U
(QQU V
)QQV W
)QQW X
{RR 
aesAlgSS 
.SS 
PaddingSS "
=SS# $
PaddingModeSS% 0
.SS0 1
NoneSS1 5
;SS5 6
aesAlgTT 
.TT 
KeyTT 
=TT  
EncodingTT! )
.TT) *
UTF8TT* .
.TT. /
GetBytesTT/ 7
(TT7 8
$strTT8 J
)TTJ K
;TTK L
ICryptoTransformVV $
	decryptorVV% .
=VV/ 0
aesAlgVV1 7
.VV7 8
CreateDecryptorVV8 G
(VVG H
aesAlgVVH N
.VVN O
KeyVVO R
,VVR S
aesAlgVVT Z
.VVZ [
IVVV[ ]
)VV] ^
;VV^ _
usingXX 
(XX 
MemoryStreamXX '
	msDecryptXX( 1
=XX2 3
newXX4 7
MemoryStreamXX8 D
(XXD E
EncodingXXE M
.XXM N
UTF8XXN R
.XXR S
GetBytesXXS [
(XX[ \
passwordXX\ d
)XXd e
)XXe f
)XXf g
{YY 
usingZZ 
(ZZ 
CryptoStreamZZ +
	csDecryptZZ, 5
=ZZ6 7
newZZ8 ;
CryptoStreamZZ< H
(ZZH I
	msDecryptZZI R
,ZZR S
	decryptorZZT ]
,ZZ] ^
CryptoStreamModeZZ_ o
.ZZo p
ReadZZp t
)ZZt u
)ZZu v
{[[ 
using\\ !
(\\" #
StreamReader\\# /
	srDecrypt\\0 9
=\\: ;
new\\< ?
StreamReader\\@ L
(\\L M
	csDecrypt\\M V
)\\V W
)\\W X
{]] 
password``  (
=``) *
	srDecrypt``+ 4
.``4 5
	ReadToEnd``5 >
(``> ?
)``? @
;``@ A
}aa 
}bb 
}cc 
}dd 
}ee 
tryff 
{gg 
usingii 
(ii 
SqlConnectionii $

connectionii% /
=ii0 1
newii2 5
SqlConnectionii6 C
(iiC D
$striiD z
+ii{ |
$str	ii} Å
+
iiÇ É
$str
iiÑ ê
+
iië í
password
iiì õ
)
iiõ ú
)
iiú ù
{jj 

connectionkk 
.kk 
Openkk #
(kk# $
)kk$ %
;kk% &
usingll 
(ll 

SqlCommandll %
commandll& -
=ll. /
newll0 3

SqlCommandll4 >
(ll> ?
$strll? Y
,llY Z

connectionll[ e
)lle f
)llf g
{mm 
commandnn 
.nn  
ExecuteNonQuerynn  /
(nn/ 0
)nn0 1
;nn1 2
}oo 
}pp 
}qq 
catchrr 
(rr 
SqlExceptionrr 
	exceptSqlrr  )
)rr) *
{ss 
IOtt 
.tt 
Loggertt 
.tt 
Logtt 
(tt 
NLogtt "
.tt" #
LogLeveltt# +
.tt+ ,
Warntt, 0
,tt0 1
$strtt2 R
,ttR S
	exceptSqlttT ]
)tt] ^
;tt^ _
}uu 
}vv 	
}ww 
}yy 
}zz œ=
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_61a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_61a G
:H I
AbstractTestCaseJ Z
{ 
public 

override 
void 
Bad 
( 
) 
{   
string!! 
password!! 
=!! M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_61b!! [
.!![ \
	BadSource!!\ e
(!!e f
)!!f g
;!!g h
try"" 
{## 	
using%% 
(%% 
SqlConnection%%  

connection%%! +
=%%, -
new%%. 1
SqlConnection%%2 ?
(%%? @
$str%%@ v
+%%w x
$str%%y }
+%%~ 
$str
%%Ä å
+
%%ç é
password
%%è ó
)
%%ó ò
)
%%ò ô
{&& 

connection'' 
.'' 
Open'' 
(''  
)''  !
;''! "
using(( 
((( 

SqlCommand(( !
command((" )
=((* +
new((, /

SqlCommand((0 :
(((: ;
$str((; U
,((U V

connection((W a
)((a b
)((b c
{)) 
command** 
.** 
ExecuteNonQuery** +
(**+ ,
)**, -
;**- .
}++ 
},, 
}-- 	
catch.. 
(.. 
SqlException.. 
	exceptSql.. %
)..% &
{// 	
IO00 
.00 
Logger00 
.00 
Log00 
(00 
NLog00 
.00 
LogLevel00 '
.00' (
Warn00( ,
,00, -
$str00. N
,00N O
	exceptSql00P Y
)00Y Z
;00Z [
}11 	
}22 
public55 

override55 
void55 
Good55 
(55 
)55 
{66 
GoodG2B77 
(77 
)77 
;77 
GoodB2G88 
(88 
)88 
;88 
}99 
private<< 
static<< 
void<< 
GoodG2B<< 
(<<  
)<<  !
{== 
string>> 
password>> 
=>> M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_61b>> [
.>>[ \
GoodG2BSource>>\ i
(>>i j
)>>j k
;>>k l
try?? 
{@@ 	
usingBB 
(BB 
SqlConnectionBB  

connectionBB! +
=BB, -
newBB. 1
SqlConnectionBB2 ?
(BB? @
$strBB@ v
+BBw x
$strBBy }
+BB~ 
$str
BBÄ å
+
BBç é
password
BBè ó
)
BBó ò
)
BBò ô
{CC 

connectionDD 
.DD 
OpenDD 
(DD  
)DD  !
;DD! "
usingEE 
(EE 

SqlCommandEE !
commandEE" )
=EE* +
newEE, /

SqlCommandEE0 :
(EE: ;
$strEE; U
,EEU V

connectionEEW a
)EEa b
)EEb c
{FF 
commandGG 
.GG 
ExecuteNonQueryGG +
(GG+ ,
)GG, -
;GG- .
}HH 
}II 
}JJ 	
catchKK 
(KK 
SqlExceptionKK 
	exceptSqlKK %
)KK% &
{LL 	
IOMM 
.MM 
LoggerMM 
.MM 
LogMM 
(MM 
NLogMM 
.MM 
LogLevelMM '
.MM' (
WarnMM( ,
,MM, -
$strMM. N
,MMN O
	exceptSqlMMP Y
)MMY Z
;MMZ [
}NN 	
}OO 
privateRR 
staticRR 
voidRR 
GoodB2GRR 
(RR  
)RR  !
{SS 
stringTT 
passwordTT 
=TT M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_61bTT [
.TT[ \
GoodB2GSourceTT\ i
(TTi j
)TTj k
;TTk l
ifUU 

(UU 
passwordUU 
!=UU 
nullUU 
)UU 
{VV 	
{XX 
usingYY 
(YY $
AesCryptoServiceProviderYY /
aesAlgYY0 6
=YY7 8
newYY9 <$
AesCryptoServiceProviderYY= U
(YYU V
)YYV W
)YYW X
{ZZ 
aesAlg[[ 
.[[ 
Padding[[ "
=[[# $
PaddingMode[[% 0
.[[0 1
None[[1 5
;[[5 6
aesAlg\\ 
.\\ 
Key\\ 
=\\  
Encoding\\! )
.\\) *
UTF8\\* .
.\\. /
GetBytes\\/ 7
(\\7 8
$str\\8 J
)\\J K
;\\K L
ICryptoTransform^^ $
	decryptor^^% .
=^^/ 0
aesAlg^^1 7
.^^7 8
CreateDecryptor^^8 G
(^^G H
aesAlg^^H N
.^^N O
Key^^O R
,^^R S
aesAlg^^T Z
.^^Z [
IV^^[ ]
)^^] ^
;^^^ _
using`` 
(`` 
MemoryStream`` '
	msDecrypt``( 1
=``2 3
new``4 7
MemoryStream``8 D
(``D E
Encoding``E M
.``M N
UTF8``N R
.``R S
GetBytes``S [
(``[ \
password``\ d
)``d e
)``e f
)``f g
{aa 
usingbb 
(bb 
CryptoStreambb +
	csDecryptbb, 5
=bb6 7
newbb8 ;
CryptoStreambb< H
(bbH I
	msDecryptbbI R
,bbR S
	decryptorbbT ]
,bb] ^
CryptoStreamModebb_ o
.bbo p
Readbbp t
)bbt u
)bbu v
{cc 
usingdd !
(dd" #
StreamReaderdd# /
	srDecryptdd0 9
=dd: ;
newdd< ?
StreamReaderdd@ L
(ddL M
	csDecryptddM V
)ddV W
)ddW X
{ee 
passwordhh  (
=hh) *
	srDecrypthh+ 4
.hh4 5
	ReadToEndhh5 >
(hh> ?
)hh? @
;hh@ A
}ii 
}jj 
}kk 
}ll 
}mm 
trynn 
{oo 
usingqq 
(qq 
SqlConnectionqq $

connectionqq% /
=qq0 1
newqq2 5
SqlConnectionqq6 C
(qqC D
$strqqD z
+qq{ |
$str	qq} Å
+
qqÇ É
$str
qqÑ ê
+
qqë í
password
qqì õ
)
qqõ ú
)
qqú ù
{rr 

connectionss 
.ss 
Openss #
(ss# $
)ss$ %
;ss% &
usingtt 
(tt 

SqlCommandtt %
commandtt& -
=tt. /
newtt0 3

SqlCommandtt4 >
(tt> ?
$strtt? Y
,ttY Z

connectiontt[ e
)tte f
)ttf g
{uu 
commandvv 
.vv  
ExecuteNonQueryvv  /
(vv/ 0
)vv0 1
;vv1 2
}ww 
}xx 
}yy 
catchzz 
(zz 
SqlExceptionzz 
	exceptSqlzz  )
)zz) *
{{{ 
IO|| 
.|| 
Logger|| 
.|| 
Log|| 
(|| 
NLog|| "
.||" #
LogLevel||# +
.||+ ,
Warn||, 0
,||0 1
$str||2 R
,||R S
	exceptSql||T ]
)||] ^
;||^ _
}}} 
}~~ 	
} 
}ÅÅ 
}ÇÇ ‹
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_61b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_61b G
{ 
public 

static 
string 
	BadSource "
(" #
)# $
{ 
string 
password 
; 
password   
=   
$str   
;   
{"" 	
try## 
{$$ 
using&& 
(&& 
	TcpClient&&  
tcpConn&&! (
=&&) *
new&&+ .
	TcpClient&&/ 8
(&&8 9
$str&&9 K
,&&K L
$num&&M R
)&&R S
)&&S T
{'' 
using)) 
()) 
StreamReader)) '
sr))( *
=))+ ,
new))- 0
StreamReader))1 =
())= >
tcpConn))> E
.))E F
	GetStream))F O
())O P
)))P Q
)))Q R
)))R S
{** 
password,,  
=,,! "
sr,,# %
.,,% &
ReadLine,,& .
(,,. /
),,/ 0
;,,0 1
}-- 
}.. 
}// 
catch00 
(00 
IOException00 
exceptIO00 '
)00' (
{11 
IO22 
.22 
Logger22 
.22 
Log22 
(22 
NLog22 "
.22" #
LogLevel22# +
.22+ ,
Warn22, 0
,220 1
$str222 M
,22M N
exceptIO22O W
)22W X
;22X Y
}33 
}44 	
return55 
password55 
;55 
}66 
public;; 

static;; 
string;; 
GoodG2BSource;; &
(;;& '
);;' (
{<< 
string== 
password== 
;== 
password@@ 
=@@ 
$str@@ "
;@@" #
returnAA 
passwordAA 
;AA 
}BB 
publicEE 

staticEE 
stringEE 
GoodB2GSourceEE &
(EE& '
)EE' (
{FF 
stringGG 
passwordGG 
;GG 
passwordHH 
=HH 
$strHH 
;HH 
{JJ 	
tryKK 
{LL 
usingNN 
(NN 
	TcpClientNN  
tcpConnNN! (
=NN) *
newNN+ .
	TcpClientNN/ 8
(NN8 9
$strNN9 K
,NNK L
$numNNM R
)NNR S
)NNS T
{OO 
usingQQ 
(QQ 
StreamReaderQQ '
srQQ( *
=QQ+ ,
newQQ- 0
StreamReaderQQ1 =
(QQ= >
tcpConnQQ> E
.QQE F
	GetStreamQQF O
(QQO P
)QQP Q
)QQQ R
)QQR S
{RR 
passwordTT  
=TT! "
srTT# %
.TT% &
ReadLineTT& .
(TT. /
)TT/ 0
;TT0 1
}UU 
}VV 
}WW 
catchXX 
(XX 
IOExceptionXX 
exceptIOXX '
)XX' (
{YY 
IOZZ 
.ZZ 
LoggerZZ 
.ZZ 
LogZZ 
(ZZ 
NLogZZ "
.ZZ" #
LogLevelZZ# +
.ZZ+ ,
WarnZZ, 0
,ZZ0 1
$strZZ2 M
,ZZM N
exceptIOZZO W
)ZZW X
;ZZX Y
}[[ 
}\\ 	
return]] 
password]] 
;]] 
}^^ 
}`` 
}aa Œ*
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_66a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_66a G
:H I
AbstractTestCaseJ Z
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string 
password 
; 
password   
=   
$str   
;   
{"" 	
try## 
{$$ 
using&& 
(&& 
	TcpClient&&  
tcpConn&&! (
=&&) *
new&&+ .
	TcpClient&&/ 8
(&&8 9
$str&&9 K
,&&K L
$num&&M R
)&&R S
)&&S T
{'' 
using)) 
()) 
StreamReader)) '
sr))( *
=))+ ,
new))- 0
StreamReader))1 =
())= >
tcpConn))> E
.))E F
	GetStream))F O
())O P
)))P Q
)))Q R
)))R S
{** 
password,,  
=,,! "
sr,,# %
.,,% &
ReadLine,,& .
(,,. /
),,/ 0
;,,0 1
}-- 
}.. 
}// 
catch00 
(00 
IOException00 
exceptIO00 '
)00' (
{11 
IO22 
.22 
Logger22 
.22 
Log22 
(22 
NLog22 "
.22" #
LogLevel22# +
.22+ ,
Warn22, 0
,220 1
$str222 M
,22M N
exceptIO22O W
)22W X
;22X Y
}33 
}44 	
string55 
[55 
]55 
passwordArray55 
=55  
new55! $
string55% +
[55+ ,
$num55, -
]55- .
;55. /
passwordArray66 
[66 
$num66 
]66 
=66 
password66 #
;66# $M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_66b77 I
.77I J
BadSink77J Q
(77Q R
passwordArray77R _
)77a b
;77b c
}88 
public;; 

override;; 
void;; 
Good;; 
(;; 
);; 
{<< 
GoodG2B== 
(== 
)== 
;== 
GoodB2G>> 
(>> 
)>> 
;>> 
}?? 
privateBB 
staticBB 
voidBB 
GoodG2BBB 
(BB  
)BB  !
{CC 
stringDD 
passwordDD 
;DD 
passwordGG 
=GG 
$strGG "
;GG" #
stringHH 
[HH 
]HH 
passwordArrayHH 
=HH  
newHH! $
stringHH% +
[HH+ ,
$numHH, -
]HH- .
;HH. /
passwordArrayII 
[II 
$numII 
]II 
=II 
passwordII #
;II# $M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_66bJJ I
.JJI J
GoodG2BSinkJJJ U
(JJU V
passwordArrayJJV c
)JJe f
;JJf g
}KK 
privateNN 
staticNN 
voidNN 
GoodB2GNN 
(NN  
)NN  !
{OO 
stringPP 
passwordPP 
;PP 
passwordQQ 
=QQ 
$strQQ 
;QQ 
{SS 	
tryTT 
{UU 
usingWW 
(WW 
	TcpClientWW  
tcpConnWW! (
=WW) *
newWW+ .
	TcpClientWW/ 8
(WW8 9
$strWW9 K
,WWK L
$numWWM R
)WWR S
)WWS T
{XX 
usingZZ 
(ZZ 
StreamReaderZZ '
srZZ( *
=ZZ+ ,
newZZ- 0
StreamReaderZZ1 =
(ZZ= >
tcpConnZZ> E
.ZZE F
	GetStreamZZF O
(ZZO P
)ZZP Q
)ZZQ R
)ZZR S
{[[ 
password]]  
=]]! "
sr]]# %
.]]% &
ReadLine]]& .
(]]. /
)]]/ 0
;]]0 1
}^^ 
}__ 
}`` 
catchaa 
(aa 
IOExceptionaa 
exceptIOaa '
)aa' (
{bb 
IOcc 
.cc 
Loggercc 
.cc 
Logcc 
(cc 
NLogcc "
.cc" #
LogLevelcc# +
.cc+ ,
Warncc, 0
,cc0 1
$strcc2 M
,ccM N
exceptIOccO W
)ccW X
;ccX Y
}dd 
}ee 	
stringff 
[ff 
]ff 
passwordArrayff 
=ff  
newff! $
stringff% +
[ff+ ,
$numff, -
]ff- .
;ff. /
passwordArraygg 
[gg 
$numgg 
]gg 
=gg 
passwordgg #
;gg# $M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_66bhh I
.hhI J
GoodB2GSinkhhJ U
(hhU V
passwordArrayhhV c
)hhe f
;hhf g
}ii 
}kk 
}ll ü;
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_66b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_66b G
{ 
public 

static 
void 
BadSink 
( 
string %
[% &
]& '
passwordArray( 5
)6 7
{   
string!! 
password!! 
=!! 
passwordArray!! '
[!!' (
$num!!( )
]!!) *
;!!* +
try"" 
{## 	
using%% 
(%% 
SqlConnection%%  

connection%%! +
=%%, -
new%%. 1
SqlConnection%%2 ?
(%%? @
$str%%@ v
+%%w x
$str%%y }
+%%~ 
$str
%%Ä å
+
%%ç é
password
%%è ó
)
%%ó ò
)
%%ò ô
{&& 

connection'' 
.'' 
Open'' 
(''  
)''  !
;''! "
using(( 
((( 

SqlCommand(( !
command((" )
=((* +
new((, /

SqlCommand((0 :
(((: ;
$str((; U
,((U V

connection((W a
)((a b
)((b c
{)) 
command** 
.** 
ExecuteNonQuery** +
(**+ ,
)**, -
;**- .
}++ 
},, 
}-- 	
catch.. 
(.. 
SqlException.. 
	exceptSql.. %
)..% &
{// 	
IO00 
.00 
Logger00 
.00 
Log00 
(00 
NLog00 
.00 
LogLevel00 '
.00' (
Warn00( ,
,00, -
$str00. N
,00N O
	exceptSql00P Y
)00Y Z
;00Z [
}11 	
}22 
public77 

static77 
void77 
GoodG2BSink77 "
(77" #
string77# )
[77) *
]77* +
passwordArray77, 9
)77: ;
{88 
string99 
password99 
=99 
passwordArray99 '
[99' (
$num99( )
]99) *
;99* +
try:: 
{;; 	
using== 
(== 
SqlConnection==  

connection==! +
===, -
new==. 1
SqlConnection==2 ?
(==? @
$str==@ v
+==w x
$str==y }
+==~ 
$str
==Ä å
+
==ç é
password
==è ó
)
==ó ò
)
==ò ô
{>> 

connection?? 
.?? 
Open?? 
(??  
)??  !
;??! "
using@@ 
(@@ 

SqlCommand@@ !
command@@" )
=@@* +
new@@, /

SqlCommand@@0 :
(@@: ;
$str@@; U
,@@U V

connection@@W a
)@@a b
)@@b c
{AA 
commandBB 
.BB 
ExecuteNonQueryBB +
(BB+ ,
)BB, -
;BB- .
}CC 
}DD 
}EE 	
catchFF 
(FF 
SqlExceptionFF 
	exceptSqlFF %
)FF% &
{GG 	
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH 
.HH 
LogLevelHH '
.HH' (
WarnHH( ,
,HH, -
$strHH. N
,HHN O
	exceptSqlHHP Y
)HHY Z
;HHZ [
}II 	
}JJ 
publicMM 

staticMM 
voidMM 
GoodB2GSinkMM "
(MM" #
stringMM# )
[MM) *
]MM* +
passwordArrayMM, 9
)MM: ;
{NN 
stringOO 
passwordOO 
=OO 
passwordArrayOO '
[OO' (
$numOO( )
]OO) *
;OO* +
ifPP 

(PP 
passwordPP 
!=PP 
nullPP 
)PP 
{QQ 	
{SS 
usingTT 
(TT $
AesCryptoServiceProviderTT /
aesAlgTT0 6
=TT7 8
newTT9 <$
AesCryptoServiceProviderTT= U
(TTU V
)TTV W
)TTW X
{UU 
aesAlgVV 
.VV 
PaddingVV "
=VV# $
PaddingModeVV% 0
.VV0 1
NoneVV1 5
;VV5 6
aesAlgWW 
.WW 
KeyWW 
=WW  
EncodingWW! )
.WW) *
UTF8WW* .
.WW. /
GetBytesWW/ 7
(WW7 8
$strWW8 J
)WWJ K
;WWK L
ICryptoTransformYY $
	decryptorYY% .
=YY/ 0
aesAlgYY1 7
.YY7 8
CreateDecryptorYY8 G
(YYG H
aesAlgYYH N
.YYN O
KeyYYO R
,YYR S
aesAlgYYT Z
.YYZ [
IVYY[ ]
)YY] ^
;YY^ _
using[[ 
([[ 
MemoryStream[[ '
	msDecrypt[[( 1
=[[2 3
new[[4 7
MemoryStream[[8 D
([[D E
Encoding[[E M
.[[M N
UTF8[[N R
.[[R S
GetBytes[[S [
([[[ \
password[[\ d
)[[d e
)[[e f
)[[f g
{\\ 
using]] 
(]] 
CryptoStream]] +
	csDecrypt]], 5
=]]6 7
new]]8 ;
CryptoStream]]< H
(]]H I
	msDecrypt]]I R
,]]R S
	decryptor]]T ]
,]]] ^
CryptoStreamMode]]_ o
.]]o p
Read]]p t
)]]t u
)]]u v
{^^ 
using__ !
(__" #
StreamReader__# /
	srDecrypt__0 9
=__: ;
new__< ?
StreamReader__@ L
(__L M
	csDecrypt__M V
)__V W
)__W X
{`` 
passwordcc  (
=cc) *
	srDecryptcc+ 4
.cc4 5
	ReadToEndcc5 >
(cc> ?
)cc? @
;cc@ A
}dd 
}ee 
}ff 
}gg 
}hh 
tryii 
{jj 
usingll 
(ll 
SqlConnectionll $

connectionll% /
=ll0 1
newll2 5
SqlConnectionll6 C
(llC D
$strllD z
+ll{ |
$str	ll} Å
+
llÇ É
$str
llÑ ê
+
llë í
password
llì õ
)
llõ ú
)
llú ù
{mm 

connectionnn 
.nn 
Opennn #
(nn# $
)nn$ %
;nn% &
usingoo 
(oo 

SqlCommandoo %
commandoo& -
=oo. /
newoo0 3

SqlCommandoo4 >
(oo> ?
$stroo? Y
,ooY Z

connectionoo[ e
)ooe f
)oof g
{pp 
commandqq 
.qq  
ExecuteNonQueryqq  /
(qq/ 0
)qq0 1
;qq1 2
}rr 
}ss 
}tt 
catchuu 
(uu 
SqlExceptionuu 
	exceptSqluu  )
)uu) *
{vv 
IOww 
.ww 
Loggerww 
.ww 
Logww 
(ww 
NLogww "
.ww" #
LogLevelww# +
.ww+ ,
Warnww, 0
,ww0 1
$strww2 R
,wwR S
	exceptSqlwwT ]
)ww] ^
;ww^ _
}xx 
}yy 	
}zz 
}|| 
}}} å+
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_67a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_67a G
:H I
AbstractTestCaseJ Z
{ 
public 

class 
	Container 
{ 
public 
string 
containerOne "
;" #
}   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
string$$ 
password$$ 
;$$ 
password%% 
=%% 
$str%% 
;%% 
{'' 	
try(( 
{)) 
using++ 
(++ 
	TcpClient++  
tcpConn++! (
=++) *
new+++ .
	TcpClient++/ 8
(++8 9
$str++9 K
,++K L
$num++M R
)++R S
)++S T
{,, 
using.. 
(.. 
StreamReader.. '
sr..( *
=..+ ,
new..- 0
StreamReader..1 =
(..= >
tcpConn..> E
...E F
	GetStream..F O
(..O P
)..P Q
)..Q R
)..R S
{// 
password11  
=11! "
sr11# %
.11% &
ReadLine11& .
(11. /
)11/ 0
;110 1
}22 
}33 
}44 
catch55 
(55 
IOException55 
exceptIO55 '
)55' (
{66 
IO77 
.77 
Logger77 
.77 
Log77 
(77 
NLog77 "
.77" #
LogLevel77# +
.77+ ,
Warn77, 0
,770 1
$str772 M
,77M N
exceptIO77O W
)77W X
;77X Y
}88 
}99 	
	Container:: 
passwordContainer:: #
=::$ %
new::& )
	Container::* 3
(::3 4
)::4 5
;::5 6
passwordContainer;; 
.;; 
containerOne;; &
=;;' (
password;;) 1
;;;1 2M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_67b<< I
.<<I J
BadSink<<J Q
(<<Q R
passwordContainer<<R c
)<<e f
;<<f g
}== 
public@@ 

override@@ 
void@@ 
Good@@ 
(@@ 
)@@ 
{AA 
GoodG2BBB 
(BB 
)BB 
;BB 
GoodB2GCC 
(CC 
)CC 
;CC 
}DD 
privateGG 
staticGG 
voidGG 
GoodG2BGG 
(GG  
)GG  !
{HH 
stringII 
passwordII 
;II 
passwordLL 
=LL 
$strLL "
;LL" #
	ContainerMM 
passwordContainerMM #
=MM$ %
newMM& )
	ContainerMM* 3
(MM3 4
)MM4 5
;MM5 6
passwordContainerNN 
.NN 
containerOneNN &
=NN' (
passwordNN) 1
;NN1 2M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_67bOO I
.OOI J
GoodG2BSinkOOJ U
(OOU V
passwordContainerOOV g
)OOi j
;OOj k
}PP 
privateSS 
staticSS 
voidSS 
GoodB2GSS 
(SS  
)SS  !
{TT 
stringUU 
passwordUU 
;UU 
passwordVV 
=VV 
$strVV 
;VV 
{XX 	
tryYY 
{ZZ 
using\\ 
(\\ 
	TcpClient\\  
tcpConn\\! (
=\\) *
new\\+ .
	TcpClient\\/ 8
(\\8 9
$str\\9 K
,\\K L
$num\\M R
)\\R S
)\\S T
{]] 
using__ 
(__ 
StreamReader__ '
sr__( *
=__+ ,
new__- 0
StreamReader__1 =
(__= >
tcpConn__> E
.__E F
	GetStream__F O
(__O P
)__P Q
)__Q R
)__R S
{`` 
passwordbb  
=bb! "
srbb# %
.bb% &
ReadLinebb& .
(bb. /
)bb/ 0
;bb0 1
}cc 
}dd 
}ee 
catchff 
(ff 
IOExceptionff 
exceptIOff '
)ff' (
{gg 
IOhh 
.hh 
Loggerhh 
.hh 
Loghh 
(hh 
NLoghh "
.hh" #
LogLevelhh# +
.hh+ ,
Warnhh, 0
,hh0 1
$strhh2 M
,hhM N
exceptIOhhO W
)hhW X
;hhX Y
}ii 
}jj 	
	Containerkk 
passwordContainerkk #
=kk$ %
newkk& )
	Containerkk* 3
(kk3 4
)kk4 5
;kk5 6
passwordContainerll 
.ll 
containerOnell &
=ll' (
passwordll) 1
;ll1 2M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_67bmm I
.mmI J
GoodB2GSinkmmJ U
(mmU V
passwordContainermmV g
)mmi j
;mmj k
}nn 
}pp 
}qq Ò<
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_67b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_67b G
{ 
public 

static 
void 
BadSink 
( M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_67a `
.` a
	Containera j
passwordContainerk |
)} ~
{   
string!! 
password!! 
=!! 
passwordContainer!! +
.!!+ ,
containerOne!!, 8
;!!8 9
try"" 
{## 	
using%% 
(%% 
SqlConnection%%  

connection%%! +
=%%, -
new%%. 1
SqlConnection%%2 ?
(%%? @
$str%%@ v
+%%w x
$str%%y }
+%%~ 
$str
%%Ä å
+
%%ç é
password
%%è ó
)
%%ó ò
)
%%ò ô
{&& 

connection'' 
.'' 
Open'' 
(''  
)''  !
;''! "
using(( 
((( 

SqlCommand(( !
command((" )
=((* +
new((, /

SqlCommand((0 :
(((: ;
$str((; U
,((U V

connection((W a
)((a b
)((b c
{)) 
command** 
.** 
ExecuteNonQuery** +
(**+ ,
)**, -
;**- .
}++ 
},, 
}-- 	
catch.. 
(.. 
SqlException.. 
	exceptSql.. %
)..% &
{// 	
IO00 
.00 
Logger00 
.00 
Log00 
(00 
NLog00 
.00 
LogLevel00 '
.00' (
Warn00( ,
,00, -
$str00. N
,00N O
	exceptSql00P Y
)00Y Z
;00Z [
}11 	
}22 
public77 

static77 
void77 
GoodG2BSink77 "
(77" #M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_67a77# d
.77d e
	Container77e n
passwordContainer	77o Ä
)
77Å Ç
{88 
string99 
password99 
=99 
passwordContainer99 +
.99+ ,
containerOne99, 8
;998 9
try:: 
{;; 	
using== 
(== 
SqlConnection==  

connection==! +
===, -
new==. 1
SqlConnection==2 ?
(==? @
$str==@ v
+==w x
$str==y }
+==~ 
$str
==Ä å
+
==ç é
password
==è ó
)
==ó ò
)
==ò ô
{>> 

connection?? 
.?? 
Open?? 
(??  
)??  !
;??! "
using@@ 
(@@ 

SqlCommand@@ !
command@@" )
=@@* +
new@@, /

SqlCommand@@0 :
(@@: ;
$str@@; U
,@@U V

connection@@W a
)@@a b
)@@b c
{AA 
commandBB 
.BB 
ExecuteNonQueryBB +
(BB+ ,
)BB, -
;BB- .
}CC 
}DD 
}EE 	
catchFF 
(FF 
SqlExceptionFF 
	exceptSqlFF %
)FF% &
{GG 	
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH 
.HH 
LogLevelHH '
.HH' (
WarnHH( ,
,HH, -
$strHH. N
,HHN O
	exceptSqlHHP Y
)HHY Z
;HHZ [
}II 	
}JJ 
publicMM 

staticMM 
voidMM 
GoodB2GSinkMM "
(MM" #M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_67aMM# d
.MMd e
	ContainerMMe n
passwordContainer	MMo Ä
)
MMÅ Ç
{NN 
stringOO 
passwordOO 
=OO 
passwordContainerOO +
.OO+ ,
containerOneOO, 8
;OO8 9
ifPP 

(PP 
passwordPP 
!=PP 
nullPP 
)PP 
{QQ 	
{SS 
usingTT 
(TT $
AesCryptoServiceProviderTT /
aesAlgTT0 6
=TT7 8
newTT9 <$
AesCryptoServiceProviderTT= U
(TTU V
)TTV W
)TTW X
{UU 
aesAlgVV 
.VV 
PaddingVV "
=VV# $
PaddingModeVV% 0
.VV0 1
NoneVV1 5
;VV5 6
aesAlgWW 
.WW 
KeyWW 
=WW  
EncodingWW! )
.WW) *
UTF8WW* .
.WW. /
GetBytesWW/ 7
(WW7 8
$strWW8 J
)WWJ K
;WWK L
ICryptoTransformYY $
	decryptorYY% .
=YY/ 0
aesAlgYY1 7
.YY7 8
CreateDecryptorYY8 G
(YYG H
aesAlgYYH N
.YYN O
KeyYYO R
,YYR S
aesAlgYYT Z
.YYZ [
IVYY[ ]
)YY] ^
;YY^ _
using[[ 
([[ 
MemoryStream[[ '
	msDecrypt[[( 1
=[[2 3
new[[4 7
MemoryStream[[8 D
([[D E
Encoding[[E M
.[[M N
UTF8[[N R
.[[R S
GetBytes[[S [
([[[ \
password[[\ d
)[[d e
)[[e f
)[[f g
{\\ 
using]] 
(]] 
CryptoStream]] +
	csDecrypt]], 5
=]]6 7
new]]8 ;
CryptoStream]]< H
(]]H I
	msDecrypt]]I R
,]]R S
	decryptor]]T ]
,]]] ^
CryptoStreamMode]]_ o
.]]o p
Read]]p t
)]]t u
)]]u v
{^^ 
using__ !
(__" #
StreamReader__# /
	srDecrypt__0 9
=__: ;
new__< ?
StreamReader__@ L
(__L M
	csDecrypt__M V
)__V W
)__W X
{`` 
passwordcc  (
=cc) *
	srDecryptcc+ 4
.cc4 5
	ReadToEndcc5 >
(cc> ?
)cc? @
;cc@ A
}dd 
}ee 
}ff 
}gg 
}hh 
tryii 
{jj 
usingll 
(ll 
SqlConnectionll $

connectionll% /
=ll0 1
newll2 5
SqlConnectionll6 C
(llC D
$strllD z
+ll{ |
$str	ll} Å
+
llÇ É
$str
llÑ ê
+
llë í
password
llì õ
)
llõ ú
)
llú ù
{mm 

connectionnn 
.nn 
Opennn #
(nn# $
)nn$ %
;nn% &
usingoo 
(oo 

SqlCommandoo %
commandoo& -
=oo. /
newoo0 3

SqlCommandoo4 >
(oo> ?
$stroo? Y
,ooY Z

connectionoo[ e
)ooe f
)oof g
{pp 
commandqq 
.qq  
ExecuteNonQueryqq  /
(qq/ 0
)qq0 1
;qq1 2
}rr 
}ss 
}tt 
catchuu 
(uu 
SqlExceptionuu 
	exceptSqluu  )
)uu) *
{vv 
IOww 
.ww 
Loggerww 
.ww 
Logww 
(ww 
NLogww "
.ww" #
LogLevelww# +
.ww+ ,
Warnww, 0
,ww0 1
$strww2 R
,wwR S
	exceptSqlwwT ]
)ww] ^
;ww^ _
}xx 
}yy 	
}zz 
}|| 
}}} ˆ!
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_68a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_68a G
:H I
AbstractTestCaseJ Z
{ 
public 

static 
string 
password !
;! "
public 

override 
void 
Bad 
( 
) 
{   
password!! 
=!! 
$str!! 
;!! 
{## 	
try$$ 
{%% 
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
password--  
=--! "
sr--# %
.--% &
ReadLine--& .
(--. /
)--/ 0
;--0 1
}.. 
}// 
}00 
catch11 
(11 
IOException11 
exceptIO11 '
)11' (
{22 
IO33 
.33 
Logger33 
.33 
Log33 
(33 
NLog33 "
.33" #
LogLevel33# +
.33+ ,
Warn33, 0
,330 1
$str332 M
,33M N
exceptIO33O W
)33W X
;33X Y
}44 
}55 	M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_68b66 I
.66I J
BadSink66J Q
(66Q R
)66R S
;66S T
}77 
public:: 

override:: 
void:: 
Good:: 
(:: 
):: 
{;; 
GoodG2B<< 
(<< 
)<< 
;<< 
GoodB2G== 
(== 
)== 
;== 
}>> 
privateAA 
staticAA 
voidAA 
GoodG2BAA 
(AA  
)AA  !
{BB 
passwordEE 
=EE 
$strEE "
;EE" #M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_68bFF I
.FFI J
GoodG2BSinkFFJ U
(FFU V
)FFV W
;FFW X
}GG 
privateJJ 
staticJJ 
voidJJ 
GoodB2GJJ 
(JJ  
)JJ  !
{KK 
passwordLL 
=LL 
$strLL 
;LL 
{NN 	
tryOO 
{PP 
usingRR 
(RR 
	TcpClientRR  
tcpConnRR! (
=RR) *
newRR+ .
	TcpClientRR/ 8
(RR8 9
$strRR9 K
,RRK L
$numRRM R
)RRR S
)RRS T
{SS 
usingUU 
(UU 
StreamReaderUU '
srUU( *
=UU+ ,
newUU- 0
StreamReaderUU1 =
(UU= >
tcpConnUU> E
.UUE F
	GetStreamUUF O
(UUO P
)UUP Q
)UUQ R
)UUR S
{VV 
passwordXX  
=XX! "
srXX# %
.XX% &
ReadLineXX& .
(XX. /
)XX/ 0
;XX0 1
}YY 
}ZZ 
}[[ 
catch\\ 
(\\ 
IOException\\ 
exceptIO\\ '
)\\' (
{]] 
IO^^ 
.^^ 
Logger^^ 
.^^ 
Log^^ 
(^^ 
NLog^^ "
.^^" #
LogLevel^^# +
.^^+ ,
Warn^^, 0
,^^0 1
$str^^2 M
,^^M N
exceptIO^^O W
)^^W X
;^^X Y
}__ 
}`` 	M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_68baa I
.aaI J
GoodB2GSinkaaJ U
(aaU V
)aaV W
;aaW X
}bb 
}dd 
}ee ≥:
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_68b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_68b G
{ 
public 

static 
void 
BadSink 
( 
)  
{   
string!! 
password!! 
=!! M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_68a!! [
.!![ \
password!!\ d
;!!d e
try"" 
{## 	
using%% 
(%% 
SqlConnection%%  

connection%%! +
=%%, -
new%%. 1
SqlConnection%%2 ?
(%%? @
$str%%@ v
+%%w x
$str%%y }
+%%~ 
$str
%%Ä å
+
%%ç é
password
%%è ó
)
%%ó ò
)
%%ò ô
{&& 

connection'' 
.'' 
Open'' 
(''  
)''  !
;''! "
using(( 
((( 

SqlCommand(( !
command((" )
=((* +
new((, /

SqlCommand((0 :
(((: ;
$str((; U
,((U V

connection((W a
)((a b
)((b c
{)) 
command** 
.** 
ExecuteNonQuery** +
(**+ ,
)**, -
;**- .
}++ 
},, 
}-- 	
catch.. 
(.. 
SqlException.. 
	exceptSql.. %
)..% &
{// 	
IO00 
.00 
Logger00 
.00 
Log00 
(00 
NLog00 
.00 
LogLevel00 '
.00' (
Warn00( ,
,00, -
$str00. N
,00N O
	exceptSql00P Y
)00Y Z
;00Z [
}11 	
}22 
public77 

static77 
void77 
GoodG2BSink77 "
(77" #
)77# $
{88 
string99 
password99 
=99 M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_68a99 [
.99[ \
password99\ d
;99d e
try:: 
{;; 	
using== 
(== 
SqlConnection==  

connection==! +
===, -
new==. 1
SqlConnection==2 ?
(==? @
$str==@ v
+==w x
$str==y }
+==~ 
$str
==Ä å
+
==ç é
password
==è ó
)
==ó ò
)
==ò ô
{>> 

connection?? 
.?? 
Open?? 
(??  
)??  !
;??! "
using@@ 
(@@ 

SqlCommand@@ !
command@@" )
=@@* +
new@@, /

SqlCommand@@0 :
(@@: ;
$str@@; U
,@@U V

connection@@W a
)@@a b
)@@b c
{AA 
commandBB 
.BB 
ExecuteNonQueryBB +
(BB+ ,
)BB, -
;BB- .
}CC 
}DD 
}EE 	
catchFF 
(FF 
SqlExceptionFF 
	exceptSqlFF %
)FF% &
{GG 	
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH 
.HH 
LogLevelHH '
.HH' (
WarnHH( ,
,HH, -
$strHH. N
,HHN O
	exceptSqlHHP Y
)HHY Z
;HHZ [
}II 	
}JJ 
publicMM 

staticMM 
voidMM 
GoodB2GSinkMM "
(MM" #
)MM# $
{NN 
stringOO 
passwordOO 
=OO M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_68aOO [
.OO[ \
passwordOO\ d
;OOd e
ifPP 

(PP 
passwordPP 
!=PP 
nullPP 
)PP 
{QQ 	
{SS 
usingTT 
(TT $
AesCryptoServiceProviderTT /
aesAlgTT0 6
=TT7 8
newTT9 <$
AesCryptoServiceProviderTT= U
(TTU V
)TTV W
)TTW X
{UU 
aesAlgVV 
.VV 
PaddingVV "
=VV# $
PaddingModeVV% 0
.VV0 1
NoneVV1 5
;VV5 6
aesAlgWW 
.WW 
KeyWW 
=WW  
EncodingWW! )
.WW) *
UTF8WW* .
.WW. /
GetBytesWW/ 7
(WW7 8
$strWW8 J
)WWJ K
;WWK L
ICryptoTransformYY $
	decryptorYY% .
=YY/ 0
aesAlgYY1 7
.YY7 8
CreateDecryptorYY8 G
(YYG H
aesAlgYYH N
.YYN O
KeyYYO R
,YYR S
aesAlgYYT Z
.YYZ [
IVYY[ ]
)YY] ^
;YY^ _
using[[ 
([[ 
MemoryStream[[ '
	msDecrypt[[( 1
=[[2 3
new[[4 7
MemoryStream[[8 D
([[D E
Encoding[[E M
.[[M N
UTF8[[N R
.[[R S
GetBytes[[S [
([[[ \
password[[\ d
)[[d e
)[[e f
)[[f g
{\\ 
using]] 
(]] 
CryptoStream]] +
	csDecrypt]], 5
=]]6 7
new]]8 ;
CryptoStream]]< H
(]]H I
	msDecrypt]]I R
,]]R S
	decryptor]]T ]
,]]] ^
CryptoStreamMode]]_ o
.]]o p
Read]]p t
)]]t u
)]]u v
{^^ 
using__ !
(__" #
StreamReader__# /
	srDecrypt__0 9
=__: ;
new__< ?
StreamReader__@ L
(__L M
	csDecrypt__M V
)__V W
)__W X
{`` 
passwordcc  (
=cc) *
	srDecryptcc+ 4
.cc4 5
	ReadToEndcc5 >
(cc> ?
)cc? @
;cc@ A
}dd 
}ee 
}ff 
}gg 
}hh 
tryii 
{jj 
usingll 
(ll 
SqlConnectionll $

connectionll% /
=ll0 1
newll2 5
SqlConnectionll6 C
(llC D
$strllD z
+ll{ |
$str	ll} Å
+
llÇ É
$str
llÑ ê
+
llë í
password
llì õ
)
llõ ú
)
llú ù
{mm 

connectionnn 
.nn 
Opennn #
(nn# $
)nn$ %
;nn% &
usingoo 
(oo 

SqlCommandoo %
commandoo& -
=oo. /
newoo0 3

SqlCommandoo4 >
(oo> ?
$stroo? Y
,ooY Z

connectionoo[ e
)ooe f
)oof g
{pp 
commandqq 
.qq  
ExecuteNonQueryqq  /
(qq/ 0
)qq0 1
;qq1 2
}rr 
}ss 
}tt 
catchuu 
(uu 
SqlExceptionuu 
	exceptSqluu  )
)uu) *
{vv 
IOww 
.ww 
Loggerww 
.ww 
Logww 
(ww 
NLogww "
.ww" #
LogLevelww# +
.ww+ ,
Warnww, 0
,ww0 1
$strww2 R
,wwR S
	exceptSqlwwT ]
)ww] ^
;ww^ _
}xx 
}yy 	
}zz 
}|| 
}}} ò$
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_71a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_71a G
:H I
AbstractTestCaseJ Z
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string 
password 
; 
password   
=   
$str   
;   
{"" 	
try## 
{$$ 
using&& 
(&& 
	TcpClient&&  
tcpConn&&! (
=&&) *
new&&+ .
	TcpClient&&/ 8
(&&8 9
$str&&9 K
,&&K L
$num&&M R
)&&R S
)&&S T
{'' 
using)) 
()) 
StreamReader)) '
sr))( *
=))+ ,
new))- 0
StreamReader))1 =
())= >
tcpConn))> E
.))E F
	GetStream))F O
())O P
)))P Q
)))Q R
)))R S
{** 
password,,  
=,,! "
sr,,# %
.,,% &
ReadLine,,& .
(,,. /
),,/ 0
;,,0 1
}-- 
}.. 
}// 
catch00 
(00 
IOException00 
exceptIO00 '
)00' (
{11 
IO22 
.22 
Logger22 
.22 
Log22 
(22 
NLog22 "
.22" #
LogLevel22# +
.22+ ,
Warn22, 0
,220 1
$str222 M
,22M N
exceptIO22O W
)22W X
;22X Y
}33 
}44 	M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_71b55 I
.55I J
BadSink55J Q
(55Q R
(55R S
Object55S Y
)55Y Z
password55Z b
)55d e
;55e f
}66 
public99 

override99 
void99 
Good99 
(99 
)99 
{:: 
GoodG2B;; 
(;; 
);; 
;;; 
GoodB2G<< 
(<< 
)<< 
;<< 
}== 
private@@ 
static@@ 
void@@ 
GoodG2B@@ 
(@@  
)@@  !
{AA 
stringBB 
passwordBB 
;BB 
passwordEE 
=EE 
$strEE "
;EE" #M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_71bFF I
.FFI J
GoodG2BSinkFFJ U
(FFU V
(FFV W
ObjectFFW ]
)FF] ^
passwordFF^ f
)FFh i
;FFi j
}GG 
privateJJ 
staticJJ 
voidJJ 
GoodB2GJJ 
(JJ  
)JJ  !
{KK 
stringLL 
passwordLL 
;LL 
passwordMM 
=MM 
$strMM 
;MM 
{OO 	
tryPP 
{QQ 
usingSS 
(SS 
	TcpClientSS  
tcpConnSS! (
=SS) *
newSS+ .
	TcpClientSS/ 8
(SS8 9
$strSS9 K
,SSK L
$numSSM R
)SSR S
)SSS T
{TT 
usingVV 
(VV 
StreamReaderVV '
srVV( *
=VV+ ,
newVV- 0
StreamReaderVV1 =
(VV= >
tcpConnVV> E
.VVE F
	GetStreamVVF O
(VVO P
)VVP Q
)VVQ R
)VVR S
{WW 
passwordYY  
=YY! "
srYY# %
.YY% &
ReadLineYY& .
(YY. /
)YY/ 0
;YY0 1
}ZZ 
}[[ 
}\\ 
catch]] 
(]] 
IOException]] 
exceptIO]] '
)]]' (
{^^ 
IO__ 
.__ 
Logger__ 
.__ 
Log__ 
(__ 
NLog__ "
.__" #
LogLevel__# +
.__+ ,
Warn__, 0
,__0 1
$str__2 M
,__M N
exceptIO__O W
)__W X
;__X Y
}`` 
}aa 	M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_71bbb I
.bbI J
GoodB2GSinkbbJ U
(bbU V
(bbV W
ObjectbbW ]
)bb] ^
passwordbb^ f
)bbh i
;bbi j
}cc 
}ee 
}ff —:
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_71b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_71b G
{ 
public   

static   
void   
BadSink   
(   
Object   %
passwordObject  & 4
)  5 6
{!! 
string"" 
password"" 
="" 
("" 
string"" !
)""! "
passwordObject""" 0
;""0 1
try## 
{$$ 	
using&& 
(&& 
SqlConnection&&  

connection&&! +
=&&, -
new&&. 1
SqlConnection&&2 ?
(&&? @
$str&&@ v
+&&w x
$str&&y }
+&&~ 
$str
&&Ä å
+
&&ç é
password
&&è ó
)
&&ó ò
)
&&ò ô
{'' 

connection(( 
.(( 
Open(( 
(((  
)((  !
;((! "
using)) 
()) 

SqlCommand)) !
command))" )
=))* +
new)), /

SqlCommand))0 :
()): ;
$str)); U
,))U V

connection))W a
)))a b
)))b c
{** 
command++ 
.++ 
ExecuteNonQuery++ +
(+++ ,
)++, -
;++- .
},, 
}-- 
}.. 	
catch// 
(// 
SqlException// 
	exceptSql// %
)//% &
{00 	
IO11 
.11 
Logger11 
.11 
Log11 
(11 
NLog11 
.11 
LogLevel11 '
.11' (
Warn11( ,
,11, -
$str11. N
,11N O
	exceptSql11P Y
)11Y Z
;11Z [
}22 	
}33 
public88 

static88 
void88 
GoodG2BSink88 "
(88" #
Object88# )
passwordObject88* 8
)889 :
{99 
string:: 
password:: 
=:: 
(:: 
string:: !
)::! "
passwordObject::" 0
;::0 1
try;; 
{<< 	
using>> 
(>> 
SqlConnection>>  

connection>>! +
=>>, -
new>>. 1
SqlConnection>>2 ?
(>>? @
$str>>@ v
+>>w x
$str>>y }
+>>~ 
$str
>>Ä å
+
>>ç é
password
>>è ó
)
>>ó ò
)
>>ò ô
{?? 

connection@@ 
.@@ 
Open@@ 
(@@  
)@@  !
;@@! "
usingAA 
(AA 

SqlCommandAA !
commandAA" )
=AA* +
newAA, /

SqlCommandAA0 :
(AA: ;
$strAA; U
,AAU V

connectionAAW a
)AAa b
)AAb c
{BB 
commandCC 
.CC 
ExecuteNonQueryCC +
(CC+ ,
)CC, -
;CC- .
}DD 
}EE 
}FF 	
catchGG 
(GG 
SqlExceptionGG 
	exceptSqlGG %
)GG% &
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. N
,IIN O
	exceptSqlIIP Y
)IIY Z
;IIZ [
}JJ 	
}KK 
publicNN 

staticNN 
voidNN 
GoodB2GSinkNN "
(NN" #
ObjectNN# )
passwordObjectNN* 8
)NN9 :
{OO 
stringPP 
passwordPP 
=PP 
(PP 
stringPP !
)PP! "
passwordObjectPP" 0
;PP0 1
ifQQ 

(QQ 
passwordQQ 
!=QQ 
nullQQ 
)QQ 
{RR 	
{TT 
usingUU 
(UU $
AesCryptoServiceProviderUU /
aesAlgUU0 6
=UU7 8
newUU9 <$
AesCryptoServiceProviderUU= U
(UUU V
)UUV W
)UUW X
{VV 
aesAlgWW 
.WW 
PaddingWW "
=WW# $
PaddingModeWW% 0
.WW0 1
NoneWW1 5
;WW5 6
aesAlgXX 
.XX 
KeyXX 
=XX  
EncodingXX! )
.XX) *
UTF8XX* .
.XX. /
GetBytesXX/ 7
(XX7 8
$strXX8 J
)XXJ K
;XXK L
ICryptoTransformZZ $
	decryptorZZ% .
=ZZ/ 0
aesAlgZZ1 7
.ZZ7 8
CreateDecryptorZZ8 G
(ZZG H
aesAlgZZH N
.ZZN O
KeyZZO R
,ZZR S
aesAlgZZT Z
.ZZZ [
IVZZ[ ]
)ZZ] ^
;ZZ^ _
using\\ 
(\\ 
MemoryStream\\ '
	msDecrypt\\( 1
=\\2 3
new\\4 7
MemoryStream\\8 D
(\\D E
Encoding\\E M
.\\M N
UTF8\\N R
.\\R S
GetBytes\\S [
(\\[ \
password\\\ d
)\\d e
)\\e f
)\\f g
{]] 
using^^ 
(^^ 
CryptoStream^^ +
	csDecrypt^^, 5
=^^6 7
new^^8 ;
CryptoStream^^< H
(^^H I
	msDecrypt^^I R
,^^R S
	decryptor^^T ]
,^^] ^
CryptoStreamMode^^_ o
.^^o p
Read^^p t
)^^t u
)^^u v
{__ 
using`` !
(``" #
StreamReader``# /
	srDecrypt``0 9
=``: ;
new``< ?
StreamReader``@ L
(``L M
	csDecrypt``M V
)``V W
)``W X
{aa 
passworddd  (
=dd) *
	srDecryptdd+ 4
.dd4 5
	ReadToEnddd5 >
(dd> ?
)dd? @
;dd@ A
}ee 
}ff 
}gg 
}hh 
}ii 
tryjj 
{kk 
usingmm 
(mm 
SqlConnectionmm $

connectionmm% /
=mm0 1
newmm2 5
SqlConnectionmm6 C
(mmC D
$strmmD z
+mm{ |
$str	mm} Å
+
mmÇ É
$str
mmÑ ê
+
mmë í
password
mmì õ
)
mmõ ú
)
mmú ù
{nn 

connectionoo 
.oo 
Openoo #
(oo# $
)oo$ %
;oo% &
usingpp 
(pp 

SqlCommandpp %
commandpp& -
=pp. /
newpp0 3

SqlCommandpp4 >
(pp> ?
$strpp? Y
,ppY Z

connectionpp[ e
)ppe f
)ppf g
{qq 
commandrr 
.rr  
ExecuteNonQueryrr  /
(rr/ 0
)rr0 1
;rr1 2
}ss 
}tt 
}uu 
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv  )
)vv) *
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
	exceptSqlxxT ]
)xx] ^
;xx^ _
}yy 
}zz 	
}{{ 
}}} 
}~~ ‹2
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_72a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_72a G
:H I
AbstractTestCaseJ Z
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string   
password   
;   
password!! 
=!! 
$str!! 
;!! 
{## 	
try$$ 
{%% 
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
password--  
=--! "
sr--# %
.--% &
ReadLine--& .
(--. /
)--/ 0
;--0 1
}.. 
}// 
}00 
catch11 
(11 
IOException11 
exceptIO11 '
)11' (
{22 
IO33 
.33 
Logger33 
.33 
Log33 
(33 
NLog33 "
.33" #
LogLevel33# +
.33+ ,
Warn33, 0
,330 1
$str332 M
,33M N
exceptIO33O W
)33W X
;33X Y
}44 
}55 	
	Hashtable66 
passwordHashtable66 #
=66$ %
new66& )
	Hashtable66* 3
(663 4
$num664 5
)665 6
;666 7
passwordHashtable77 
.77 
Add77 
(77 
$num77 
,77  
password77! )
)77) *
;77* +
passwordHashtable88 
.88 
Add88 
(88 
$num88 
,88  
password88! )
)88) *
;88* +
passwordHashtable99 
.99 
Add99 
(99 
$num99 
,99  
password99! )
)99) *
;99* +M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_72b:: I
.::I J
BadSink::J Q
(::Q R
passwordHashtable::R c
)::e f
;::f g
};; 
public>> 

override>> 
void>> 
Good>> 
(>> 
)>> 
{?? 
GoodG2B@@ 
(@@ 
)@@ 
;@@ 
GoodB2GAA 
(AA 
)AA 
;AA 
}BB 
privateEE 
staticEE 
voidEE 
GoodG2BEE 
(EE  
)EE  !
{FF 
stringGG 
passwordGG 
;GG 
passwordJJ 
=JJ 
$strJJ "
;JJ" #
	HashtableKK 
passwordHashtableKK #
=KK$ %
newKK& )
	HashtableKK* 3
(KK3 4
$numKK4 5
)KK5 6
;KK6 7
passwordHashtableLL 
.LL 
AddLL 
(LL 
$numLL 
,LL  
passwordLL! )
)LL) *
;LL* +
passwordHashtableMM 
.MM 
AddMM 
(MM 
$numMM 
,MM  
passwordMM! )
)MM) *
;MM* +
passwordHashtableNN 
.NN 
AddNN 
(NN 
$numNN 
,NN  
passwordNN! )
)NN) *
;NN* +M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_72bOO I
.OOI J
GoodG2BSinkOOJ U
(OOU V
passwordHashtableOOV g
)OOi j
;OOj k
}PP 
privateSS 
staticSS 
voidSS 
GoodB2GSS 
(SS  
)SS  !
{TT 
stringUU 
passwordUU 
;UU 
passwordVV 
=VV 
$strVV 
;VV 
{XX 	
tryYY 
{ZZ 
using\\ 
(\\ 
	TcpClient\\  
tcpConn\\! (
=\\) *
new\\+ .
	TcpClient\\/ 8
(\\8 9
$str\\9 K
,\\K L
$num\\M R
)\\R S
)\\S T
{]] 
using__ 
(__ 
StreamReader__ '
sr__( *
=__+ ,
new__- 0
StreamReader__1 =
(__= >
tcpConn__> E
.__E F
	GetStream__F O
(__O P
)__P Q
)__Q R
)__R S
{`` 
passwordbb  
=bb! "
srbb# %
.bb% &
ReadLinebb& .
(bb. /
)bb/ 0
;bb0 1
}cc 
}dd 
}ee 
catchff 
(ff 
IOExceptionff 
exceptIOff '
)ff' (
{gg 
IOhh 
.hh 
Loggerhh 
.hh 
Loghh 
(hh 
NLoghh "
.hh" #
LogLevelhh# +
.hh+ ,
Warnhh, 0
,hh0 1
$strhh2 M
,hhM N
exceptIOhhO W
)hhW X
;hhX Y
}ii 
}jj 	
	Hashtablekk 
passwordHashtablekk #
=kk$ %
newkk& )
	Hashtablekk* 3
(kk3 4
$numkk4 5
)kk5 6
;kk6 7
passwordHashtablell 
.ll 
Addll 
(ll 
$numll 
,ll  
passwordll! )
)ll) *
;ll* +
passwordHashtablemm 
.mm 
Addmm 
(mm 
$nummm 
,mm  
passwordmm! )
)mm) *
;mm* +
passwordHashtablenn 
.nn 
Addnn 
(nn 
$numnn 
,nn  
passwordnn! )
)nn) *
;nn* +M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_72boo I
.ooI J
GoodB2GSinkooJ U
(ooU V
passwordHashtableooV g
)ooi j
;ooj k
}pp 
}rr 
}ss ¸;
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_72b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_72b G
{ 
public   

static   
void   
BadSink   
(   
	Hashtable   (
passwordHashtable  ) :
)  ; <
{!! 
string"" 
password"" 
="" 
("" 
string"" !
)""! "
passwordHashtable""# 4
[""4 5
$num""5 6
]""6 7
;""7 8
try## 
{$$ 	
using&& 
(&& 
SqlConnection&&  

connection&&! +
=&&, -
new&&. 1
SqlConnection&&2 ?
(&&? @
$str&&@ v
+&&w x
$str&&y }
+&&~ 
$str
&&Ä å
+
&&ç é
password
&&è ó
)
&&ó ò
)
&&ò ô
{'' 

connection(( 
.(( 
Open(( 
(((  
)((  !
;((! "
using)) 
()) 

SqlCommand)) !
command))" )
=))* +
new)), /

SqlCommand))0 :
()): ;
$str)); U
,))U V

connection))W a
)))a b
)))b c
{** 
command++ 
.++ 
ExecuteNonQuery++ +
(+++ ,
)++, -
;++- .
},, 
}-- 
}.. 	
catch// 
(// 
SqlException// 
	exceptSql// %
)//% &
{00 	
IO11 
.11 
Logger11 
.11 
Log11 
(11 
NLog11 
.11 
LogLevel11 '
.11' (
Warn11( ,
,11, -
$str11. N
,11N O
	exceptSql11P Y
)11Y Z
;11Z [
}22 	
}33 
public88 

static88 
void88 
GoodG2BSink88 "
(88" #
	Hashtable88# ,
passwordHashtable88- >
)88? @
{99 
string:: 
password:: 
=:: 
(:: 
string:: !
)::! "
passwordHashtable::# 4
[::4 5
$num::5 6
]::6 7
;::7 8
try;; 
{<< 	
using>> 
(>> 
SqlConnection>>  

connection>>! +
=>>, -
new>>. 1
SqlConnection>>2 ?
(>>? @
$str>>@ v
+>>w x
$str>>y }
+>>~ 
$str
>>Ä å
+
>>ç é
password
>>è ó
)
>>ó ò
)
>>ò ô
{?? 

connection@@ 
.@@ 
Open@@ 
(@@  
)@@  !
;@@! "
usingAA 
(AA 

SqlCommandAA !
commandAA" )
=AA* +
newAA, /

SqlCommandAA0 :
(AA: ;
$strAA; U
,AAU V

connectionAAW a
)AAa b
)AAb c
{BB 
commandCC 
.CC 
ExecuteNonQueryCC +
(CC+ ,
)CC, -
;CC- .
}DD 
}EE 
}FF 	
catchGG 
(GG 
SqlExceptionGG 
	exceptSqlGG %
)GG% &
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. N
,IIN O
	exceptSqlIIP Y
)IIY Z
;IIZ [
}JJ 	
}KK 
publicNN 

staticNN 
voidNN 
GoodB2GSinkNN "
(NN" #
	HashtableNN# ,
passwordHashtableNN- >
)NN? @
{OO 
stringPP 
passwordPP 
=PP 
(PP 
stringPP !
)PP! "
passwordHashtablePP# 4
[PP4 5
$numPP5 6
]PP6 7
;PP7 8
ifQQ 

(QQ 
passwordQQ 
!=QQ 
nullQQ 
)QQ 
{RR 	
{TT 
usingUU 
(UU $
AesCryptoServiceProviderUU /
aesAlgUU0 6
=UU7 8
newUU9 <$
AesCryptoServiceProviderUU= U
(UUU V
)UUV W
)UUW X
{VV 
aesAlgWW 
.WW 
PaddingWW "
=WW# $
PaddingModeWW% 0
.WW0 1
NoneWW1 5
;WW5 6
aesAlgXX 
.XX 
KeyXX 
=XX  
EncodingXX! )
.XX) *
UTF8XX* .
.XX. /
GetBytesXX/ 7
(XX7 8
$strXX8 J
)XXJ K
;XXK L
ICryptoTransformZZ $
	decryptorZZ% .
=ZZ/ 0
aesAlgZZ1 7
.ZZ7 8
CreateDecryptorZZ8 G
(ZZG H
aesAlgZZH N
.ZZN O
KeyZZO R
,ZZR S
aesAlgZZT Z
.ZZZ [
IVZZ[ ]
)ZZ] ^
;ZZ^ _
using\\ 
(\\ 
MemoryStream\\ '
	msDecrypt\\( 1
=\\2 3
new\\4 7
MemoryStream\\8 D
(\\D E
Encoding\\E M
.\\M N
UTF8\\N R
.\\R S
GetBytes\\S [
(\\[ \
password\\\ d
)\\d e
)\\e f
)\\f g
{]] 
using^^ 
(^^ 
CryptoStream^^ +
	csDecrypt^^, 5
=^^6 7
new^^8 ;
CryptoStream^^< H
(^^H I
	msDecrypt^^I R
,^^R S
	decryptor^^T ]
,^^] ^
CryptoStreamMode^^_ o
.^^o p
Read^^p t
)^^t u
)^^u v
{__ 
using`` !
(``" #
StreamReader``# /
	srDecrypt``0 9
=``: ;
new``< ?
StreamReader``@ L
(``L M
	csDecrypt``M V
)``V W
)``W X
{aa 
passworddd  (
=dd) *
	srDecryptdd+ 4
.dd4 5
	ReadToEnddd5 >
(dd> ?
)dd? @
;dd@ A
}ee 
}ff 
}gg 
}hh 
}ii 
tryjj 
{kk 
usingmm 
(mm 
SqlConnectionmm $

connectionmm% /
=mm0 1
newmm2 5
SqlConnectionmm6 C
(mmC D
$strmmD z
+mm{ |
$str	mm} Å
+
mmÇ É
$str
mmÑ ê
+
mmë í
password
mmì õ
)
mmõ ú
)
mmú ù
{nn 

connectionoo 
.oo 
Openoo #
(oo# $
)oo$ %
;oo% &
usingpp 
(pp 

SqlCommandpp %
commandpp& -
=pp. /
newpp0 3

SqlCommandpp4 >
(pp> ?
$strpp? Y
,ppY Z

connectionpp[ e
)ppe f
)ppf g
{qq 
commandrr 
.rr  
ExecuteNonQueryrr  /
(rr/ 0
)rr0 1
;rr1 2
}ss 
}tt 
}uu 
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv  )
)vv) *
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
	exceptSqlxxT ]
)xx] ^
;xx^ _
}yy 
}zz 	
}{{ 
}}} 
}~~ ‚2
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_73a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_73a G
:H I
AbstractTestCaseJ Z
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string   
password   
;   
password!! 
=!! 
$str!! 
;!! 
{## 	
try$$ 
{%% 
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
password--  
=--! "
sr--# %
.--% &
ReadLine--& .
(--. /
)--/ 0
;--0 1
}.. 
}// 
}00 
catch11 
(11 
IOException11 
exceptIO11 '
)11' (
{22 
IO33 
.33 
Logger33 
.33 
Log33 
(33 
NLog33 "
.33" #
LogLevel33# +
.33+ ,
Warn33, 0
,330 1
$str332 M
,33M N
exceptIO33O W
)33W X
;33X Y
}44 
}55 	

LinkedList66 
<66 
string66 
>66 
passwordLinkedList66 -
=66. /
new660 3

LinkedList664 >
<66> ?
string66? E
>66E F
(66F G
)66G H
;66H I
passwordLinkedList77 
.77 
AddLast77 "
(77" #
password77# +
)77+ ,
;77, -
passwordLinkedList88 
.88 
AddLast88 "
(88" #
password88# +
)88+ ,
;88, -
passwordLinkedList99 
.99 
AddLast99 "
(99" #
password99# +
)99+ ,
;99, -M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_73b:: I
.::I J
BadSink::J Q
(::Q R
passwordLinkedList::R d
)::f g
;::g h
};; 
public>> 

override>> 
void>> 
Good>> 
(>> 
)>> 
{?? 
GoodG2B@@ 
(@@ 
)@@ 
;@@ 
GoodB2GAA 
(AA 
)AA 
;AA 
}BB 
privateEE 
staticEE 
voidEE 
GoodG2BEE 
(EE  
)EE  !
{FF 
stringGG 
passwordGG 
;GG 
passwordJJ 
=JJ 
$strJJ "
;JJ" #

LinkedListKK 
<KK 
stringKK 
>KK 
passwordLinkedListKK -
=KK. /
newKK0 3

LinkedListKK4 >
<KK> ?
stringKK? E
>KKE F
(KKF G
)KKG H
;KKH I
passwordLinkedListLL 
.LL 
AddLastLL "
(LL" #
passwordLL# +
)LL+ ,
;LL, -
passwordLinkedListMM 
.MM 
AddLastMM "
(MM" #
passwordMM# +
)MM+ ,
;MM, -
passwordLinkedListNN 
.NN 
AddLastNN "
(NN" #
passwordNN# +
)NN+ ,
;NN, -M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_73bOO I
.OOI J
GoodG2BSinkOOJ U
(OOU V
passwordLinkedListOOV h
)OOj k
;OOk l
}PP 
privateSS 
staticSS 
voidSS 
GoodB2GSS 
(SS  
)SS  !
{TT 
stringUU 
passwordUU 
;UU 
passwordVV 
=VV 
$strVV 
;VV 
{XX 	
tryYY 
{ZZ 
using\\ 
(\\ 
	TcpClient\\  
tcpConn\\! (
=\\) *
new\\+ .
	TcpClient\\/ 8
(\\8 9
$str\\9 K
,\\K L
$num\\M R
)\\R S
)\\S T
{]] 
using__ 
(__ 
StreamReader__ '
sr__( *
=__+ ,
new__- 0
StreamReader__1 =
(__= >
tcpConn__> E
.__E F
	GetStream__F O
(__O P
)__P Q
)__Q R
)__R S
{`` 
passwordbb  
=bb! "
srbb# %
.bb% &
ReadLinebb& .
(bb. /
)bb/ 0
;bb0 1
}cc 
}dd 
}ee 
catchff 
(ff 
IOExceptionff 
exceptIOff '
)ff' (
{gg 
IOhh 
.hh 
Loggerhh 
.hh 
Loghh 
(hh 
NLoghh "
.hh" #
LogLevelhh# +
.hh+ ,
Warnhh, 0
,hh0 1
$strhh2 M
,hhM N
exceptIOhhO W
)hhW X
;hhX Y
}ii 
}jj 	

LinkedListkk 
<kk 
stringkk 
>kk 
passwordLinkedListkk -
=kk. /
newkk0 3

LinkedListkk4 >
<kk> ?
stringkk? E
>kkE F
(kkF G
)kkG H
;kkH I
passwordLinkedListll 
.ll 
AddLastll "
(ll" #
passwordll# +
)ll+ ,
;ll, -
passwordLinkedListmm 
.mm 
AddLastmm "
(mm" #
passwordmm# +
)mm+ ,
;mm, -
passwordLinkedListnn 
.nn 
AddLastnn "
(nn" #
passwordnn# +
)nn+ ,
;nn, -M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_73boo I
.ooI J
GoodB2GSinkooJ U
(ooU V
passwordLinkedListooV h
)ooj k
;ook l
}pp 
}rr 
}ss æ<
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_73b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_73b G
{ 
public   

static   
void   
BadSink   
(   

LinkedList   )
<  ) *
string  * 0
>  0 1
passwordLinkedList  2 D
)  E F
{!! 
string"" 
password"" 
="" 
passwordLinkedList"" ,
."", -
Last""- 1
.""1 2
Value""2 7
;""7 8
try## 
{$$ 	
using&& 
(&& 
SqlConnection&&  

connection&&! +
=&&, -
new&&. 1
SqlConnection&&2 ?
(&&? @
$str&&@ v
+&&w x
$str&&y }
+&&~ 
$str
&&Ä å
+
&&ç é
password
&&è ó
)
&&ó ò
)
&&ò ô
{'' 

connection(( 
.(( 
Open(( 
(((  
)((  !
;((! "
using)) 
()) 

SqlCommand)) !
command))" )
=))* +
new)), /

SqlCommand))0 :
()): ;
$str)); U
,))U V

connection))W a
)))a b
)))b c
{** 
command++ 
.++ 
ExecuteNonQuery++ +
(+++ ,
)++, -
;++- .
},, 
}-- 
}.. 	
catch// 
(// 
SqlException// 
	exceptSql// %
)//% &
{00 	
IO11 
.11 
Logger11 
.11 
Log11 
(11 
NLog11 
.11 
LogLevel11 '
.11' (
Warn11( ,
,11, -
$str11. N
,11N O
	exceptSql11P Y
)11Y Z
;11Z [
}22 	
}33 
public88 

static88 
void88 
GoodG2BSink88 "
(88" #

LinkedList88# -
<88- .
string88. 4
>884 5
passwordLinkedList886 H
)88I J
{99 
string:: 
password:: 
=:: 
passwordLinkedList:: ,
.::, -
Last::- 1
.::1 2
Value::2 7
;::7 8
try;; 
{<< 	
using>> 
(>> 
SqlConnection>>  

connection>>! +
=>>, -
new>>. 1
SqlConnection>>2 ?
(>>? @
$str>>@ v
+>>w x
$str>>y }
+>>~ 
$str
>>Ä å
+
>>ç é
password
>>è ó
)
>>ó ò
)
>>ò ô
{?? 

connection@@ 
.@@ 
Open@@ 
(@@  
)@@  !
;@@! "
usingAA 
(AA 

SqlCommandAA !
commandAA" )
=AA* +
newAA, /

SqlCommandAA0 :
(AA: ;
$strAA; U
,AAU V

connectionAAW a
)AAa b
)AAb c
{BB 
commandCC 
.CC 
ExecuteNonQueryCC +
(CC+ ,
)CC, -
;CC- .
}DD 
}EE 
}FF 	
catchGG 
(GG 
SqlExceptionGG 
	exceptSqlGG %
)GG% &
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. N
,IIN O
	exceptSqlIIP Y
)IIY Z
;IIZ [
}JJ 	
}KK 
publicNN 

staticNN 
voidNN 
GoodB2GSinkNN "
(NN" #

LinkedListNN# -
<NN- .
stringNN. 4
>NN4 5
passwordLinkedListNN6 H
)NNI J
{OO 
stringPP 
passwordPP 
=PP 
passwordLinkedListPP ,
.PP, -
LastPP- 1
.PP1 2
ValuePP2 7
;PP7 8
ifQQ 

(QQ 
passwordQQ 
!=QQ 
nullQQ 
)QQ 
{RR 	
{TT 
usingUU 
(UU $
AesCryptoServiceProviderUU /
aesAlgUU0 6
=UU7 8
newUU9 <$
AesCryptoServiceProviderUU= U
(UUU V
)UUV W
)UUW X
{VV 
aesAlgWW 
.WW 
PaddingWW "
=WW# $
PaddingModeWW% 0
.WW0 1
NoneWW1 5
;WW5 6
aesAlgXX 
.XX 
KeyXX 
=XX  
EncodingXX! )
.XX) *
UTF8XX* .
.XX. /
GetBytesXX/ 7
(XX7 8
$strXX8 J
)XXJ K
;XXK L
ICryptoTransformZZ $
	decryptorZZ% .
=ZZ/ 0
aesAlgZZ1 7
.ZZ7 8
CreateDecryptorZZ8 G
(ZZG H
aesAlgZZH N
.ZZN O
KeyZZO R
,ZZR S
aesAlgZZT Z
.ZZZ [
IVZZ[ ]
)ZZ] ^
;ZZ^ _
using\\ 
(\\ 
MemoryStream\\ '
	msDecrypt\\( 1
=\\2 3
new\\4 7
MemoryStream\\8 D
(\\D E
Encoding\\E M
.\\M N
UTF8\\N R
.\\R S
GetBytes\\S [
(\\[ \
password\\\ d
)\\d e
)\\e f
)\\f g
{]] 
using^^ 
(^^ 
CryptoStream^^ +
	csDecrypt^^, 5
=^^6 7
new^^8 ;
CryptoStream^^< H
(^^H I
	msDecrypt^^I R
,^^R S
	decryptor^^T ]
,^^] ^
CryptoStreamMode^^_ o
.^^o p
Read^^p t
)^^t u
)^^u v
{__ 
using`` !
(``" #
StreamReader``# /
	srDecrypt``0 9
=``: ;
new``< ?
StreamReader``@ L
(``L M
	csDecrypt``M V
)``V W
)``W X
{aa 
passworddd  (
=dd) *
	srDecryptdd+ 4
.dd4 5
	ReadToEnddd5 >
(dd> ?
)dd? @
;dd@ A
}ee 
}ff 
}gg 
}hh 
}ii 
tryjj 
{kk 
usingmm 
(mm 
SqlConnectionmm $

connectionmm% /
=mm0 1
newmm2 5
SqlConnectionmm6 C
(mmC D
$strmmD z
+mm{ |
$str	mm} Å
+
mmÇ É
$str
mmÑ ê
+
mmë í
password
mmì õ
)
mmõ ú
)
mmú ù
{nn 

connectionoo 
.oo 
Openoo #
(oo# $
)oo$ %
;oo% &
usingpp 
(pp 

SqlCommandpp %
commandpp& -
=pp. /
newpp0 3

SqlCommandpp4 >
(pp> ?
$strpp? Y
,ppY Z

connectionpp[ e
)ppe f
)ppf g
{qq 
commandrr 
.rr  
ExecuteNonQueryrr  /
(rr/ 0
)rr0 1
;rr1 2
}ss 
}tt 
}uu 
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv  )
)vv) *
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
	exceptSqlxxT ]
)xx] ^
;xx^ _
}yy 
}zz 	
}{{ 
}}} 
}~~ ß6
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_74a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_74a G
:H I
AbstractTestCaseJ Z
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string   
password   
;   
password!! 
=!! 
$str!! 
;!! 
{## 	
try$$ 
{%% 
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
password--  
=--! "
sr--# %
.--% &
ReadLine--& .
(--. /
)--/ 0
;--0 1
}.. 
}// 
}00 
catch11 
(11 
IOException11 
exceptIO11 '
)11' (
{22 
IO33 
.33 
Logger33 
.33 
Log33 
(33 
NLog33 "
.33" #
LogLevel33# +
.33+ ,
Warn33, 0
,330 1
$str332 M
,33M N
exceptIO33O W
)33W X
;33X Y
}44 
}55 	

Dictionary66 
<66 
int66 
,66 
string66 
>66 
passwordDictionary66 1
=662 3
new664 7

Dictionary668 B
<66B C
int66C F
,66F G
string66G M
>66M N
(66N O
)66O P
;66P Q
passwordDictionary77 
.77 
Add77 
(77 
$num77  
,77  !
password77" *
)77* +
;77+ ,
passwordDictionary88 
.88 
Add88 
(88 
$num88  
,88  !
password88" *
)88* +
;88+ ,
passwordDictionary99 
.99 
Add99 
(99 
$num99  
,99  !
password99" *
)99* +
;99+ ,M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_74b:: I
.::I J
BadSink::J Q
(::Q R
passwordDictionary::R d
)::f g
;::g h
};; 
public>> 

override>> 
void>> 
Good>> 
(>> 
)>> 
{?? 
GoodG2B@@ 
(@@ 
)@@ 
;@@ 
GoodB2GAA 
(AA 
)AA 
;AA 
}BB 
privateEE 
staticEE 
voidEE 
GoodG2BEE 
(EE  
)EE  !
{FF 
stringGG 
passwordGG 
;GG 
passwordJJ 
=JJ 
$strJJ "
;JJ" #

DictionaryKK 
<KK 
intKK 
,KK 
stringKK 
>KK 
passwordDictionaryKK 1
=KK2 3
newKK4 7

DictionaryKK8 B
<KKB C
intKKC F
,KKF G
stringKKG M
>KKM N
(KKN O
)KKO P
;KKP Q
passwordDictionaryLL 
.LL 
AddLL 
(LL 
$numLL  
,LL  !
passwordLL" *
)LL* +
;LL+ ,
passwordDictionaryMM 
.MM 
AddMM 
(MM 
$numMM  
,MM  !
passwordMM" *
)MM* +
;MM+ ,
passwordDictionaryNN 
.NN 
AddNN 
(NN 
$numNN  
,NN  !
passwordNN" *
)NN* +
;NN+ ,M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_74bOO I
.OOI J
GoodG2BSinkOOJ U
(OOU V
passwordDictionaryOOV h
)OOj k
;OOk l
}PP 
privateSS 
staticSS 
voidSS 
GoodB2GSS 
(SS  
)SS  !
{TT 
stringUU 
passwordUU 
;UU 
passwordVV 
=VV 
$strVV 
;VV 
{XX 	
tryYY 
{ZZ 
using\\ 
(\\ 
	TcpClient\\  
tcpConn\\! (
=\\) *
new\\+ .
	TcpClient\\/ 8
(\\8 9
$str\\9 K
,\\K L
$num\\M R
)\\R S
)\\S T
{]] 
using__ 
(__ 
StreamReader__ '
sr__( *
=__+ ,
new__- 0
StreamReader__1 =
(__= >
tcpConn__> E
.__E F
	GetStream__F O
(__O P
)__P Q
)__Q R
)__R S
{`` 
passwordbb  
=bb! "
srbb# %
.bb% &
ReadLinebb& .
(bb. /
)bb/ 0
;bb0 1
}cc 
}dd 
}ee 
catchff 
(ff 
IOExceptionff 
exceptIOff '
)ff' (
{gg 
IOhh 
.hh 
Loggerhh 
.hh 
Loghh 
(hh 
NLoghh "
.hh" #
LogLevelhh# +
.hh+ ,
Warnhh, 0
,hh0 1
$strhh2 M
,hhM N
exceptIOhhO W
)hhW X
;hhX Y
}ii 
}jj 	

Dictionarykk 
<kk 
intkk 
,kk 
stringkk 
>kk 
passwordDictionarykk 1
=kk2 3
newkk4 7

Dictionarykk8 B
<kkB C
intkkC F
,kkF G
stringkkG M
>kkM N
(kkN O
)kkO P
;kkP Q
passwordDictionaryll 
.ll 
Addll 
(ll 
$numll  
,ll  !
passwordll" *
)ll* +
;ll+ ,
passwordDictionarymm 
.mm 
Addmm 
(mm 
$nummm  
,mm  !
passwordmm" *
)mm* +
;mm+ ,
passwordDictionarynn 
.nn 
Addnn 
(nn 
$numnn  
,nn  !
passwordnn" *
)nn* +
;nn+ ,M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_74boo I
.ooI J
GoodB2GSinkooJ U
(ooU V
passwordDictionaryooV h
)ooj k
;ook l
}pp 
}rr 
}ss Â<
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_74b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_74b G
{ 
public   

static   
void   
BadSink   
(   

Dictionary   )
<  ) *
int  * -
,  - .
string  . 4
>  4 5
passwordDictionary  6 H
)  I J
{!! 
string"" 
password"" 
="" 
passwordDictionary"" ,
["", -
$num""- .
]"". /
;""/ 0
try## 
{$$ 	
using&& 
(&& 
SqlConnection&&  

connection&&! +
=&&, -
new&&. 1
SqlConnection&&2 ?
(&&? @
$str&&@ v
+&&w x
$str&&y }
+&&~ 
$str
&&Ä å
+
&&ç é
password
&&è ó
)
&&ó ò
)
&&ò ô
{'' 

connection(( 
.(( 
Open(( 
(((  
)((  !
;((! "
using)) 
()) 

SqlCommand)) !
command))" )
=))* +
new)), /

SqlCommand))0 :
()): ;
$str)); U
,))U V

connection))W a
)))a b
)))b c
{** 
command++ 
.++ 
ExecuteNonQuery++ +
(+++ ,
)++, -
;++- .
},, 
}-- 
}.. 	
catch// 
(// 
SqlException// 
	exceptSql// %
)//% &
{00 	
IO11 
.11 
Logger11 
.11 
Log11 
(11 
NLog11 
.11 
LogLevel11 '
.11' (
Warn11( ,
,11, -
$str11. N
,11N O
	exceptSql11P Y
)11Y Z
;11Z [
}22 	
}33 
public88 

static88 
void88 
GoodG2BSink88 #
(88# $

Dictionary88$ .
<88. /
int88/ 2
,882 3
string883 9
>889 :
passwordDictionary88; M
)88N O
{99 
string:: 
password:: 
=:: 
passwordDictionary:: ,
[::, -
$num::- .
]::. /
;::/ 0
try;; 
{<< 	
using>> 
(>> 
SqlConnection>>  

connection>>! +
=>>, -
new>>. 1
SqlConnection>>2 ?
(>>? @
$str>>@ v
+>>w x
$str>>y }
+>>~ 
$str
>>Ä å
+
>>ç é
password
>>è ó
)
>>ó ò
)
>>ò ô
{?? 

connection@@ 
.@@ 
Open@@ 
(@@  
)@@  !
;@@! "
usingAA 
(AA 

SqlCommandAA !
commandAA" )
=AA* +
newAA, /

SqlCommandAA0 :
(AA: ;
$strAA; U
,AAU V

connectionAAW a
)AAa b
)AAb c
{BB 
commandCC 
.CC 
ExecuteNonQueryCC +
(CC+ ,
)CC, -
;CC- .
}DD 
}EE 
}FF 	
catchGG 
(GG 
SqlExceptionGG 
	exceptSqlGG %
)GG% &
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. N
,IIN O
	exceptSqlIIP Y
)IIY Z
;IIZ [
}JJ 	
}KK 
publicNN 

staticNN 
voidNN 
GoodB2GSinkNN "
(NN" #

DictionaryNN# -
<NN- .
intNN. 1
,NN1 2
stringNN2 8
>NN8 9
passwordDictionaryNN: L
)NNM N
{OO 
stringPP 
passwordPP 
=PP 
passwordDictionaryPP ,
[PP, -
$numPP- .
]PP. /
;PP/ 0
ifQQ 

(QQ 
passwordQQ 
!=QQ 
nullQQ 
)QQ 
{RR 	
{TT 
usingUU 
(UU $
AesCryptoServiceProviderUU /
aesAlgUU0 6
=UU7 8
newUU9 <$
AesCryptoServiceProviderUU= U
(UUU V
)UUV W
)UUW X
{VV 
aesAlgWW 
.WW 
PaddingWW "
=WW# $
PaddingModeWW% 0
.WW0 1
NoneWW1 5
;WW5 6
aesAlgXX 
.XX 
KeyXX 
=XX  
EncodingXX! )
.XX) *
UTF8XX* .
.XX. /
GetBytesXX/ 7
(XX7 8
$strXX8 J
)XXJ K
;XXK L
ICryptoTransformZZ $
	decryptorZZ% .
=ZZ/ 0
aesAlgZZ1 7
.ZZ7 8
CreateDecryptorZZ8 G
(ZZG H
aesAlgZZH N
.ZZN O
KeyZZO R
,ZZR S
aesAlgZZT Z
.ZZZ [
IVZZ[ ]
)ZZ] ^
;ZZ^ _
using\\ 
(\\ 
MemoryStream\\ '
	msDecrypt\\( 1
=\\2 3
new\\4 7
MemoryStream\\8 D
(\\D E
Encoding\\E M
.\\M N
UTF8\\N R
.\\R S
GetBytes\\S [
(\\[ \
password\\\ d
)\\d e
)\\e f
)\\f g
{]] 
using^^ 
(^^ 
CryptoStream^^ +
	csDecrypt^^, 5
=^^6 7
new^^8 ;
CryptoStream^^< H
(^^H I
	msDecrypt^^I R
,^^R S
	decryptor^^T ]
,^^] ^
CryptoStreamMode^^_ o
.^^o p
Read^^p t
)^^t u
)^^u v
{__ 
using`` !
(``" #
StreamReader``# /
	srDecrypt``0 9
=``: ;
new``< ?
StreamReader``@ L
(``L M
	csDecrypt``M V
)``V W
)``W X
{aa 
passworddd  (
=dd) *
	srDecryptdd+ 4
.dd4 5
	ReadToEnddd5 >
(dd> ?
)dd? @
;dd@ A
}ee 
}ff 
}gg 
}hh 
}ii 
tryjj 
{kk 
usingmm 
(mm 
SqlConnectionmm $

connectionmm% /
=mm0 1
newmm2 5
SqlConnectionmm6 C
(mmC D
$strmmD z
+mm{ |
$str	mm} Å
+
mmÇ É
$str
mmÑ ê
+
mmë í
password
mmì õ
)
mmõ ú
)
mmú ù
{nn 

connectionoo 
.oo 
Openoo #
(oo# $
)oo$ %
;oo% &
usingpp 
(pp 

SqlCommandpp %
commandpp& -
=pp. /
newpp0 3

SqlCommandpp4 >
(pp> ?
$strpp? Y
,ppY Z

connectionpp[ e
)ppe f
)ppf g
{qq 
commandrr 
.rr  
ExecuteNonQueryrr  /
(rr/ 0
)rr0 1
;rr1 2
}ss 
}tt 
}uu 
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv  )
)vv) *
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
	exceptSqlxxT ]
)xx] ^
;xx^ _
}yy 
}zz 	
}{{ 
}}} 
}~~ ™L
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_75a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_75a G
:H I
AbstractTestCaseJ Z
{ 
public 

override 
void 
Bad 
( 
) 
{   
string!! 
password!! 
;!! 
password"" 
="" 
$str"" 
;"" 
{$$ 	
try%% 
{&& 
using(( 
((( 
	TcpClient((  
tcpConn((! (
=(() *
new((+ .
	TcpClient((/ 8
(((8 9
$str((9 K
,((K L
$num((M R
)((R S
)((S T
{)) 
using++ 
(++ 
StreamReader++ '
sr++( *
=+++ ,
new++- 0
StreamReader++1 =
(++= >
tcpConn++> E
.++E F
	GetStream++F O
(++O P
)++P Q
)++Q R
)++R S
{,, 
password..  
=..! "
sr..# %
...% &
ReadLine..& .
(... /
)../ 0
;..0 1
}// 
}00 
}11 
catch22 
(22 
IOException22 
exceptIO22 '
)22' (
{33 
IO44 
.44 
Logger44 
.44 
Log44 
(44 
NLog44 "
.44" #
LogLevel44# +
.44+ ,
Warn44, 0
,440 1
$str442 M
,44M N
exceptIO44O W
)44W X
;44X Y
}55 
}66 	
byte88 
[88 
]88 
passwordSerialized88 !
=88" #
null88$ (
;88( )
try99 
{:: 	
BinaryFormatter;; 
bf;; 
=;;  
new;;! $
BinaryFormatter;;% 4
(;;4 5
);;5 6
;;;6 7
using<< 
(<< 
var<< 
ms<< 
=<< 
new<< 
MemoryStream<<  ,
(<<, -
)<<- .
)<<. /
{== 
bf>> 
.>> 
	Serialize>> 
(>> 
ms>> 
,>>  
password>>! )
)>>) *
;>>* +
passwordSerialized?? "
=??# $
ms??% '
.??' (
ToArray??( /
(??/ 0
)??0 1
;??1 2
}@@ M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_75bAA M
.AAM N
BadSinkAAN U
(AAU V
passwordSerializedAAV h
)AAj k
;AAk l
}BB 	
catchCC 
(CC "
SerializationExceptionCC %
exceptSerializeCC& 5
)CC5 6
{DD 	
IOEE 
.EE 
LoggerEE 
.EE 
LogEE 
(EE 
NLogEE 
.EE 
LogLevelEE '
.EE' (
WarnEE( ,
,EE, -
$strEE. X
,EEX Y
exceptSerializeEEZ i
)EEi j
;EEj k
}FF 	
}GG 
publicJJ 

overrideJJ 
voidJJ 
GoodJJ 
(JJ 
)JJ 
{KK 
GoodG2BLL 
(LL 
)LL 
;LL 
GoodB2GMM 
(MM 
)MM 
;MM 
}NN 
privateQQ 
staticQQ 
voidQQ 
GoodG2BQQ 
(QQ  
)QQ  !
{RR 
stringSS 
passwordSS 
;SS 
passwordTT 
=TT 
$strTT 
;TT 
{VV 	
tryWW 
{XX 
usingZZ 
(ZZ 
	TcpClientZZ  
tcpConnZZ! (
=ZZ) *
newZZ+ .
	TcpClientZZ/ 8
(ZZ8 9
$strZZ9 K
,ZZK L
$numZZM R
)ZZR S
)ZZS T
{[[ 
using]] 
(]] 
StreamReader]] '
sr]]( *
=]]+ ,
new]]- 0
StreamReader]]1 =
(]]= >
tcpConn]]> E
.]]E F
	GetStream]]F O
(]]O P
)]]P Q
)]]Q R
)]]R S
{^^ 
password``  
=``! "
sr``# %
.``% &
ReadLine``& .
(``. /
)``/ 0
;``0 1
}aa 
}bb 
}cc 
catchdd 
(dd 
IOExceptiondd 
exceptIOdd '
)dd' (
{ee 
IOff 
.ff 
Loggerff 
.ff 
Logff 
(ff 
NLogff "
.ff" #
LogLevelff# +
.ff+ ,
Warnff, 0
,ff0 1
$strff2 M
,ffM N
exceptIOffO W
)ffW X
;ffX Y
}gg 
}hh 	
bytejj 
[jj 
]jj 
passwordSerializedjj !
=jj" #
nulljj$ (
;jj( )
trykk 
{ll 	
BinaryFormattermm 
bfmm 
=mm  
newmm! $
BinaryFormattermm% 4
(mm4 5
)mm5 6
;mm6 7
usingnn 
(nn 
varnn 
msnn 
=nn 
newnn 
MemoryStreamnn  ,
(nn, -
)nn- .
)nn. /
{oo 
bfpp 
.pp 
	Serializepp 
(pp 
mspp 
,pp  
passwordpp! )
)pp) *
;pp* +
passwordSerializedqq "
=qq# $
msqq% '
.qq' (
ToArrayqq( /
(qq/ 0
)qq0 1
;qq1 2
}rr M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_75bss M
.ssM N
GoodG2BSinkssN Y
(ssY Z
passwordSerializedssZ l
)ssn o
;sso p
}tt 	
catchuu 
(uu "
SerializationExceptionuu %
exceptSerializeuu& 5
)uu5 6
{vv 	
IOww 
.ww 
Loggerww 
.ww 
Logww 
(ww 
NLogww 
.ww 
LogLevelww '
.ww' (
Warnww( ,
,ww, -
$strww. X
,wwX Y
exceptSerializewwZ i
)wwi j
;wwj k
}xx 	
}yy 
private|| 
static|| 
void|| 
GoodB2G|| 
(||  
)||  !
{}} 
string~~ 
password~~ 
;~~ 
password 
= 
$str 
; 
{
ÅÅ 	
try
ÇÇ 
{
ÉÉ 
using
ÖÖ 
(
ÖÖ 
	TcpClient
ÖÖ  
tcpConn
ÖÖ! (
=
ÖÖ) *
new
ÖÖ+ .
	TcpClient
ÖÖ/ 8
(
ÖÖ8 9
$str
ÖÖ9 K
,
ÖÖK L
$num
ÖÖM R
)
ÖÖR S
)
ÖÖS T
{
ÜÜ 
using
àà 
(
àà 
StreamReader
àà '
sr
àà( *
=
àà+ ,
new
àà- 0
StreamReader
àà1 =
(
àà= >
tcpConn
àà> E
.
ààE F
	GetStream
ààF O
(
ààO P
)
ààP Q
)
ààQ R
)
ààR S
{
ââ 
password
ãã  
=
ãã! "
sr
ãã# %
.
ãã% &
ReadLine
ãã& .
(
ãã. /
)
ãã/ 0
;
ãã0 1
}
åå 
}
çç 
}
éé 
catch
èè 
(
èè 
IOException
èè 
exceptIO
èè '
)
èè' (
{
êê 
IO
ëë 
.
ëë 
Logger
ëë 
.
ëë 
Log
ëë 
(
ëë 
NLog
ëë "
.
ëë" #
LogLevel
ëë# +
.
ëë+ ,
Warn
ëë, 0
,
ëë0 1
$str
ëë2 M
,
ëëM N
exceptIO
ëëO W
)
ëëW X
;
ëëX Y
}
íí 
}
ìì 	
byte
ïï 
[
ïï 
]
ïï  
passwordSerialized
ïï !
=
ïï" #
null
ïï$ (
;
ïï( )
try
ññ 
{
óó 	
BinaryFormatter
òò 
bf
òò 
=
òò  
new
òò! $
BinaryFormatter
òò% 4
(
òò4 5
)
òò5 6
;
òò6 7
using
ôô 
(
ôô 
var
ôô 
ms
ôô 
=
ôô 
new
ôô 
MemoryStream
ôô  ,
(
ôô, -
)
ôô- .
)
ôô. /
{
öö 
bf
õõ 
.
õõ 
	Serialize
õõ 
(
õõ 
ms
õõ 
,
õõ  
password
õõ! )
)
õõ) *
;
õõ* + 
passwordSerialized
úú "
=
úú# $
ms
úú% '
.
úú' (
ToArray
úú( /
(
úú/ 0
)
úú0 1
;
úú1 2
}
ùù O
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_75b
ûû M
.
ûûM N
GoodB2GSink
ûûN Y
(
ûûY Z 
passwordSerialized
ûûZ l
)
ûûn o
;
ûûo p
}
üü 	
catch
†† 
(
†† $
SerializationException
†† %
exceptSerialize
††& 5
)
††5 6
{
°° 	
IO
¢¢ 
.
¢¢ 
Logger
¢¢ 
.
¢¢ 
Log
¢¢ 
(
¢¢ 
NLog
¢¢ 
.
¢¢ 
LogLevel
¢¢ '
.
¢¢' (
Warn
¢¢( ,
,
¢¢, -
$str
¢¢. X
,
¢¢X Y
exceptSerialize
¢¢Z i
)
¢¢i j
;
¢¢j k
}
££ 	
}
§§ 
}¶¶ 
}ßß Ü_
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_75b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_75b G
{ 
public!! 

static!! 
void!! 
BadSink!! 
(!! 
byte!! #
[!!# $
]!!$ %
passwordSerialized!!& 8
)!!9 :
{"" 
try## 
{$$ 	
string%% 
password%% 
;%% 
var&& 
binForm&& 
=&& 
new&& 
BinaryFormatter&& -
(&&- .
)&&. /
;&&/ 0
using'' 
('' 
var'' 
	memStream''  
=''! "
new''# &
MemoryStream''' 3
(''3 4
)''4 5
)''5 6
{(( 
	memStream)) 
.)) 
Write)) 
())  
passwordSerialized))  2
,))2 3
$num))4 5
,))5 6
passwordSerialized))7 I
.))I J
Length))J P
)))P Q
;))Q R
	memStream** 
.** 
Seek** 
(** 
$num**  
,**  !

SeekOrigin**" ,
.**, -
Begin**- 2
)**2 3
;**3 4
password++ 
=++ 
(++ 
string++ "
)++" #
binForm++# *
.++* +
Deserialize+++ 6
(++6 7
	memStream++7 @
)++@ A
;++A B
},, 
try-- 
{.. 
using00 
(00 
SqlConnection00 $

connection00% /
=000 1
new002 5
SqlConnection006 C
(00C D
$str00D z
+00{ |
$str	00} Å
+
00Ç É
$str
00Ñ ê
+
00ë í
password
00ì õ
)
00õ ú
)
00ú ù
{11 

connection22 
.22 
Open22 #
(22# $
)22$ %
;22% &
using33 
(33 

SqlCommand33 %
command33& -
=33. /
new330 3

SqlCommand334 >
(33> ?
$str33? Y
,33Y Z

connection33[ e
)33e f
)33f g
{44 
command55 
.55  
ExecuteNonQuery55  /
(55/ 0
)550 1
;551 2
}66 
}77 
}88 
catch99 
(99 
SqlException99 
	exceptSql99  )
)99) *
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
$str;;2 R
,;;R S
	exceptSql;;T ]
);;] ^
;;;^ _
}<< 
}== 	
catch>> 
(>> "
SerializationException>> %
exceptSerialize>>& 5
)>>5 6
{?? 	
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ 
(@@ 
NLog@@ 
.@@ 
LogLevel@@ '
.@@' (
Warn@@( ,
,@@, -
$str@@. Y
,@@Y Z
exceptSerialize@@[ j
)@@j k
;@@k l
}AA 	
}BB 
publicGG 

staticGG 
voidGG 
GoodG2BSinkGG "
(GG" #
byteGG# '
[GG' (
]GG( )
passwordSerializedGG* <
)GG= >
{HH 
tryII 
{JJ 	
stringKK 
passwordKK 
;KK 
varLL 
binFormLL 
=LL 
newLL 
BinaryFormatterLL -
(LL- .
)LL. /
;LL/ 0
usingMM 
(MM 
varMM 
	memStreamMM  
=MM! "
newMM# &
MemoryStreamMM' 3
(MM3 4
)MM4 5
)MM5 6
{NN 
	memStreamOO 
.OO 
WriteOO 
(OO  
passwordSerializedOO  2
,OO2 3
$numOO4 5
,OO5 6
passwordSerializedOO7 I
.OOI J
LengthOOJ P
)OOP Q
;OOQ R
	memStreamPP 
.PP 
SeekPP 
(PP 
$numPP  
,PP  !

SeekOriginPP" ,
.PP, -
BeginPP- 2
)PP2 3
;PP3 4
passwordQQ 
=QQ 
(QQ 
stringQQ "
)QQ" #
binFormQQ# *
.QQ* +
DeserializeQQ+ 6
(QQ6 7
	memStreamQQ7 @
)QQ@ A
;QQA B
}RR 
trySS 
{TT 
usingVV 
(VV 
SqlConnectionVV $

connectionVV% /
=VV0 1
newVV2 5
SqlConnectionVV6 C
(VVC D
$strVVD z
+VV{ |
$str	VV} Å
+
VVÇ É
$str
VVÑ ê
+
VVë í
password
VVì õ
)
VVõ ú
)
VVú ù
{WW 

connectionXX 
.XX 
OpenXX #
(XX# $
)XX$ %
;XX% &
usingYY 
(YY 

SqlCommandYY %
commandYY& -
=YY. /
newYY0 3

SqlCommandYY4 >
(YY> ?
$strYY? Y
,YYY Z

connectionYY[ e
)YYe f
)YYf g
{ZZ 
command[[ 
.[[  
ExecuteNonQuery[[  /
([[/ 0
)[[0 1
;[[1 2
}\\ 
}]] 
}^^ 
catch__ 
(__ 
SqlException__ 
	exceptSql__  )
)__) *
{`` 
IOaa 
.aa 
Loggeraa 
.aa 
Logaa 
(aa 
NLogaa "
.aa" #
LogLevelaa# +
.aa+ ,
Warnaa, 0
,aa0 1
$straa2 R
,aaR S
	exceptSqlaaT ]
)aa] ^
;aa^ _
}bb 
}cc 	
catchdd 
(dd "
SerializationExceptiondd %
exceptSerializedd& 5
)dd5 6
{ee 	
IOff 
.ff 
Loggerff 
.ff 
Logff 
(ff 
NLogff 
.ff 
LogLevelff '
.ff' (
Warnff( ,
,ff, -
$strff. Y
,ffY Z
exceptSerializeff[ j
)ffj k
;ffk l
}gg 	
}hh 
publickk 

statickk 
voidkk 
GoodB2GSinkkk "
(kk" #
bytekk# '
[kk' (
]kk( )
passwordSerializedkk* <
)kk= >
{ll 
trymm 
{nn 	
stringoo 
passwordoo 
;oo 
varpp 
binFormpp 
=pp 
newpp 
BinaryFormatterpp -
(pp- .
)pp. /
;pp/ 0
usingqq 
(qq 
varqq 
	memStreamqq  
=qq! "
newqq# &
MemoryStreamqq' 3
(qq3 4
)qq4 5
)qq5 6
{rr 
	memStreamss 
.ss 
Writess 
(ss  
passwordSerializedss  2
,ss2 3
$numss4 5
,ss5 6
passwordSerializedss7 I
.ssI J
LengthssJ P
)ssP Q
;ssQ R
	memStreamtt 
.tt 
Seektt 
(tt 
$numtt  
,tt  !

SeekOrigintt" ,
.tt, -
Begintt- 2
)tt2 3
;tt3 4
passworduu 
=uu 
(uu 
stringuu "
)uu" #
binFormuu# *
.uu* +
Deserializeuu+ 6
(uu6 7
	memStreamuu7 @
)uu@ A
;uuA B
}vv 
ifww 
(ww 
passwordww 
!=ww 
nullww  
)ww  !
{xx 
{zz 
using{{ 
({{ $
AesCryptoServiceProvider{{ 3
aesAlg{{4 :
={{; <
new{{= @$
AesCryptoServiceProvider{{A Y
({{Y Z
){{Z [
){{[ \
{|| 
aesAlg}} 
.}} 
Padding}} &
=}}' (
PaddingMode}}) 4
.}}4 5
None}}5 9
;}}9 :
aesAlg~~ 
.~~ 
Key~~ "
=~~# $
Encoding~~% -
.~~- .
UTF8~~. 2
.~~2 3
GetBytes~~3 ;
(~~; <
$str~~< N
)~~N O
;~~O P
ICryptoTransform
ÄÄ (
	decryptor
ÄÄ) 2
=
ÄÄ3 4
aesAlg
ÄÄ5 ;
.
ÄÄ; <
CreateDecryptor
ÄÄ< K
(
ÄÄK L
aesAlg
ÄÄL R
.
ÄÄR S
Key
ÄÄS V
,
ÄÄV W
aesAlg
ÄÄX ^
.
ÄÄ^ _
IV
ÄÄ_ a
)
ÄÄa b
;
ÄÄb c
using
ÇÇ 
(
ÇÇ 
MemoryStream
ÇÇ +
	msDecrypt
ÇÇ, 5
=
ÇÇ6 7
new
ÇÇ8 ;
MemoryStream
ÇÇ< H
(
ÇÇH I
Encoding
ÇÇI Q
.
ÇÇQ R
UTF8
ÇÇR V
.
ÇÇV W
GetBytes
ÇÇW _
(
ÇÇ_ `
password
ÇÇ` h
)
ÇÇh i
)
ÇÇi j
)
ÇÇj k
{
ÉÉ 
using
ÑÑ !
(
ÑÑ" #
CryptoStream
ÑÑ# /
	csDecrypt
ÑÑ0 9
=
ÑÑ: ;
new
ÑÑ< ?
CryptoStream
ÑÑ@ L
(
ÑÑL M
	msDecrypt
ÑÑM V
,
ÑÑV W
	decryptor
ÑÑX a
,
ÑÑa b
CryptoStreamMode
ÑÑc s
.
ÑÑs t
Read
ÑÑt x
)
ÑÑx y
)
ÑÑy z
{
ÖÖ 
using
ÜÜ  %
(
ÜÜ& '
StreamReader
ÜÜ' 3
	srDecrypt
ÜÜ4 =
=
ÜÜ> ?
new
ÜÜ@ C
StreamReader
ÜÜD P
(
ÜÜP Q
	csDecrypt
ÜÜQ Z
)
ÜÜZ [
)
ÜÜ[ \
{
áá  !
password
ää$ ,
=
ää- .
	srDecrypt
ää/ 8
.
ää8 9
	ReadToEnd
ää9 B
(
ääB C
)
ääC D
;
ääD E
}
ãã  !
}
åå 
}
çç 
}
éé 
}
èè 
try
êê 
{
ëë 
using
ìì 
(
ìì 
SqlConnection
ìì (

connection
ìì) 3
=
ìì4 5
new
ìì6 9
SqlConnection
ìì: G
(
ììG H
$str
ììH ~
+ìì Ä
$strììÅ Ö
+ììÜ á
$strììà î
+ììï ñ
passwordììó ü
)ììü †
)ìì† °
{
îî 

connection
ïï "
.
ïï" #
Open
ïï# '
(
ïï' (
)
ïï( )
;
ïï) *
using
ññ 
(
ññ 

SqlCommand
ññ )
command
ññ* 1
=
ññ2 3
new
ññ4 7

SqlCommand
ññ8 B
(
ññB C
$str
ññC ]
,
ññ] ^

connection
ññ_ i
)
ññi j
)
ññj k
{
óó 
command
òò #
.
òò# $
ExecuteNonQuery
òò$ 3
(
òò3 4
)
òò4 5
;
òò5 6
}
ôô 
}
öö 
}
õõ 
catch
úú 
(
úú 
SqlException
úú #
	exceptSql
úú$ -
)
úú- .
{
ùù 
IO
ûû 
.
ûû 
Logger
ûû 
.
ûû 
Log
ûû !
(
ûû! "
NLog
ûû" &
.
ûû& '
LogLevel
ûû' /
.
ûû/ 0
Warn
ûû0 4
,
ûû4 5
$str
ûû6 V
,
ûûV W
	exceptSql
ûûX a
)
ûûa b
;
ûûb c
}
üü 
}
†† 
}
°° 	
catch
¢¢ 
(
¢¢ $
SerializationException
¢¢ %
exceptSerialize
¢¢& 5
)
¢¢5 6
{
££ 	
IO
§§ 
.
§§ 
Logger
§§ 
.
§§ 
Log
§§ 
(
§§ 
NLog
§§ 
.
§§ 
LogLevel
§§ '
.
§§' (
Warn
§§( ,
,
§§, -
$str
§§. Y
,
§§Y Z
exceptSerialize
§§[ j
)
§§j k
;
§§k l
}
•• 	
}
¶¶ 
}®® 
}©© Â'
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_81a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_81a G
:H I
AbstractTestCaseJ Z
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string 
password 
; 
password   
=   
$str   
;   
{"" 	
try## 
{$$ 
using&& 
(&& 
	TcpClient&&  
tcpConn&&! (
=&&) *
new&&+ .
	TcpClient&&/ 8
(&&8 9
$str&&9 K
,&&K L
$num&&M R
)&&R S
)&&S T
{'' 
using)) 
()) 
StreamReader)) '
sr))( *
=))+ ,
new))- 0
StreamReader))1 =
())= >
tcpConn))> E
.))E F
	GetStream))F O
())O P
)))P Q
)))Q R
)))R S
{** 
password,,  
=,,! "
sr,,# %
.,,% &
ReadLine,,& .
(,,. /
),,/ 0
;,,0 1
}-- 
}.. 
}// 
catch00 
(00 
IOException00 
exceptIO00 '
)00' (
{11 
IO22 
.22 
Logger22 
.22 
Log22 
(22 
NLog22 "
.22" #
LogLevel22# +
.22+ ,
Warn22, 0
,220 1
$str222 M
,22M N
exceptIO22O W
)22W X
;22X Y
}33 
}44 	Q
ECWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_81_base55 M

baseObject55N X
=55Y Z
new55[ ^Q
DCWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_81_bad	55_ £
(
55£ §
)
55§ •
;
55• ¶

baseObject66 
.66 
Action66 
(66 
password66 "
)66# $
;66$ %
}77 
public:: 

override:: 
void:: 
Good:: 
(:: 
):: 
{;; 
GoodG2B<< 
(<< 
)<< 
;<< 
GoodB2G== 
(== 
)== 
;== 
}>> 
privateAA 
voidAA 
GoodG2BAA 
(AA 
)AA 
{BB 
stringCC 
passwordCC 
;CC 
passwordFF 
=FF 
$strFF "
;FF" #Q
ECWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_81_baseGG M

baseObjectGGN X
=GGY Z
newGG[ ^U
HCWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_81_goodG2B	GG_ ß
(
GGß ®
)
GG® ©
;
GG© ™

baseObjectHH 
.HH 
ActionHH 
(HH 
passwordHH "
)HH# $
;HH$ %
}II 
privateLL 
voidLL 
GoodB2GLL 
(LL 
)LL 
{MM 
stringNN 
passwordNN 
;NN 
passwordOO 
=OO 
$strOO 
;OO 
{QQ 	
tryRR 
{SS 
usingUU 
(UU 
	TcpClientUU  
tcpConnUU! (
=UU) *
newUU+ .
	TcpClientUU/ 8
(UU8 9
$strUU9 K
,UUK L
$numUUM R
)UUR S
)UUS T
{VV 
usingXX 
(XX 
StreamReaderXX '
srXX( *
=XX+ ,
newXX- 0
StreamReaderXX1 =
(XX= >
tcpConnXX> E
.XXE F
	GetStreamXXF O
(XXO P
)XXP Q
)XXQ R
)XXR S
{YY 
password[[  
=[[! "
sr[[# %
.[[% &
ReadLine[[& .
([[. /
)[[/ 0
;[[0 1
}\\ 
}]] 
}^^ 
catch__ 
(__ 
IOException__ 
exceptIO__ '
)__' (
{`` 
IOaa 
.aa 
Loggeraa 
.aa 
Logaa 
(aa 
NLogaa "
.aa" #
LogLevelaa# +
.aa+ ,
Warnaa, 0
,aa0 1
$straa2 M
,aaM N
exceptIOaaO W
)aaW X
;aaX Y
}bb 
}cc 	Q
ECWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_81_basedd M

baseObjectddN X
=ddY Z
newdd[ ^U
HCWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_81_goodB2G	dd_ ß
(
ddß ®
)
dd® ©
;
dd© ™

baseObjectee 
.ee 
Actionee 
(ee 
passwordee "
)ee# $
;ee$ %
}ff 
}hh 
}ii Ô
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_81_bad.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class P
DCWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_81_bad J
:K LR
ECWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_81_base	M í
{ 
public 

override 
void 
Action 
(  
string  &
password' /
)0 1
{   
try!! 
{"" 	
using$$ 
($$ 
SqlConnection$$  

connection$$! +
=$$, -
new$$. 1
SqlConnection$$2 ?
($$? @
$str$$@ v
+$$w x
$str$$y }
+$$~ 
$str
$$Ä å
+
$$ç é
password
$$è ó
)
$$ó ò
)
$$ò ô
{%% 

connection&& 
.&& 
Open&& 
(&&  
)&&  !
;&&! "
using'' 
('' 

SqlCommand'' !
command''" )
=''* +
new'', /

SqlCommand''0 :
('': ;
$str''; U
,''U V

connection''W a
)''a b
)''b c
{(( 
command)) 
.)) 
ExecuteNonQuery)) +
())+ ,
))), -
;))- .
}** 
}++ 
},, 	
catch-- 
(-- 
SqlException-- 
	exceptSql-- %
)--% &
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. N
,//N O
	exceptSql//P Y
)//Y Z
;//Z [
}00 	
}11 
}22 
}33 ä
«C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_81_base.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
abstract 
class	 Q
ECWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_81_base T
{ 
public 

abstract 
void 
Action 
(  
string  &
password' /
)0 1
;1 2
} 
}   Á 
 C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_81_goodB2G.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class T
HCWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_81_goodB2G N
:O PR
ECWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_81_base	Q ñ
{ 
public   

override   
void   
Action   
(    
string    &
password  ' /
)  0 1
{!! 
if"" 

("" 
password"" 
!="" 
null"" 
)"" 
{## 	
{%% 
using&& 
(&& $
AesCryptoServiceProvider&& /
aesAlg&&0 6
=&&7 8
new&&9 <$
AesCryptoServiceProvider&&= U
(&&U V
)&&V W
)&&W X
{'' 
aesAlg(( 
.(( 
Padding(( "
=((# $
PaddingMode((% 0
.((0 1
None((1 5
;((5 6
aesAlg)) 
.)) 
Key)) 
=))  
Encoding))! )
.))) *
UTF8))* .
.)). /
GetBytes))/ 7
())7 8
$str))8 J
)))J K
;))K L
ICryptoTransform++ $
	decryptor++% .
=++/ 0
aesAlg++1 7
.++7 8
CreateDecryptor++8 G
(++G H
aesAlg++H N
.++N O
Key++O R
,++R S
aesAlg++T Z
.++Z [
IV++[ ]
)++] ^
;++^ _
using-- 
(-- 
MemoryStream-- '
	msDecrypt--( 1
=--2 3
new--4 7
MemoryStream--8 D
(--D E
Encoding--E M
.--M N
UTF8--N R
.--R S
GetBytes--S [
(--[ \
password--\ d
)--d e
)--e f
)--f g
{.. 
using// 
(// 
CryptoStream// +
	csDecrypt//, 5
=//6 7
new//8 ;
CryptoStream//< H
(//H I
	msDecrypt//I R
,//R S
	decryptor//T ]
,//] ^
CryptoStreamMode//_ o
.//o p
Read//p t
)//t u
)//u v
{00 
using11 !
(11" #
StreamReader11# /
	srDecrypt110 9
=11: ;
new11< ?
StreamReader11@ L
(11L M
	csDecrypt11M V
)11V W
)11W X
{22 
password55  (
=55) *
	srDecrypt55+ 4
.554 5
	ReadToEnd555 >
(55> ?
)55? @
;55@ A
}66 
}77 
}88 
}99 
}:: 
try;; 
{<< 
using>> 
(>> 
SqlConnection>> $

connection>>% /
=>>0 1
new>>2 5
SqlConnection>>6 C
(>>C D
$str>>D z
+>>{ |
$str	>>} Å
+
>>Ç É
$str
>>Ñ ê
+
>>ë í
password
>>ì õ
)
>>õ ú
)
>>ú ù
{?? 

connection@@ 
.@@ 
Open@@ #
(@@# $
)@@$ %
;@@% &
usingAA 
(AA 

SqlCommandAA %
commandAA& -
=AA. /
newAA0 3

SqlCommandAA4 >
(AA> ?
$strAA? Y
,AAY Z

connectionAA[ e
)AAe f
)AAf g
{BB 
commandCC 
.CC  
ExecuteNonQueryCC  /
(CC/ 0
)CC0 1
;CC1 2
}DD 
}EE 
}FF 
catchGG 
(GG 
SqlExceptionGG 
	exceptSqlGG  )
)GG) *
{HH 
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII "
.II" #
LogLevelII# +
.II+ ,
WarnII, 0
,II0 1
$strII2 R
,IIR S
	exceptSqlIIT ]
)II] ^
;II^ _
}JJ 
}KK 	
}LL 
}MM 
}NN ˜
 C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_81_goodG2B.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class T
HCWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_81_goodG2B N
:O PR
ECWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_81_base	Q ñ
{ 
public   

override   
void   
Action   
(    
string    &
password  ' /
)  0 1
{!! 
try"" 
{## 	
using%% 
(%% 
SqlConnection%%  

connection%%! +
=%%, -
new%%. 1
SqlConnection%%2 ?
(%%? @
$str%%@ v
+%%w x
$str%%y }
+%%~ 
$str
%%Ä å
+
%%ç é
password
%%è ó
)
%%ó ò
)
%%ò ô
{&& 

connection'' 
.'' 
Open'' 
(''  
)''  !
;''! "
using(( 
((( 

SqlCommand(( !
command((" )
=((* +
new((, /

SqlCommand((0 :
(((: ;
$str((; U
,((U V

connection((W a
)((a b
)((b c
{)) 
command** 
.** 
ExecuteNonQuery** +
(**+ ,
)**, -
;**- .
}++ 
},, 
}-- 	
catch.. 
(.. 
SqlException.. 
	exceptSql.. %
)..% &
{// 	
IO00 
.00 
Logger00 
.00 
Log00 
(00 
NLog00 
.00 
LogLevel00 '
.00' (
Warn00( ,
,00, -
$str00. N
,00N O
	exceptSql00P Y
)00Y Z
;00Z [
}11 	
}22 
}33 
}44 õe
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_01.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_01 E
:F G
AbstractTestCaseH X
{   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
string$$ 
password$$ 
;$$ 
password%% 
=%% 
$str%% 
;%% 
{'' 	
TcpListener(( 
listener((  
=((! "
null((# '
;((' (
try)) 
{** 
listener,, 
=,, 
new,, 
TcpListener,, *
(,,* +
	IPAddress,,+ 4
.,,4 5
Parse,,5 :
(,,: ;
$str,,; G
),,G H
,,,H I
$num,,J O
),,O P
;,,P Q
listener-- 
.-- 
Start-- 
(-- 
)--  
;--  !
using.. 
(.. 
	TcpClient..  
tcpConn..! (
=..) *
listener..+ 3
...3 4
AcceptTcpClient..4 C
(..C D
)..D E
)..E F
{// 
using00 
(00 
StreamReader00 '
sr00( *
=00+ ,
new00- 0
StreamReader001 =
(00= >
Console00> E
.00E F
OpenStandardInput00F W
(00W X
)00X Y
)00Y Z
)00Z [
{11 
password33  
=33! "
sr33# %
.33% &
ReadLine33& .
(33. /
)33/ 0
;330 1
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
$str992 M
,99M N
exceptIO99O W
)99W X
;99X Y
}:: 
finally;; 
{<< 
try== 
{>> 
if?? 
(?? 
listener??  
!=??! #
null??$ (
)??( )
{@@ 
listenerAA  
.AA  !
StopAA! %
(AA% &
)AA& '
;AA' (
}BB 
}CC 
catchDD 
(DD 
IOExceptionDD "
exceptIODD# +
)DD+ ,
{EE 
IOFF 
.FF 
LoggerFF 
.FF 
LogFF !
(FF! "
NLogFF" &
.FF& '
LogLevelFF' /
.FF/ 0
WarnFF0 4
,FF4 5
$strFF6 Q
,FFQ R
exceptIOFFS [
)FF[ \
;FF\ ]
}GG 
}HH 
}II 	
tryJJ 
{KK 	
usingMM 
(MM 
SqlConnectionMM  

connectionMM! +
=MM, -
newMM. 1
SqlConnectionMM2 ?
(MM? @
$strMM@ v
+MMw x
$strMMy }
+MM~ 
$str
MMÄ å
+
MMç é
password
MMè ó
)
MMó ò
)
MMò ô
{NN 

connectionOO 
.OO 
OpenOO 
(OO  
)OO  !
;OO! "
usingPP 
(PP 

SqlCommandPP !
commandPP" )
=PP* +
newPP, /

SqlCommandPP0 :
(PP: ;
$strPP; U
,PPU V

connectionPPW a
)PPa b
)PPb c
{QQ 
commandRR 
.RR 
ExecuteNonQueryRR +
(RR+ ,
)RR, -
;RR- .
}SS 
}TT 
}UU 	
catchVV 
(VV 
SqlExceptionVV 
	exceptSqlVV %
)VV% &
{WW 	
IOXX 
.XX 
LoggerXX 
.XX 
LogXX 
(XX 
NLogXX 
.XX 
LogLevelXX '
.XX' (
WarnXX( ,
,XX, -
$strXX. N
,XXN O
	exceptSqlXXP Y
)XXY Z
;XXZ [
}YY 	
}ZZ 
public]] 

override]] 
void]] 
Good]] 
(]] 
)]] 
{^^ 
GoodG2B__ 
(__ 
)__ 
;__ 
GoodB2G`` 
(`` 
)`` 
;`` 
}aa 
privatedd 
voiddd 
GoodG2Bdd 
(dd 
)dd 
{ee 
stringff 
passwordff 
;ff 
passwordii 
=ii 
$strii "
;ii" #
tryjj 
{kk 	
usingmm 
(mm 
SqlConnectionmm  

connectionmm! +
=mm, -
newmm. 1
SqlConnectionmm2 ?
(mm? @
$strmm@ v
+mmw x
$strmmy }
+mm~ 
$str
mmÄ å
+
mmç é
password
mmè ó
)
mmó ò
)
mmò ô
{nn 

connectionoo 
.oo 
Openoo 
(oo  
)oo  !
;oo! "
usingpp 
(pp 

SqlCommandpp !
commandpp" )
=pp* +
newpp, /

SqlCommandpp0 :
(pp: ;
$strpp; U
,ppU V

connectionppW a
)ppa b
)ppb c
{qq 
commandrr 
.rr 
ExecuteNonQueryrr +
(rr+ ,
)rr, -
;rr- .
}ss 
}tt 
}uu 	
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv %
)vv% &
{ww 	
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx 
.xx 
LogLevelxx '
.xx' (
Warnxx( ,
,xx, -
$strxx. N
,xxN O
	exceptSqlxxP Y
)xxY Z
;xxZ [
}yy 	
}zz 
private}} 
void}} 
GoodB2G}} 
(}} 
)}} 
{~~ 
string 
password 
; 
password
ÄÄ 
=
ÄÄ 
$str
ÄÄ 
;
ÄÄ 
{
ÇÇ 	
TcpListener
ÉÉ 
listener
ÉÉ  
=
ÉÉ! "
null
ÉÉ# '
;
ÉÉ' (
try
ÑÑ 
{
ÖÖ 
listener
áá 
=
áá 
new
áá 
TcpListener
áá *
(
áá* +
	IPAddress
áá+ 4
.
áá4 5
Parse
áá5 :
(
áá: ;
$str
áá; G
)
ááG H
,
ááH I
$num
ááJ O
)
ááO P
;
ááP Q
listener
àà 
.
àà 
Start
àà 
(
àà 
)
àà  
;
àà  !
using
ââ 
(
ââ 
	TcpClient
ââ  
tcpConn
ââ! (
=
ââ) *
listener
ââ+ 3
.
ââ3 4
AcceptTcpClient
ââ4 C
(
ââC D
)
ââD E
)
ââE F
{
ää 
using
ãã 
(
ãã 
StreamReader
ãã '
sr
ãã( *
=
ãã+ ,
new
ãã- 0
StreamReader
ãã1 =
(
ãã= >
Console
ãã> E
.
ããE F
OpenStandardInput
ããF W
(
ããW X
)
ããX Y
)
ããY Z
)
ããZ [
{
åå 
password
éé  
=
éé! "
sr
éé# %
.
éé% &
ReadLine
éé& .
(
éé. /
)
éé/ 0
;
éé0 1
}
èè 
}
êê 
}
ëë 
catch
íí 
(
íí 
IOException
íí 
exceptIO
íí '
)
íí' (
{
ìì 
IO
îî 
.
îî 
Logger
îî 
.
îî 
Log
îî 
(
îî 
NLog
îî "
.
îî" #
LogLevel
îî# +
.
îî+ ,
Warn
îî, 0
,
îî0 1
$str
îî2 M
,
îîM N
exceptIO
îîO W
)
îîW X
;
îîX Y
}
ïï 
finally
ññ 
{
óó 
try
òò 
{
ôô 
if
öö 
(
öö 
listener
öö  
!=
öö! #
null
öö$ (
)
öö( )
{
õõ 
listener
úú  
.
úú  !
Stop
úú! %
(
úú% &
)
úú& '
;
úú' (
}
ùù 
}
ûû 
catch
üü 
(
üü 
IOException
üü "
exceptIO
üü# +
)
üü+ ,
{
†† 
IO
°° 
.
°° 
Logger
°° 
.
°° 
Log
°° !
(
°°! "
NLog
°°" &
.
°°& '
LogLevel
°°' /
.
°°/ 0
Warn
°°0 4
,
°°4 5
$str
°°6 Q
,
°°Q R
exceptIO
°°S [
)
°°[ \
;
°°\ ]
}
¢¢ 
}
££ 
}
§§ 	
if
•• 

(
•• 
password
•• 
!=
•• 
null
•• 
)
•• 
{
¶¶ 	
{
®® 
using
©© 
(
©© &
AesCryptoServiceProvider
©© /
aesAlg
©©0 6
=
©©7 8
new
©©9 <&
AesCryptoServiceProvider
©©= U
(
©©U V
)
©©V W
)
©©W X
{
™™ 
aesAlg
´´ 
.
´´ 
Padding
´´ "
=
´´# $
PaddingMode
´´% 0
.
´´0 1
None
´´1 5
;
´´5 6
aesAlg
¨¨ 
.
¨¨ 
Key
¨¨ 
=
¨¨  
Encoding
¨¨! )
.
¨¨) *
UTF8
¨¨* .
.
¨¨. /
GetBytes
¨¨/ 7
(
¨¨7 8
$str
¨¨8 J
)
¨¨J K
;
¨¨K L
ICryptoTransform
ÆÆ $
	decryptor
ÆÆ% .
=
ÆÆ/ 0
aesAlg
ÆÆ1 7
.
ÆÆ7 8
CreateDecryptor
ÆÆ8 G
(
ÆÆG H
aesAlg
ÆÆH N
.
ÆÆN O
Key
ÆÆO R
,
ÆÆR S
aesAlg
ÆÆT Z
.
ÆÆZ [
IV
ÆÆ[ ]
)
ÆÆ] ^
;
ÆÆ^ _
using
∞∞ 
(
∞∞ 
MemoryStream
∞∞ '
	msDecrypt
∞∞( 1
=
∞∞2 3
new
∞∞4 7
MemoryStream
∞∞8 D
(
∞∞D E
Encoding
∞∞E M
.
∞∞M N
UTF8
∞∞N R
.
∞∞R S
GetBytes
∞∞S [
(
∞∞[ \
password
∞∞\ d
)
∞∞d e
)
∞∞e f
)
∞∞f g
{
±± 
using
≤≤ 
(
≤≤ 
CryptoStream
≤≤ +
	csDecrypt
≤≤, 5
=
≤≤6 7
new
≤≤8 ;
CryptoStream
≤≤< H
(
≤≤H I
	msDecrypt
≤≤I R
,
≤≤R S
	decryptor
≤≤T ]
,
≤≤] ^
CryptoStreamMode
≤≤_ o
.
≤≤o p
Read
≤≤p t
)
≤≤t u
)
≤≤u v
{
≥≥ 
using
¥¥ !
(
¥¥" #
StreamReader
¥¥# /
	srDecrypt
¥¥0 9
=
¥¥: ;
new
¥¥< ?
StreamReader
¥¥@ L
(
¥¥L M
	csDecrypt
¥¥M V
)
¥¥V W
)
¥¥W X
{
µµ 
password
∏∏  (
=
∏∏) *
	srDecrypt
∏∏+ 4
.
∏∏4 5
	ReadToEnd
∏∏5 >
(
∏∏> ?
)
∏∏? @
;
∏∏@ A
}
ππ 
}
∫∫ 
}
ªª 
}
ºº 
}
ΩΩ 
try
ææ 
{
øø 
using
¡¡ 
(
¡¡ 
SqlConnection
¡¡ $

connection
¡¡% /
=
¡¡0 1
new
¡¡2 5
SqlConnection
¡¡6 C
(
¡¡C D
$str
¡¡D z
+
¡¡{ |
$str¡¡} Å
+¡¡Ç É
$str¡¡Ñ ê
+¡¡ë í
password¡¡ì õ
)¡¡õ ú
)¡¡ú ù
{
¬¬ 

connection
√√ 
.
√√ 
Open
√√ #
(
√√# $
)
√√$ %
;
√√% &
using
ƒƒ 
(
ƒƒ 

SqlCommand
ƒƒ %
command
ƒƒ& -
=
ƒƒ. /
new
ƒƒ0 3

SqlCommand
ƒƒ4 >
(
ƒƒ> ?
$str
ƒƒ? Y
,
ƒƒY Z

connection
ƒƒ[ e
)
ƒƒe f
)
ƒƒf g
{
≈≈ 
command
∆∆ 
.
∆∆  
ExecuteNonQuery
∆∆  /
(
∆∆/ 0
)
∆∆0 1
;
∆∆1 2
}
«« 
}
»» 
}
…… 
catch
   
(
   
SqlException
   
	exceptSql
    )
)
  ) *
{
ÀÀ 
IO
ÃÃ 
.
ÃÃ 
Logger
ÃÃ 
.
ÃÃ 
Log
ÃÃ 
(
ÃÃ 
NLog
ÃÃ "
.
ÃÃ" #
LogLevel
ÃÃ# +
.
ÃÃ+ ,
Warn
ÃÃ, 0
,
ÃÃ0 1
$str
ÃÃ2 R
,
ÃÃR S
	exceptSql
ÃÃT ]
)
ÃÃ] ^
;
ÃÃ^ _
}
ÕÕ 
}
ŒŒ 	
}
œœ 
}—— 
}““ ó∏
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_02.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_02 E
:F G
AbstractTestCaseH X
{   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
string$$ 
password$$ 
;$$ 
if%% 

(%% 
true%% 
)%% 
{&& 	
password'' 
='' 
$str'' 
;'' 
{)) 
TcpListener** 
listener** $
=**% &
null**' +
;**+ ,
try++ 
{,, 
listener.. 
=.. 
new.. "
TcpListener..# .
(... /
	IPAddress../ 8
...8 9
Parse..9 >
(..> ?
$str..? K
)..K L
,..L M
$num..N S
)..S T
;..T U
listener// 
.// 
Start// "
(//" #
)//# $
;//$ %
using00 
(00 
	TcpClient00 $
tcpConn00% ,
=00- .
listener00/ 7
.007 8
AcceptTcpClient008 G
(00G H
)00H I
)00I J
{11 
using22 
(22 
StreamReader22 +
sr22, .
=22/ 0
new221 4
StreamReader225 A
(22A B
Console22B I
.22I J
OpenStandardInput22J [
(22[ \
)22\ ]
)22] ^
)22^ _
{33 
password55 $
=55% &
sr55' )
.55) *
ReadLine55* 2
(552 3
)553 4
;554 5
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
$str;;6 Q
,;;Q R
exceptIO;;S [
);;[ \
;;;\ ]
}<< 
finally== 
{>> 
try?? 
{@@ 
ifAA 
(AA 
listenerAA $
!=AA% '
nullAA( ,
)AA, -
{BB 
listenerCC $
.CC$ %
StopCC% )
(CC) *
)CC* +
;CC+ ,
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF &
exceptIOFF' /
)FF/ 0
{GG 
IOHH 
.HH 
LoggerHH !
.HH! "
LogHH" %
(HH% &
NLogHH& *
.HH* +
LogLevelHH+ 3
.HH3 4
WarnHH4 8
,HH8 9
$strHH: U
,HHU V
exceptIOHHW _
)HH_ `
;HH` a
}II 
}JJ 
}KK 
}LL 	
elseMM 
{NN 	
passwordQQ 
=QQ 
nullQQ 
;QQ 
}RR 	
ifSS 

(SS 
trueSS 
)SS 
{TT 	
tryUU 
{VV 
usingXX 
(XX 
SqlConnectionXX $

connectionXX% /
=XX0 1
newXX2 5
SqlConnectionXX6 C
(XXC D
$strXXD z
+XX{ |
$str	XX} Å
+
XXÇ É
$str
XXÑ ê
+
XXë í
password
XXì õ
)
XXõ ú
)
XXú ù
{YY 

connectionZZ 
.ZZ 
OpenZZ #
(ZZ# $
)ZZ$ %
;ZZ% &
using[[ 
([[ 

SqlCommand[[ %
command[[& -
=[[. /
new[[0 3

SqlCommand[[4 >
([[> ?
$str[[? Y
,[[Y Z

connection[[[ e
)[[e f
)[[f g
{\\ 
command]] 
.]]  
ExecuteNonQuery]]  /
(]]/ 0
)]]0 1
;]]1 2
}^^ 
}__ 
}`` 
catchaa 
(aa 
SqlExceptionaa 
	exceptSqlaa  )
)aa) *
{bb 
IOcc 
.cc 
Loggercc 
.cc 
Logcc 
(cc 
NLogcc "
.cc" #
LogLevelcc# +
.cc+ ,
Warncc, 0
,cc0 1
$strcc2 R
,ccR S
	exceptSqlccT ]
)cc] ^
;cc^ _
}dd 
}ee 	
}ff 
privatejj 
voidjj 
GoodG2B1jj 
(jj 
)jj 
{kk 
stringll 
passwordll 
;ll 
ifmm 

(mm 
falsemm 
)mm 
{nn 	
passwordqq 
=qq 
nullqq 
;qq 
}rr 	
elsess 
{tt 	
passwordww 
=ww 
$strww &
;ww& '
}xx 	
ifyy 

(yy 
trueyy 
)yy 
{zz 	
try{{ 
{|| 
using~~ 
(~~ 
SqlConnection~~ $

connection~~% /
=~~0 1
new~~2 5
SqlConnection~~6 C
(~~C D
$str~~D z
+~~{ |
$str	~~} Å
+
~~Ç É
$str
~~Ñ ê
+
~~ë í
password
~~ì õ
)
~~õ ú
)
~~ú ù
{ 

connection
ÄÄ 
.
ÄÄ 
Open
ÄÄ #
(
ÄÄ# $
)
ÄÄ$ %
;
ÄÄ% &
using
ÅÅ 
(
ÅÅ 

SqlCommand
ÅÅ %
command
ÅÅ& -
=
ÅÅ. /
new
ÅÅ0 3

SqlCommand
ÅÅ4 >
(
ÅÅ> ?
$str
ÅÅ? Y
,
ÅÅY Z

connection
ÅÅ[ e
)
ÅÅe f
)
ÅÅf g
{
ÇÇ 
command
ÉÉ 
.
ÉÉ  
ExecuteNonQuery
ÉÉ  /
(
ÉÉ/ 0
)
ÉÉ0 1
;
ÉÉ1 2
}
ÑÑ 
}
ÖÖ 
}
ÜÜ 
catch
áá 
(
áá 
SqlException
áá 
	exceptSql
áá  )
)
áá) *
{
àà 
IO
ââ 
.
ââ 
Logger
ââ 
.
ââ 
Log
ââ 
(
ââ 
NLog
ââ "
.
ââ" #
LogLevel
ââ# +
.
ââ+ ,
Warn
ââ, 0
,
ââ0 1
$str
ââ2 R
,
ââR S
	exceptSql
ââT ]
)
ââ] ^
;
ââ^ _
}
ää 
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
string
ëë 
password
ëë 
;
ëë 
if
íí 

(
íí 
true
íí 
)
íí 
{
ìì 	
password
ññ 
=
ññ 
$str
ññ &
;
ññ& '
}
óó 	
else
òò 
{
ôô 	
password
úú 
=
úú 
null
úú 
;
úú 
}
ùù 	
if
ûû 

(
ûû 
true
ûû 
)
ûû 
{
üü 	
try
†† 
{
°° 
using
££ 
(
££ 
SqlConnection
££ $

connection
££% /
=
££0 1
new
££2 5
SqlConnection
££6 C
(
££C D
$str
££D z
+
££{ |
$str££} Å
+££Ç É
$str££Ñ ê
+££ë í
password££ì õ
)££õ ú
)££ú ù
{
§§ 

connection
•• 
.
•• 
Open
•• #
(
••# $
)
••$ %
;
••% &
using
¶¶ 
(
¶¶ 

SqlCommand
¶¶ %
command
¶¶& -
=
¶¶. /
new
¶¶0 3

SqlCommand
¶¶4 >
(
¶¶> ?
$str
¶¶? Y
,
¶¶Y Z

connection
¶¶[ e
)
¶¶e f
)
¶¶f g
{
ßß 
command
®® 
.
®®  
ExecuteNonQuery
®®  /
(
®®/ 0
)
®®0 1
;
®®1 2
}
©© 
}
™™ 
}
´´ 
catch
¨¨ 
(
¨¨ 
SqlException
¨¨ 
	exceptSql
¨¨  )
)
¨¨) *
{
≠≠ 
IO
ÆÆ 
.
ÆÆ 
Logger
ÆÆ 
.
ÆÆ 
Log
ÆÆ 
(
ÆÆ 
NLog
ÆÆ "
.
ÆÆ" #
LogLevel
ÆÆ# +
.
ÆÆ+ ,
Warn
ÆÆ, 0
,
ÆÆ0 1
$str
ÆÆ2 R
,
ÆÆR S
	exceptSql
ÆÆT ]
)
ÆÆ] ^
;
ÆÆ^ _
}
ØØ 
}
∞∞ 	
}
±± 
private
¥¥ 
void
¥¥ 
GoodB2G1
¥¥ 
(
¥¥ 
)
¥¥ 
{
µµ 
string
∂∂ 
password
∂∂ 
;
∂∂ 
if
∑∑ 

(
∑∑ 
true
∑∑ 
)
∑∑ 
{
∏∏ 	
password
ππ 
=
ππ 
$str
ππ 
;
ππ 
{
ªª 
TcpListener
ºº 
listener
ºº $
=
ºº% &
null
ºº' +
;
ºº+ ,
try
ΩΩ 
{
ææ 
listener
¿¿ 
=
¿¿ 
new
¿¿ "
TcpListener
¿¿# .
(
¿¿. /
	IPAddress
¿¿/ 8
.
¿¿8 9
Parse
¿¿9 >
(
¿¿> ?
$str
¿¿? K
)
¿¿K L
,
¿¿L M
$num
¿¿N S
)
¿¿S T
;
¿¿T U
listener
¡¡ 
.
¡¡ 
Start
¡¡ "
(
¡¡" #
)
¡¡# $
;
¡¡$ %
using
¬¬ 
(
¬¬ 
	TcpClient
¬¬ $
tcpConn
¬¬% ,
=
¬¬- .
listener
¬¬/ 7
.
¬¬7 8
AcceptTcpClient
¬¬8 G
(
¬¬G H
)
¬¬H I
)
¬¬I J
{
√√ 
using
ƒƒ 
(
ƒƒ 
StreamReader
ƒƒ +
sr
ƒƒ, .
=
ƒƒ/ 0
new
ƒƒ1 4
StreamReader
ƒƒ5 A
(
ƒƒA B
Console
ƒƒB I
.
ƒƒI J
OpenStandardInput
ƒƒJ [
(
ƒƒ[ \
)
ƒƒ\ ]
)
ƒƒ] ^
)
ƒƒ^ _
{
≈≈ 
password
«« $
=
««% &
sr
««' )
.
««) *
ReadLine
««* 2
(
««2 3
)
««3 4
;
««4 5
}
»» 
}
…… 
}
   
catch
ÀÀ 
(
ÀÀ 
IOException
ÀÀ "
exceptIO
ÀÀ# +
)
ÀÀ+ ,
{
ÃÃ 
IO
ÕÕ 
.
ÕÕ 
Logger
ÕÕ 
.
ÕÕ 
Log
ÕÕ !
(
ÕÕ! "
NLog
ÕÕ" &
.
ÕÕ& '
LogLevel
ÕÕ' /
.
ÕÕ/ 0
Warn
ÕÕ0 4
,
ÕÕ4 5
$str
ÕÕ6 Q
,
ÕÕQ R
exceptIO
ÕÕS [
)
ÕÕ[ \
;
ÕÕ\ ]
}
ŒŒ 
finally
œœ 
{
–– 
try
—— 
{
““ 
if
”” 
(
”” 
listener
”” $
!=
””% '
null
””( ,
)
””, -
{
‘‘ 
listener
’’ $
.
’’$ %
Stop
’’% )
(
’’) *
)
’’* +
;
’’+ ,
}
÷÷ 
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
IOException
ÿÿ &
exceptIO
ÿÿ' /
)
ÿÿ/ 0
{
ŸŸ 
IO
⁄⁄ 
.
⁄⁄ 
Logger
⁄⁄ !
.
⁄⁄! "
Log
⁄⁄" %
(
⁄⁄% &
NLog
⁄⁄& *
.
⁄⁄* +
LogLevel
⁄⁄+ 3
.
⁄⁄3 4
Warn
⁄⁄4 8
,
⁄⁄8 9
$str
⁄⁄: U
,
⁄⁄U V
exceptIO
⁄⁄W _
)
⁄⁄_ `
;
⁄⁄` a
}
€€ 
}
‹‹ 
}
›› 
}
ﬁﬁ 	
else
ﬂﬂ 
{
‡‡ 	
password
„„ 
=
„„ 
null
„„ 
;
„„ 
}
‰‰ 	
if
ÂÂ 

(
ÂÂ 
false
ÂÂ 
)
ÂÂ 
{
ÊÊ 	
IO
ËË 
.
ËË 
	WriteLine
ËË 
(
ËË 
$str
ËË /
)
ËË/ 0
;
ËË0 1
}
ÈÈ 	
else
ÍÍ 
{
ÎÎ 	
if
ÏÏ 
(
ÏÏ 
password
ÏÏ 
!=
ÏÏ 
null
ÏÏ  
)
ÏÏ  !
{
ÌÌ 
{
ÔÔ 
using
 
(
 &
AesCryptoServiceProvider
 3
aesAlg
4 :
=
; <
new
= @&
AesCryptoServiceProvider
A Y
(
Y Z
)
Z [
)
[ \
{
ÒÒ 
aesAlg
ÚÚ 
.
ÚÚ 
Padding
ÚÚ &
=
ÚÚ' (
PaddingMode
ÚÚ) 4
.
ÚÚ4 5
None
ÚÚ5 9
;
ÚÚ9 :
aesAlg
ÛÛ 
.
ÛÛ 
Key
ÛÛ "
=
ÛÛ# $
Encoding
ÛÛ% -
.
ÛÛ- .
UTF8
ÛÛ. 2
.
ÛÛ2 3
GetBytes
ÛÛ3 ;
(
ÛÛ; <
$str
ÛÛ< N
)
ÛÛN O
;
ÛÛO P
ICryptoTransform
ıı (
	decryptor
ıı) 2
=
ıı3 4
aesAlg
ıı5 ;
.
ıı; <
CreateDecryptor
ıı< K
(
ııK L
aesAlg
ııL R
.
ııR S
Key
ııS V
,
ııV W
aesAlg
ııX ^
.
ıı^ _
IV
ıı_ a
)
ııa b
;
ııb c
using
˜˜ 
(
˜˜ 
MemoryStream
˜˜ +
	msDecrypt
˜˜, 5
=
˜˜6 7
new
˜˜8 ;
MemoryStream
˜˜< H
(
˜˜H I
Encoding
˜˜I Q
.
˜˜Q R
UTF8
˜˜R V
.
˜˜V W
GetBytes
˜˜W _
(
˜˜_ `
password
˜˜` h
)
˜˜h i
)
˜˜i j
)
˜˜j k
{
¯¯ 
using
˘˘ !
(
˘˘" #
CryptoStream
˘˘# /
	csDecrypt
˘˘0 9
=
˘˘: ;
new
˘˘< ?
CryptoStream
˘˘@ L
(
˘˘L M
	msDecrypt
˘˘M V
,
˘˘V W
	decryptor
˘˘X a
,
˘˘a b
CryptoStreamMode
˘˘c s
.
˘˘s t
Read
˘˘t x
)
˘˘x y
)
˘˘y z
{
˙˙ 
using
˚˚  %
(
˚˚& '
StreamReader
˚˚' 3
	srDecrypt
˚˚4 =
=
˚˚> ?
new
˚˚@ C
StreamReader
˚˚D P
(
˚˚P Q
	csDecrypt
˚˚Q Z
)
˚˚Z [
)
˚˚[ \
{
¸¸  !
password
ˇˇ$ ,
=
ˇˇ- .
	srDecrypt
ˇˇ/ 8
.
ˇˇ8 9
	ReadToEnd
ˇˇ9 B
(
ˇˇB C
)
ˇˇC D
;
ˇˇD E
}
ÄÄ  !
}
ÅÅ 
}
ÇÇ 
}
ÉÉ 
}
ÑÑ 
try
ÖÖ 
{
ÜÜ 
using
àà 
(
àà 
SqlConnection
àà (

connection
àà) 3
=
àà4 5
new
àà6 9
SqlConnection
àà: G
(
ààG H
$str
ààH ~
+àà Ä
$strààÅ Ö
+ààÜ á
$strààà î
+ààï ñ
passwordààó ü
)ààü †
)àà† °
{
ââ 

connection
ää "
.
ää" #
Open
ää# '
(
ää' (
)
ää( )
;
ää) *
using
ãã 
(
ãã 

SqlCommand
ãã )
command
ãã* 1
=
ãã2 3
new
ãã4 7

SqlCommand
ãã8 B
(
ããB C
$str
ããC ]
,
ãã] ^

connection
ãã_ i
)
ããi j
)
ããj k
{
åå 
command
çç #
.
çç# $
ExecuteNonQuery
çç$ 3
(
çç3 4
)
çç4 5
;
çç5 6
}
éé 
}
èè 
}
êê 
catch
ëë 
(
ëë 
SqlException
ëë #
	exceptSql
ëë$ -
)
ëë- .
{
íí 
IO
ìì 
.
ìì 
Logger
ìì 
.
ìì 
Log
ìì !
(
ìì! "
NLog
ìì" &
.
ìì& '
LogLevel
ìì' /
.
ìì/ 0
Warn
ìì0 4
,
ìì4 5
$str
ìì6 V
,
ììV W
	exceptSql
ììX a
)
ììa b
;
ììb c
}
îî 
}
ïï 
}
ññ 	
}
óó 
private
öö 
void
öö 
GoodB2G2
öö 
(
öö 
)
öö 
{
õõ 
string
úú 
password
úú 
;
úú 
if
ùù 

(
ùù 
true
ùù 
)
ùù 
{
ûû 	
password
üü 
=
üü 
$str
üü 
;
üü 
{
°° 
TcpListener
¢¢ 
listener
¢¢ $
=
¢¢% &
null
¢¢' +
;
¢¢+ ,
try
££ 
{
§§ 
listener
¶¶ 
=
¶¶ 
new
¶¶ "
TcpListener
¶¶# .
(
¶¶. /
	IPAddress
¶¶/ 8
.
¶¶8 9
Parse
¶¶9 >
(
¶¶> ?
$str
¶¶? K
)
¶¶K L
,
¶¶L M
$num
¶¶N S
)
¶¶S T
;
¶¶T U
listener
ßß 
.
ßß 
Start
ßß "
(
ßß" #
)
ßß# $
;
ßß$ %
using
®® 
(
®® 
	TcpClient
®® $
tcpConn
®®% ,
=
®®- .
listener
®®/ 7
.
®®7 8
AcceptTcpClient
®®8 G
(
®®G H
)
®®H I
)
®®I J
{
©© 
using
™™ 
(
™™ 
StreamReader
™™ +
sr
™™, .
=
™™/ 0
new
™™1 4
StreamReader
™™5 A
(
™™A B
Console
™™B I
.
™™I J
OpenStandardInput
™™J [
(
™™[ \
)
™™\ ]
)
™™] ^
)
™™^ _
{
´´ 
password
≠≠ $
=
≠≠% &
sr
≠≠' )
.
≠≠) *
ReadLine
≠≠* 2
(
≠≠2 3
)
≠≠3 4
;
≠≠4 5
}
ÆÆ 
}
ØØ 
}
∞∞ 
catch
±± 
(
±± 
IOException
±± "
exceptIO
±±# +
)
±±+ ,
{
≤≤ 
IO
≥≥ 
.
≥≥ 
Logger
≥≥ 
.
≥≥ 
Log
≥≥ !
(
≥≥! "
NLog
≥≥" &
.
≥≥& '
LogLevel
≥≥' /
.
≥≥/ 0
Warn
≥≥0 4
,
≥≥4 5
$str
≥≥6 Q
,
≥≥Q R
exceptIO
≥≥S [
)
≥≥[ \
;
≥≥\ ]
}
¥¥ 
finally
µµ 
{
∂∂ 
try
∑∑ 
{
∏∏ 
if
ππ 
(
ππ 
listener
ππ $
!=
ππ% '
null
ππ( ,
)
ππ, -
{
∫∫ 
listener
ªª $
.
ªª$ %
Stop
ªª% )
(
ªª) *
)
ªª* +
;
ªª+ ,
}
ºº 
}
ΩΩ 
catch
ææ 
(
ææ 
IOException
ææ &
exceptIO
ææ' /
)
ææ/ 0
{
øø 
IO
¿¿ 
.
¿¿ 
Logger
¿¿ !
.
¿¿! "
Log
¿¿" %
(
¿¿% &
NLog
¿¿& *
.
¿¿* +
LogLevel
¿¿+ 3
.
¿¿3 4
Warn
¿¿4 8
,
¿¿8 9
$str
¿¿: U
,
¿¿U V
exceptIO
¿¿W _
)
¿¿_ `
;
¿¿` a
}
¡¡ 
}
¬¬ 
}
√√ 
}
ƒƒ 	
else
≈≈ 
{
∆∆ 	
password
…… 
=
…… 
null
…… 
;
…… 
}
   	
if
ÀÀ 

(
ÀÀ 
true
ÀÀ 
)
ÀÀ 
{
ÃÃ 	
if
ÕÕ 
(
ÕÕ 
password
ÕÕ 
!=
ÕÕ 
null
ÕÕ  
)
ÕÕ  !
{
ŒŒ 
{
–– 
using
—— 
(
—— &
AesCryptoServiceProvider
—— 3
aesAlg
——4 :
=
——; <
new
——= @&
AesCryptoServiceProvider
——A Y
(
——Y Z
)
——Z [
)
——[ \
{
““ 
aesAlg
”” 
.
”” 
Padding
”” &
=
””' (
PaddingMode
””) 4
.
””4 5
None
””5 9
;
””9 :
aesAlg
‘‘ 
.
‘‘ 
Key
‘‘ "
=
‘‘# $
Encoding
‘‘% -
.
‘‘- .
UTF8
‘‘. 2
.
‘‘2 3
GetBytes
‘‘3 ;
(
‘‘; <
$str
‘‘< N
)
‘‘N O
;
‘‘O P
ICryptoTransform
÷÷ (
	decryptor
÷÷) 2
=
÷÷3 4
aesAlg
÷÷5 ;
.
÷÷; <
CreateDecryptor
÷÷< K
(
÷÷K L
aesAlg
÷÷L R
.
÷÷R S
Key
÷÷S V
,
÷÷V W
aesAlg
÷÷X ^
.
÷÷^ _
IV
÷÷_ a
)
÷÷a b
;
÷÷b c
using
ÿÿ 
(
ÿÿ 
MemoryStream
ÿÿ +
	msDecrypt
ÿÿ, 5
=
ÿÿ6 7
new
ÿÿ8 ;
MemoryStream
ÿÿ< H
(
ÿÿH I
Encoding
ÿÿI Q
.
ÿÿQ R
UTF8
ÿÿR V
.
ÿÿV W
GetBytes
ÿÿW _
(
ÿÿ_ `
password
ÿÿ` h
)
ÿÿh i
)
ÿÿi j
)
ÿÿj k
{
ŸŸ 
using
⁄⁄ !
(
⁄⁄" #
CryptoStream
⁄⁄# /
	csDecrypt
⁄⁄0 9
=
⁄⁄: ;
new
⁄⁄< ?
CryptoStream
⁄⁄@ L
(
⁄⁄L M
	msDecrypt
⁄⁄M V
,
⁄⁄V W
	decryptor
⁄⁄X a
,
⁄⁄a b
CryptoStreamMode
⁄⁄c s
.
⁄⁄s t
Read
⁄⁄t x
)
⁄⁄x y
)
⁄⁄y z
{
€€ 
using
‹‹  %
(
‹‹& '
StreamReader
‹‹' 3
	srDecrypt
‹‹4 =
=
‹‹> ?
new
‹‹@ C
StreamReader
‹‹D P
(
‹‹P Q
	csDecrypt
‹‹Q Z
)
‹‹Z [
)
‹‹[ \
{
››  !
password
‡‡$ ,
=
‡‡- .
	srDecrypt
‡‡/ 8
.
‡‡8 9
	ReadToEnd
‡‡9 B
(
‡‡B C
)
‡‡C D
;
‡‡D E
}
··  !
}
‚‚ 
}
„„ 
}
‰‰ 
}
ÂÂ 
try
ÊÊ 
{
ÁÁ 
using
ÈÈ 
(
ÈÈ 
SqlConnection
ÈÈ (

connection
ÈÈ) 3
=
ÈÈ4 5
new
ÈÈ6 9
SqlConnection
ÈÈ: G
(
ÈÈG H
$str
ÈÈH ~
+ÈÈ Ä
$strÈÈÅ Ö
+ÈÈÜ á
$strÈÈà î
+ÈÈï ñ
passwordÈÈó ü
)ÈÈü †
)ÈÈ† °
{
ÍÍ 

connection
ÎÎ "
.
ÎÎ" #
Open
ÎÎ# '
(
ÎÎ' (
)
ÎÎ( )
;
ÎÎ) *
using
ÏÏ 
(
ÏÏ 

SqlCommand
ÏÏ )
command
ÏÏ* 1
=
ÏÏ2 3
new
ÏÏ4 7

SqlCommand
ÏÏ8 B
(
ÏÏB C
$str
ÏÏC ]
,
ÏÏ] ^

connection
ÏÏ_ i
)
ÏÏi j
)
ÏÏj k
{
ÌÌ 
command
ÓÓ #
.
ÓÓ# $
ExecuteNonQuery
ÓÓ$ 3
(
ÓÓ3 4
)
ÓÓ4 5
;
ÓÓ5 6
}
ÔÔ 
}
 
}
ÒÒ 
catch
ÚÚ 
(
ÚÚ 
SqlException
ÚÚ #
	exceptSql
ÚÚ$ -
)
ÚÚ- .
{
ÛÛ 
IO
ÙÙ 
.
ÙÙ 
Logger
ÙÙ 
.
ÙÙ 
Log
ÙÙ !
(
ÙÙ! "
NLog
ÙÙ" &
.
ÙÙ& '
LogLevel
ÙÙ' /
.
ÙÙ/ 0
Warn
ÙÙ0 4
,
ÙÙ4 5
$str
ÙÙ6 V
,
ÙÙV W
	exceptSql
ÙÙX a
)
ÙÙa b
;
ÙÙb c
}
ıı 
}
ˆˆ 
}
˜˜ 	
}
¯¯ 
public
˙˙ 

override
˙˙ 
void
˙˙ 
Good
˙˙ 
(
˙˙ 
)
˙˙ 
{
˚˚ 
GoodG2B1
¸¸ 
(
¸¸ 
)
¸¸ 
;
¸¸ 
GoodG2B2
˝˝ 
(
˝˝ 
)
˝˝ 
;
˝˝ 
GoodB2G1
˛˛ 
(
˛˛ 
)
˛˛ 
;
˛˛ 
GoodB2G2
ˇˇ 
(
ˇˇ 
)
ˇˇ 
;
ˇˇ 
}
ÄÄ 
}ÇÇ 
}ÉÉ Åª
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_03.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_03 E
:F G
AbstractTestCaseH X
{   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
string$$ 
password$$ 
;$$ 
if%% 

(%% 
$num%% 
==%% 
$num%% 
)%% 
{&& 	
password'' 
='' 
$str'' 
;'' 
{)) 
TcpListener** 
listener** $
=**% &
null**' +
;**+ ,
try++ 
{,, 
listener.. 
=.. 
new.. "
TcpListener..# .
(... /
	IPAddress../ 8
...8 9
Parse..9 >
(..> ?
$str..? K
)..K L
,..L M
$num..N S
)..S T
;..T U
listener// 
.// 
Start// "
(//" #
)//# $
;//$ %
using00 
(00 
	TcpClient00 $
tcpConn00% ,
=00- .
listener00/ 7
.007 8
AcceptTcpClient008 G
(00G H
)00H I
)00I J
{11 
using22 
(22 
StreamReader22 +
sr22, .
=22/ 0
new221 4
StreamReader225 A
(22A B
Console22B I
.22I J
OpenStandardInput22J [
(22[ \
)22\ ]
)22] ^
)22^ _
{33 
password55 $
=55% &
sr55' )
.55) *
ReadLine55* 2
(552 3
)553 4
;554 5
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
$str;;6 Q
,;;Q R
exceptIO;;S [
);;[ \
;;;\ ]
}<< 
finally== 
{>> 
try?? 
{@@ 
ifAA 
(AA 
listenerAA $
!=AA% '
nullAA( ,
)AA, -
{BB 
listenerCC $
.CC$ %
StopCC% )
(CC) *
)CC* +
;CC+ ,
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF &
exceptIOFF' /
)FF/ 0
{GG 
IOHH 
.HH 
LoggerHH !
.HH! "
LogHH" %
(HH% &
NLogHH& *
.HH* +
LogLevelHH+ 3
.HH3 4
WarnHH4 8
,HH8 9
$strHH: U
,HHU V
exceptIOHHW _
)HH_ `
;HH` a
}II 
}JJ 
}KK 
}LL 	
elseMM 
{NN 	
passwordQQ 
=QQ 
nullQQ 
;QQ 
}RR 	
ifSS 

(SS 
$numSS 
==SS 
$numSS 
)SS 
{TT 	
tryUU 
{VV 
usingXX 
(XX 
SqlConnectionXX $

connectionXX% /
=XX0 1
newXX2 5
SqlConnectionXX6 C
(XXC D
$strXXD z
+XX{ |
$str	XX} Å
+
XXÇ É
$str
XXÑ ê
+
XXë í
password
XXì õ
)
XXõ ú
)
XXú ù
{YY 

connectionZZ 
.ZZ 
OpenZZ #
(ZZ# $
)ZZ$ %
;ZZ% &
using[[ 
([[ 

SqlCommand[[ %
command[[& -
=[[. /
new[[0 3

SqlCommand[[4 >
([[> ?
$str[[? Y
,[[Y Z

connection[[[ e
)[[e f
)[[f g
{\\ 
command]] 
.]]  
ExecuteNonQuery]]  /
(]]/ 0
)]]0 1
;]]1 2
}^^ 
}__ 
}`` 
catchaa 
(aa 
SqlExceptionaa 
	exceptSqlaa  )
)aa) *
{bb 
IOcc 
.cc 
Loggercc 
.cc 
Logcc 
(cc 
NLogcc "
.cc" #
LogLevelcc# +
.cc+ ,
Warncc, 0
,cc0 1
$strcc2 R
,ccR S
	exceptSqlccT ]
)cc] ^
;cc^ _
}dd 
}ee 	
}ff 
privatejj 
voidjj 
GoodG2B1jj 
(jj 
)jj 
{kk 
stringll 
passwordll 
;ll 
ifmm 

(mm 
$nummm 
!=mm 
$nummm 
)mm 
{nn 	
passwordqq 
=qq 
nullqq 
;qq 
}rr 	
elsess 
{tt 	
passwordww 
=ww 
$strww &
;ww& '
}xx 	
ifyy 

(yy 
$numyy 
==yy 
$numyy 
)yy 
{zz 	
try{{ 
{|| 
using~~ 
(~~ 
SqlConnection~~ $

connection~~% /
=~~0 1
new~~2 5
SqlConnection~~6 C
(~~C D
$str~~D z
+~~{ |
$str	~~} Å
+
~~Ç É
$str
~~Ñ ê
+
~~ë í
password
~~ì õ
)
~~õ ú
)
~~ú ù
{ 

connection
ÄÄ 
.
ÄÄ 
Open
ÄÄ #
(
ÄÄ# $
)
ÄÄ$ %
;
ÄÄ% &
using
ÅÅ 
(
ÅÅ 

SqlCommand
ÅÅ %
command
ÅÅ& -
=
ÅÅ. /
new
ÅÅ0 3

SqlCommand
ÅÅ4 >
(
ÅÅ> ?
$str
ÅÅ? Y
,
ÅÅY Z

connection
ÅÅ[ e
)
ÅÅe f
)
ÅÅf g
{
ÇÇ 
command
ÉÉ 
.
ÉÉ  
ExecuteNonQuery
ÉÉ  /
(
ÉÉ/ 0
)
ÉÉ0 1
;
ÉÉ1 2
}
ÑÑ 
}
ÖÖ 
}
ÜÜ 
catch
áá 
(
áá 
SqlException
áá 
	exceptSql
áá  )
)
áá) *
{
àà 
IO
ââ 
.
ââ 
Logger
ââ 
.
ââ 
Log
ââ 
(
ââ 
NLog
ââ "
.
ââ" #
LogLevel
ââ# +
.
ââ+ ,
Warn
ââ, 0
,
ââ0 1
$str
ââ2 R
,
ââR S
	exceptSql
ââT ]
)
ââ] ^
;
ââ^ _
}
ää 
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
string
ëë 
password
ëë 
;
ëë 
if
íí 

(
íí 
$num
íí 
==
íí 
$num
íí 
)
íí 
{
ìì 	
password
ññ 
=
ññ 
$str
ññ &
;
ññ& '
}
óó 	
else
òò 
{
ôô 	
password
úú 
=
úú 
null
úú 
;
úú 
}
ùù 	
if
ûû 

(
ûû 
$num
ûû 
==
ûû 
$num
ûû 
)
ûû 
{
üü 	
try
†† 
{
°° 
using
££ 
(
££ 
SqlConnection
££ $

connection
££% /
=
££0 1
new
££2 5
SqlConnection
££6 C
(
££C D
$str
££D z
+
££{ |
$str££} Å
+££Ç É
$str££Ñ ê
+££ë í
password££ì õ
)££õ ú
)££ú ù
{
§§ 

connection
•• 
.
•• 
Open
•• #
(
••# $
)
••$ %
;
••% &
using
¶¶ 
(
¶¶ 

SqlCommand
¶¶ %
command
¶¶& -
=
¶¶. /
new
¶¶0 3

SqlCommand
¶¶4 >
(
¶¶> ?
$str
¶¶? Y
,
¶¶Y Z

connection
¶¶[ e
)
¶¶e f
)
¶¶f g
{
ßß 
command
®® 
.
®®  
ExecuteNonQuery
®®  /
(
®®/ 0
)
®®0 1
;
®®1 2
}
©© 
}
™™ 
}
´´ 
catch
¨¨ 
(
¨¨ 
SqlException
¨¨ 
	exceptSql
¨¨  )
)
¨¨) *
{
≠≠ 
IO
ÆÆ 
.
ÆÆ 
Logger
ÆÆ 
.
ÆÆ 
Log
ÆÆ 
(
ÆÆ 
NLog
ÆÆ "
.
ÆÆ" #
LogLevel
ÆÆ# +
.
ÆÆ+ ,
Warn
ÆÆ, 0
,
ÆÆ0 1
$str
ÆÆ2 R
,
ÆÆR S
	exceptSql
ÆÆT ]
)
ÆÆ] ^
;
ÆÆ^ _
}
ØØ 
}
∞∞ 	
}
±± 
private
¥¥ 
void
¥¥ 
GoodB2G1
¥¥ 
(
¥¥ 
)
¥¥ 
{
µµ 
string
∂∂ 
password
∂∂ 
;
∂∂ 
if
∑∑ 

(
∑∑ 
$num
∑∑ 
==
∑∑ 
$num
∑∑ 
)
∑∑ 
{
∏∏ 	
password
ππ 
=
ππ 
$str
ππ 
;
ππ 
{
ªª 
TcpListener
ºº 
listener
ºº $
=
ºº% &
null
ºº' +
;
ºº+ ,
try
ΩΩ 
{
ææ 
listener
¿¿ 
=
¿¿ 
new
¿¿ "
TcpListener
¿¿# .
(
¿¿. /
	IPAddress
¿¿/ 8
.
¿¿8 9
Parse
¿¿9 >
(
¿¿> ?
$str
¿¿? K
)
¿¿K L
,
¿¿L M
$num
¿¿N S
)
¿¿S T
;
¿¿T U
listener
¡¡ 
.
¡¡ 
Start
¡¡ "
(
¡¡" #
)
¡¡# $
;
¡¡$ %
using
¬¬ 
(
¬¬ 
	TcpClient
¬¬ $
tcpConn
¬¬% ,
=
¬¬- .
listener
¬¬/ 7
.
¬¬7 8
AcceptTcpClient
¬¬8 G
(
¬¬G H
)
¬¬H I
)
¬¬I J
{
√√ 
using
ƒƒ 
(
ƒƒ 
StreamReader
ƒƒ +
sr
ƒƒ, .
=
ƒƒ/ 0
new
ƒƒ1 4
StreamReader
ƒƒ5 A
(
ƒƒA B
Console
ƒƒB I
.
ƒƒI J
OpenStandardInput
ƒƒJ [
(
ƒƒ[ \
)
ƒƒ\ ]
)
ƒƒ] ^
)
ƒƒ^ _
{
≈≈ 
password
«« $
=
««% &
sr
««' )
.
««) *
ReadLine
««* 2
(
««2 3
)
««3 4
;
««4 5
}
»» 
}
…… 
}
   
catch
ÀÀ 
(
ÀÀ 
IOException
ÀÀ "
exceptIO
ÀÀ# +
)
ÀÀ+ ,
{
ÃÃ 
IO
ÕÕ 
.
ÕÕ 
Logger
ÕÕ 
.
ÕÕ 
Log
ÕÕ !
(
ÕÕ! "
NLog
ÕÕ" &
.
ÕÕ& '
LogLevel
ÕÕ' /
.
ÕÕ/ 0
Warn
ÕÕ0 4
,
ÕÕ4 5
$str
ÕÕ6 Q
,
ÕÕQ R
exceptIO
ÕÕS [
)
ÕÕ[ \
;
ÕÕ\ ]
}
ŒŒ 
finally
œœ 
{
–– 
try
—— 
{
““ 
if
”” 
(
”” 
listener
”” $
!=
””% '
null
””( ,
)
””, -
{
‘‘ 
listener
’’ $
.
’’$ %
Stop
’’% )
(
’’) *
)
’’* +
;
’’+ ,
}
÷÷ 
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
IOException
ÿÿ &
exceptIO
ÿÿ' /
)
ÿÿ/ 0
{
ŸŸ 
IO
⁄⁄ 
.
⁄⁄ 
Logger
⁄⁄ !
.
⁄⁄! "
Log
⁄⁄" %
(
⁄⁄% &
NLog
⁄⁄& *
.
⁄⁄* +
LogLevel
⁄⁄+ 3
.
⁄⁄3 4
Warn
⁄⁄4 8
,
⁄⁄8 9
$str
⁄⁄: U
,
⁄⁄U V
exceptIO
⁄⁄W _
)
⁄⁄_ `
;
⁄⁄` a
}
€€ 
}
‹‹ 
}
›› 
}
ﬁﬁ 	
else
ﬂﬂ 
{
‡‡ 	
password
„„ 
=
„„ 
null
„„ 
;
„„ 
}
‰‰ 	
if
ÂÂ 

(
ÂÂ 
$num
ÂÂ 
!=
ÂÂ 
$num
ÂÂ 
)
ÂÂ 
{
ÊÊ 	
IO
ËË 
.
ËË 
	WriteLine
ËË 
(
ËË 
$str
ËË /
)
ËË/ 0
;
ËË0 1
}
ÈÈ 	
else
ÍÍ 
{
ÎÎ 	
if
ÏÏ 
(
ÏÏ 
password
ÏÏ 
!=
ÏÏ 
null
ÏÏ  
)
ÏÏ  !
{
ÌÌ 
{
ÔÔ 
using
 
(
 &
AesCryptoServiceProvider
 3
aesAlg
4 :
=
; <
new
= @&
AesCryptoServiceProvider
A Y
(
Y Z
)
Z [
)
[ \
{
ÒÒ 
aesAlg
ÚÚ 
.
ÚÚ 
Padding
ÚÚ &
=
ÚÚ' (
PaddingMode
ÚÚ) 4
.
ÚÚ4 5
None
ÚÚ5 9
;
ÚÚ9 :
aesAlg
ÛÛ 
.
ÛÛ 
Key
ÛÛ "
=
ÛÛ# $
Encoding
ÛÛ% -
.
ÛÛ- .
UTF8
ÛÛ. 2
.
ÛÛ2 3
GetBytes
ÛÛ3 ;
(
ÛÛ; <
$str
ÛÛ< N
)
ÛÛN O
;
ÛÛO P
ICryptoTransform
ıı (
	decryptor
ıı) 2
=
ıı3 4
aesAlg
ıı5 ;
.
ıı; <
CreateDecryptor
ıı< K
(
ııK L
aesAlg
ııL R
.
ııR S
Key
ııS V
,
ııV W
aesAlg
ııX ^
.
ıı^ _
IV
ıı_ a
)
ııa b
;
ııb c
using
˜˜ 
(
˜˜ 
MemoryStream
˜˜ +
	msDecrypt
˜˜, 5
=
˜˜6 7
new
˜˜8 ;
MemoryStream
˜˜< H
(
˜˜H I
Encoding
˜˜I Q
.
˜˜Q R
UTF8
˜˜R V
.
˜˜V W
GetBytes
˜˜W _
(
˜˜_ `
password
˜˜` h
)
˜˜h i
)
˜˜i j
)
˜˜j k
{
¯¯ 
using
˘˘ !
(
˘˘" #
CryptoStream
˘˘# /
	csDecrypt
˘˘0 9
=
˘˘: ;
new
˘˘< ?
CryptoStream
˘˘@ L
(
˘˘L M
	msDecrypt
˘˘M V
,
˘˘V W
	decryptor
˘˘X a
,
˘˘a b
CryptoStreamMode
˘˘c s
.
˘˘s t
Read
˘˘t x
)
˘˘x y
)
˘˘y z
{
˙˙ 
using
˚˚  %
(
˚˚& '
StreamReader
˚˚' 3
	srDecrypt
˚˚4 =
=
˚˚> ?
new
˚˚@ C
StreamReader
˚˚D P
(
˚˚P Q
	csDecrypt
˚˚Q Z
)
˚˚Z [
)
˚˚[ \
{
¸¸  !
password
ˇˇ$ ,
=
ˇˇ- .
	srDecrypt
ˇˇ/ 8
.
ˇˇ8 9
	ReadToEnd
ˇˇ9 B
(
ˇˇB C
)
ˇˇC D
;
ˇˇD E
}
ÄÄ  !
}
ÅÅ 
}
ÇÇ 
}
ÉÉ 
}
ÑÑ 
try
ÖÖ 
{
ÜÜ 
using
àà 
(
àà 
SqlConnection
àà (

connection
àà) 3
=
àà4 5
new
àà6 9
SqlConnection
àà: G
(
ààG H
$str
ààH ~
+àà Ä
$strààÅ Ö
+ààÜ á
$strààà î
+ààï ñ
passwordààó ü
)ààü †
)àà† °
{
ââ 

connection
ää "
.
ää" #
Open
ää# '
(
ää' (
)
ää( )
;
ää) *
using
ãã 
(
ãã 

SqlCommand
ãã )
command
ãã* 1
=
ãã2 3
new
ãã4 7

SqlCommand
ãã8 B
(
ããB C
$str
ããC ]
,
ãã] ^

connection
ãã_ i
)
ããi j
)
ããj k
{
åå 
command
çç #
.
çç# $
ExecuteNonQuery
çç$ 3
(
çç3 4
)
çç4 5
;
çç5 6
}
éé 
}
èè 
}
êê 
catch
ëë 
(
ëë 
SqlException
ëë #
	exceptSql
ëë$ -
)
ëë- .
{
íí 
IO
ìì 
.
ìì 
Logger
ìì 
.
ìì 
Log
ìì !
(
ìì! "
NLog
ìì" &
.
ìì& '
LogLevel
ìì' /
.
ìì/ 0
Warn
ìì0 4
,
ìì4 5
$str
ìì6 V
,
ììV W
	exceptSql
ììX a
)
ììa b
;
ììb c
}
îî 
}
ïï 
}
ññ 	
}
óó 
private
öö 
void
öö 
GoodB2G2
öö 
(
öö 
)
öö 
{
õõ 
string
úú 
password
úú 
;
úú 
if
ùù 

(
ùù 
$num
ùù 
==
ùù 
$num
ùù 
)
ùù 
{
ûû 	
password
üü 
=
üü 
$str
üü 
;
üü 
{
°° 
TcpListener
¢¢ 
listener
¢¢ $
=
¢¢% &
null
¢¢' +
;
¢¢+ ,
try
££ 
{
§§ 
listener
¶¶ 
=
¶¶ 
new
¶¶ "
TcpListener
¶¶# .
(
¶¶. /
	IPAddress
¶¶/ 8
.
¶¶8 9
Parse
¶¶9 >
(
¶¶> ?
$str
¶¶? K
)
¶¶K L
,
¶¶L M
$num
¶¶N S
)
¶¶S T
;
¶¶T U
listener
ßß 
.
ßß 
Start
ßß "
(
ßß" #
)
ßß# $
;
ßß$ %
using
®® 
(
®® 
	TcpClient
®® $
tcpConn
®®% ,
=
®®- .
listener
®®/ 7
.
®®7 8
AcceptTcpClient
®®8 G
(
®®G H
)
®®H I
)
®®I J
{
©© 
using
™™ 
(
™™ 
StreamReader
™™ +
sr
™™, .
=
™™/ 0
new
™™1 4
StreamReader
™™5 A
(
™™A B
Console
™™B I
.
™™I J
OpenStandardInput
™™J [
(
™™[ \
)
™™\ ]
)
™™] ^
)
™™^ _
{
´´ 
password
≠≠ $
=
≠≠% &
sr
≠≠' )
.
≠≠) *
ReadLine
≠≠* 2
(
≠≠2 3
)
≠≠3 4
;
≠≠4 5
}
ÆÆ 
}
ØØ 
}
∞∞ 
catch
±± 
(
±± 
IOException
±± "
exceptIO
±±# +
)
±±+ ,
{
≤≤ 
IO
≥≥ 
.
≥≥ 
Logger
≥≥ 
.
≥≥ 
Log
≥≥ !
(
≥≥! "
NLog
≥≥" &
.
≥≥& '
LogLevel
≥≥' /
.
≥≥/ 0
Warn
≥≥0 4
,
≥≥4 5
$str
≥≥6 Q
,
≥≥Q R
exceptIO
≥≥S [
)
≥≥[ \
;
≥≥\ ]
}
¥¥ 
finally
µµ 
{
∂∂ 
try
∑∑ 
{
∏∏ 
if
ππ 
(
ππ 
listener
ππ $
!=
ππ% '
null
ππ( ,
)
ππ, -
{
∫∫ 
listener
ªª $
.
ªª$ %
Stop
ªª% )
(
ªª) *
)
ªª* +
;
ªª+ ,
}
ºº 
}
ΩΩ 
catch
ææ 
(
ææ 
IOException
ææ &
exceptIO
ææ' /
)
ææ/ 0
{
øø 
IO
¿¿ 
.
¿¿ 
Logger
¿¿ !
.
¿¿! "
Log
¿¿" %
(
¿¿% &
NLog
¿¿& *
.
¿¿* +
LogLevel
¿¿+ 3
.
¿¿3 4
Warn
¿¿4 8
,
¿¿8 9
$str
¿¿: U
,
¿¿U V
exceptIO
¿¿W _
)
¿¿_ `
;
¿¿` a
}
¡¡ 
}
¬¬ 
}
√√ 
}
ƒƒ 	
else
≈≈ 
{
∆∆ 	
password
…… 
=
…… 
null
…… 
;
…… 
}
   	
if
ÀÀ 

(
ÀÀ 
$num
ÀÀ 
==
ÀÀ 
$num
ÀÀ 
)
ÀÀ 
{
ÃÃ 	
if
ÕÕ 
(
ÕÕ 
password
ÕÕ 
!=
ÕÕ 
null
ÕÕ  
)
ÕÕ  !
{
ŒŒ 
{
–– 
using
—— 
(
—— &
AesCryptoServiceProvider
—— 3
aesAlg
——4 :
=
——; <
new
——= @&
AesCryptoServiceProvider
——A Y
(
——Y Z
)
——Z [
)
——[ \
{
““ 
aesAlg
”” 
.
”” 
Padding
”” &
=
””' (
PaddingMode
””) 4
.
””4 5
None
””5 9
;
””9 :
aesAlg
‘‘ 
.
‘‘ 
Key
‘‘ "
=
‘‘# $
Encoding
‘‘% -
.
‘‘- .
UTF8
‘‘. 2
.
‘‘2 3
GetBytes
‘‘3 ;
(
‘‘; <
$str
‘‘< N
)
‘‘N O
;
‘‘O P
ICryptoTransform
÷÷ (
	decryptor
÷÷) 2
=
÷÷3 4
aesAlg
÷÷5 ;
.
÷÷; <
CreateDecryptor
÷÷< K
(
÷÷K L
aesAlg
÷÷L R
.
÷÷R S
Key
÷÷S V
,
÷÷V W
aesAlg
÷÷X ^
.
÷÷^ _
IV
÷÷_ a
)
÷÷a b
;
÷÷b c
using
ÿÿ 
(
ÿÿ 
MemoryStream
ÿÿ +
	msDecrypt
ÿÿ, 5
=
ÿÿ6 7
new
ÿÿ8 ;
MemoryStream
ÿÿ< H
(
ÿÿH I
Encoding
ÿÿI Q
.
ÿÿQ R
UTF8
ÿÿR V
.
ÿÿV W
GetBytes
ÿÿW _
(
ÿÿ_ `
password
ÿÿ` h
)
ÿÿh i
)
ÿÿi j
)
ÿÿj k
{
ŸŸ 
using
⁄⁄ !
(
⁄⁄" #
CryptoStream
⁄⁄# /
	csDecrypt
⁄⁄0 9
=
⁄⁄: ;
new
⁄⁄< ?
CryptoStream
⁄⁄@ L
(
⁄⁄L M
	msDecrypt
⁄⁄M V
,
⁄⁄V W
	decryptor
⁄⁄X a
,
⁄⁄a b
CryptoStreamMode
⁄⁄c s
.
⁄⁄s t
Read
⁄⁄t x
)
⁄⁄x y
)
⁄⁄y z
{
€€ 
using
‹‹  %
(
‹‹& '
StreamReader
‹‹' 3
	srDecrypt
‹‹4 =
=
‹‹> ?
new
‹‹@ C
StreamReader
‹‹D P
(
‹‹P Q
	csDecrypt
‹‹Q Z
)
‹‹Z [
)
‹‹[ \
{
››  !
password
‡‡$ ,
=
‡‡- .
	srDecrypt
‡‡/ 8
.
‡‡8 9
	ReadToEnd
‡‡9 B
(
‡‡B C
)
‡‡C D
;
‡‡D E
}
··  !
}
‚‚ 
}
„„ 
}
‰‰ 
}
ÂÂ 
try
ÊÊ 
{
ÁÁ 
using
ÈÈ 
(
ÈÈ 
SqlConnection
ÈÈ (

connection
ÈÈ) 3
=
ÈÈ4 5
new
ÈÈ6 9
SqlConnection
ÈÈ: G
(
ÈÈG H
$str
ÈÈH ~
+ÈÈ Ä
$strÈÈÅ Ö
+ÈÈÜ á
$strÈÈà î
+ÈÈï ñ
passwordÈÈó ü
)ÈÈü †
)ÈÈ† °
{
ÍÍ 

connection
ÎÎ "
.
ÎÎ" #
Open
ÎÎ# '
(
ÎÎ' (
)
ÎÎ( )
;
ÎÎ) *
using
ÏÏ 
(
ÏÏ 

SqlCommand
ÏÏ )
command
ÏÏ* 1
=
ÏÏ2 3
new
ÏÏ4 7

SqlCommand
ÏÏ8 B
(
ÏÏB C
$str
ÏÏC ]
,
ÏÏ] ^

connection
ÏÏ_ i
)
ÏÏi j
)
ÏÏj k
{
ÌÌ 
command
ÓÓ #
.
ÓÓ# $
ExecuteNonQuery
ÓÓ$ 3
(
ÓÓ3 4
)
ÓÓ4 5
;
ÓÓ5 6
}
ÔÔ 
}
 
}
ÒÒ 
catch
ÚÚ 
(
ÚÚ 
SqlException
ÚÚ #
	exceptSql
ÚÚ$ -
)
ÚÚ- .
{
ÛÛ 
IO
ÙÙ 
.
ÙÙ 
Logger
ÙÙ 
.
ÙÙ 
Log
ÙÙ !
(
ÙÙ! "
NLog
ÙÙ" &
.
ÙÙ& '
LogLevel
ÙÙ' /
.
ÙÙ/ 0
Warn
ÙÙ0 4
,
ÙÙ4 5
$str
ÙÙ6 V
,
ÙÙV W
	exceptSql
ÙÙX a
)
ÙÙa b
;
ÙÙb c
}
ıı 
}
ˆˆ 
}
˜˜ 	
}
¯¯ 
public
˙˙ 

override
˙˙ 
void
˙˙ 
Good
˙˙ 
(
˙˙ 
)
˙˙ 
{
˚˚ 
GoodG2B1
¸¸ 
(
¸¸ 
)
¸¸ 
;
¸¸ 
GoodG2B2
˝˝ 
(
˝˝ 
)
˝˝ 
;
˝˝ 
GoodB2G1
˛˛ 
(
˛˛ 
)
˛˛ 
;
˛˛ 
GoodB2G2
ˇˇ 
(
ˇˇ 
)
ˇˇ 
;
ˇˇ 
}
ÄÄ 
}ÇÇ 
}ÉÉ Îª
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_04.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_04 E
:F G
AbstractTestCaseH X
{   
private&& 
const&& 
bool&& 
PRIVATE_CONST_TRUE&& )
=&&* +
true&&, 0
;&&0 1
private'' 
const'' 
bool'' 
PRIVATE_CONST_FALSE'' *
=''+ ,
false''- 2
;''2 3
public)) 

override)) 
void)) 
Bad)) 
()) 
))) 
{** 
string++ 
password++ 
;++ 
if,, 

(,, 
PRIVATE_CONST_TRUE,, 
),, 
{-- 	
password.. 
=.. 
$str.. 
;.. 
{00 
TcpListener11 
listener11 $
=11% &
null11' +
;11+ ,
try22 
{33 
listener55 
=55 
new55 "
TcpListener55# .
(55. /
	IPAddress55/ 8
.558 9
Parse559 >
(55> ?
$str55? K
)55K L
,55L M
$num55N S
)55S T
;55T U
listener66 
.66 
Start66 "
(66" #
)66# $
;66$ %
using77 
(77 
	TcpClient77 $
tcpConn77% ,
=77- .
listener77/ 7
.777 8
AcceptTcpClient778 G
(77G H
)77H I
)77I J
{88 
using99 
(99 
StreamReader99 +
sr99, .
=99/ 0
new991 4
StreamReader995 A
(99A B
Console99B I
.99I J
OpenStandardInput99J [
(99[ \
)99\ ]
)99] ^
)99^ _
{:: 
password<< $
=<<% &
sr<<' )
.<<) *
ReadLine<<* 2
(<<2 3
)<<3 4
;<<4 5
}== 
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ "
exceptIO@@# +
)@@+ ,
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB !
(BB! "
NLogBB" &
.BB& '
LogLevelBB' /
.BB/ 0
WarnBB0 4
,BB4 5
$strBB6 Q
,BBQ R
exceptIOBBS [
)BB[ \
;BB\ ]
}CC 
finallyDD 
{EE 
tryFF 
{GG 
ifHH 
(HH 
listenerHH $
!=HH% '
nullHH( ,
)HH, -
{II 
listenerJJ $
.JJ$ %
StopJJ% )
(JJ) *
)JJ* +
;JJ+ ,
}KK 
}LL 
catchMM 
(MM 
IOExceptionMM &
exceptIOMM' /
)MM/ 0
{NN 
IOOO 
.OO 
LoggerOO !
.OO! "
LogOO" %
(OO% &
NLogOO& *
.OO* +
LogLevelOO+ 3
.OO3 4
WarnOO4 8
,OO8 9
$strOO: U
,OOU V
exceptIOOOW _
)OO_ `
;OO` a
}PP 
}QQ 
}RR 
}SS 	
elseTT 
{UU 	
passwordXX 
=XX 
nullXX 
;XX 
}YY 	
ifZZ 

(ZZ 
PRIVATE_CONST_TRUEZZ 
)ZZ 
{[[ 	
try\\ 
{]] 
using__ 
(__ 
SqlConnection__ $

connection__% /
=__0 1
new__2 5
SqlConnection__6 C
(__C D
$str__D z
+__{ |
$str	__} Å
+
__Ç É
$str
__Ñ ê
+
__ë í
password
__ì õ
)
__õ ú
)
__ú ù
{`` 

connectionaa 
.aa 
Openaa #
(aa# $
)aa$ %
;aa% &
usingbb 
(bb 

SqlCommandbb %
commandbb& -
=bb. /
newbb0 3

SqlCommandbb4 >
(bb> ?
$strbb? Y
,bbY Z

connectionbb[ e
)bbe f
)bbf g
{cc 
commanddd 
.dd  
ExecuteNonQuerydd  /
(dd/ 0
)dd0 1
;dd1 2
}ee 
}ff 
}gg 
catchhh 
(hh 
SqlExceptionhh 
	exceptSqlhh  )
)hh) *
{ii 
IOjj 
.jj 
Loggerjj 
.jj 
Logjj 
(jj 
NLogjj "
.jj" #
LogLeveljj# +
.jj+ ,
Warnjj, 0
,jj0 1
$strjj2 R
,jjR S
	exceptSqljjT ]
)jj] ^
;jj^ _
}kk 
}ll 	
}mm 
privateqq 
voidqq 
GoodG2B1qq 
(qq 
)qq 
{rr 
stringss 
passwordss 
;ss 
iftt 

(tt 
PRIVATE_CONST_FALSEtt 
)tt  
{uu 	
passwordxx 
=xx 
nullxx 
;xx 
}yy 	
elsezz 
{{{ 	
password~~ 
=~~ 
$str~~ &
;~~& '
} 	
if
ÄÄ 

(
ÄÄ  
PRIVATE_CONST_TRUE
ÄÄ 
)
ÄÄ 
{
ÅÅ 	
try
ÇÇ 
{
ÉÉ 
using
ÖÖ 
(
ÖÖ 
SqlConnection
ÖÖ $

connection
ÖÖ% /
=
ÖÖ0 1
new
ÖÖ2 5
SqlConnection
ÖÖ6 C
(
ÖÖC D
$str
ÖÖD z
+
ÖÖ{ |
$strÖÖ} Å
+ÖÖÇ É
$strÖÖÑ ê
+ÖÖë í
passwordÖÖì õ
)ÖÖõ ú
)ÖÖú ù
{
ÜÜ 

connection
áá 
.
áá 
Open
áá #
(
áá# $
)
áá$ %
;
áá% &
using
àà 
(
àà 

SqlCommand
àà %
command
àà& -
=
àà. /
new
àà0 3

SqlCommand
àà4 >
(
àà> ?
$str
àà? Y
,
ààY Z

connection
àà[ e
)
ààe f
)
ààf g
{
ââ 
command
ää 
.
ää  
ExecuteNonQuery
ää  /
(
ää/ 0
)
ää0 1
;
ää1 2
}
ãã 
}
åå 
}
çç 
catch
éé 
(
éé 
SqlException
éé 
	exceptSql
éé  )
)
éé) *
{
èè 
IO
êê 
.
êê 
Logger
êê 
.
êê 
Log
êê 
(
êê 
NLog
êê "
.
êê" #
LogLevel
êê# +
.
êê+ ,
Warn
êê, 0
,
êê0 1
$str
êê2 R
,
êêR S
	exceptSql
êêT ]
)
êê] ^
;
êê^ _
}
ëë 
}
íí 	
}
ìì 
private
ññ 
void
ññ 
GoodG2B2
ññ 
(
ññ 
)
ññ 
{
óó 
string
òò 
password
òò 
;
òò 
if
ôô 

(
ôô  
PRIVATE_CONST_TRUE
ôô 
)
ôô 
{
öö 	
password
ùù 
=
ùù 
$str
ùù &
;
ùù& '
}
ûû 	
else
üü 
{
†† 	
password
££ 
=
££ 
null
££ 
;
££ 
}
§§ 	
if
•• 

(
••  
PRIVATE_CONST_TRUE
•• 
)
•• 
{
¶¶ 	
try
ßß 
{
®® 
using
™™ 
(
™™ 
SqlConnection
™™ $

connection
™™% /
=
™™0 1
new
™™2 5
SqlConnection
™™6 C
(
™™C D
$str
™™D z
+
™™{ |
$str™™} Å
+™™Ç É
$str™™Ñ ê
+™™ë í
password™™ì õ
)™™õ ú
)™™ú ù
{
´´ 

connection
¨¨ 
.
¨¨ 
Open
¨¨ #
(
¨¨# $
)
¨¨$ %
;
¨¨% &
using
≠≠ 
(
≠≠ 

SqlCommand
≠≠ %
command
≠≠& -
=
≠≠. /
new
≠≠0 3

SqlCommand
≠≠4 >
(
≠≠> ?
$str
≠≠? Y
,
≠≠Y Z

connection
≠≠[ e
)
≠≠e f
)
≠≠f g
{
ÆÆ 
command
ØØ 
.
ØØ  
ExecuteNonQuery
ØØ  /
(
ØØ/ 0
)
ØØ0 1
;
ØØ1 2
}
∞∞ 
}
±± 
}
≤≤ 
catch
≥≥ 
(
≥≥ 
SqlException
≥≥ 
	exceptSql
≥≥  )
)
≥≥) *
{
¥¥ 
IO
µµ 
.
µµ 
Logger
µµ 
.
µµ 
Log
µµ 
(
µµ 
NLog
µµ "
.
µµ" #
LogLevel
µµ# +
.
µµ+ ,
Warn
µµ, 0
,
µµ0 1
$str
µµ2 R
,
µµR S
	exceptSql
µµT ]
)
µµ] ^
;
µµ^ _
}
∂∂ 
}
∑∑ 	
}
∏∏ 
private
ªª 
void
ªª 
GoodB2G1
ªª 
(
ªª 
)
ªª 
{
ºº 
string
ΩΩ 
password
ΩΩ 
;
ΩΩ 
if
ææ 

(
ææ  
PRIVATE_CONST_TRUE
ææ 
)
ææ 
{
øø 	
password
¿¿ 
=
¿¿ 
$str
¿¿ 
;
¿¿ 
{
¬¬ 
TcpListener
√√ 
listener
√√ $
=
√√% &
null
√√' +
;
√√+ ,
try
ƒƒ 
{
≈≈ 
listener
«« 
=
«« 
new
«« "
TcpListener
««# .
(
««. /
	IPAddress
««/ 8
.
««8 9
Parse
««9 >
(
««> ?
$str
««? K
)
««K L
,
««L M
$num
««N S
)
««S T
;
««T U
listener
»» 
.
»» 
Start
»» "
(
»»" #
)
»»# $
;
»»$ %
using
…… 
(
…… 
	TcpClient
…… $
tcpConn
……% ,
=
……- .
listener
……/ 7
.
……7 8
AcceptTcpClient
……8 G
(
……G H
)
……H I
)
……I J
{
   
using
ÀÀ 
(
ÀÀ 
StreamReader
ÀÀ +
sr
ÀÀ, .
=
ÀÀ/ 0
new
ÀÀ1 4
StreamReader
ÀÀ5 A
(
ÀÀA B
Console
ÀÀB I
.
ÀÀI J
OpenStandardInput
ÀÀJ [
(
ÀÀ[ \
)
ÀÀ\ ]
)
ÀÀ] ^
)
ÀÀ^ _
{
ÃÃ 
password
ŒŒ $
=
ŒŒ% &
sr
ŒŒ' )
.
ŒŒ) *
ReadLine
ŒŒ* 2
(
ŒŒ2 3
)
ŒŒ3 4
;
ŒŒ4 5
}
œœ 
}
–– 
}
—— 
catch
““ 
(
““ 
IOException
““ "
exceptIO
““# +
)
““+ ,
{
”” 
IO
‘‘ 
.
‘‘ 
Logger
‘‘ 
.
‘‘ 
Log
‘‘ !
(
‘‘! "
NLog
‘‘" &
.
‘‘& '
LogLevel
‘‘' /
.
‘‘/ 0
Warn
‘‘0 4
,
‘‘4 5
$str
‘‘6 Q
,
‘‘Q R
exceptIO
‘‘S [
)
‘‘[ \
;
‘‘\ ]
}
’’ 
finally
÷÷ 
{
◊◊ 
try
ÿÿ 
{
ŸŸ 
if
⁄⁄ 
(
⁄⁄ 
listener
⁄⁄ $
!=
⁄⁄% '
null
⁄⁄( ,
)
⁄⁄, -
{
€€ 
listener
‹‹ $
.
‹‹$ %
Stop
‹‹% )
(
‹‹) *
)
‹‹* +
;
‹‹+ ,
}
›› 
}
ﬁﬁ 
catch
ﬂﬂ 
(
ﬂﬂ 
IOException
ﬂﬂ &
exceptIO
ﬂﬂ' /
)
ﬂﬂ/ 0
{
‡‡ 
IO
·· 
.
·· 
Logger
·· !
.
··! "
Log
··" %
(
··% &
NLog
··& *
.
··* +
LogLevel
··+ 3
.
··3 4
Warn
··4 8
,
··8 9
$str
··: U
,
··U V
exceptIO
··W _
)
··_ `
;
··` a
}
‚‚ 
}
„„ 
}
‰‰ 
}
ÂÂ 	
else
ÊÊ 
{
ÁÁ 	
password
ÍÍ 
=
ÍÍ 
null
ÍÍ 
;
ÍÍ 
}
ÎÎ 	
if
ÏÏ 

(
ÏÏ !
PRIVATE_CONST_FALSE
ÏÏ 
)
ÏÏ  
{
ÌÌ 	
IO
ÔÔ 
.
ÔÔ 
	WriteLine
ÔÔ 
(
ÔÔ 
$str
ÔÔ /
)
ÔÔ/ 0
;
ÔÔ0 1
}
 	
else
ÒÒ 
{
ÚÚ 	
if
ÛÛ 
(
ÛÛ 
password
ÛÛ 
!=
ÛÛ 
null
ÛÛ  
)
ÛÛ  !
{
ÙÙ 
{
ˆˆ 
using
˜˜ 
(
˜˜ &
AesCryptoServiceProvider
˜˜ 3
aesAlg
˜˜4 :
=
˜˜; <
new
˜˜= @&
AesCryptoServiceProvider
˜˜A Y
(
˜˜Y Z
)
˜˜Z [
)
˜˜[ \
{
¯¯ 
aesAlg
˘˘ 
.
˘˘ 
Padding
˘˘ &
=
˘˘' (
PaddingMode
˘˘) 4
.
˘˘4 5
None
˘˘5 9
;
˘˘9 :
aesAlg
˙˙ 
.
˙˙ 
Key
˙˙ "
=
˙˙# $
Encoding
˙˙% -
.
˙˙- .
UTF8
˙˙. 2
.
˙˙2 3
GetBytes
˙˙3 ;
(
˙˙; <
$str
˙˙< N
)
˙˙N O
;
˙˙O P
ICryptoTransform
¸¸ (
	decryptor
¸¸) 2
=
¸¸3 4
aesAlg
¸¸5 ;
.
¸¸; <
CreateDecryptor
¸¸< K
(
¸¸K L
aesAlg
¸¸L R
.
¸¸R S
Key
¸¸S V
,
¸¸V W
aesAlg
¸¸X ^
.
¸¸^ _
IV
¸¸_ a
)
¸¸a b
;
¸¸b c
using
˛˛ 
(
˛˛ 
MemoryStream
˛˛ +
	msDecrypt
˛˛, 5
=
˛˛6 7
new
˛˛8 ;
MemoryStream
˛˛< H
(
˛˛H I
Encoding
˛˛I Q
.
˛˛Q R
UTF8
˛˛R V
.
˛˛V W
GetBytes
˛˛W _
(
˛˛_ `
password
˛˛` h
)
˛˛h i
)
˛˛i j
)
˛˛j k
{
ˇˇ 
using
ÄÄ !
(
ÄÄ" #
CryptoStream
ÄÄ# /
	csDecrypt
ÄÄ0 9
=
ÄÄ: ;
new
ÄÄ< ?
CryptoStream
ÄÄ@ L
(
ÄÄL M
	msDecrypt
ÄÄM V
,
ÄÄV W
	decryptor
ÄÄX a
,
ÄÄa b
CryptoStreamMode
ÄÄc s
.
ÄÄs t
Read
ÄÄt x
)
ÄÄx y
)
ÄÄy z
{
ÅÅ 
using
ÇÇ  %
(
ÇÇ& '
StreamReader
ÇÇ' 3
	srDecrypt
ÇÇ4 =
=
ÇÇ> ?
new
ÇÇ@ C
StreamReader
ÇÇD P
(
ÇÇP Q
	csDecrypt
ÇÇQ Z
)
ÇÇZ [
)
ÇÇ[ \
{
ÉÉ  !
password
ÜÜ$ ,
=
ÜÜ- .
	srDecrypt
ÜÜ/ 8
.
ÜÜ8 9
	ReadToEnd
ÜÜ9 B
(
ÜÜB C
)
ÜÜC D
;
ÜÜD E
}
áá  !
}
àà 
}
ââ 
}
ää 
}
ãã 
try
åå 
{
çç 
using
èè 
(
èè 
SqlConnection
èè (

connection
èè) 3
=
èè4 5
new
èè6 9
SqlConnection
èè: G
(
èèG H
$str
èèH ~
+èè Ä
$strèèÅ Ö
+èèÜ á
$strèèà î
+èèï ñ
passwordèèó ü
)èèü †
)èè† °
{
êê 

connection
ëë "
.
ëë" #
Open
ëë# '
(
ëë' (
)
ëë( )
;
ëë) *
using
íí 
(
íí 

SqlCommand
íí )
command
íí* 1
=
íí2 3
new
íí4 7

SqlCommand
íí8 B
(
ííB C
$str
ííC ]
,
íí] ^

connection
íí_ i
)
ííi j
)
ííj k
{
ìì 
command
îî #
.
îî# $
ExecuteNonQuery
îî$ 3
(
îî3 4
)
îî4 5
;
îî5 6
}
ïï 
}
ññ 
}
óó 
catch
òò 
(
òò 
SqlException
òò #
	exceptSql
òò$ -
)
òò- .
{
ôô 
IO
öö 
.
öö 
Logger
öö 
.
öö 
Log
öö !
(
öö! "
NLog
öö" &
.
öö& '
LogLevel
öö' /
.
öö/ 0
Warn
öö0 4
,
öö4 5
$str
öö6 V
,
ööV W
	exceptSql
ööX a
)
ööa b
;
ööb c
}
õõ 
}
úú 
}
ùù 	
}
ûû 
private
°° 
void
°° 
GoodB2G2
°° 
(
°° 
)
°° 
{
¢¢ 
string
££ 
password
££ 
;
££ 
if
§§ 

(
§§  
PRIVATE_CONST_TRUE
§§ 
)
§§ 
{
•• 	
password
¶¶ 
=
¶¶ 
$str
¶¶ 
;
¶¶ 
{
®® 
TcpListener
©© 
listener
©© $
=
©©% &
null
©©' +
;
©©+ ,
try
™™ 
{
´´ 
listener
≠≠ 
=
≠≠ 
new
≠≠ "
TcpListener
≠≠# .
(
≠≠. /
	IPAddress
≠≠/ 8
.
≠≠8 9
Parse
≠≠9 >
(
≠≠> ?
$str
≠≠? K
)
≠≠K L
,
≠≠L M
$num
≠≠N S
)
≠≠S T
;
≠≠T U
listener
ÆÆ 
.
ÆÆ 
Start
ÆÆ "
(
ÆÆ" #
)
ÆÆ# $
;
ÆÆ$ %
using
ØØ 
(
ØØ 
	TcpClient
ØØ $
tcpConn
ØØ% ,
=
ØØ- .
listener
ØØ/ 7
.
ØØ7 8
AcceptTcpClient
ØØ8 G
(
ØØG H
)
ØØH I
)
ØØI J
{
∞∞ 
using
±± 
(
±± 
StreamReader
±± +
sr
±±, .
=
±±/ 0
new
±±1 4
StreamReader
±±5 A
(
±±A B
Console
±±B I
.
±±I J
OpenStandardInput
±±J [
(
±±[ \
)
±±\ ]
)
±±] ^
)
±±^ _
{
≤≤ 
password
¥¥ $
=
¥¥% &
sr
¥¥' )
.
¥¥) *
ReadLine
¥¥* 2
(
¥¥2 3
)
¥¥3 4
;
¥¥4 5
}
µµ 
}
∂∂ 
}
∑∑ 
catch
∏∏ 
(
∏∏ 
IOException
∏∏ "
exceptIO
∏∏# +
)
∏∏+ ,
{
ππ 
IO
∫∫ 
.
∫∫ 
Logger
∫∫ 
.
∫∫ 
Log
∫∫ !
(
∫∫! "
NLog
∫∫" &
.
∫∫& '
LogLevel
∫∫' /
.
∫∫/ 0
Warn
∫∫0 4
,
∫∫4 5
$str
∫∫6 Q
,
∫∫Q R
exceptIO
∫∫S [
)
∫∫[ \
;
∫∫\ ]
}
ªª 
finally
ºº 
{
ΩΩ 
try
ææ 
{
øø 
if
¿¿ 
(
¿¿ 
listener
¿¿ $
!=
¿¿% '
null
¿¿( ,
)
¿¿, -
{
¡¡ 
listener
¬¬ $
.
¬¬$ %
Stop
¬¬% )
(
¬¬) *
)
¬¬* +
;
¬¬+ ,
}
√√ 
}
ƒƒ 
catch
≈≈ 
(
≈≈ 
IOException
≈≈ &
exceptIO
≈≈' /
)
≈≈/ 0
{
∆∆ 
IO
«« 
.
«« 
Logger
«« !
.
««! "
Log
««" %
(
««% &
NLog
««& *
.
««* +
LogLevel
««+ 3
.
««3 4
Warn
««4 8
,
««8 9
$str
««: U
,
««U V
exceptIO
««W _
)
««_ `
;
««` a
}
»» 
}
…… 
}
   
}
ÀÀ 	
else
ÃÃ 
{
ÕÕ 	
password
–– 
=
–– 
null
–– 
;
–– 
}
—— 	
if
““ 

(
““  
PRIVATE_CONST_TRUE
““ 
)
““ 
{
”” 	
if
‘‘ 
(
‘‘ 
password
‘‘ 
!=
‘‘ 
null
‘‘  
)
‘‘  !
{
’’ 
{
◊◊ 
using
ÿÿ 
(
ÿÿ &
AesCryptoServiceProvider
ÿÿ 3
aesAlg
ÿÿ4 :
=
ÿÿ; <
new
ÿÿ= @&
AesCryptoServiceProvider
ÿÿA Y
(
ÿÿY Z
)
ÿÿZ [
)
ÿÿ[ \
{
ŸŸ 
aesAlg
⁄⁄ 
.
⁄⁄ 
Padding
⁄⁄ &
=
⁄⁄' (
PaddingMode
⁄⁄) 4
.
⁄⁄4 5
None
⁄⁄5 9
;
⁄⁄9 :
aesAlg
€€ 
.
€€ 
Key
€€ "
=
€€# $
Encoding
€€% -
.
€€- .
UTF8
€€. 2
.
€€2 3
GetBytes
€€3 ;
(
€€; <
$str
€€< N
)
€€N O
;
€€O P
ICryptoTransform
›› (
	decryptor
››) 2
=
››3 4
aesAlg
››5 ;
.
››; <
CreateDecryptor
››< K
(
››K L
aesAlg
››L R
.
››R S
Key
››S V
,
››V W
aesAlg
››X ^
.
››^ _
IV
››_ a
)
››a b
;
››b c
using
ﬂﬂ 
(
ﬂﬂ 
MemoryStream
ﬂﬂ +
	msDecrypt
ﬂﬂ, 5
=
ﬂﬂ6 7
new
ﬂﬂ8 ;
MemoryStream
ﬂﬂ< H
(
ﬂﬂH I
Encoding
ﬂﬂI Q
.
ﬂﬂQ R
UTF8
ﬂﬂR V
.
ﬂﬂV W
GetBytes
ﬂﬂW _
(
ﬂﬂ_ `
password
ﬂﬂ` h
)
ﬂﬂh i
)
ﬂﬂi j
)
ﬂﬂj k
{
‡‡ 
using
·· !
(
··" #
CryptoStream
··# /
	csDecrypt
··0 9
=
··: ;
new
··< ?
CryptoStream
··@ L
(
··L M
	msDecrypt
··M V
,
··V W
	decryptor
··X a
,
··a b
CryptoStreamMode
··c s
.
··s t
Read
··t x
)
··x y
)
··y z
{
‚‚ 
using
„„  %
(
„„& '
StreamReader
„„' 3
	srDecrypt
„„4 =
=
„„> ?
new
„„@ C
StreamReader
„„D P
(
„„P Q
	csDecrypt
„„Q Z
)
„„Z [
)
„„[ \
{
‰‰  !
password
ÁÁ$ ,
=
ÁÁ- .
	srDecrypt
ÁÁ/ 8
.
ÁÁ8 9
	ReadToEnd
ÁÁ9 B
(
ÁÁB C
)
ÁÁC D
;
ÁÁD E
}
ËË  !
}
ÈÈ 
}
ÍÍ 
}
ÎÎ 
}
ÏÏ 
try
ÌÌ 
{
ÓÓ 
using
 
(
 
SqlConnection
 (

connection
) 3
=
4 5
new
6 9
SqlConnection
: G
(
G H
$str
H ~
+ Ä
$strÅ Ö
+Ü á
$strà î
+ï ñ
passwordó ü
)ü †
)† °
{
ÒÒ 

connection
ÚÚ "
.
ÚÚ" #
Open
ÚÚ# '
(
ÚÚ' (
)
ÚÚ( )
;
ÚÚ) *
using
ÛÛ 
(
ÛÛ 

SqlCommand
ÛÛ )
command
ÛÛ* 1
=
ÛÛ2 3
new
ÛÛ4 7

SqlCommand
ÛÛ8 B
(
ÛÛB C
$str
ÛÛC ]
,
ÛÛ] ^

connection
ÛÛ_ i
)
ÛÛi j
)
ÛÛj k
{
ÙÙ 
command
ıı #
.
ıı# $
ExecuteNonQuery
ıı$ 3
(
ıı3 4
)
ıı4 5
;
ıı5 6
}
ˆˆ 
}
˜˜ 
}
¯¯ 
catch
˘˘ 
(
˘˘ 
SqlException
˘˘ #
	exceptSql
˘˘$ -
)
˘˘- .
{
˙˙ 
IO
˚˚ 
.
˚˚ 
Logger
˚˚ 
.
˚˚ 
Log
˚˚ !
(
˚˚! "
NLog
˚˚" &
.
˚˚& '
LogLevel
˚˚' /
.
˚˚/ 0
Warn
˚˚0 4
,
˚˚4 5
$str
˚˚6 V
,
˚˚V W
	exceptSql
˚˚X a
)
˚˚a b
;
˚˚b c
}
¸¸ 
}
˝˝ 
}
˛˛ 	
}
ˇˇ 
public
ÅÅ 

override
ÅÅ 
void
ÅÅ 
Good
ÅÅ 
(
ÅÅ 
)
ÅÅ 
{
ÇÇ 
GoodG2B1
ÉÉ 
(
ÉÉ 
)
ÉÉ 
;
ÉÉ 
GoodG2B2
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
GoodB2G1
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
GoodB2G2
ÜÜ 
(
ÜÜ 
)
ÜÜ 
;
ÜÜ 
}
áá 
}ââ 
}ää È∫
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_05.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_05 E
:F G
AbstractTestCaseH X
{ 
private%% 
bool%% 
privateTrue%% 
=%% 
true%% #
;%%# $
private&& 
bool&& 
privateFalse&& 
=&& 
false&&  %
;&&% &
public(( 

override(( 
void(( 
Bad(( 
((( 
)(( 
{)) 
string** 
password** 
;** 
if++ 

(++ 
privateTrue++ 
)++ 
{,, 	
password-- 
=-- 
$str-- 
;-- 
{// 
TcpListener00 
listener00 $
=00% &
null00' +
;00+ ,
try11 
{22 
listener44 
=44 
new44 "
TcpListener44# .
(44. /
	IPAddress44/ 8
.448 9
Parse449 >
(44> ?
$str44? K
)44K L
,44L M
$num44N S
)44S T
;44T U
listener55 
.55 
Start55 "
(55" #
)55# $
;55$ %
using66 
(66 
	TcpClient66 $
tcpConn66% ,
=66- .
listener66/ 7
.667 8
AcceptTcpClient668 G
(66G H
)66H I
)66I J
{77 
using88 
(88 
StreamReader88 +
sr88, .
=88/ 0
new881 4
StreamReader885 A
(88A B
Console88B I
.88I J
OpenStandardInput88J [
(88[ \
)88\ ]
)88] ^
)88^ _
{99 
password;; $
=;;% &
sr;;' )
.;;) *
ReadLine;;* 2
(;;2 3
);;3 4
;;;4 5
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? "
exceptIO??# +
)??+ ,
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA !
(AA! "
NLogAA" &
.AA& '
LogLevelAA' /
.AA/ 0
WarnAA0 4
,AA4 5
$strAA6 Q
,AAQ R
exceptIOAAS [
)AA[ \
;AA\ ]
}BB 
finallyCC 
{DD 
tryEE 
{FF 
ifGG 
(GG 
listenerGG $
!=GG% '
nullGG( ,
)GG, -
{HH 
listenerII $
.II$ %
StopII% )
(II) *
)II* +
;II+ ,
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL &
exceptIOLL' /
)LL/ 0
{MM 
IONN 
.NN 
LoggerNN !
.NN! "
LogNN" %
(NN% &
NLogNN& *
.NN* +
LogLevelNN+ 3
.NN3 4
WarnNN4 8
,NN8 9
$strNN: U
,NNU V
exceptIONNW _
)NN_ `
;NN` a
}OO 
}PP 
}QQ 
}RR 	
elseSS 
{TT 	
passwordWW 
=WW 
nullWW 
;WW 
}XX 	
ifYY 

(YY 
privateTrueYY 
)YY 
{ZZ 	
try[[ 
{\\ 
using^^ 
(^^ 
SqlConnection^^ $

connection^^% /
=^^0 1
new^^2 5
SqlConnection^^6 C
(^^C D
$str^^D z
+^^{ |
$str	^^} Å
+
^^Ç É
$str
^^Ñ ê
+
^^ë í
password
^^ì õ
)
^^õ ú
)
^^ú ù
{__ 

connection`` 
.`` 
Open`` #
(``# $
)``$ %
;``% &
usingaa 
(aa 

SqlCommandaa %
commandaa& -
=aa. /
newaa0 3

SqlCommandaa4 >
(aa> ?
$straa? Y
,aaY Z

connectionaa[ e
)aae f
)aaf g
{bb 
commandcc 
.cc  
ExecuteNonQuerycc  /
(cc/ 0
)cc0 1
;cc1 2
}dd 
}ee 
}ff 
catchgg 
(gg 
SqlExceptiongg 
	exceptSqlgg  )
)gg) *
{hh 
IOii 
.ii 
Loggerii 
.ii 
Logii 
(ii 
NLogii "
.ii" #
LogLevelii# +
.ii+ ,
Warnii, 0
,ii0 1
$strii2 R
,iiR S
	exceptSqliiT ]
)ii] ^
;ii^ _
}jj 
}kk 	
}ll 
privatepp 
voidpp 
GoodG2B1pp 
(pp 
)pp 
{qq 
stringrr 
passwordrr 
;rr 
ifss 

(ss 
privateFalsess 
)ss 
{tt 	
passwordww 
=ww 
nullww 
;ww 
}xx 	
elseyy 
{zz 	
password}} 
=}} 
$str}} &
;}}& '
}~~ 	
if 

( 
privateTrue 
) 
{
ÄÄ 	
try
ÅÅ 
{
ÇÇ 
using
ÑÑ 
(
ÑÑ 
SqlConnection
ÑÑ $

connection
ÑÑ% /
=
ÑÑ0 1
new
ÑÑ2 5
SqlConnection
ÑÑ6 C
(
ÑÑC D
$str
ÑÑD z
+
ÑÑ{ |
$strÑÑ} Å
+ÑÑÇ É
$strÑÑÑ ê
+ÑÑë í
passwordÑÑì õ
)ÑÑõ ú
)ÑÑú ù
{
ÖÖ 

connection
ÜÜ 
.
ÜÜ 
Open
ÜÜ #
(
ÜÜ# $
)
ÜÜ$ %
;
ÜÜ% &
using
áá 
(
áá 

SqlCommand
áá %
command
áá& -
=
áá. /
new
áá0 3

SqlCommand
áá4 >
(
áá> ?
$str
áá? Y
,
ááY Z

connection
áá[ e
)
ááe f
)
ááf g
{
àà 
command
ââ 
.
ââ  
ExecuteNonQuery
ââ  /
(
ââ/ 0
)
ââ0 1
;
ââ1 2
}
ää 
}
ãã 
}
åå 
catch
çç 
(
çç 
SqlException
çç 
	exceptSql
çç  )
)
çç) *
{
éé 
IO
èè 
.
èè 
Logger
èè 
.
èè 
Log
èè 
(
èè 
NLog
èè "
.
èè" #
LogLevel
èè# +
.
èè+ ,
Warn
èè, 0
,
èè0 1
$str
èè2 R
,
èèR S
	exceptSql
èèT ]
)
èè] ^
;
èè^ _
}
êê 
}
ëë 	
}
íí 
private
ïï 
void
ïï 
GoodG2B2
ïï 
(
ïï 
)
ïï 
{
ññ 
string
óó 
password
óó 
;
óó 
if
òò 

(
òò 
privateTrue
òò 
)
òò 
{
ôô 	
password
úú 
=
úú 
$str
úú &
;
úú& '
}
ùù 	
else
ûû 
{
üü 	
password
¢¢ 
=
¢¢ 
null
¢¢ 
;
¢¢ 
}
££ 	
if
§§ 

(
§§ 
privateTrue
§§ 
)
§§ 
{
•• 	
try
¶¶ 
{
ßß 
using
©© 
(
©© 
SqlConnection
©© $

connection
©©% /
=
©©0 1
new
©©2 5
SqlConnection
©©6 C
(
©©C D
$str
©©D z
+
©©{ |
$str©©} Å
+©©Ç É
$str©©Ñ ê
+©©ë í
password©©ì õ
)©©õ ú
)©©ú ù
{
™™ 

connection
´´ 
.
´´ 
Open
´´ #
(
´´# $
)
´´$ %
;
´´% &
using
¨¨ 
(
¨¨ 

SqlCommand
¨¨ %
command
¨¨& -
=
¨¨. /
new
¨¨0 3

SqlCommand
¨¨4 >
(
¨¨> ?
$str
¨¨? Y
,
¨¨Y Z

connection
¨¨[ e
)
¨¨e f
)
¨¨f g
{
≠≠ 
command
ÆÆ 
.
ÆÆ  
ExecuteNonQuery
ÆÆ  /
(
ÆÆ/ 0
)
ÆÆ0 1
;
ÆÆ1 2
}
ØØ 
}
∞∞ 
}
±± 
catch
≤≤ 
(
≤≤ 
SqlException
≤≤ 
	exceptSql
≤≤  )
)
≤≤) *
{
≥≥ 
IO
¥¥ 
.
¥¥ 
Logger
¥¥ 
.
¥¥ 
Log
¥¥ 
(
¥¥ 
NLog
¥¥ "
.
¥¥" #
LogLevel
¥¥# +
.
¥¥+ ,
Warn
¥¥, 0
,
¥¥0 1
$str
¥¥2 R
,
¥¥R S
	exceptSql
¥¥T ]
)
¥¥] ^
;
¥¥^ _
}
µµ 
}
∂∂ 	
}
∑∑ 
private
∫∫ 
void
∫∫ 
GoodB2G1
∫∫ 
(
∫∫ 
)
∫∫ 
{
ªª 
string
ºº 
password
ºº 
;
ºº 
if
ΩΩ 

(
ΩΩ 
privateTrue
ΩΩ 
)
ΩΩ 
{
ææ 	
password
øø 
=
øø 
$str
øø 
;
øø 
{
¡¡ 
TcpListener
¬¬ 
listener
¬¬ $
=
¬¬% &
null
¬¬' +
;
¬¬+ ,
try
√√ 
{
ƒƒ 
listener
∆∆ 
=
∆∆ 
new
∆∆ "
TcpListener
∆∆# .
(
∆∆. /
	IPAddress
∆∆/ 8
.
∆∆8 9
Parse
∆∆9 >
(
∆∆> ?
$str
∆∆? K
)
∆∆K L
,
∆∆L M
$num
∆∆N S
)
∆∆S T
;
∆∆T U
listener
«« 
.
«« 
Start
«« "
(
««" #
)
««# $
;
««$ %
using
»» 
(
»» 
	TcpClient
»» $
tcpConn
»»% ,
=
»»- .
listener
»»/ 7
.
»»7 8
AcceptTcpClient
»»8 G
(
»»G H
)
»»H I
)
»»I J
{
…… 
using
   
(
   
StreamReader
   +
sr
  , .
=
  / 0
new
  1 4
StreamReader
  5 A
(
  A B
Console
  B I
.
  I J
OpenStandardInput
  J [
(
  [ \
)
  \ ]
)
  ] ^
)
  ^ _
{
ÀÀ 
password
ÕÕ $
=
ÕÕ% &
sr
ÕÕ' )
.
ÕÕ) *
ReadLine
ÕÕ* 2
(
ÕÕ2 3
)
ÕÕ3 4
;
ÕÕ4 5
}
ŒŒ 
}
œœ 
}
–– 
catch
—— 
(
—— 
IOException
—— "
exceptIO
——# +
)
——+ ,
{
““ 
IO
”” 
.
”” 
Logger
”” 
.
”” 
Log
”” !
(
””! "
NLog
””" &
.
””& '
LogLevel
””' /
.
””/ 0
Warn
””0 4
,
””4 5
$str
””6 Q
,
””Q R
exceptIO
””S [
)
””[ \
;
””\ ]
}
‘‘ 
finally
’’ 
{
÷÷ 
try
◊◊ 
{
ÿÿ 
if
ŸŸ 
(
ŸŸ 
listener
ŸŸ $
!=
ŸŸ% '
null
ŸŸ( ,
)
ŸŸ, -
{
⁄⁄ 
listener
€€ $
.
€€$ %
Stop
€€% )
(
€€) *
)
€€* +
;
€€+ ,
}
‹‹ 
}
›› 
catch
ﬁﬁ 
(
ﬁﬁ 
IOException
ﬁﬁ &
exceptIO
ﬁﬁ' /
)
ﬁﬁ/ 0
{
ﬂﬂ 
IO
‡‡ 
.
‡‡ 
Logger
‡‡ !
.
‡‡! "
Log
‡‡" %
(
‡‡% &
NLog
‡‡& *
.
‡‡* +
LogLevel
‡‡+ 3
.
‡‡3 4
Warn
‡‡4 8
,
‡‡8 9
$str
‡‡: U
,
‡‡U V
exceptIO
‡‡W _
)
‡‡_ `
;
‡‡` a
}
·· 
}
‚‚ 
}
„„ 
}
‰‰ 	
else
ÂÂ 
{
ÊÊ 	
password
ÈÈ 
=
ÈÈ 
null
ÈÈ 
;
ÈÈ 
}
ÍÍ 	
if
ÎÎ 

(
ÎÎ 
privateFalse
ÎÎ 
)
ÎÎ 
{
ÏÏ 	
IO
ÓÓ 
.
ÓÓ 
	WriteLine
ÓÓ 
(
ÓÓ 
$str
ÓÓ /
)
ÓÓ/ 0
;
ÓÓ0 1
}
ÔÔ 	
else
 
{
ÒÒ 	
if
ÚÚ 
(
ÚÚ 
password
ÚÚ 
!=
ÚÚ 
null
ÚÚ  
)
ÚÚ  !
{
ÛÛ 
{
ıı 
using
ˆˆ 
(
ˆˆ &
AesCryptoServiceProvider
ˆˆ 3
aesAlg
ˆˆ4 :
=
ˆˆ; <
new
ˆˆ= @&
AesCryptoServiceProvider
ˆˆA Y
(
ˆˆY Z
)
ˆˆZ [
)
ˆˆ[ \
{
˜˜ 
aesAlg
¯¯ 
.
¯¯ 
Padding
¯¯ &
=
¯¯' (
PaddingMode
¯¯) 4
.
¯¯4 5
None
¯¯5 9
;
¯¯9 :
aesAlg
˘˘ 
.
˘˘ 
Key
˘˘ "
=
˘˘# $
Encoding
˘˘% -
.
˘˘- .
UTF8
˘˘. 2
.
˘˘2 3
GetBytes
˘˘3 ;
(
˘˘; <
$str
˘˘< N
)
˘˘N O
;
˘˘O P
ICryptoTransform
˚˚ (
	decryptor
˚˚) 2
=
˚˚3 4
aesAlg
˚˚5 ;
.
˚˚; <
CreateDecryptor
˚˚< K
(
˚˚K L
aesAlg
˚˚L R
.
˚˚R S
Key
˚˚S V
,
˚˚V W
aesAlg
˚˚X ^
.
˚˚^ _
IV
˚˚_ a
)
˚˚a b
;
˚˚b c
using
˝˝ 
(
˝˝ 
MemoryStream
˝˝ +
	msDecrypt
˝˝, 5
=
˝˝6 7
new
˝˝8 ;
MemoryStream
˝˝< H
(
˝˝H I
Encoding
˝˝I Q
.
˝˝Q R
UTF8
˝˝R V
.
˝˝V W
GetBytes
˝˝W _
(
˝˝_ `
password
˝˝` h
)
˝˝h i
)
˝˝i j
)
˝˝j k
{
˛˛ 
using
ˇˇ !
(
ˇˇ" #
CryptoStream
ˇˇ# /
	csDecrypt
ˇˇ0 9
=
ˇˇ: ;
new
ˇˇ< ?
CryptoStream
ˇˇ@ L
(
ˇˇL M
	msDecrypt
ˇˇM V
,
ˇˇV W
	decryptor
ˇˇX a
,
ˇˇa b
CryptoStreamMode
ˇˇc s
.
ˇˇs t
Read
ˇˇt x
)
ˇˇx y
)
ˇˇy z
{
ÄÄ 
using
ÅÅ  %
(
ÅÅ& '
StreamReader
ÅÅ' 3
	srDecrypt
ÅÅ4 =
=
ÅÅ> ?
new
ÅÅ@ C
StreamReader
ÅÅD P
(
ÅÅP Q
	csDecrypt
ÅÅQ Z
)
ÅÅZ [
)
ÅÅ[ \
{
ÇÇ  !
password
ÖÖ$ ,
=
ÖÖ- .
	srDecrypt
ÖÖ/ 8
.
ÖÖ8 9
	ReadToEnd
ÖÖ9 B
(
ÖÖB C
)
ÖÖC D
;
ÖÖD E
}
ÜÜ  !
}
áá 
}
àà 
}
ââ 
}
ää 
try
ãã 
{
åå 
using
éé 
(
éé 
SqlConnection
éé (

connection
éé) 3
=
éé4 5
new
éé6 9
SqlConnection
éé: G
(
ééG H
$str
ééH ~
+éé Ä
$strééÅ Ö
+ééÜ á
$strééà î
+ééï ñ
passwordééó ü
)ééü †
)éé† °
{
èè 

connection
êê "
.
êê" #
Open
êê# '
(
êê' (
)
êê( )
;
êê) *
using
ëë 
(
ëë 

SqlCommand
ëë )
command
ëë* 1
=
ëë2 3
new
ëë4 7

SqlCommand
ëë8 B
(
ëëB C
$str
ëëC ]
,
ëë] ^

connection
ëë_ i
)
ëëi j
)
ëëj k
{
íí 
command
ìì #
.
ìì# $
ExecuteNonQuery
ìì$ 3
(
ìì3 4
)
ìì4 5
;
ìì5 6
}
îî 
}
ïï 
}
ññ 
catch
óó 
(
óó 
SqlException
óó #
	exceptSql
óó$ -
)
óó- .
{
òò 
IO
ôô 
.
ôô 
Logger
ôô 
.
ôô 
Log
ôô !
(
ôô! "
NLog
ôô" &
.
ôô& '
LogLevel
ôô' /
.
ôô/ 0
Warn
ôô0 4
,
ôô4 5
$str
ôô6 V
,
ôôV W
	exceptSql
ôôX a
)
ôôa b
;
ôôb c
}
öö 
}
õõ 
}
úú 	
}
ùù 
private
†† 
void
†† 
GoodB2G2
†† 
(
†† 
)
†† 
{
°° 
string
¢¢ 
password
¢¢ 
;
¢¢ 
if
££ 

(
££ 
privateTrue
££ 
)
££ 
{
§§ 	
password
•• 
=
•• 
$str
•• 
;
•• 
{
ßß 
TcpListener
®® 
listener
®® $
=
®®% &
null
®®' +
;
®®+ ,
try
©© 
{
™™ 
listener
¨¨ 
=
¨¨ 
new
¨¨ "
TcpListener
¨¨# .
(
¨¨. /
	IPAddress
¨¨/ 8
.
¨¨8 9
Parse
¨¨9 >
(
¨¨> ?
$str
¨¨? K
)
¨¨K L
,
¨¨L M
$num
¨¨N S
)
¨¨S T
;
¨¨T U
listener
≠≠ 
.
≠≠ 
Start
≠≠ "
(
≠≠" #
)
≠≠# $
;
≠≠$ %
using
ÆÆ 
(
ÆÆ 
	TcpClient
ÆÆ $
tcpConn
ÆÆ% ,
=
ÆÆ- .
listener
ÆÆ/ 7
.
ÆÆ7 8
AcceptTcpClient
ÆÆ8 G
(
ÆÆG H
)
ÆÆH I
)
ÆÆI J
{
ØØ 
using
∞∞ 
(
∞∞ 
StreamReader
∞∞ +
sr
∞∞, .
=
∞∞/ 0
new
∞∞1 4
StreamReader
∞∞5 A
(
∞∞A B
Console
∞∞B I
.
∞∞I J
OpenStandardInput
∞∞J [
(
∞∞[ \
)
∞∞\ ]
)
∞∞] ^
)
∞∞^ _
{
±± 
password
≥≥ $
=
≥≥% &
sr
≥≥' )
.
≥≥) *
ReadLine
≥≥* 2
(
≥≥2 3
)
≥≥3 4
;
≥≥4 5
}
¥¥ 
}
µµ 
}
∂∂ 
catch
∑∑ 
(
∑∑ 
IOException
∑∑ "
exceptIO
∑∑# +
)
∑∑+ ,
{
∏∏ 
IO
ππ 
.
ππ 
Logger
ππ 
.
ππ 
Log
ππ !
(
ππ! "
NLog
ππ" &
.
ππ& '
LogLevel
ππ' /
.
ππ/ 0
Warn
ππ0 4
,
ππ4 5
$str
ππ6 Q
,
ππQ R
exceptIO
ππS [
)
ππ[ \
;
ππ\ ]
}
∫∫ 
finally
ªª 
{
ºº 
try
ΩΩ 
{
ææ 
if
øø 
(
øø 
listener
øø $
!=
øø% '
null
øø( ,
)
øø, -
{
¿¿ 
listener
¡¡ $
.
¡¡$ %
Stop
¡¡% )
(
¡¡) *
)
¡¡* +
;
¡¡+ ,
}
¬¬ 
}
√√ 
catch
ƒƒ 
(
ƒƒ 
IOException
ƒƒ &
exceptIO
ƒƒ' /
)
ƒƒ/ 0
{
≈≈ 
IO
∆∆ 
.
∆∆ 
Logger
∆∆ !
.
∆∆! "
Log
∆∆" %
(
∆∆% &
NLog
∆∆& *
.
∆∆* +
LogLevel
∆∆+ 3
.
∆∆3 4
Warn
∆∆4 8
,
∆∆8 9
$str
∆∆: U
,
∆∆U V
exceptIO
∆∆W _
)
∆∆_ `
;
∆∆` a
}
«« 
}
»» 
}
…… 
}
   	
else
ÀÀ 
{
ÃÃ 	
password
œœ 
=
œœ 
null
œœ 
;
œœ 
}
–– 	
if
—— 

(
—— 
privateTrue
—— 
)
—— 
{
““ 	
if
”” 
(
”” 
password
”” 
!=
”” 
null
””  
)
””  !
{
‘‘ 
{
÷÷ 
using
◊◊ 
(
◊◊ &
AesCryptoServiceProvider
◊◊ 3
aesAlg
◊◊4 :
=
◊◊; <
new
◊◊= @&
AesCryptoServiceProvider
◊◊A Y
(
◊◊Y Z
)
◊◊Z [
)
◊◊[ \
{
ÿÿ 
aesAlg
ŸŸ 
.
ŸŸ 
Padding
ŸŸ &
=
ŸŸ' (
PaddingMode
ŸŸ) 4
.
ŸŸ4 5
None
ŸŸ5 9
;
ŸŸ9 :
aesAlg
⁄⁄ 
.
⁄⁄ 
Key
⁄⁄ "
=
⁄⁄# $
Encoding
⁄⁄% -
.
⁄⁄- .
UTF8
⁄⁄. 2
.
⁄⁄2 3
GetBytes
⁄⁄3 ;
(
⁄⁄; <
$str
⁄⁄< N
)
⁄⁄N O
;
⁄⁄O P
ICryptoTransform
‹‹ (
	decryptor
‹‹) 2
=
‹‹3 4
aesAlg
‹‹5 ;
.
‹‹; <
CreateDecryptor
‹‹< K
(
‹‹K L
aesAlg
‹‹L R
.
‹‹R S
Key
‹‹S V
,
‹‹V W
aesAlg
‹‹X ^
.
‹‹^ _
IV
‹‹_ a
)
‹‹a b
;
‹‹b c
using
ﬁﬁ 
(
ﬁﬁ 
MemoryStream
ﬁﬁ +
	msDecrypt
ﬁﬁ, 5
=
ﬁﬁ6 7
new
ﬁﬁ8 ;
MemoryStream
ﬁﬁ< H
(
ﬁﬁH I
Encoding
ﬁﬁI Q
.
ﬁﬁQ R
UTF8
ﬁﬁR V
.
ﬁﬁV W
GetBytes
ﬁﬁW _
(
ﬁﬁ_ `
password
ﬁﬁ` h
)
ﬁﬁh i
)
ﬁﬁi j
)
ﬁﬁj k
{
ﬂﬂ 
using
‡‡ !
(
‡‡" #
CryptoStream
‡‡# /
	csDecrypt
‡‡0 9
=
‡‡: ;
new
‡‡< ?
CryptoStream
‡‡@ L
(
‡‡L M
	msDecrypt
‡‡M V
,
‡‡V W
	decryptor
‡‡X a
,
‡‡a b
CryptoStreamMode
‡‡c s
.
‡‡s t
Read
‡‡t x
)
‡‡x y
)
‡‡y z
{
·· 
using
‚‚  %
(
‚‚& '
StreamReader
‚‚' 3
	srDecrypt
‚‚4 =
=
‚‚> ?
new
‚‚@ C
StreamReader
‚‚D P
(
‚‚P Q
	csDecrypt
‚‚Q Z
)
‚‚Z [
)
‚‚[ \
{
„„  !
password
ÊÊ$ ,
=
ÊÊ- .
	srDecrypt
ÊÊ/ 8
.
ÊÊ8 9
	ReadToEnd
ÊÊ9 B
(
ÊÊB C
)
ÊÊC D
;
ÊÊD E
}
ÁÁ  !
}
ËË 
}
ÈÈ 
}
ÍÍ 
}
ÎÎ 
try
ÏÏ 
{
ÌÌ 
using
ÔÔ 
(
ÔÔ 
SqlConnection
ÔÔ (

connection
ÔÔ) 3
=
ÔÔ4 5
new
ÔÔ6 9
SqlConnection
ÔÔ: G
(
ÔÔG H
$str
ÔÔH ~
+ÔÔ Ä
$strÔÔÅ Ö
+ÔÔÜ á
$strÔÔà î
+ÔÔï ñ
passwordÔÔó ü
)ÔÔü †
)ÔÔ† °
{
 

connection
ÒÒ "
.
ÒÒ" #
Open
ÒÒ# '
(
ÒÒ' (
)
ÒÒ( )
;
ÒÒ) *
using
ÚÚ 
(
ÚÚ 

SqlCommand
ÚÚ )
command
ÚÚ* 1
=
ÚÚ2 3
new
ÚÚ4 7

SqlCommand
ÚÚ8 B
(
ÚÚB C
$str
ÚÚC ]
,
ÚÚ] ^

connection
ÚÚ_ i
)
ÚÚi j
)
ÚÚj k
{
ÛÛ 
command
ÙÙ #
.
ÙÙ# $
ExecuteNonQuery
ÙÙ$ 3
(
ÙÙ3 4
)
ÙÙ4 5
;
ÙÙ5 6
}
ıı 
}
ˆˆ 
}
˜˜ 
catch
¯¯ 
(
¯¯ 
SqlException
¯¯ #
	exceptSql
¯¯$ -
)
¯¯- .
{
˘˘ 
IO
˙˙ 
.
˙˙ 
Logger
˙˙ 
.
˙˙ 
Log
˙˙ !
(
˙˙! "
NLog
˙˙" &
.
˙˙& '
LogLevel
˙˙' /
.
˙˙/ 0
Warn
˙˙0 4
,
˙˙4 5
$str
˙˙6 V
,
˙˙V W
	exceptSql
˙˙X a
)
˙˙a b
;
˙˙b c
}
˚˚ 
}
¸¸ 
}
˝˝ 	
}
˛˛ 
public
ÄÄ 

override
ÄÄ 
void
ÄÄ 
Good
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
GoodG2B1
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
GoodG2B2
ÉÉ 
(
ÉÉ 
)
ÉÉ 
;
ÉÉ 
GoodB2G1
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
GoodB2G2
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
}
ÜÜ 
}àà 
}ââ æΩ
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_06.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_06 E
:F G
AbstractTestCaseH X
{   
private%% 
const%% 
int%% 
PRIVATE_CONST_FIVE%% (
=%%) *
$num%%+ ,
;%%, -
public'' 

override'' 
void'' 
Bad'' 
('' 
)'' 
{(( 
string)) 
password)) 
;)) 
if** 

(** 
PRIVATE_CONST_FIVE** 
==**  
$num**  !
)**! "
{++ 	
password,, 
=,, 
$str,, 
;,, 
{.. 
TcpListener// 
listener// $
=//% &
null//' +
;//+ ,
try00 
{11 
listener33 
=33 
new33 "
TcpListener33# .
(33. /
	IPAddress33/ 8
.338 9
Parse339 >
(33> ?
$str33? K
)33K L
,33L M
$num33N S
)33S T
;33T U
listener44 
.44 
Start44 "
(44" #
)44# $
;44$ %
using55 
(55 
	TcpClient55 $
tcpConn55% ,
=55- .
listener55/ 7
.557 8
AcceptTcpClient558 G
(55G H
)55H I
)55I J
{66 
using77 
(77 
StreamReader77 +
sr77, .
=77/ 0
new771 4
StreamReader775 A
(77A B
Console77B I
.77I J
OpenStandardInput77J [
(77[ \
)77\ ]
)77] ^
)77^ _
{88 
password:: $
=::% &
sr::' )
.::) *
ReadLine::* 2
(::2 3
)::3 4
;::4 5
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
$str@@6 Q
,@@Q R
exceptIO@@S [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryDD 
{EE 
ifFF 
(FF 
listenerFF $
!=FF% '
nullFF( ,
)FF, -
{GG 
listenerHH $
.HH$ %
StopHH% )
(HH) *
)HH* +
;HH+ ,
}II 
}JJ 
catchKK 
(KK 
IOExceptionKK &
exceptIOKK' /
)KK/ 0
{LL 
IOMM 
.MM 
LoggerMM !
.MM! "
LogMM" %
(MM% &
NLogMM& *
.MM* +
LogLevelMM+ 3
.MM3 4
WarnMM4 8
,MM8 9
$strMM: U
,MMU V
exceptIOMMW _
)MM_ `
;MM` a
}NN 
}OO 
}PP 
}QQ 	
elseRR 
{SS 	
passwordVV 
=VV 
nullVV 
;VV 
}WW 	
ifXX 

(XX 
PRIVATE_CONST_FIVEXX 
==XX  
$numXX  !
)XX! "
{YY 	
tryZZ 
{[[ 
using]] 
(]] 
SqlConnection]] $

connection]]% /
=]]0 1
new]]2 5
SqlConnection]]6 C
(]]C D
$str]]D z
+]]{ |
$str	]]} Å
+
]]Ç É
$str
]]Ñ ê
+
]]ë í
password
]]ì õ
)
]]õ ú
)
]]ú ù
{^^ 

connection__ 
.__ 
Open__ #
(__# $
)__$ %
;__% &
using`` 
(`` 

SqlCommand`` %
command``& -
=``. /
new``0 3

SqlCommand``4 >
(``> ?
$str``? Y
,``Y Z

connection``[ e
)``e f
)``f g
{aa 
commandbb 
.bb  
ExecuteNonQuerybb  /
(bb/ 0
)bb0 1
;bb1 2
}cc 
}dd 
}ee 
catchff 
(ff 
SqlExceptionff 
	exceptSqlff  )
)ff) *
{gg 
IOhh 
.hh 
Loggerhh 
.hh 
Loghh 
(hh 
NLoghh "
.hh" #
LogLevelhh# +
.hh+ ,
Warnhh, 0
,hh0 1
$strhh2 R
,hhR S
	exceptSqlhhT ]
)hh] ^
;hh^ _
}ii 
}jj 	
}kk 
privateoo 
voidoo 
GoodG2B1oo 
(oo 
)oo 
{pp 
stringqq 
passwordqq 
;qq 
ifrr 

(rr 
PRIVATE_CONST_FIVErr 
!=rr  
$numrr  !
)rr! "
{ss 	
passwordvv 
=vv 
nullvv 
;vv 
}ww 	
elsexx 
{yy 	
password|| 
=|| 
$str|| &
;||& '
}}} 	
if~~ 

(~~ 
PRIVATE_CONST_FIVE~~ 
==~~  
$num~~  !
)~~! "
{ 	
try
ÄÄ 
{
ÅÅ 
using
ÉÉ 
(
ÉÉ 
SqlConnection
ÉÉ $

connection
ÉÉ% /
=
ÉÉ0 1
new
ÉÉ2 5
SqlConnection
ÉÉ6 C
(
ÉÉC D
$str
ÉÉD z
+
ÉÉ{ |
$strÉÉ} Å
+ÉÉÇ É
$strÉÉÑ ê
+ÉÉë í
passwordÉÉì õ
)ÉÉõ ú
)ÉÉú ù
{
ÑÑ 

connection
ÖÖ 
.
ÖÖ 
Open
ÖÖ #
(
ÖÖ# $
)
ÖÖ$ %
;
ÖÖ% &
using
ÜÜ 
(
ÜÜ 

SqlCommand
ÜÜ %
command
ÜÜ& -
=
ÜÜ. /
new
ÜÜ0 3

SqlCommand
ÜÜ4 >
(
ÜÜ> ?
$str
ÜÜ? Y
,
ÜÜY Z

connection
ÜÜ[ e
)
ÜÜe f
)
ÜÜf g
{
áá 
command
àà 
.
àà  
ExecuteNonQuery
àà  /
(
àà/ 0
)
àà0 1
;
àà1 2
}
ââ 
}
ää 
}
ãã 
catch
åå 
(
åå 
SqlException
åå 
	exceptSql
åå  )
)
åå) *
{
çç 
IO
éé 
.
éé 
Logger
éé 
.
éé 
Log
éé 
(
éé 
NLog
éé "
.
éé" #
LogLevel
éé# +
.
éé+ ,
Warn
éé, 0
,
éé0 1
$str
éé2 R
,
ééR S
	exceptSql
ééT ]
)
éé] ^
;
éé^ _
}
èè 
}
êê 	
}
ëë 
private
îî 
void
îî 
GoodG2B2
îî 
(
îî 
)
îî 
{
ïï 
string
ññ 
password
ññ 
;
ññ 
if
óó 

(
óó  
PRIVATE_CONST_FIVE
óó 
==
óó  
$num
óó  !
)
óó! "
{
òò 	
password
õõ 
=
õõ 
$str
õõ &
;
õõ& '
}
úú 	
else
ùù 
{
ûû 	
password
°° 
=
°° 
null
°° 
;
°° 
}
¢¢ 	
if
££ 

(
££  
PRIVATE_CONST_FIVE
££ 
==
££  
$num
££  !
)
££! "
{
§§ 	
try
•• 
{
¶¶ 
using
®® 
(
®® 
SqlConnection
®® $

connection
®®% /
=
®®0 1
new
®®2 5
SqlConnection
®®6 C
(
®®C D
$str
®®D z
+
®®{ |
$str®®} Å
+®®Ç É
$str®®Ñ ê
+®®ë í
password®®ì õ
)®®õ ú
)®®ú ù
{
©© 

connection
™™ 
.
™™ 
Open
™™ #
(
™™# $
)
™™$ %
;
™™% &
using
´´ 
(
´´ 

SqlCommand
´´ %
command
´´& -
=
´´. /
new
´´0 3

SqlCommand
´´4 >
(
´´> ?
$str
´´? Y
,
´´Y Z

connection
´´[ e
)
´´e f
)
´´f g
{
¨¨ 
command
≠≠ 
.
≠≠  
ExecuteNonQuery
≠≠  /
(
≠≠/ 0
)
≠≠0 1
;
≠≠1 2
}
ÆÆ 
}
ØØ 
}
∞∞ 
catch
±± 
(
±± 
SqlException
±± 
	exceptSql
±±  )
)
±±) *
{
≤≤ 
IO
≥≥ 
.
≥≥ 
Logger
≥≥ 
.
≥≥ 
Log
≥≥ 
(
≥≥ 
NLog
≥≥ "
.
≥≥" #
LogLevel
≥≥# +
.
≥≥+ ,
Warn
≥≥, 0
,
≥≥0 1
$str
≥≥2 R
,
≥≥R S
	exceptSql
≥≥T ]
)
≥≥] ^
;
≥≥^ _
}
¥¥ 
}
µµ 	
}
∂∂ 
private
ππ 
void
ππ 
GoodB2G1
ππ 
(
ππ 
)
ππ 
{
∫∫ 
string
ªª 
password
ªª 
;
ªª 
if
ºº 

(
ºº  
PRIVATE_CONST_FIVE
ºº 
==
ºº  
$num
ºº  !
)
ºº! "
{
ΩΩ 	
password
ææ 
=
ææ 
$str
ææ 
;
ææ 
{
¿¿ 
TcpListener
¡¡ 
listener
¡¡ $
=
¡¡% &
null
¡¡' +
;
¡¡+ ,
try
¬¬ 
{
√√ 
listener
≈≈ 
=
≈≈ 
new
≈≈ "
TcpListener
≈≈# .
(
≈≈. /
	IPAddress
≈≈/ 8
.
≈≈8 9
Parse
≈≈9 >
(
≈≈> ?
$str
≈≈? K
)
≈≈K L
,
≈≈L M
$num
≈≈N S
)
≈≈S T
;
≈≈T U
listener
∆∆ 
.
∆∆ 
Start
∆∆ "
(
∆∆" #
)
∆∆# $
;
∆∆$ %
using
«« 
(
«« 
	TcpClient
«« $
tcpConn
««% ,
=
««- .
listener
««/ 7
.
««7 8
AcceptTcpClient
««8 G
(
««G H
)
««H I
)
««I J
{
»» 
using
…… 
(
…… 
StreamReader
…… +
sr
……, .
=
……/ 0
new
……1 4
StreamReader
……5 A
(
……A B
Console
……B I
.
……I J
OpenStandardInput
……J [
(
……[ \
)
……\ ]
)
……] ^
)
……^ _
{
   
password
ÃÃ $
=
ÃÃ% &
sr
ÃÃ' )
.
ÃÃ) *
ReadLine
ÃÃ* 2
(
ÃÃ2 3
)
ÃÃ3 4
;
ÃÃ4 5
}
ÕÕ 
}
ŒŒ 
}
œœ 
catch
–– 
(
–– 
IOException
–– "
exceptIO
––# +
)
––+ ,
{
—— 
IO
““ 
.
““ 
Logger
““ 
.
““ 
Log
““ !
(
““! "
NLog
““" &
.
““& '
LogLevel
““' /
.
““/ 0
Warn
““0 4
,
““4 5
$str
““6 Q
,
““Q R
exceptIO
““S [
)
““[ \
;
““\ ]
}
”” 
finally
‘‘ 
{
’’ 
try
÷÷ 
{
◊◊ 
if
ÿÿ 
(
ÿÿ 
listener
ÿÿ $
!=
ÿÿ% '
null
ÿÿ( ,
)
ÿÿ, -
{
ŸŸ 
listener
⁄⁄ $
.
⁄⁄$ %
Stop
⁄⁄% )
(
⁄⁄) *
)
⁄⁄* +
;
⁄⁄+ ,
}
€€ 
}
‹‹ 
catch
›› 
(
›› 
IOException
›› &
exceptIO
››' /
)
››/ 0
{
ﬁﬁ 
IO
ﬂﬂ 
.
ﬂﬂ 
Logger
ﬂﬂ !
.
ﬂﬂ! "
Log
ﬂﬂ" %
(
ﬂﬂ% &
NLog
ﬂﬂ& *
.
ﬂﬂ* +
LogLevel
ﬂﬂ+ 3
.
ﬂﬂ3 4
Warn
ﬂﬂ4 8
,
ﬂﬂ8 9
$str
ﬂﬂ: U
,
ﬂﬂU V
exceptIO
ﬂﬂW _
)
ﬂﬂ_ `
;
ﬂﬂ` a
}
‡‡ 
}
·· 
}
‚‚ 
}
„„ 	
else
‰‰ 
{
ÂÂ 	
password
ËË 
=
ËË 
null
ËË 
;
ËË 
}
ÈÈ 	
if
ÍÍ 

(
ÍÍ  
PRIVATE_CONST_FIVE
ÍÍ 
!=
ÍÍ  
$num
ÍÍ  !
)
ÍÍ! "
{
ÎÎ 	
IO
ÌÌ 
.
ÌÌ 
	WriteLine
ÌÌ 
(
ÌÌ 
$str
ÌÌ /
)
ÌÌ/ 0
;
ÌÌ0 1
}
ÓÓ 	
else
ÔÔ 
{
 	
if
ÒÒ 
(
ÒÒ 
password
ÒÒ 
!=
ÒÒ 
null
ÒÒ  
)
ÒÒ  !
{
ÚÚ 
{
ÙÙ 
using
ıı 
(
ıı &
AesCryptoServiceProvider
ıı 3
aesAlg
ıı4 :
=
ıı; <
new
ıı= @&
AesCryptoServiceProvider
ııA Y
(
ııY Z
)
ııZ [
)
ıı[ \
{
ˆˆ 
aesAlg
˜˜ 
.
˜˜ 
Padding
˜˜ &
=
˜˜' (
PaddingMode
˜˜) 4
.
˜˜4 5
None
˜˜5 9
;
˜˜9 :
aesAlg
¯¯ 
.
¯¯ 
Key
¯¯ "
=
¯¯# $
Encoding
¯¯% -
.
¯¯- .
UTF8
¯¯. 2
.
¯¯2 3
GetBytes
¯¯3 ;
(
¯¯; <
$str
¯¯< N
)
¯¯N O
;
¯¯O P
ICryptoTransform
˙˙ (
	decryptor
˙˙) 2
=
˙˙3 4
aesAlg
˙˙5 ;
.
˙˙; <
CreateDecryptor
˙˙< K
(
˙˙K L
aesAlg
˙˙L R
.
˙˙R S
Key
˙˙S V
,
˙˙V W
aesAlg
˙˙X ^
.
˙˙^ _
IV
˙˙_ a
)
˙˙a b
;
˙˙b c
using
¸¸ 
(
¸¸ 
MemoryStream
¸¸ +
	msDecrypt
¸¸, 5
=
¸¸6 7
new
¸¸8 ;
MemoryStream
¸¸< H
(
¸¸H I
Encoding
¸¸I Q
.
¸¸Q R
UTF8
¸¸R V
.
¸¸V W
GetBytes
¸¸W _
(
¸¸_ `
password
¸¸` h
)
¸¸h i
)
¸¸i j
)
¸¸j k
{
˝˝ 
using
˛˛ !
(
˛˛" #
CryptoStream
˛˛# /
	csDecrypt
˛˛0 9
=
˛˛: ;
new
˛˛< ?
CryptoStream
˛˛@ L
(
˛˛L M
	msDecrypt
˛˛M V
,
˛˛V W
	decryptor
˛˛X a
,
˛˛a b
CryptoStreamMode
˛˛c s
.
˛˛s t
Read
˛˛t x
)
˛˛x y
)
˛˛y z
{
ˇˇ 
using
ÄÄ  %
(
ÄÄ& '
StreamReader
ÄÄ' 3
	srDecrypt
ÄÄ4 =
=
ÄÄ> ?
new
ÄÄ@ C
StreamReader
ÄÄD P
(
ÄÄP Q
	csDecrypt
ÄÄQ Z
)
ÄÄZ [
)
ÄÄ[ \
{
ÅÅ  !
password
ÑÑ$ ,
=
ÑÑ- .
	srDecrypt
ÑÑ/ 8
.
ÑÑ8 9
	ReadToEnd
ÑÑ9 B
(
ÑÑB C
)
ÑÑC D
;
ÑÑD E
}
ÖÖ  !
}
ÜÜ 
}
áá 
}
àà 
}
ââ 
try
ää 
{
ãã 
using
çç 
(
çç 
SqlConnection
çç (

connection
çç) 3
=
çç4 5
new
çç6 9
SqlConnection
çç: G
(
ççG H
$str
ççH ~
+çç Ä
$strççÅ Ö
+ççÜ á
$strççà î
+ççï ñ
passwordççó ü
)ççü †
)çç† °
{
éé 

connection
èè "
.
èè" #
Open
èè# '
(
èè' (
)
èè( )
;
èè) *
using
êê 
(
êê 

SqlCommand
êê )
command
êê* 1
=
êê2 3
new
êê4 7

SqlCommand
êê8 B
(
êêB C
$str
êêC ]
,
êê] ^

connection
êê_ i
)
êêi j
)
êêj k
{
ëë 
command
íí #
.
íí# $
ExecuteNonQuery
íí$ 3
(
íí3 4
)
íí4 5
;
íí5 6
}
ìì 
}
îî 
}
ïï 
catch
ññ 
(
ññ 
SqlException
ññ #
	exceptSql
ññ$ -
)
ññ- .
{
óó 
IO
òò 
.
òò 
Logger
òò 
.
òò 
Log
òò !
(
òò! "
NLog
òò" &
.
òò& '
LogLevel
òò' /
.
òò/ 0
Warn
òò0 4
,
òò4 5
$str
òò6 V
,
òòV W
	exceptSql
òòX a
)
òòa b
;
òòb c
}
ôô 
}
öö 
}
õõ 	
}
úú 
private
üü 
void
üü 
GoodB2G2
üü 
(
üü 
)
üü 
{
†† 
string
°° 
password
°° 
;
°° 
if
¢¢ 

(
¢¢  
PRIVATE_CONST_FIVE
¢¢ 
==
¢¢  
$num
¢¢  !
)
¢¢! "
{
££ 	
password
§§ 
=
§§ 
$str
§§ 
;
§§ 
{
¶¶ 
TcpListener
ßß 
listener
ßß $
=
ßß% &
null
ßß' +
;
ßß+ ,
try
®® 
{
©© 
listener
´´ 
=
´´ 
new
´´ "
TcpListener
´´# .
(
´´. /
	IPAddress
´´/ 8
.
´´8 9
Parse
´´9 >
(
´´> ?
$str
´´? K
)
´´K L
,
´´L M
$num
´´N S
)
´´S T
;
´´T U
listener
¨¨ 
.
¨¨ 
Start
¨¨ "
(
¨¨" #
)
¨¨# $
;
¨¨$ %
using
≠≠ 
(
≠≠ 
	TcpClient
≠≠ $
tcpConn
≠≠% ,
=
≠≠- .
listener
≠≠/ 7
.
≠≠7 8
AcceptTcpClient
≠≠8 G
(
≠≠G H
)
≠≠H I
)
≠≠I J
{
ÆÆ 
using
ØØ 
(
ØØ 
StreamReader
ØØ +
sr
ØØ, .
=
ØØ/ 0
new
ØØ1 4
StreamReader
ØØ5 A
(
ØØA B
Console
ØØB I
.
ØØI J
OpenStandardInput
ØØJ [
(
ØØ[ \
)
ØØ\ ]
)
ØØ] ^
)
ØØ^ _
{
∞∞ 
password
≤≤ $
=
≤≤% &
sr
≤≤' )
.
≤≤) *
ReadLine
≤≤* 2
(
≤≤2 3
)
≤≤3 4
;
≤≤4 5
}
≥≥ 
}
¥¥ 
}
µµ 
catch
∂∂ 
(
∂∂ 
IOException
∂∂ "
exceptIO
∂∂# +
)
∂∂+ ,
{
∑∑ 
IO
∏∏ 
.
∏∏ 
Logger
∏∏ 
.
∏∏ 
Log
∏∏ !
(
∏∏! "
NLog
∏∏" &
.
∏∏& '
LogLevel
∏∏' /
.
∏∏/ 0
Warn
∏∏0 4
,
∏∏4 5
$str
∏∏6 Q
,
∏∏Q R
exceptIO
∏∏S [
)
∏∏[ \
;
∏∏\ ]
}
ππ 
finally
∫∫ 
{
ªª 
try
ºº 
{
ΩΩ 
if
ææ 
(
ææ 
listener
ææ $
!=
ææ% '
null
ææ( ,
)
ææ, -
{
øø 
listener
¿¿ $
.
¿¿$ %
Stop
¿¿% )
(
¿¿) *
)
¿¿* +
;
¿¿+ ,
}
¡¡ 
}
¬¬ 
catch
√√ 
(
√√ 
IOException
√√ &
exceptIO
√√' /
)
√√/ 0
{
ƒƒ 
IO
≈≈ 
.
≈≈ 
Logger
≈≈ !
.
≈≈! "
Log
≈≈" %
(
≈≈% &
NLog
≈≈& *
.
≈≈* +
LogLevel
≈≈+ 3
.
≈≈3 4
Warn
≈≈4 8
,
≈≈8 9
$str
≈≈: U
,
≈≈U V
exceptIO
≈≈W _
)
≈≈_ `
;
≈≈` a
}
∆∆ 
}
«« 
}
»» 
}
…… 	
else
   
{
ÀÀ 	
password
ŒŒ 
=
ŒŒ 
null
ŒŒ 
;
ŒŒ 
}
œœ 	
if
–– 

(
––  
PRIVATE_CONST_FIVE
–– 
==
––  
$num
––  !
)
––! "
{
—— 	
if
““ 
(
““ 
password
““ 
!=
““ 
null
““  
)
““  !
{
”” 
{
’’ 
using
÷÷ 
(
÷÷ &
AesCryptoServiceProvider
÷÷ 3
aesAlg
÷÷4 :
=
÷÷; <
new
÷÷= @&
AesCryptoServiceProvider
÷÷A Y
(
÷÷Y Z
)
÷÷Z [
)
÷÷[ \
{
◊◊ 
aesAlg
ÿÿ 
.
ÿÿ 
Padding
ÿÿ &
=
ÿÿ' (
PaddingMode
ÿÿ) 4
.
ÿÿ4 5
None
ÿÿ5 9
;
ÿÿ9 :
aesAlg
ŸŸ 
.
ŸŸ 
Key
ŸŸ "
=
ŸŸ# $
Encoding
ŸŸ% -
.
ŸŸ- .
UTF8
ŸŸ. 2
.
ŸŸ2 3
GetBytes
ŸŸ3 ;
(
ŸŸ; <
$str
ŸŸ< N
)
ŸŸN O
;
ŸŸO P
ICryptoTransform
€€ (
	decryptor
€€) 2
=
€€3 4
aesAlg
€€5 ;
.
€€; <
CreateDecryptor
€€< K
(
€€K L
aesAlg
€€L R
.
€€R S
Key
€€S V
,
€€V W
aesAlg
€€X ^
.
€€^ _
IV
€€_ a
)
€€a b
;
€€b c
using
›› 
(
›› 
MemoryStream
›› +
	msDecrypt
››, 5
=
››6 7
new
››8 ;
MemoryStream
››< H
(
››H I
Encoding
››I Q
.
››Q R
UTF8
››R V
.
››V W
GetBytes
››W _
(
››_ `
password
››` h
)
››h i
)
››i j
)
››j k
{
ﬁﬁ 
using
ﬂﬂ !
(
ﬂﬂ" #
CryptoStream
ﬂﬂ# /
	csDecrypt
ﬂﬂ0 9
=
ﬂﬂ: ;
new
ﬂﬂ< ?
CryptoStream
ﬂﬂ@ L
(
ﬂﬂL M
	msDecrypt
ﬂﬂM V
,
ﬂﬂV W
	decryptor
ﬂﬂX a
,
ﬂﬂa b
CryptoStreamMode
ﬂﬂc s
.
ﬂﬂs t
Read
ﬂﬂt x
)
ﬂﬂx y
)
ﬂﬂy z
{
‡‡ 
using
··  %
(
··& '
StreamReader
··' 3
	srDecrypt
··4 =
=
··> ?
new
··@ C
StreamReader
··D P
(
··P Q
	csDecrypt
··Q Z
)
··Z [
)
··[ \
{
‚‚  !
password
ÂÂ$ ,
=
ÂÂ- .
	srDecrypt
ÂÂ/ 8
.
ÂÂ8 9
	ReadToEnd
ÂÂ9 B
(
ÂÂB C
)
ÂÂC D
;
ÂÂD E
}
ÊÊ  !
}
ÁÁ 
}
ËË 
}
ÈÈ 
}
ÍÍ 
try
ÎÎ 
{
ÏÏ 
using
ÓÓ 
(
ÓÓ 
SqlConnection
ÓÓ (

connection
ÓÓ) 3
=
ÓÓ4 5
new
ÓÓ6 9
SqlConnection
ÓÓ: G
(
ÓÓG H
$str
ÓÓH ~
+ÓÓ Ä
$strÓÓÅ Ö
+ÓÓÜ á
$strÓÓà î
+ÓÓï ñ
passwordÓÓó ü
)ÓÓü †
)ÓÓ† °
{
ÔÔ 

connection
 "
.
" #
Open
# '
(
' (
)
( )
;
) *
using
ÒÒ 
(
ÒÒ 

SqlCommand
ÒÒ )
command
ÒÒ* 1
=
ÒÒ2 3
new
ÒÒ4 7

SqlCommand
ÒÒ8 B
(
ÒÒB C
$str
ÒÒC ]
,
ÒÒ] ^

connection
ÒÒ_ i
)
ÒÒi j
)
ÒÒj k
{
ÚÚ 
command
ÛÛ #
.
ÛÛ# $
ExecuteNonQuery
ÛÛ$ 3
(
ÛÛ3 4
)
ÛÛ4 5
;
ÛÛ5 6
}
ÙÙ 
}
ıı 
}
ˆˆ 
catch
˜˜ 
(
˜˜ 
SqlException
˜˜ #
	exceptSql
˜˜$ -
)
˜˜- .
{
¯¯ 
IO
˘˘ 
.
˘˘ 
Logger
˘˘ 
.
˘˘ 
Log
˘˘ !
(
˘˘! "
NLog
˘˘" &
.
˘˘& '
LogLevel
˘˘' /
.
˘˘/ 0
Warn
˘˘0 4
,
˘˘4 5
$str
˘˘6 V
,
˘˘V W
	exceptSql
˘˘X a
)
˘˘a b
;
˘˘b c
}
˙˙ 
}
˚˚ 
}
¸¸ 	
}
˝˝ 
public
ˇˇ 

override
ˇˇ 
void
ˇˇ 
Good
ˇˇ 
(
ˇˇ 
)
ˇˇ 
{
ÄÄ 
GoodG2B1
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
GoodG2B2
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
GoodB2G1
ÉÉ 
(
ÉÉ 
)
ÉÉ 
;
ÉÉ 
GoodB2G2
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
}
ÖÖ 
}áá 
}àà ﬁº
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_07.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_07 E
:F G
AbstractTestCaseH X
{   
private%% 
int%% 
privateFive%% 
=%% 
$num%% 
;%%  
public'' 

override'' 
void'' 
Bad'' 
('' 
)'' 
{(( 
string)) 
password)) 
;)) 
if** 

(** 
privateFive** 
==** 
$num** 
)** 
{++ 	
password,, 
=,, 
$str,, 
;,, 
{.. 
TcpListener// 
listener// $
=//% &
null//' +
;//+ ,
try00 
{11 
listener33 
=33 
new33 "
TcpListener33# .
(33. /
	IPAddress33/ 8
.338 9
Parse339 >
(33> ?
$str33? K
)33K L
,33L M
$num33N S
)33S T
;33T U
listener44 
.44 
Start44 "
(44" #
)44# $
;44$ %
using55 
(55 
	TcpClient55 $
tcpConn55% ,
=55- .
listener55/ 7
.557 8
AcceptTcpClient558 G
(55G H
)55H I
)55I J
{66 
using77 
(77 
StreamReader77 +
sr77, .
=77/ 0
new771 4
StreamReader775 A
(77A B
Console77B I
.77I J
OpenStandardInput77J [
(77[ \
)77\ ]
)77] ^
)77^ _
{88 
password:: $
=::% &
sr::' )
.::) *
ReadLine::* 2
(::2 3
)::3 4
;::4 5
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
$str@@6 Q
,@@Q R
exceptIO@@S [
)@@[ \
;@@\ ]
}AA 
finallyBB 
{CC 
tryDD 
{EE 
ifFF 
(FF 
listenerFF $
!=FF% '
nullFF( ,
)FF, -
{GG 
listenerHH $
.HH$ %
StopHH% )
(HH) *
)HH* +
;HH+ ,
}II 
}JJ 
catchKK 
(KK 
IOExceptionKK &
exceptIOKK' /
)KK/ 0
{LL 
IOMM 
.MM 
LoggerMM !
.MM! "
LogMM" %
(MM% &
NLogMM& *
.MM* +
LogLevelMM+ 3
.MM3 4
WarnMM4 8
,MM8 9
$strMM: U
,MMU V
exceptIOMMW _
)MM_ `
;MM` a
}NN 
}OO 
}PP 
}QQ 	
elseRR 
{SS 	
passwordVV 
=VV 
nullVV 
;VV 
}WW 	
ifXX 

(XX 
privateFiveXX 
==XX 
$numXX 
)XX 
{YY 	
tryZZ 
{[[ 
using]] 
(]] 
SqlConnection]] $

connection]]% /
=]]0 1
new]]2 5
SqlConnection]]6 C
(]]C D
$str]]D z
+]]{ |
$str	]]} Å
+
]]Ç É
$str
]]Ñ ê
+
]]ë í
password
]]ì õ
)
]]õ ú
)
]]ú ù
{^^ 

connection__ 
.__ 
Open__ #
(__# $
)__$ %
;__% &
using`` 
(`` 

SqlCommand`` %
command``& -
=``. /
new``0 3

SqlCommand``4 >
(``> ?
$str``? Y
,``Y Z

connection``[ e
)``e f
)``f g
{aa 
commandbb 
.bb  
ExecuteNonQuerybb  /
(bb/ 0
)bb0 1
;bb1 2
}cc 
}dd 
}ee 
catchff 
(ff 
SqlExceptionff 
	exceptSqlff  )
)ff) *
{gg 
IOhh 
.hh 
Loggerhh 
.hh 
Loghh 
(hh 
NLoghh "
.hh" #
LogLevelhh# +
.hh+ ,
Warnhh, 0
,hh0 1
$strhh2 R
,hhR S
	exceptSqlhhT ]
)hh] ^
;hh^ _
}ii 
}jj 	
}kk 
privateoo 
voidoo 
GoodG2B1oo 
(oo 
)oo 
{pp 
stringqq 
passwordqq 
;qq 
ifrr 

(rr 
privateFiverr 
!=rr 
$numrr 
)rr 
{ss 	
passwordvv 
=vv 
nullvv 
;vv 
}ww 	
elsexx 
{yy 	
password|| 
=|| 
$str|| &
;||& '
}}} 	
if~~ 

(~~ 
privateFive~~ 
==~~ 
$num~~ 
)~~ 
{ 	
try
ÄÄ 
{
ÅÅ 
using
ÉÉ 
(
ÉÉ 
SqlConnection
ÉÉ $

connection
ÉÉ% /
=
ÉÉ0 1
new
ÉÉ2 5
SqlConnection
ÉÉ6 C
(
ÉÉC D
$str
ÉÉD z
+
ÉÉ{ |
$strÉÉ} Å
+ÉÉÇ É
$strÉÉÑ ê
+ÉÉë í
passwordÉÉì õ
)ÉÉõ ú
)ÉÉú ù
{
ÑÑ 

connection
ÖÖ 
.
ÖÖ 
Open
ÖÖ #
(
ÖÖ# $
)
ÖÖ$ %
;
ÖÖ% &
using
ÜÜ 
(
ÜÜ 

SqlCommand
ÜÜ %
command
ÜÜ& -
=
ÜÜ. /
new
ÜÜ0 3

SqlCommand
ÜÜ4 >
(
ÜÜ> ?
$str
ÜÜ? Y
,
ÜÜY Z

connection
ÜÜ[ e
)
ÜÜe f
)
ÜÜf g
{
áá 
command
àà 
.
àà  
ExecuteNonQuery
àà  /
(
àà/ 0
)
àà0 1
;
àà1 2
}
ââ 
}
ää 
}
ãã 
catch
åå 
(
åå 
SqlException
åå 
	exceptSql
åå  )
)
åå) *
{
çç 
IO
éé 
.
éé 
Logger
éé 
.
éé 
Log
éé 
(
éé 
NLog
éé "
.
éé" #
LogLevel
éé# +
.
éé+ ,
Warn
éé, 0
,
éé0 1
$str
éé2 R
,
ééR S
	exceptSql
ééT ]
)
éé] ^
;
éé^ _
}
èè 
}
êê 	
}
ëë 
private
îî 
void
îî 
GoodG2B2
îî 
(
îî 
)
îî 
{
ïï 
string
ññ 
password
ññ 
;
ññ 
if
óó 

(
óó 
privateFive
óó 
==
óó 
$num
óó 
)
óó 
{
òò 	
password
õõ 
=
õõ 
$str
õõ &
;
õõ& '
}
úú 	
else
ùù 
{
ûû 	
password
°° 
=
°° 
null
°° 
;
°° 
}
¢¢ 	
if
££ 

(
££ 
privateFive
££ 
==
££ 
$num
££ 
)
££ 
{
§§ 	
try
•• 
{
¶¶ 
using
®® 
(
®® 
SqlConnection
®® $

connection
®®% /
=
®®0 1
new
®®2 5
SqlConnection
®®6 C
(
®®C D
$str
®®D z
+
®®{ |
$str®®} Å
+®®Ç É
$str®®Ñ ê
+®®ë í
password®®ì õ
)®®õ ú
)®®ú ù
{
©© 

connection
™™ 
.
™™ 
Open
™™ #
(
™™# $
)
™™$ %
;
™™% &
using
´´ 
(
´´ 

SqlCommand
´´ %
command
´´& -
=
´´. /
new
´´0 3

SqlCommand
´´4 >
(
´´> ?
$str
´´? Y
,
´´Y Z

connection
´´[ e
)
´´e f
)
´´f g
{
¨¨ 
command
≠≠ 
.
≠≠  
ExecuteNonQuery
≠≠  /
(
≠≠/ 0
)
≠≠0 1
;
≠≠1 2
}
ÆÆ 
}
ØØ 
}
∞∞ 
catch
±± 
(
±± 
SqlException
±± 
	exceptSql
±±  )
)
±±) *
{
≤≤ 
IO
≥≥ 
.
≥≥ 
Logger
≥≥ 
.
≥≥ 
Log
≥≥ 
(
≥≥ 
NLog
≥≥ "
.
≥≥" #
LogLevel
≥≥# +
.
≥≥+ ,
Warn
≥≥, 0
,
≥≥0 1
$str
≥≥2 R
,
≥≥R S
	exceptSql
≥≥T ]
)
≥≥] ^
;
≥≥^ _
}
¥¥ 
}
µµ 	
}
∂∂ 
private
ππ 
void
ππ 
GoodB2G1
ππ 
(
ππ 
)
ππ 
{
∫∫ 
string
ªª 
password
ªª 
;
ªª 
if
ºº 

(
ºº 
privateFive
ºº 
==
ºº 
$num
ºº 
)
ºº 
{
ΩΩ 	
password
ææ 
=
ææ 
$str
ææ 
;
ææ 
{
¿¿ 
TcpListener
¡¡ 
listener
¡¡ $
=
¡¡% &
null
¡¡' +
;
¡¡+ ,
try
¬¬ 
{
√√ 
listener
≈≈ 
=
≈≈ 
new
≈≈ "
TcpListener
≈≈# .
(
≈≈. /
	IPAddress
≈≈/ 8
.
≈≈8 9
Parse
≈≈9 >
(
≈≈> ?
$str
≈≈? K
)
≈≈K L
,
≈≈L M
$num
≈≈N S
)
≈≈S T
;
≈≈T U
listener
∆∆ 
.
∆∆ 
Start
∆∆ "
(
∆∆" #
)
∆∆# $
;
∆∆$ %
using
«« 
(
«« 
	TcpClient
«« $
tcpConn
««% ,
=
««- .
listener
««/ 7
.
««7 8
AcceptTcpClient
««8 G
(
««G H
)
««H I
)
««I J
{
»» 
using
…… 
(
…… 
StreamReader
…… +
sr
……, .
=
……/ 0
new
……1 4
StreamReader
……5 A
(
……A B
Console
……B I
.
……I J
OpenStandardInput
……J [
(
……[ \
)
……\ ]
)
……] ^
)
……^ _
{
   
password
ÃÃ $
=
ÃÃ% &
sr
ÃÃ' )
.
ÃÃ) *
ReadLine
ÃÃ* 2
(
ÃÃ2 3
)
ÃÃ3 4
;
ÃÃ4 5
}
ÕÕ 
}
ŒŒ 
}
œœ 
catch
–– 
(
–– 
IOException
–– "
exceptIO
––# +
)
––+ ,
{
—— 
IO
““ 
.
““ 
Logger
““ 
.
““ 
Log
““ !
(
““! "
NLog
““" &
.
““& '
LogLevel
““' /
.
““/ 0
Warn
““0 4
,
““4 5
$str
““6 Q
,
““Q R
exceptIO
““S [
)
““[ \
;
““\ ]
}
”” 
finally
‘‘ 
{
’’ 
try
÷÷ 
{
◊◊ 
if
ÿÿ 
(
ÿÿ 
listener
ÿÿ $
!=
ÿÿ% '
null
ÿÿ( ,
)
ÿÿ, -
{
ŸŸ 
listener
⁄⁄ $
.
⁄⁄$ %
Stop
⁄⁄% )
(
⁄⁄) *
)
⁄⁄* +
;
⁄⁄+ ,
}
€€ 
}
‹‹ 
catch
›› 
(
›› 
IOException
›› &
exceptIO
››' /
)
››/ 0
{
ﬁﬁ 
IO
ﬂﬂ 
.
ﬂﬂ 
Logger
ﬂﬂ !
.
ﬂﬂ! "
Log
ﬂﬂ" %
(
ﬂﬂ% &
NLog
ﬂﬂ& *
.
ﬂﬂ* +
LogLevel
ﬂﬂ+ 3
.
ﬂﬂ3 4
Warn
ﬂﬂ4 8
,
ﬂﬂ8 9
$str
ﬂﬂ: U
,
ﬂﬂU V
exceptIO
ﬂﬂW _
)
ﬂﬂ_ `
;
ﬂﬂ` a
}
‡‡ 
}
·· 
}
‚‚ 
}
„„ 	
else
‰‰ 
{
ÂÂ 	
password
ËË 
=
ËË 
null
ËË 
;
ËË 
}
ÈÈ 	
if
ÍÍ 

(
ÍÍ 
privateFive
ÍÍ 
!=
ÍÍ 
$num
ÍÍ 
)
ÍÍ 
{
ÎÎ 	
IO
ÌÌ 
.
ÌÌ 
	WriteLine
ÌÌ 
(
ÌÌ 
$str
ÌÌ /
)
ÌÌ/ 0
;
ÌÌ0 1
}
ÓÓ 	
else
ÔÔ 
{
 	
if
ÒÒ 
(
ÒÒ 
password
ÒÒ 
!=
ÒÒ 
null
ÒÒ  
)
ÒÒ  !
{
ÚÚ 
{
ÙÙ 
using
ıı 
(
ıı &
AesCryptoServiceProvider
ıı 3
aesAlg
ıı4 :
=
ıı; <
new
ıı= @&
AesCryptoServiceProvider
ııA Y
(
ııY Z
)
ııZ [
)
ıı[ \
{
ˆˆ 
aesAlg
˜˜ 
.
˜˜ 
Padding
˜˜ &
=
˜˜' (
PaddingMode
˜˜) 4
.
˜˜4 5
None
˜˜5 9
;
˜˜9 :
aesAlg
¯¯ 
.
¯¯ 
Key
¯¯ "
=
¯¯# $
Encoding
¯¯% -
.
¯¯- .
UTF8
¯¯. 2
.
¯¯2 3
GetBytes
¯¯3 ;
(
¯¯; <
$str
¯¯< N
)
¯¯N O
;
¯¯O P
ICryptoTransform
˙˙ (
	decryptor
˙˙) 2
=
˙˙3 4
aesAlg
˙˙5 ;
.
˙˙; <
CreateDecryptor
˙˙< K
(
˙˙K L
aesAlg
˙˙L R
.
˙˙R S
Key
˙˙S V
,
˙˙V W
aesAlg
˙˙X ^
.
˙˙^ _
IV
˙˙_ a
)
˙˙a b
;
˙˙b c
using
¸¸ 
(
¸¸ 
MemoryStream
¸¸ +
	msDecrypt
¸¸, 5
=
¸¸6 7
new
¸¸8 ;
MemoryStream
¸¸< H
(
¸¸H I
Encoding
¸¸I Q
.
¸¸Q R
UTF8
¸¸R V
.
¸¸V W
GetBytes
¸¸W _
(
¸¸_ `
password
¸¸` h
)
¸¸h i
)
¸¸i j
)
¸¸j k
{
˝˝ 
using
˛˛ !
(
˛˛" #
CryptoStream
˛˛# /
	csDecrypt
˛˛0 9
=
˛˛: ;
new
˛˛< ?
CryptoStream
˛˛@ L
(
˛˛L M
	msDecrypt
˛˛M V
,
˛˛V W
	decryptor
˛˛X a
,
˛˛a b
CryptoStreamMode
˛˛c s
.
˛˛s t
Read
˛˛t x
)
˛˛x y
)
˛˛y z
{
ˇˇ 
using
ÄÄ  %
(
ÄÄ& '
StreamReader
ÄÄ' 3
	srDecrypt
ÄÄ4 =
=
ÄÄ> ?
new
ÄÄ@ C
StreamReader
ÄÄD P
(
ÄÄP Q
	csDecrypt
ÄÄQ Z
)
ÄÄZ [
)
ÄÄ[ \
{
ÅÅ  !
password
ÑÑ$ ,
=
ÑÑ- .
	srDecrypt
ÑÑ/ 8
.
ÑÑ8 9
	ReadToEnd
ÑÑ9 B
(
ÑÑB C
)
ÑÑC D
;
ÑÑD E
}
ÖÖ  !
}
ÜÜ 
}
áá 
}
àà 
}
ââ 
try
ää 
{
ãã 
using
çç 
(
çç 
SqlConnection
çç (

connection
çç) 3
=
çç4 5
new
çç6 9
SqlConnection
çç: G
(
ççG H
$str
ççH ~
+çç Ä
$strççÅ Ö
+ççÜ á
$strççà î
+ççï ñ
passwordççó ü
)ççü †
)çç† °
{
éé 

connection
èè "
.
èè" #
Open
èè# '
(
èè' (
)
èè( )
;
èè) *
using
êê 
(
êê 

SqlCommand
êê )
command
êê* 1
=
êê2 3
new
êê4 7

SqlCommand
êê8 B
(
êêB C
$str
êêC ]
,
êê] ^

connection
êê_ i
)
êêi j
)
êêj k
{
ëë 
command
íí #
.
íí# $
ExecuteNonQuery
íí$ 3
(
íí3 4
)
íí4 5
;
íí5 6
}
ìì 
}
îî 
}
ïï 
catch
ññ 
(
ññ 
SqlException
ññ #
	exceptSql
ññ$ -
)
ññ- .
{
óó 
IO
òò 
.
òò 
Logger
òò 
.
òò 
Log
òò !
(
òò! "
NLog
òò" &
.
òò& '
LogLevel
òò' /
.
òò/ 0
Warn
òò0 4
,
òò4 5
$str
òò6 V
,
òòV W
	exceptSql
òòX a
)
òòa b
;
òòb c
}
ôô 
}
öö 
}
õõ 	
}
úú 
private
üü 
void
üü 
GoodB2G2
üü 
(
üü 
)
üü 
{
†† 
string
°° 
password
°° 
;
°° 
if
¢¢ 

(
¢¢ 
privateFive
¢¢ 
==
¢¢ 
$num
¢¢ 
)
¢¢ 
{
££ 	
password
§§ 
=
§§ 
$str
§§ 
;
§§ 
{
¶¶ 
TcpListener
ßß 
listener
ßß $
=
ßß% &
null
ßß' +
;
ßß+ ,
try
®® 
{
©© 
listener
´´ 
=
´´ 
new
´´ "
TcpListener
´´# .
(
´´. /
	IPAddress
´´/ 8
.
´´8 9
Parse
´´9 >
(
´´> ?
$str
´´? K
)
´´K L
,
´´L M
$num
´´N S
)
´´S T
;
´´T U
listener
¨¨ 
.
¨¨ 
Start
¨¨ "
(
¨¨" #
)
¨¨# $
;
¨¨$ %
using
≠≠ 
(
≠≠ 
	TcpClient
≠≠ $
tcpConn
≠≠% ,
=
≠≠- .
listener
≠≠/ 7
.
≠≠7 8
AcceptTcpClient
≠≠8 G
(
≠≠G H
)
≠≠H I
)
≠≠I J
{
ÆÆ 
using
ØØ 
(
ØØ 
StreamReader
ØØ +
sr
ØØ, .
=
ØØ/ 0
new
ØØ1 4
StreamReader
ØØ5 A
(
ØØA B
Console
ØØB I
.
ØØI J
OpenStandardInput
ØØJ [
(
ØØ[ \
)
ØØ\ ]
)
ØØ] ^
)
ØØ^ _
{
∞∞ 
password
≤≤ $
=
≤≤% &
sr
≤≤' )
.
≤≤) *
ReadLine
≤≤* 2
(
≤≤2 3
)
≤≤3 4
;
≤≤4 5
}
≥≥ 
}
¥¥ 
}
µµ 
catch
∂∂ 
(
∂∂ 
IOException
∂∂ "
exceptIO
∂∂# +
)
∂∂+ ,
{
∑∑ 
IO
∏∏ 
.
∏∏ 
Logger
∏∏ 
.
∏∏ 
Log
∏∏ !
(
∏∏! "
NLog
∏∏" &
.
∏∏& '
LogLevel
∏∏' /
.
∏∏/ 0
Warn
∏∏0 4
,
∏∏4 5
$str
∏∏6 Q
,
∏∏Q R
exceptIO
∏∏S [
)
∏∏[ \
;
∏∏\ ]
}
ππ 
finally
∫∫ 
{
ªª 
try
ºº 
{
ΩΩ 
if
ææ 
(
ææ 
listener
ææ $
!=
ææ% '
null
ææ( ,
)
ææ, -
{
øø 
listener
¿¿ $
.
¿¿$ %
Stop
¿¿% )
(
¿¿) *
)
¿¿* +
;
¿¿+ ,
}
¡¡ 
}
¬¬ 
catch
√√ 
(
√√ 
IOException
√√ &
exceptIO
√√' /
)
√√/ 0
{
ƒƒ 
IO
≈≈ 
.
≈≈ 
Logger
≈≈ !
.
≈≈! "
Log
≈≈" %
(
≈≈% &
NLog
≈≈& *
.
≈≈* +
LogLevel
≈≈+ 3
.
≈≈3 4
Warn
≈≈4 8
,
≈≈8 9
$str
≈≈: U
,
≈≈U V
exceptIO
≈≈W _
)
≈≈_ `
;
≈≈` a
}
∆∆ 
}
«« 
}
»» 
}
…… 	
else
   
{
ÀÀ 	
password
ŒŒ 
=
ŒŒ 
null
ŒŒ 
;
ŒŒ 
}
œœ 	
if
–– 

(
–– 
privateFive
–– 
==
–– 
$num
–– 
)
–– 
{
—— 	
if
““ 
(
““ 
password
““ 
!=
““ 
null
““  
)
““  !
{
”” 
{
’’ 
using
÷÷ 
(
÷÷ &
AesCryptoServiceProvider
÷÷ 3
aesAlg
÷÷4 :
=
÷÷; <
new
÷÷= @&
AesCryptoServiceProvider
÷÷A Y
(
÷÷Y Z
)
÷÷Z [
)
÷÷[ \
{
◊◊ 
aesAlg
ÿÿ 
.
ÿÿ 
Padding
ÿÿ &
=
ÿÿ' (
PaddingMode
ÿÿ) 4
.
ÿÿ4 5
None
ÿÿ5 9
;
ÿÿ9 :
aesAlg
ŸŸ 
.
ŸŸ 
Key
ŸŸ "
=
ŸŸ# $
Encoding
ŸŸ% -
.
ŸŸ- .
UTF8
ŸŸ. 2
.
ŸŸ2 3
GetBytes
ŸŸ3 ;
(
ŸŸ; <
$str
ŸŸ< N
)
ŸŸN O
;
ŸŸO P
ICryptoTransform
€€ (
	decryptor
€€) 2
=
€€3 4
aesAlg
€€5 ;
.
€€; <
CreateDecryptor
€€< K
(
€€K L
aesAlg
€€L R
.
€€R S
Key
€€S V
,
€€V W
aesAlg
€€X ^
.
€€^ _
IV
€€_ a
)
€€a b
;
€€b c
using
›› 
(
›› 
MemoryStream
›› +
	msDecrypt
››, 5
=
››6 7
new
››8 ;
MemoryStream
››< H
(
››H I
Encoding
››I Q
.
››Q R
UTF8
››R V
.
››V W
GetBytes
››W _
(
››_ `
password
››` h
)
››h i
)
››i j
)
››j k
{
ﬁﬁ 
using
ﬂﬂ !
(
ﬂﬂ" #
CryptoStream
ﬂﬂ# /
	csDecrypt
ﬂﬂ0 9
=
ﬂﬂ: ;
new
ﬂﬂ< ?
CryptoStream
ﬂﬂ@ L
(
ﬂﬂL M
	msDecrypt
ﬂﬂM V
,
ﬂﬂV W
	decryptor
ﬂﬂX a
,
ﬂﬂa b
CryptoStreamMode
ﬂﬂc s
.
ﬂﬂs t
Read
ﬂﬂt x
)
ﬂﬂx y
)
ﬂﬂy z
{
‡‡ 
using
··  %
(
··& '
StreamReader
··' 3
	srDecrypt
··4 =
=
··> ?
new
··@ C
StreamReader
··D P
(
··P Q
	csDecrypt
··Q Z
)
··Z [
)
··[ \
{
‚‚  !
password
ÂÂ$ ,
=
ÂÂ- .
	srDecrypt
ÂÂ/ 8
.
ÂÂ8 9
	ReadToEnd
ÂÂ9 B
(
ÂÂB C
)
ÂÂC D
;
ÂÂD E
}
ÊÊ  !
}
ÁÁ 
}
ËË 
}
ÈÈ 
}
ÍÍ 
try
ÎÎ 
{
ÏÏ 
using
ÓÓ 
(
ÓÓ 
SqlConnection
ÓÓ (

connection
ÓÓ) 3
=
ÓÓ4 5
new
ÓÓ6 9
SqlConnection
ÓÓ: G
(
ÓÓG H
$str
ÓÓH ~
+ÓÓ Ä
$strÓÓÅ Ö
+ÓÓÜ á
$strÓÓà î
+ÓÓï ñ
passwordÓÓó ü
)ÓÓü †
)ÓÓ† °
{
ÔÔ 

connection
 "
.
" #
Open
# '
(
' (
)
( )
;
) *
using
ÒÒ 
(
ÒÒ 

SqlCommand
ÒÒ )
command
ÒÒ* 1
=
ÒÒ2 3
new
ÒÒ4 7

SqlCommand
ÒÒ8 B
(
ÒÒB C
$str
ÒÒC ]
,
ÒÒ] ^

connection
ÒÒ_ i
)
ÒÒi j
)
ÒÒj k
{
ÚÚ 
command
ÛÛ #
.
ÛÛ# $
ExecuteNonQuery
ÛÛ$ 3
(
ÛÛ3 4
)
ÛÛ4 5
;
ÛÛ5 6
}
ÙÙ 
}
ıı 
}
ˆˆ 
catch
˜˜ 
(
˜˜ 
SqlException
˜˜ #
	exceptSql
˜˜$ -
)
˜˜- .
{
¯¯ 
IO
˘˘ 
.
˘˘ 
Logger
˘˘ 
.
˘˘ 
Log
˘˘ !
(
˘˘! "
NLog
˘˘" &
.
˘˘& '
LogLevel
˘˘' /
.
˘˘/ 0
Warn
˘˘0 4
,
˘˘4 5
$str
˘˘6 V
,
˘˘V W
	exceptSql
˘˘X a
)
˘˘a b
;
˘˘b c
}
˙˙ 
}
˚˚ 
}
¸¸ 	
}
˝˝ 
public
ˇˇ 

override
ˇˇ 
void
ˇˇ 
Good
ˇˇ 
(
ˇˇ 
)
ˇˇ 
{
ÄÄ 
GoodG2B1
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
GoodG2B2
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
GoodB2G1
ÉÉ 
(
ÉÉ 
)
ÉÉ 
;
ÉÉ 
GoodB2G2
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
}
ÖÖ 
}áá 
}àà ≈ø
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_08.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_08 E
:F G
AbstractTestCaseH X
{   
private%% 
static%% 
bool%% 
PrivateReturnsTrue%% *
(%%* +
)%%+ ,
{&& 
return'' 
true'' 
;'' 
}(( 
private** 
static** 
bool** 
PrivateReturnsFalse** +
(**+ ,
)**, -
{++ 
return,, 
false,, 
;,, 
}-- 
public// 

override// 
void// 
Bad// 
(// 
)// 
{00 
string11 
password11 
;11 
if22 

(22 
PrivateReturnsTrue22 
(22 
)22  
)22  !
{33 	
password44 
=44 
$str44 
;44 
{66 
TcpListener77 
listener77 $
=77% &
null77' +
;77+ ,
try88 
{99 
listener;; 
=;; 
new;; "
TcpListener;;# .
(;;. /
	IPAddress;;/ 8
.;;8 9
Parse;;9 >
(;;> ?
$str;;? K
);;K L
,;;L M
$num;;N S
);;S T
;;;T U
listener<< 
.<< 
Start<< "
(<<" #
)<<# $
;<<$ %
using== 
(== 
	TcpClient== $
tcpConn==% ,
===- .
listener==/ 7
.==7 8
AcceptTcpClient==8 G
(==G H
)==H I
)==I J
{>> 
using?? 
(?? 
StreamReader?? +
sr??, .
=??/ 0
new??1 4
StreamReader??5 A
(??A B
Console??B I
.??I J
OpenStandardInput??J [
(??[ \
)??\ ]
)??] ^
)??^ _
{@@ 
passwordBB $
=BB% &
srBB' )
.BB) *
ReadLineBB* 2
(BB2 3
)BB3 4
;BB4 5
}CC 
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF "
exceptIOFF# +
)FF+ ,
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH !
(HH! "
NLogHH" &
.HH& '
LogLevelHH' /
.HH/ 0
WarnHH0 4
,HH4 5
$strHH6 Q
,HHQ R
exceptIOHHS [
)HH[ \
;HH\ ]
}II 
finallyJJ 
{KK 
tryLL 
{MM 
ifNN 
(NN 
listenerNN $
!=NN% '
nullNN( ,
)NN, -
{OO 
listenerPP $
.PP$ %
StopPP% )
(PP) *
)PP* +
;PP+ ,
}QQ 
}RR 
catchSS 
(SS 
IOExceptionSS &
exceptIOSS' /
)SS/ 0
{TT 
IOUU 
.UU 
LoggerUU !
.UU! "
LogUU" %
(UU% &
NLogUU& *
.UU* +
LogLevelUU+ 3
.UU3 4
WarnUU4 8
,UU8 9
$strUU: U
,UUU V
exceptIOUUW _
)UU_ `
;UU` a
}VV 
}WW 
}XX 
}YY 	
elseZZ 
{[[ 	
password^^ 
=^^ 
null^^ 
;^^ 
}__ 	
if`` 

(`` 
PrivateReturnsTrue`` 
(`` 
)``  
)``  !
{aa 	
trybb 
{cc 
usingee 
(ee 
SqlConnectionee $

connectionee% /
=ee0 1
newee2 5
SqlConnectionee6 C
(eeC D
$streeD z
+ee{ |
$str	ee} Å
+
eeÇ É
$str
eeÑ ê
+
eeë í
password
eeì õ
)
eeõ ú
)
eeú ù
{ff 

connectiongg 
.gg 
Opengg #
(gg# $
)gg$ %
;gg% &
usinghh 
(hh 

SqlCommandhh %
commandhh& -
=hh. /
newhh0 3

SqlCommandhh4 >
(hh> ?
$strhh? Y
,hhY Z

connectionhh[ e
)hhe f
)hhf g
{ii 
commandjj 
.jj  
ExecuteNonQueryjj  /
(jj/ 0
)jj0 1
;jj1 2
}kk 
}ll 
}mm 
catchnn 
(nn 
SqlExceptionnn 
	exceptSqlnn  )
)nn) *
{oo 
IOpp 
.pp 
Loggerpp 
.pp 
Logpp 
(pp 
NLogpp "
.pp" #
LogLevelpp# +
.pp+ ,
Warnpp, 0
,pp0 1
$strpp2 R
,ppR S
	exceptSqlppT ]
)pp] ^
;pp^ _
}qq 
}rr 	
}ss 
privateww 
voidww 
GoodG2B1ww 
(ww 
)ww 
{xx 
stringyy 
passwordyy 
;yy 
ifzz 

(zz 
PrivateReturnsFalsezz 
(zz  
)zz  !
)zz! "
{{{ 	
password~~ 
=~~ 
null~~ 
;~~ 
} 	
else
ÄÄ 
{
ÅÅ 	
password
ÑÑ 
=
ÑÑ 
$str
ÑÑ &
;
ÑÑ& '
}
ÖÖ 	
if
ÜÜ 

(
ÜÜ  
PrivateReturnsTrue
ÜÜ 
(
ÜÜ 
)
ÜÜ  
)
ÜÜ  !
{
áá 	
try
àà 
{
ââ 
using
ãã 
(
ãã 
SqlConnection
ãã $

connection
ãã% /
=
ãã0 1
new
ãã2 5
SqlConnection
ãã6 C
(
ããC D
$str
ããD z
+
ãã{ |
$strãã} Å
+ããÇ É
$strããÑ ê
+ããë í
passwordããì õ
)ããõ ú
)ããú ù
{
åå 

connection
çç 
.
çç 
Open
çç #
(
çç# $
)
çç$ %
;
çç% &
using
éé 
(
éé 

SqlCommand
éé %
command
éé& -
=
éé. /
new
éé0 3

SqlCommand
éé4 >
(
éé> ?
$str
éé? Y
,
ééY Z

connection
éé[ e
)
éée f
)
ééf g
{
èè 
command
êê 
.
êê  
ExecuteNonQuery
êê  /
(
êê/ 0
)
êê0 1
;
êê1 2
}
ëë 
}
íí 
}
ìì 
catch
îî 
(
îî 
SqlException
îî 
	exceptSql
îî  )
)
îî) *
{
ïï 
IO
ññ 
.
ññ 
Logger
ññ 
.
ññ 
Log
ññ 
(
ññ 
NLog
ññ "
.
ññ" #
LogLevel
ññ# +
.
ññ+ ,
Warn
ññ, 0
,
ññ0 1
$str
ññ2 R
,
ññR S
	exceptSql
ññT ]
)
ññ] ^
;
ññ^ _
}
óó 
}
òò 	
}
ôô 
private
úú 
void
úú 
GoodG2B2
úú 
(
úú 
)
úú 
{
ùù 
string
ûû 
password
ûû 
;
ûû 
if
üü 

(
üü  
PrivateReturnsTrue
üü 
(
üü 
)
üü  
)
üü  !
{
†† 	
password
££ 
=
££ 
$str
££ &
;
££& '
}
§§ 	
else
•• 
{
¶¶ 	
password
©© 
=
©© 
null
©© 
;
©© 
}
™™ 	
if
´´ 

(
´´  
PrivateReturnsTrue
´´ 
(
´´ 
)
´´  
)
´´  !
{
¨¨ 	
try
≠≠ 
{
ÆÆ 
using
∞∞ 
(
∞∞ 
SqlConnection
∞∞ $

connection
∞∞% /
=
∞∞0 1
new
∞∞2 5
SqlConnection
∞∞6 C
(
∞∞C D
$str
∞∞D z
+
∞∞{ |
$str∞∞} Å
+∞∞Ç É
$str∞∞Ñ ê
+∞∞ë í
password∞∞ì õ
)∞∞õ ú
)∞∞ú ù
{
±± 

connection
≤≤ 
.
≤≤ 
Open
≤≤ #
(
≤≤# $
)
≤≤$ %
;
≤≤% &
using
≥≥ 
(
≥≥ 

SqlCommand
≥≥ %
command
≥≥& -
=
≥≥. /
new
≥≥0 3

SqlCommand
≥≥4 >
(
≥≥> ?
$str
≥≥? Y
,
≥≥Y Z

connection
≥≥[ e
)
≥≥e f
)
≥≥f g
{
¥¥ 
command
µµ 
.
µµ  
ExecuteNonQuery
µµ  /
(
µµ/ 0
)
µµ0 1
;
µµ1 2
}
∂∂ 
}
∑∑ 
}
∏∏ 
catch
ππ 
(
ππ 
SqlException
ππ 
	exceptSql
ππ  )
)
ππ) *
{
∫∫ 
IO
ªª 
.
ªª 
Logger
ªª 
.
ªª 
Log
ªª 
(
ªª 
NLog
ªª "
.
ªª" #
LogLevel
ªª# +
.
ªª+ ,
Warn
ªª, 0
,
ªª0 1
$str
ªª2 R
,
ªªR S
	exceptSql
ªªT ]
)
ªª] ^
;
ªª^ _
}
ºº 
}
ΩΩ 	
}
ææ 
private
¡¡ 
void
¡¡ 
GoodB2G1
¡¡ 
(
¡¡ 
)
¡¡ 
{
¬¬ 
string
√√ 
password
√√ 
;
√√ 
if
ƒƒ 

(
ƒƒ  
PrivateReturnsTrue
ƒƒ 
(
ƒƒ 
)
ƒƒ  
)
ƒƒ  !
{
≈≈ 	
password
∆∆ 
=
∆∆ 
$str
∆∆ 
;
∆∆ 
{
»» 
TcpListener
…… 
listener
…… $
=
……% &
null
……' +
;
……+ ,
try
   
{
ÀÀ 
listener
ÕÕ 
=
ÕÕ 
new
ÕÕ "
TcpListener
ÕÕ# .
(
ÕÕ. /
	IPAddress
ÕÕ/ 8
.
ÕÕ8 9
Parse
ÕÕ9 >
(
ÕÕ> ?
$str
ÕÕ? K
)
ÕÕK L
,
ÕÕL M
$num
ÕÕN S
)
ÕÕS T
;
ÕÕT U
listener
ŒŒ 
.
ŒŒ 
Start
ŒŒ "
(
ŒŒ" #
)
ŒŒ# $
;
ŒŒ$ %
using
œœ 
(
œœ 
	TcpClient
œœ $
tcpConn
œœ% ,
=
œœ- .
listener
œœ/ 7
.
œœ7 8
AcceptTcpClient
œœ8 G
(
œœG H
)
œœH I
)
œœI J
{
–– 
using
—— 
(
—— 
StreamReader
—— +
sr
——, .
=
——/ 0
new
——1 4
StreamReader
——5 A
(
——A B
Console
——B I
.
——I J
OpenStandardInput
——J [
(
——[ \
)
——\ ]
)
——] ^
)
——^ _
{
““ 
password
‘‘ $
=
‘‘% &
sr
‘‘' )
.
‘‘) *
ReadLine
‘‘* 2
(
‘‘2 3
)
‘‘3 4
;
‘‘4 5
}
’’ 
}
÷÷ 
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
IOException
ÿÿ "
exceptIO
ÿÿ# +
)
ÿÿ+ ,
{
ŸŸ 
IO
⁄⁄ 
.
⁄⁄ 
Logger
⁄⁄ 
.
⁄⁄ 
Log
⁄⁄ !
(
⁄⁄! "
NLog
⁄⁄" &
.
⁄⁄& '
LogLevel
⁄⁄' /
.
⁄⁄/ 0
Warn
⁄⁄0 4
,
⁄⁄4 5
$str
⁄⁄6 Q
,
⁄⁄Q R
exceptIO
⁄⁄S [
)
⁄⁄[ \
;
⁄⁄\ ]
}
€€ 
finally
‹‹ 
{
›› 
try
ﬁﬁ 
{
ﬂﬂ 
if
‡‡ 
(
‡‡ 
listener
‡‡ $
!=
‡‡% '
null
‡‡( ,
)
‡‡, -
{
·· 
listener
‚‚ $
.
‚‚$ %
Stop
‚‚% )
(
‚‚) *
)
‚‚* +
;
‚‚+ ,
}
„„ 
}
‰‰ 
catch
ÂÂ 
(
ÂÂ 
IOException
ÂÂ &
exceptIO
ÂÂ' /
)
ÂÂ/ 0
{
ÊÊ 
IO
ÁÁ 
.
ÁÁ 
Logger
ÁÁ !
.
ÁÁ! "
Log
ÁÁ" %
(
ÁÁ% &
NLog
ÁÁ& *
.
ÁÁ* +
LogLevel
ÁÁ+ 3
.
ÁÁ3 4
Warn
ÁÁ4 8
,
ÁÁ8 9
$str
ÁÁ: U
,
ÁÁU V
exceptIO
ÁÁW _
)
ÁÁ_ `
;
ÁÁ` a
}
ËË 
}
ÈÈ 
}
ÍÍ 
}
ÎÎ 	
else
ÏÏ 
{
ÌÌ 	
password
 
=
 
null
 
;
 
}
ÒÒ 	
if
ÚÚ 

(
ÚÚ !
PrivateReturnsFalse
ÚÚ 
(
ÚÚ  
)
ÚÚ  !
)
ÚÚ! "
{
ÛÛ 	
IO
ıı 
.
ıı 
	WriteLine
ıı 
(
ıı 
$str
ıı /
)
ıı/ 0
;
ıı0 1
}
ˆˆ 	
else
˜˜ 
{
¯¯ 	
if
˘˘ 
(
˘˘ 
password
˘˘ 
!=
˘˘ 
null
˘˘  
)
˘˘  !
{
˙˙ 
{
¸¸ 
using
˝˝ 
(
˝˝ &
AesCryptoServiceProvider
˝˝ 3
aesAlg
˝˝4 :
=
˝˝; <
new
˝˝= @&
AesCryptoServiceProvider
˝˝A Y
(
˝˝Y Z
)
˝˝Z [
)
˝˝[ \
{
˛˛ 
aesAlg
ˇˇ 
.
ˇˇ 
Padding
ˇˇ &
=
ˇˇ' (
PaddingMode
ˇˇ) 4
.
ˇˇ4 5
None
ˇˇ5 9
;
ˇˇ9 :
aesAlg
ÄÄ 
.
ÄÄ 
Key
ÄÄ "
=
ÄÄ# $
Encoding
ÄÄ% -
.
ÄÄ- .
UTF8
ÄÄ. 2
.
ÄÄ2 3
GetBytes
ÄÄ3 ;
(
ÄÄ; <
$str
ÄÄ< N
)
ÄÄN O
;
ÄÄO P
ICryptoTransform
ÇÇ (
	decryptor
ÇÇ) 2
=
ÇÇ3 4
aesAlg
ÇÇ5 ;
.
ÇÇ; <
CreateDecryptor
ÇÇ< K
(
ÇÇK L
aesAlg
ÇÇL R
.
ÇÇR S
Key
ÇÇS V
,
ÇÇV W
aesAlg
ÇÇX ^
.
ÇÇ^ _
IV
ÇÇ_ a
)
ÇÇa b
;
ÇÇb c
using
ÑÑ 
(
ÑÑ 
MemoryStream
ÑÑ +
	msDecrypt
ÑÑ, 5
=
ÑÑ6 7
new
ÑÑ8 ;
MemoryStream
ÑÑ< H
(
ÑÑH I
Encoding
ÑÑI Q
.
ÑÑQ R
UTF8
ÑÑR V
.
ÑÑV W
GetBytes
ÑÑW _
(
ÑÑ_ `
password
ÑÑ` h
)
ÑÑh i
)
ÑÑi j
)
ÑÑj k
{
ÖÖ 
using
ÜÜ !
(
ÜÜ" #
CryptoStream
ÜÜ# /
	csDecrypt
ÜÜ0 9
=
ÜÜ: ;
new
ÜÜ< ?
CryptoStream
ÜÜ@ L
(
ÜÜL M
	msDecrypt
ÜÜM V
,
ÜÜV W
	decryptor
ÜÜX a
,
ÜÜa b
CryptoStreamMode
ÜÜc s
.
ÜÜs t
Read
ÜÜt x
)
ÜÜx y
)
ÜÜy z
{
áá 
using
àà  %
(
àà& '
StreamReader
àà' 3
	srDecrypt
àà4 =
=
àà> ?
new
àà@ C
StreamReader
ààD P
(
ààP Q
	csDecrypt
ààQ Z
)
ààZ [
)
àà[ \
{
ââ  !
password
åå$ ,
=
åå- .
	srDecrypt
åå/ 8
.
åå8 9
	ReadToEnd
åå9 B
(
ååB C
)
ååC D
;
ååD E
}
çç  !
}
éé 
}
èè 
}
êê 
}
ëë 
try
íí 
{
ìì 
using
ïï 
(
ïï 
SqlConnection
ïï (

connection
ïï) 3
=
ïï4 5
new
ïï6 9
SqlConnection
ïï: G
(
ïïG H
$str
ïïH ~
+ïï Ä
$strïïÅ Ö
+ïïÜ á
$strïïà î
+ïïï ñ
passwordïïó ü
)ïïü †
)ïï† °
{
ññ 

connection
óó "
.
óó" #
Open
óó# '
(
óó' (
)
óó( )
;
óó) *
using
òò 
(
òò 

SqlCommand
òò )
command
òò* 1
=
òò2 3
new
òò4 7

SqlCommand
òò8 B
(
òòB C
$str
òòC ]
,
òò] ^

connection
òò_ i
)
òòi j
)
òòj k
{
ôô 
command
öö #
.
öö# $
ExecuteNonQuery
öö$ 3
(
öö3 4
)
öö4 5
;
öö5 6
}
õõ 
}
úú 
}
ùù 
catch
ûû 
(
ûû 
SqlException
ûû #
	exceptSql
ûû$ -
)
ûû- .
{
üü 
IO
†† 
.
†† 
Logger
†† 
.
†† 
Log
†† !
(
††! "
NLog
††" &
.
††& '
LogLevel
††' /
.
††/ 0
Warn
††0 4
,
††4 5
$str
††6 V
,
††V W
	exceptSql
††X a
)
††a b
;
††b c
}
°° 
}
¢¢ 
}
££ 	
}
§§ 
private
ßß 
void
ßß 
GoodB2G2
ßß 
(
ßß 
)
ßß 
{
®® 
string
©© 
password
©© 
;
©© 
if
™™ 

(
™™  
PrivateReturnsTrue
™™ 
(
™™ 
)
™™  
)
™™  !
{
´´ 	
password
¨¨ 
=
¨¨ 
$str
¨¨ 
;
¨¨ 
{
ÆÆ 
TcpListener
ØØ 
listener
ØØ $
=
ØØ% &
null
ØØ' +
;
ØØ+ ,
try
∞∞ 
{
±± 
listener
≥≥ 
=
≥≥ 
new
≥≥ "
TcpListener
≥≥# .
(
≥≥. /
	IPAddress
≥≥/ 8
.
≥≥8 9
Parse
≥≥9 >
(
≥≥> ?
$str
≥≥? K
)
≥≥K L
,
≥≥L M
$num
≥≥N S
)
≥≥S T
;
≥≥T U
listener
¥¥ 
.
¥¥ 
Start
¥¥ "
(
¥¥" #
)
¥¥# $
;
¥¥$ %
using
µµ 
(
µµ 
	TcpClient
µµ $
tcpConn
µµ% ,
=
µµ- .
listener
µµ/ 7
.
µµ7 8
AcceptTcpClient
µµ8 G
(
µµG H
)
µµH I
)
µµI J
{
∂∂ 
using
∑∑ 
(
∑∑ 
StreamReader
∑∑ +
sr
∑∑, .
=
∑∑/ 0
new
∑∑1 4
StreamReader
∑∑5 A
(
∑∑A B
Console
∑∑B I
.
∑∑I J
OpenStandardInput
∑∑J [
(
∑∑[ \
)
∑∑\ ]
)
∑∑] ^
)
∑∑^ _
{
∏∏ 
password
∫∫ $
=
∫∫% &
sr
∫∫' )
.
∫∫) *
ReadLine
∫∫* 2
(
∫∫2 3
)
∫∫3 4
;
∫∫4 5
}
ªª 
}
ºº 
}
ΩΩ 
catch
ææ 
(
ææ 
IOException
ææ "
exceptIO
ææ# +
)
ææ+ ,
{
øø 
IO
¿¿ 
.
¿¿ 
Logger
¿¿ 
.
¿¿ 
Log
¿¿ !
(
¿¿! "
NLog
¿¿" &
.
¿¿& '
LogLevel
¿¿' /
.
¿¿/ 0
Warn
¿¿0 4
,
¿¿4 5
$str
¿¿6 Q
,
¿¿Q R
exceptIO
¿¿S [
)
¿¿[ \
;
¿¿\ ]
}
¡¡ 
finally
¬¬ 
{
√√ 
try
ƒƒ 
{
≈≈ 
if
∆∆ 
(
∆∆ 
listener
∆∆ $
!=
∆∆% '
null
∆∆( ,
)
∆∆, -
{
«« 
listener
»» $
.
»»$ %
Stop
»»% )
(
»») *
)
»»* +
;
»»+ ,
}
…… 
}
   
catch
ÀÀ 
(
ÀÀ 
IOException
ÀÀ &
exceptIO
ÀÀ' /
)
ÀÀ/ 0
{
ÃÃ 
IO
ÕÕ 
.
ÕÕ 
Logger
ÕÕ !
.
ÕÕ! "
Log
ÕÕ" %
(
ÕÕ% &
NLog
ÕÕ& *
.
ÕÕ* +
LogLevel
ÕÕ+ 3
.
ÕÕ3 4
Warn
ÕÕ4 8
,
ÕÕ8 9
$str
ÕÕ: U
,
ÕÕU V
exceptIO
ÕÕW _
)
ÕÕ_ `
;
ÕÕ` a
}
ŒŒ 
}
œœ 
}
–– 
}
—— 	
else
““ 
{
”” 	
password
÷÷ 
=
÷÷ 
null
÷÷ 
;
÷÷ 
}
◊◊ 	
if
ÿÿ 

(
ÿÿ  
PrivateReturnsTrue
ÿÿ 
(
ÿÿ 
)
ÿÿ  
)
ÿÿ  !
{
ŸŸ 	
if
⁄⁄ 
(
⁄⁄ 
password
⁄⁄ 
!=
⁄⁄ 
null
⁄⁄  
)
⁄⁄  !
{
€€ 
{
›› 
using
ﬁﬁ 
(
ﬁﬁ &
AesCryptoServiceProvider
ﬁﬁ 3
aesAlg
ﬁﬁ4 :
=
ﬁﬁ; <
new
ﬁﬁ= @&
AesCryptoServiceProvider
ﬁﬁA Y
(
ﬁﬁY Z
)
ﬁﬁZ [
)
ﬁﬁ[ \
{
ﬂﬂ 
aesAlg
‡‡ 
.
‡‡ 
Padding
‡‡ &
=
‡‡' (
PaddingMode
‡‡) 4
.
‡‡4 5
None
‡‡5 9
;
‡‡9 :
aesAlg
·· 
.
·· 
Key
·· "
=
··# $
Encoding
··% -
.
··- .
UTF8
··. 2
.
··2 3
GetBytes
··3 ;
(
··; <
$str
··< N
)
··N O
;
··O P
ICryptoTransform
„„ (
	decryptor
„„) 2
=
„„3 4
aesAlg
„„5 ;
.
„„; <
CreateDecryptor
„„< K
(
„„K L
aesAlg
„„L R
.
„„R S
Key
„„S V
,
„„V W
aesAlg
„„X ^
.
„„^ _
IV
„„_ a
)
„„a b
;
„„b c
using
ÂÂ 
(
ÂÂ 
MemoryStream
ÂÂ +
	msDecrypt
ÂÂ, 5
=
ÂÂ6 7
new
ÂÂ8 ;
MemoryStream
ÂÂ< H
(
ÂÂH I
Encoding
ÂÂI Q
.
ÂÂQ R
UTF8
ÂÂR V
.
ÂÂV W
GetBytes
ÂÂW _
(
ÂÂ_ `
password
ÂÂ` h
)
ÂÂh i
)
ÂÂi j
)
ÂÂj k
{
ÊÊ 
using
ÁÁ !
(
ÁÁ" #
CryptoStream
ÁÁ# /
	csDecrypt
ÁÁ0 9
=
ÁÁ: ;
new
ÁÁ< ?
CryptoStream
ÁÁ@ L
(
ÁÁL M
	msDecrypt
ÁÁM V
,
ÁÁV W
	decryptor
ÁÁX a
,
ÁÁa b
CryptoStreamMode
ÁÁc s
.
ÁÁs t
Read
ÁÁt x
)
ÁÁx y
)
ÁÁy z
{
ËË 
using
ÈÈ  %
(
ÈÈ& '
StreamReader
ÈÈ' 3
	srDecrypt
ÈÈ4 =
=
ÈÈ> ?
new
ÈÈ@ C
StreamReader
ÈÈD P
(
ÈÈP Q
	csDecrypt
ÈÈQ Z
)
ÈÈZ [
)
ÈÈ[ \
{
ÍÍ  !
password
ÌÌ$ ,
=
ÌÌ- .
	srDecrypt
ÌÌ/ 8
.
ÌÌ8 9
	ReadToEnd
ÌÌ9 B
(
ÌÌB C
)
ÌÌC D
;
ÌÌD E
}
ÓÓ  !
}
ÔÔ 
}
 
}
ÒÒ 
}
ÚÚ 
try
ÛÛ 
{
ÙÙ 
using
ˆˆ 
(
ˆˆ 
SqlConnection
ˆˆ (

connection
ˆˆ) 3
=
ˆˆ4 5
new
ˆˆ6 9
SqlConnection
ˆˆ: G
(
ˆˆG H
$str
ˆˆH ~
+ˆˆ Ä
$strˆˆÅ Ö
+ˆˆÜ á
$strˆˆà î
+ˆˆï ñ
passwordˆˆó ü
)ˆˆü †
)ˆˆ† °
{
˜˜ 

connection
¯¯ "
.
¯¯" #
Open
¯¯# '
(
¯¯' (
)
¯¯( )
;
¯¯) *
using
˘˘ 
(
˘˘ 

SqlCommand
˘˘ )
command
˘˘* 1
=
˘˘2 3
new
˘˘4 7

SqlCommand
˘˘8 B
(
˘˘B C
$str
˘˘C ]
,
˘˘] ^

connection
˘˘_ i
)
˘˘i j
)
˘˘j k
{
˙˙ 
command
˚˚ #
.
˚˚# $
ExecuteNonQuery
˚˚$ 3
(
˚˚3 4
)
˚˚4 5
;
˚˚5 6
}
¸¸ 
}
˝˝ 
}
˛˛ 
catch
ˇˇ 
(
ˇˇ 
SqlException
ˇˇ #
	exceptSql
ˇˇ$ -
)
ˇˇ- .
{
ÄÄ 
IO
ÅÅ 
.
ÅÅ 
Logger
ÅÅ 
.
ÅÅ 
Log
ÅÅ !
(
ÅÅ! "
NLog
ÅÅ" &
.
ÅÅ& '
LogLevel
ÅÅ' /
.
ÅÅ/ 0
Warn
ÅÅ0 4
,
ÅÅ4 5
$str
ÅÅ6 V
,
ÅÅV W
	exceptSql
ÅÅX a
)
ÅÅa b
;
ÅÅb c
}
ÇÇ 
}
ÉÉ 
}
ÑÑ 	
}
ÖÖ 
public
áá 

override
áá 
void
áá 
Good
áá 
(
áá 
)
áá 
{
àà 
GoodG2B1
ââ 
(
ââ 
)
ââ 
;
ââ 
GoodG2B2
ää 
(
ää 
)
ää 
;
ää 
GoodB2G1
ãã 
(
ãã 
)
ãã 
;
ãã 
GoodB2G2
åå 
(
åå 
)
åå 
;
åå 
}
çç 
}èè 
}êê Öº
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_09.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_09 E
:F G
AbstractTestCaseH X
{   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
string$$ 
password$$ 
;$$ 
if%% 

(%% 
IO%% 
.%%  
STATIC_READONLY_TRUE%% #
)%%# $
{&& 	
password'' 
='' 
$str'' 
;'' 
{)) 
TcpListener** 
listener** $
=**% &
null**' +
;**+ ,
try++ 
{,, 
listener.. 
=.. 
new.. "
TcpListener..# .
(... /
	IPAddress../ 8
...8 9
Parse..9 >
(..> ?
$str..? K
)..K L
,..L M
$num..N S
)..S T
;..T U
listener// 
.// 
Start// "
(//" #
)//# $
;//$ %
using00 
(00 
	TcpClient00 $
tcpConn00% ,
=00- .
listener00/ 7
.007 8
AcceptTcpClient008 G
(00G H
)00H I
)00I J
{11 
using22 
(22 
StreamReader22 +
sr22, .
=22/ 0
new221 4
StreamReader225 A
(22A B
Console22B I
.22I J
OpenStandardInput22J [
(22[ \
)22\ ]
)22] ^
)22^ _
{33 
password55 $
=55% &
sr55' )
.55) *
ReadLine55* 2
(552 3
)553 4
;554 5
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
$str;;6 Q
,;;Q R
exceptIO;;S [
);;[ \
;;;\ ]
}<< 
finally== 
{>> 
try?? 
{@@ 
ifAA 
(AA 
listenerAA $
!=AA% '
nullAA( ,
)AA, -
{BB 
listenerCC $
.CC$ %
StopCC% )
(CC) *
)CC* +
;CC+ ,
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF &
exceptIOFF' /
)FF/ 0
{GG 
IOHH 
.HH 
LoggerHH !
.HH! "
LogHH" %
(HH% &
NLogHH& *
.HH* +
LogLevelHH+ 3
.HH3 4
WarnHH4 8
,HH8 9
$strHH: U
,HHU V
exceptIOHHW _
)HH_ `
;HH` a
}II 
}JJ 
}KK 
}LL 	
elseMM 
{NN 	
passwordQQ 
=QQ 
nullQQ 
;QQ 
}RR 	
ifSS 

(SS 
IOSS 
.SS  
STATIC_READONLY_TRUESS #
)SS# $
{TT 	
tryUU 
{VV 
usingXX 
(XX 
SqlConnectionXX $

connectionXX% /
=XX0 1
newXX2 5
SqlConnectionXX6 C
(XXC D
$strXXD z
+XX{ |
$str	XX} Å
+
XXÇ É
$str
XXÑ ê
+
XXë í
password
XXì õ
)
XXõ ú
)
XXú ù
{YY 

connectionZZ 
.ZZ 
OpenZZ #
(ZZ# $
)ZZ$ %
;ZZ% &
using[[ 
([[ 

SqlCommand[[ %
command[[& -
=[[. /
new[[0 3

SqlCommand[[4 >
([[> ?
$str[[? Y
,[[Y Z

connection[[[ e
)[[e f
)[[f g
{\\ 
command]] 
.]]  
ExecuteNonQuery]]  /
(]]/ 0
)]]0 1
;]]1 2
}^^ 
}__ 
}`` 
catchaa 
(aa 
SqlExceptionaa 
	exceptSqlaa  )
)aa) *
{bb 
IOcc 
.cc 
Loggercc 
.cc 
Logcc 
(cc 
NLogcc "
.cc" #
LogLevelcc# +
.cc+ ,
Warncc, 0
,cc0 1
$strcc2 R
,ccR S
	exceptSqlccT ]
)cc] ^
;cc^ _
}dd 
}ee 	
}ff 
privatejj 
voidjj 
GoodG2B1jj 
(jj 
)jj 
{kk 
stringll 
passwordll 
;ll 
ifmm 

(mm 
IOmm 
.mm !
STATIC_READONLY_FALSEmm $
)mm$ %
{nn 	
passwordqq 
=qq 
nullqq 
;qq 
}rr 	
elsess 
{tt 	
passwordww 
=ww 
$strww &
;ww& '
}xx 	
ifyy 

(yy 
IOyy 
.yy  
STATIC_READONLY_TRUEyy #
)yy# $
{zz 	
try{{ 
{|| 
using~~ 
(~~ 
SqlConnection~~ $

connection~~% /
=~~0 1
new~~2 5
SqlConnection~~6 C
(~~C D
$str~~D z
+~~{ |
$str	~~} Å
+
~~Ç É
$str
~~Ñ ê
+
~~ë í
password
~~ì õ
)
~~õ ú
)
~~ú ù
{ 

connection
ÄÄ 
.
ÄÄ 
Open
ÄÄ #
(
ÄÄ# $
)
ÄÄ$ %
;
ÄÄ% &
using
ÅÅ 
(
ÅÅ 

SqlCommand
ÅÅ %
command
ÅÅ& -
=
ÅÅ. /
new
ÅÅ0 3

SqlCommand
ÅÅ4 >
(
ÅÅ> ?
$str
ÅÅ? Y
,
ÅÅY Z

connection
ÅÅ[ e
)
ÅÅe f
)
ÅÅf g
{
ÇÇ 
command
ÉÉ 
.
ÉÉ  
ExecuteNonQuery
ÉÉ  /
(
ÉÉ/ 0
)
ÉÉ0 1
;
ÉÉ1 2
}
ÑÑ 
}
ÖÖ 
}
ÜÜ 
catch
áá 
(
áá 
SqlException
áá 
	exceptSql
áá  )
)
áá) *
{
àà 
IO
ââ 
.
ââ 
Logger
ââ 
.
ââ 
Log
ââ 
(
ââ 
NLog
ââ "
.
ââ" #
LogLevel
ââ# +
.
ââ+ ,
Warn
ââ, 0
,
ââ0 1
$str
ââ2 R
,
ââR S
	exceptSql
ââT ]
)
ââ] ^
;
ââ^ _
}
ää 
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
string
ëë 
password
ëë 
;
ëë 
if
íí 

(
íí 
IO
íí 
.
íí "
STATIC_READONLY_TRUE
íí #
)
íí# $
{
ìì 	
password
ññ 
=
ññ 
$str
ññ &
;
ññ& '
}
óó 	
else
òò 
{
ôô 	
password
úú 
=
úú 
null
úú 
;
úú 
}
ùù 	
if
ûû 

(
ûû 
IO
ûû 
.
ûû "
STATIC_READONLY_TRUE
ûû #
)
ûû# $
{
üü 	
try
†† 
{
°° 
using
££ 
(
££ 
SqlConnection
££ $

connection
££% /
=
££0 1
new
££2 5
SqlConnection
££6 C
(
££C D
$str
££D z
+
££{ |
$str££} Å
+££Ç É
$str££Ñ ê
+££ë í
password££ì õ
)££õ ú
)££ú ù
{
§§ 

connection
•• 
.
•• 
Open
•• #
(
••# $
)
••$ %
;
••% &
using
¶¶ 
(
¶¶ 

SqlCommand
¶¶ %
command
¶¶& -
=
¶¶. /
new
¶¶0 3

SqlCommand
¶¶4 >
(
¶¶> ?
$str
¶¶? Y
,
¶¶Y Z

connection
¶¶[ e
)
¶¶e f
)
¶¶f g
{
ßß 
command
®® 
.
®®  
ExecuteNonQuery
®®  /
(
®®/ 0
)
®®0 1
;
®®1 2
}
©© 
}
™™ 
}
´´ 
catch
¨¨ 
(
¨¨ 
SqlException
¨¨ 
	exceptSql
¨¨  )
)
¨¨) *
{
≠≠ 
IO
ÆÆ 
.
ÆÆ 
Logger
ÆÆ 
.
ÆÆ 
Log
ÆÆ 
(
ÆÆ 
NLog
ÆÆ "
.
ÆÆ" #
LogLevel
ÆÆ# +
.
ÆÆ+ ,
Warn
ÆÆ, 0
,
ÆÆ0 1
$str
ÆÆ2 R
,
ÆÆR S
	exceptSql
ÆÆT ]
)
ÆÆ] ^
;
ÆÆ^ _
}
ØØ 
}
∞∞ 	
}
±± 
private
¥¥ 
void
¥¥ 
GoodB2G1
¥¥ 
(
¥¥ 
)
¥¥ 
{
µµ 
string
∂∂ 
password
∂∂ 
;
∂∂ 
if
∑∑ 

(
∑∑ 
IO
∑∑ 
.
∑∑ "
STATIC_READONLY_TRUE
∑∑ #
)
∑∑# $
{
∏∏ 	
password
ππ 
=
ππ 
$str
ππ 
;
ππ 
{
ªª 
TcpListener
ºº 
listener
ºº $
=
ºº% &
null
ºº' +
;
ºº+ ,
try
ΩΩ 
{
ææ 
listener
¿¿ 
=
¿¿ 
new
¿¿ "
TcpListener
¿¿# .
(
¿¿. /
	IPAddress
¿¿/ 8
.
¿¿8 9
Parse
¿¿9 >
(
¿¿> ?
$str
¿¿? K
)
¿¿K L
,
¿¿L M
$num
¿¿N S
)
¿¿S T
;
¿¿T U
listener
¡¡ 
.
¡¡ 
Start
¡¡ "
(
¡¡" #
)
¡¡# $
;
¡¡$ %
using
¬¬ 
(
¬¬ 
	TcpClient
¬¬ $
tcpConn
¬¬% ,
=
¬¬- .
listener
¬¬/ 7
.
¬¬7 8
AcceptTcpClient
¬¬8 G
(
¬¬G H
)
¬¬H I
)
¬¬I J
{
√√ 
using
ƒƒ 
(
ƒƒ 
StreamReader
ƒƒ +
sr
ƒƒ, .
=
ƒƒ/ 0
new
ƒƒ1 4
StreamReader
ƒƒ5 A
(
ƒƒA B
Console
ƒƒB I
.
ƒƒI J
OpenStandardInput
ƒƒJ [
(
ƒƒ[ \
)
ƒƒ\ ]
)
ƒƒ] ^
)
ƒƒ^ _
{
≈≈ 
password
«« $
=
««% &
sr
««' )
.
««) *
ReadLine
««* 2
(
««2 3
)
««3 4
;
««4 5
}
»» 
}
…… 
}
   
catch
ÀÀ 
(
ÀÀ 
IOException
ÀÀ "
exceptIO
ÀÀ# +
)
ÀÀ+ ,
{
ÃÃ 
IO
ÕÕ 
.
ÕÕ 
Logger
ÕÕ 
.
ÕÕ 
Log
ÕÕ !
(
ÕÕ! "
NLog
ÕÕ" &
.
ÕÕ& '
LogLevel
ÕÕ' /
.
ÕÕ/ 0
Warn
ÕÕ0 4
,
ÕÕ4 5
$str
ÕÕ6 Q
,
ÕÕQ R
exceptIO
ÕÕS [
)
ÕÕ[ \
;
ÕÕ\ ]
}
ŒŒ 
finally
œœ 
{
–– 
try
—— 
{
““ 
if
”” 
(
”” 
listener
”” $
!=
””% '
null
””( ,
)
””, -
{
‘‘ 
listener
’’ $
.
’’$ %
Stop
’’% )
(
’’) *
)
’’* +
;
’’+ ,
}
÷÷ 
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
IOException
ÿÿ &
exceptIO
ÿÿ' /
)
ÿÿ/ 0
{
ŸŸ 
IO
⁄⁄ 
.
⁄⁄ 
Logger
⁄⁄ !
.
⁄⁄! "
Log
⁄⁄" %
(
⁄⁄% &
NLog
⁄⁄& *
.
⁄⁄* +
LogLevel
⁄⁄+ 3
.
⁄⁄3 4
Warn
⁄⁄4 8
,
⁄⁄8 9
$str
⁄⁄: U
,
⁄⁄U V
exceptIO
⁄⁄W _
)
⁄⁄_ `
;
⁄⁄` a
}
€€ 
}
‹‹ 
}
›› 
}
ﬁﬁ 	
else
ﬂﬂ 
{
‡‡ 	
password
„„ 
=
„„ 
null
„„ 
;
„„ 
}
‰‰ 	
if
ÂÂ 

(
ÂÂ 
IO
ÂÂ 
.
ÂÂ #
STATIC_READONLY_FALSE
ÂÂ $
)
ÂÂ$ %
{
ÊÊ 	
IO
ËË 
.
ËË 
	WriteLine
ËË 
(
ËË 
$str
ËË /
)
ËË/ 0
;
ËË0 1
}
ÈÈ 	
else
ÍÍ 
{
ÎÎ 	
if
ÏÏ 
(
ÏÏ 
password
ÏÏ 
!=
ÏÏ 
null
ÏÏ  
)
ÏÏ  !
{
ÌÌ 
{
ÔÔ 
using
 
(
 &
AesCryptoServiceProvider
 3
aesAlg
4 :
=
; <
new
= @&
AesCryptoServiceProvider
A Y
(
Y Z
)
Z [
)
[ \
{
ÒÒ 
aesAlg
ÚÚ 
.
ÚÚ 
Padding
ÚÚ &
=
ÚÚ' (
PaddingMode
ÚÚ) 4
.
ÚÚ4 5
None
ÚÚ5 9
;
ÚÚ9 :
aesAlg
ÛÛ 
.
ÛÛ 
Key
ÛÛ "
=
ÛÛ# $
Encoding
ÛÛ% -
.
ÛÛ- .
UTF8
ÛÛ. 2
.
ÛÛ2 3
GetBytes
ÛÛ3 ;
(
ÛÛ; <
$str
ÛÛ< N
)
ÛÛN O
;
ÛÛO P
ICryptoTransform
ıı (
	decryptor
ıı) 2
=
ıı3 4
aesAlg
ıı5 ;
.
ıı; <
CreateDecryptor
ıı< K
(
ııK L
aesAlg
ııL R
.
ııR S
Key
ııS V
,
ııV W
aesAlg
ııX ^
.
ıı^ _
IV
ıı_ a
)
ııa b
;
ııb c
using
˜˜ 
(
˜˜ 
MemoryStream
˜˜ +
	msDecrypt
˜˜, 5
=
˜˜6 7
new
˜˜8 ;
MemoryStream
˜˜< H
(
˜˜H I
Encoding
˜˜I Q
.
˜˜Q R
UTF8
˜˜R V
.
˜˜V W
GetBytes
˜˜W _
(
˜˜_ `
password
˜˜` h
)
˜˜h i
)
˜˜i j
)
˜˜j k
{
¯¯ 
using
˘˘ !
(
˘˘" #
CryptoStream
˘˘# /
	csDecrypt
˘˘0 9
=
˘˘: ;
new
˘˘< ?
CryptoStream
˘˘@ L
(
˘˘L M
	msDecrypt
˘˘M V
,
˘˘V W
	decryptor
˘˘X a
,
˘˘a b
CryptoStreamMode
˘˘c s
.
˘˘s t
Read
˘˘t x
)
˘˘x y
)
˘˘y z
{
˙˙ 
using
˚˚  %
(
˚˚& '
StreamReader
˚˚' 3
	srDecrypt
˚˚4 =
=
˚˚> ?
new
˚˚@ C
StreamReader
˚˚D P
(
˚˚P Q
	csDecrypt
˚˚Q Z
)
˚˚Z [
)
˚˚[ \
{
¸¸  !
password
ˇˇ$ ,
=
ˇˇ- .
	srDecrypt
ˇˇ/ 8
.
ˇˇ8 9
	ReadToEnd
ˇˇ9 B
(
ˇˇB C
)
ˇˇC D
;
ˇˇD E
}
ÄÄ  !
}
ÅÅ 
}
ÇÇ 
}
ÉÉ 
}
ÑÑ 
try
ÖÖ 
{
ÜÜ 
using
àà 
(
àà 
SqlConnection
àà (

connection
àà) 3
=
àà4 5
new
àà6 9
SqlConnection
àà: G
(
ààG H
$str
ààH ~
+àà Ä
$strààÅ Ö
+ààÜ á
$strààà î
+ààï ñ
passwordààó ü
)ààü †
)àà† °
{
ââ 

connection
ää "
.
ää" #
Open
ää# '
(
ää' (
)
ää( )
;
ää) *
using
ãã 
(
ãã 

SqlCommand
ãã )
command
ãã* 1
=
ãã2 3
new
ãã4 7

SqlCommand
ãã8 B
(
ããB C
$str
ããC ]
,
ãã] ^

connection
ãã_ i
)
ããi j
)
ããj k
{
åå 
command
çç #
.
çç# $
ExecuteNonQuery
çç$ 3
(
çç3 4
)
çç4 5
;
çç5 6
}
éé 
}
èè 
}
êê 
catch
ëë 
(
ëë 
SqlException
ëë #
	exceptSql
ëë$ -
)
ëë- .
{
íí 
IO
ìì 
.
ìì 
Logger
ìì 
.
ìì 
Log
ìì !
(
ìì! "
NLog
ìì" &
.
ìì& '
LogLevel
ìì' /
.
ìì/ 0
Warn
ìì0 4
,
ìì4 5
$str
ìì6 V
,
ììV W
	exceptSql
ììX a
)
ììa b
;
ììb c
}
îî 
}
ïï 
}
ññ 	
}
óó 
private
öö 
void
öö 
GoodB2G2
öö 
(
öö 
)
öö 
{
õõ 
string
úú 
password
úú 
;
úú 
if
ùù 

(
ùù 
IO
ùù 
.
ùù "
STATIC_READONLY_TRUE
ùù #
)
ùù# $
{
ûû 	
password
üü 
=
üü 
$str
üü 
;
üü 
{
°° 
TcpListener
¢¢ 
listener
¢¢ $
=
¢¢% &
null
¢¢' +
;
¢¢+ ,
try
££ 
{
§§ 
listener
¶¶ 
=
¶¶ 
new
¶¶ "
TcpListener
¶¶# .
(
¶¶. /
	IPAddress
¶¶/ 8
.
¶¶8 9
Parse
¶¶9 >
(
¶¶> ?
$str
¶¶? K
)
¶¶K L
,
¶¶L M
$num
¶¶N S
)
¶¶S T
;
¶¶T U
listener
ßß 
.
ßß 
Start
ßß "
(
ßß" #
)
ßß# $
;
ßß$ %
using
®® 
(
®® 
	TcpClient
®® $
tcpConn
®®% ,
=
®®- .
listener
®®/ 7
.
®®7 8
AcceptTcpClient
®®8 G
(
®®G H
)
®®H I
)
®®I J
{
©© 
using
™™ 
(
™™ 
StreamReader
™™ +
sr
™™, .
=
™™/ 0
new
™™1 4
StreamReader
™™5 A
(
™™A B
Console
™™B I
.
™™I J
OpenStandardInput
™™J [
(
™™[ \
)
™™\ ]
)
™™] ^
)
™™^ _
{
´´ 
password
≠≠ $
=
≠≠% &
sr
≠≠' )
.
≠≠) *
ReadLine
≠≠* 2
(
≠≠2 3
)
≠≠3 4
;
≠≠4 5
}
ÆÆ 
}
ØØ 
}
∞∞ 
catch
±± 
(
±± 
IOException
±± "
exceptIO
±±# +
)
±±+ ,
{
≤≤ 
IO
≥≥ 
.
≥≥ 
Logger
≥≥ 
.
≥≥ 
Log
≥≥ !
(
≥≥! "
NLog
≥≥" &
.
≥≥& '
LogLevel
≥≥' /
.
≥≥/ 0
Warn
≥≥0 4
,
≥≥4 5
$str
≥≥6 Q
,
≥≥Q R
exceptIO
≥≥S [
)
≥≥[ \
;
≥≥\ ]
}
¥¥ 
finally
µµ 
{
∂∂ 
try
∑∑ 
{
∏∏ 
if
ππ 
(
ππ 
listener
ππ $
!=
ππ% '
null
ππ( ,
)
ππ, -
{
∫∫ 
listener
ªª $
.
ªª$ %
Stop
ªª% )
(
ªª) *
)
ªª* +
;
ªª+ ,
}
ºº 
}
ΩΩ 
catch
ææ 
(
ææ 
IOException
ææ &
exceptIO
ææ' /
)
ææ/ 0
{
øø 
IO
¿¿ 
.
¿¿ 
Logger
¿¿ !
.
¿¿! "
Log
¿¿" %
(
¿¿% &
NLog
¿¿& *
.
¿¿* +
LogLevel
¿¿+ 3
.
¿¿3 4
Warn
¿¿4 8
,
¿¿8 9
$str
¿¿: U
,
¿¿U V
exceptIO
¿¿W _
)
¿¿_ `
;
¿¿` a
}
¡¡ 
}
¬¬ 
}
√√ 
}
ƒƒ 	
else
≈≈ 
{
∆∆ 	
password
…… 
=
…… 
null
…… 
;
…… 
}
   	
if
ÀÀ 

(
ÀÀ 
IO
ÀÀ 
.
ÀÀ "
STATIC_READONLY_TRUE
ÀÀ #
)
ÀÀ# $
{
ÃÃ 	
if
ÕÕ 
(
ÕÕ 
password
ÕÕ 
!=
ÕÕ 
null
ÕÕ  
)
ÕÕ  !
{
ŒŒ 
{
–– 
using
—— 
(
—— &
AesCryptoServiceProvider
—— 3
aesAlg
——4 :
=
——; <
new
——= @&
AesCryptoServiceProvider
——A Y
(
——Y Z
)
——Z [
)
——[ \
{
““ 
aesAlg
”” 
.
”” 
Padding
”” &
=
””' (
PaddingMode
””) 4
.
””4 5
None
””5 9
;
””9 :
aesAlg
‘‘ 
.
‘‘ 
Key
‘‘ "
=
‘‘# $
Encoding
‘‘% -
.
‘‘- .
UTF8
‘‘. 2
.
‘‘2 3
GetBytes
‘‘3 ;
(
‘‘; <
$str
‘‘< N
)
‘‘N O
;
‘‘O P
ICryptoTransform
÷÷ (
	decryptor
÷÷) 2
=
÷÷3 4
aesAlg
÷÷5 ;
.
÷÷; <
CreateDecryptor
÷÷< K
(
÷÷K L
aesAlg
÷÷L R
.
÷÷R S
Key
÷÷S V
,
÷÷V W
aesAlg
÷÷X ^
.
÷÷^ _
IV
÷÷_ a
)
÷÷a b
;
÷÷b c
using
ÿÿ 
(
ÿÿ 
MemoryStream
ÿÿ +
	msDecrypt
ÿÿ, 5
=
ÿÿ6 7
new
ÿÿ8 ;
MemoryStream
ÿÿ< H
(
ÿÿH I
Encoding
ÿÿI Q
.
ÿÿQ R
UTF8
ÿÿR V
.
ÿÿV W
GetBytes
ÿÿW _
(
ÿÿ_ `
password
ÿÿ` h
)
ÿÿh i
)
ÿÿi j
)
ÿÿj k
{
ŸŸ 
using
⁄⁄ !
(
⁄⁄" #
CryptoStream
⁄⁄# /
	csDecrypt
⁄⁄0 9
=
⁄⁄: ;
new
⁄⁄< ?
CryptoStream
⁄⁄@ L
(
⁄⁄L M
	msDecrypt
⁄⁄M V
,
⁄⁄V W
	decryptor
⁄⁄X a
,
⁄⁄a b
CryptoStreamMode
⁄⁄c s
.
⁄⁄s t
Read
⁄⁄t x
)
⁄⁄x y
)
⁄⁄y z
{
€€ 
using
‹‹  %
(
‹‹& '
StreamReader
‹‹' 3
	srDecrypt
‹‹4 =
=
‹‹> ?
new
‹‹@ C
StreamReader
‹‹D P
(
‹‹P Q
	csDecrypt
‹‹Q Z
)
‹‹Z [
)
‹‹[ \
{
››  !
password
‡‡$ ,
=
‡‡- .
	srDecrypt
‡‡/ 8
.
‡‡8 9
	ReadToEnd
‡‡9 B
(
‡‡B C
)
‡‡C D
;
‡‡D E
}
··  !
}
‚‚ 
}
„„ 
}
‰‰ 
}
ÂÂ 
try
ÊÊ 
{
ÁÁ 
using
ÈÈ 
(
ÈÈ 
SqlConnection
ÈÈ (

connection
ÈÈ) 3
=
ÈÈ4 5
new
ÈÈ6 9
SqlConnection
ÈÈ: G
(
ÈÈG H
$str
ÈÈH ~
+ÈÈ Ä
$strÈÈÅ Ö
+ÈÈÜ á
$strÈÈà î
+ÈÈï ñ
passwordÈÈó ü
)ÈÈü †
)ÈÈ† °
{
ÍÍ 

connection
ÎÎ "
.
ÎÎ" #
Open
ÎÎ# '
(
ÎÎ' (
)
ÎÎ( )
;
ÎÎ) *
using
ÏÏ 
(
ÏÏ 

SqlCommand
ÏÏ )
command
ÏÏ* 1
=
ÏÏ2 3
new
ÏÏ4 7

SqlCommand
ÏÏ8 B
(
ÏÏB C
$str
ÏÏC ]
,
ÏÏ] ^

connection
ÏÏ_ i
)
ÏÏi j
)
ÏÏj k
{
ÌÌ 
command
ÓÓ #
.
ÓÓ# $
ExecuteNonQuery
ÓÓ$ 3
(
ÓÓ3 4
)
ÓÓ4 5
;
ÓÓ5 6
}
ÔÔ 
}
 
}
ÒÒ 
catch
ÚÚ 
(
ÚÚ 
SqlException
ÚÚ #
	exceptSql
ÚÚ$ -
)
ÚÚ- .
{
ÛÛ 
IO
ÙÙ 
.
ÙÙ 
Logger
ÙÙ 
.
ÙÙ 
Log
ÙÙ !
(
ÙÙ! "
NLog
ÙÙ" &
.
ÙÙ& '
LogLevel
ÙÙ' /
.
ÙÙ/ 0
Warn
ÙÙ0 4
,
ÙÙ4 5
$str
ÙÙ6 V
,
ÙÙV W
	exceptSql
ÙÙX a
)
ÙÙa b
;
ÙÙb c
}
ıı 
}
ˆˆ 
}
˜˜ 	
}
¯¯ 
public
˙˙ 

override
˙˙ 
void
˙˙ 
Good
˙˙ 
(
˙˙ 
)
˙˙ 
{
˚˚ 
GoodG2B1
¸¸ 
(
¸¸ 
)
¸¸ 
;
¸¸ 
GoodG2B2
˝˝ 
(
˝˝ 
)
˝˝ 
;
˝˝ 
GoodB2G1
˛˛ 
(
˛˛ 
)
˛˛ 
;
˛˛ 
GoodB2G2
ˇˇ 
(
ˇˇ 
)
ˇˇ 
;
ˇˇ 
}
ÄÄ 
}ÇÇ 
}ÉÉ °ª
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_10.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_10 E
:F G
AbstractTestCaseH X
{   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
string$$ 
password$$ 
;$$ 
if%% 

(%% 
IO%% 
.%% 

staticTrue%% 
)%% 
{&& 	
password'' 
='' 
$str'' 
;'' 
{)) 
TcpListener** 
listener** $
=**% &
null**' +
;**+ ,
try++ 
{,, 
listener.. 
=.. 
new.. "
TcpListener..# .
(... /
	IPAddress../ 8
...8 9
Parse..9 >
(..> ?
$str..? K
)..K L
,..L M
$num..N S
)..S T
;..T U
listener// 
.// 
Start// "
(//" #
)//# $
;//$ %
using00 
(00 
	TcpClient00 $
tcpConn00% ,
=00- .
listener00/ 7
.007 8
AcceptTcpClient008 G
(00G H
)00H I
)00I J
{11 
using22 
(22 
StreamReader22 +
sr22, .
=22/ 0
new221 4
StreamReader225 A
(22A B
Console22B I
.22I J
OpenStandardInput22J [
(22[ \
)22\ ]
)22] ^
)22^ _
{33 
password55 $
=55% &
sr55' )
.55) *
ReadLine55* 2
(552 3
)553 4
;554 5
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
$str;;6 Q
,;;Q R
exceptIO;;S [
);;[ \
;;;\ ]
}<< 
finally== 
{>> 
try?? 
{@@ 
ifAA 
(AA 
listenerAA $
!=AA% '
nullAA( ,
)AA, -
{BB 
listenerCC $
.CC$ %
StopCC% )
(CC) *
)CC* +
;CC+ ,
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF &
exceptIOFF' /
)FF/ 0
{GG 
IOHH 
.HH 
LoggerHH !
.HH! "
LogHH" %
(HH% &
NLogHH& *
.HH* +
LogLevelHH+ 3
.HH3 4
WarnHH4 8
,HH8 9
$strHH: U
,HHU V
exceptIOHHW _
)HH_ `
;HH` a
}II 
}JJ 
}KK 
}LL 	
elseMM 
{NN 	
passwordQQ 
=QQ 
nullQQ 
;QQ 
}RR 	
ifSS 

(SS 
IOSS 
.SS 

staticTrueSS 
)SS 
{TT 	
tryUU 
{VV 
usingXX 
(XX 
SqlConnectionXX $

connectionXX% /
=XX0 1
newXX2 5
SqlConnectionXX6 C
(XXC D
$strXXD z
+XX{ |
$str	XX} Å
+
XXÇ É
$str
XXÑ ê
+
XXë í
password
XXì õ
)
XXõ ú
)
XXú ù
{YY 

connectionZZ 
.ZZ 
OpenZZ #
(ZZ# $
)ZZ$ %
;ZZ% &
using[[ 
([[ 

SqlCommand[[ %
command[[& -
=[[. /
new[[0 3

SqlCommand[[4 >
([[> ?
$str[[? Y
,[[Y Z

connection[[[ e
)[[e f
)[[f g
{\\ 
command]] 
.]]  
ExecuteNonQuery]]  /
(]]/ 0
)]]0 1
;]]1 2
}^^ 
}__ 
}`` 
catchaa 
(aa 
SqlExceptionaa 
	exceptSqlaa  )
)aa) *
{bb 
IOcc 
.cc 
Loggercc 
.cc 
Logcc 
(cc 
NLogcc "
.cc" #
LogLevelcc# +
.cc+ ,
Warncc, 0
,cc0 1
$strcc2 R
,ccR S
	exceptSqlccT ]
)cc] ^
;cc^ _
}dd 
}ee 	
}ff 
privatejj 
voidjj 
GoodG2B1jj 
(jj 
)jj 
{kk 
stringll 
passwordll 
;ll 
ifmm 

(mm 
IOmm 
.mm 
staticFalsemm 
)mm 
{nn 	
passwordqq 
=qq 
nullqq 
;qq 
}rr 	
elsess 
{tt 	
passwordww 
=ww 
$strww &
;ww& '
}xx 	
ifyy 

(yy 
IOyy 
.yy 

staticTrueyy 
)yy 
{zz 	
try{{ 
{|| 
using~~ 
(~~ 
SqlConnection~~ $

connection~~% /
=~~0 1
new~~2 5
SqlConnection~~6 C
(~~C D
$str~~D z
+~~{ |
$str	~~} Å
+
~~Ç É
$str
~~Ñ ê
+
~~ë í
password
~~ì õ
)
~~õ ú
)
~~ú ù
{ 

connection
ÄÄ 
.
ÄÄ 
Open
ÄÄ #
(
ÄÄ# $
)
ÄÄ$ %
;
ÄÄ% &
using
ÅÅ 
(
ÅÅ 

SqlCommand
ÅÅ %
command
ÅÅ& -
=
ÅÅ. /
new
ÅÅ0 3

SqlCommand
ÅÅ4 >
(
ÅÅ> ?
$str
ÅÅ? Y
,
ÅÅY Z

connection
ÅÅ[ e
)
ÅÅe f
)
ÅÅf g
{
ÇÇ 
command
ÉÉ 
.
ÉÉ  
ExecuteNonQuery
ÉÉ  /
(
ÉÉ/ 0
)
ÉÉ0 1
;
ÉÉ1 2
}
ÑÑ 
}
ÖÖ 
}
ÜÜ 
catch
áá 
(
áá 
SqlException
áá 
	exceptSql
áá  )
)
áá) *
{
àà 
IO
ââ 
.
ââ 
Logger
ââ 
.
ââ 
Log
ââ 
(
ââ 
NLog
ââ "
.
ââ" #
LogLevel
ââ# +
.
ââ+ ,
Warn
ââ, 0
,
ââ0 1
$str
ââ2 R
,
ââR S
	exceptSql
ââT ]
)
ââ] ^
;
ââ^ _
}
ää 
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
string
ëë 
password
ëë 
;
ëë 
if
íí 

(
íí 
IO
íí 
.
íí 

staticTrue
íí 
)
íí 
{
ìì 	
password
ññ 
=
ññ 
$str
ññ &
;
ññ& '
}
óó 	
else
òò 
{
ôô 	
password
úú 
=
úú 
null
úú 
;
úú 
}
ùù 	
if
ûû 

(
ûû 
IO
ûû 
.
ûû 

staticTrue
ûû 
)
ûû 
{
üü 	
try
†† 
{
°° 
using
££ 
(
££ 
SqlConnection
££ $

connection
££% /
=
££0 1
new
££2 5
SqlConnection
££6 C
(
££C D
$str
££D z
+
££{ |
$str££} Å
+££Ç É
$str££Ñ ê
+££ë í
password££ì õ
)££õ ú
)££ú ù
{
§§ 

connection
•• 
.
•• 
Open
•• #
(
••# $
)
••$ %
;
••% &
using
¶¶ 
(
¶¶ 

SqlCommand
¶¶ %
command
¶¶& -
=
¶¶. /
new
¶¶0 3

SqlCommand
¶¶4 >
(
¶¶> ?
$str
¶¶? Y
,
¶¶Y Z

connection
¶¶[ e
)
¶¶e f
)
¶¶f g
{
ßß 
command
®® 
.
®®  
ExecuteNonQuery
®®  /
(
®®/ 0
)
®®0 1
;
®®1 2
}
©© 
}
™™ 
}
´´ 
catch
¨¨ 
(
¨¨ 
SqlException
¨¨ 
	exceptSql
¨¨  )
)
¨¨) *
{
≠≠ 
IO
ÆÆ 
.
ÆÆ 
Logger
ÆÆ 
.
ÆÆ 
Log
ÆÆ 
(
ÆÆ 
NLog
ÆÆ "
.
ÆÆ" #
LogLevel
ÆÆ# +
.
ÆÆ+ ,
Warn
ÆÆ, 0
,
ÆÆ0 1
$str
ÆÆ2 R
,
ÆÆR S
	exceptSql
ÆÆT ]
)
ÆÆ] ^
;
ÆÆ^ _
}
ØØ 
}
∞∞ 	
}
±± 
private
¥¥ 
void
¥¥ 
GoodB2G1
¥¥ 
(
¥¥ 
)
¥¥ 
{
µµ 
string
∂∂ 
password
∂∂ 
;
∂∂ 
if
∑∑ 

(
∑∑ 
IO
∑∑ 
.
∑∑ 

staticTrue
∑∑ 
)
∑∑ 
{
∏∏ 	
password
ππ 
=
ππ 
$str
ππ 
;
ππ 
{
ªª 
TcpListener
ºº 
listener
ºº $
=
ºº% &
null
ºº' +
;
ºº+ ,
try
ΩΩ 
{
ææ 
listener
¿¿ 
=
¿¿ 
new
¿¿ "
TcpListener
¿¿# .
(
¿¿. /
	IPAddress
¿¿/ 8
.
¿¿8 9
Parse
¿¿9 >
(
¿¿> ?
$str
¿¿? K
)
¿¿K L
,
¿¿L M
$num
¿¿N S
)
¿¿S T
;
¿¿T U
listener
¡¡ 
.
¡¡ 
Start
¡¡ "
(
¡¡" #
)
¡¡# $
;
¡¡$ %
using
¬¬ 
(
¬¬ 
	TcpClient
¬¬ $
tcpConn
¬¬% ,
=
¬¬- .
listener
¬¬/ 7
.
¬¬7 8
AcceptTcpClient
¬¬8 G
(
¬¬G H
)
¬¬H I
)
¬¬I J
{
√√ 
using
ƒƒ 
(
ƒƒ 
StreamReader
ƒƒ +
sr
ƒƒ, .
=
ƒƒ/ 0
new
ƒƒ1 4
StreamReader
ƒƒ5 A
(
ƒƒA B
Console
ƒƒB I
.
ƒƒI J
OpenStandardInput
ƒƒJ [
(
ƒƒ[ \
)
ƒƒ\ ]
)
ƒƒ] ^
)
ƒƒ^ _
{
≈≈ 
password
«« $
=
««% &
sr
««' )
.
««) *
ReadLine
««* 2
(
««2 3
)
««3 4
;
««4 5
}
»» 
}
…… 
}
   
catch
ÀÀ 
(
ÀÀ 
IOException
ÀÀ "
exceptIO
ÀÀ# +
)
ÀÀ+ ,
{
ÃÃ 
IO
ÕÕ 
.
ÕÕ 
Logger
ÕÕ 
.
ÕÕ 
Log
ÕÕ !
(
ÕÕ! "
NLog
ÕÕ" &
.
ÕÕ& '
LogLevel
ÕÕ' /
.
ÕÕ/ 0
Warn
ÕÕ0 4
,
ÕÕ4 5
$str
ÕÕ6 Q
,
ÕÕQ R
exceptIO
ÕÕS [
)
ÕÕ[ \
;
ÕÕ\ ]
}
ŒŒ 
finally
œœ 
{
–– 
try
—— 
{
““ 
if
”” 
(
”” 
listener
”” $
!=
””% '
null
””( ,
)
””, -
{
‘‘ 
listener
’’ $
.
’’$ %
Stop
’’% )
(
’’) *
)
’’* +
;
’’+ ,
}
÷÷ 
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
IOException
ÿÿ &
exceptIO
ÿÿ' /
)
ÿÿ/ 0
{
ŸŸ 
IO
⁄⁄ 
.
⁄⁄ 
Logger
⁄⁄ !
.
⁄⁄! "
Log
⁄⁄" %
(
⁄⁄% &
NLog
⁄⁄& *
.
⁄⁄* +
LogLevel
⁄⁄+ 3
.
⁄⁄3 4
Warn
⁄⁄4 8
,
⁄⁄8 9
$str
⁄⁄: U
,
⁄⁄U V
exceptIO
⁄⁄W _
)
⁄⁄_ `
;
⁄⁄` a
}
€€ 
}
‹‹ 
}
›› 
}
ﬁﬁ 	
else
ﬂﬂ 
{
‡‡ 	
password
„„ 
=
„„ 
null
„„ 
;
„„ 
}
‰‰ 	
if
ÂÂ 

(
ÂÂ 
IO
ÂÂ 
.
ÂÂ 
staticFalse
ÂÂ 
)
ÂÂ 
{
ÊÊ 	
IO
ËË 
.
ËË 
	WriteLine
ËË 
(
ËË 
$str
ËË /
)
ËË/ 0
;
ËË0 1
}
ÈÈ 	
else
ÍÍ 
{
ÎÎ 	
if
ÏÏ 
(
ÏÏ 
password
ÏÏ 
!=
ÏÏ 
null
ÏÏ  
)
ÏÏ  !
{
ÌÌ 
{
ÔÔ 
using
 
(
 &
AesCryptoServiceProvider
 3
aesAlg
4 :
=
; <
new
= @&
AesCryptoServiceProvider
A Y
(
Y Z
)
Z [
)
[ \
{
ÒÒ 
aesAlg
ÚÚ 
.
ÚÚ 
Padding
ÚÚ &
=
ÚÚ' (
PaddingMode
ÚÚ) 4
.
ÚÚ4 5
None
ÚÚ5 9
;
ÚÚ9 :
aesAlg
ÛÛ 
.
ÛÛ 
Key
ÛÛ "
=
ÛÛ# $
Encoding
ÛÛ% -
.
ÛÛ- .
UTF8
ÛÛ. 2
.
ÛÛ2 3
GetBytes
ÛÛ3 ;
(
ÛÛ; <
$str
ÛÛ< N
)
ÛÛN O
;
ÛÛO P
ICryptoTransform
ıı (
	decryptor
ıı) 2
=
ıı3 4
aesAlg
ıı5 ;
.
ıı; <
CreateDecryptor
ıı< K
(
ııK L
aesAlg
ııL R
.
ııR S
Key
ııS V
,
ııV W
aesAlg
ııX ^
.
ıı^ _
IV
ıı_ a
)
ııa b
;
ııb c
using
˜˜ 
(
˜˜ 
MemoryStream
˜˜ +
	msDecrypt
˜˜, 5
=
˜˜6 7
new
˜˜8 ;
MemoryStream
˜˜< H
(
˜˜H I
Encoding
˜˜I Q
.
˜˜Q R
UTF8
˜˜R V
.
˜˜V W
GetBytes
˜˜W _
(
˜˜_ `
password
˜˜` h
)
˜˜h i
)
˜˜i j
)
˜˜j k
{
¯¯ 
using
˘˘ !
(
˘˘" #
CryptoStream
˘˘# /
	csDecrypt
˘˘0 9
=
˘˘: ;
new
˘˘< ?
CryptoStream
˘˘@ L
(
˘˘L M
	msDecrypt
˘˘M V
,
˘˘V W
	decryptor
˘˘X a
,
˘˘a b
CryptoStreamMode
˘˘c s
.
˘˘s t
Read
˘˘t x
)
˘˘x y
)
˘˘y z
{
˙˙ 
using
˚˚  %
(
˚˚& '
StreamReader
˚˚' 3
	srDecrypt
˚˚4 =
=
˚˚> ?
new
˚˚@ C
StreamReader
˚˚D P
(
˚˚P Q
	csDecrypt
˚˚Q Z
)
˚˚Z [
)
˚˚[ \
{
¸¸  !
password
ˇˇ$ ,
=
ˇˇ- .
	srDecrypt
ˇˇ/ 8
.
ˇˇ8 9
	ReadToEnd
ˇˇ9 B
(
ˇˇB C
)
ˇˇC D
;
ˇˇD E
}
ÄÄ  !
}
ÅÅ 
}
ÇÇ 
}
ÉÉ 
}
ÑÑ 
try
ÖÖ 
{
ÜÜ 
using
àà 
(
àà 
SqlConnection
àà (

connection
àà) 3
=
àà4 5
new
àà6 9
SqlConnection
àà: G
(
ààG H
$str
ààH ~
+àà Ä
$strààÅ Ö
+ààÜ á
$strààà î
+ààï ñ
passwordààó ü
)ààü †
)àà† °
{
ââ 

connection
ää "
.
ää" #
Open
ää# '
(
ää' (
)
ää( )
;
ää) *
using
ãã 
(
ãã 

SqlCommand
ãã )
command
ãã* 1
=
ãã2 3
new
ãã4 7

SqlCommand
ãã8 B
(
ããB C
$str
ããC ]
,
ãã] ^

connection
ãã_ i
)
ããi j
)
ããj k
{
åå 
command
çç #
.
çç# $
ExecuteNonQuery
çç$ 3
(
çç3 4
)
çç4 5
;
çç5 6
}
éé 
}
èè 
}
êê 
catch
ëë 
(
ëë 
SqlException
ëë #
	exceptSql
ëë$ -
)
ëë- .
{
íí 
IO
ìì 
.
ìì 
Logger
ìì 
.
ìì 
Log
ìì !
(
ìì! "
NLog
ìì" &
.
ìì& '
LogLevel
ìì' /
.
ìì/ 0
Warn
ìì0 4
,
ìì4 5
$str
ìì6 V
,
ììV W
	exceptSql
ììX a
)
ììa b
;
ììb c
}
îî 
}
ïï 
}
ññ 	
}
óó 
private
öö 
void
öö 
GoodB2G2
öö 
(
öö 
)
öö 
{
õõ 
string
úú 
password
úú 
;
úú 
if
ùù 

(
ùù 
IO
ùù 
.
ùù 

staticTrue
ùù 
)
ùù 
{
ûû 	
password
üü 
=
üü 
$str
üü 
;
üü 
{
°° 
TcpListener
¢¢ 
listener
¢¢ $
=
¢¢% &
null
¢¢' +
;
¢¢+ ,
try
££ 
{
§§ 
listener
¶¶ 
=
¶¶ 
new
¶¶ "
TcpListener
¶¶# .
(
¶¶. /
	IPAddress
¶¶/ 8
.
¶¶8 9
Parse
¶¶9 >
(
¶¶> ?
$str
¶¶? K
)
¶¶K L
,
¶¶L M
$num
¶¶N S
)
¶¶S T
;
¶¶T U
listener
ßß 
.
ßß 
Start
ßß "
(
ßß" #
)
ßß# $
;
ßß$ %
using
®® 
(
®® 
	TcpClient
®® $
tcpConn
®®% ,
=
®®- .
listener
®®/ 7
.
®®7 8
AcceptTcpClient
®®8 G
(
®®G H
)
®®H I
)
®®I J
{
©© 
using
™™ 
(
™™ 
StreamReader
™™ +
sr
™™, .
=
™™/ 0
new
™™1 4
StreamReader
™™5 A
(
™™A B
Console
™™B I
.
™™I J
OpenStandardInput
™™J [
(
™™[ \
)
™™\ ]
)
™™] ^
)
™™^ _
{
´´ 
password
≠≠ $
=
≠≠% &
sr
≠≠' )
.
≠≠) *
ReadLine
≠≠* 2
(
≠≠2 3
)
≠≠3 4
;
≠≠4 5
}
ÆÆ 
}
ØØ 
}
∞∞ 
catch
±± 
(
±± 
IOException
±± "
exceptIO
±±# +
)
±±+ ,
{
≤≤ 
IO
≥≥ 
.
≥≥ 
Logger
≥≥ 
.
≥≥ 
Log
≥≥ !
(
≥≥! "
NLog
≥≥" &
.
≥≥& '
LogLevel
≥≥' /
.
≥≥/ 0
Warn
≥≥0 4
,
≥≥4 5
$str
≥≥6 Q
,
≥≥Q R
exceptIO
≥≥S [
)
≥≥[ \
;
≥≥\ ]
}
¥¥ 
finally
µµ 
{
∂∂ 
try
∑∑ 
{
∏∏ 
if
ππ 
(
ππ 
listener
ππ $
!=
ππ% '
null
ππ( ,
)
ππ, -
{
∫∫ 
listener
ªª $
.
ªª$ %
Stop
ªª% )
(
ªª) *
)
ªª* +
;
ªª+ ,
}
ºº 
}
ΩΩ 
catch
ææ 
(
ææ 
IOException
ææ &
exceptIO
ææ' /
)
ææ/ 0
{
øø 
IO
¿¿ 
.
¿¿ 
Logger
¿¿ !
.
¿¿! "
Log
¿¿" %
(
¿¿% &
NLog
¿¿& *
.
¿¿* +
LogLevel
¿¿+ 3
.
¿¿3 4
Warn
¿¿4 8
,
¿¿8 9
$str
¿¿: U
,
¿¿U V
exceptIO
¿¿W _
)
¿¿_ `
;
¿¿` a
}
¡¡ 
}
¬¬ 
}
√√ 
}
ƒƒ 	
else
≈≈ 
{
∆∆ 	
password
…… 
=
…… 
null
…… 
;
…… 
}
   	
if
ÀÀ 

(
ÀÀ 
IO
ÀÀ 
.
ÀÀ 

staticTrue
ÀÀ 
)
ÀÀ 
{
ÃÃ 	
if
ÕÕ 
(
ÕÕ 
password
ÕÕ 
!=
ÕÕ 
null
ÕÕ  
)
ÕÕ  !
{
ŒŒ 
{
–– 
using
—— 
(
—— &
AesCryptoServiceProvider
—— 3
aesAlg
——4 :
=
——; <
new
——= @&
AesCryptoServiceProvider
——A Y
(
——Y Z
)
——Z [
)
——[ \
{
““ 
aesAlg
”” 
.
”” 
Padding
”” &
=
””' (
PaddingMode
””) 4
.
””4 5
None
””5 9
;
””9 :
aesAlg
‘‘ 
.
‘‘ 
Key
‘‘ "
=
‘‘# $
Encoding
‘‘% -
.
‘‘- .
UTF8
‘‘. 2
.
‘‘2 3
GetBytes
‘‘3 ;
(
‘‘; <
$str
‘‘< N
)
‘‘N O
;
‘‘O P
ICryptoTransform
÷÷ (
	decryptor
÷÷) 2
=
÷÷3 4
aesAlg
÷÷5 ;
.
÷÷; <
CreateDecryptor
÷÷< K
(
÷÷K L
aesAlg
÷÷L R
.
÷÷R S
Key
÷÷S V
,
÷÷V W
aesAlg
÷÷X ^
.
÷÷^ _
IV
÷÷_ a
)
÷÷a b
;
÷÷b c
using
ÿÿ 
(
ÿÿ 
MemoryStream
ÿÿ +
	msDecrypt
ÿÿ, 5
=
ÿÿ6 7
new
ÿÿ8 ;
MemoryStream
ÿÿ< H
(
ÿÿH I
Encoding
ÿÿI Q
.
ÿÿQ R
UTF8
ÿÿR V
.
ÿÿV W
GetBytes
ÿÿW _
(
ÿÿ_ `
password
ÿÿ` h
)
ÿÿh i
)
ÿÿi j
)
ÿÿj k
{
ŸŸ 
using
⁄⁄ !
(
⁄⁄" #
CryptoStream
⁄⁄# /
	csDecrypt
⁄⁄0 9
=
⁄⁄: ;
new
⁄⁄< ?
CryptoStream
⁄⁄@ L
(
⁄⁄L M
	msDecrypt
⁄⁄M V
,
⁄⁄V W
	decryptor
⁄⁄X a
,
⁄⁄a b
CryptoStreamMode
⁄⁄c s
.
⁄⁄s t
Read
⁄⁄t x
)
⁄⁄x y
)
⁄⁄y z
{
€€ 
using
‹‹  %
(
‹‹& '
StreamReader
‹‹' 3
	srDecrypt
‹‹4 =
=
‹‹> ?
new
‹‹@ C
StreamReader
‹‹D P
(
‹‹P Q
	csDecrypt
‹‹Q Z
)
‹‹Z [
)
‹‹[ \
{
››  !
password
‡‡$ ,
=
‡‡- .
	srDecrypt
‡‡/ 8
.
‡‡8 9
	ReadToEnd
‡‡9 B
(
‡‡B C
)
‡‡C D
;
‡‡D E
}
··  !
}
‚‚ 
}
„„ 
}
‰‰ 
}
ÂÂ 
try
ÊÊ 
{
ÁÁ 
using
ÈÈ 
(
ÈÈ 
SqlConnection
ÈÈ (

connection
ÈÈ) 3
=
ÈÈ4 5
new
ÈÈ6 9
SqlConnection
ÈÈ: G
(
ÈÈG H
$str
ÈÈH ~
+ÈÈ Ä
$strÈÈÅ Ö
+ÈÈÜ á
$strÈÈà î
+ÈÈï ñ
passwordÈÈó ü
)ÈÈü †
)ÈÈ† °
{
ÍÍ 

connection
ÎÎ "
.
ÎÎ" #
Open
ÎÎ# '
(
ÎÎ' (
)
ÎÎ( )
;
ÎÎ) *
using
ÏÏ 
(
ÏÏ 

SqlCommand
ÏÏ )
command
ÏÏ* 1
=
ÏÏ2 3
new
ÏÏ4 7

SqlCommand
ÏÏ8 B
(
ÏÏB C
$str
ÏÏC ]
,
ÏÏ] ^

connection
ÏÏ_ i
)
ÏÏi j
)
ÏÏj k
{
ÌÌ 
command
ÓÓ #
.
ÓÓ# $
ExecuteNonQuery
ÓÓ$ 3
(
ÓÓ3 4
)
ÓÓ4 5
;
ÓÓ5 6
}
ÔÔ 
}
 
}
ÒÒ 
catch
ÚÚ 
(
ÚÚ 
SqlException
ÚÚ #
	exceptSql
ÚÚ$ -
)
ÚÚ- .
{
ÛÛ 
IO
ÙÙ 
.
ÙÙ 
Logger
ÙÙ 
.
ÙÙ 
Log
ÙÙ !
(
ÙÙ! "
NLog
ÙÙ" &
.
ÙÙ& '
LogLevel
ÙÙ' /
.
ÙÙ/ 0
Warn
ÙÙ0 4
,
ÙÙ4 5
$str
ÙÙ6 V
,
ÙÙV W
	exceptSql
ÙÙX a
)
ÙÙa b
;
ÙÙb c
}
ıı 
}
ˆˆ 
}
˜˜ 	
}
¯¯ 
public
˙˙ 

override
˙˙ 
void
˙˙ 
Good
˙˙ 
(
˙˙ 
)
˙˙ 
{
˚˚ 
GoodG2B1
¸¸ 
(
¸¸ 
)
¸¸ 
;
¸¸ 
GoodG2B2
˝˝ 
(
˝˝ 
)
˝˝ 
;
˝˝ 
GoodB2G1
˛˛ 
(
˛˛ 
)
˛˛ 
;
˛˛ 
GoodB2G2
ˇˇ 
(
ˇˇ 
)
ˇˇ 
;
ˇˇ 
}
ÄÄ 
}ÇÇ 
}ÉÉ ´æ
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_11.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_11 E
:F G
AbstractTestCaseH X
{   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
string$$ 
password$$ 
;$$ 
if%% 

(%% 
IO%% 
.%% 
StaticReturnsTrue%%  
(%%  !
)%%! "
)%%" #
{&& 	
password'' 
='' 
$str'' 
;'' 
{)) 
TcpListener** 
listener** $
=**% &
null**' +
;**+ ,
try++ 
{,, 
listener.. 
=.. 
new.. "
TcpListener..# .
(... /
	IPAddress../ 8
...8 9
Parse..9 >
(..> ?
$str..? K
)..K L
,..L M
$num..N S
)..S T
;..T U
listener// 
.// 
Start// "
(//" #
)//# $
;//$ %
using00 
(00 
	TcpClient00 $
tcpConn00% ,
=00- .
listener00/ 7
.007 8
AcceptTcpClient008 G
(00G H
)00H I
)00I J
{11 
using22 
(22 
StreamReader22 +
sr22, .
=22/ 0
new221 4
StreamReader225 A
(22A B
Console22B I
.22I J
OpenStandardInput22J [
(22[ \
)22\ ]
)22] ^
)22^ _
{33 
password55 $
=55% &
sr55' )
.55) *
ReadLine55* 2
(552 3
)553 4
;554 5
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
$str;;6 Q
,;;Q R
exceptIO;;S [
);;[ \
;;;\ ]
}<< 
finally== 
{>> 
try?? 
{@@ 
ifAA 
(AA 
listenerAA $
!=AA% '
nullAA( ,
)AA, -
{BB 
listenerCC $
.CC$ %
StopCC% )
(CC) *
)CC* +
;CC+ ,
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF &
exceptIOFF' /
)FF/ 0
{GG 
IOHH 
.HH 
LoggerHH !
.HH! "
LogHH" %
(HH% &
NLogHH& *
.HH* +
LogLevelHH+ 3
.HH3 4
WarnHH4 8
,HH8 9
$strHH: U
,HHU V
exceptIOHHW _
)HH_ `
;HH` a
}II 
}JJ 
}KK 
}LL 	
elseMM 
{NN 	
passwordQQ 
=QQ 
nullQQ 
;QQ 
}RR 	
ifSS 

(SS
 
IOSS 
.SS 
StaticReturnsTrueSS 
(SS  
)SS  !
)SS! "
{TT 	
tryUU 
{VV 
usingXX 
(XX 
SqlConnectionXX $

connectionXX% /
=XX0 1
newXX2 5
SqlConnectionXX6 C
(XXC D
$strXXD z
+XX{ |
$str	XX} Å
+
XXÇ É
$str
XXÑ ê
+
XXë í
password
XXì õ
)
XXõ ú
)
XXú ù
{YY 

connectionZZ 
.ZZ 
OpenZZ #
(ZZ# $
)ZZ$ %
;ZZ% &
using[[ 
([[ 

SqlCommand[[ %
command[[& -
=[[. /
new[[0 3

SqlCommand[[4 >
([[> ?
$str[[? Y
,[[Y Z

connection[[[ e
)[[e f
)[[f g
{\\ 
command]] 
.]]  
ExecuteNonQuery]]  /
(]]/ 0
)]]0 1
;]]1 2
}^^ 
}__ 
}`` 
catchaa 
(aa 
SqlExceptionaa 
	exceptSqlaa  )
)aa) *
{bb 
IOcc 
.cc 
Loggercc 
.cc 
Logcc 
(cc 
NLogcc "
.cc" #
LogLevelcc# +
.cc+ ,
Warncc, 0
,cc0 1
$strcc2 R
,ccR S
	exceptSqlccT ]
)cc] ^
;cc^ _
}dd 
}ee 	
}ff 
privatejj 
voidjj 
GoodG2B1jj 
(jj 
)jj 
{kk 
stringll 
passwordll 
;ll 
ifmm 

(mm 
IOmm 
.mm 
StaticReturnsFalsemm !
(mm! "
)mm" #
)mm# $
{nn 	
passwordqq 
=qq 
nullqq 
;qq 
}rr 	
elsess 
{tt 	
passwordww 
=ww 
$strww &
;ww& '
}xx 	
ifyy 

(yy 
IOyy 
.yy 
StaticReturnsTrueyy  
(yy  !
)yy! "
)yy" #
{zz 	
try{{ 
{|| 
using~~ 
(~~ 
SqlConnection~~ $

connection~~% /
=~~0 1
new~~2 5
SqlConnection~~6 C
(~~C D
$str~~D z
+~~{ |
$str	~~} Å
+
~~Ç É
$str
~~Ñ ê
+
~~ë í
password
~~ì õ
)
~~õ ú
)
~~ú ù
{ 

connection
ÄÄ 
.
ÄÄ 
Open
ÄÄ #
(
ÄÄ# $
)
ÄÄ$ %
;
ÄÄ% &
using
ÅÅ 
(
ÅÅ 

SqlCommand
ÅÅ %
command
ÅÅ& -
=
ÅÅ. /
new
ÅÅ0 3

SqlCommand
ÅÅ4 >
(
ÅÅ> ?
$str
ÅÅ? Y
,
ÅÅY Z

connection
ÅÅ[ e
)
ÅÅe f
)
ÅÅf g
{
ÇÇ 
command
ÉÉ 
.
ÉÉ  
ExecuteNonQuery
ÉÉ  /
(
ÉÉ/ 0
)
ÉÉ0 1
;
ÉÉ1 2
}
ÑÑ 
}
ÖÖ 
}
ÜÜ 
catch
áá 
(
áá 
SqlException
áá 
	exceptSql
áá  )
)
áá) *
{
àà 
IO
ââ 
.
ââ 
Logger
ââ 
.
ââ 
Log
ââ 
(
ââ 
NLog
ââ "
.
ââ" #
LogLevel
ââ# +
.
ââ+ ,
Warn
ââ, 0
,
ââ0 1
$str
ââ2 R
,
ââR S
	exceptSql
ââT ]
)
ââ] ^
;
ââ^ _
}
ää 
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
string
ëë 
password
ëë 
;
ëë 
if
íí 

(
íí 
IO
íí 
.
íí 
StaticReturnsTrue
íí  
(
íí  !
)
íí! "
)
íí" #
{
ìì 	
password
ññ 
=
ññ 
$str
ññ &
;
ññ& '
}
óó 	
else
òò 
{
ôô 	
password
úú 
=
úú 
null
úú 
;
úú 
}
ùù 	
if
ûû 

(
ûû 
IO
ûû 
.
ûû 
StaticReturnsTrue
ûû  
(
ûû  !
)
ûû! "
)
ûû" #
{
üü 	
try
†† 
{
°° 
using
££ 
(
££ 
SqlConnection
££ $

connection
££% /
=
££0 1
new
££2 5
SqlConnection
££6 C
(
££C D
$str
££D z
+
££{ |
$str££} Å
+££Ç É
$str££Ñ ê
+££ë í
password££ì õ
)££õ ú
)££ú ù
{
§§ 

connection
•• 
.
•• 
Open
•• #
(
••# $
)
••$ %
;
••% &
using
¶¶ 
(
¶¶ 

SqlCommand
¶¶ %
command
¶¶& -
=
¶¶. /
new
¶¶0 3

SqlCommand
¶¶4 >
(
¶¶> ?
$str
¶¶? Y
,
¶¶Y Z

connection
¶¶[ e
)
¶¶e f
)
¶¶f g
{
ßß 
command
®® 
.
®®  
ExecuteNonQuery
®®  /
(
®®/ 0
)
®®0 1
;
®®1 2
}
©© 
}
™™ 
}
´´ 
catch
¨¨ 
(
¨¨ 
SqlException
¨¨ 
	exceptSql
¨¨  )
)
¨¨) *
{
≠≠ 
IO
ÆÆ 
.
ÆÆ 
Logger
ÆÆ 
.
ÆÆ 
Log
ÆÆ 
(
ÆÆ 
NLog
ÆÆ "
.
ÆÆ" #
LogLevel
ÆÆ# +
.
ÆÆ+ ,
Warn
ÆÆ, 0
,
ÆÆ0 1
$str
ÆÆ2 R
,
ÆÆR S
	exceptSql
ÆÆT ]
)
ÆÆ] ^
;
ÆÆ^ _
}
ØØ 
}
∞∞ 	
}
±± 
private
¥¥ 
void
¥¥ 
GoodB2G1
¥¥ 
(
¥¥ 
)
¥¥ 
{
µµ 
string
∂∂ 
password
∂∂ 
;
∂∂ 
if
∑∑ 

(
∑∑ 
IO
∑∑ 
.
∑∑ 
StaticReturnsTrue
∑∑  
(
∑∑  !
)
∑∑! "
)
∑∑" #
{
∏∏ 	
password
ππ 
=
ππ 
$str
ππ 
;
ππ 
{
ªª 
TcpListener
ºº 
listener
ºº $
=
ºº% &
null
ºº' +
;
ºº+ ,
try
ΩΩ 
{
ææ 
listener
¿¿ 
=
¿¿ 
new
¿¿ "
TcpListener
¿¿# .
(
¿¿. /
	IPAddress
¿¿/ 8
.
¿¿8 9
Parse
¿¿9 >
(
¿¿> ?
$str
¿¿? K
)
¿¿K L
,
¿¿L M
$num
¿¿N S
)
¿¿S T
;
¿¿T U
listener
¡¡ 
.
¡¡ 
Start
¡¡ "
(
¡¡" #
)
¡¡# $
;
¡¡$ %
using
¬¬ 
(
¬¬ 
	TcpClient
¬¬ $
tcpConn
¬¬% ,
=
¬¬- .
listener
¬¬/ 7
.
¬¬7 8
AcceptTcpClient
¬¬8 G
(
¬¬G H
)
¬¬H I
)
¬¬I J
{
√√ 
using
ƒƒ 
(
ƒƒ 
StreamReader
ƒƒ +
sr
ƒƒ, .
=
ƒƒ/ 0
new
ƒƒ1 4
StreamReader
ƒƒ5 A
(
ƒƒA B
Console
ƒƒB I
.
ƒƒI J
OpenStandardInput
ƒƒJ [
(
ƒƒ[ \
)
ƒƒ\ ]
)
ƒƒ] ^
)
ƒƒ^ _
{
≈≈ 
password
«« $
=
««% &
sr
««' )
.
««) *
ReadLine
««* 2
(
««2 3
)
««3 4
;
««4 5
}
»» 
}
…… 
}
   
catch
ÀÀ 
(
ÀÀ 
IOException
ÀÀ "
exceptIO
ÀÀ# +
)
ÀÀ+ ,
{
ÃÃ 
IO
ÕÕ 
.
ÕÕ 
Logger
ÕÕ 
.
ÕÕ 
Log
ÕÕ !
(
ÕÕ! "
NLog
ÕÕ" &
.
ÕÕ& '
LogLevel
ÕÕ' /
.
ÕÕ/ 0
Warn
ÕÕ0 4
,
ÕÕ4 5
$str
ÕÕ6 Q
,
ÕÕQ R
exceptIO
ÕÕS [
)
ÕÕ[ \
;
ÕÕ\ ]
}
ŒŒ 
finally
œœ 
{
–– 
try
—— 
{
““ 
if
”” 
(
”” 
listener
”” $
!=
””% '
null
””( ,
)
””, -
{
‘‘ 
listener
’’ $
.
’’$ %
Stop
’’% )
(
’’) *
)
’’* +
;
’’+ ,
}
÷÷ 
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
IOException
ÿÿ &
exceptIO
ÿÿ' /
)
ÿÿ/ 0
{
ŸŸ 
IO
⁄⁄ 
.
⁄⁄ 
Logger
⁄⁄ !
.
⁄⁄! "
Log
⁄⁄" %
(
⁄⁄% &
NLog
⁄⁄& *
.
⁄⁄* +
LogLevel
⁄⁄+ 3
.
⁄⁄3 4
Warn
⁄⁄4 8
,
⁄⁄8 9
$str
⁄⁄: U
,
⁄⁄U V
exceptIO
⁄⁄W _
)
⁄⁄_ `
;
⁄⁄` a
}
€€ 
}
‹‹ 
}
›› 
}
ﬁﬁ 	
else
ﬂﬂ 
{
‡‡ 	
password
„„ 
=
„„ 
null
„„ 
;
„„ 
}
‰‰ 	
if
ÂÂ 

(
ÂÂ 
IO
ÂÂ 
.
ÂÂ  
StaticReturnsFalse
ÂÂ !
(
ÂÂ! "
)
ÂÂ" #
)
ÂÂ# $
{
ÊÊ 	
IO
ËË 
.
ËË 
	WriteLine
ËË 
(
ËË 
$str
ËË /
)
ËË/ 0
;
ËË0 1
}
ÈÈ 	
else
ÍÍ 
{
ÎÎ 	
if
ÏÏ 
(
ÏÏ 
password
ÏÏ 
!=
ÏÏ 
null
ÏÏ  
)
ÏÏ  !
{
ÌÌ 
{
ÔÔ 
using
 
(
 &
AesCryptoServiceProvider
 3
aesAlg
4 :
=
; <
new
= @&
AesCryptoServiceProvider
A Y
(
Y Z
)
Z [
)
[ \
{
ÒÒ 
aesAlg
ÚÚ 
.
ÚÚ 
Padding
ÚÚ &
=
ÚÚ' (
PaddingMode
ÚÚ) 4
.
ÚÚ4 5
None
ÚÚ5 9
;
ÚÚ9 :
aesAlg
ÛÛ 
.
ÛÛ 
Key
ÛÛ "
=
ÛÛ# $
Encoding
ÛÛ% -
.
ÛÛ- .
UTF8
ÛÛ. 2
.
ÛÛ2 3
GetBytes
ÛÛ3 ;
(
ÛÛ; <
$str
ÛÛ< N
)
ÛÛN O
;
ÛÛO P
ICryptoTransform
ıı (
	decryptor
ıı) 2
=
ıı3 4
aesAlg
ıı5 ;
.
ıı; <
CreateDecryptor
ıı< K
(
ııK L
aesAlg
ııL R
.
ııR S
Key
ııS V
,
ııV W
aesAlg
ııX ^
.
ıı^ _
IV
ıı_ a
)
ııa b
;
ııb c
using
˜˜ 
(
˜˜ 
MemoryStream
˜˜ +
	msDecrypt
˜˜, 5
=
˜˜6 7
new
˜˜8 ;
MemoryStream
˜˜< H
(
˜˜H I
Encoding
˜˜I Q
.
˜˜Q R
UTF8
˜˜R V
.
˜˜V W
GetBytes
˜˜W _
(
˜˜_ `
password
˜˜` h
)
˜˜h i
)
˜˜i j
)
˜˜j k
{
¯¯ 
using
˘˘ !
(
˘˘" #
CryptoStream
˘˘# /
	csDecrypt
˘˘0 9
=
˘˘: ;
new
˘˘< ?
CryptoStream
˘˘@ L
(
˘˘L M
	msDecrypt
˘˘M V
,
˘˘V W
	decryptor
˘˘X a
,
˘˘a b
CryptoStreamMode
˘˘c s
.
˘˘s t
Read
˘˘t x
)
˘˘x y
)
˘˘y z
{
˙˙ 
using
˚˚  %
(
˚˚& '
StreamReader
˚˚' 3
	srDecrypt
˚˚4 =
=
˚˚> ?
new
˚˚@ C
StreamReader
˚˚D P
(
˚˚P Q
	csDecrypt
˚˚Q Z
)
˚˚Z [
)
˚˚[ \
{
¸¸  !
password
ˇˇ$ ,
=
ˇˇ- .
	srDecrypt
ˇˇ/ 8
.
ˇˇ8 9
	ReadToEnd
ˇˇ9 B
(
ˇˇB C
)
ˇˇC D
;
ˇˇD E
}
ÄÄ  !
}
ÅÅ 
}
ÇÇ 
}
ÉÉ 
}
ÑÑ 
try
ÖÖ 
{
ÜÜ 
using
àà 
(
àà 
SqlConnection
àà (

connection
àà) 3
=
àà4 5
new
àà6 9
SqlConnection
àà: G
(
ààG H
$str
ààH ~
+àà Ä
$strààÅ Ö
+ààÜ á
$strààà î
+ààï ñ
passwordààó ü
)ààü †
)àà† °
{
ââ 

connection
ää "
.
ää" #
Open
ää# '
(
ää' (
)
ää( )
;
ää) *
using
ãã 
(
ãã 

SqlCommand
ãã )
command
ãã* 1
=
ãã2 3
new
ãã4 7

SqlCommand
ãã8 B
(
ããB C
$str
ããC ]
,
ãã] ^

connection
ãã_ i
)
ããi j
)
ããj k
{
åå 
command
çç #
.
çç# $
ExecuteNonQuery
çç$ 3
(
çç3 4
)
çç4 5
;
çç5 6
}
éé 
}
èè 
}
êê 
catch
ëë 
(
ëë 
SqlException
ëë #
	exceptSql
ëë$ -
)
ëë- .
{
íí 
IO
ìì 
.
ìì 
Logger
ìì 
.
ìì 
Log
ìì !
(
ìì! "
NLog
ìì" &
.
ìì& '
LogLevel
ìì' /
.
ìì/ 0
Warn
ìì0 4
,
ìì4 5
$str
ìì6 V
,
ììV W
	exceptSql
ììX a
)
ììa b
;
ììb c
}
îî 
}
ïï 
}
ññ 	
}
óó 
private
öö 
void
öö 
GoodB2G2
öö 
(
öö 
)
öö 
{
õõ 
string
úú 
password
úú 
;
úú 
if
ùù 

(
ùù 
IO
ùù 
.
ùù 
StaticReturnsTrue
ùù  
(
ùù  !
)
ùù! "
)
ùù" #
{
ûû 	
password
üü 
=
üü 
$str
üü 
;
üü 
{
°° 
TcpListener
¢¢ 
listener
¢¢ $
=
¢¢% &
null
¢¢' +
;
¢¢+ ,
try
££ 
{
§§ 
listener
¶¶ 
=
¶¶ 
new
¶¶ "
TcpListener
¶¶# .
(
¶¶. /
	IPAddress
¶¶/ 8
.
¶¶8 9
Parse
¶¶9 >
(
¶¶> ?
$str
¶¶? K
)
¶¶K L
,
¶¶L M
$num
¶¶N S
)
¶¶S T
;
¶¶T U
listener
ßß 
.
ßß 
Start
ßß "
(
ßß" #
)
ßß# $
;
ßß$ %
using
®® 
(
®® 
	TcpClient
®® $
tcpConn
®®% ,
=
®®- .
listener
®®/ 7
.
®®7 8
AcceptTcpClient
®®8 G
(
®®G H
)
®®H I
)
®®I J
{
©© 
using
™™ 
(
™™ 
StreamReader
™™ +
sr
™™, .
=
™™/ 0
new
™™1 4
StreamReader
™™5 A
(
™™A B
Console
™™B I
.
™™I J
OpenStandardInput
™™J [
(
™™[ \
)
™™\ ]
)
™™] ^
)
™™^ _
{
´´ 
password
≠≠ $
=
≠≠% &
sr
≠≠' )
.
≠≠) *
ReadLine
≠≠* 2
(
≠≠2 3
)
≠≠3 4
;
≠≠4 5
}
ÆÆ 
}
ØØ 
}
∞∞ 
catch
±± 
(
±± 
IOException
±± "
exceptIO
±±# +
)
±±+ ,
{
≤≤ 
IO
≥≥ 
.
≥≥ 
Logger
≥≥ 
.
≥≥ 
Log
≥≥ !
(
≥≥! "
NLog
≥≥" &
.
≥≥& '
LogLevel
≥≥' /
.
≥≥/ 0
Warn
≥≥0 4
,
≥≥4 5
$str
≥≥6 Q
,
≥≥Q R
exceptIO
≥≥S [
)
≥≥[ \
;
≥≥\ ]
}
¥¥ 
finally
µµ 
{
∂∂ 
try
∑∑ 
{
∏∏ 
if
ππ 
(
ππ 
listener
ππ $
!=
ππ% '
null
ππ( ,
)
ππ, -
{
∫∫ 
listener
ªª $
.
ªª$ %
Stop
ªª% )
(
ªª) *
)
ªª* +
;
ªª+ ,
}
ºº 
}
ΩΩ 
catch
ææ 
(
ææ 
IOException
ææ &
exceptIO
ææ' /
)
ææ/ 0
{
øø 
IO
¿¿ 
.
¿¿ 
Logger
¿¿ !
.
¿¿! "
Log
¿¿" %
(
¿¿% &
NLog
¿¿& *
.
¿¿* +
LogLevel
¿¿+ 3
.
¿¿3 4
Warn
¿¿4 8
,
¿¿8 9
$str
¿¿: U
,
¿¿U V
exceptIO
¿¿W _
)
¿¿_ `
;
¿¿` a
}
¡¡ 
}
¬¬ 
}
√√ 
}
ƒƒ 	
else
≈≈ 
{
∆∆ 	
password
…… 
=
…… 
null
…… 
;
…… 
}
   	
if
ÀÀ 

(
ÀÀ 
IO
ÀÀ 
.
ÀÀ 
StaticReturnsTrue
ÀÀ  
(
ÀÀ  !
)
ÀÀ! "
)
ÀÀ" #
{
ÃÃ 	
if
ÕÕ 
(
ÕÕ 
password
ÕÕ 
!=
ÕÕ 
null
ÕÕ  
)
ÕÕ  !
{
ŒŒ 
{
–– 
using
—— 
(
—— &
AesCryptoServiceProvider
—— 3
aesAlg
——4 :
=
——; <
new
——= @&
AesCryptoServiceProvider
——A Y
(
——Y Z
)
——Z [
)
——[ \
{
““ 
aesAlg
”” 
.
”” 
Padding
”” &
=
””' (
PaddingMode
””) 4
.
””4 5
None
””5 9
;
””9 :
aesAlg
‘‘ 
.
‘‘ 
Key
‘‘ "
=
‘‘# $
Encoding
‘‘% -
.
‘‘- .
UTF8
‘‘. 2
.
‘‘2 3
GetBytes
‘‘3 ;
(
‘‘; <
$str
‘‘< N
)
‘‘N O
;
‘‘O P
ICryptoTransform
÷÷ (
	decryptor
÷÷) 2
=
÷÷3 4
aesAlg
÷÷5 ;
.
÷÷; <
CreateDecryptor
÷÷< K
(
÷÷K L
aesAlg
÷÷L R
.
÷÷R S
Key
÷÷S V
,
÷÷V W
aesAlg
÷÷X ^
.
÷÷^ _
IV
÷÷_ a
)
÷÷a b
;
÷÷b c
using
ÿÿ 
(
ÿÿ 
MemoryStream
ÿÿ +
	msDecrypt
ÿÿ, 5
=
ÿÿ6 7
new
ÿÿ8 ;
MemoryStream
ÿÿ< H
(
ÿÿH I
Encoding
ÿÿI Q
.
ÿÿQ R
UTF8
ÿÿR V
.
ÿÿV W
GetBytes
ÿÿW _
(
ÿÿ_ `
password
ÿÿ` h
)
ÿÿh i
)
ÿÿi j
)
ÿÿj k
{
ŸŸ 
using
⁄⁄ !
(
⁄⁄" #
CryptoStream
⁄⁄# /
	csDecrypt
⁄⁄0 9
=
⁄⁄: ;
new
⁄⁄< ?
CryptoStream
⁄⁄@ L
(
⁄⁄L M
	msDecrypt
⁄⁄M V
,
⁄⁄V W
	decryptor
⁄⁄X a
,
⁄⁄a b
CryptoStreamMode
⁄⁄c s
.
⁄⁄s t
Read
⁄⁄t x
)
⁄⁄x y
)
⁄⁄y z
{
€€ 
using
‹‹  %
(
‹‹& '
StreamReader
‹‹' 3
	srDecrypt
‹‹4 =
=
‹‹> ?
new
‹‹@ C
StreamReader
‹‹D P
(
‹‹P Q
	csDecrypt
‹‹Q Z
)
‹‹Z [
)
‹‹[ \
{
››  !
password
‡‡$ ,
=
‡‡- .
	srDecrypt
‡‡/ 8
.
‡‡8 9
	ReadToEnd
‡‡9 B
(
‡‡B C
)
‡‡C D
;
‡‡D E
}
··  !
}
‚‚ 
}
„„ 
}
‰‰ 
}
ÂÂ 
try
ÊÊ 
{
ÁÁ 
using
ÈÈ 
(
ÈÈ 
SqlConnection
ÈÈ (

connection
ÈÈ) 3
=
ÈÈ4 5
new
ÈÈ6 9
SqlConnection
ÈÈ: G
(
ÈÈG H
$str
ÈÈH ~
+ÈÈ Ä
$strÈÈÅ Ö
+ÈÈÜ á
$strÈÈà î
+ÈÈï ñ
passwordÈÈó ü
)ÈÈü †
)ÈÈ† °
{
ÍÍ 

connection
ÎÎ "
.
ÎÎ" #
Open
ÎÎ# '
(
ÎÎ' (
)
ÎÎ( )
;
ÎÎ) *
using
ÏÏ 
(
ÏÏ 

SqlCommand
ÏÏ )
command
ÏÏ* 1
=
ÏÏ2 3
new
ÏÏ4 7

SqlCommand
ÏÏ8 B
(
ÏÏB C
$str
ÏÏC ]
,
ÏÏ] ^

connection
ÏÏ_ i
)
ÏÏi j
)
ÏÏj k
{
ÌÌ 
command
ÓÓ #
.
ÓÓ# $
ExecuteNonQuery
ÓÓ$ 3
(
ÓÓ3 4
)
ÓÓ4 5
;
ÓÓ5 6
}
ÔÔ 
}
 
}
ÒÒ 
catch
ÚÚ 
(
ÚÚ 
SqlException
ÚÚ #
	exceptSql
ÚÚ$ -
)
ÚÚ- .
{
ÛÛ 
IO
ÙÙ 
.
ÙÙ 
Logger
ÙÙ 
.
ÙÙ 
Log
ÙÙ !
(
ÙÙ! "
NLog
ÙÙ" &
.
ÙÙ& '
LogLevel
ÙÙ' /
.
ÙÙ/ 0
Warn
ÙÙ0 4
,
ÙÙ4 5
$str
ÙÙ6 V
,
ÙÙV W
	exceptSql
ÙÙX a
)
ÙÙa b
;
ÙÙb c
}
ıı 
}
ˆˆ 
}
˜˜ 	
}
¯¯ 
public
˙˙ 

override
˙˙ 
void
˙˙ 
Good
˙˙ 
(
˙˙ 
)
˙˙ 
{
˚˚ 
GoodG2B1
¸¸ 
(
¸¸ 
)
¸¸ 
;
¸¸ 
GoodG2B2
˝˝ 
(
˝˝ 
)
˝˝ 
;
˝˝ 
GoodB2G1
˛˛ 
(
˛˛ 
)
˛˛ 
;
˛˛ 
GoodB2G2
ˇˇ 
(
ˇˇ 
)
ˇˇ 
;
ˇˇ 
}
ÄÄ 
}ÇÇ 
}ÉÉ âŒ
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_12.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_12 E
:F G
AbstractTestCaseH X
{   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
string$$ 
password$$ 
;$$ 
if%% 

(%%
 
IO%% 
.%% $
StaticReturnsTrueOrFalse%% &
(%%& '
)%%' (
)%%( )
{&& 	
password'' 
='' 
$str'' 
;'' 
{)) 
TcpListener** 
listener** $
=**% &
null**' +
;**+ ,
try++ 
{,, 
listener.. 
=.. 
new.. "
TcpListener..# .
(... /
	IPAddress../ 8
...8 9
Parse..9 >
(..> ?
$str..? K
)..K L
,..L M
$num..N S
)..S T
;..T U
listener// 
.// 
Start// "
(//" #
)//# $
;//$ %
using00 
(00 
	TcpClient00 $
tcpConn00% ,
=00- .
listener00/ 7
.007 8
AcceptTcpClient008 G
(00G H
)00H I
)00I J
{11 
using22 
(22 
StreamReader22 +
sr22, .
=22/ 0
new221 4
StreamReader225 A
(22A B
Console22B I
.22I J
OpenStandardInput22J [
(22[ \
)22\ ]
)22] ^
)22^ _
{33 
password55 $
=55% &
sr55' )
.55) *
ReadLine55* 2
(552 3
)553 4
;554 5
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
$str;;6 Q
,;;Q R
exceptIO;;S [
);;[ \
;;;\ ]
}<< 
finally== 
{>> 
try?? 
{@@ 
ifAA 
(AA 
listenerAA $
!=AA% '
nullAA( ,
)AA, -
{BB 
listenerCC $
.CC$ %
StopCC% )
(CC) *
)CC* +
;CC+ ,
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF &
exceptIOFF' /
)FF/ 0
{GG 
IOHH 
.HH 
LoggerHH !
.HH! "
LogHH" %
(HH% &
NLogHH& *
.HH* +
LogLevelHH+ 3
.HH3 4
WarnHH4 8
,HH8 9
$strHH: U
,HHU V
exceptIOHHW _
)HH_ `
;HH` a
}II 
}JJ 
}KK 
}LL 	
elseMM 
{NN 	
passwordQQ 
=QQ 
$strQQ &
;QQ& '
}RR 	
ifSS 

(SS
 
IOSS 
.SS $
StaticReturnsTrueOrFalseSS &
(SS& '
)SS' (
)SS( )
{TT 	
tryUU 
{VV 
usingXX 
(XX 
SqlConnectionXX $

connectionXX% /
=XX0 1
newXX2 5
SqlConnectionXX6 C
(XXC D
$strXXD z
+XX{ |
$str	XX} Å
+
XXÇ É
$str
XXÑ ê
+
XXë í
password
XXì õ
)
XXõ ú
)
XXú ù
{YY 

connectionZZ 
.ZZ 
OpenZZ #
(ZZ# $
)ZZ$ %
;ZZ% &
using[[ 
([[ 

SqlCommand[[ %
command[[& -
=[[. /
new[[0 3

SqlCommand[[4 >
([[> ?
$str[[? Y
,[[Y Z

connection[[[ e
)[[e f
)[[f g
{\\ 
command]] 
.]]  
ExecuteNonQuery]]  /
(]]/ 0
)]]0 1
;]]1 2
}^^ 
}__ 
}`` 
catchaa 
(aa 
SqlExceptionaa 
	exceptSqlaa  )
)aa) *
{bb 
IOcc 
.cc 
Loggercc 
.cc 
Logcc 
(cc 
NLogcc "
.cc" #
LogLevelcc# +
.cc+ ,
Warncc, 0
,cc0 1
$strcc2 R
,ccR S
	exceptSqlccT ]
)cc] ^
;cc^ _
}dd 
}ee 	
elseff 
{gg 	
ifhh 
(hh 
passwordhh 
!=hh 
nullhh  
)hh  !
{ii 
{kk 
usingll 
(ll $
AesCryptoServiceProviderll 3
aesAlgll4 :
=ll; <
newll= @$
AesCryptoServiceProviderllA Y
(llY Z
)llZ [
)ll[ \
{mm 
aesAlgnn 
.nn 
Paddingnn &
=nn' (
PaddingModenn) 4
.nn4 5
Nonenn5 9
;nn9 :
aesAlgoo 
.oo 
Keyoo "
=oo# $
Encodingoo% -
.oo- .
UTF8oo. 2
.oo2 3
GetBytesoo3 ;
(oo; <
$stroo< N
)ooN O
;ooO P
ICryptoTransformqq (
	decryptorqq) 2
=qq3 4
aesAlgqq5 ;
.qq; <
CreateDecryptorqq< K
(qqK L
aesAlgqqL R
.qqR S
KeyqqS V
,qqV W
aesAlgqqX ^
.qq^ _
IVqq_ a
)qqa b
;qqb c
usingss 
(ss 
MemoryStreamss +
	msDecryptss, 5
=ss6 7
newss8 ;
MemoryStreamss< H
(ssH I
EncodingssI Q
.ssQ R
UTF8ssR V
.ssV W
GetBytesssW _
(ss_ `
passwordss` h
)ssh i
)ssi j
)ssj k
{tt 
usinguu !
(uu" #
CryptoStreamuu# /
	csDecryptuu0 9
=uu: ;
newuu< ?
CryptoStreamuu@ L
(uuL M
	msDecryptuuM V
,uuV W
	decryptoruuX a
,uua b
CryptoStreamModeuuc s
.uus t
Readuut x
)uux y
)uuy z
{vv 
usingww  %
(ww& '
StreamReaderww' 3
	srDecryptww4 =
=ww> ?
newww@ C
StreamReaderwwD P
(wwP Q
	csDecryptwwQ Z
)wwZ [
)ww[ \
{xx  !
password{{$ ,
={{- .
	srDecrypt{{/ 8
.{{8 9
	ReadToEnd{{9 B
({{B C
){{C D
;{{D E
}||  !
}}} 
}~~ 
} 
}
ÄÄ 
try
ÅÅ 
{
ÇÇ 
using
ÑÑ 
(
ÑÑ 
SqlConnection
ÑÑ (

connection
ÑÑ) 3
=
ÑÑ4 5
new
ÑÑ6 9
SqlConnection
ÑÑ: G
(
ÑÑG H
$str
ÑÑH ~
+ÑÑ Ä
$strÑÑÅ Ö
+ÑÑÜ á
$strÑÑà î
+ÑÑï ñ
passwordÑÑó ü
)ÑÑü †
)ÑÑ† °
{
ÖÖ 

connection
ÜÜ "
.
ÜÜ" #
Open
ÜÜ# '
(
ÜÜ' (
)
ÜÜ( )
;
ÜÜ) *
using
áá 
(
áá 

SqlCommand
áá )
command
áá* 1
=
áá2 3
new
áá4 7

SqlCommand
áá8 B
(
ááB C
$str
ááC ]
,
áá] ^

connection
áá_ i
)
áái j
)
ááj k
{
àà 
command
ââ #
.
ââ# $
ExecuteNonQuery
ââ$ 3
(
ââ3 4
)
ââ4 5
;
ââ5 6
}
ää 
}
ãã 
}
åå 
catch
çç 
(
çç 
SqlException
çç #
	exceptSql
çç$ -
)
çç- .
{
éé 
IO
èè 
.
èè 
Logger
èè 
.
èè 
Log
èè !
(
èè! "
NLog
èè" &
.
èè& '
LogLevel
èè' /
.
èè/ 0
Warn
èè0 4
,
èè4 5
$str
èè6 V
,
èèV W
	exceptSql
èèX a
)
èèa b
;
èèb c
}
êê 
}
ëë 
}
íí 	
}
ìì 
private
òò 
void
òò 
GoodG2B
òò 
(
òò 
)
òò 
{
ôô 
string
öö 
password
öö 
;
öö 
if
õõ 

(
õõ
 
IO
õõ 
.
õõ &
StaticReturnsTrueOrFalse
õõ &
(
õõ& '
)
õõ' (
)
õõ( )
{
úú 	
password
üü 
=
üü 
$str
üü &
;
üü& '
}
†† 	
else
°° 
{
¢¢ 	
password
•• 
=
•• 
$str
•• &
;
••& '
}
¶¶ 	
if
ßß 

(
ßß
 
IO
ßß 
.
ßß &
StaticReturnsTrueOrFalse
ßß &
(
ßß& '
)
ßß' (
)
ßß( )
{
®® 	
try
©© 
{
™™ 
using
¨¨ 
(
¨¨ 
SqlConnection
¨¨ $

connection
¨¨% /
=
¨¨0 1
new
¨¨2 5
SqlConnection
¨¨6 C
(
¨¨C D
$str
¨¨D z
+
¨¨{ |
$str¨¨} Å
+¨¨Ç É
$str¨¨Ñ ê
+¨¨ë í
password¨¨ì õ
)¨¨õ ú
)¨¨ú ù
{
≠≠ 

connection
ÆÆ 
.
ÆÆ 
Open
ÆÆ #
(
ÆÆ# $
)
ÆÆ$ %
;
ÆÆ% &
using
ØØ 
(
ØØ 

SqlCommand
ØØ %
command
ØØ& -
=
ØØ. /
new
ØØ0 3

SqlCommand
ØØ4 >
(
ØØ> ?
$str
ØØ? Y
,
ØØY Z

connection
ØØ[ e
)
ØØe f
)
ØØf g
{
∞∞ 
command
±± 
.
±±  
ExecuteNonQuery
±±  /
(
±±/ 0
)
±±0 1
;
±±1 2
}
≤≤ 
}
≥≥ 
}
¥¥ 
catch
µµ 
(
µµ 
SqlException
µµ 
	exceptSql
µµ  )
)
µµ) *
{
∂∂ 
IO
∑∑ 
.
∑∑ 
Logger
∑∑ 
.
∑∑ 
Log
∑∑ 
(
∑∑ 
NLog
∑∑ "
.
∑∑" #
LogLevel
∑∑# +
.
∑∑+ ,
Warn
∑∑, 0
,
∑∑0 1
$str
∑∑2 R
,
∑∑R S
	exceptSql
∑∑T ]
)
∑∑] ^
;
∑∑^ _
}
∏∏ 
}
ππ 	
else
∫∫ 
{
ªª 	
try
ºº 
{
ΩΩ 
using
øø 
(
øø 
SqlConnection
øø $

connection
øø% /
=
øø0 1
new
øø2 5
SqlConnection
øø6 C
(
øøC D
$str
øøD z
+
øø{ |
$strøø} Å
+øøÇ É
$strøøÑ ê
+øøë í
passwordøøì õ
)øøõ ú
)øøú ù
{
¿¿ 

connection
¡¡ 
.
¡¡ 
Open
¡¡ #
(
¡¡# $
)
¡¡$ %
;
¡¡% &
using
¬¬ 
(
¬¬ 

SqlCommand
¬¬ %
command
¬¬& -
=
¬¬. /
new
¬¬0 3

SqlCommand
¬¬4 >
(
¬¬> ?
$str
¬¬? Y
,
¬¬Y Z

connection
¬¬[ e
)
¬¬e f
)
¬¬f g
{
√√ 
command
ƒƒ 
.
ƒƒ  
ExecuteNonQuery
ƒƒ  /
(
ƒƒ/ 0
)
ƒƒ0 1
;
ƒƒ1 2
}
≈≈ 
}
∆∆ 
}
«« 
catch
»» 
(
»» 
SqlException
»» 
	exceptSql
»»  )
)
»») *
{
…… 
IO
   
.
   
Logger
   
.
   
Log
   
(
   
NLog
   "
.
  " #
LogLevel
  # +
.
  + ,
Warn
  , 0
,
  0 1
$str
  2 R
,
  R S
	exceptSql
  T ]
)
  ] ^
;
  ^ _
}
ÀÀ 
}
ÃÃ 	
}
ÕÕ 
private
—— 
void
—— 
GoodB2G
—— 
(
—— 
)
—— 
{
““ 
string
”” 
password
”” 
;
”” 
if
‘‘ 

(
‘‘
 
IO
‘‘ 
.
‘‘ &
StaticReturnsTrueOrFalse
‘‘ &
(
‘‘& '
)
‘‘' (
)
‘‘( )
{
’’ 	
password
÷÷ 
=
÷÷ 
$str
÷÷ 
;
÷÷ 
{
ÿÿ 
TcpListener
ŸŸ 
listener
ŸŸ $
=
ŸŸ% &
null
ŸŸ' +
;
ŸŸ+ ,
try
⁄⁄ 
{
€€ 
listener
›› 
=
›› 
new
›› "
TcpListener
››# .
(
››. /
	IPAddress
››/ 8
.
››8 9
Parse
››9 >
(
››> ?
$str
››? K
)
››K L
,
››L M
$num
››N S
)
››S T
;
››T U
listener
ﬁﬁ 
.
ﬁﬁ 
Start
ﬁﬁ "
(
ﬁﬁ" #
)
ﬁﬁ# $
;
ﬁﬁ$ %
using
ﬂﬂ 
(
ﬂﬂ 
	TcpClient
ﬂﬂ $
tcpConn
ﬂﬂ% ,
=
ﬂﬂ- .
listener
ﬂﬂ/ 7
.
ﬂﬂ7 8
AcceptTcpClient
ﬂﬂ8 G
(
ﬂﬂG H
)
ﬂﬂH I
)
ﬂﬂI J
{
‡‡ 
using
·· 
(
·· 
StreamReader
·· +
sr
··, .
=
··/ 0
new
··1 4
StreamReader
··5 A
(
··A B
Console
··B I
.
··I J
OpenStandardInput
··J [
(
··[ \
)
··\ ]
)
··] ^
)
··^ _
{
‚‚ 
password
‰‰ $
=
‰‰% &
sr
‰‰' )
.
‰‰) *
ReadLine
‰‰* 2
(
‰‰2 3
)
‰‰3 4
;
‰‰4 5
}
ÂÂ 
}
ÊÊ 
}
ÁÁ 
catch
ËË 
(
ËË 
IOException
ËË "
exceptIO
ËË# +
)
ËË+ ,
{
ÈÈ 
IO
ÍÍ 
.
ÍÍ 
Logger
ÍÍ 
.
ÍÍ 
Log
ÍÍ !
(
ÍÍ! "
NLog
ÍÍ" &
.
ÍÍ& '
LogLevel
ÍÍ' /
.
ÍÍ/ 0
Warn
ÍÍ0 4
,
ÍÍ4 5
$str
ÍÍ6 Q
,
ÍÍQ R
exceptIO
ÍÍS [
)
ÍÍ[ \
;
ÍÍ\ ]
}
ÎÎ 
finally
ÏÏ 
{
ÌÌ 
try
ÓÓ 
{
ÔÔ 
if
 
(
 
listener
 $
!=
% '
null
( ,
)
, -
{
ÒÒ 
listener
ÚÚ $
.
ÚÚ$ %
Stop
ÚÚ% )
(
ÚÚ) *
)
ÚÚ* +
;
ÚÚ+ ,
}
ÛÛ 
}
ÙÙ 
catch
ıı 
(
ıı 
IOException
ıı &
exceptIO
ıı' /
)
ıı/ 0
{
ˆˆ 
IO
˜˜ 
.
˜˜ 
Logger
˜˜ !
.
˜˜! "
Log
˜˜" %
(
˜˜% &
NLog
˜˜& *
.
˜˜* +
LogLevel
˜˜+ 3
.
˜˜3 4
Warn
˜˜4 8
,
˜˜8 9
$str
˜˜: U
,
˜˜U V
exceptIO
˜˜W _
)
˜˜_ `
;
˜˜` a
}
¯¯ 
}
˘˘ 
}
˙˙ 
}
˚˚ 	
else
¸¸ 
{
˝˝ 	
password
˛˛ 
=
˛˛ 
$str
˛˛ 
;
˛˛ 
{
ÄÄ 
TcpListener
ÅÅ 
listener
ÅÅ $
=
ÅÅ% &
null
ÅÅ' +
;
ÅÅ+ ,
try
ÇÇ 
{
ÉÉ 
listener
ÖÖ 
=
ÖÖ 
new
ÖÖ "
TcpListener
ÖÖ# .
(
ÖÖ. /
	IPAddress
ÖÖ/ 8
.
ÖÖ8 9
Parse
ÖÖ9 >
(
ÖÖ> ?
$str
ÖÖ? K
)
ÖÖK L
,
ÖÖL M
$num
ÖÖN S
)
ÖÖS T
;
ÖÖT U
listener
ÜÜ 
.
ÜÜ 
Start
ÜÜ "
(
ÜÜ" #
)
ÜÜ# $
;
ÜÜ$ %
using
áá 
(
áá 
	TcpClient
áá $
tcpConn
áá% ,
=
áá- .
listener
áá/ 7
.
áá7 8
AcceptTcpClient
áá8 G
(
ááG H
)
ááH I
)
ááI J
{
àà 
using
ââ 
(
ââ 
StreamReader
ââ +
sr
ââ, .
=
ââ/ 0
new
ââ1 4
StreamReader
ââ5 A
(
ââA B
Console
ââB I
.
ââI J
OpenStandardInput
ââJ [
(
ââ[ \
)
ââ\ ]
)
ââ] ^
)
ââ^ _
{
ää 
password
åå $
=
åå% &
sr
åå' )
.
åå) *
ReadLine
åå* 2
(
åå2 3
)
åå3 4
;
åå4 5
}
çç 
}
éé 
}
èè 
catch
êê 
(
êê 
IOException
êê "
exceptIO
êê# +
)
êê+ ,
{
ëë 
IO
íí 
.
íí 
Logger
íí 
.
íí 
Log
íí !
(
íí! "
NLog
íí" &
.
íí& '
LogLevel
íí' /
.
íí/ 0
Warn
íí0 4
,
íí4 5
$str
íí6 Q
,
ííQ R
exceptIO
ííS [
)
íí[ \
;
íí\ ]
}
ìì 
finally
îî 
{
ïï 
try
ññ 
{
óó 
if
òò 
(
òò 
listener
òò $
!=
òò% '
null
òò( ,
)
òò, -
{
ôô 
listener
öö $
.
öö$ %
Stop
öö% )
(
öö) *
)
öö* +
;
öö+ ,
}
õõ 
}
úú 
catch
ùù 
(
ùù 
IOException
ùù &
exceptIO
ùù' /
)
ùù/ 0
{
ûû 
IO
üü 
.
üü 
Logger
üü !
.
üü! "
Log
üü" %
(
üü% &
NLog
üü& *
.
üü* +
LogLevel
üü+ 3
.
üü3 4
Warn
üü4 8
,
üü8 9
$str
üü: U
,
üüU V
exceptIO
üüW _
)
üü_ `
;
üü` a
}
†† 
}
°° 
}
¢¢ 
}
££ 	
if
§§ 

(
§§
 
IO
§§ 
.
§§ &
StaticReturnsTrueOrFalse
§§ &
(
§§& '
)
§§' (
)
§§( )
{
•• 	
if
¶¶ 
(
¶¶ 
password
¶¶ 
!=
¶¶ 
null
¶¶  
)
¶¶  !
{
ßß 
{
©© 
using
™™ 
(
™™ &
AesCryptoServiceProvider
™™ 3
aesAlg
™™4 :
=
™™; <
new
™™= @&
AesCryptoServiceProvider
™™A Y
(
™™Y Z
)
™™Z [
)
™™[ \
{
´´ 
aesAlg
¨¨ 
.
¨¨ 
Padding
¨¨ &
=
¨¨' (
PaddingMode
¨¨) 4
.
¨¨4 5
None
¨¨5 9
;
¨¨9 :
aesAlg
≠≠ 
.
≠≠ 
Key
≠≠ "
=
≠≠# $
Encoding
≠≠% -
.
≠≠- .
UTF8
≠≠. 2
.
≠≠2 3
GetBytes
≠≠3 ;
(
≠≠; <
$str
≠≠< N
)
≠≠N O
;
≠≠O P
ICryptoTransform
ØØ (
	decryptor
ØØ) 2
=
ØØ3 4
aesAlg
ØØ5 ;
.
ØØ; <
CreateDecryptor
ØØ< K
(
ØØK L
aesAlg
ØØL R
.
ØØR S
Key
ØØS V
,
ØØV W
aesAlg
ØØX ^
.
ØØ^ _
IV
ØØ_ a
)
ØØa b
;
ØØb c
using
±± 
(
±± 
MemoryStream
±± +
	msDecrypt
±±, 5
=
±±6 7
new
±±8 ;
MemoryStream
±±< H
(
±±H I
Encoding
±±I Q
.
±±Q R
UTF8
±±R V
.
±±V W
GetBytes
±±W _
(
±±_ `
password
±±` h
)
±±h i
)
±±i j
)
±±j k
{
≤≤ 
using
≥≥ !
(
≥≥" #
CryptoStream
≥≥# /
	csDecrypt
≥≥0 9
=
≥≥: ;
new
≥≥< ?
CryptoStream
≥≥@ L
(
≥≥L M
	msDecrypt
≥≥M V
,
≥≥V W
	decryptor
≥≥X a
,
≥≥a b
CryptoStreamMode
≥≥c s
.
≥≥s t
Read
≥≥t x
)
≥≥x y
)
≥≥y z
{
¥¥ 
using
µµ  %
(
µµ& '
StreamReader
µµ' 3
	srDecrypt
µµ4 =
=
µµ> ?
new
µµ@ C
StreamReader
µµD P
(
µµP Q
	csDecrypt
µµQ Z
)
µµZ [
)
µµ[ \
{
∂∂  !
password
ππ$ ,
=
ππ- .
	srDecrypt
ππ/ 8
.
ππ8 9
	ReadToEnd
ππ9 B
(
ππB C
)
ππC D
;
ππD E
}
∫∫  !
}
ªª 
}
ºº 
}
ΩΩ 
}
ææ 
try
øø 
{
¿¿ 
using
¬¬ 
(
¬¬ 
SqlConnection
¬¬ (

connection
¬¬) 3
=
¬¬4 5
new
¬¬6 9
SqlConnection
¬¬: G
(
¬¬G H
$str
¬¬H ~
+¬¬ Ä
$str¬¬Å Ö
+¬¬Ü á
$str¬¬à î
+¬¬ï ñ
password¬¬ó ü
)¬¬ü †
)¬¬† °
{
√√ 

connection
ƒƒ "
.
ƒƒ" #
Open
ƒƒ# '
(
ƒƒ' (
)
ƒƒ( )
;
ƒƒ) *
using
≈≈ 
(
≈≈ 

SqlCommand
≈≈ )
command
≈≈* 1
=
≈≈2 3
new
≈≈4 7

SqlCommand
≈≈8 B
(
≈≈B C
$str
≈≈C ]
,
≈≈] ^

connection
≈≈_ i
)
≈≈i j
)
≈≈j k
{
∆∆ 
command
«« #
.
««# $
ExecuteNonQuery
««$ 3
(
««3 4
)
««4 5
;
««5 6
}
»» 
}
…… 
}
   
catch
ÀÀ 
(
ÀÀ 
SqlException
ÀÀ #
	exceptSql
ÀÀ$ -
)
ÀÀ- .
{
ÃÃ 
IO
ÕÕ 
.
ÕÕ 
Logger
ÕÕ 
.
ÕÕ 
Log
ÕÕ !
(
ÕÕ! "
NLog
ÕÕ" &
.
ÕÕ& '
LogLevel
ÕÕ' /
.
ÕÕ/ 0
Warn
ÕÕ0 4
,
ÕÕ4 5
$str
ÕÕ6 V
,
ÕÕV W
	exceptSql
ÕÕX a
)
ÕÕa b
;
ÕÕb c
}
ŒŒ 
}
œœ 
}
–– 	
else
—— 
{
““ 	
if
”” 
(
”” 
password
”” 
!=
”” 
null
””  
)
””  !
{
‘‘ 
{
÷÷ 
using
◊◊ 
(
◊◊ &
AesCryptoServiceProvider
◊◊ 3
aesAlg
◊◊4 :
=
◊◊; <
new
◊◊= @&
AesCryptoServiceProvider
◊◊A Y
(
◊◊Y Z
)
◊◊Z [
)
◊◊[ \
{
ÿÿ 
aesAlg
ŸŸ 
.
ŸŸ 
Padding
ŸŸ &
=
ŸŸ' (
PaddingMode
ŸŸ) 4
.
ŸŸ4 5
None
ŸŸ5 9
;
ŸŸ9 :
aesAlg
⁄⁄ 
.
⁄⁄ 
Key
⁄⁄ "
=
⁄⁄# $
Encoding
⁄⁄% -
.
⁄⁄- .
UTF8
⁄⁄. 2
.
⁄⁄2 3
GetBytes
⁄⁄3 ;
(
⁄⁄; <
$str
⁄⁄< N
)
⁄⁄N O
;
⁄⁄O P
ICryptoTransform
‹‹ (
	decryptor
‹‹) 2
=
‹‹3 4
aesAlg
‹‹5 ;
.
‹‹; <
CreateDecryptor
‹‹< K
(
‹‹K L
aesAlg
‹‹L R
.
‹‹R S
Key
‹‹S V
,
‹‹V W
aesAlg
‹‹X ^
.
‹‹^ _
IV
‹‹_ a
)
‹‹a b
;
‹‹b c
using
ﬁﬁ 
(
ﬁﬁ 
MemoryStream
ﬁﬁ +
	msDecrypt
ﬁﬁ, 5
=
ﬁﬁ6 7
new
ﬁﬁ8 ;
MemoryStream
ﬁﬁ< H
(
ﬁﬁH I
Encoding
ﬁﬁI Q
.
ﬁﬁQ R
UTF8
ﬁﬁR V
.
ﬁﬁV W
GetBytes
ﬁﬁW _
(
ﬁﬁ_ `
password
ﬁﬁ` h
)
ﬁﬁh i
)
ﬁﬁi j
)
ﬁﬁj k
{
ﬂﬂ 
using
‡‡ !
(
‡‡" #
CryptoStream
‡‡# /
	csDecrypt
‡‡0 9
=
‡‡: ;
new
‡‡< ?
CryptoStream
‡‡@ L
(
‡‡L M
	msDecrypt
‡‡M V
,
‡‡V W
	decryptor
‡‡X a
,
‡‡a b
CryptoStreamMode
‡‡c s
.
‡‡s t
Read
‡‡t x
)
‡‡x y
)
‡‡y z
{
·· 
using
‚‚  %
(
‚‚& '
StreamReader
‚‚' 3
	srDecrypt
‚‚4 =
=
‚‚> ?
new
‚‚@ C
StreamReader
‚‚D P
(
‚‚P Q
	csDecrypt
‚‚Q Z
)
‚‚Z [
)
‚‚[ \
{
„„  !
password
ÊÊ$ ,
=
ÊÊ- .
	srDecrypt
ÊÊ/ 8
.
ÊÊ8 9
	ReadToEnd
ÊÊ9 B
(
ÊÊB C
)
ÊÊC D
;
ÊÊD E
}
ÁÁ  !
}
ËË 
}
ÈÈ 
}
ÍÍ 
}
ÎÎ 
try
ÏÏ 
{
ÌÌ 
using
ÔÔ 
(
ÔÔ 
SqlConnection
ÔÔ (

connection
ÔÔ) 3
=
ÔÔ4 5
new
ÔÔ6 9
SqlConnection
ÔÔ: G
(
ÔÔG H
$str
ÔÔH ~
+ÔÔ Ä
$strÔÔÅ Ö
+ÔÔÜ á
$strÔÔà î
+ÔÔï ñ
passwordÔÔó ü
)ÔÔü †
)ÔÔ† °
{
 

connection
ÒÒ "
.
ÒÒ" #
Open
ÒÒ# '
(
ÒÒ' (
)
ÒÒ( )
;
ÒÒ) *
using
ÚÚ 
(
ÚÚ 

SqlCommand
ÚÚ )
command
ÚÚ* 1
=
ÚÚ2 3
new
ÚÚ4 7

SqlCommand
ÚÚ8 B
(
ÚÚB C
$str
ÚÚC ]
,
ÚÚ] ^

connection
ÚÚ_ i
)
ÚÚi j
)
ÚÚj k
{
ÛÛ 
command
ÙÙ #
.
ÙÙ# $
ExecuteNonQuery
ÙÙ$ 3
(
ÙÙ3 4
)
ÙÙ4 5
;
ÙÙ5 6
}
ıı 
}
ˆˆ 
}
˜˜ 
catch
¯¯ 
(
¯¯ 
SqlException
¯¯ #
	exceptSql
¯¯$ -
)
¯¯- .
{
˘˘ 
IO
˙˙ 
.
˙˙ 
Logger
˙˙ 
.
˙˙ 
Log
˙˙ !
(
˙˙! "
NLog
˙˙" &
.
˙˙& '
LogLevel
˙˙' /
.
˙˙/ 0
Warn
˙˙0 4
,
˙˙4 5
$str
˙˙6 V
,
˙˙V W
	exceptSql
˙˙X a
)
˙˙a b
;
˙˙b c
}
˚˚ 
}
¸¸ 
}
˝˝ 	
}
˛˛ 
public
ÄÄ 

override
ÄÄ 
void
ÄÄ 
Good
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÇÇ 
GoodG2B
ÉÉ 
(
ÉÉ 
)
ÉÉ 
;
ÉÉ 
GoodB2G
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
}
ÖÖ 
}áá 
}àà Ôæ
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_13.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_13 E
:F G
AbstractTestCaseH X
{   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
string$$ 
password$$ 
;$$ 
if%% 

(%% 
IO%% 
.%%  
STATIC_READONLY_FIVE%% #
==%%# %
$num%%% &
)%%& '
{&& 	
password'' 
='' 
$str'' 
;'' 
{)) 
TcpListener** 
listener** $
=**% &
null**' +
;**+ ,
try++ 
{,, 
listener.. 
=.. 
new.. "
TcpListener..# .
(... /
	IPAddress../ 8
...8 9
Parse..9 >
(..> ?
$str..? K
)..K L
,..L M
$num..N S
)..S T
;..T U
listener// 
.// 
Start// "
(//" #
)//# $
;//$ %
using00 
(00 
	TcpClient00 $
tcpConn00% ,
=00- .
listener00/ 7
.007 8
AcceptTcpClient008 G
(00G H
)00H I
)00I J
{11 
using22 
(22 
StreamReader22 +
sr22, .
=22/ 0
new221 4
StreamReader225 A
(22A B
Console22B I
.22I J
OpenStandardInput22J [
(22[ \
)22\ ]
)22] ^
)22^ _
{33 
password55 $
=55% &
sr55' )
.55) *
ReadLine55* 2
(552 3
)553 4
;554 5
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
$str;;6 Q
,;;Q R
exceptIO;;S [
);;[ \
;;;\ ]
}<< 
finally== 
{>> 
try?? 
{@@ 
ifAA 
(AA 
listenerAA $
!=AA% '
nullAA( ,
)AA, -
{BB 
listenerCC $
.CC$ %
StopCC% )
(CC) *
)CC* +
;CC+ ,
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF &
exceptIOFF' /
)FF/ 0
{GG 
IOHH 
.HH 
LoggerHH !
.HH! "
LogHH" %
(HH% &
NLogHH& *
.HH* +
LogLevelHH+ 3
.HH3 4
WarnHH4 8
,HH8 9
$strHH: U
,HHU V
exceptIOHHW _
)HH_ `
;HH` a
}II 
}JJ 
}KK 
}LL 	
elseMM 
{NN 	
passwordQQ 
=QQ 
nullQQ 
;QQ 
}RR 	
ifSS 

(SS 
IOSS 
.SS  
STATIC_READONLY_FIVESS #
==SS# %
$numSS% &
)SS& '
{TT 	
tryUU 
{VV 
usingXX 
(XX 
SqlConnectionXX $

connectionXX% /
=XX0 1
newXX2 5
SqlConnectionXX6 C
(XXC D
$strXXD z
+XX{ |
$str	XX} Å
+
XXÇ É
$str
XXÑ ê
+
XXë í
password
XXì õ
)
XXõ ú
)
XXú ù
{YY 

connectionZZ 
.ZZ 
OpenZZ #
(ZZ# $
)ZZ$ %
;ZZ% &
using[[ 
([[ 

SqlCommand[[ %
command[[& -
=[[. /
new[[0 3

SqlCommand[[4 >
([[> ?
$str[[? Y
,[[Y Z

connection[[[ e
)[[e f
)[[f g
{\\ 
command]] 
.]]  
ExecuteNonQuery]]  /
(]]/ 0
)]]0 1
;]]1 2
}^^ 
}__ 
}`` 
catchaa 
(aa 
SqlExceptionaa 
	exceptSqlaa  )
)aa) *
{bb 
IOcc 
.cc 
Loggercc 
.cc 
Logcc 
(cc 
NLogcc "
.cc" #
LogLevelcc# +
.cc+ ,
Warncc, 0
,cc0 1
$strcc2 R
,ccR S
	exceptSqlccT ]
)cc] ^
;cc^ _
}dd 
}ee 	
}ff 
privatejj 
voidjj 
GoodG2B1jj 
(jj 
)jj 
{kk 
stringll 
passwordll 
;ll 
ifmm 

(mm 
IOmm 
.mm  
STATIC_READONLY_FIVEmm #
!=mm# %
$nummm% &
)mm& '
{nn 	
passwordqq 
=qq 
nullqq 
;qq 
}rr 	
elsess 
{tt 	
passwordww 
=ww 
$strww &
;ww& '
}xx 	
ifyy 

(yy 
IOyy 
.yy  
STATIC_READONLY_FIVEyy #
==yy# %
$numyy% &
)yy& '
{zz 	
try{{ 
{|| 
using~~ 
(~~ 
SqlConnection~~ $

connection~~% /
=~~0 1
new~~2 5
SqlConnection~~6 C
(~~C D
$str~~D z
+~~{ |
$str	~~} Å
+
~~Ç É
$str
~~Ñ ê
+
~~ë í
password
~~ì õ
)
~~õ ú
)
~~ú ù
{ 

connection
ÄÄ 
.
ÄÄ 
Open
ÄÄ #
(
ÄÄ# $
)
ÄÄ$ %
;
ÄÄ% &
using
ÅÅ 
(
ÅÅ 

SqlCommand
ÅÅ %
command
ÅÅ& -
=
ÅÅ. /
new
ÅÅ0 3

SqlCommand
ÅÅ4 >
(
ÅÅ> ?
$str
ÅÅ? Y
,
ÅÅY Z

connection
ÅÅ[ e
)
ÅÅe f
)
ÅÅf g
{
ÇÇ 
command
ÉÉ 
.
ÉÉ  
ExecuteNonQuery
ÉÉ  /
(
ÉÉ/ 0
)
ÉÉ0 1
;
ÉÉ1 2
}
ÑÑ 
}
ÖÖ 
}
ÜÜ 
catch
áá 
(
áá 
SqlException
áá 
	exceptSql
áá  )
)
áá) *
{
àà 
IO
ââ 
.
ââ 
Logger
ââ 
.
ââ 
Log
ââ 
(
ââ 
NLog
ââ "
.
ââ" #
LogLevel
ââ# +
.
ââ+ ,
Warn
ââ, 0
,
ââ0 1
$str
ââ2 R
,
ââR S
	exceptSql
ââT ]
)
ââ] ^
;
ââ^ _
}
ää 
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
string
ëë 
password
ëë 
;
ëë 
if
íí 

(
íí 
IO
íí 
.
íí "
STATIC_READONLY_FIVE
íí #
==
íí# %
$num
íí% &
)
íí& '
{
ìì 	
password
ññ 
=
ññ 
$str
ññ &
;
ññ& '
}
óó 	
else
òò 
{
ôô 	
password
úú 
=
úú 
null
úú 
;
úú 
}
ùù 	
if
ûû 

(
ûû 
IO
ûû 
.
ûû "
STATIC_READONLY_FIVE
ûû #
==
ûû# %
$num
ûû% &
)
ûû& '
{
üü 	
try
†† 
{
°° 
using
££ 
(
££ 
SqlConnection
££ $

connection
££% /
=
££0 1
new
££2 5
SqlConnection
££6 C
(
££C D
$str
££D z
+
££{ |
$str££} Å
+££Ç É
$str££Ñ ê
+££ë í
password££ì õ
)££õ ú
)££ú ù
{
§§ 

connection
•• 
.
•• 
Open
•• #
(
••# $
)
••$ %
;
••% &
using
¶¶ 
(
¶¶ 

SqlCommand
¶¶ %
command
¶¶& -
=
¶¶. /
new
¶¶0 3

SqlCommand
¶¶4 >
(
¶¶> ?
$str
¶¶? Y
,
¶¶Y Z

connection
¶¶[ e
)
¶¶e f
)
¶¶f g
{
ßß 
command
®® 
.
®®  
ExecuteNonQuery
®®  /
(
®®/ 0
)
®®0 1
;
®®1 2
}
©© 
}
™™ 
}
´´ 
catch
¨¨ 
(
¨¨ 
SqlException
¨¨ 
	exceptSql
¨¨  )
)
¨¨) *
{
≠≠ 
IO
ÆÆ 
.
ÆÆ 
Logger
ÆÆ 
.
ÆÆ 
Log
ÆÆ 
(
ÆÆ 
NLog
ÆÆ "
.
ÆÆ" #
LogLevel
ÆÆ# +
.
ÆÆ+ ,
Warn
ÆÆ, 0
,
ÆÆ0 1
$str
ÆÆ2 R
,
ÆÆR S
	exceptSql
ÆÆT ]
)
ÆÆ] ^
;
ÆÆ^ _
}
ØØ 
}
∞∞ 	
}
±± 
private
¥¥ 
void
¥¥ 
GoodB2G1
¥¥ 
(
¥¥ 
)
¥¥ 
{
µµ 
string
∂∂ 
password
∂∂ 
;
∂∂ 
if
∑∑ 

(
∑∑ 
IO
∑∑ 
.
∑∑ "
STATIC_READONLY_FIVE
∑∑ #
==
∑∑# %
$num
∑∑% &
)
∑∑& '
{
∏∏ 	
password
ππ 
=
ππ 
$str
ππ 
;
ππ 
{
ªª 
TcpListener
ºº 
listener
ºº $
=
ºº% &
null
ºº' +
;
ºº+ ,
try
ΩΩ 
{
ææ 
listener
¿¿ 
=
¿¿ 
new
¿¿ "
TcpListener
¿¿# .
(
¿¿. /
	IPAddress
¿¿/ 8
.
¿¿8 9
Parse
¿¿9 >
(
¿¿> ?
$str
¿¿? K
)
¿¿K L
,
¿¿L M
$num
¿¿N S
)
¿¿S T
;
¿¿T U
listener
¡¡ 
.
¡¡ 
Start
¡¡ "
(
¡¡" #
)
¡¡# $
;
¡¡$ %
using
¬¬ 
(
¬¬ 
	TcpClient
¬¬ $
tcpConn
¬¬% ,
=
¬¬- .
listener
¬¬/ 7
.
¬¬7 8
AcceptTcpClient
¬¬8 G
(
¬¬G H
)
¬¬H I
)
¬¬I J
{
√√ 
using
ƒƒ 
(
ƒƒ 
StreamReader
ƒƒ +
sr
ƒƒ, .
=
ƒƒ/ 0
new
ƒƒ1 4
StreamReader
ƒƒ5 A
(
ƒƒA B
Console
ƒƒB I
.
ƒƒI J
OpenStandardInput
ƒƒJ [
(
ƒƒ[ \
)
ƒƒ\ ]
)
ƒƒ] ^
)
ƒƒ^ _
{
≈≈ 
password
«« $
=
««% &
sr
««' )
.
««) *
ReadLine
««* 2
(
««2 3
)
««3 4
;
««4 5
}
»» 
}
…… 
}
   
catch
ÀÀ 
(
ÀÀ 
IOException
ÀÀ "
exceptIO
ÀÀ# +
)
ÀÀ+ ,
{
ÃÃ 
IO
ÕÕ 
.
ÕÕ 
Logger
ÕÕ 
.
ÕÕ 
Log
ÕÕ !
(
ÕÕ! "
NLog
ÕÕ" &
.
ÕÕ& '
LogLevel
ÕÕ' /
.
ÕÕ/ 0
Warn
ÕÕ0 4
,
ÕÕ4 5
$str
ÕÕ6 Q
,
ÕÕQ R
exceptIO
ÕÕS [
)
ÕÕ[ \
;
ÕÕ\ ]
}
ŒŒ 
finally
œœ 
{
–– 
try
—— 
{
““ 
if
”” 
(
”” 
listener
”” $
!=
””% '
null
””( ,
)
””, -
{
‘‘ 
listener
’’ $
.
’’$ %
Stop
’’% )
(
’’) *
)
’’* +
;
’’+ ,
}
÷÷ 
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
IOException
ÿÿ &
exceptIO
ÿÿ' /
)
ÿÿ/ 0
{
ŸŸ 
IO
⁄⁄ 
.
⁄⁄ 
Logger
⁄⁄ !
.
⁄⁄! "
Log
⁄⁄" %
(
⁄⁄% &
NLog
⁄⁄& *
.
⁄⁄* +
LogLevel
⁄⁄+ 3
.
⁄⁄3 4
Warn
⁄⁄4 8
,
⁄⁄8 9
$str
⁄⁄: U
,
⁄⁄U V
exceptIO
⁄⁄W _
)
⁄⁄_ `
;
⁄⁄` a
}
€€ 
}
‹‹ 
}
›› 
}
ﬁﬁ 	
else
ﬂﬂ 
{
‡‡ 	
password
„„ 
=
„„ 
null
„„ 
;
„„ 
}
‰‰ 	
if
ÂÂ 

(
ÂÂ 
IO
ÂÂ 
.
ÂÂ "
STATIC_READONLY_FIVE
ÂÂ #
!=
ÂÂ# %
$num
ÂÂ% &
)
ÂÂ& '
{
ÊÊ 	
IO
ËË 
.
ËË 
	WriteLine
ËË 
(
ËË 
$str
ËË /
)
ËË/ 0
;
ËË0 1
}
ÈÈ 	
else
ÍÍ 
{
ÎÎ 	
if
ÏÏ 
(
ÏÏ 
password
ÏÏ 
!=
ÏÏ 
null
ÏÏ  
)
ÏÏ  !
{
ÌÌ 
{
ÔÔ 
using
 
(
 &
AesCryptoServiceProvider
 3
aesAlg
4 :
=
; <
new
= @&
AesCryptoServiceProvider
A Y
(
Y Z
)
Z [
)
[ \
{
ÒÒ 
aesAlg
ÚÚ 
.
ÚÚ 
Padding
ÚÚ &
=
ÚÚ' (
PaddingMode
ÚÚ) 4
.
ÚÚ4 5
None
ÚÚ5 9
;
ÚÚ9 :
aesAlg
ÛÛ 
.
ÛÛ 
Key
ÛÛ "
=
ÛÛ# $
Encoding
ÛÛ% -
.
ÛÛ- .
UTF8
ÛÛ. 2
.
ÛÛ2 3
GetBytes
ÛÛ3 ;
(
ÛÛ; <
$str
ÛÛ< N
)
ÛÛN O
;
ÛÛO P
ICryptoTransform
ıı (
	decryptor
ıı) 2
=
ıı3 4
aesAlg
ıı5 ;
.
ıı; <
CreateDecryptor
ıı< K
(
ııK L
aesAlg
ııL R
.
ııR S
Key
ııS V
,
ııV W
aesAlg
ııX ^
.
ıı^ _
IV
ıı_ a
)
ııa b
;
ııb c
using
˜˜ 
(
˜˜ 
MemoryStream
˜˜ +
	msDecrypt
˜˜, 5
=
˜˜6 7
new
˜˜8 ;
MemoryStream
˜˜< H
(
˜˜H I
Encoding
˜˜I Q
.
˜˜Q R
UTF8
˜˜R V
.
˜˜V W
GetBytes
˜˜W _
(
˜˜_ `
password
˜˜` h
)
˜˜h i
)
˜˜i j
)
˜˜j k
{
¯¯ 
using
˘˘ !
(
˘˘" #
CryptoStream
˘˘# /
	csDecrypt
˘˘0 9
=
˘˘: ;
new
˘˘< ?
CryptoStream
˘˘@ L
(
˘˘L M
	msDecrypt
˘˘M V
,
˘˘V W
	decryptor
˘˘X a
,
˘˘a b
CryptoStreamMode
˘˘c s
.
˘˘s t
Read
˘˘t x
)
˘˘x y
)
˘˘y z
{
˙˙ 
using
˚˚  %
(
˚˚& '
StreamReader
˚˚' 3
	srDecrypt
˚˚4 =
=
˚˚> ?
new
˚˚@ C
StreamReader
˚˚D P
(
˚˚P Q
	csDecrypt
˚˚Q Z
)
˚˚Z [
)
˚˚[ \
{
¸¸  !
password
ˇˇ$ ,
=
ˇˇ- .
	srDecrypt
ˇˇ/ 8
.
ˇˇ8 9
	ReadToEnd
ˇˇ9 B
(
ˇˇB C
)
ˇˇC D
;
ˇˇD E
}
ÄÄ  !
}
ÅÅ 
}
ÇÇ 
}
ÉÉ 
}
ÑÑ 
try
ÖÖ 
{
ÜÜ 
using
àà 
(
àà 
SqlConnection
àà (

connection
àà) 3
=
àà4 5
new
àà6 9
SqlConnection
àà: G
(
ààG H
$str
ààH ~
+àà Ä
$strààÅ Ö
+ààÜ á
$strààà î
+ààï ñ
passwordààó ü
)ààü †
)àà† °
{
ââ 

connection
ää "
.
ää" #
Open
ää# '
(
ää' (
)
ää( )
;
ää) *
using
ãã 
(
ãã 

SqlCommand
ãã )
command
ãã* 1
=
ãã2 3
new
ãã4 7

SqlCommand
ãã8 B
(
ããB C
$str
ããC ]
,
ãã] ^

connection
ãã_ i
)
ããi j
)
ããj k
{
åå 
command
çç #
.
çç# $
ExecuteNonQuery
çç$ 3
(
çç3 4
)
çç4 5
;
çç5 6
}
éé 
}
èè 
}
êê 
catch
ëë 
(
ëë 
SqlException
ëë #
	exceptSql
ëë$ -
)
ëë- .
{
íí 
IO
ìì 
.
ìì 
Logger
ìì 
.
ìì 
Log
ìì !
(
ìì! "
NLog
ìì" &
.
ìì& '
LogLevel
ìì' /
.
ìì/ 0
Warn
ìì0 4
,
ìì4 5
$str
ìì6 V
,
ììV W
	exceptSql
ììX a
)
ììa b
;
ììb c
}
îî 
}
ïï 
}
ññ 	
}
óó 
private
öö 
void
öö 
GoodB2G2
öö 
(
öö 
)
öö 
{
õõ 
string
úú 
password
úú 
;
úú 
if
ùù 

(
ùù 
IO
ùù 
.
ùù "
STATIC_READONLY_FIVE
ùù #
==
ùù# %
$num
ùù% &
)
ùù& '
{
ûû 	
password
üü 
=
üü 
$str
üü 
;
üü 
{
°° 
TcpListener
¢¢ 
listener
¢¢ $
=
¢¢% &
null
¢¢' +
;
¢¢+ ,
try
££ 
{
§§ 
listener
¶¶ 
=
¶¶ 
new
¶¶ "
TcpListener
¶¶# .
(
¶¶. /
	IPAddress
¶¶/ 8
.
¶¶8 9
Parse
¶¶9 >
(
¶¶> ?
$str
¶¶? K
)
¶¶K L
,
¶¶L M
$num
¶¶N S
)
¶¶S T
;
¶¶T U
listener
ßß 
.
ßß 
Start
ßß "
(
ßß" #
)
ßß# $
;
ßß$ %
using
®® 
(
®® 
	TcpClient
®® $
tcpConn
®®% ,
=
®®- .
listener
®®/ 7
.
®®7 8
AcceptTcpClient
®®8 G
(
®®G H
)
®®H I
)
®®I J
{
©© 
using
™™ 
(
™™ 
StreamReader
™™ +
sr
™™, .
=
™™/ 0
new
™™1 4
StreamReader
™™5 A
(
™™A B
Console
™™B I
.
™™I J
OpenStandardInput
™™J [
(
™™[ \
)
™™\ ]
)
™™] ^
)
™™^ _
{
´´ 
password
≠≠ $
=
≠≠% &
sr
≠≠' )
.
≠≠) *
ReadLine
≠≠* 2
(
≠≠2 3
)
≠≠3 4
;
≠≠4 5
}
ÆÆ 
}
ØØ 
}
∞∞ 
catch
±± 
(
±± 
IOException
±± "
exceptIO
±±# +
)
±±+ ,
{
≤≤ 
IO
≥≥ 
.
≥≥ 
Logger
≥≥ 
.
≥≥ 
Log
≥≥ !
(
≥≥! "
NLog
≥≥" &
.
≥≥& '
LogLevel
≥≥' /
.
≥≥/ 0
Warn
≥≥0 4
,
≥≥4 5
$str
≥≥6 Q
,
≥≥Q R
exceptIO
≥≥S [
)
≥≥[ \
;
≥≥\ ]
}
¥¥ 
finally
µµ 
{
∂∂ 
try
∑∑ 
{
∏∏ 
if
ππ 
(
ππ 
listener
ππ $
!=
ππ% '
null
ππ( ,
)
ππ, -
{
∫∫ 
listener
ªª $
.
ªª$ %
Stop
ªª% )
(
ªª) *
)
ªª* +
;
ªª+ ,
}
ºº 
}
ΩΩ 
catch
ææ 
(
ææ 
IOException
ææ &
exceptIO
ææ' /
)
ææ/ 0
{
øø 
IO
¿¿ 
.
¿¿ 
Logger
¿¿ !
.
¿¿! "
Log
¿¿" %
(
¿¿% &
NLog
¿¿& *
.
¿¿* +
LogLevel
¿¿+ 3
.
¿¿3 4
Warn
¿¿4 8
,
¿¿8 9
$str
¿¿: U
,
¿¿U V
exceptIO
¿¿W _
)
¿¿_ `
;
¿¿` a
}
¡¡ 
}
¬¬ 
}
√√ 
}
ƒƒ 	
else
≈≈ 
{
∆∆ 	
password
…… 
=
…… 
null
…… 
;
…… 
}
   	
if
ÀÀ 

(
ÀÀ 
IO
ÀÀ 
.
ÀÀ "
STATIC_READONLY_FIVE
ÀÀ #
==
ÀÀ# %
$num
ÀÀ% &
)
ÀÀ& '
{
ÃÃ 	
if
ÕÕ 
(
ÕÕ 
password
ÕÕ 
!=
ÕÕ 
null
ÕÕ  
)
ÕÕ  !
{
ŒŒ 
{
–– 
using
—— 
(
—— &
AesCryptoServiceProvider
—— 3
aesAlg
——4 :
=
——; <
new
——= @&
AesCryptoServiceProvider
——A Y
(
——Y Z
)
——Z [
)
——[ \
{
““ 
aesAlg
”” 
.
”” 
Padding
”” &
=
””' (
PaddingMode
””) 4
.
””4 5
None
””5 9
;
””9 :
aesAlg
‘‘ 
.
‘‘ 
Key
‘‘ "
=
‘‘# $
Encoding
‘‘% -
.
‘‘- .
UTF8
‘‘. 2
.
‘‘2 3
GetBytes
‘‘3 ;
(
‘‘; <
$str
‘‘< N
)
‘‘N O
;
‘‘O P
ICryptoTransform
÷÷ (
	decryptor
÷÷) 2
=
÷÷3 4
aesAlg
÷÷5 ;
.
÷÷; <
CreateDecryptor
÷÷< K
(
÷÷K L
aesAlg
÷÷L R
.
÷÷R S
Key
÷÷S V
,
÷÷V W
aesAlg
÷÷X ^
.
÷÷^ _
IV
÷÷_ a
)
÷÷a b
;
÷÷b c
using
ÿÿ 
(
ÿÿ 
MemoryStream
ÿÿ +
	msDecrypt
ÿÿ, 5
=
ÿÿ6 7
new
ÿÿ8 ;
MemoryStream
ÿÿ< H
(
ÿÿH I
Encoding
ÿÿI Q
.
ÿÿQ R
UTF8
ÿÿR V
.
ÿÿV W
GetBytes
ÿÿW _
(
ÿÿ_ `
password
ÿÿ` h
)
ÿÿh i
)
ÿÿi j
)
ÿÿj k
{
ŸŸ 
using
⁄⁄ !
(
⁄⁄" #
CryptoStream
⁄⁄# /
	csDecrypt
⁄⁄0 9
=
⁄⁄: ;
new
⁄⁄< ?
CryptoStream
⁄⁄@ L
(
⁄⁄L M
	msDecrypt
⁄⁄M V
,
⁄⁄V W
	decryptor
⁄⁄X a
,
⁄⁄a b
CryptoStreamMode
⁄⁄c s
.
⁄⁄s t
Read
⁄⁄t x
)
⁄⁄x y
)
⁄⁄y z
{
€€ 
using
‹‹  %
(
‹‹& '
StreamReader
‹‹' 3
	srDecrypt
‹‹4 =
=
‹‹> ?
new
‹‹@ C
StreamReader
‹‹D P
(
‹‹P Q
	csDecrypt
‹‹Q Z
)
‹‹Z [
)
‹‹[ \
{
››  !
password
‡‡$ ,
=
‡‡- .
	srDecrypt
‡‡/ 8
.
‡‡8 9
	ReadToEnd
‡‡9 B
(
‡‡B C
)
‡‡C D
;
‡‡D E
}
··  !
}
‚‚ 
}
„„ 
}
‰‰ 
}
ÂÂ 
try
ÊÊ 
{
ÁÁ 
using
ÈÈ 
(
ÈÈ 
SqlConnection
ÈÈ (

connection
ÈÈ) 3
=
ÈÈ4 5
new
ÈÈ6 9
SqlConnection
ÈÈ: G
(
ÈÈG H
$str
ÈÈH ~
+ÈÈ Ä
$strÈÈÅ Ö
+ÈÈÜ á
$strÈÈà î
+ÈÈï ñ
passwordÈÈó ü
)ÈÈü †
)ÈÈ† °
{
ÍÍ 

connection
ÎÎ "
.
ÎÎ" #
Open
ÎÎ# '
(
ÎÎ' (
)
ÎÎ( )
;
ÎÎ) *
using
ÏÏ 
(
ÏÏ 

SqlCommand
ÏÏ )
command
ÏÏ* 1
=
ÏÏ2 3
new
ÏÏ4 7

SqlCommand
ÏÏ8 B
(
ÏÏB C
$str
ÏÏC ]
,
ÏÏ] ^

connection
ÏÏ_ i
)
ÏÏi j
)
ÏÏj k
{
ÌÌ 
command
ÓÓ #
.
ÓÓ# $
ExecuteNonQuery
ÓÓ$ 3
(
ÓÓ3 4
)
ÓÓ4 5
;
ÓÓ5 6
}
ÔÔ 
}
 
}
ÒÒ 
catch
ÚÚ 
(
ÚÚ 
SqlException
ÚÚ #
	exceptSql
ÚÚ$ -
)
ÚÚ- .
{
ÛÛ 
IO
ÙÙ 
.
ÙÙ 
Logger
ÙÙ 
.
ÙÙ 
Log
ÙÙ !
(
ÙÙ! "
NLog
ÙÙ" &
.
ÙÙ& '
LogLevel
ÙÙ' /
.
ÙÙ/ 0
Warn
ÙÙ0 4
,
ÙÙ4 5
$str
ÙÙ6 V
,
ÙÙV W
	exceptSql
ÙÙX a
)
ÙÙa b
;
ÙÙb c
}
ıı 
}
ˆˆ 
}
˜˜ 	
}
¯¯ 
public
˙˙ 

override
˙˙ 
void
˙˙ 
Good
˙˙ 
(
˙˙ 
)
˙˙ 
{
˚˚ 
GoodG2B1
¸¸ 
(
¸¸ 
)
¸¸ 
;
¸¸ 
GoodG2B2
˝˝ 
(
˝˝ 
)
˝˝ 
;
˝˝ 
GoodB2G1
˛˛ 
(
˛˛ 
)
˛˛ 
;
˛˛ 
GoodB2G2
ˇˇ 
(
ˇˇ 
)
ˇˇ 
;
ˇˇ 
}
ÄÄ 
}ÇÇ 
}ÉÉ ãæ
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_14.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_14 E
:F G
AbstractTestCaseH X
{   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
string$$ 
password$$ 
;$$ 
if%% 

(%% 
IO%% 
.%% 

staticFive%% 
==%% 
$num%% 
)%% 
{&& 	
password'' 
='' 
$str'' 
;'' 
{)) 
TcpListener** 
listener** $
=**% &
null**' +
;**+ ,
try++ 
{,, 
listener.. 
=.. 
new.. "
TcpListener..# .
(... /
	IPAddress../ 8
...8 9
Parse..9 >
(..> ?
$str..? K
)..K L
,..L M
$num..N S
)..S T
;..T U
listener// 
.// 
Start// "
(//" #
)//# $
;//$ %
using00 
(00 
	TcpClient00 $
tcpConn00% ,
=00- .
listener00/ 7
.007 8
AcceptTcpClient008 G
(00G H
)00H I
)00I J
{11 
using22 
(22 
StreamReader22 +
sr22, .
=22/ 0
new221 4
StreamReader225 A
(22A B
Console22B I
.22I J
OpenStandardInput22J [
(22[ \
)22\ ]
)22] ^
)22^ _
{33 
password55 $
=55% &
sr55' )
.55) *
ReadLine55* 2
(552 3
)553 4
;554 5
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
$str;;6 Q
,;;Q R
exceptIO;;S [
);;[ \
;;;\ ]
}<< 
finally== 
{>> 
try?? 
{@@ 
ifAA 
(AA 
listenerAA $
!=AA% '
nullAA( ,
)AA, -
{BB 
listenerCC $
.CC$ %
StopCC% )
(CC) *
)CC* +
;CC+ ,
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF &
exceptIOFF' /
)FF/ 0
{GG 
IOHH 
.HH 
LoggerHH !
.HH! "
LogHH" %
(HH% &
NLogHH& *
.HH* +
LogLevelHH+ 3
.HH3 4
WarnHH4 8
,HH8 9
$strHH: U
,HHU V
exceptIOHHW _
)HH_ `
;HH` a
}II 
}JJ 
}KK 
}LL 	
elseMM 
{NN 	
passwordQQ 
=QQ 
nullQQ 
;QQ 
}RR 	
ifSS 

(SS 
IOSS 
.SS 

staticFiveSS 
==SS 
$numSS 
)SS 
{TT 	
tryUU 
{VV 
usingXX 
(XX 
SqlConnectionXX $

connectionXX% /
=XX0 1
newXX2 5
SqlConnectionXX6 C
(XXC D
$strXXD z
+XX{ |
$str	XX} Å
+
XXÇ É
$str
XXÑ ê
+
XXë í
password
XXì õ
)
XXõ ú
)
XXú ù
{YY 

connectionZZ 
.ZZ 
OpenZZ #
(ZZ# $
)ZZ$ %
;ZZ% &
using[[ 
([[ 

SqlCommand[[ %
command[[& -
=[[. /
new[[0 3

SqlCommand[[4 >
([[> ?
$str[[? Y
,[[Y Z

connection[[[ e
)[[e f
)[[f g
{\\ 
command]] 
.]]  
ExecuteNonQuery]]  /
(]]/ 0
)]]0 1
;]]1 2
}^^ 
}__ 
}`` 
catchaa 
(aa 
SqlExceptionaa 
	exceptSqlaa  )
)aa) *
{bb 
IOcc 
.cc 
Loggercc 
.cc 
Logcc 
(cc 
NLogcc "
.cc" #
LogLevelcc# +
.cc+ ,
Warncc, 0
,cc0 1
$strcc2 R
,ccR S
	exceptSqlccT ]
)cc] ^
;cc^ _
}dd 
}ee 	
}ff 
privatejj 
voidjj 
GoodG2B1jj 
(jj 
)jj 
{kk 
stringll 
passwordll 
;ll 
ifmm 

(mm 
IOmm 
.mm 

staticFivemm 
!=mm 
$nummm 
)mm 
{nn 	
passwordqq 
=qq 
nullqq 
;qq 
}rr 	
elsess 
{tt 	
passwordww 
=ww 
$strww &
;ww& '
}xx 	
ifyy 

(yy 
IOyy 
.yy 

staticFiveyy 
==yy 
$numyy 
)yy 
{zz 	
try{{ 
{|| 
using~~ 
(~~ 
SqlConnection~~ $

connection~~% /
=~~0 1
new~~2 5
SqlConnection~~6 C
(~~C D
$str~~D z
+~~{ |
$str	~~} Å
+
~~Ç É
$str
~~Ñ ê
+
~~ë í
password
~~ì õ
)
~~õ ú
)
~~ú ù
{ 

connection
ÄÄ 
.
ÄÄ 
Open
ÄÄ #
(
ÄÄ# $
)
ÄÄ$ %
;
ÄÄ% &
using
ÅÅ 
(
ÅÅ 

SqlCommand
ÅÅ %
command
ÅÅ& -
=
ÅÅ. /
new
ÅÅ0 3

SqlCommand
ÅÅ4 >
(
ÅÅ> ?
$str
ÅÅ? Y
,
ÅÅY Z

connection
ÅÅ[ e
)
ÅÅe f
)
ÅÅf g
{
ÇÇ 
command
ÉÉ 
.
ÉÉ  
ExecuteNonQuery
ÉÉ  /
(
ÉÉ/ 0
)
ÉÉ0 1
;
ÉÉ1 2
}
ÑÑ 
}
ÖÖ 
}
ÜÜ 
catch
áá 
(
áá 
SqlException
áá 
	exceptSql
áá  )
)
áá) *
{
àà 
IO
ââ 
.
ââ 
Logger
ââ 
.
ââ 
Log
ââ 
(
ââ 
NLog
ââ "
.
ââ" #
LogLevel
ââ# +
.
ââ+ ,
Warn
ââ, 0
,
ââ0 1
$str
ââ2 R
,
ââR S
	exceptSql
ââT ]
)
ââ] ^
;
ââ^ _
}
ää 
}
ãã 	
}
åå 
private
èè 
void
èè 
GoodG2B2
èè 
(
èè 
)
èè 
{
êê 
string
ëë 
password
ëë 
;
ëë 
if
íí 

(
íí 
IO
íí 
.
íí 

staticFive
íí 
==
íí 
$num
íí 
)
íí 
{
ìì 	
password
ññ 
=
ññ 
$str
ññ &
;
ññ& '
}
óó 	
else
òò 
{
ôô 	
password
úú 
=
úú 
null
úú 
;
úú 
}
ùù 	
if
ûû 

(
ûû 
IO
ûû 
.
ûû 

staticFive
ûû 
==
ûû 
$num
ûû 
)
ûû 
{
üü 	
try
†† 
{
°° 
using
££ 
(
££ 
SqlConnection
££ $

connection
££% /
=
££0 1
new
££2 5
SqlConnection
££6 C
(
££C D
$str
££D z
+
££{ |
$str££} Å
+££Ç É
$str££Ñ ê
+££ë í
password££ì õ
)££õ ú
)££ú ù
{
§§ 

connection
•• 
.
•• 
Open
•• #
(
••# $
)
••$ %
;
••% &
using
¶¶ 
(
¶¶ 

SqlCommand
¶¶ %
command
¶¶& -
=
¶¶. /
new
¶¶0 3

SqlCommand
¶¶4 >
(
¶¶> ?
$str
¶¶? Y
,
¶¶Y Z

connection
¶¶[ e
)
¶¶e f
)
¶¶f g
{
ßß 
command
®® 
.
®®  
ExecuteNonQuery
®®  /
(
®®/ 0
)
®®0 1
;
®®1 2
}
©© 
}
™™ 
}
´´ 
catch
¨¨ 
(
¨¨ 
SqlException
¨¨ 
	exceptSql
¨¨  )
)
¨¨) *
{
≠≠ 
IO
ÆÆ 
.
ÆÆ 
Logger
ÆÆ 
.
ÆÆ 
Log
ÆÆ 
(
ÆÆ 
NLog
ÆÆ "
.
ÆÆ" #
LogLevel
ÆÆ# +
.
ÆÆ+ ,
Warn
ÆÆ, 0
,
ÆÆ0 1
$str
ÆÆ2 R
,
ÆÆR S
	exceptSql
ÆÆT ]
)
ÆÆ] ^
;
ÆÆ^ _
}
ØØ 
}
∞∞ 	
}
±± 
private
¥¥ 
void
¥¥ 
GoodB2G1
¥¥ 
(
¥¥ 
)
¥¥ 
{
µµ 
string
∂∂ 
password
∂∂ 
;
∂∂ 
if
∑∑ 

(
∑∑ 
IO
∑∑ 
.
∑∑ 

staticFive
∑∑ 
==
∑∑ 
$num
∑∑ 
)
∑∑ 
{
∏∏ 	
password
ππ 
=
ππ 
$str
ππ 
;
ππ 
{
ªª 
TcpListener
ºº 
listener
ºº $
=
ºº% &
null
ºº' +
;
ºº+ ,
try
ΩΩ 
{
ææ 
listener
¿¿ 
=
¿¿ 
new
¿¿ "
TcpListener
¿¿# .
(
¿¿. /
	IPAddress
¿¿/ 8
.
¿¿8 9
Parse
¿¿9 >
(
¿¿> ?
$str
¿¿? K
)
¿¿K L
,
¿¿L M
$num
¿¿N S
)
¿¿S T
;
¿¿T U
listener
¡¡ 
.
¡¡ 
Start
¡¡ "
(
¡¡" #
)
¡¡# $
;
¡¡$ %
using
¬¬ 
(
¬¬ 
	TcpClient
¬¬ $
tcpConn
¬¬% ,
=
¬¬- .
listener
¬¬/ 7
.
¬¬7 8
AcceptTcpClient
¬¬8 G
(
¬¬G H
)
¬¬H I
)
¬¬I J
{
√√ 
using
ƒƒ 
(
ƒƒ 
StreamReader
ƒƒ +
sr
ƒƒ, .
=
ƒƒ/ 0
new
ƒƒ1 4
StreamReader
ƒƒ5 A
(
ƒƒA B
Console
ƒƒB I
.
ƒƒI J
OpenStandardInput
ƒƒJ [
(
ƒƒ[ \
)
ƒƒ\ ]
)
ƒƒ] ^
)
ƒƒ^ _
{
≈≈ 
password
«« $
=
««% &
sr
««' )
.
««) *
ReadLine
««* 2
(
««2 3
)
««3 4
;
««4 5
}
»» 
}
…… 
}
   
catch
ÀÀ 
(
ÀÀ 
IOException
ÀÀ "
exceptIO
ÀÀ# +
)
ÀÀ+ ,
{
ÃÃ 
IO
ÕÕ 
.
ÕÕ 
Logger
ÕÕ 
.
ÕÕ 
Log
ÕÕ !
(
ÕÕ! "
NLog
ÕÕ" &
.
ÕÕ& '
LogLevel
ÕÕ' /
.
ÕÕ/ 0
Warn
ÕÕ0 4
,
ÕÕ4 5
$str
ÕÕ6 Q
,
ÕÕQ R
exceptIO
ÕÕS [
)
ÕÕ[ \
;
ÕÕ\ ]
}
ŒŒ 
finally
œœ 
{
–– 
try
—— 
{
““ 
if
”” 
(
”” 
listener
”” $
!=
””% '
null
””( ,
)
””, -
{
‘‘ 
listener
’’ $
.
’’$ %
Stop
’’% )
(
’’) *
)
’’* +
;
’’+ ,
}
÷÷ 
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
IOException
ÿÿ &
exceptIO
ÿÿ' /
)
ÿÿ/ 0
{
ŸŸ 
IO
⁄⁄ 
.
⁄⁄ 
Logger
⁄⁄ !
.
⁄⁄! "
Log
⁄⁄" %
(
⁄⁄% &
NLog
⁄⁄& *
.
⁄⁄* +
LogLevel
⁄⁄+ 3
.
⁄⁄3 4
Warn
⁄⁄4 8
,
⁄⁄8 9
$str
⁄⁄: U
,
⁄⁄U V
exceptIO
⁄⁄W _
)
⁄⁄_ `
;
⁄⁄` a
}
€€ 
}
‹‹ 
}
›› 
}
ﬁﬁ 	
else
ﬂﬂ 
{
‡‡ 	
password
„„ 
=
„„ 
null
„„ 
;
„„ 
}
‰‰ 	
if
ÂÂ 

(
ÂÂ 
IO
ÂÂ 
.
ÂÂ 

staticFive
ÂÂ 
!=
ÂÂ 
$num
ÂÂ 
)
ÂÂ 
{
ÊÊ 	
IO
ËË 
.
ËË 
	WriteLine
ËË 
(
ËË 
$str
ËË /
)
ËË/ 0
;
ËË0 1
}
ÈÈ 	
else
ÍÍ 
{
ÎÎ 	
if
ÏÏ 
(
ÏÏ 
password
ÏÏ 
!=
ÏÏ 
null
ÏÏ  
)
ÏÏ  !
{
ÌÌ 
{
ÔÔ 
using
 
(
 &
AesCryptoServiceProvider
 3
aesAlg
4 :
=
; <
new
= @&
AesCryptoServiceProvider
A Y
(
Y Z
)
Z [
)
[ \
{
ÒÒ 
aesAlg
ÚÚ 
.
ÚÚ 
Padding
ÚÚ &
=
ÚÚ' (
PaddingMode
ÚÚ) 4
.
ÚÚ4 5
None
ÚÚ5 9
;
ÚÚ9 :
aesAlg
ÛÛ 
.
ÛÛ 
Key
ÛÛ "
=
ÛÛ# $
Encoding
ÛÛ% -
.
ÛÛ- .
UTF8
ÛÛ. 2
.
ÛÛ2 3
GetBytes
ÛÛ3 ;
(
ÛÛ; <
$str
ÛÛ< N
)
ÛÛN O
;
ÛÛO P
ICryptoTransform
ıı (
	decryptor
ıı) 2
=
ıı3 4
aesAlg
ıı5 ;
.
ıı; <
CreateDecryptor
ıı< K
(
ııK L
aesAlg
ııL R
.
ııR S
Key
ııS V
,
ııV W
aesAlg
ııX ^
.
ıı^ _
IV
ıı_ a
)
ııa b
;
ııb c
using
˜˜ 
(
˜˜ 
MemoryStream
˜˜ +
	msDecrypt
˜˜, 5
=
˜˜6 7
new
˜˜8 ;
MemoryStream
˜˜< H
(
˜˜H I
Encoding
˜˜I Q
.
˜˜Q R
UTF8
˜˜R V
.
˜˜V W
GetBytes
˜˜W _
(
˜˜_ `
password
˜˜` h
)
˜˜h i
)
˜˜i j
)
˜˜j k
{
¯¯ 
using
˘˘ !
(
˘˘" #
CryptoStream
˘˘# /
	csDecrypt
˘˘0 9
=
˘˘: ;
new
˘˘< ?
CryptoStream
˘˘@ L
(
˘˘L M
	msDecrypt
˘˘M V
,
˘˘V W
	decryptor
˘˘X a
,
˘˘a b
CryptoStreamMode
˘˘c s
.
˘˘s t
Read
˘˘t x
)
˘˘x y
)
˘˘y z
{
˙˙ 
using
˚˚  %
(
˚˚& '
StreamReader
˚˚' 3
	srDecrypt
˚˚4 =
=
˚˚> ?
new
˚˚@ C
StreamReader
˚˚D P
(
˚˚P Q
	csDecrypt
˚˚Q Z
)
˚˚Z [
)
˚˚[ \
{
¸¸  !
password
ˇˇ$ ,
=
ˇˇ- .
	srDecrypt
ˇˇ/ 8
.
ˇˇ8 9
	ReadToEnd
ˇˇ9 B
(
ˇˇB C
)
ˇˇC D
;
ˇˇD E
}
ÄÄ  !
}
ÅÅ 
}
ÇÇ 
}
ÉÉ 
}
ÑÑ 
try
ÖÖ 
{
ÜÜ 
using
àà 
(
àà 
SqlConnection
àà (

connection
àà) 3
=
àà4 5
new
àà6 9
SqlConnection
àà: G
(
ààG H
$str
ààH ~
+àà Ä
$strààÅ Ö
+ààÜ á
$strààà î
+ààï ñ
passwordààó ü
)ààü †
)àà† °
{
ââ 

connection
ää "
.
ää" #
Open
ää# '
(
ää' (
)
ää( )
;
ää) *
using
ãã 
(
ãã 

SqlCommand
ãã )
command
ãã* 1
=
ãã2 3
new
ãã4 7

SqlCommand
ãã8 B
(
ããB C
$str
ããC ]
,
ãã] ^

connection
ãã_ i
)
ããi j
)
ããj k
{
åå 
command
çç #
.
çç# $
ExecuteNonQuery
çç$ 3
(
çç3 4
)
çç4 5
;
çç5 6
}
éé 
}
èè 
}
êê 
catch
ëë 
(
ëë 
SqlException
ëë #
	exceptSql
ëë$ -
)
ëë- .
{
íí 
IO
ìì 
.
ìì 
Logger
ìì 
.
ìì 
Log
ìì !
(
ìì! "
NLog
ìì" &
.
ìì& '
LogLevel
ìì' /
.
ìì/ 0
Warn
ìì0 4
,
ìì4 5
$str
ìì6 V
,
ììV W
	exceptSql
ììX a
)
ììa b
;
ììb c
}
îî 
}
ïï 
}
ññ 	
}
óó 
private
öö 
void
öö 
GoodB2G2
öö 
(
öö 
)
öö 
{
õõ 
string
úú 
password
úú 
;
úú 
if
ùù 

(
ùù 
IO
ùù 
.
ùù 

staticFive
ùù 
==
ùù 
$num
ùù 
)
ùù 
{
ûû 	
password
üü 
=
üü 
$str
üü 
;
üü 
{
°° 
TcpListener
¢¢ 
listener
¢¢ $
=
¢¢% &
null
¢¢' +
;
¢¢+ ,
try
££ 
{
§§ 
listener
¶¶ 
=
¶¶ 
new
¶¶ "
TcpListener
¶¶# .
(
¶¶. /
	IPAddress
¶¶/ 8
.
¶¶8 9
Parse
¶¶9 >
(
¶¶> ?
$str
¶¶? K
)
¶¶K L
,
¶¶L M
$num
¶¶N S
)
¶¶S T
;
¶¶T U
listener
ßß 
.
ßß 
Start
ßß "
(
ßß" #
)
ßß# $
;
ßß$ %
using
®® 
(
®® 
	TcpClient
®® $
tcpConn
®®% ,
=
®®- .
listener
®®/ 7
.
®®7 8
AcceptTcpClient
®®8 G
(
®®G H
)
®®H I
)
®®I J
{
©© 
using
™™ 
(
™™ 
StreamReader
™™ +
sr
™™, .
=
™™/ 0
new
™™1 4
StreamReader
™™5 A
(
™™A B
Console
™™B I
.
™™I J
OpenStandardInput
™™J [
(
™™[ \
)
™™\ ]
)
™™] ^
)
™™^ _
{
´´ 
password
≠≠ $
=
≠≠% &
sr
≠≠' )
.
≠≠) *
ReadLine
≠≠* 2
(
≠≠2 3
)
≠≠3 4
;
≠≠4 5
}
ÆÆ 
}
ØØ 
}
∞∞ 
catch
±± 
(
±± 
IOException
±± "
exceptIO
±±# +
)
±±+ ,
{
≤≤ 
IO
≥≥ 
.
≥≥ 
Logger
≥≥ 
.
≥≥ 
Log
≥≥ !
(
≥≥! "
NLog
≥≥" &
.
≥≥& '
LogLevel
≥≥' /
.
≥≥/ 0
Warn
≥≥0 4
,
≥≥4 5
$str
≥≥6 Q
,
≥≥Q R
exceptIO
≥≥S [
)
≥≥[ \
;
≥≥\ ]
}
¥¥ 
finally
µµ 
{
∂∂ 
try
∑∑ 
{
∏∏ 
if
ππ 
(
ππ 
listener
ππ $
!=
ππ% '
null
ππ( ,
)
ππ, -
{
∫∫ 
listener
ªª $
.
ªª$ %
Stop
ªª% )
(
ªª) *
)
ªª* +
;
ªª+ ,
}
ºº 
}
ΩΩ 
catch
ææ 
(
ææ 
IOException
ææ &
exceptIO
ææ' /
)
ææ/ 0
{
øø 
IO
¿¿ 
.
¿¿ 
Logger
¿¿ !
.
¿¿! "
Log
¿¿" %
(
¿¿% &
NLog
¿¿& *
.
¿¿* +
LogLevel
¿¿+ 3
.
¿¿3 4
Warn
¿¿4 8
,
¿¿8 9
$str
¿¿: U
,
¿¿U V
exceptIO
¿¿W _
)
¿¿_ `
;
¿¿` a
}
¡¡ 
}
¬¬ 
}
√√ 
}
ƒƒ 	
else
≈≈ 
{
∆∆ 	
password
…… 
=
…… 
null
…… 
;
…… 
}
   	
if
ÀÀ 

(
ÀÀ 
IO
ÀÀ 
.
ÀÀ 

staticFive
ÀÀ 
==
ÀÀ 
$num
ÀÀ 
)
ÀÀ 
{
ÃÃ 	
if
ÕÕ 
(
ÕÕ 
password
ÕÕ 
!=
ÕÕ 
null
ÕÕ  
)
ÕÕ  !
{
ŒŒ 
{
–– 
using
—— 
(
—— &
AesCryptoServiceProvider
—— 3
aesAlg
——4 :
=
——; <
new
——= @&
AesCryptoServiceProvider
——A Y
(
——Y Z
)
——Z [
)
——[ \
{
““ 
aesAlg
”” 
.
”” 
Padding
”” &
=
””' (
PaddingMode
””) 4
.
””4 5
None
””5 9
;
””9 :
aesAlg
‘‘ 
.
‘‘ 
Key
‘‘ "
=
‘‘# $
Encoding
‘‘% -
.
‘‘- .
UTF8
‘‘. 2
.
‘‘2 3
GetBytes
‘‘3 ;
(
‘‘; <
$str
‘‘< N
)
‘‘N O
;
‘‘O P
ICryptoTransform
÷÷ (
	decryptor
÷÷) 2
=
÷÷3 4
aesAlg
÷÷5 ;
.
÷÷; <
CreateDecryptor
÷÷< K
(
÷÷K L
aesAlg
÷÷L R
.
÷÷R S
Key
÷÷S V
,
÷÷V W
aesAlg
÷÷X ^
.
÷÷^ _
IV
÷÷_ a
)
÷÷a b
;
÷÷b c
using
ÿÿ 
(
ÿÿ 
MemoryStream
ÿÿ +
	msDecrypt
ÿÿ, 5
=
ÿÿ6 7
new
ÿÿ8 ;
MemoryStream
ÿÿ< H
(
ÿÿH I
Encoding
ÿÿI Q
.
ÿÿQ R
UTF8
ÿÿR V
.
ÿÿV W
GetBytes
ÿÿW _
(
ÿÿ_ `
password
ÿÿ` h
)
ÿÿh i
)
ÿÿi j
)
ÿÿj k
{
ŸŸ 
using
⁄⁄ !
(
⁄⁄" #
CryptoStream
⁄⁄# /
	csDecrypt
⁄⁄0 9
=
⁄⁄: ;
new
⁄⁄< ?
CryptoStream
⁄⁄@ L
(
⁄⁄L M
	msDecrypt
⁄⁄M V
,
⁄⁄V W
	decryptor
⁄⁄X a
,
⁄⁄a b
CryptoStreamMode
⁄⁄c s
.
⁄⁄s t
Read
⁄⁄t x
)
⁄⁄x y
)
⁄⁄y z
{
€€ 
using
‹‹  %
(
‹‹& '
StreamReader
‹‹' 3
	srDecrypt
‹‹4 =
=
‹‹> ?
new
‹‹@ C
StreamReader
‹‹D P
(
‹‹P Q
	csDecrypt
‹‹Q Z
)
‹‹Z [
)
‹‹[ \
{
››  !
password
‡‡$ ,
=
‡‡- .
	srDecrypt
‡‡/ 8
.
‡‡8 9
	ReadToEnd
‡‡9 B
(
‡‡B C
)
‡‡C D
;
‡‡D E
}
··  !
}
‚‚ 
}
„„ 
}
‰‰ 
}
ÂÂ 
try
ÊÊ 
{
ÁÁ 
using
ÈÈ 
(
ÈÈ 
SqlConnection
ÈÈ (

connection
ÈÈ) 3
=
ÈÈ4 5
new
ÈÈ6 9
SqlConnection
ÈÈ: G
(
ÈÈG H
$str
ÈÈH ~
+ÈÈ Ä
$strÈÈÅ Ö
+ÈÈÜ á
$strÈÈà î
+ÈÈï ñ
passwordÈÈó ü
)ÈÈü †
)ÈÈ† °
{
ÍÍ 

connection
ÎÎ "
.
ÎÎ" #
Open
ÎÎ# '
(
ÎÎ' (
)
ÎÎ( )
;
ÎÎ) *
using
ÏÏ 
(
ÏÏ 

SqlCommand
ÏÏ )
command
ÏÏ* 1
=
ÏÏ2 3
new
ÏÏ4 7

SqlCommand
ÏÏ8 B
(
ÏÏB C
$str
ÏÏC ]
,
ÏÏ] ^

connection
ÏÏ_ i
)
ÏÏi j
)
ÏÏj k
{
ÌÌ 
command
ÓÓ #
.
ÓÓ# $
ExecuteNonQuery
ÓÓ$ 3
(
ÓÓ3 4
)
ÓÓ4 5
;
ÓÓ5 6
}
ÔÔ 
}
 
}
ÒÒ 
catch
ÚÚ 
(
ÚÚ 
SqlException
ÚÚ #
	exceptSql
ÚÚ$ -
)
ÚÚ- .
{
ÛÛ 
IO
ÙÙ 
.
ÙÙ 
Logger
ÙÙ 
.
ÙÙ 
Log
ÙÙ !
(
ÙÙ! "
NLog
ÙÙ" &
.
ÙÙ& '
LogLevel
ÙÙ' /
.
ÙÙ/ 0
Warn
ÙÙ0 4
,
ÙÙ4 5
$str
ÙÙ6 V
,
ÙÙV W
	exceptSql
ÙÙX a
)
ÙÙa b
;
ÙÙb c
}
ıı 
}
ˆˆ 
}
˜˜ 	
}
¯¯ 
public
˙˙ 

override
˙˙ 
void
˙˙ 
Good
˙˙ 
(
˙˙ 
)
˙˙ 
{
˚˚ 
GoodG2B1
¸¸ 
(
¸¸ 
)
¸¸ 
;
¸¸ 
GoodG2B2
˝˝ 
(
˝˝ 
)
˝˝ 
;
˝˝ 
GoodB2G1
˛˛ 
(
˛˛ 
)
˛˛ 
;
˛˛ 
GoodB2G2
ˇˇ 
(
ˇˇ 
)
ˇˇ 
;
ˇˇ 
}
ÄÄ 
}ÇÇ 
}ÉÉ √«
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_15.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_15 E
:F G
AbstractTestCaseH X
{   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
string$$ 
password$$ 
;$$ 
switch%% 
(%% 
$num%% 
)%% 
{&& 	
case'' 
$num'' 
:'' 
password(( 
=(( 
$str(( 
;(( 
{** 
TcpListener++ 
listener++ $
=++% &
null++' +
;+++ ,
try,, 
{-- 
listener// 
=// 
new// "
TcpListener//# .
(//. /
	IPAddress/// 8
.//8 9
Parse//9 >
(//> ?
$str//? K
)//K L
,//L M
$num//N S
)//S T
;//T U
listener00 
.00 
Start00 "
(00" #
)00# $
;00$ %
using11 
(11 
	TcpClient11 $
tcpConn11% ,
=11- .
listener11/ 7
.117 8
AcceptTcpClient118 G
(11G H
)11H I
)11I J
{22 
using33 
(33 
StreamReader33 +
sr33, .
=33/ 0
new331 4
StreamReader335 A
(33A B
Console33B I
.33I J
OpenStandardInput33J [
(33[ \
)33\ ]
)33] ^
)33^ _
{44 
password66 $
=66% &
sr66' )
.66) *
ReadLine66* 2
(662 3
)663 4
;664 5
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
$str<<6 Q
,<<Q R
exceptIO<<S [
)<<[ \
;<<\ ]
}== 
finally>> 
{?? 
try@@ 
{AA 
ifBB 
(BB 
listenerBB $
!=BB% '
nullBB( ,
)BB, -
{CC 
listenerDD $
.DD$ %
StopDD% )
(DD) *
)DD* +
;DD+ ,
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG &
exceptIOGG' /
)GG/ 0
{HH 
IOII 
.II 
LoggerII !
.II! "
LogII" %
(II% &
NLogII& *
.II* +
LogLevelII+ 3
.II3 4
WarnII4 8
,II8 9
$strII: U
,IIU V
exceptIOIIW _
)II_ `
;II` a
}JJ 
}KK 
}LL 
breakMM 
;MM 
defaultNN 
:NN 
passwordQQ 
=QQ 
nullQQ 
;QQ 
breakRR 
;RR 
}SS 	
switchTT 
(TT 
$numTT 
)TT 
{UU 	
caseVV 
$numVV 
:VV 
tryWW 
{XX 
usingZZ 
(ZZ 
SqlConnectionZZ $

connectionZZ% /
=ZZ0 1
newZZ2 5
SqlConnectionZZ6 C
(ZZC D
$strZZD z
+ZZ{ |
$str	ZZ} Å
+
ZZÇ É
$str
ZZÑ ê
+
ZZë í
password
ZZì õ
)
ZZõ ú
)
ZZú ù
{[[ 

connection\\ 
.\\ 
Open\\ #
(\\# $
)\\$ %
;\\% &
using]] 
(]] 

SqlCommand]] %
command]]& -
=]]. /
new]]0 3

SqlCommand]]4 >
(]]> ?
$str]]? Y
,]]Y Z

connection]][ e
)]]e f
)]]f g
{^^ 
command__ 
.__  
ExecuteNonQuery__  /
(__/ 0
)__0 1
;__1 2
}`` 
}aa 
}bb 
catchcc 
(cc 
SqlExceptioncc 
	exceptSqlcc  )
)cc) *
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee 
(ee 
NLogee "
.ee" #
LogLevelee# +
.ee+ ,
Warnee, 0
,ee0 1
$stree2 R
,eeR S
	exceptSqleeT ]
)ee] ^
;ee^ _
}ff 
breakgg 
;gg 
defaulthh 
:hh 
IOjj 
.jj 
	WriteLinejj 
(jj 
$strjj /
)jj/ 0
;jj0 1
breakkk 
;kk 
}ll 	
}mm 
privateqq 
voidqq 
GoodG2B1qq 
(qq 
)qq 
{rr 
stringss 
passwordss 
;ss 
switchtt 
(tt 
$numtt 
)tt 
{uu 	
casevv 
$numvv 
:vv 
passwordyy 
=yy 
nullyy 
;yy 
breakzz 
;zz 
default{{ 
:{{ 
password~~ 
=~~ 
$str~~ &
;~~& '
break 
; 
}
ÄÄ 	
switch
ÅÅ 
(
ÅÅ 
$num
ÅÅ 
)
ÅÅ 
{
ÇÇ 	
case
ÉÉ 
$num
ÉÉ 
:
ÉÉ 
try
ÑÑ 
{
ÖÖ 
using
áá 
(
áá 
SqlConnection
áá $

connection
áá% /
=
áá0 1
new
áá2 5
SqlConnection
áá6 C
(
ááC D
$str
ááD z
+
áá{ |
$stráá} Å
+ááÇ É
$strááÑ ê
+ááë í
passwordááì õ
)ááõ ú
)ááú ù
{
àà 

connection
ââ 
.
ââ 
Open
ââ #
(
ââ# $
)
ââ$ %
;
ââ% &
using
ää 
(
ää 

SqlCommand
ää %
command
ää& -
=
ää. /
new
ää0 3

SqlCommand
ää4 >
(
ää> ?
$str
ää? Y
,
ääY Z

connection
ää[ e
)
ääe f
)
ääf g
{
ãã 
command
åå 
.
åå  
ExecuteNonQuery
åå  /
(
åå/ 0
)
åå0 1
;
åå1 2
}
çç 
}
éé 
}
èè 
catch
êê 
(
êê 
SqlException
êê 
	exceptSql
êê  )
)
êê) *
{
ëë 
IO
íí 
.
íí 
Logger
íí 
.
íí 
Log
íí 
(
íí 
NLog
íí "
.
íí" #
LogLevel
íí# +
.
íí+ ,
Warn
íí, 0
,
íí0 1
$str
íí2 R
,
ííR S
	exceptSql
ííT ]
)
íí] ^
;
íí^ _
}
ìì 
break
îî 
;
îî 
default
ïï 
:
ïï 
IO
óó 
.
óó 
	WriteLine
óó 
(
óó 
$str
óó /
)
óó/ 0
;
óó0 1
break
òò 
;
òò 
}
ôô 	
}
öö 
private
ùù 
void
ùù 
GoodG2B2
ùù 
(
ùù 
)
ùù 
{
ûû 
string
üü 
password
üü 
;
üü 
switch
†† 
(
†† 
$num
†† 
)
†† 
{
°° 	
case
¢¢ 
$num
¢¢ 
:
¢¢ 
password
•• 
=
•• 
$str
•• &
;
••& '
break
¶¶ 
;
¶¶ 
default
ßß 
:
ßß 
password
™™ 
=
™™ 
null
™™ 
;
™™ 
break
´´ 
;
´´ 
}
¨¨ 	
switch
≠≠ 
(
≠≠ 
$num
≠≠ 
)
≠≠ 
{
ÆÆ 	
case
ØØ 
$num
ØØ 
:
ØØ 
try
∞∞ 
{
±± 
using
≥≥ 
(
≥≥ 
SqlConnection
≥≥ $

connection
≥≥% /
=
≥≥0 1
new
≥≥2 5
SqlConnection
≥≥6 C
(
≥≥C D
$str
≥≥D z
+
≥≥{ |
$str≥≥} Å
+≥≥Ç É
$str≥≥Ñ ê
+≥≥ë í
password≥≥ì õ
)≥≥õ ú
)≥≥ú ù
{
¥¥ 

connection
µµ 
.
µµ 
Open
µµ #
(
µµ# $
)
µµ$ %
;
µµ% &
using
∂∂ 
(
∂∂ 

SqlCommand
∂∂ %
command
∂∂& -
=
∂∂. /
new
∂∂0 3

SqlCommand
∂∂4 >
(
∂∂> ?
$str
∂∂? Y
,
∂∂Y Z

connection
∂∂[ e
)
∂∂e f
)
∂∂f g
{
∑∑ 
command
∏∏ 
.
∏∏  
ExecuteNonQuery
∏∏  /
(
∏∏/ 0
)
∏∏0 1
;
∏∏1 2
}
ππ 
}
∫∫ 
}
ªª 
catch
ºº 
(
ºº 
SqlException
ºº 
	exceptSql
ºº  )
)
ºº) *
{
ΩΩ 
IO
ææ 
.
ææ 
Logger
ææ 
.
ææ 
Log
ææ 
(
ææ 
NLog
ææ "
.
ææ" #
LogLevel
ææ# +
.
ææ+ ,
Warn
ææ, 0
,
ææ0 1
$str
ææ2 R
,
ææR S
	exceptSql
ææT ]
)
ææ] ^
;
ææ^ _
}
øø 
break
¿¿ 
;
¿¿ 
default
¡¡ 
:
¡¡ 
IO
√√ 
.
√√ 
	WriteLine
√√ 
(
√√ 
$str
√√ /
)
√√/ 0
;
√√0 1
break
ƒƒ 
;
ƒƒ 
}
≈≈ 	
}
∆∆ 
private
…… 
void
…… 
GoodB2G1
…… 
(
…… 
)
…… 
{
   
string
ÀÀ 
password
ÀÀ 
;
ÀÀ 
switch
ÃÃ 
(
ÃÃ 
$num
ÃÃ 
)
ÃÃ 
{
ÕÕ 	
case
ŒŒ 
$num
ŒŒ 
:
ŒŒ 
password
œœ 
=
œœ 
$str
œœ 
;
œœ 
{
—— 
TcpListener
““ 
listener
““ $
=
““% &
null
““' +
;
““+ ,
try
”” 
{
‘‘ 
listener
÷÷ 
=
÷÷ 
new
÷÷ "
TcpListener
÷÷# .
(
÷÷. /
	IPAddress
÷÷/ 8
.
÷÷8 9
Parse
÷÷9 >
(
÷÷> ?
$str
÷÷? K
)
÷÷K L
,
÷÷L M
$num
÷÷N S
)
÷÷S T
;
÷÷T U
listener
◊◊ 
.
◊◊ 
Start
◊◊ "
(
◊◊" #
)
◊◊# $
;
◊◊$ %
using
ÿÿ 
(
ÿÿ 
	TcpClient
ÿÿ $
tcpConn
ÿÿ% ,
=
ÿÿ- .
listener
ÿÿ/ 7
.
ÿÿ7 8
AcceptTcpClient
ÿÿ8 G
(
ÿÿG H
)
ÿÿH I
)
ÿÿI J
{
ŸŸ 
using
⁄⁄ 
(
⁄⁄ 
StreamReader
⁄⁄ +
sr
⁄⁄, .
=
⁄⁄/ 0
new
⁄⁄1 4
StreamReader
⁄⁄5 A
(
⁄⁄A B
Console
⁄⁄B I
.
⁄⁄I J
OpenStandardInput
⁄⁄J [
(
⁄⁄[ \
)
⁄⁄\ ]
)
⁄⁄] ^
)
⁄⁄^ _
{
€€ 
password
›› $
=
››% &
sr
››' )
.
››) *
ReadLine
››* 2
(
››2 3
)
››3 4
;
››4 5
}
ﬁﬁ 
}
ﬂﬂ 
}
‡‡ 
catch
·· 
(
·· 
IOException
·· "
exceptIO
··# +
)
··+ ,
{
‚‚ 
IO
„„ 
.
„„ 
Logger
„„ 
.
„„ 
Log
„„ !
(
„„! "
NLog
„„" &
.
„„& '
LogLevel
„„' /
.
„„/ 0
Warn
„„0 4
,
„„4 5
$str
„„6 Q
,
„„Q R
exceptIO
„„S [
)
„„[ \
;
„„\ ]
}
‰‰ 
finally
ÂÂ 
{
ÊÊ 
try
ÁÁ 
{
ËË 
if
ÈÈ 
(
ÈÈ 
listener
ÈÈ $
!=
ÈÈ% '
null
ÈÈ( ,
)
ÈÈ, -
{
ÍÍ 
listener
ÎÎ $
.
ÎÎ$ %
Stop
ÎÎ% )
(
ÎÎ) *
)
ÎÎ* +
;
ÎÎ+ ,
}
ÏÏ 
}
ÌÌ 
catch
ÓÓ 
(
ÓÓ 
IOException
ÓÓ &
exceptIO
ÓÓ' /
)
ÓÓ/ 0
{
ÔÔ 
IO
 
.
 
Logger
 !
.
! "
Log
" %
(
% &
NLog
& *
.
* +
LogLevel
+ 3
.
3 4
Warn
4 8
,
8 9
$str
: U
,
U V
exceptIO
W _
)
_ `
;
` a
}
ÒÒ 
}
ÚÚ 
}
ÛÛ 
break
ÙÙ 
;
ÙÙ 
default
ıı 
:
ıı 
password
¯¯ 
=
¯¯ 
null
¯¯ 
;
¯¯ 
break
˘˘ 
;
˘˘ 
}
˙˙ 	
switch
˚˚ 
(
˚˚ 
$num
˚˚ 
)
˚˚ 
{
¸¸ 	
case
˝˝ 
$num
˝˝ 
:
˝˝ 
IO
ˇˇ 
.
ˇˇ 
	WriteLine
ˇˇ 
(
ˇˇ 
$str
ˇˇ /
)
ˇˇ/ 0
;
ˇˇ0 1
break
ÄÄ 
;
ÄÄ 
default
ÅÅ 
:
ÅÅ 
if
ÇÇ 
(
ÇÇ 
password
ÇÇ 
!=
ÇÇ 
null
ÇÇ  
)
ÇÇ  !
{
ÉÉ 
{
ÖÖ 
using
ÜÜ 
(
ÜÜ &
AesCryptoServiceProvider
ÜÜ 3
aesAlg
ÜÜ4 :
=
ÜÜ; <
new
ÜÜ= @&
AesCryptoServiceProvider
ÜÜA Y
(
ÜÜY Z
)
ÜÜZ [
)
ÜÜ[ \
{
áá 
aesAlg
àà 
.
àà 
Padding
àà &
=
àà' (
PaddingMode
àà) 4
.
àà4 5
None
àà5 9
;
àà9 :
aesAlg
ââ 
.
ââ 
Key
ââ "
=
ââ# $
Encoding
ââ% -
.
ââ- .
UTF8
ââ. 2
.
ââ2 3
GetBytes
ââ3 ;
(
ââ; <
$str
ââ< N
)
ââN O
;
ââO P
ICryptoTransform
ãã (
	decryptor
ãã) 2
=
ãã3 4
aesAlg
ãã5 ;
.
ãã; <
CreateDecryptor
ãã< K
(
ããK L
aesAlg
ããL R
.
ããR S
Key
ããS V
,
ããV W
aesAlg
ããX ^
.
ãã^ _
IV
ãã_ a
)
ããa b
;
ããb c
using
çç 
(
çç 
MemoryStream
çç +
	msDecrypt
çç, 5
=
çç6 7
new
çç8 ;
MemoryStream
çç< H
(
ççH I
Encoding
ççI Q
.
ççQ R
UTF8
ççR V
.
ççV W
GetBytes
ççW _
(
çç_ `
password
çç` h
)
ççh i
)
ççi j
)
ççj k
{
éé 
using
èè !
(
èè" #
CryptoStream
èè# /
	csDecrypt
èè0 9
=
èè: ;
new
èè< ?
CryptoStream
èè@ L
(
èèL M
	msDecrypt
èèM V
,
èèV W
	decryptor
èèX a
,
èèa b
CryptoStreamMode
èèc s
.
èès t
Read
èèt x
)
èèx y
)
èèy z
{
êê 
using
ëë  %
(
ëë& '
StreamReader
ëë' 3
	srDecrypt
ëë4 =
=
ëë> ?
new
ëë@ C
StreamReader
ëëD P
(
ëëP Q
	csDecrypt
ëëQ Z
)
ëëZ [
)
ëë[ \
{
íí  !
password
ïï$ ,
=
ïï- .
	srDecrypt
ïï/ 8
.
ïï8 9
	ReadToEnd
ïï9 B
(
ïïB C
)
ïïC D
;
ïïD E
}
ññ  !
}
óó 
}
òò 
}
ôô 
}
öö 
try
õõ 
{
úú 
using
ûû 
(
ûû 
SqlConnection
ûû (

connection
ûû) 3
=
ûû4 5
new
ûû6 9
SqlConnection
ûû: G
(
ûûG H
$str
ûûH ~
+ûû Ä
$strûûÅ Ö
+ûûÜ á
$strûûà î
+ûûï ñ
passwordûûó ü
)ûûü †
)ûû† °
{
üü 

connection
†† "
.
††" #
Open
††# '
(
††' (
)
††( )
;
††) *
using
°° 
(
°° 

SqlCommand
°° )
command
°°* 1
=
°°2 3
new
°°4 7

SqlCommand
°°8 B
(
°°B C
$str
°°C ]
,
°°] ^

connection
°°_ i
)
°°i j
)
°°j k
{
¢¢ 
command
££ #
.
££# $
ExecuteNonQuery
££$ 3
(
££3 4
)
££4 5
;
££5 6
}
§§ 
}
•• 
}
¶¶ 
catch
ßß 
(
ßß 
SqlException
ßß #
	exceptSql
ßß$ -
)
ßß- .
{
®® 
IO
©© 
.
©© 
Logger
©© 
.
©© 
Log
©© !
(
©©! "
NLog
©©" &
.
©©& '
LogLevel
©©' /
.
©©/ 0
Warn
©©0 4
,
©©4 5
$str
©©6 V
,
©©V W
	exceptSql
©©X a
)
©©a b
;
©©b c
}
™™ 
}
´´ 
break
¨¨ 
;
¨¨ 
}
≠≠ 	
}
ÆÆ 
private
±± 
void
±± 
GoodB2G2
±± 
(
±± 
)
±± 
{
≤≤ 
string
≥≥ 
password
≥≥ 
;
≥≥ 
switch
¥¥ 
(
¥¥ 
$num
¥¥ 
)
¥¥ 
{
µµ 	
case
∂∂ 
$num
∂∂ 
:
∂∂ 
password
∑∑ 
=
∑∑ 
$str
∑∑ 
;
∑∑ 
{
ππ 
TcpListener
∫∫ 
listener
∫∫ $
=
∫∫% &
null
∫∫' +
;
∫∫+ ,
try
ªª 
{
ºº 
listener
ææ 
=
ææ 
new
ææ "
TcpListener
ææ# .
(
ææ. /
	IPAddress
ææ/ 8
.
ææ8 9
Parse
ææ9 >
(
ææ> ?
$str
ææ? K
)
ææK L
,
ææL M
$num
ææN S
)
ææS T
;
ææT U
listener
øø 
.
øø 
Start
øø "
(
øø" #
)
øø# $
;
øø$ %
using
¿¿ 
(
¿¿ 
	TcpClient
¿¿ $
tcpConn
¿¿% ,
=
¿¿- .
listener
¿¿/ 7
.
¿¿7 8
AcceptTcpClient
¿¿8 G
(
¿¿G H
)
¿¿H I
)
¿¿I J
{
¡¡ 
using
¬¬ 
(
¬¬ 
StreamReader
¬¬ +
sr
¬¬, .
=
¬¬/ 0
new
¬¬1 4
StreamReader
¬¬5 A
(
¬¬A B
Console
¬¬B I
.
¬¬I J
OpenStandardInput
¬¬J [
(
¬¬[ \
)
¬¬\ ]
)
¬¬] ^
)
¬¬^ _
{
√√ 
password
≈≈ $
=
≈≈% &
sr
≈≈' )
.
≈≈) *
ReadLine
≈≈* 2
(
≈≈2 3
)
≈≈3 4
;
≈≈4 5
}
∆∆ 
}
«« 
}
»» 
catch
…… 
(
…… 
IOException
…… "
exceptIO
……# +
)
……+ ,
{
   
IO
ÀÀ 
.
ÀÀ 
Logger
ÀÀ 
.
ÀÀ 
Log
ÀÀ !
(
ÀÀ! "
NLog
ÀÀ" &
.
ÀÀ& '
LogLevel
ÀÀ' /
.
ÀÀ/ 0
Warn
ÀÀ0 4
,
ÀÀ4 5
$str
ÀÀ6 Q
,
ÀÀQ R
exceptIO
ÀÀS [
)
ÀÀ[ \
;
ÀÀ\ ]
}
ÃÃ 
finally
ÕÕ 
{
ŒŒ 
try
œœ 
{
–– 
if
—— 
(
—— 
listener
—— $
!=
——% '
null
——( ,
)
——, -
{
““ 
listener
”” $
.
””$ %
Stop
””% )
(
””) *
)
””* +
;
””+ ,
}
‘‘ 
}
’’ 
catch
÷÷ 
(
÷÷ 
IOException
÷÷ &
exceptIO
÷÷' /
)
÷÷/ 0
{
◊◊ 
IO
ÿÿ 
.
ÿÿ 
Logger
ÿÿ !
.
ÿÿ! "
Log
ÿÿ" %
(
ÿÿ% &
NLog
ÿÿ& *
.
ÿÿ* +
LogLevel
ÿÿ+ 3
.
ÿÿ3 4
Warn
ÿÿ4 8
,
ÿÿ8 9
$str
ÿÿ: U
,
ÿÿU V
exceptIO
ÿÿW _
)
ÿÿ_ `
;
ÿÿ` a
}
ŸŸ 
}
⁄⁄ 
}
€€ 
break
‹‹ 
;
‹‹ 
default
›› 
:
›› 
password
‡‡ 
=
‡‡ 
null
‡‡ 
;
‡‡ 
break
·· 
;
·· 
}
‚‚ 	
switch
„„ 
(
„„ 
$num
„„ 
)
„„ 
{
‰‰ 	
case
ÂÂ 
$num
ÂÂ 
:
ÂÂ 
if
ÊÊ 
(
ÊÊ 
password
ÊÊ 
!=
ÊÊ 
null
ÊÊ  
)
ÊÊ  !
{
ÁÁ 
{
ÈÈ 
using
ÍÍ 
(
ÍÍ &
AesCryptoServiceProvider
ÍÍ 3
aesAlg
ÍÍ4 :
=
ÍÍ; <
new
ÍÍ= @&
AesCryptoServiceProvider
ÍÍA Y
(
ÍÍY Z
)
ÍÍZ [
)
ÍÍ[ \
{
ÎÎ 
aesAlg
ÏÏ 
.
ÏÏ 
Padding
ÏÏ &
=
ÏÏ' (
PaddingMode
ÏÏ) 4
.
ÏÏ4 5
None
ÏÏ5 9
;
ÏÏ9 :
aesAlg
ÌÌ 
.
ÌÌ 
Key
ÌÌ "
=
ÌÌ# $
Encoding
ÌÌ% -
.
ÌÌ- .
UTF8
ÌÌ. 2
.
ÌÌ2 3
GetBytes
ÌÌ3 ;
(
ÌÌ; <
$str
ÌÌ< N
)
ÌÌN O
;
ÌÌO P
ICryptoTransform
ÔÔ (
	decryptor
ÔÔ) 2
=
ÔÔ3 4
aesAlg
ÔÔ5 ;
.
ÔÔ; <
CreateDecryptor
ÔÔ< K
(
ÔÔK L
aesAlg
ÔÔL R
.
ÔÔR S
Key
ÔÔS V
,
ÔÔV W
aesAlg
ÔÔX ^
.
ÔÔ^ _
IV
ÔÔ_ a
)
ÔÔa b
;
ÔÔb c
using
ÒÒ 
(
ÒÒ 
MemoryStream
ÒÒ +
	msDecrypt
ÒÒ, 5
=
ÒÒ6 7
new
ÒÒ8 ;
MemoryStream
ÒÒ< H
(
ÒÒH I
Encoding
ÒÒI Q
.
ÒÒQ R
UTF8
ÒÒR V
.
ÒÒV W
GetBytes
ÒÒW _
(
ÒÒ_ `
password
ÒÒ` h
)
ÒÒh i
)
ÒÒi j
)
ÒÒj k
{
ÚÚ 
using
ÛÛ !
(
ÛÛ" #
CryptoStream
ÛÛ# /
	csDecrypt
ÛÛ0 9
=
ÛÛ: ;
new
ÛÛ< ?
CryptoStream
ÛÛ@ L
(
ÛÛL M
	msDecrypt
ÛÛM V
,
ÛÛV W
	decryptor
ÛÛX a
,
ÛÛa b
CryptoStreamMode
ÛÛc s
.
ÛÛs t
Read
ÛÛt x
)
ÛÛx y
)
ÛÛy z
{
ÙÙ 
using
ıı  %
(
ıı& '
StreamReader
ıı' 3
	srDecrypt
ıı4 =
=
ıı> ?
new
ıı@ C
StreamReader
ııD P
(
ııP Q
	csDecrypt
ııQ Z
)
ııZ [
)
ıı[ \
{
ˆˆ  !
password
˘˘$ ,
=
˘˘- .
	srDecrypt
˘˘/ 8
.
˘˘8 9
	ReadToEnd
˘˘9 B
(
˘˘B C
)
˘˘C D
;
˘˘D E
}
˙˙  !
}
˚˚ 
}
¸¸ 
}
˝˝ 
}
˛˛ 
try
ˇˇ 
{
ÄÄ 
using
ÇÇ 
(
ÇÇ 
SqlConnection
ÇÇ (

connection
ÇÇ) 3
=
ÇÇ4 5
new
ÇÇ6 9
SqlConnection
ÇÇ: G
(
ÇÇG H
$str
ÇÇH ~
+ÇÇ Ä
$strÇÇÅ Ö
+ÇÇÜ á
$strÇÇà î
+ÇÇï ñ
passwordÇÇó ü
)ÇÇü †
)ÇÇ† °
{
ÉÉ 

connection
ÑÑ "
.
ÑÑ" #
Open
ÑÑ# '
(
ÑÑ' (
)
ÑÑ( )
;
ÑÑ) *
using
ÖÖ 
(
ÖÖ 

SqlCommand
ÖÖ )
command
ÖÖ* 1
=
ÖÖ2 3
new
ÖÖ4 7

SqlCommand
ÖÖ8 B
(
ÖÖB C
$str
ÖÖC ]
,
ÖÖ] ^

connection
ÖÖ_ i
)
ÖÖi j
)
ÖÖj k
{
ÜÜ 
command
áá #
.
áá# $
ExecuteNonQuery
áá$ 3
(
áá3 4
)
áá4 5
;
áá5 6
}
àà 
}
ââ 
}
ää 
catch
ãã 
(
ãã 
SqlException
ãã #
	exceptSql
ãã$ -
)
ãã- .
{
åå 
IO
çç 
.
çç 
Logger
çç 
.
çç 
Log
çç !
(
çç! "
NLog
çç" &
.
çç& '
LogLevel
çç' /
.
çç/ 0
Warn
çç0 4
,
çç4 5
$str
çç6 V
,
ççV W
	exceptSql
ççX a
)
çça b
;
ççb c
}
éé 
}
èè 
break
êê 
;
êê 
default
ëë 
:
ëë 
IO
ìì 
.
ìì 
	WriteLine
ìì 
(
ìì 
$str
ìì /
)
ìì/ 0
;
ìì0 1
break
îî 
;
îî 
}
ïï 	
}
ññ 
public
òò 

override
òò 
void
òò 
Good
òò 
(
òò 
)
òò 
{
ôô 
GoodG2B1
öö 
(
öö 
)
öö 
;
öö 
GoodG2B2
õõ 
(
õõ 
)
õõ 
;
õõ 
GoodB2G1
úú 
(
úú 
)
úú 
;
úú 
GoodB2G2
ùù 
(
ùù 
)
ùù 
;
ùù 
}
ûû 
}†† 
}°° ≥l
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_16.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_16 E
:F G
AbstractTestCaseH X
{   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
string$$ 
password$$ 
;$$ 
while%% 
(%% 
true%% 
)%% 
{&& 	
password'' 
='' 
$str'' 
;'' 
{)) 
TcpListener** 
listener** $
=**% &
null**' +
;**+ ,
try++ 
{,, 
listener.. 
=.. 
new.. "
TcpListener..# .
(... /
	IPAddress../ 8
...8 9
Parse..9 >
(..> ?
$str..? K
)..K L
,..L M
$num..N S
)..S T
;..T U
listener// 
.// 
Start// "
(//" #
)//# $
;//$ %
using00 
(00 
	TcpClient00 $
tcpConn00% ,
=00- .
listener00/ 7
.007 8
AcceptTcpClient008 G
(00G H
)00H I
)00I J
{11 
using22 
(22 
StreamReader22 +
sr22, .
=22/ 0
new221 4
StreamReader225 A
(22A B
Console22B I
.22I J
OpenStandardInput22J [
(22[ \
)22\ ]
)22] ^
)22^ _
{33 
password55 $
=55% &
sr55' )
.55) *
ReadLine55* 2
(552 3
)553 4
;554 5
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
$str;;6 Q
,;;Q R
exceptIO;;S [
);;[ \
;;;\ ]
}<< 
finally== 
{>> 
try?? 
{@@ 
ifAA 
(AA 
listenerAA $
!=AA% '
nullAA( ,
)AA, -
{BB 
listenerCC $
.CC$ %
StopCC% )
(CC) *
)CC* +
;CC+ ,
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF &
exceptIOFF' /
)FF/ 0
{GG 
IOHH 
.HH 
LoggerHH !
.HH! "
LogHH" %
(HH% &
NLogHH& *
.HH* +
LogLevelHH+ 3
.HH3 4
WarnHH4 8
,HH8 9
$strHH: U
,HHU V
exceptIOHHW _
)HH_ `
;HH` a
}II 
}JJ 
}KK 
breakLL 
;LL 
}MM 	
whileNN 
(NN 
trueNN 
)NN 
{OO 	
tryPP 
{QQ 
usingSS 
(SS 
SqlConnectionSS $

connectionSS% /
=SS0 1
newSS2 5
SqlConnectionSS6 C
(SSC D
$strSSD z
+SS{ |
$str	SS} Å
+
SSÇ É
$str
SSÑ ê
+
SSë í
password
SSì õ
)
SSõ ú
)
SSú ù
{TT 

connectionUU 
.UU 
OpenUU #
(UU# $
)UU$ %
;UU% &
usingVV 
(VV 

SqlCommandVV %
commandVV& -
=VV. /
newVV0 3

SqlCommandVV4 >
(VV> ?
$strVV? Y
,VVY Z

connectionVV[ e
)VVe f
)VVf g
{WW 
commandXX 
.XX  
ExecuteNonQueryXX  /
(XX/ 0
)XX0 1
;XX1 2
}YY 
}ZZ 
}[[ 
catch\\ 
(\\ 
SqlException\\ 
	exceptSql\\  )
)\\) *
{]] 
IO^^ 
.^^ 
Logger^^ 
.^^ 
Log^^ 
(^^ 
NLog^^ "
.^^" #
LogLevel^^# +
.^^+ ,
Warn^^, 0
,^^0 1
$str^^2 R
,^^R S
	exceptSql^^T ]
)^^] ^
;^^^ _
}__ 
break`` 
;`` 
}aa 	
}bb 
privateff 
voidff 
GoodG2Bff 
(ff 
)ff 
{gg 
stringhh 
passwordhh 
;hh 
whileii 
(ii 
trueii 
)ii 
{jj 	
passwordmm 
=mm 
$strmm &
;mm& '
breaknn 
;nn 
}oo 	
whilepp 
(pp 
truepp 
)pp 
{qq 	
tryrr 
{ss 
usinguu 
(uu 
SqlConnectionuu $

connectionuu% /
=uu0 1
newuu2 5
SqlConnectionuu6 C
(uuC D
$struuD z
+uu{ |
$str	uu} Å
+
uuÇ É
$str
uuÑ ê
+
uuë í
password
uuì õ
)
uuõ ú
)
uuú ù
{vv 

connectionww 
.ww 
Openww #
(ww# $
)ww$ %
;ww% &
usingxx 
(xx 

SqlCommandxx %
commandxx& -
=xx. /
newxx0 3

SqlCommandxx4 >
(xx> ?
$strxx? Y
,xxY Z

connectionxx[ e
)xxe f
)xxf g
{yy 
commandzz 
.zz  
ExecuteNonQueryzz  /
(zz/ 0
)zz0 1
;zz1 2
}{{ 
}|| 
}}} 
catch~~ 
(~~ 
SqlException~~ 
	exceptSql~~  )
)~~) *
{ 
IO
ÄÄ 
.
ÄÄ 
Logger
ÄÄ 
.
ÄÄ 
Log
ÄÄ 
(
ÄÄ 
NLog
ÄÄ "
.
ÄÄ" #
LogLevel
ÄÄ# +
.
ÄÄ+ ,
Warn
ÄÄ, 0
,
ÄÄ0 1
$str
ÄÄ2 R
,
ÄÄR S
	exceptSql
ÄÄT ]
)
ÄÄ] ^
;
ÄÄ^ _
}
ÅÅ 
break
ÇÇ 
;
ÇÇ 
}
ÉÉ 	
}
ÑÑ 
private
áá 
void
áá 
GoodB2G
áá 
(
áá 
)
áá 
{
àà 
string
ââ 
password
ââ 
;
ââ 
while
ää 
(
ää 
true
ää 
)
ää 
{
ãã 	
password
åå 
=
åå 
$str
åå 
;
åå 
{
éé 
TcpListener
èè 
listener
èè $
=
èè% &
null
èè' +
;
èè+ ,
try
êê 
{
ëë 
listener
ìì 
=
ìì 
new
ìì "
TcpListener
ìì# .
(
ìì. /
	IPAddress
ìì/ 8
.
ìì8 9
Parse
ìì9 >
(
ìì> ?
$str
ìì? K
)
ììK L
,
ììL M
$num
ììN S
)
ììS T
;
ììT U
listener
îî 
.
îî 
Start
îî "
(
îî" #
)
îî# $
;
îî$ %
using
ïï 
(
ïï 
	TcpClient
ïï $
tcpConn
ïï% ,
=
ïï- .
listener
ïï/ 7
.
ïï7 8
AcceptTcpClient
ïï8 G
(
ïïG H
)
ïïH I
)
ïïI J
{
ññ 
using
óó 
(
óó 
StreamReader
óó +
sr
óó, .
=
óó/ 0
new
óó1 4
StreamReader
óó5 A
(
óóA B
Console
óóB I
.
óóI J
OpenStandardInput
óóJ [
(
óó[ \
)
óó\ ]
)
óó] ^
)
óó^ _
{
òò 
password
öö $
=
öö% &
sr
öö' )
.
öö) *
ReadLine
öö* 2
(
öö2 3
)
öö3 4
;
öö4 5
}
õõ 
}
úú 
}
ùù 
catch
ûû 
(
ûû 
IOException
ûû "
exceptIO
ûû# +
)
ûû+ ,
{
üü 
IO
†† 
.
†† 
Logger
†† 
.
†† 
Log
†† !
(
††! "
NLog
††" &
.
††& '
LogLevel
††' /
.
††/ 0
Warn
††0 4
,
††4 5
$str
††6 Q
,
††Q R
exceptIO
††S [
)
††[ \
;
††\ ]
}
°° 
finally
¢¢ 
{
££ 
try
§§ 
{
•• 
if
¶¶ 
(
¶¶ 
listener
¶¶ $
!=
¶¶% '
null
¶¶( ,
)
¶¶, -
{
ßß 
listener
®® $
.
®®$ %
Stop
®®% )
(
®®) *
)
®®* +
;
®®+ ,
}
©© 
}
™™ 
catch
´´ 
(
´´ 
IOException
´´ &
exceptIO
´´' /
)
´´/ 0
{
¨¨ 
IO
≠≠ 
.
≠≠ 
Logger
≠≠ !
.
≠≠! "
Log
≠≠" %
(
≠≠% &
NLog
≠≠& *
.
≠≠* +
LogLevel
≠≠+ 3
.
≠≠3 4
Warn
≠≠4 8
,
≠≠8 9
$str
≠≠: U
,
≠≠U V
exceptIO
≠≠W _
)
≠≠_ `
;
≠≠` a
}
ÆÆ 
}
ØØ 
}
∞∞ 
break
±± 
;
±± 
}
≤≤ 	
while
≥≥ 
(
≥≥ 
true
≥≥ 
)
≥≥ 
{
¥¥ 	
if
µµ 
(
µµ 
password
µµ 
!=
µµ 
null
µµ  
)
µµ  !
{
∂∂ 
{
∏∏ 
using
ππ 
(
ππ &
AesCryptoServiceProvider
ππ 3
aesAlg
ππ4 :
=
ππ; <
new
ππ= @&
AesCryptoServiceProvider
ππA Y
(
ππY Z
)
ππZ [
)
ππ[ \
{
∫∫ 
aesAlg
ªª 
.
ªª 
Padding
ªª &
=
ªª' (
PaddingMode
ªª) 4
.
ªª4 5
None
ªª5 9
;
ªª9 :
aesAlg
ºº 
.
ºº 
Key
ºº "
=
ºº# $
Encoding
ºº% -
.
ºº- .
UTF8
ºº. 2
.
ºº2 3
GetBytes
ºº3 ;
(
ºº; <
$str
ºº< N
)
ººN O
;
ººO P
ICryptoTransform
ææ (
	decryptor
ææ) 2
=
ææ3 4
aesAlg
ææ5 ;
.
ææ; <
CreateDecryptor
ææ< K
(
ææK L
aesAlg
ææL R
.
ææR S
Key
ææS V
,
ææV W
aesAlg
ææX ^
.
ææ^ _
IV
ææ_ a
)
ææa b
;
ææb c
using
¿¿ 
(
¿¿ 
MemoryStream
¿¿ +
	msDecrypt
¿¿, 5
=
¿¿6 7
new
¿¿8 ;
MemoryStream
¿¿< H
(
¿¿H I
Encoding
¿¿I Q
.
¿¿Q R
UTF8
¿¿R V
.
¿¿V W
GetBytes
¿¿W _
(
¿¿_ `
password
¿¿` h
)
¿¿h i
)
¿¿i j
)
¿¿j k
{
¡¡ 
using
¬¬ !
(
¬¬" #
CryptoStream
¬¬# /
	csDecrypt
¬¬0 9
=
¬¬: ;
new
¬¬< ?
CryptoStream
¬¬@ L
(
¬¬L M
	msDecrypt
¬¬M V
,
¬¬V W
	decryptor
¬¬X a
,
¬¬a b
CryptoStreamMode
¬¬c s
.
¬¬s t
Read
¬¬t x
)
¬¬x y
)
¬¬y z
{
√√ 
using
ƒƒ  %
(
ƒƒ& '
StreamReader
ƒƒ' 3
	srDecrypt
ƒƒ4 =
=
ƒƒ> ?
new
ƒƒ@ C
StreamReader
ƒƒD P
(
ƒƒP Q
	csDecrypt
ƒƒQ Z
)
ƒƒZ [
)
ƒƒ[ \
{
≈≈  !
password
»»$ ,
=
»»- .
	srDecrypt
»»/ 8
.
»»8 9
	ReadToEnd
»»9 B
(
»»B C
)
»»C D
;
»»D E
}
……  !
}
   
}
ÀÀ 
}
ÃÃ 
}
ÕÕ 
try
ŒŒ 
{
œœ 
using
—— 
(
—— 
SqlConnection
—— (

connection
——) 3
=
——4 5
new
——6 9
SqlConnection
——: G
(
——G H
$str
——H ~
+—— Ä
$str——Å Ö
+——Ü á
$str——à î
+——ï ñ
password——ó ü
)——ü †
)——† °
{
““ 

connection
”” "
.
””" #
Open
””# '
(
””' (
)
””( )
;
””) *
using
‘‘ 
(
‘‘ 

SqlCommand
‘‘ )
command
‘‘* 1
=
‘‘2 3
new
‘‘4 7

SqlCommand
‘‘8 B
(
‘‘B C
$str
‘‘C ]
,
‘‘] ^

connection
‘‘_ i
)
‘‘i j
)
‘‘j k
{
’’ 
command
÷÷ #
.
÷÷# $
ExecuteNonQuery
÷÷$ 3
(
÷÷3 4
)
÷÷4 5
;
÷÷5 6
}
◊◊ 
}
ÿÿ 
}
ŸŸ 
catch
⁄⁄ 
(
⁄⁄ 
SqlException
⁄⁄ #
	exceptSql
⁄⁄$ -
)
⁄⁄- .
{
€€ 
IO
‹‹ 
.
‹‹ 
Logger
‹‹ 
.
‹‹ 
Log
‹‹ !
(
‹‹! "
NLog
‹‹" &
.
‹‹& '
LogLevel
‹‹' /
.
‹‹/ 0
Warn
‹‹0 4
,
‹‹4 5
$str
‹‹6 V
,
‹‹V W
	exceptSql
‹‹X a
)
‹‹a b
;
‹‹b c
}
›› 
}
ﬁﬁ 
break
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 	
}
·· 
public
„„ 

override
„„ 
void
„„ 
Good
„„ 
(
„„ 
)
„„ 
{
‰‰ 
GoodG2B
ÂÂ 
(
ÂÂ 
)
ÂÂ 
;
ÂÂ 
GoodB2G
ÊÊ 
(
ÊÊ 
)
ÊÊ 
;
ÊÊ 
}
ÁÁ 
}ÈÈ 
}ÍÍ Êk
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_17.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_17 E
:F G
AbstractTestCaseH X
{   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
string$$ 
password$$ 
;$$ 
password)) 
=)) 
$str)) 
;)) 
{++ 	
TcpListener,, 
listener,,  
=,,! "
null,,# '
;,,' (
try-- 
{.. 
listener00 
=00 
new00 
TcpListener00 *
(00* +
	IPAddress00+ 4
.004 5
Parse005 :
(00: ;
$str00; G
)00G H
,00H I
$num00J O
)00O P
;00P Q
listener11 
.11 
Start11 
(11 
)11  
;11  !
using22 
(22 
	TcpClient22  
tcpConn22! (
=22) *
listener22+ 3
.223 4
AcceptTcpClient224 C
(22C D
)22D E
)22E F
{33 
using44 
(44 
StreamReader44 '
sr44( *
=44+ ,
new44- 0
StreamReader441 =
(44= >
Console44> E
.44E F
OpenStandardInput44F W
(44W X
)44X Y
)44Y Z
)44Z [
{55 
password77  
=77! "
sr77# %
.77% &
ReadLine77& .
(77. /
)77/ 0
;770 1
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; 
exceptIO;; '
);;' (
{<< 
IO== 
.== 
Logger== 
.== 
Log== 
(== 
NLog== "
.==" #
LogLevel==# +
.==+ ,
Warn==, 0
,==0 1
$str==2 M
,==M N
exceptIO==O W
)==W X
;==X Y
}>> 
finally?? 
{@@ 
tryAA 
{BB 
ifCC 
(CC 
listenerCC  
!=CC! #
nullCC$ (
)CC( )
{DD 
listenerEE  
.EE  !
StopEE! %
(EE% &
)EE& '
;EE' (
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH "
exceptIOHH# +
)HH+ ,
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ !
(JJ! "
NLogJJ" &
.JJ& '
LogLevelJJ' /
.JJ/ 0
WarnJJ0 4
,JJ4 5
$strJJ6 Q
,JJQ R
exceptIOJJS [
)JJ[ \
;JJ\ ]
}KK 
}LL 
}MM 	
forNN 
(NN 
intNN 
jNN 
=NN 
$numNN 
;NN 
jNN 
<NN 
$numNN 
;NN 
jNN  
++NN  "
)NN" #
{OO 	
tryPP 
{QQ 
usingSS 
(SS 
SqlConnectionSS $

connectionSS% /
=SS0 1
newSS2 5
SqlConnectionSS6 C
(SSC D
$strSSD z
+SS{ |
$str	SS} Å
+
SSÇ É
$str
SSÑ ê
+
SSë í
password
SSì õ
)
SSõ ú
)
SSú ù
{TT 

connectionUU 
.UU 
OpenUU #
(UU# $
)UU$ %
;UU% &
usingVV 
(VV 

SqlCommandVV %
commandVV& -
=VV. /
newVV0 3

SqlCommandVV4 >
(VV> ?
$strVV? Y
,VVY Z

connectionVV[ e
)VVe f
)VVf g
{WW 
commandXX 
.XX  
ExecuteNonQueryXX  /
(XX/ 0
)XX0 1
;XX1 2
}YY 
}ZZ 
}[[ 
catch\\ 
(\\ 
SqlException\\ 
	exceptSql\\  )
)\\) *
{]] 
IO^^ 
.^^ 
Logger^^ 
.^^ 
Log^^ 
(^^ 
NLog^^ "
.^^" #
LogLevel^^# +
.^^+ ,
Warn^^, 0
,^^0 1
$str^^2 R
,^^R S
	exceptSql^^T ]
)^^] ^
;^^^ _
}__ 
}`` 	
}aa 
privateee 
voidee 
GoodG2Bee 
(ee 
)ee 
{ff 
stringgg 
passwordgg 
;gg 
passwordjj 
=jj 
$strjj "
;jj" #
forkk 
(kk 
intkk 
jkk 
=kk 
$numkk 
;kk 
jkk 
<kk 
$numkk 
;kk 
jkk  
++kk  "
)kk" #
{ll 	
trymm 
{nn 
usingpp 
(pp 
SqlConnectionpp $

connectionpp% /
=pp0 1
newpp2 5
SqlConnectionpp6 C
(ppC D
$strppD z
+pp{ |
$str	pp} Å
+
ppÇ É
$str
ppÑ ê
+
ppë í
password
ppì õ
)
ppõ ú
)
ppú ù
{qq 

connectionrr 
.rr 
Openrr #
(rr# $
)rr$ %
;rr% &
usingss 
(ss 

SqlCommandss %
commandss& -
=ss. /
newss0 3

SqlCommandss4 >
(ss> ?
$strss? Y
,ssY Z

connectionss[ e
)sse f
)ssf g
{tt 
commanduu 
.uu  
ExecuteNonQueryuu  /
(uu/ 0
)uu0 1
;uu1 2
}vv 
}ww 
}xx 
catchyy 
(yy 
SqlExceptionyy 
	exceptSqlyy  )
)yy) *
{zz 
IO{{ 
.{{ 
Logger{{ 
.{{ 
Log{{ 
({{ 
NLog{{ "
.{{" #
LogLevel{{# +
.{{+ ,
Warn{{, 0
,{{0 1
$str{{2 R
,{{R S
	exceptSql{{T ]
){{] ^
;{{^ _
}|| 
}}} 	
}~~ 
private
ÅÅ 
void
ÅÅ 
GoodB2G
ÅÅ 
(
ÅÅ 
)
ÅÅ 
{
ÇÇ 
string
ÉÉ 
password
ÉÉ 
;
ÉÉ 
password
ÑÑ 
=
ÑÑ 
$str
ÑÑ 
;
ÑÑ 
{
ÜÜ 	
TcpListener
áá 
listener
áá  
=
áá! "
null
áá# '
;
áá' (
try
àà 
{
ââ 
listener
ãã 
=
ãã 
new
ãã 
TcpListener
ãã *
(
ãã* +
	IPAddress
ãã+ 4
.
ãã4 5
Parse
ãã5 :
(
ãã: ;
$str
ãã; G
)
ããG H
,
ããH I
$num
ããJ O
)
ããO P
;
ããP Q
listener
åå 
.
åå 
Start
åå 
(
åå 
)
åå  
;
åå  !
using
çç 
(
çç 
	TcpClient
çç  
tcpConn
çç! (
=
çç) *
listener
çç+ 3
.
çç3 4
AcceptTcpClient
çç4 C
(
ççC D
)
ççD E
)
ççE F
{
éé 
using
èè 
(
èè 
StreamReader
èè '
sr
èè( *
=
èè+ ,
new
èè- 0
StreamReader
èè1 =
(
èè= >
Console
èè> E
.
èèE F
OpenStandardInput
èèF W
(
èèW X
)
èèX Y
)
èèY Z
)
èèZ [
{
êê 
password
íí  
=
íí! "
sr
íí# %
.
íí% &
ReadLine
íí& .
(
íí. /
)
íí/ 0
;
íí0 1
}
ìì 
}
îî 
}
ïï 
catch
ññ 
(
ññ 
IOException
ññ 
exceptIO
ññ '
)
ññ' (
{
óó 
IO
òò 
.
òò 
Logger
òò 
.
òò 
Log
òò 
(
òò 
NLog
òò "
.
òò" #
LogLevel
òò# +
.
òò+ ,
Warn
òò, 0
,
òò0 1
$str
òò2 M
,
òòM N
exceptIO
òòO W
)
òòW X
;
òòX Y
}
ôô 
finally
öö 
{
õõ 
try
úú 
{
ùù 
if
ûû 
(
ûû 
listener
ûû  
!=
ûû! #
null
ûû$ (
)
ûû( )
{
üü 
listener
††  
.
††  !
Stop
††! %
(
††% &
)
††& '
;
††' (
}
°° 
}
¢¢ 
catch
££ 
(
££ 
IOException
££ "
exceptIO
££# +
)
££+ ,
{
§§ 
IO
•• 
.
•• 
Logger
•• 
.
•• 
Log
•• !
(
••! "
NLog
••" &
.
••& '
LogLevel
••' /
.
••/ 0
Warn
••0 4
,
••4 5
$str
••6 Q
,
••Q R
exceptIO
••S [
)
••[ \
;
••\ ]
}
¶¶ 
}
ßß 
}
®® 	
for
©© 
(
©© 
int
©© 
k
©© 
=
©© 
$num
©© 
;
©© 
k
©© 
<
©© 
$num
©© 
;
©© 
k
©©  
++
©©  "
)
©©" #
{
™™ 	
if
´´ 
(
´´ 
password
´´ 
!=
´´ 
null
´´  
)
´´  !
{
¨¨ 
{
ÆÆ 
using
ØØ 
(
ØØ &
AesCryptoServiceProvider
ØØ 3
aesAlg
ØØ4 :
=
ØØ; <
new
ØØ= @&
AesCryptoServiceProvider
ØØA Y
(
ØØY Z
)
ØØZ [
)
ØØ[ \
{
∞∞ 
aesAlg
±± 
.
±± 
Padding
±± &
=
±±' (
PaddingMode
±±) 4
.
±±4 5
None
±±5 9
;
±±9 :
aesAlg
≤≤ 
.
≤≤ 
Key
≤≤ "
=
≤≤# $
Encoding
≤≤% -
.
≤≤- .
UTF8
≤≤. 2
.
≤≤2 3
GetBytes
≤≤3 ;
(
≤≤; <
$str
≤≤< N
)
≤≤N O
;
≤≤O P
ICryptoTransform
¥¥ (
	decryptor
¥¥) 2
=
¥¥3 4
aesAlg
¥¥5 ;
.
¥¥; <
CreateDecryptor
¥¥< K
(
¥¥K L
aesAlg
¥¥L R
.
¥¥R S
Key
¥¥S V
,
¥¥V W
aesAlg
¥¥X ^
.
¥¥^ _
IV
¥¥_ a
)
¥¥a b
;
¥¥b c
using
∂∂ 
(
∂∂ 
MemoryStream
∂∂ +
	msDecrypt
∂∂, 5
=
∂∂6 7
new
∂∂8 ;
MemoryStream
∂∂< H
(
∂∂H I
Encoding
∂∂I Q
.
∂∂Q R
UTF8
∂∂R V
.
∂∂V W
GetBytes
∂∂W _
(
∂∂_ `
password
∂∂` h
)
∂∂h i
)
∂∂i j
)
∂∂j k
{
∑∑ 
using
∏∏ !
(
∏∏" #
CryptoStream
∏∏# /
	csDecrypt
∏∏0 9
=
∏∏: ;
new
∏∏< ?
CryptoStream
∏∏@ L
(
∏∏L M
	msDecrypt
∏∏M V
,
∏∏V W
	decryptor
∏∏X a
,
∏∏a b
CryptoStreamMode
∏∏c s
.
∏∏s t
Read
∏∏t x
)
∏∏x y
)
∏∏y z
{
ππ 
using
∫∫  %
(
∫∫& '
StreamReader
∫∫' 3
	srDecrypt
∫∫4 =
=
∫∫> ?
new
∫∫@ C
StreamReader
∫∫D P
(
∫∫P Q
	csDecrypt
∫∫Q Z
)
∫∫Z [
)
∫∫[ \
{
ªª  !
password
ææ$ ,
=
ææ- .
	srDecrypt
ææ/ 8
.
ææ8 9
	ReadToEnd
ææ9 B
(
ææB C
)
ææC D
;
ææD E
}
øø  !
}
¿¿ 
}
¡¡ 
}
¬¬ 
}
√√ 
try
ƒƒ 
{
≈≈ 
using
«« 
(
«« 
SqlConnection
«« (

connection
««) 3
=
««4 5
new
««6 9
SqlConnection
««: G
(
««G H
$str
««H ~
+«« Ä
$str««Å Ö
+««Ü á
$str««à î
+««ï ñ
password««ó ü
)««ü †
)««† °
{
»» 

connection
…… "
.
……" #
Open
……# '
(
……' (
)
……( )
;
……) *
using
   
(
   

SqlCommand
   )
command
  * 1
=
  2 3
new
  4 7

SqlCommand
  8 B
(
  B C
$str
  C ]
,
  ] ^

connection
  _ i
)
  i j
)
  j k
{
ÀÀ 
command
ÃÃ #
.
ÃÃ# $
ExecuteNonQuery
ÃÃ$ 3
(
ÃÃ3 4
)
ÃÃ4 5
;
ÃÃ5 6
}
ÕÕ 
}
ŒŒ 
}
œœ 
catch
–– 
(
–– 
SqlException
–– #
	exceptSql
––$ -
)
––- .
{
—— 
IO
““ 
.
““ 
Logger
““ 
.
““ 
Log
““ !
(
““! "
NLog
““" &
.
““& '
LogLevel
““' /
.
““/ 0
Warn
““0 4
,
““4 5
$str
““6 V
,
““V W
	exceptSql
““X a
)
““a b
;
““b c
}
”” 
}
‘‘ 
}
’’ 	
}
÷÷ 
public
ÿÿ 

override
ÿÿ 
void
ÿÿ 
Good
ÿÿ 
(
ÿÿ 
)
ÿÿ 
{
ŸŸ 
GoodG2B
⁄⁄ 
(
⁄⁄ 
)
⁄⁄ 
;
⁄⁄ 
GoodB2G
€€ 
(
€€ 
)
€€ 
;
€€ 
}
‹‹ 
}ﬁﬁ 
}ﬂﬂ ßØ
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_21.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_21 E
:F G
AbstractTestCaseH X
{   
private## 
bool## 

badPrivate## 
=## 
false## #
;### $
public%% 

override%% 
void%% 
Bad%% 
(%% 
)%% 
{&& 
string'' 
password'' 
;'' 
password(( 
=(( 
$str(( 
;(( 
{** 	
TcpListener++ 
listener++  
=++! "
null++# '
;++' (
try,, 
{-- 
listener// 
=// 
new// 
TcpListener// *
(//* +
	IPAddress//+ 4
.//4 5
Parse//5 :
(//: ;
$str//; G
)//G H
,//H I
$num//J O
)//O P
;//P Q
listener00 
.00 
Start00 
(00 
)00  
;00  !
using11 
(11 
	TcpClient11  
tcpConn11! (
=11) *
listener11+ 3
.113 4
AcceptTcpClient114 C
(11C D
)11D E
)11E F
{22 
using33 
(33 
StreamReader33 '
sr33( *
=33+ ,
new33- 0
StreamReader331 =
(33= >
Console33> E
.33E F
OpenStandardInput33F W
(33W X
)33X Y
)33Y Z
)33Z [
{44 
password66  
=66! "
sr66# %
.66% &
ReadLine66& .
(66. /
)66/ 0
;660 1
}77 
}88 
}99 
catch:: 
(:: 
IOException:: 
exceptIO:: '
)::' (
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< 
(<< 
NLog<< "
.<<" #
LogLevel<<# +
.<<+ ,
Warn<<, 0
,<<0 1
$str<<2 M
,<<M N
exceptIO<<O W
)<<W X
;<<X Y
}== 
finally>> 
{?? 
try@@ 
{AA 
ifBB 
(BB 
listenerBB  
!=BB! #
nullBB$ (
)BB( )
{CC 
listenerDD  
.DD  !
StopDD! %
(DD% &
)DD& '
;DD' (
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
$strII6 Q
,IIQ R
exceptIOIIS [
)II[ \
;II\ ]
}JJ 
}KK 
}LL 	

badPrivateMM 
=MM 
trueMM 
;MM 
BadSinkNN 
(NN 
passwordNN 
)NN 
;NN 
}OO 
privateQQ 
voidQQ 
BadSinkQQ 
(QQ 
stringQQ 
passwordQQ  (
)QQ) *
{RR 
ifSS 

(SS 

badPrivateSS 
)SS 
{TT 	
tryUU 
{VV 
usingXX 
(XX 
SqlConnectionXX $

connectionXX% /
=XX0 1
newXX2 5
SqlConnectionXX6 C
(XXC D
$strXXD z
+XX{ |
$str	XX} Å
+
XXÇ É
$str
XXÑ ê
+
XXë í
password
XXì õ
)
XXõ ú
)
XXú ù
{YY 

connectionZZ 
.ZZ 
OpenZZ #
(ZZ# $
)ZZ$ %
;ZZ% &
using[[ 
([[ 

SqlCommand[[ %
command[[& -
=[[. /
new[[0 3

SqlCommand[[4 >
([[> ?
$str[[? Y
,[[Y Z

connection[[[ e
)[[e f
)[[f g
{\\ 
command]] 
.]]  
ExecuteNonQuery]]  /
(]]/ 0
)]]0 1
;]]1 2
}^^ 
}__ 
}`` 
catchaa 
(aa 
SqlExceptionaa 
	exceptSqlaa  )
)aa) *
{bb 
IOcc 
.cc 
Loggercc 
.cc 
Logcc 
(cc 
NLogcc "
.cc" #
LogLevelcc# +
.cc+ ,
Warncc, 0
,cc0 1
$strcc2 R
,ccR S
	exceptSqlccT ]
)cc] ^
;cc^ _
}dd 
}ee 	
}ff 
privateii 
boolii 
goodB2G1Privateii  
=ii! "
falseii# (
;ii( )
privatejj 
booljj 
goodB2G2Privatejj  
=jj! "
falsejj# (
;jj( )
privatekk 
boolkk 
goodG2BPrivatekk 
=kk  !
falsekk" '
;kk' (
publicmm 

overridemm 
voidmm 
Goodmm 
(mm 
)mm 
{nn 
GoodB2G1oo 
(oo 
)oo 
;oo 
GoodB2G2pp 
(pp 
)pp 
;pp 
GoodG2Bqq 
(qq 
)qq 
;qq 
}rr 
privateuu 
voiduu 
GoodB2G1uu 
(uu 
)uu 
{vv 
stringww 
passwordww 
;ww 
passwordxx 
=xx 
$strxx 
;xx 
{zz 	
TcpListener{{ 
listener{{  
={{! "
null{{# '
;{{' (
try|| 
{}} 
listener 
= 
new 
TcpListener *
(* +
	IPAddress+ 4
.4 5
Parse5 :
(: ;
$str; G
)G H
,H I
$numJ O
)O P
;P Q
listener
ÄÄ 
.
ÄÄ 
Start
ÄÄ 
(
ÄÄ 
)
ÄÄ  
;
ÄÄ  !
using
ÅÅ 
(
ÅÅ 
	TcpClient
ÅÅ  
tcpConn
ÅÅ! (
=
ÅÅ) *
listener
ÅÅ+ 3
.
ÅÅ3 4
AcceptTcpClient
ÅÅ4 C
(
ÅÅC D
)
ÅÅD E
)
ÅÅE F
{
ÇÇ 
using
ÉÉ 
(
ÉÉ 
StreamReader
ÉÉ '
sr
ÉÉ( *
=
ÉÉ+ ,
new
ÉÉ- 0
StreamReader
ÉÉ1 =
(
ÉÉ= >
Console
ÉÉ> E
.
ÉÉE F
OpenStandardInput
ÉÉF W
(
ÉÉW X
)
ÉÉX Y
)
ÉÉY Z
)
ÉÉZ [
{
ÑÑ 
password
ÜÜ  
=
ÜÜ! "
sr
ÜÜ# %
.
ÜÜ% &
ReadLine
ÜÜ& .
(
ÜÜ. /
)
ÜÜ/ 0
;
ÜÜ0 1
}
áá 
}
àà 
}
ââ 
catch
ää 
(
ää 
IOException
ää 
exceptIO
ää '
)
ää' (
{
ãã 
IO
åå 
.
åå 
Logger
åå 
.
åå 
Log
åå 
(
åå 
NLog
åå "
.
åå" #
LogLevel
åå# +
.
åå+ ,
Warn
åå, 0
,
åå0 1
$str
åå2 M
,
ååM N
exceptIO
ååO W
)
ååW X
;
ååX Y
}
çç 
finally
éé 
{
èè 
try
êê 
{
ëë 
if
íí 
(
íí 
listener
íí  
!=
íí! #
null
íí$ (
)
íí( )
{
ìì 
listener
îî  
.
îî  !
Stop
îî! %
(
îî% &
)
îî& '
;
îî' (
}
ïï 
}
ññ 
catch
óó 
(
óó 
IOException
óó "
exceptIO
óó# +
)
óó+ ,
{
òò 
IO
ôô 
.
ôô 
Logger
ôô 
.
ôô 
Log
ôô !
(
ôô! "
NLog
ôô" &
.
ôô& '
LogLevel
ôô' /
.
ôô/ 0
Warn
ôô0 4
,
ôô4 5
$str
ôô6 Q
,
ôôQ R
exceptIO
ôôS [
)
ôô[ \
;
ôô\ ]
}
öö 
}
õõ 
}
úú 	
goodB2G1Private
ùù 
=
ùù 
false
ùù 
;
ùù  
GoodB2G1Sink
ûû 
(
ûû 
password
ûû 
)
ûû 
;
ûû  
}
üü 
private
°° 
void
°° 
GoodB2G1Sink
°° 
(
°° 
string
°° $
password
°°% -
)
°°. /
{
¢¢ 
if
££ 

(
££ 
goodB2G1Private
££ 
)
££ 
{
§§ 	
IO
¶¶ 
.
¶¶ 
	WriteLine
¶¶ 
(
¶¶ 
$str
¶¶ /
)
¶¶/ 0
;
¶¶0 1
}
ßß 	
else
®® 
{
©© 	
if
™™ 
(
™™ 
password
™™ 
!=
™™ 
null
™™  
)
™™  !
{
´´ 
{
≠≠ 
using
ÆÆ 
(
ÆÆ &
AesCryptoServiceProvider
ÆÆ 3
aesAlg
ÆÆ4 :
=
ÆÆ; <
new
ÆÆ= @&
AesCryptoServiceProvider
ÆÆA Y
(
ÆÆY Z
)
ÆÆZ [
)
ÆÆ[ \
{
ØØ 
aesAlg
∞∞ 
.
∞∞ 
Padding
∞∞ &
=
∞∞' (
PaddingMode
∞∞) 4
.
∞∞4 5
None
∞∞5 9
;
∞∞9 :
aesAlg
±± 
.
±± 
Key
±± "
=
±±# $
Encoding
±±% -
.
±±- .
UTF8
±±. 2
.
±±2 3
GetBytes
±±3 ;
(
±±; <
$str
±±< N
)
±±N O
;
±±O P
ICryptoTransform
≥≥ (
	decryptor
≥≥) 2
=
≥≥3 4
aesAlg
≥≥5 ;
.
≥≥; <
CreateDecryptor
≥≥< K
(
≥≥K L
aesAlg
≥≥L R
.
≥≥R S
Key
≥≥S V
,
≥≥V W
aesAlg
≥≥X ^
.
≥≥^ _
IV
≥≥_ a
)
≥≥a b
;
≥≥b c
using
µµ 
(
µµ 
MemoryStream
µµ +
	msDecrypt
µµ, 5
=
µµ6 7
new
µµ8 ;
MemoryStream
µµ< H
(
µµH I
Encoding
µµI Q
.
µµQ R
UTF8
µµR V
.
µµV W
GetBytes
µµW _
(
µµ_ `
password
µµ` h
)
µµh i
)
µµi j
)
µµj k
{
∂∂ 
using
∑∑ !
(
∑∑" #
CryptoStream
∑∑# /
	csDecrypt
∑∑0 9
=
∑∑: ;
new
∑∑< ?
CryptoStream
∑∑@ L
(
∑∑L M
	msDecrypt
∑∑M V
,
∑∑V W
	decryptor
∑∑X a
,
∑∑a b
CryptoStreamMode
∑∑c s
.
∑∑s t
Read
∑∑t x
)
∑∑x y
)
∑∑y z
{
∏∏ 
using
ππ  %
(
ππ& '
StreamReader
ππ' 3
	srDecrypt
ππ4 =
=
ππ> ?
new
ππ@ C
StreamReader
ππD P
(
ππP Q
	csDecrypt
ππQ Z
)
ππZ [
)
ππ[ \
{
∫∫  !
password
ΩΩ$ ,
=
ΩΩ- .
	srDecrypt
ΩΩ/ 8
.
ΩΩ8 9
	ReadToEnd
ΩΩ9 B
(
ΩΩB C
)
ΩΩC D
;
ΩΩD E
}
ææ  !
}
øø 
}
¿¿ 
}
¡¡ 
}
¬¬ 
try
√√ 
{
ƒƒ 
using
∆∆ 
(
∆∆ 
SqlConnection
∆∆ (

connection
∆∆) 3
=
∆∆4 5
new
∆∆6 9
SqlConnection
∆∆: G
(
∆∆G H
$str
∆∆H ~
+∆∆ Ä
$str∆∆Å Ö
+∆∆Ü á
$str∆∆à î
+∆∆ï ñ
password∆∆ó ü
)∆∆ü †
)∆∆† °
{
«« 

connection
»» "
.
»»" #
Open
»»# '
(
»»' (
)
»»( )
;
»») *
using
…… 
(
…… 

SqlCommand
…… )
command
……* 1
=
……2 3
new
……4 7

SqlCommand
……8 B
(
……B C
$str
……C ]
,
……] ^

connection
……_ i
)
……i j
)
……j k
{
   
command
ÀÀ #
.
ÀÀ# $
ExecuteNonQuery
ÀÀ$ 3
(
ÀÀ3 4
)
ÀÀ4 5
;
ÀÀ5 6
}
ÃÃ 
}
ÕÕ 
}
ŒŒ 
catch
œœ 
(
œœ 
SqlException
œœ #
	exceptSql
œœ$ -
)
œœ- .
{
–– 
IO
—— 
.
—— 
Logger
—— 
.
—— 
Log
—— !
(
——! "
NLog
——" &
.
——& '
LogLevel
——' /
.
——/ 0
Warn
——0 4
,
——4 5
$str
——6 V
,
——V W
	exceptSql
——X a
)
——a b
;
——b c
}
““ 
}
”” 
}
‘‘ 	
}
’’ 
private
ÿÿ 
void
ÿÿ 
GoodB2G2
ÿÿ 
(
ÿÿ 
)
ÿÿ 
{
ŸŸ 
string
⁄⁄ 
password
⁄⁄ 
;
⁄⁄ 
password
€€ 
=
€€ 
$str
€€ 
;
€€ 
{
›› 	
TcpListener
ﬁﬁ 
listener
ﬁﬁ  
=
ﬁﬁ! "
null
ﬁﬁ# '
;
ﬁﬁ' (
try
ﬂﬂ 
{
‡‡ 
listener
‚‚ 
=
‚‚ 
new
‚‚ 
TcpListener
‚‚ *
(
‚‚* +
	IPAddress
‚‚+ 4
.
‚‚4 5
Parse
‚‚5 :
(
‚‚: ;
$str
‚‚; G
)
‚‚G H
,
‚‚H I
$num
‚‚J O
)
‚‚O P
;
‚‚P Q
listener
„„ 
.
„„ 
Start
„„ 
(
„„ 
)
„„  
;
„„  !
using
‰‰ 
(
‰‰ 
	TcpClient
‰‰  
tcpConn
‰‰! (
=
‰‰) *
listener
‰‰+ 3
.
‰‰3 4
AcceptTcpClient
‰‰4 C
(
‰‰C D
)
‰‰D E
)
‰‰E F
{
ÂÂ 
using
ÊÊ 
(
ÊÊ 
StreamReader
ÊÊ '
sr
ÊÊ( *
=
ÊÊ+ ,
new
ÊÊ- 0
StreamReader
ÊÊ1 =
(
ÊÊ= >
Console
ÊÊ> E
.
ÊÊE F
OpenStandardInput
ÊÊF W
(
ÊÊW X
)
ÊÊX Y
)
ÊÊY Z
)
ÊÊZ [
{
ÁÁ 
password
ÈÈ  
=
ÈÈ! "
sr
ÈÈ# %
.
ÈÈ% &
ReadLine
ÈÈ& .
(
ÈÈ. /
)
ÈÈ/ 0
;
ÈÈ0 1
}
ÍÍ 
}
ÎÎ 
}
ÏÏ 
catch
ÌÌ 
(
ÌÌ 
IOException
ÌÌ 
exceptIO
ÌÌ '
)
ÌÌ' (
{
ÓÓ 
IO
ÔÔ 
.
ÔÔ 
Logger
ÔÔ 
.
ÔÔ 
Log
ÔÔ 
(
ÔÔ 
NLog
ÔÔ "
.
ÔÔ" #
LogLevel
ÔÔ# +
.
ÔÔ+ ,
Warn
ÔÔ, 0
,
ÔÔ0 1
$str
ÔÔ2 M
,
ÔÔM N
exceptIO
ÔÔO W
)
ÔÔW X
;
ÔÔX Y
}
 
finally
ÒÒ 
{
ÚÚ 
try
ÛÛ 
{
ÙÙ 
if
ıı 
(
ıı 
listener
ıı  
!=
ıı! #
null
ıı$ (
)
ıı( )
{
ˆˆ 
listener
˜˜  
.
˜˜  !
Stop
˜˜! %
(
˜˜% &
)
˜˜& '
;
˜˜' (
}
¯¯ 
}
˘˘ 
catch
˙˙ 
(
˙˙ 
IOException
˙˙ "
exceptIO
˙˙# +
)
˙˙+ ,
{
˚˚ 
IO
¸¸ 
.
¸¸ 
Logger
¸¸ 
.
¸¸ 
Log
¸¸ !
(
¸¸! "
NLog
¸¸" &
.
¸¸& '
LogLevel
¸¸' /
.
¸¸/ 0
Warn
¸¸0 4
,
¸¸4 5
$str
¸¸6 Q
,
¸¸Q R
exceptIO
¸¸S [
)
¸¸[ \
;
¸¸\ ]
}
˝˝ 
}
˛˛ 
}
ˇˇ 	
goodB2G2Private
ÄÄ 
=
ÄÄ 
true
ÄÄ 
;
ÄÄ 
GoodB2G2Sink
ÅÅ 
(
ÅÅ 
password
ÅÅ 
)
ÅÅ 
;
ÅÅ  
}
ÇÇ 
private
ÑÑ 
void
ÑÑ 
GoodB2G2Sink
ÑÑ 
(
ÑÑ 
string
ÑÑ $
password
ÑÑ% -
)
ÑÑ. /
{
ÖÖ 
if
ÜÜ 

(
ÜÜ 
goodB2G2Private
ÜÜ 
)
ÜÜ 
{
áá 	
if
àà 
(
àà 
password
àà 
!=
àà 
null
àà  
)
àà  !
{
ââ 
{
ãã 
using
åå 
(
åå &
AesCryptoServiceProvider
åå 3
aesAlg
åå4 :
=
åå; <
new
åå= @&
AesCryptoServiceProvider
ååA Y
(
ååY Z
)
ååZ [
)
åå[ \
{
çç 
aesAlg
éé 
.
éé 
Padding
éé &
=
éé' (
PaddingMode
éé) 4
.
éé4 5
None
éé5 9
;
éé9 :
aesAlg
èè 
.
èè 
Key
èè "
=
èè# $
Encoding
èè% -
.
èè- .
UTF8
èè. 2
.
èè2 3
GetBytes
èè3 ;
(
èè; <
$str
èè< N
)
èèN O
;
èèO P
ICryptoTransform
ëë (
	decryptor
ëë) 2
=
ëë3 4
aesAlg
ëë5 ;
.
ëë; <
CreateDecryptor
ëë< K
(
ëëK L
aesAlg
ëëL R
.
ëëR S
Key
ëëS V
,
ëëV W
aesAlg
ëëX ^
.
ëë^ _
IV
ëë_ a
)
ëëa b
;
ëëb c
using
ìì 
(
ìì 
MemoryStream
ìì +
	msDecrypt
ìì, 5
=
ìì6 7
new
ìì8 ;
MemoryStream
ìì< H
(
ììH I
Encoding
ììI Q
.
ììQ R
UTF8
ììR V
.
ììV W
GetBytes
ììW _
(
ìì_ `
password
ìì` h
)
ììh i
)
ììi j
)
ììj k
{
îî 
using
ïï !
(
ïï" #
CryptoStream
ïï# /
	csDecrypt
ïï0 9
=
ïï: ;
new
ïï< ?
CryptoStream
ïï@ L
(
ïïL M
	msDecrypt
ïïM V
,
ïïV W
	decryptor
ïïX a
,
ïïa b
CryptoStreamMode
ïïc s
.
ïïs t
Read
ïït x
)
ïïx y
)
ïïy z
{
ññ 
using
óó  %
(
óó& '
StreamReader
óó' 3
	srDecrypt
óó4 =
=
óó> ?
new
óó@ C
StreamReader
óóD P
(
óóP Q
	csDecrypt
óóQ Z
)
óóZ [
)
óó[ \
{
òò  !
password
õõ$ ,
=
õõ- .
	srDecrypt
õõ/ 8
.
õõ8 9
	ReadToEnd
õõ9 B
(
õõB C
)
õõC D
;
õõD E
}
úú  !
}
ùù 
}
ûû 
}
üü 
}
†† 
try
°° 
{
¢¢ 
using
§§ 
(
§§ 
SqlConnection
§§ (

connection
§§) 3
=
§§4 5
new
§§6 9
SqlConnection
§§: G
(
§§G H
$str
§§H ~
+§§ Ä
$str§§Å Ö
+§§Ü á
$str§§à î
+§§ï ñ
password§§ó ü
)§§ü †
)§§† °
{
•• 

connection
¶¶ "
.
¶¶" #
Open
¶¶# '
(
¶¶' (
)
¶¶( )
;
¶¶) *
using
ßß 
(
ßß 

SqlCommand
ßß )
command
ßß* 1
=
ßß2 3
new
ßß4 7

SqlCommand
ßß8 B
(
ßßB C
$str
ßßC ]
,
ßß] ^

connection
ßß_ i
)
ßßi j
)
ßßj k
{
®® 
command
©© #
.
©©# $
ExecuteNonQuery
©©$ 3
(
©©3 4
)
©©4 5
;
©©5 6
}
™™ 
}
´´ 
}
¨¨ 
catch
≠≠ 
(
≠≠ 
SqlException
≠≠ #
	exceptSql
≠≠$ -
)
≠≠- .
{
ÆÆ 
IO
ØØ 
.
ØØ 
Logger
ØØ 
.
ØØ 
Log
ØØ !
(
ØØ! "
NLog
ØØ" &
.
ØØ& '
LogLevel
ØØ' /
.
ØØ/ 0
Warn
ØØ0 4
,
ØØ4 5
$str
ØØ6 V
,
ØØV W
	exceptSql
ØØX a
)
ØØa b
;
ØØb c
}
∞∞ 
}
±± 
}
≤≤ 	
}
≥≥ 
private
∂∂ 
void
∂∂ 
GoodG2B
∂∂ 
(
∂∂ 
)
∂∂ 
{
∑∑ 
string
∏∏ 
password
∏∏ 
;
∏∏ 
password
ªª 
=
ªª 
$str
ªª "
;
ªª" #
goodG2BPrivate
ºº 
=
ºº 
true
ºº 
;
ºº 
GoodG2BSink
ΩΩ 
(
ΩΩ 
password
ΩΩ 
)
ΩΩ 
;
ΩΩ 
}
ææ 
private
¿¿ 
void
¿¿ 
GoodG2BSink
¿¿ 
(
¿¿ 
string
¿¿ #
password
¿¿$ ,
)
¿¿- .
{
¡¡ 
if
¬¬ 

(
¬¬ 
goodG2BPrivate
¬¬ 
)
¬¬ 
{
√√ 	
try
ƒƒ 
{
≈≈ 
using
«« 
(
«« 
SqlConnection
«« $

connection
««% /
=
««0 1
new
««2 5
SqlConnection
««6 C
(
««C D
$str
««D z
+
««{ |
$str««} Å
+««Ç É
$str««Ñ ê
+««ë í
password««ì õ
)««õ ú
)««ú ù
{
»» 

connection
…… 
.
…… 
Open
…… #
(
……# $
)
……$ %
;
……% &
using
   
(
   

SqlCommand
   %
command
  & -
=
  . /
new
  0 3

SqlCommand
  4 >
(
  > ?
$str
  ? Y
,
  Y Z

connection
  [ e
)
  e f
)
  f g
{
ÀÀ 
command
ÃÃ 
.
ÃÃ  
ExecuteNonQuery
ÃÃ  /
(
ÃÃ/ 0
)
ÃÃ0 1
;
ÃÃ1 2
}
ÕÕ 
}
ŒŒ 
}
œœ 
catch
–– 
(
–– 
SqlException
–– 
	exceptSql
––  )
)
––) *
{
—— 
IO
““ 
.
““ 
Logger
““ 
.
““ 
Log
““ 
(
““ 
NLog
““ "
.
““" #
LogLevel
““# +
.
““+ ,
Warn
““, 0
,
““0 1
$str
““2 R
,
““R S
	exceptSql
““T ]
)
““] ^
;
““^ _
}
”” 
}
‘‘ 	
}
’’ 
}◊◊ 
}ÿÿ ⁄V
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_22a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_22a F
:G H
AbstractTestCaseI Y
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
password## 
=## 
null## 
;## 
password$$ 
=$$ 
$str$$ 
;$$ 
{&& 	
TcpListener'' 
listener''  
=''! "
null''# '
;''' (
try(( 
{)) 
listener++ 
=++ 
new++ 
TcpListener++ *
(++* +
	IPAddress+++ 4
.++4 5
Parse++5 :
(++: ;
$str++; G
)++G H
,++H I
$num++J O
)++O P
;++P Q
listener,, 
.,, 
Start,, 
(,, 
),,  
;,,  !
using-- 
(-- 
	TcpClient--  
tcpConn--! (
=--) *
listener--+ 3
.--3 4
AcceptTcpClient--4 C
(--C D
)--D E
)--E F
{.. 
using// 
(// 
StreamReader// '
sr//( *
=//+ ,
new//- 0
StreamReader//1 =
(//= >
Console//> E
.//E F
OpenStandardInput//F W
(//W X
)//X Y
)//Y Z
)//Z [
{00 
password22  
=22! "
sr22# %
.22% &
ReadLine22& .
(22. /
)22/ 0
;220 1
}33 
}44 
}55 
catch66 
(66 
IOException66 
exceptIO66 '
)66' (
{77 
IO88 
.88 
Logger88 
.88 
Log88 
(88 
NLog88 "
.88" #
LogLevel88# +
.88+ ,
Warn88, 0
,880 1
$str882 M
,88M N
exceptIO88O W
)88W X
;88X Y
}99 
finally:: 
{;; 
try<< 
{== 
if>> 
(>> 
listener>>  
!=>>! #
null>>$ (
)>>( )
{?? 
listener@@  
.@@  !
Stop@@! %
(@@% &
)@@& '
;@@' (
}AA 
}BB 
catchCC 
(CC 
IOExceptionCC "
exceptIOCC# +
)CC+ ,
{DD 
IOEE 
.EE 
LoggerEE 
.EE 
LogEE !
(EE! "
NLogEE" &
.EE& '
LogLevelEE' /
.EE/ 0
WarnEE0 4
,EE4 5
$strEE6 Q
,EEQ R
exceptIOEES [
)EE[ \
;EE\ ]
}FF 
}GG 
}HH 	
badPublicStaticII 
=II 
trueII 
;II L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_22bJJ H
.JJH I
BadSinkJJI P
(JJP Q
passwordJJQ Y
)JJZ [
;JJ[ \
}KK 
publicNN 

staticNN 
boolNN  
goodB2G1PublicStaticNN +
=NN, -
falseNN. 3
;NN3 4
publicOO 

staticOO 
boolOO  
goodB2G2PublicStaticOO +
=OO, -
falseOO. 3
;OO3 4
publicPP 

staticPP 
boolPP 
goodG2BPublicStaticPP *
=PP+ ,
falsePP- 2
;PP2 3
publicRR 

overrideRR 
voidRR 
GoodRR 
(RR 
)RR 
{SS 
GoodB2G1TT 
(TT 
)TT 
;TT 
GoodB2G2UU 
(UU 
)UU 
;UU 
GoodG2BVV 
(VV 
)VV 
;VV 
}WW 
privateZZ 
voidZZ 
GoodB2G1ZZ 
(ZZ 
)ZZ 
{[[ 
string\\ 
password\\ 
=\\ 
null\\ 
;\\ 
password]] 
=]] 
$str]] 
;]] 
{__ 	
TcpListener`` 
listener``  
=``! "
null``# '
;``' (
tryaa 
{bb 
listenerdd 
=dd 
newdd 
TcpListenerdd *
(dd* +
	IPAddressdd+ 4
.dd4 5
Parsedd5 :
(dd: ;
$strdd; G
)ddG H
,ddH I
$numddJ O
)ddO P
;ddP Q
listeneree 
.ee 
Startee 
(ee 
)ee  
;ee  !
usingff 
(ff 
	TcpClientff  
tcpConnff! (
=ff) *
listenerff+ 3
.ff3 4
AcceptTcpClientff4 C
(ffC D
)ffD E
)ffE F
{gg 
usinghh 
(hh 
StreamReaderhh '
srhh( *
=hh+ ,
newhh- 0
StreamReaderhh1 =
(hh= >
Consolehh> E
.hhE F
OpenStandardInputhhF W
(hhW X
)hhX Y
)hhY Z
)hhZ [
{ii 
passwordkk  
=kk! "
srkk# %
.kk% &
ReadLinekk& .
(kk. /
)kk/ 0
;kk0 1
}ll 
}mm 
}nn 
catchoo 
(oo 
IOExceptionoo 
exceptIOoo '
)oo' (
{pp 
IOqq 
.qq 
Loggerqq 
.qq 
Logqq 
(qq 
NLogqq "
.qq" #
LogLevelqq# +
.qq+ ,
Warnqq, 0
,qq0 1
$strqq2 M
,qqM N
exceptIOqqO W
)qqW X
;qqX Y
}rr 
finallyss 
{tt 
tryuu 
{vv 
ifww 
(ww 
listenerww  
!=ww! #
nullww$ (
)ww( )
{xx 
listeneryy  
.yy  !
Stopyy! %
(yy% &
)yy& '
;yy' (
}zz 
}{{ 
catch|| 
(|| 
IOException|| "
exceptIO||# +
)||+ ,
{}} 
IO~~ 
.~~ 
Logger~~ 
.~~ 
Log~~ !
(~~! "
NLog~~" &
.~~& '
LogLevel~~' /
.~~/ 0
Warn~~0 4
,~~4 5
$str~~6 Q
,~~Q R
exceptIO~~S [
)~~[ \
;~~\ ]
} 
}
ÄÄ 
}
ÅÅ 	"
goodB2G1PublicStatic
ÇÇ 
=
ÇÇ 
false
ÇÇ $
;
ÇÇ$ %N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_22b
ÉÉ H
.
ÉÉH I
GoodB2G1Sink
ÉÉI U
(
ÉÉU V
password
ÉÉV ^
)
ÉÉ_ `
;
ÉÉ` a
}
ÑÑ 
private
áá 
void
áá 
GoodB2G2
áá 
(
áá 
)
áá 
{
àà 
string
ââ 
password
ââ 
=
ââ 
null
ââ 
;
ââ 
password
ää 
=
ää 
$str
ää 
;
ää 
{
åå 	
TcpListener
çç 
listener
çç  
=
çç! "
null
çç# '
;
çç' (
try
éé 
{
èè 
listener
ëë 
=
ëë 
new
ëë 
TcpListener
ëë *
(
ëë* +
	IPAddress
ëë+ 4
.
ëë4 5
Parse
ëë5 :
(
ëë: ;
$str
ëë; G
)
ëëG H
,
ëëH I
$num
ëëJ O
)
ëëO P
;
ëëP Q
listener
íí 
.
íí 
Start
íí 
(
íí 
)
íí  
;
íí  !
using
ìì 
(
ìì 
	TcpClient
ìì  
tcpConn
ìì! (
=
ìì) *
listener
ìì+ 3
.
ìì3 4
AcceptTcpClient
ìì4 C
(
ììC D
)
ììD E
)
ììE F
{
îî 
using
ïï 
(
ïï 
StreamReader
ïï '
sr
ïï( *
=
ïï+ ,
new
ïï- 0
StreamReader
ïï1 =
(
ïï= >
Console
ïï> E
.
ïïE F
OpenStandardInput
ïïF W
(
ïïW X
)
ïïX Y
)
ïïY Z
)
ïïZ [
{
ññ 
password
òò  
=
òò! "
sr
òò# %
.
òò% &
ReadLine
òò& .
(
òò. /
)
òò/ 0
;
òò0 1
}
ôô 
}
öö 
}
õõ 
catch
úú 
(
úú 
IOException
úú 
exceptIO
úú '
)
úú' (
{
ùù 
IO
ûû 
.
ûû 
Logger
ûû 
.
ûû 
Log
ûû 
(
ûû 
NLog
ûû "
.
ûû" #
LogLevel
ûû# +
.
ûû+ ,
Warn
ûû, 0
,
ûû0 1
$str
ûû2 M
,
ûûM N
exceptIO
ûûO W
)
ûûW X
;
ûûX Y
}
üü 
finally
†† 
{
°° 
try
¢¢ 
{
££ 
if
§§ 
(
§§ 
listener
§§  
!=
§§! #
null
§§$ (
)
§§( )
{
•• 
listener
¶¶  
.
¶¶  !
Stop
¶¶! %
(
¶¶% &
)
¶¶& '
;
¶¶' (
}
ßß 
}
®® 
catch
©© 
(
©© 
IOException
©© "
exceptIO
©©# +
)
©©+ ,
{
™™ 
IO
´´ 
.
´´ 
Logger
´´ 
.
´´ 
Log
´´ !
(
´´! "
NLog
´´" &
.
´´& '
LogLevel
´´' /
.
´´/ 0
Warn
´´0 4
,
´´4 5
$str
´´6 Q
,
´´Q R
exceptIO
´´S [
)
´´[ \
;
´´\ ]
}
¨¨ 
}
≠≠ 
}
ÆÆ 	"
goodB2G2PublicStatic
ØØ 
=
ØØ 
true
ØØ #
;
ØØ# $N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_22b
∞∞ H
.
∞∞H I
GoodB2G2Sink
∞∞I U
(
∞∞U V
password
∞∞V ^
)
∞∞_ `
;
∞∞` a
}
±± 
private
¥¥ 
void
¥¥ 
GoodG2B
¥¥ 
(
¥¥ 
)
¥¥ 
{
µµ 
string
∂∂ 
password
∂∂ 
=
∂∂ 
null
∂∂ 
;
∂∂ 
password
ππ 
=
ππ 
$str
ππ "
;
ππ" #!
goodG2BPublicStatic
∫∫ 
=
∫∫ 
true
∫∫ "
;
∫∫" #N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_22b
ªª H
.
ªªH I
GoodG2BSink
ªªI T
(
ªªT U
password
ªªU ]
)
ªª^ _
;
ªª_ `
}
ºº 
}ææ 
}øø Ôa
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_22b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_22b F
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   
if!! 

(!! L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_22a!! L
.!!L M
badPublicStatic!!M \
)!!\ ]
{"" 	
try## 
{$$ 
using&& 
(&& 
SqlConnection&& $

connection&&% /
=&&0 1
new&&2 5
SqlConnection&&6 C
(&&C D
$str&&D z
+&&{ |
$str	&&} Å
+
&&Ç É
$str
&&Ñ ê
+
&&ë í
password
&&ì õ
)
&&õ ú
)
&&ú ù
{'' 

connection(( 
.(( 
Open(( #
(((# $
)(($ %
;((% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
$str))? Y
,))Y Z

connection))[ e
)))e f
)))f g
{** 
command++ 
.++  
ExecuteNonQuery++  /
(++/ 0
)++0 1
;++1 2
},, 
}-- 
}.. 
catch// 
(// 
SqlException// 
	exceptSql//  )
)//) *
{00 
IO11 
.11 
Logger11 
.11 
Log11 
(11 
NLog11 "
.11" #
LogLevel11# +
.11+ ,
Warn11, 0
,110 1
$str112 R
,11R S
	exceptSql11T ]
)11] ^
;11^ _
}22 
}33 	
else44 
{55 	
password88 
=88 
null88 
;88 
}99 	
}:: 
public?? 

static?? 
void?? 
GoodB2G1Sink?? #
(??# $
string??$ *
password??+ 3
)??4 5
{@@ 
ifAA 

(AA L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_22aAA L
.AAL M 
goodB2G1PublicStaticAAM a
)AAa b
{BB 	
passwordEE 
=EE 
nullEE 
;EE 
}FF 	
elseGG 
{HH 	
ifII 
(II 
passwordII 
!=II 
nullII  
)II  !
{JJ 
{LL 
usingMM 
(MM $
AesCryptoServiceProviderMM 3
aesAlgMM4 :
=MM; <
newMM= @$
AesCryptoServiceProviderMMA Y
(MMY Z
)MMZ [
)MM[ \
{NN 
aesAlgOO 
.OO 
PaddingOO &
=OO' (
PaddingModeOO) 4
.OO4 5
NoneOO5 9
;OO9 :
aesAlgPP 
.PP 
KeyPP "
=PP# $
EncodingPP% -
.PP- .
UTF8PP. 2
.PP2 3
GetBytesPP3 ;
(PP; <
$strPP< N
)PPN O
;PPO P
ICryptoTransformRR (
	decryptorRR) 2
=RR3 4
aesAlgRR5 ;
.RR; <
CreateDecryptorRR< K
(RRK L
aesAlgRRL R
.RRR S
KeyRRS V
,RRV W
aesAlgRRX ^
.RR^ _
IVRR_ a
)RRa b
;RRb c
usingTT 
(TT 
MemoryStreamTT +
	msDecryptTT, 5
=TT6 7
newTT8 ;
MemoryStreamTT< H
(TTH I
EncodingTTI Q
.TTQ R
UTF8TTR V
.TTV W
GetBytesTTW _
(TT_ `
passwordTT` h
)TTh i
)TTi j
)TTj k
{UU 
usingVV !
(VV" #
CryptoStreamVV# /
	csDecryptVV0 9
=VV: ;
newVV< ?
CryptoStreamVV@ L
(VVL M
	msDecryptVVM V
,VVV W
	decryptorVVX a
,VVa b
CryptoStreamModeVVc s
.VVs t
ReadVVt x
)VVx y
)VVy z
{WW 
usingXX  %
(XX& '
StreamReaderXX' 3
	srDecryptXX4 =
=XX> ?
newXX@ C
StreamReaderXXD P
(XXP Q
	csDecryptXXQ Z
)XXZ [
)XX[ \
{YY  !
password\\$ ,
=\\- .
	srDecrypt\\/ 8
.\\8 9
	ReadToEnd\\9 B
(\\B C
)\\C D
;\\D E
}]]  !
}^^ 
}__ 
}`` 
}aa 
trybb 
{cc 
usingee 
(ee 
SqlConnectionee (

connectionee) 3
=ee4 5
newee6 9
SqlConnectionee: G
(eeG H
$streeH ~
+	ee Ä
$str
eeÅ Ö
+
eeÜ á
$str
eeà î
+
eeï ñ
password
eeó ü
)
eeü †
)
ee† °
{ff 

connectiongg "
.gg" #
Opengg# '
(gg' (
)gg( )
;gg) *
usinghh 
(hh 

SqlCommandhh )
commandhh* 1
=hh2 3
newhh4 7

SqlCommandhh8 B
(hhB C
$strhhC ]
,hh] ^

connectionhh_ i
)hhi j
)hhj k
{ii 
commandjj #
.jj# $
ExecuteNonQueryjj$ 3
(jj3 4
)jj4 5
;jj5 6
}kk 
}ll 
}mm 
catchnn 
(nn 
SqlExceptionnn #
	exceptSqlnn$ -
)nn- .
{oo 
IOpp 
.pp 
Loggerpp 
.pp 
Logpp !
(pp! "
NLogpp" &
.pp& '
LogLevelpp' /
.pp/ 0
Warnpp0 4
,pp4 5
$strpp6 V
,ppV W
	exceptSqlppX a
)ppa b
;ppb c
}qq 
}rr 
}ss 	
}tt 
publicww 

staticww 
voidww 
GoodB2G2Sinkww #
(ww# $
stringww$ *
passwordww+ 3
)ww4 5
{xx 
ifyy 

(yy L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_22ayy L
.yyL M 
goodB2G2PublicStaticyyM a
)yya b
{zz 	
if{{ 
({{ 
password{{ 
!={{ 
null{{  
){{  !
{|| 
{~~ 
using 
( $
AesCryptoServiceProvider 3
aesAlg4 :
=; <
new= @$
AesCryptoServiceProviderA Y
(Y Z
)Z [
)[ \
{
ÄÄ 
aesAlg
ÅÅ 
.
ÅÅ 
Padding
ÅÅ &
=
ÅÅ' (
PaddingMode
ÅÅ) 4
.
ÅÅ4 5
None
ÅÅ5 9
;
ÅÅ9 :
aesAlg
ÇÇ 
.
ÇÇ 
Key
ÇÇ "
=
ÇÇ# $
Encoding
ÇÇ% -
.
ÇÇ- .
UTF8
ÇÇ. 2
.
ÇÇ2 3
GetBytes
ÇÇ3 ;
(
ÇÇ; <
$str
ÇÇ< N
)
ÇÇN O
;
ÇÇO P
ICryptoTransform
ÑÑ (
	decryptor
ÑÑ) 2
=
ÑÑ3 4
aesAlg
ÑÑ5 ;
.
ÑÑ; <
CreateDecryptor
ÑÑ< K
(
ÑÑK L
aesAlg
ÑÑL R
.
ÑÑR S
Key
ÑÑS V
,
ÑÑV W
aesAlg
ÑÑX ^
.
ÑÑ^ _
IV
ÑÑ_ a
)
ÑÑa b
;
ÑÑb c
using
ÜÜ 
(
ÜÜ 
MemoryStream
ÜÜ +
	msDecrypt
ÜÜ, 5
=
ÜÜ6 7
new
ÜÜ8 ;
MemoryStream
ÜÜ< H
(
ÜÜH I
Encoding
ÜÜI Q
.
ÜÜQ R
UTF8
ÜÜR V
.
ÜÜV W
GetBytes
ÜÜW _
(
ÜÜ_ `
password
ÜÜ` h
)
ÜÜh i
)
ÜÜi j
)
ÜÜj k
{
áá 
using
àà !
(
àà" #
CryptoStream
àà# /
	csDecrypt
àà0 9
=
àà: ;
new
àà< ?
CryptoStream
àà@ L
(
ààL M
	msDecrypt
ààM V
,
ààV W
	decryptor
ààX a
,
ààa b
CryptoStreamMode
ààc s
.
ààs t
Read
ààt x
)
ààx y
)
àày z
{
ââ 
using
ää  %
(
ää& '
StreamReader
ää' 3
	srDecrypt
ää4 =
=
ää> ?
new
ää@ C
StreamReader
ääD P
(
ääP Q
	csDecrypt
ääQ Z
)
ääZ [
)
ää[ \
{
ãã  !
password
éé$ ,
=
éé- .
	srDecrypt
éé/ 8
.
éé8 9
	ReadToEnd
éé9 B
(
ééB C
)
ééC D
;
ééD E
}
èè  !
}
êê 
}
ëë 
}
íí 
}
ìì 
try
îî 
{
ïï 
using
óó 
(
óó 
SqlConnection
óó (

connection
óó) 3
=
óó4 5
new
óó6 9
SqlConnection
óó: G
(
óóG H
$str
óóH ~
+óó Ä
$stróóÅ Ö
+óóÜ á
$stróóà î
+óóï ñ
passwordóóó ü
)óóü †
)óó† °
{
òò 

connection
ôô "
.
ôô" #
Open
ôô# '
(
ôô' (
)
ôô( )
;
ôô) *
using
öö 
(
öö 

SqlCommand
öö )
command
öö* 1
=
öö2 3
new
öö4 7

SqlCommand
öö8 B
(
ööB C
$str
ööC ]
,
öö] ^

connection
öö_ i
)
ööi j
)
ööj k
{
õõ 
command
úú #
.
úú# $
ExecuteNonQuery
úú$ 3
(
úú3 4
)
úú4 5
;
úú5 6
}
ùù 
}
ûû 
}
üü 
catch
†† 
(
†† 
SqlException
†† #
	exceptSql
††$ -
)
††- .
{
°° 
IO
¢¢ 
.
¢¢ 
Logger
¢¢ 
.
¢¢ 
Log
¢¢ !
(
¢¢! "
NLog
¢¢" &
.
¢¢& '
LogLevel
¢¢' /
.
¢¢/ 0
Warn
¢¢0 4
,
¢¢4 5
$str
¢¢6 V
,
¢¢V W
	exceptSql
¢¢X a
)
¢¢a b
;
¢¢b c
}
££ 
}
§§ 
}
•• 	
else
¶¶ 
{
ßß 	
password
™™ 
=
™™ 
null
™™ 
;
™™ 
}
´´ 	
}
¨¨ 
public
ØØ 

static
ØØ 
void
ØØ 
GoodG2BSink
ØØ "
(
ØØ" #
string
ØØ# )
password
ØØ* 2
)
ØØ3 4
{
∞∞ 
if
±± 

(
±± N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_22a
±± L
.
±±L M!
goodG2BPublicStatic
±±M `
)
±±` a
{
≤≤ 	
try
≥≥ 
{
¥¥ 
using
∂∂ 
(
∂∂ 
SqlConnection
∂∂ $

connection
∂∂% /
=
∂∂0 1
new
∂∂2 5
SqlConnection
∂∂6 C
(
∂∂C D
$str
∂∂D z
+
∂∂{ |
$str∂∂} Å
+∂∂Ç É
$str∂∂Ñ ê
+∂∂ë í
password∂∂ì õ
)∂∂õ ú
)∂∂ú ù
{
∑∑ 

connection
∏∏ 
.
∏∏ 
Open
∏∏ #
(
∏∏# $
)
∏∏$ %
;
∏∏% &
using
ππ 
(
ππ 

SqlCommand
ππ %
command
ππ& -
=
ππ. /
new
ππ0 3

SqlCommand
ππ4 >
(
ππ> ?
$str
ππ? Y
,
ππY Z

connection
ππ[ e
)
ππe f
)
ππf g
{
∫∫ 
command
ªª 
.
ªª  
ExecuteNonQuery
ªª  /
(
ªª/ 0
)
ªª0 1
;
ªª1 2
}
ºº 
}
ΩΩ 
}
ææ 
catch
øø 
(
øø 
SqlException
øø 
	exceptSql
øø  )
)
øø) *
{
¿¿ 
IO
¡¡ 
.
¡¡ 
Logger
¡¡ 
.
¡¡ 
Log
¡¡ 
(
¡¡ 
NLog
¡¡ "
.
¡¡" #
LogLevel
¡¡# +
.
¡¡+ ,
Warn
¡¡, 0
,
¡¡0 1
$str
¡¡2 R
,
¡¡R S
	exceptSql
¡¡T ]
)
¡¡] ^
;
¡¡^ _
}
¬¬ 
}
√√ 	
else
ƒƒ 
{
≈≈ 	
password
»» 
=
»» 
null
»» 
;
»» 
}
…… 	
}
   
}ÃÃ 
}ÕÕ äm
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_31.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_31 E
:F G
AbstractTestCaseH X
{   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
string$$ 
passwordCopy$$ 
;$$ 
{%% 	
string&& 
password&& 
;&& 
password'' 
='' 
$str'' 
;'' 
{)) 
TcpListener** 
listener** $
=**% &
null**' +
;**+ ,
try++ 
{,, 
listener.. 
=.. 
new.. "
TcpListener..# .
(... /
	IPAddress../ 8
...8 9
Parse..9 >
(..> ?
$str..? K
)..K L
,..L M
$num..N S
)..S T
;..T U
listener// 
.// 
Start// "
(//" #
)//# $
;//$ %
using00 
(00 
	TcpClient00 $
tcpConn00% ,
=00- .
listener00/ 7
.007 8
AcceptTcpClient008 G
(00G H
)00H I
)00I J
{11 
using22 
(22 
StreamReader22 +
sr22, .
=22/ 0
new221 4
StreamReader225 A
(22A B
Console22B I
.22I J
OpenStandardInput22J [
(22[ \
)22\ ]
)22] ^
)22^ _
{33 
password55 $
=55% &
sr55' )
.55) *
ReadLine55* 2
(552 3
)553 4
;554 5
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
$str;;6 Q
,;;Q R
exceptIO;;S [
);;[ \
;;;\ ]
}<< 
finally== 
{>> 
try?? 
{@@ 
ifAA 
(AA 
listenerAA $
!=AA% '
nullAA( ,
)AA, -
{BB 
listenerCC $
.CC$ %
StopCC% )
(CC) *
)CC* +
;CC+ ,
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF &
exceptIOFF' /
)FF/ 0
{GG 
IOHH 
.HH 
LoggerHH !
.HH! "
LogHH" %
(HH% &
NLogHH& *
.HH* +
LogLevelHH+ 3
.HH3 4
WarnHH4 8
,HH8 9
$strHH: U
,HHU V
exceptIOHHW _
)HH_ `
;HH` a
}II 
}JJ 
}KK 
passwordCopyLL 
=LL 
passwordLL #
;LL# $
}MM 	
{NN 	
stringOO 
passwordOO 
=OO 
passwordCopyOO *
;OO* +
tryPP 
{QQ 
usingSS 
(SS 
SqlConnectionSS $

connectionSS% /
=SS0 1
newSS2 5
SqlConnectionSS6 C
(SSC D
$strSSD z
+SS{ |
$str	SS} Å
+
SSÇ É
$str
SSÑ ê
+
SSë í
password
SSì õ
)
SSõ ú
)
SSú ù
{TT 

connectionUU 
.UU 
OpenUU #
(UU# $
)UU$ %
;UU% &
usingVV 
(VV 

SqlCommandVV %
commandVV& -
=VV. /
newVV0 3

SqlCommandVV4 >
(VV> ?
$strVV? Y
,VVY Z

connectionVV[ e
)VVe f
)VVf g
{WW 
commandXX 
.XX  
ExecuteNonQueryXX  /
(XX/ 0
)XX0 1
;XX1 2
}YY 
}ZZ 
}[[ 
catch\\ 
(\\ 
SqlException\\ 
	exceptSql\\  )
)\\) *
{]] 
IO^^ 
.^^ 
Logger^^ 
.^^ 
Log^^ 
(^^ 
NLog^^ "
.^^" #
LogLevel^^# +
.^^+ ,
Warn^^, 0
,^^0 1
$str^^2 R
,^^R S
	exceptSql^^T ]
)^^] ^
;^^^ _
}__ 
}`` 	
}aa 
publicdd 

overridedd 
voiddd 
Gooddd 
(dd 
)dd 
{ee 
GoodG2Bff 
(ff 
)ff 
;ff 
GoodB2Ggg 
(gg 
)gg 
;gg 
}hh 
privatekk 
voidkk 
GoodG2Bkk 
(kk 
)kk 
{ll 
stringmm 
passwordCopymm 
;mm 
{nn 	
stringoo 
passwordoo 
;oo 
passwordrr 
=rr 
$strrr &
;rr& '
passwordCopyss 
=ss 
passwordss #
;ss# $
}tt 	
{uu 	
stringvv 
passwordvv 
=vv 
passwordCopyvv *
;vv* +
tryww 
{xx 
usingzz 
(zz 
SqlConnectionzz $

connectionzz% /
=zz0 1
newzz2 5
SqlConnectionzz6 C
(zzC D
$strzzD z
+zz{ |
$str	zz} Å
+
zzÇ É
$str
zzÑ ê
+
zzë í
password
zzì õ
)
zzõ ú
)
zzú ù
{{{ 

connection|| 
.|| 
Open|| #
(||# $
)||$ %
;||% &
using}} 
(}} 

SqlCommand}} %
command}}& -
=}}. /
new}}0 3

SqlCommand}}4 >
(}}> ?
$str}}? Y
,}}Y Z

connection}}[ e
)}}e f
)}}f g
{~~ 
command 
.  
ExecuteNonQuery  /
(/ 0
)0 1
;1 2
}
ÄÄ 
}
ÅÅ 
}
ÇÇ 
catch
ÉÉ 
(
ÉÉ 
SqlException
ÉÉ 
	exceptSql
ÉÉ  )
)
ÉÉ) *
{
ÑÑ 
IO
ÖÖ 
.
ÖÖ 
Logger
ÖÖ 
.
ÖÖ 
Log
ÖÖ 
(
ÖÖ 
NLog
ÖÖ "
.
ÖÖ" #
LogLevel
ÖÖ# +
.
ÖÖ+ ,
Warn
ÖÖ, 0
,
ÖÖ0 1
$str
ÖÖ2 R
,
ÖÖR S
	exceptSql
ÖÖT ]
)
ÖÖ] ^
;
ÖÖ^ _
}
ÜÜ 
}
áá 	
}
àà 
private
ãã 
void
ãã 
GoodB2G
ãã 
(
ãã 
)
ãã 
{
åå 
string
çç 
passwordCopy
çç 
;
çç 
{
éé 	
string
èè 
password
èè 
;
èè 
password
êê 
=
êê 
$str
êê 
;
êê 
{
íí 
TcpListener
ìì 
listener
ìì $
=
ìì% &
null
ìì' +
;
ìì+ ,
try
îî 
{
ïï 
listener
óó 
=
óó 
new
óó "
TcpListener
óó# .
(
óó. /
	IPAddress
óó/ 8
.
óó8 9
Parse
óó9 >
(
óó> ?
$str
óó? K
)
óóK L
,
óóL M
$num
óóN S
)
óóS T
;
óóT U
listener
òò 
.
òò 
Start
òò "
(
òò" #
)
òò# $
;
òò$ %
using
ôô 
(
ôô 
	TcpClient
ôô $
tcpConn
ôô% ,
=
ôô- .
listener
ôô/ 7
.
ôô7 8
AcceptTcpClient
ôô8 G
(
ôôG H
)
ôôH I
)
ôôI J
{
öö 
using
õõ 
(
õõ 
StreamReader
õõ +
sr
õõ, .
=
õõ/ 0
new
õõ1 4
StreamReader
õõ5 A
(
õõA B
Console
õõB I
.
õõI J
OpenStandardInput
õõJ [
(
õõ[ \
)
õõ\ ]
)
õõ] ^
)
õõ^ _
{
úú 
password
ûû $
=
ûû% &
sr
ûû' )
.
ûû) *
ReadLine
ûû* 2
(
ûû2 3
)
ûû3 4
;
ûû4 5
}
üü 
}
†† 
}
°° 
catch
¢¢ 
(
¢¢ 
IOException
¢¢ "
exceptIO
¢¢# +
)
¢¢+ ,
{
££ 
IO
§§ 
.
§§ 
Logger
§§ 
.
§§ 
Log
§§ !
(
§§! "
NLog
§§" &
.
§§& '
LogLevel
§§' /
.
§§/ 0
Warn
§§0 4
,
§§4 5
$str
§§6 Q
,
§§Q R
exceptIO
§§S [
)
§§[ \
;
§§\ ]
}
•• 
finally
¶¶ 
{
ßß 
try
®® 
{
©© 
if
™™ 
(
™™ 
listener
™™ $
!=
™™% '
null
™™( ,
)
™™, -
{
´´ 
listener
¨¨ $
.
¨¨$ %
Stop
¨¨% )
(
¨¨) *
)
¨¨* +
;
¨¨+ ,
}
≠≠ 
}
ÆÆ 
catch
ØØ 
(
ØØ 
IOException
ØØ &
exceptIO
ØØ' /
)
ØØ/ 0
{
∞∞ 
IO
±± 
.
±± 
Logger
±± !
.
±±! "
Log
±±" %
(
±±% &
NLog
±±& *
.
±±* +
LogLevel
±±+ 3
.
±±3 4
Warn
±±4 8
,
±±8 9
$str
±±: U
,
±±U V
exceptIO
±±W _
)
±±_ `
;
±±` a
}
≤≤ 
}
≥≥ 
}
¥¥ 
passwordCopy
µµ 
=
µµ 
password
µµ #
;
µµ# $
}
∂∂ 	
{
∑∑ 	
string
∏∏ 
password
∏∏ 
=
∏∏ 
passwordCopy
∏∏ *
;
∏∏* +
if
ππ 
(
ππ 
password
ππ 
!=
ππ 
null
ππ  
)
ππ  !
{
∫∫ 
{
ºº 
using
ΩΩ 
(
ΩΩ &
AesCryptoServiceProvider
ΩΩ 3
aesAlg
ΩΩ4 :
=
ΩΩ; <
new
ΩΩ= @&
AesCryptoServiceProvider
ΩΩA Y
(
ΩΩY Z
)
ΩΩZ [
)
ΩΩ[ \
{
ææ 
aesAlg
øø 
.
øø 
Padding
øø &
=
øø' (
PaddingMode
øø) 4
.
øø4 5
None
øø5 9
;
øø9 :
aesAlg
¿¿ 
.
¿¿ 
Key
¿¿ "
=
¿¿# $
Encoding
¿¿% -
.
¿¿- .
UTF8
¿¿. 2
.
¿¿2 3
GetBytes
¿¿3 ;
(
¿¿; <
$str
¿¿< N
)
¿¿N O
;
¿¿O P
ICryptoTransform
¬¬ (
	decryptor
¬¬) 2
=
¬¬3 4
aesAlg
¬¬5 ;
.
¬¬; <
CreateDecryptor
¬¬< K
(
¬¬K L
aesAlg
¬¬L R
.
¬¬R S
Key
¬¬S V
,
¬¬V W
aesAlg
¬¬X ^
.
¬¬^ _
IV
¬¬_ a
)
¬¬a b
;
¬¬b c
using
ƒƒ 
(
ƒƒ 
MemoryStream
ƒƒ +
	msDecrypt
ƒƒ, 5
=
ƒƒ6 7
new
ƒƒ8 ;
MemoryStream
ƒƒ< H
(
ƒƒH I
Encoding
ƒƒI Q
.
ƒƒQ R
UTF8
ƒƒR V
.
ƒƒV W
GetBytes
ƒƒW _
(
ƒƒ_ `
password
ƒƒ` h
)
ƒƒh i
)
ƒƒi j
)
ƒƒj k
{
≈≈ 
using
∆∆ !
(
∆∆" #
CryptoStream
∆∆# /
	csDecrypt
∆∆0 9
=
∆∆: ;
new
∆∆< ?
CryptoStream
∆∆@ L
(
∆∆L M
	msDecrypt
∆∆M V
,
∆∆V W
	decryptor
∆∆X a
,
∆∆a b
CryptoStreamMode
∆∆c s
.
∆∆s t
Read
∆∆t x
)
∆∆x y
)
∆∆y z
{
«« 
using
»»  %
(
»»& '
StreamReader
»»' 3
	srDecrypt
»»4 =
=
»»> ?
new
»»@ C
StreamReader
»»D P
(
»»P Q
	csDecrypt
»»Q Z
)
»»Z [
)
»»[ \
{
……  !
password
ÃÃ$ ,
=
ÃÃ- .
	srDecrypt
ÃÃ/ 8
.
ÃÃ8 9
	ReadToEnd
ÃÃ9 B
(
ÃÃB C
)
ÃÃC D
;
ÃÃD E
}
ÕÕ  !
}
ŒŒ 
}
œœ 
}
–– 
}
—— 
try
““ 
{
”” 
using
’’ 
(
’’ 
SqlConnection
’’ (

connection
’’) 3
=
’’4 5
new
’’6 9
SqlConnection
’’: G
(
’’G H
$str
’’H ~
+’’ Ä
$str’’Å Ö
+’’Ü á
$str’’à î
+’’ï ñ
password’’ó ü
)’’ü †
)’’† °
{
÷÷ 

connection
◊◊ "
.
◊◊" #
Open
◊◊# '
(
◊◊' (
)
◊◊( )
;
◊◊) *
using
ÿÿ 
(
ÿÿ 

SqlCommand
ÿÿ )
command
ÿÿ* 1
=
ÿÿ2 3
new
ÿÿ4 7

SqlCommand
ÿÿ8 B
(
ÿÿB C
$str
ÿÿC ]
,
ÿÿ] ^

connection
ÿÿ_ i
)
ÿÿi j
)
ÿÿj k
{
ŸŸ 
command
⁄⁄ #
.
⁄⁄# $
ExecuteNonQuery
⁄⁄$ 3
(
⁄⁄3 4
)
⁄⁄4 5
;
⁄⁄5 6
}
€€ 
}
‹‹ 
}
›› 
catch
ﬁﬁ 
(
ﬁﬁ 
SqlException
ﬁﬁ #
	exceptSql
ﬁﬁ$ -
)
ﬁﬁ- .
{
ﬂﬂ 
IO
‡‡ 
.
‡‡ 
Logger
‡‡ 
.
‡‡ 
Log
‡‡ !
(
‡‡! "
NLog
‡‡" &
.
‡‡& '
LogLevel
‡‡' /
.
‡‡/ 0
Warn
‡‡0 4
,
‡‡4 5
$str
‡‡6 V
,
‡‡V W
	exceptSql
‡‡X a
)
‡‡a b
;
‡‡b c
}
·· 
}
‚‚ 
}
„„ 	
}
‰‰ 
}ÊÊ 
}ÁÁ √l
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_41.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_41 E
:F G
AbstractTestCaseH X
{   
private"" 
static"" 
void"" 
BadSink"" 
(""  
string""  &
password""' /
)""0 1
{## 
try$$ 
{%% 	
using'' 
('' 
SqlConnection''  

connection''! +
='', -
new''. 1
SqlConnection''2 ?
(''? @
$str''@ v
+''w x
$str''y }
+''~ 
$str
''Ä å
+
''ç é
password
''è ó
)
''ó ò
)
''ò ô
{(( 

connection)) 
.)) 
Open)) 
())  
)))  !
;))! "
using** 
(** 

SqlCommand** !
command**" )
=*** +
new**, /

SqlCommand**0 :
(**: ;
$str**; U
,**U V

connection**W a
)**a b
)**b c
{++ 
command,, 
.,, 
ExecuteNonQuery,, +
(,,+ ,
),,, -
;,,- .
}-- 
}.. 
}// 	
catch00 
(00 
SqlException00 
	exceptSql00 %
)00% &
{11 	
IO22 
.22 
Logger22 
.22 
Log22 
(22 
NLog22 
.22 
LogLevel22 '
.22' (
Warn22( ,
,22, -
$str22. N
,22N O
	exceptSql22P Y
)22Y Z
;22Z [
}33 	
}44 
public66 

override66 
void66 
Bad66 
(66 
)66 
{77 
string88 
password88 
;88 
password99 
=99 
$str99 
;99 
{;; 	
TcpListener<< 
listener<<  
=<<! "
null<<# '
;<<' (
try== 
{>> 
listener@@ 
=@@ 
new@@ 
TcpListener@@ *
(@@* +
	IPAddress@@+ 4
.@@4 5
Parse@@5 :
(@@: ;
$str@@; G
)@@G H
,@@H I
$num@@J O
)@@O P
;@@P Q
listenerAA 
.AA 
StartAA 
(AA 
)AA  
;AA  !
usingBB 
(BB 
	TcpClientBB  
tcpConnBB! (
=BB) *
listenerBB+ 3
.BB3 4
AcceptTcpClientBB4 C
(BBC D
)BBD E
)BBE F
{CC 
usingDD 
(DD 
StreamReaderDD '
srDD( *
=DD+ ,
newDD- 0
StreamReaderDD1 =
(DD= >
ConsoleDD> E
.DDE F
OpenStandardInputDDF W
(DDW X
)DDX Y
)DDY Z
)DDZ [
{EE 
passwordGG  
=GG! "
srGG# %
.GG% &
ReadLineGG& .
(GG. /
)GG/ 0
;GG0 1
}HH 
}II 
}JJ 
catchKK 
(KK 
IOExceptionKK 
exceptIOKK '
)KK' (
{LL 
IOMM 
.MM 
LoggerMM 
.MM 
LogMM 
(MM 
NLogMM "
.MM" #
LogLevelMM# +
.MM+ ,
WarnMM, 0
,MM0 1
$strMM2 M
,MMM N
exceptIOMMO W
)MMW X
;MMX Y
}NN 
finallyOO 
{PP 
tryQQ 
{RR 
ifSS 
(SS 
listenerSS  
!=SS! #
nullSS$ (
)SS( )
{TT 
listenerUU  
.UU  !
StopUU! %
(UU% &
)UU& '
;UU' (
}VV 
}WW 
catchXX 
(XX 
IOExceptionXX "
exceptIOXX# +
)XX+ ,
{YY 
IOZZ 
.ZZ 
LoggerZZ 
.ZZ 
LogZZ !
(ZZ! "
NLogZZ" &
.ZZ& '
LogLevelZZ' /
.ZZ/ 0
WarnZZ0 4
,ZZ4 5
$strZZ6 Q
,ZZQ R
exceptIOZZS [
)ZZ[ \
;ZZ\ ]
}[[ 
}\\ 
}]] 	
BadSink^^ 
(^^ 
password^^ 
)^^ 
;^^ 
}__ 
publicbb 

overridebb 
voidbb 
Goodbb 
(bb 
)bb 
{cc 
GoodG2Bdd 
(dd 
)dd 
;dd 
GoodB2Gee 
(ee 
)ee 
;ee 
}ff 
privatehh 
statichh 
voidhh 
GoodG2BSinkhh #
(hh# $
stringhh$ *
passwordhh+ 3
)hh4 5
{ii 
tryjj 
{kk 	
usingmm 
(mm 
SqlConnectionmm  

connectionmm! +
=mm, -
newmm. 1
SqlConnectionmm2 ?
(mm? @
$strmm@ v
+mmw x
$strmmy }
+mm~ 
$str
mmÄ å
+
mmç é
password
mmè ó
)
mmó ò
)
mmò ô
{nn 

connectionoo 
.oo 
Openoo 
(oo  
)oo  !
;oo! "
usingpp 
(pp 

SqlCommandpp !
commandpp" )
=pp* +
newpp, /

SqlCommandpp0 :
(pp: ;
$strpp; U
,ppU V

connectionppW a
)ppa b
)ppb c
{qq 
commandrr 
.rr 
ExecuteNonQueryrr +
(rr+ ,
)rr, -
;rr- .
}ss 
}tt 
}uu 	
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv %
)vv% &
{ww 	
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx 
.xx 
LogLevelxx '
.xx' (
Warnxx( ,
,xx, -
$strxx. N
,xxN O
	exceptSqlxxP Y
)xxY Z
;xxZ [
}yy 	
}zz 
private}} 
static}} 
void}} 
GoodG2B}} 
(}}  
)}}  !
{~~ 
string 
password 
; 
password
ÇÇ 
=
ÇÇ 
$str
ÇÇ "
;
ÇÇ" #
GoodG2BSink
ÉÉ 
(
ÉÉ 
password
ÉÉ 
)
ÉÉ 
;
ÉÉ  
}
ÑÑ 
private
ÜÜ 
static
ÜÜ 
void
ÜÜ 
GoodB2GSink
ÜÜ #
(
ÜÜ# $
string
ÜÜ$ *
password
ÜÜ+ 3
)
ÜÜ4 5
{
áá 
if
àà 

(
àà 
password
àà 
!=
àà 
null
àà 
)
àà 
{
ââ 	
{
ãã 
using
åå 
(
åå &
AesCryptoServiceProvider
åå /
aesAlg
åå0 6
=
åå7 8
new
åå9 <&
AesCryptoServiceProvider
åå= U
(
ååU V
)
ååV W
)
ååW X
{
çç 
aesAlg
éé 
.
éé 
Padding
éé "
=
éé# $
PaddingMode
éé% 0
.
éé0 1
None
éé1 5
;
éé5 6
aesAlg
èè 
.
èè 
Key
èè 
=
èè  
Encoding
èè! )
.
èè) *
UTF8
èè* .
.
èè. /
GetBytes
èè/ 7
(
èè7 8
$str
èè8 J
)
èèJ K
;
èèK L
ICryptoTransform
ëë $
	decryptor
ëë% .
=
ëë/ 0
aesAlg
ëë1 7
.
ëë7 8
CreateDecryptor
ëë8 G
(
ëëG H
aesAlg
ëëH N
.
ëëN O
Key
ëëO R
,
ëëR S
aesAlg
ëëT Z
.
ëëZ [
IV
ëë[ ]
)
ëë] ^
;
ëë^ _
using
ìì 
(
ìì 
MemoryStream
ìì '
	msDecrypt
ìì( 1
=
ìì2 3
new
ìì4 7
MemoryStream
ìì8 D
(
ììD E
Encoding
ììE M
.
ììM N
UTF8
ììN R
.
ììR S
GetBytes
ììS [
(
ìì[ \
password
ìì\ d
)
ììd e
)
ììe f
)
ììf g
{
îî 
using
ïï 
(
ïï 
CryptoStream
ïï +
	csDecrypt
ïï, 5
=
ïï6 7
new
ïï8 ;
CryptoStream
ïï< H
(
ïïH I
	msDecrypt
ïïI R
,
ïïR S
	decryptor
ïïT ]
,
ïï] ^
CryptoStreamMode
ïï_ o
.
ïïo p
Read
ïïp t
)
ïït u
)
ïïu v
{
ññ 
using
óó !
(
óó" #
StreamReader
óó# /
	srDecrypt
óó0 9
=
óó: ;
new
óó< ?
StreamReader
óó@ L
(
óóL M
	csDecrypt
óóM V
)
óóV W
)
óóW X
{
òò 
password
õõ  (
=
õõ) *
	srDecrypt
õõ+ 4
.
õõ4 5
	ReadToEnd
õõ5 >
(
õõ> ?
)
õõ? @
;
õõ@ A
}
úú 
}
ùù 
}
ûû 
}
üü 
}
†† 
try
°° 
{
¢¢ 
using
§§ 
(
§§ 
SqlConnection
§§ $

connection
§§% /
=
§§0 1
new
§§2 5
SqlConnection
§§6 C
(
§§C D
$str
§§D z
+
§§{ |
$str§§} Å
+§§Ç É
$str§§Ñ ê
+§§ë í
password§§ì õ
)§§õ ú
)§§ú ù
{
•• 

connection
¶¶ 
.
¶¶ 
Open
¶¶ #
(
¶¶# $
)
¶¶$ %
;
¶¶% &
using
ßß 
(
ßß 

SqlCommand
ßß %
command
ßß& -
=
ßß. /
new
ßß0 3

SqlCommand
ßß4 >
(
ßß> ?
$str
ßß? Y
,
ßßY Z

connection
ßß[ e
)
ßße f
)
ßßf g
{
®® 
command
©© 
.
©©  
ExecuteNonQuery
©©  /
(
©©/ 0
)
©©0 1
;
©©1 2
}
™™ 
}
´´ 
}
¨¨ 
catch
≠≠ 
(
≠≠ 
SqlException
≠≠ 
	exceptSql
≠≠  )
)
≠≠) *
{
ÆÆ 
IO
ØØ 
.
ØØ 
Logger
ØØ 
.
ØØ 
Log
ØØ 
(
ØØ 
NLog
ØØ "
.
ØØ" #
LogLevel
ØØ# +
.
ØØ+ ,
Warn
ØØ, 0
,
ØØ0 1
$str
ØØ2 R
,
ØØR S
	exceptSql
ØØT ]
)
ØØ] ^
;
ØØ^ _
}
∞∞ 
}
±± 	
}
≤≤ 
private
µµ 
static
µµ 
void
µµ 
GoodB2G
µµ 
(
µµ  
)
µµ  !
{
∂∂ 
string
∑∑ 
password
∑∑ 
;
∑∑ 
password
∏∏ 
=
∏∏ 
$str
∏∏ 
;
∏∏ 
{
∫∫ 	
TcpListener
ªª 
listener
ªª  
=
ªª! "
null
ªª# '
;
ªª' (
try
ºº 
{
ΩΩ 
listener
øø 
=
øø 
new
øø 
TcpListener
øø *
(
øø* +
	IPAddress
øø+ 4
.
øø4 5
Parse
øø5 :
(
øø: ;
$str
øø; G
)
øøG H
,
øøH I
$num
øøJ O
)
øøO P
;
øøP Q
listener
¿¿ 
.
¿¿ 
Start
¿¿ 
(
¿¿ 
)
¿¿  
;
¿¿  !
using
¡¡ 
(
¡¡ 
	TcpClient
¡¡  
tcpConn
¡¡! (
=
¡¡) *
listener
¡¡+ 3
.
¡¡3 4
AcceptTcpClient
¡¡4 C
(
¡¡C D
)
¡¡D E
)
¡¡E F
{
¬¬ 
using
√√ 
(
√√ 
StreamReader
√√ '
sr
√√( *
=
√√+ ,
new
√√- 0
StreamReader
√√1 =
(
√√= >
Console
√√> E
.
√√E F
OpenStandardInput
√√F W
(
√√W X
)
√√X Y
)
√√Y Z
)
√√Z [
{
ƒƒ 
password
∆∆  
=
∆∆! "
sr
∆∆# %
.
∆∆% &
ReadLine
∆∆& .
(
∆∆. /
)
∆∆/ 0
;
∆∆0 1
}
«« 
}
»» 
}
…… 
catch
   
(
   
IOException
   
exceptIO
   '
)
  ' (
{
ÀÀ 
IO
ÃÃ 
.
ÃÃ 
Logger
ÃÃ 
.
ÃÃ 
Log
ÃÃ 
(
ÃÃ 
NLog
ÃÃ "
.
ÃÃ" #
LogLevel
ÃÃ# +
.
ÃÃ+ ,
Warn
ÃÃ, 0
,
ÃÃ0 1
$str
ÃÃ2 M
,
ÃÃM N
exceptIO
ÃÃO W
)
ÃÃW X
;
ÃÃX Y
}
ÕÕ 
finally
ŒŒ 
{
œœ 
try
–– 
{
—— 
if
““ 
(
““ 
listener
““  
!=
““! #
null
““$ (
)
““( )
{
”” 
listener
‘‘  
.
‘‘  !
Stop
‘‘! %
(
‘‘% &
)
‘‘& '
;
‘‘' (
}
’’ 
}
÷÷ 
catch
◊◊ 
(
◊◊ 
IOException
◊◊ "
exceptIO
◊◊# +
)
◊◊+ ,
{
ÿÿ 
IO
ŸŸ 
.
ŸŸ 
Logger
ŸŸ 
.
ŸŸ 
Log
ŸŸ !
(
ŸŸ! "
NLog
ŸŸ" &
.
ŸŸ& '
LogLevel
ŸŸ' /
.
ŸŸ/ 0
Warn
ŸŸ0 4
,
ŸŸ4 5
$str
ŸŸ6 Q
,
ŸŸQ R
exceptIO
ŸŸS [
)
ŸŸ[ \
;
ŸŸ\ ]
}
⁄⁄ 
}
€€ 
}
‹‹ 	
GoodB2GSink
›› 
(
›› 
password
›› 
)
›› 
;
››  
}
ﬁﬁ 
}‡‡ 
}·· ˇm
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_42.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_42 E
:F G
AbstractTestCaseH X
{   
private"" 
static"" 
string"" 
	BadSource"" #
(""# $
)""$ %
{## 
string$$ 
password$$ 
;$$ 
password%% 
=%% 
$str%% 
;%% 
{'' 	
TcpListener(( 
listener((  
=((! "
null((# '
;((' (
try)) 
{** 
listener,, 
=,, 
new,, 
TcpListener,, *
(,,* +
	IPAddress,,+ 4
.,,4 5
Parse,,5 :
(,,: ;
$str,,; G
),,G H
,,,H I
$num,,J O
),,O P
;,,P Q
listener-- 
.-- 
Start-- 
(-- 
)--  
;--  !
using.. 
(.. 
	TcpClient..  
tcpConn..! (
=..) *
listener..+ 3
...3 4
AcceptTcpClient..4 C
(..C D
)..D E
)..E F
{// 
using00 
(00 
StreamReader00 '
sr00( *
=00+ ,
new00- 0
StreamReader001 =
(00= >
Console00> E
.00E F
OpenStandardInput00F W
(00W X
)00X Y
)00Y Z
)00Z [
{11 
password33  
=33! "
sr33# %
.33% &
ReadLine33& .
(33. /
)33/ 0
;330 1
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
$str992 M
,99M N
exceptIO99O W
)99W X
;99X Y
}:: 
finally;; 
{<< 
try== 
{>> 
if?? 
(?? 
listener??  
!=??! #
null??$ (
)??( )
{@@ 
listenerAA  
.AA  !
StopAA! %
(AA% &
)AA& '
;AA' (
}BB 
}CC 
catchDD 
(DD 
IOExceptionDD "
exceptIODD# +
)DD+ ,
{EE 
IOFF 
.FF 
LoggerFF 
.FF 
LogFF !
(FF! "
NLogFF" &
.FF& '
LogLevelFF' /
.FF/ 0
WarnFF0 4
,FF4 5
$strFF6 Q
,FFQ R
exceptIOFFS [
)FF[ \
;FF\ ]
}GG 
}HH 
}II 	
returnJJ 
passwordJJ 
;JJ 
}KK 
publicMM 

overrideMM 
voidMM 
BadMM 
(MM 
)MM 
{NN 
stringOO 
passwordOO 
=OO 
	BadSourceOO #
(OO# $
)OO$ %
;OO% &
tryPP 
{QQ 	
usingSS 
(SS 
SqlConnectionSS  

connectionSS! +
=SS, -
newSS. 1
SqlConnectionSS2 ?
(SS? @
$strSS@ v
+SSw x
$strSSy }
+SS~ 
$str
SSÄ å
+
SSç é
password
SSè ó
)
SSó ò
)
SSò ô
{TT 

connectionUU 
.UU 
OpenUU 
(UU  
)UU  !
;UU! "
usingVV 
(VV 

SqlCommandVV !
commandVV" )
=VV* +
newVV, /

SqlCommandVV0 :
(VV: ;
$strVV; U
,VVU V

connectionVVW a
)VVa b
)VVb c
{WW 
commandXX 
.XX 
ExecuteNonQueryXX +
(XX+ ,
)XX, -
;XX- .
}YY 
}ZZ 
}[[ 	
catch\\ 
(\\ 
SqlException\\ 
	exceptSql\\ %
)\\% &
{]] 	
IO^^ 
.^^ 
Logger^^ 
.^^ 
Log^^ 
(^^ 
NLog^^ 
.^^ 
LogLevel^^ '
.^^' (
Warn^^( ,
,^^, -
$str^^. N
,^^N O
	exceptSql^^P Y
)^^Y Z
;^^Z [
}__ 	
}`` 
privatedd 
staticdd 
stringdd 
GoodG2BSourcedd '
(dd' (
)dd( )
{ee 
stringff 
passwordff 
;ff 
passwordii 
=ii 
$strii "
;ii" #
returnjj 
passwordjj 
;jj 
}kk 
privatemm 
staticmm 
voidmm 
GoodG2Bmm 
(mm  
)mm  !
{nn 
stringoo 
passwordoo 
=oo 
GoodG2BSourceoo '
(oo' (
)oo( )
;oo) *
trypp 
{qq 	
usingss 
(ss 
SqlConnectionss  

connectionss! +
=ss, -
newss. 1
SqlConnectionss2 ?
(ss? @
$strss@ v
+ssw x
$strssy }
+ss~ 
$str
ssÄ å
+
ssç é
password
ssè ó
)
ssó ò
)
ssò ô
{tt 

connectionuu 
.uu 
Openuu 
(uu  
)uu  !
;uu! "
usingvv 
(vv 

SqlCommandvv !
commandvv" )
=vv* +
newvv, /

SqlCommandvv0 :
(vv: ;
$strvv; U
,vvU V

connectionvvW a
)vva b
)vvb c
{ww 
commandxx 
.xx 
ExecuteNonQueryxx +
(xx+ ,
)xx, -
;xx- .
}yy 
}zz 
}{{ 	
catch|| 
(|| 
SqlException|| 
	exceptSql|| %
)||% &
{}} 	
IO~~ 
.~~ 
Logger~~ 
.~~ 
Log~~ 
(~~ 
NLog~~ 
.~~ 
LogLevel~~ '
.~~' (
Warn~~( ,
,~~, -
$str~~. N
,~~N O
	exceptSql~~P Y
)~~Y Z
;~~Z [
} 	
}
ÄÄ 
private
ÉÉ 
static
ÉÉ 
string
ÉÉ 
GoodB2GSource
ÉÉ '
(
ÉÉ' (
)
ÉÉ( )
{
ÑÑ 
string
ÖÖ 
password
ÖÖ 
;
ÖÖ 
password
ÜÜ 
=
ÜÜ 
$str
ÜÜ 
;
ÜÜ 
{
àà 	
TcpListener
ââ 
listener
ââ  
=
ââ! "
null
ââ# '
;
ââ' (
try
ää 
{
ãã 
listener
çç 
=
çç 
new
çç 
TcpListener
çç *
(
çç* +
	IPAddress
çç+ 4
.
çç4 5
Parse
çç5 :
(
çç: ;
$str
çç; G
)
ççG H
,
ççH I
$num
ççJ O
)
ççO P
;
ççP Q
listener
éé 
.
éé 
Start
éé 
(
éé 
)
éé  
;
éé  !
using
èè 
(
èè 
	TcpClient
èè  
tcpConn
èè! (
=
èè) *
listener
èè+ 3
.
èè3 4
AcceptTcpClient
èè4 C
(
èèC D
)
èèD E
)
èèE F
{
êê 
using
ëë 
(
ëë 
StreamReader
ëë '
sr
ëë( *
=
ëë+ ,
new
ëë- 0
StreamReader
ëë1 =
(
ëë= >
Console
ëë> E
.
ëëE F
OpenStandardInput
ëëF W
(
ëëW X
)
ëëX Y
)
ëëY Z
)
ëëZ [
{
íí 
password
îî  
=
îî! "
sr
îî# %
.
îî% &
ReadLine
îî& .
(
îî. /
)
îî/ 0
;
îî0 1
}
ïï 
}
ññ 
}
óó 
catch
òò 
(
òò 
IOException
òò 
exceptIO
òò '
)
òò' (
{
ôô 
IO
öö 
.
öö 
Logger
öö 
.
öö 
Log
öö 
(
öö 
NLog
öö "
.
öö" #
LogLevel
öö# +
.
öö+ ,
Warn
öö, 0
,
öö0 1
$str
öö2 M
,
ööM N
exceptIO
ööO W
)
ööW X
;
ööX Y
}
õõ 
finally
úú 
{
ùù 
try
ûû 
{
üü 
if
†† 
(
†† 
listener
††  
!=
††! #
null
††$ (
)
††( )
{
°° 
listener
¢¢  
.
¢¢  !
Stop
¢¢! %
(
¢¢% &
)
¢¢& '
;
¢¢' (
}
££ 
}
§§ 
catch
•• 
(
•• 
IOException
•• "
exceptIO
••# +
)
••+ ,
{
¶¶ 
IO
ßß 
.
ßß 
Logger
ßß 
.
ßß 
Log
ßß !
(
ßß! "
NLog
ßß" &
.
ßß& '
LogLevel
ßß' /
.
ßß/ 0
Warn
ßß0 4
,
ßß4 5
$str
ßß6 Q
,
ßßQ R
exceptIO
ßßS [
)
ßß[ \
;
ßß\ ]
}
®® 
}
©© 
}
™™ 	
return
´´ 
password
´´ 
;
´´ 
}
¨¨ 
private
ÆÆ 
static
ÆÆ 
void
ÆÆ 
GoodB2G
ÆÆ 
(
ÆÆ  
)
ÆÆ  !
{
ØØ 
string
∞∞ 
password
∞∞ 
=
∞∞ 
GoodB2GSource
∞∞ '
(
∞∞' (
)
∞∞( )
;
∞∞) *
if
±± 

(
±± 
password
±± 
!=
±± 
null
±± 
)
±± 
{
≤≤ 	
{
¥¥ 
using
µµ 
(
µµ &
AesCryptoServiceProvider
µµ /
aesAlg
µµ0 6
=
µµ7 8
new
µµ9 <&
AesCryptoServiceProvider
µµ= U
(
µµU V
)
µµV W
)
µµW X
{
∂∂ 
aesAlg
∑∑ 
.
∑∑ 
Padding
∑∑ "
=
∑∑# $
PaddingMode
∑∑% 0
.
∑∑0 1
None
∑∑1 5
;
∑∑5 6
aesAlg
∏∏ 
.
∏∏ 
Key
∏∏ 
=
∏∏  
Encoding
∏∏! )
.
∏∏) *
UTF8
∏∏* .
.
∏∏. /
GetBytes
∏∏/ 7
(
∏∏7 8
$str
∏∏8 J
)
∏∏J K
;
∏∏K L
ICryptoTransform
∫∫ $
	decryptor
∫∫% .
=
∫∫/ 0
aesAlg
∫∫1 7
.
∫∫7 8
CreateDecryptor
∫∫8 G
(
∫∫G H
aesAlg
∫∫H N
.
∫∫N O
Key
∫∫O R
,
∫∫R S
aesAlg
∫∫T Z
.
∫∫Z [
IV
∫∫[ ]
)
∫∫] ^
;
∫∫^ _
using
ºº 
(
ºº 
MemoryStream
ºº '
	msDecrypt
ºº( 1
=
ºº2 3
new
ºº4 7
MemoryStream
ºº8 D
(
ººD E
Encoding
ººE M
.
ººM N
UTF8
ººN R
.
ººR S
GetBytes
ººS [
(
ºº[ \
password
ºº\ d
)
ººd e
)
ººe f
)
ººf g
{
ΩΩ 
using
ææ 
(
ææ 
CryptoStream
ææ +
	csDecrypt
ææ, 5
=
ææ6 7
new
ææ8 ;
CryptoStream
ææ< H
(
ææH I
	msDecrypt
ææI R
,
ææR S
	decryptor
ææT ]
,
ææ] ^
CryptoStreamMode
ææ_ o
.
ææo p
Read
ææp t
)
ææt u
)
ææu v
{
øø 
using
¿¿ !
(
¿¿" #
StreamReader
¿¿# /
	srDecrypt
¿¿0 9
=
¿¿: ;
new
¿¿< ?
StreamReader
¿¿@ L
(
¿¿L M
	csDecrypt
¿¿M V
)
¿¿V W
)
¿¿W X
{
¡¡ 
password
ƒƒ  (
=
ƒƒ) *
	srDecrypt
ƒƒ+ 4
.
ƒƒ4 5
	ReadToEnd
ƒƒ5 >
(
ƒƒ> ?
)
ƒƒ? @
;
ƒƒ@ A
}
≈≈ 
}
∆∆ 
}
«« 
}
»» 
}
…… 
try
   
{
ÀÀ 
using
ÕÕ 
(
ÕÕ 
SqlConnection
ÕÕ $

connection
ÕÕ% /
=
ÕÕ0 1
new
ÕÕ2 5
SqlConnection
ÕÕ6 C
(
ÕÕC D
$str
ÕÕD z
+
ÕÕ{ |
$strÕÕ} Å
+ÕÕÇ É
$strÕÕÑ ê
+ÕÕë í
passwordÕÕì õ
)ÕÕõ ú
)ÕÕú ù
{
ŒŒ 

connection
œœ 
.
œœ 
Open
œœ #
(
œœ# $
)
œœ$ %
;
œœ% &
using
–– 
(
–– 

SqlCommand
–– %
command
––& -
=
––. /
new
––0 3

SqlCommand
––4 >
(
––> ?
$str
––? Y
,
––Y Z

connection
––[ e
)
––e f
)
––f g
{
—— 
command
““ 
.
““  
ExecuteNonQuery
““  /
(
““/ 0
)
““0 1
;
““1 2
}
”” 
}
‘‘ 
}
’’ 
catch
÷÷ 
(
÷÷ 
SqlException
÷÷ 
	exceptSql
÷÷  )
)
÷÷) *
{
◊◊ 
IO
ÿÿ 
.
ÿÿ 
Logger
ÿÿ 
.
ÿÿ 
Log
ÿÿ 
(
ÿÿ 
NLog
ÿÿ "
.
ÿÿ" #
LogLevel
ÿÿ# +
.
ÿÿ+ ,
Warn
ÿÿ, 0
,
ÿÿ0 1
$str
ÿÿ2 R
,
ÿÿR S
	exceptSql
ÿÿT ]
)
ÿÿ] ^
;
ÿÿ^ _
}
ŸŸ 
}
⁄⁄ 	
}
€€ 
public
›› 

override
›› 
void
›› 
Good
›› 
(
›› 
)
›› 
{
ﬁﬁ 
GoodG2B
ﬂﬂ 
(
ﬂﬂ 
)
ﬂﬂ 
;
ﬂﬂ 
GoodB2G
‡‡ 
(
‡‡ 
)
‡‡ 
;
‡‡ 
}
·· 
}„„ 
}‰‰ ÿp
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_45.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_45 E
:F G
AbstractTestCaseH X
{   
private"" 
string"" 
passwordBad"" 
;"" 
private## 
string## 
passwordGoodG2B## "
;##" #
private$$ 
string$$ 
passwordGoodB2G$$ "
;$$" #
private&& 
void&& 
BadSink&& 
(&& 
)&& 
{'' 
string(( 
password(( 
=(( 
passwordBad(( %
;((% &
try)) 
{** 	
using,, 
(,, 
SqlConnection,,  

connection,,! +
=,,, -
new,,. 1
SqlConnection,,2 ?
(,,? @
$str,,@ v
+,,w x
$str,,y }
+,,~ 
$str
,,Ä å
+
,,ç é
password
,,è ó
)
,,ó ò
)
,,ò ô
{-- 

connection.. 
... 
Open.. 
(..  
)..  !
;..! "
using// 
(// 

SqlCommand// !
command//" )
=//* +
new//, /

SqlCommand//0 :
(//: ;
$str//; U
,//U V

connection//W a
)//a b
)//b c
{00 
command11 
.11 
ExecuteNonQuery11 +
(11+ ,
)11, -
;11- .
}22 
}33 
}44 	
catch55 
(55 
SqlException55 
	exceptSql55 %
)55% &
{66 	
IO77 
.77 
Logger77 
.77 
Log77 
(77 
NLog77 
.77 
LogLevel77 '
.77' (
Warn77( ,
,77, -
$str77. N
,77N O
	exceptSql77P Y
)77Y Z
;77Z [
}88 	
}99 
public;; 

override;; 
void;; 
Bad;; 
(;; 
);; 
{<< 
string== 
password== 
;== 
password>> 
=>> 
$str>> 
;>> 
{@@ 	
TcpListenerAA 
listenerAA  
=AA! "
nullAA# '
;AA' (
tryBB 
{CC 
listenerEE 
=EE 
newEE 
TcpListenerEE *
(EE* +
	IPAddressEE+ 4
.EE4 5
ParseEE5 :
(EE: ;
$strEE; G
)EEG H
,EEH I
$numEEJ O
)EEO P
;EEP Q
listenerFF 
.FF 
StartFF 
(FF 
)FF  
;FF  !
usingGG 
(GG 
	TcpClientGG  
tcpConnGG! (
=GG) *
listenerGG+ 3
.GG3 4
AcceptTcpClientGG4 C
(GGC D
)GGD E
)GGE F
{HH 
usingII 
(II 
StreamReaderII '
srII( *
=II+ ,
newII- 0
StreamReaderII1 =
(II= >
ConsoleII> E
.IIE F
OpenStandardInputIIF W
(IIW X
)IIX Y
)IIY Z
)IIZ [
{JJ 
passwordLL  
=LL! "
srLL# %
.LL% &
ReadLineLL& .
(LL. /
)LL/ 0
;LL0 1
}MM 
}NN 
}OO 
catchPP 
(PP 
IOExceptionPP 
exceptIOPP '
)PP' (
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR 
(RR 
NLogRR "
.RR" #
LogLevelRR# +
.RR+ ,
WarnRR, 0
,RR0 1
$strRR2 M
,RRM N
exceptIORRO W
)RRW X
;RRX Y
}SS 
finallyTT 
{UU 
tryVV 
{WW 
ifXX 
(XX 
listenerXX  
!=XX! #
nullXX$ (
)XX( )
{YY 
listenerZZ  
.ZZ  !
StopZZ! %
(ZZ% &
)ZZ& '
;ZZ' (
}[[ 
}\\ 
catch]] 
(]] 
IOException]] "
exceptIO]]# +
)]]+ ,
{^^ 
IO__ 
.__ 
Logger__ 
.__ 
Log__ !
(__! "
NLog__" &
.__& '
LogLevel__' /
.__/ 0
Warn__0 4
,__4 5
$str__6 Q
,__Q R
exceptIO__S [
)__[ \
;__\ ]
}`` 
}aa 
}bb 	
passwordBadcc 
=cc 
passwordcc 
;cc 
BadSinkdd 
(dd 
)dd 
;dd 
}ee 
publichh 

overridehh 
voidhh 
Goodhh 
(hh 
)hh 
{ii 
GoodG2Bjj 
(jj 
)jj 
;jj 
GoodB2Gkk 
(kk 
)kk 
;kk 
}ll 
privatenn 
voidnn 
GoodG2BSinknn 
(nn 
)nn 
{oo 
stringpp 
passwordpp 
=pp 
passwordGoodG2Bpp )
;pp) *
tryqq 
{rr 	
usingtt 
(tt 
SqlConnectiontt  

connectiontt! +
=tt, -
newtt. 1
SqlConnectiontt2 ?
(tt? @
$strtt@ v
+ttw x
$strtty }
+tt~ 
$str
ttÄ å
+
ttç é
password
ttè ó
)
ttó ò
)
ttò ô
{uu 

connectionvv 
.vv 
Openvv 
(vv  
)vv  !
;vv! "
usingww 
(ww 

SqlCommandww !
commandww" )
=ww* +
newww, /

SqlCommandww0 :
(ww: ;
$strww; U
,wwU V

connectionwwW a
)wwa b
)wwb c
{xx 
commandyy 
.yy 
ExecuteNonQueryyy +
(yy+ ,
)yy, -
;yy- .
}zz 
}{{ 
}|| 	
catch}} 
(}} 
SqlException}} 
	exceptSql}} %
)}}% &
{~~ 	
IO 
. 
Logger 
. 
Log 
( 
NLog 
. 
LogLevel '
.' (
Warn( ,
,, -
$str. N
,N O
	exceptSqlP Y
)Y Z
;Z [
}
ÄÄ 	
}
ÅÅ 
private
ÑÑ 
void
ÑÑ 
GoodG2B
ÑÑ 
(
ÑÑ 
)
ÑÑ 
{
ÖÖ 
string
ÜÜ 
password
ÜÜ 
;
ÜÜ 
password
ââ 
=
ââ 
$str
ââ "
;
ââ" #
passwordGoodG2B
ää 
=
ää 
password
ää "
;
ää" #
GoodG2BSink
ãã 
(
ãã 
)
ãã 
;
ãã 
}
åå 
private
éé 
void
éé 
GoodB2GSink
éé 
(
éé 
)
éé 
{
èè 
string
êê 
password
êê 
=
êê 
passwordGoodB2G
êê )
;
êê) *
if
ëë 

(
ëë 
password
ëë 
!=
ëë 
null
ëë 
)
ëë 
{
íí 	
{
îî 
using
ïï 
(
ïï &
AesCryptoServiceProvider
ïï /
aesAlg
ïï0 6
=
ïï7 8
new
ïï9 <&
AesCryptoServiceProvider
ïï= U
(
ïïU V
)
ïïV W
)
ïïW X
{
ññ 
aesAlg
óó 
.
óó 
Padding
óó "
=
óó# $
PaddingMode
óó% 0
.
óó0 1
None
óó1 5
;
óó5 6
aesAlg
òò 
.
òò 
Key
òò 
=
òò  
Encoding
òò! )
.
òò) *
UTF8
òò* .
.
òò. /
GetBytes
òò/ 7
(
òò7 8
$str
òò8 J
)
òòJ K
;
òòK L
ICryptoTransform
öö $
	decryptor
öö% .
=
öö/ 0
aesAlg
öö1 7
.
öö7 8
CreateDecryptor
öö8 G
(
ööG H
aesAlg
ööH N
.
ööN O
Key
ööO R
,
ööR S
aesAlg
ööT Z
.
ööZ [
IV
öö[ ]
)
öö] ^
;
öö^ _
using
úú 
(
úú 
MemoryStream
úú '
	msDecrypt
úú( 1
=
úú2 3
new
úú4 7
MemoryStream
úú8 D
(
úúD E
Encoding
úúE M
.
úúM N
UTF8
úúN R
.
úúR S
GetBytes
úúS [
(
úú[ \
password
úú\ d
)
úúd e
)
úúe f
)
úúf g
{
ùù 
using
ûû 
(
ûû 
CryptoStream
ûû +
	csDecrypt
ûû, 5
=
ûû6 7
new
ûû8 ;
CryptoStream
ûû< H
(
ûûH I
	msDecrypt
ûûI R
,
ûûR S
	decryptor
ûûT ]
,
ûû] ^
CryptoStreamMode
ûû_ o
.
ûûo p
Read
ûûp t
)
ûût u
)
ûûu v
{
üü 
using
†† !
(
††" #
StreamReader
††# /
	srDecrypt
††0 9
=
††: ;
new
††< ?
StreamReader
††@ L
(
††L M
	csDecrypt
††M V
)
††V W
)
††W X
{
°° 
password
§§  (
=
§§) *
	srDecrypt
§§+ 4
.
§§4 5
	ReadToEnd
§§5 >
(
§§> ?
)
§§? @
;
§§@ A
}
•• 
}
¶¶ 
}
ßß 
}
®® 
}
©© 
try
™™ 
{
´´ 
using
≠≠ 
(
≠≠ 
SqlConnection
≠≠ $

connection
≠≠% /
=
≠≠0 1
new
≠≠2 5
SqlConnection
≠≠6 C
(
≠≠C D
$str
≠≠D z
+
≠≠{ |
$str≠≠} Å
+≠≠Ç É
$str≠≠Ñ ê
+≠≠ë í
password≠≠ì õ
)≠≠õ ú
)≠≠ú ù
{
ÆÆ 

connection
ØØ 
.
ØØ 
Open
ØØ #
(
ØØ# $
)
ØØ$ %
;
ØØ% &
using
∞∞ 
(
∞∞ 

SqlCommand
∞∞ %
command
∞∞& -
=
∞∞. /
new
∞∞0 3

SqlCommand
∞∞4 >
(
∞∞> ?
$str
∞∞? Y
,
∞∞Y Z

connection
∞∞[ e
)
∞∞e f
)
∞∞f g
{
±± 
command
≤≤ 
.
≤≤  
ExecuteNonQuery
≤≤  /
(
≤≤/ 0
)
≤≤0 1
;
≤≤1 2
}
≥≥ 
}
¥¥ 
}
µµ 
catch
∂∂ 
(
∂∂ 
SqlException
∂∂ 
	exceptSql
∂∂  )
)
∂∂) *
{
∑∑ 
IO
∏∏ 
.
∏∏ 
Logger
∏∏ 
.
∏∏ 
Log
∏∏ 
(
∏∏ 
NLog
∏∏ "
.
∏∏" #
LogLevel
∏∏# +
.
∏∏+ ,
Warn
∏∏, 0
,
∏∏0 1
$str
∏∏2 R
,
∏∏R S
	exceptSql
∏∏T ]
)
∏∏] ^
;
∏∏^ _
}
ππ 
}
∫∫ 	
}
ªª 
private
ææ 
void
ææ 
GoodB2G
ææ 
(
ææ 
)
ææ 
{
øø 
string
¿¿ 
password
¿¿ 
;
¿¿ 
password
¡¡ 
=
¡¡ 
$str
¡¡ 
;
¡¡ 
{
√√ 	
TcpListener
ƒƒ 
listener
ƒƒ  
=
ƒƒ! "
null
ƒƒ# '
;
ƒƒ' (
try
≈≈ 
{
∆∆ 
listener
»» 
=
»» 
new
»» 
TcpListener
»» *
(
»»* +
	IPAddress
»»+ 4
.
»»4 5
Parse
»»5 :
(
»»: ;
$str
»»; G
)
»»G H
,
»»H I
$num
»»J O
)
»»O P
;
»»P Q
listener
…… 
.
…… 
Start
…… 
(
…… 
)
……  
;
……  !
using
   
(
   
	TcpClient
    
tcpConn
  ! (
=
  ) *
listener
  + 3
.
  3 4
AcceptTcpClient
  4 C
(
  C D
)
  D E
)
  E F
{
ÀÀ 
using
ÃÃ 
(
ÃÃ 
StreamReader
ÃÃ '
sr
ÃÃ( *
=
ÃÃ+ ,
new
ÃÃ- 0
StreamReader
ÃÃ1 =
(
ÃÃ= >
Console
ÃÃ> E
.
ÃÃE F
OpenStandardInput
ÃÃF W
(
ÃÃW X
)
ÃÃX Y
)
ÃÃY Z
)
ÃÃZ [
{
ÕÕ 
password
œœ  
=
œœ! "
sr
œœ# %
.
œœ% &
ReadLine
œœ& .
(
œœ. /
)
œœ/ 0
;
œœ0 1
}
–– 
}
—— 
}
““ 
catch
”” 
(
”” 
IOException
”” 
exceptIO
”” '
)
””' (
{
‘‘ 
IO
’’ 
.
’’ 
Logger
’’ 
.
’’ 
Log
’’ 
(
’’ 
NLog
’’ "
.
’’" #
LogLevel
’’# +
.
’’+ ,
Warn
’’, 0
,
’’0 1
$str
’’2 M
,
’’M N
exceptIO
’’O W
)
’’W X
;
’’X Y
}
÷÷ 
finally
◊◊ 
{
ÿÿ 
try
ŸŸ 
{
⁄⁄ 
if
€€ 
(
€€ 
listener
€€  
!=
€€! #
null
€€$ (
)
€€( )
{
‹‹ 
listener
››  
.
››  !
Stop
››! %
(
››% &
)
››& '
;
››' (
}
ﬁﬁ 
}
ﬂﬂ 
catch
‡‡ 
(
‡‡ 
IOException
‡‡ "
exceptIO
‡‡# +
)
‡‡+ ,
{
·· 
IO
‚‚ 
.
‚‚ 
Logger
‚‚ 
.
‚‚ 
Log
‚‚ !
(
‚‚! "
NLog
‚‚" &
.
‚‚& '
LogLevel
‚‚' /
.
‚‚/ 0
Warn
‚‚0 4
,
‚‚4 5
$str
‚‚6 Q
,
‚‚Q R
exceptIO
‚‚S [
)
‚‚[ \
;
‚‚\ ]
}
„„ 
}
‰‰ 
}
ÂÂ 	
passwordGoodB2G
ÊÊ 
=
ÊÊ 
password
ÊÊ "
;
ÊÊ" #
GoodB2GSink
ÁÁ 
(
ÁÁ 
)
ÁÁ 
;
ÁÁ 
}
ËË 
}ÍÍ 
}ÎÎ ≠5
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_51a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_51a F
:G H
AbstractTestCaseI Y
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string   
password   
;   
password!! 
=!! 
$str!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try%% 
{&& 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using,, 
(,, 
StreamReader,, '
sr,,( *
=,,+ ,
new,,- 0
StreamReader,,1 =
(,,= >
Console,,> E
.,,E F
OpenStandardInput,,F W
(,,W X
),,X Y
),,Y Z
),,Z [
{-- 
password//  
=//! "
sr//# %
.//% &
ReadLine//& .
(//. /
)/// 0
;//0 1
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
$str552 M
,55M N
exceptIO55O W
)55W X
;55X Y
}66 
finally77 
{88 
try99 
{:: 
if;; 
(;; 
listener;;  
!=;;! #
null;;$ (
);;( )
{<< 
listener==  
.==  !
Stop==! %
(==% &
)==& '
;==' (
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ "
exceptIO@@# +
)@@+ ,
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB !
(BB! "
NLogBB" &
.BB& '
LogLevelBB' /
.BB/ 0
WarnBB0 4
,BB4 5
$strBB6 Q
,BBQ R
exceptIOBBS [
)BB[ \
;BB\ ]
}CC 
}DD 
}EE 	L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_51bFF H
.FFH I
BadSinkFFI P
(FFP Q
passwordFFQ Y
)FF[ \
;FF\ ]
}GG 
publicJJ 

overrideJJ 
voidJJ 
GoodJJ 
(JJ 
)JJ 
{KK 
GoodG2BLL 
(LL 
)LL 
;LL 
GoodB2GMM 
(MM 
)MM 
;MM 
}NN 
privateQQ 
voidQQ 
GoodG2BQQ 
(QQ 
)QQ 
{RR 
stringSS 
passwordSS 
;SS 
passwordVV 
=VV 
$strVV "
;VV" #L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_51bWW H
.WWH I
GoodG2BSinkWWI T
(WWT U
passwordWWU ]
)WW_ `
;WW` a
}XX 
private[[ 
void[[ 
GoodB2G[[ 
([[ 
)[[ 
{\\ 
string]] 
password]] 
;]] 
password^^ 
=^^ 
$str^^ 
;^^ 
{`` 	
TcpListeneraa 
listeneraa  
=aa! "
nullaa# '
;aa' (
trybb 
{cc 
listeneree 
=ee 
newee 
TcpListeneree *
(ee* +
	IPAddressee+ 4
.ee4 5
Parseee5 :
(ee: ;
$stree; G
)eeG H
,eeH I
$numeeJ O
)eeO P
;eeP Q
listenerff 
.ff 
Startff 
(ff 
)ff  
;ff  !
usinggg 
(gg 
	TcpClientgg  
tcpConngg! (
=gg) *
listenergg+ 3
.gg3 4
AcceptTcpClientgg4 C
(ggC D
)ggD E
)ggE F
{hh 
usingii 
(ii 
StreamReaderii '
srii( *
=ii+ ,
newii- 0
StreamReaderii1 =
(ii= >
Consoleii> E
.iiE F
OpenStandardInputiiF W
(iiW X
)iiX Y
)iiY Z
)iiZ [
{jj 
passwordll  
=ll! "
srll# %
.ll% &
ReadLinell& .
(ll. /
)ll/ 0
;ll0 1
}mm 
}nn 
}oo 
catchpp 
(pp 
IOExceptionpp 
exceptIOpp '
)pp' (
{qq 
IOrr 
.rr 
Loggerrr 
.rr 
Logrr 
(rr 
NLogrr "
.rr" #
LogLevelrr# +
.rr+ ,
Warnrr, 0
,rr0 1
$strrr2 M
,rrM N
exceptIOrrO W
)rrW X
;rrX Y
}ss 
finallytt 
{uu 
tryvv 
{ww 
ifxx 
(xx 
listenerxx  
!=xx! #
nullxx$ (
)xx( )
{yy 
listenerzz  
.zz  !
Stopzz! %
(zz% &
)zz& '
;zz' (
}{{ 
}|| 
catch}} 
(}} 
IOException}} "
exceptIO}}# +
)}}+ ,
{~~ 
IO 
. 
Logger 
. 
Log !
(! "
NLog" &
.& '
LogLevel' /
./ 0
Warn0 4
,4 5
$str6 Q
,Q R
exceptIOS [
)[ \
;\ ]
}
ÄÄ 
}
ÅÅ 
}
ÇÇ 	N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_51b
ÉÉ H
.
ÉÉH I
GoodB2GSink
ÉÉI T
(
ÉÉT U
password
ÉÉU ]
)
ÉÉ_ `
;
ÉÉ` a
}
ÑÑ 
}ÜÜ 
}áá ˚6
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_51b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_51b F
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   
try!! 
{"" 	
using$$ 
($$ 
SqlConnection$$  

connection$$! +
=$$, -
new$$. 1
SqlConnection$$2 ?
($$? @
$str$$@ v
+$$w x
$str$$y }
+$$~ 
$str
$$Ä å
+
$$ç é
password
$$è ó
)
$$ó ò
)
$$ò ô
{%% 

connection&& 
.&& 
Open&& 
(&&  
)&&  !
;&&! "
using'' 
('' 

SqlCommand'' !
command''" )
=''* +
new'', /

SqlCommand''0 :
('': ;
$str''; U
,''U V

connection''W a
)''a b
)''b c
{(( 
command)) 
.)) 
ExecuteNonQuery)) +
())+ ,
))), -
;))- .
}** 
}++ 
},, 	
catch-- 
(-- 
SqlException-- 
	exceptSql-- %
)--% &
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. N
,//N O
	exceptSql//P Y
)//Y Z
;//Z [
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
string66# )
password66* 2
)663 4
{77 
try88 
{99 	
using;; 
(;; 
SqlConnection;;  

connection;;! +
=;;, -
new;;. 1
SqlConnection;;2 ?
(;;? @
$str;;@ v
+;;w x
$str;;y }
+;;~ 
$str
;;Ä å
+
;;ç é
password
;;è ó
)
;;ó ò
)
;;ò ô
{<< 

connection== 
.== 
Open== 
(==  
)==  !
;==! "
using>> 
(>> 

SqlCommand>> !
command>>" )
=>>* +
new>>, /

SqlCommand>>0 :
(>>: ;
$str>>; U
,>>U V

connection>>W a
)>>a b
)>>b c
{?? 
command@@ 
.@@ 
ExecuteNonQuery@@ +
(@@+ ,
)@@, -
;@@- .
}AA 
}BB 
}CC 	
catchDD 
(DD 
SqlExceptionDD 
	exceptSqlDD %
)DD% &
{EE 	
IOFF 
.FF 
LoggerFF 
.FF 
LogFF 
(FF 
NLogFF 
.FF 
LogLevelFF '
.FF' (
WarnFF( ,
,FF, -
$strFF. N
,FFN O
	exceptSqlFFP Y
)FFY Z
;FFZ [
}GG 	
}HH 
publicKK 

staticKK 
voidKK 
GoodB2GSinkKK "
(KK" #
stringKK# )
passwordKK* 2
)KK3 4
{LL 
ifMM 

(MM 
passwordMM 
!=MM 
nullMM 
)MM 
{NN 	
{PP 
usingQQ 
(QQ $
AesCryptoServiceProviderQQ /
aesAlgQQ0 6
=QQ7 8
newQQ9 <$
AesCryptoServiceProviderQQ= U
(QQU V
)QQV W
)QQW X
{RR 
aesAlgSS 
.SS 
PaddingSS "
=SS# $
PaddingModeSS% 0
.SS0 1
NoneSS1 5
;SS5 6
aesAlgTT 
.TT 
KeyTT 
=TT  
EncodingTT! )
.TT) *
UTF8TT* .
.TT. /
GetBytesTT/ 7
(TT7 8
$strTT8 J
)TTJ K
;TTK L
ICryptoTransformVV $
	decryptorVV% .
=VV/ 0
aesAlgVV1 7
.VV7 8
CreateDecryptorVV8 G
(VVG H
aesAlgVVH N
.VVN O
KeyVVO R
,VVR S
aesAlgVVT Z
.VVZ [
IVVV[ ]
)VV] ^
;VV^ _
usingXX 
(XX 
MemoryStreamXX '
	msDecryptXX( 1
=XX2 3
newXX4 7
MemoryStreamXX8 D
(XXD E
EncodingXXE M
.XXM N
UTF8XXN R
.XXR S
GetBytesXXS [
(XX[ \
passwordXX\ d
)XXd e
)XXe f
)XXf g
{YY 
usingZZ 
(ZZ 
CryptoStreamZZ +
	csDecryptZZ, 5
=ZZ6 7
newZZ8 ;
CryptoStreamZZ< H
(ZZH I
	msDecryptZZI R
,ZZR S
	decryptorZZT ]
,ZZ] ^
CryptoStreamModeZZ_ o
.ZZo p
ReadZZp t
)ZZt u
)ZZu v
{[[ 
using\\ !
(\\" #
StreamReader\\# /
	srDecrypt\\0 9
=\\: ;
new\\< ?
StreamReader\\@ L
(\\L M
	csDecrypt\\M V
)\\V W
)\\W X
{]] 
password``  (
=``) *
	srDecrypt``+ 4
.``4 5
	ReadToEnd``5 >
(``> ?
)``? @
;``@ A
}aa 
}bb 
}cc 
}dd 
}ee 
tryff 
{gg 
usingii 
(ii 
SqlConnectionii $

connectionii% /
=ii0 1
newii2 5
SqlConnectionii6 C
(iiC D
$striiD z
+ii{ |
$str	ii} Å
+
iiÇ É
$str
iiÑ ê
+
iië í
password
iiì õ
)
iiõ ú
)
iiú ù
{jj 

connectionkk 
.kk 
Openkk #
(kk# $
)kk$ %
;kk% &
usingll 
(ll 

SqlCommandll %
commandll& -
=ll. /
newll0 3

SqlCommandll4 >
(ll> ?
$strll? Y
,llY Z

connectionll[ e
)lle f
)llf g
{mm 
commandnn 
.nn  
ExecuteNonQuerynn  /
(nn/ 0
)nn0 1
;nn1 2
}oo 
}pp 
}qq 
catchrr 
(rr 
SqlExceptionrr 
	exceptSqlrr  )
)rr) *
{ss 
IOtt 
.tt 
Loggertt 
.tt 
Logtt 
(tt 
NLogtt "
.tt" #
LogLeveltt# +
.tt+ ,
Warntt, 0
,tt0 1
$strtt2 R
,ttR S
	exceptSqlttT ]
)tt] ^
;tt^ _
}uu 
}vv 	
}ww 
}yy 
}zz ≠5
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_52a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_52a F
:G H
AbstractTestCaseI Y
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string   
password   
;   
password!! 
=!! 
$str!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try%% 
{&& 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using,, 
(,, 
StreamReader,, '
sr,,( *
=,,+ ,
new,,- 0
StreamReader,,1 =
(,,= >
Console,,> E
.,,E F
OpenStandardInput,,F W
(,,W X
),,X Y
),,Y Z
),,Z [
{-- 
password//  
=//! "
sr//# %
.//% &
ReadLine//& .
(//. /
)/// 0
;//0 1
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
$str552 M
,55M N
exceptIO55O W
)55W X
;55X Y
}66 
finally77 
{88 
try99 
{:: 
if;; 
(;; 
listener;;  
!=;;! #
null;;$ (
);;( )
{<< 
listener==  
.==  !
Stop==! %
(==% &
)==& '
;==' (
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ "
exceptIO@@# +
)@@+ ,
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB !
(BB! "
NLogBB" &
.BB& '
LogLevelBB' /
.BB/ 0
WarnBB0 4
,BB4 5
$strBB6 Q
,BBQ R
exceptIOBBS [
)BB[ \
;BB\ ]
}CC 
}DD 
}EE 	L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_52bFF H
.FFH I
BadSinkFFI P
(FFP Q
passwordFFQ Y
)FFZ [
;FF[ \
}GG 
publicJJ 

overrideJJ 
voidJJ 
GoodJJ 
(JJ 
)JJ 
{KK 
GoodG2BLL 
(LL 
)LL 
;LL 
GoodB2GMM 
(MM 
)MM 
;MM 
}NN 
privateQQ 
voidQQ 
GoodG2BQQ 
(QQ 
)QQ 
{RR 
stringSS 
passwordSS 
;SS 
passwordVV 
=VV 
$strVV "
;VV" #L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_52bWW H
.WWH I
GoodG2BSinkWWI T
(WWT U
passwordWWU ]
)WW^ _
;WW_ `
}XX 
private[[ 
void[[ 
GoodB2G[[ 
([[ 
)[[ 
{\\ 
string]] 
password]] 
;]] 
password^^ 
=^^ 
$str^^ 
;^^ 
{`` 	
TcpListeneraa 
listeneraa  
=aa! "
nullaa# '
;aa' (
trybb 
{cc 
listeneree 
=ee 
newee 
TcpListeneree *
(ee* +
	IPAddressee+ 4
.ee4 5
Parseee5 :
(ee: ;
$stree; G
)eeG H
,eeH I
$numeeJ O
)eeO P
;eeP Q
listenerff 
.ff 
Startff 
(ff 
)ff  
;ff  !
usinggg 
(gg 
	TcpClientgg  
tcpConngg! (
=gg) *
listenergg+ 3
.gg3 4
AcceptTcpClientgg4 C
(ggC D
)ggD E
)ggE F
{hh 
usingii 
(ii 
StreamReaderii '
srii( *
=ii+ ,
newii- 0
StreamReaderii1 =
(ii= >
Consoleii> E
.iiE F
OpenStandardInputiiF W
(iiW X
)iiX Y
)iiY Z
)iiZ [
{jj 
passwordll  
=ll! "
srll# %
.ll% &
ReadLinell& .
(ll. /
)ll/ 0
;ll0 1
}mm 
}nn 
}oo 
catchpp 
(pp 
IOExceptionpp 
exceptIOpp '
)pp' (
{qq 
IOrr 
.rr 
Loggerrr 
.rr 
Logrr 
(rr 
NLogrr "
.rr" #
LogLevelrr# +
.rr+ ,
Warnrr, 0
,rr0 1
$strrr2 M
,rrM N
exceptIOrrO W
)rrW X
;rrX Y
}ss 
finallytt 
{uu 
tryvv 
{ww 
ifxx 
(xx 
listenerxx  
!=xx! #
nullxx$ (
)xx( )
{yy 
listenerzz  
.zz  !
Stopzz! %
(zz% &
)zz& '
;zz' (
}{{ 
}|| 
catch}} 
(}} 
IOException}} "
exceptIO}}# +
)}}+ ,
{~~ 
IO 
. 
Logger 
. 
Log !
(! "
NLog" &
.& '
LogLevel' /
./ 0
Warn0 4
,4 5
$str6 Q
,Q R
exceptIOS [
)[ \
;\ ]
}
ÄÄ 
}
ÅÅ 
}
ÇÇ 	N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_52b
ÉÉ H
.
ÉÉH I
GoodB2GSink
ÉÉI T
(
ÉÉT U
password
ÉÉU ]
)
ÉÉ^ _
;
ÉÉ_ `
}
ÑÑ 
}ÜÜ 
}áá ë
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_52b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_52b F
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_52c!! H
.!!H I
BadSink!!I P
(!!P Q
password!!Q Y
)!!Z [
;!![ \
}"" 
public'' 

static'' 
void'' 
GoodG2BSink'' "
(''" #
string''# )
password''* 2
)''3 4
{(( L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_52c)) H
.))H I
GoodG2BSink))I T
())T U
password))U ]
)))^ _
;))_ `
}** 
public-- 

static-- 
void-- 
GoodB2GSink-- "
(--" #
string--# )
password--* 2
)--3 4
{.. L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_52c// H
.//H I
GoodB2GSink//I T
(//T U
password//U ]
)//^ _
;//_ `
}00 
}22 
}33 ˚6
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_52c.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_52c F
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   
try!! 
{"" 	
using$$ 
($$ 
SqlConnection$$  

connection$$! +
=$$, -
new$$. 1
SqlConnection$$2 ?
($$? @
$str$$@ v
+$$w x
$str$$y }
+$$~ 
$str
$$Ä å
+
$$ç é
password
$$è ó
)
$$ó ò
)
$$ò ô
{%% 

connection&& 
.&& 
Open&& 
(&&  
)&&  !
;&&! "
using'' 
('' 

SqlCommand'' !
command''" )
=''* +
new'', /

SqlCommand''0 :
('': ;
$str''; U
,''U V

connection''W a
)''a b
)''b c
{(( 
command)) 
.)) 
ExecuteNonQuery)) +
())+ ,
))), -
;))- .
}** 
}++ 
},, 	
catch-- 
(-- 
SqlException-- 
	exceptSql-- %
)--% &
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. N
,//N O
	exceptSql//P Y
)//Y Z
;//Z [
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
string66# )
password66* 2
)663 4
{77 
try88 
{99 	
using;; 
(;; 
SqlConnection;;  

connection;;! +
=;;, -
new;;. 1
SqlConnection;;2 ?
(;;? @
$str;;@ v
+;;w x
$str;;y }
+;;~ 
$str
;;Ä å
+
;;ç é
password
;;è ó
)
;;ó ò
)
;;ò ô
{<< 

connection== 
.== 
Open== 
(==  
)==  !
;==! "
using>> 
(>> 

SqlCommand>> !
command>>" )
=>>* +
new>>, /

SqlCommand>>0 :
(>>: ;
$str>>; U
,>>U V

connection>>W a
)>>a b
)>>b c
{?? 
command@@ 
.@@ 
ExecuteNonQuery@@ +
(@@+ ,
)@@, -
;@@- .
}AA 
}BB 
}CC 	
catchDD 
(DD 
SqlExceptionDD 
	exceptSqlDD %
)DD% &
{EE 	
IOFF 
.FF 
LoggerFF 
.FF 
LogFF 
(FF 
NLogFF 
.FF 
LogLevelFF '
.FF' (
WarnFF( ,
,FF, -
$strFF. N
,FFN O
	exceptSqlFFP Y
)FFY Z
;FFZ [
}GG 	
}HH 
publicKK 

staticKK 
voidKK 
GoodB2GSinkKK "
(KK" #
stringKK# )
passwordKK* 2
)KK3 4
{LL 
ifMM 

(MM 
passwordMM 
!=MM 
nullMM 
)MM 
{NN 	
{PP 
usingQQ 
(QQ $
AesCryptoServiceProviderQQ /
aesAlgQQ0 6
=QQ7 8
newQQ9 <$
AesCryptoServiceProviderQQ= U
(QQU V
)QQV W
)QQW X
{RR 
aesAlgSS 
.SS 
PaddingSS "
=SS# $
PaddingModeSS% 0
.SS0 1
NoneSS1 5
;SS5 6
aesAlgTT 
.TT 
KeyTT 
=TT  
EncodingTT! )
.TT) *
UTF8TT* .
.TT. /
GetBytesTT/ 7
(TT7 8
$strTT8 J
)TTJ K
;TTK L
ICryptoTransformVV $
	decryptorVV% .
=VV/ 0
aesAlgVV1 7
.VV7 8
CreateDecryptorVV8 G
(VVG H
aesAlgVVH N
.VVN O
KeyVVO R
,VVR S
aesAlgVVT Z
.VVZ [
IVVV[ ]
)VV] ^
;VV^ _
usingXX 
(XX 
MemoryStreamXX '
	msDecryptXX( 1
=XX2 3
newXX4 7
MemoryStreamXX8 D
(XXD E
EncodingXXE M
.XXM N
UTF8XXN R
.XXR S
GetBytesXXS [
(XX[ \
passwordXX\ d
)XXd e
)XXe f
)XXf g
{YY 
usingZZ 
(ZZ 
CryptoStreamZZ +
	csDecryptZZ, 5
=ZZ6 7
newZZ8 ;
CryptoStreamZZ< H
(ZZH I
	msDecryptZZI R
,ZZR S
	decryptorZZT ]
,ZZ] ^
CryptoStreamModeZZ_ o
.ZZo p
ReadZZp t
)ZZt u
)ZZu v
{[[ 
using\\ !
(\\" #
StreamReader\\# /
	srDecrypt\\0 9
=\\: ;
new\\< ?
StreamReader\\@ L
(\\L M
	csDecrypt\\M V
)\\V W
)\\W X
{]] 
password``  (
=``) *
	srDecrypt``+ 4
.``4 5
	ReadToEnd``5 >
(``> ?
)``? @
;``@ A
}aa 
}bb 
}cc 
}dd 
}ee 
tryff 
{gg 
usingii 
(ii 
SqlConnectionii $

connectionii% /
=ii0 1
newii2 5
SqlConnectionii6 C
(iiC D
$striiD z
+ii{ |
$str	ii} Å
+
iiÇ É
$str
iiÑ ê
+
iië í
password
iiì õ
)
iiõ ú
)
iiú ù
{jj 

connectionkk 
.kk 
Openkk #
(kk# $
)kk$ %
;kk% &
usingll 
(ll 

SqlCommandll %
commandll& -
=ll. /
newll0 3

SqlCommandll4 >
(ll> ?
$strll? Y
,llY Z

connectionll[ e
)lle f
)llf g
{mm 
commandnn 
.nn  
ExecuteNonQuerynn  /
(nn/ 0
)nn0 1
;nn1 2
}oo 
}pp 
}qq 
catchrr 
(rr 
SqlExceptionrr 
	exceptSqlrr  )
)rr) *
{ss 
IOtt 
.tt 
Loggertt 
.tt 
Logtt 
(tt 
NLogtt "
.tt" #
LogLeveltt# +
.tt+ ,
Warntt, 0
,tt0 1
$strtt2 R
,ttR S
	exceptSqlttT ]
)tt] ^
;tt^ _
}uu 
}vv 	
}ww 
}yy 
}zz ≠5
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_53a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_53a F
:G H
AbstractTestCaseI Y
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string   
password   
;   
password!! 
=!! 
$str!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try%% 
{&& 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using,, 
(,, 
StreamReader,, '
sr,,( *
=,,+ ,
new,,- 0
StreamReader,,1 =
(,,= >
Console,,> E
.,,E F
OpenStandardInput,,F W
(,,W X
),,X Y
),,Y Z
),,Z [
{-- 
password//  
=//! "
sr//# %
.//% &
ReadLine//& .
(//. /
)/// 0
;//0 1
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
$str552 M
,55M N
exceptIO55O W
)55W X
;55X Y
}66 
finally77 
{88 
try99 
{:: 
if;; 
(;; 
listener;;  
!=;;! #
null;;$ (
);;( )
{<< 
listener==  
.==  !
Stop==! %
(==% &
)==& '
;==' (
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ "
exceptIO@@# +
)@@+ ,
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB !
(BB! "
NLogBB" &
.BB& '
LogLevelBB' /
.BB/ 0
WarnBB0 4
,BB4 5
$strBB6 Q
,BBQ R
exceptIOBBS [
)BB[ \
;BB\ ]
}CC 
}DD 
}EE 	L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_53bFF H
.FFH I
BadSinkFFI P
(FFP Q
passwordFFQ Y
)FFZ [
;FF[ \
}GG 
publicJJ 

overrideJJ 
voidJJ 
GoodJJ 
(JJ 
)JJ 
{KK 
GoodG2BLL 
(LL 
)LL 
;LL 
GoodB2GMM 
(MM 
)MM 
;MM 
}NN 
privateQQ 
voidQQ 
GoodG2BQQ 
(QQ 
)QQ 
{RR 
stringSS 
passwordSS 
;SS 
passwordVV 
=VV 
$strVV "
;VV" #L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_53bWW H
.WWH I
GoodG2BSinkWWI T
(WWT U
passwordWWU ]
)WW^ _
;WW_ `
}XX 
private[[ 
void[[ 
GoodB2G[[ 
([[ 
)[[ 
{\\ 
string]] 
password]] 
;]] 
password^^ 
=^^ 
$str^^ 
;^^ 
{`` 	
TcpListeneraa 
listeneraa  
=aa! "
nullaa# '
;aa' (
trybb 
{cc 
listeneree 
=ee 
newee 
TcpListeneree *
(ee* +
	IPAddressee+ 4
.ee4 5
Parseee5 :
(ee: ;
$stree; G
)eeG H
,eeH I
$numeeJ O
)eeO P
;eeP Q
listenerff 
.ff 
Startff 
(ff 
)ff  
;ff  !
usinggg 
(gg 
	TcpClientgg  
tcpConngg! (
=gg) *
listenergg+ 3
.gg3 4
AcceptTcpClientgg4 C
(ggC D
)ggD E
)ggE F
{hh 
usingii 
(ii 
StreamReaderii '
srii( *
=ii+ ,
newii- 0
StreamReaderii1 =
(ii= >
Consoleii> E
.iiE F
OpenStandardInputiiF W
(iiW X
)iiX Y
)iiY Z
)iiZ [
{jj 
passwordll  
=ll! "
srll# %
.ll% &
ReadLinell& .
(ll. /
)ll/ 0
;ll0 1
}mm 
}nn 
}oo 
catchpp 
(pp 
IOExceptionpp 
exceptIOpp '
)pp' (
{qq 
IOrr 
.rr 
Loggerrr 
.rr 
Logrr 
(rr 
NLogrr "
.rr" #
LogLevelrr# +
.rr+ ,
Warnrr, 0
,rr0 1
$strrr2 M
,rrM N
exceptIOrrO W
)rrW X
;rrX Y
}ss 
finallytt 
{uu 
tryvv 
{ww 
ifxx 
(xx 
listenerxx  
!=xx! #
nullxx$ (
)xx( )
{yy 
listenerzz  
.zz  !
Stopzz! %
(zz% &
)zz& '
;zz' (
}{{ 
}|| 
catch}} 
(}} 
IOException}} "
exceptIO}}# +
)}}+ ,
{~~ 
IO 
. 
Logger 
. 
Log !
(! "
NLog" &
.& '
LogLevel' /
./ 0
Warn0 4
,4 5
$str6 Q
,Q R
exceptIOS [
)[ \
;\ ]
}
ÄÄ 
}
ÅÅ 
}
ÇÇ 	N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_53b
ÉÉ H
.
ÉÉH I
GoodB2GSink
ÉÉI T
(
ÉÉT U
password
ÉÉU ]
)
ÉÉ^ _
;
ÉÉ_ `
}
ÑÑ 
}ÜÜ 
}áá ë
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_53b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_53b F
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_53c!! H
.!!H I
BadSink!!I P
(!!P Q
password!!Q Y
)!!Z [
;!![ \
}"" 
public'' 

static'' 
void'' 
GoodG2BSink'' "
(''" #
string''# )
password''* 2
)''3 4
{(( L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_53c)) H
.))H I
GoodG2BSink))I T
())T U
password))U ]
)))^ _
;))_ `
}** 
public-- 

static-- 
void-- 
GoodB2GSink-- "
(--" #
string--# )
password--* 2
)--3 4
{.. L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_53c// H
.//H I
GoodB2GSink//I T
(//T U
password//U ]
)//^ _
;//_ `
}00 
}22 
}33 ë
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_53c.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_53c F
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_53d!! H
.!!H I
BadSink!!I P
(!!P Q
password!!Q Y
)!!Z [
;!![ \
}"" 
public'' 

static'' 
void'' 
GoodG2BSink'' "
(''" #
string''# )
password''* 2
)''3 4
{(( L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_53d)) H
.))H I
GoodG2BSink))I T
())T U
password))U ]
)))^ _
;))_ `
}** 
public-- 

static-- 
void-- 
GoodB2GSink-- "
(--" #
string--# )
password--* 2
)--3 4
{.. L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_53d// H
.//H I
GoodB2GSink//I T
(//T U
password//U ]
)//^ _
;//_ `
}00 
}22 
}33 ˚6
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_53d.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_53d F
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   
try!! 
{"" 	
using$$ 
($$ 
SqlConnection$$  

connection$$! +
=$$, -
new$$. 1
SqlConnection$$2 ?
($$? @
$str$$@ v
+$$w x
$str$$y }
+$$~ 
$str
$$Ä å
+
$$ç é
password
$$è ó
)
$$ó ò
)
$$ò ô
{%% 

connection&& 
.&& 
Open&& 
(&&  
)&&  !
;&&! "
using'' 
('' 

SqlCommand'' !
command''" )
=''* +
new'', /

SqlCommand''0 :
('': ;
$str''; U
,''U V

connection''W a
)''a b
)''b c
{(( 
command)) 
.)) 
ExecuteNonQuery)) +
())+ ,
))), -
;))- .
}** 
}++ 
},, 	
catch-- 
(-- 
SqlException-- 
	exceptSql-- %
)--% &
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. N
,//N O
	exceptSql//P Y
)//Y Z
;//Z [
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
string66# )
password66* 2
)663 4
{77 
try88 
{99 	
using;; 
(;; 
SqlConnection;;  

connection;;! +
=;;, -
new;;. 1
SqlConnection;;2 ?
(;;? @
$str;;@ v
+;;w x
$str;;y }
+;;~ 
$str
;;Ä å
+
;;ç é
password
;;è ó
)
;;ó ò
)
;;ò ô
{<< 

connection== 
.== 
Open== 
(==  
)==  !
;==! "
using>> 
(>> 

SqlCommand>> !
command>>" )
=>>* +
new>>, /

SqlCommand>>0 :
(>>: ;
$str>>; U
,>>U V

connection>>W a
)>>a b
)>>b c
{?? 
command@@ 
.@@ 
ExecuteNonQuery@@ +
(@@+ ,
)@@, -
;@@- .
}AA 
}BB 
}CC 	
catchDD 
(DD 
SqlExceptionDD 
	exceptSqlDD %
)DD% &
{EE 	
IOFF 
.FF 
LoggerFF 
.FF 
LogFF 
(FF 
NLogFF 
.FF 
LogLevelFF '
.FF' (
WarnFF( ,
,FF, -
$strFF. N
,FFN O
	exceptSqlFFP Y
)FFY Z
;FFZ [
}GG 	
}HH 
publicKK 

staticKK 
voidKK 
GoodB2GSinkKK "
(KK" #
stringKK# )
passwordKK* 2
)KK3 4
{LL 
ifMM 

(MM 
passwordMM 
!=MM 
nullMM 
)MM 
{NN 	
{PP 
usingQQ 
(QQ $
AesCryptoServiceProviderQQ /
aesAlgQQ0 6
=QQ7 8
newQQ9 <$
AesCryptoServiceProviderQQ= U
(QQU V
)QQV W
)QQW X
{RR 
aesAlgSS 
.SS 
PaddingSS "
=SS# $
PaddingModeSS% 0
.SS0 1
NoneSS1 5
;SS5 6
aesAlgTT 
.TT 
KeyTT 
=TT  
EncodingTT! )
.TT) *
UTF8TT* .
.TT. /
GetBytesTT/ 7
(TT7 8
$strTT8 J
)TTJ K
;TTK L
ICryptoTransformVV $
	decryptorVV% .
=VV/ 0
aesAlgVV1 7
.VV7 8
CreateDecryptorVV8 G
(VVG H
aesAlgVVH N
.VVN O
KeyVVO R
,VVR S
aesAlgVVT Z
.VVZ [
IVVV[ ]
)VV] ^
;VV^ _
usingXX 
(XX 
MemoryStreamXX '
	msDecryptXX( 1
=XX2 3
newXX4 7
MemoryStreamXX8 D
(XXD E
EncodingXXE M
.XXM N
UTF8XXN R
.XXR S
GetBytesXXS [
(XX[ \
passwordXX\ d
)XXd e
)XXe f
)XXf g
{YY 
usingZZ 
(ZZ 
CryptoStreamZZ +
	csDecryptZZ, 5
=ZZ6 7
newZZ8 ;
CryptoStreamZZ< H
(ZZH I
	msDecryptZZI R
,ZZR S
	decryptorZZT ]
,ZZ] ^
CryptoStreamModeZZ_ o
.ZZo p
ReadZZp t
)ZZt u
)ZZu v
{[[ 
using\\ !
(\\" #
StreamReader\\# /
	srDecrypt\\0 9
=\\: ;
new\\< ?
StreamReader\\@ L
(\\L M
	csDecrypt\\M V
)\\V W
)\\W X
{]] 
password``  (
=``) *
	srDecrypt``+ 4
.``4 5
	ReadToEnd``5 >
(``> ?
)``? @
;``@ A
}aa 
}bb 
}cc 
}dd 
}ee 
tryff 
{gg 
usingii 
(ii 
SqlConnectionii $

connectionii% /
=ii0 1
newii2 5
SqlConnectionii6 C
(iiC D
$striiD z
+ii{ |
$str	ii} Å
+
iiÇ É
$str
iiÑ ê
+
iië í
password
iiì õ
)
iiõ ú
)
iiú ù
{jj 

connectionkk 
.kk 
Openkk #
(kk# $
)kk$ %
;kk% &
usingll 
(ll 

SqlCommandll %
commandll& -
=ll. /
newll0 3

SqlCommandll4 >
(ll> ?
$strll? Y
,llY Z

connectionll[ e
)lle f
)llf g
{mm 
commandnn 
.nn  
ExecuteNonQuerynn  /
(nn/ 0
)nn0 1
;nn1 2
}oo 
}pp 
}qq 
catchrr 
(rr 
SqlExceptionrr 
	exceptSqlrr  )
)rr) *
{ss 
IOtt 
.tt 
Loggertt 
.tt 
Logtt 
(tt 
NLogtt "
.tt" #
LogLeveltt# +
.tt+ ,
Warntt, 0
,tt0 1
$strtt2 R
,ttR S
	exceptSqlttT ]
)tt] ^
;tt^ _
}uu 
}vv 	
}ww 
}yy 
}zz ≠5
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_54a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_54a F
:G H
AbstractTestCaseI Y
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string   
password   
;   
password!! 
=!! 
$str!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try%% 
{&& 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using,, 
(,, 
StreamReader,, '
sr,,( *
=,,+ ,
new,,- 0
StreamReader,,1 =
(,,= >
Console,,> E
.,,E F
OpenStandardInput,,F W
(,,W X
),,X Y
),,Y Z
),,Z [
{-- 
password//  
=//! "
sr//# %
.//% &
ReadLine//& .
(//. /
)/// 0
;//0 1
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
$str552 M
,55M N
exceptIO55O W
)55W X
;55X Y
}66 
finally77 
{88 
try99 
{:: 
if;; 
(;; 
listener;;  
!=;;! #
null;;$ (
);;( )
{<< 
listener==  
.==  !
Stop==! %
(==% &
)==& '
;==' (
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ "
exceptIO@@# +
)@@+ ,
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB !
(BB! "
NLogBB" &
.BB& '
LogLevelBB' /
.BB/ 0
WarnBB0 4
,BB4 5
$strBB6 Q
,BBQ R
exceptIOBBS [
)BB[ \
;BB\ ]
}CC 
}DD 
}EE 	L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_54bFF H
.FFH I
BadSinkFFI P
(FFP Q
passwordFFQ Y
)FFZ [
;FF[ \
}GG 
publicJJ 

overrideJJ 
voidJJ 
GoodJJ 
(JJ 
)JJ 
{KK 
GoodG2BLL 
(LL 
)LL 
;LL 
GoodB2GMM 
(MM 
)MM 
;MM 
}NN 
privateQQ 
voidQQ 
GoodG2BQQ 
(QQ 
)QQ 
{RR 
stringSS 
passwordSS 
;SS 
passwordVV 
=VV 
$strVV "
;VV" #L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_54bWW H
.WWH I
GoodG2BSinkWWI T
(WWT U
passwordWWU ]
)WW^ _
;WW_ `
}XX 
private[[ 
void[[ 
GoodB2G[[ 
([[ 
)[[ 
{\\ 
string]] 
password]] 
;]] 
password^^ 
=^^ 
$str^^ 
;^^ 
{`` 	
TcpListeneraa 
listeneraa  
=aa! "
nullaa# '
;aa' (
trybb 
{cc 
listeneree 
=ee 
newee 
TcpListeneree *
(ee* +
	IPAddressee+ 4
.ee4 5
Parseee5 :
(ee: ;
$stree; G
)eeG H
,eeH I
$numeeJ O
)eeO P
;eeP Q
listenerff 
.ff 
Startff 
(ff 
)ff  
;ff  !
usinggg 
(gg 
	TcpClientgg  
tcpConngg! (
=gg) *
listenergg+ 3
.gg3 4
AcceptTcpClientgg4 C
(ggC D
)ggD E
)ggE F
{hh 
usingii 
(ii 
StreamReaderii '
srii( *
=ii+ ,
newii- 0
StreamReaderii1 =
(ii= >
Consoleii> E
.iiE F
OpenStandardInputiiF W
(iiW X
)iiX Y
)iiY Z
)iiZ [
{jj 
passwordll  
=ll! "
srll# %
.ll% &
ReadLinell& .
(ll. /
)ll/ 0
;ll0 1
}mm 
}nn 
}oo 
catchpp 
(pp 
IOExceptionpp 
exceptIOpp '
)pp' (
{qq 
IOrr 
.rr 
Loggerrr 
.rr 
Logrr 
(rr 
NLogrr "
.rr" #
LogLevelrr# +
.rr+ ,
Warnrr, 0
,rr0 1
$strrr2 M
,rrM N
exceptIOrrO W
)rrW X
;rrX Y
}ss 
finallytt 
{uu 
tryvv 
{ww 
ifxx 
(xx 
listenerxx  
!=xx! #
nullxx$ (
)xx( )
{yy 
listenerzz  
.zz  !
Stopzz! %
(zz% &
)zz& '
;zz' (
}{{ 
}|| 
catch}} 
(}} 
IOException}} "
exceptIO}}# +
)}}+ ,
{~~ 
IO 
. 
Logger 
. 
Log !
(! "
NLog" &
.& '
LogLevel' /
./ 0
Warn0 4
,4 5
$str6 Q
,Q R
exceptIOS [
)[ \
;\ ]
}
ÄÄ 
}
ÅÅ 
}
ÇÇ 	N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_54b
ÉÉ H
.
ÉÉH I
GoodB2GSink
ÉÉI T
(
ÉÉT U
password
ÉÉU ]
)
ÉÉ^ _
;
ÉÉ_ `
}
ÑÑ 
}ÜÜ 
}áá ë
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_54b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_54b F
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_54c!! H
.!!H I
BadSink!!I P
(!!P Q
password!!Q Y
)!!Z [
;!![ \
}"" 
public'' 

static'' 
void'' 
GoodG2BSink'' "
(''" #
string''# )
password''* 2
)''3 4
{(( L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_54c)) H
.))H I
GoodG2BSink))I T
())T U
password))U ]
)))^ _
;))_ `
}** 
public-- 

static-- 
void-- 
GoodB2GSink-- "
(--" #
string--# )
password--* 2
)--3 4
{.. L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_54c// H
.//H I
GoodB2GSink//I T
(//T U
password//U ]
)//^ _
;//_ `
}00 
}22 
}33 ë
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_54c.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_54c F
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_54d!! H
.!!H I
BadSink!!I P
(!!P Q
password!!Q Y
)!!Z [
;!![ \
}"" 
public'' 

static'' 
void'' 
GoodG2BSink'' "
(''" #
string''# )
password''* 2
)''3 4
{(( L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_54d)) H
.))H I
GoodG2BSink))I T
())T U
password))U ]
)))^ _
;))_ `
}** 
public-- 

static-- 
void-- 
GoodB2GSink-- "
(--" #
string--# )
password--* 2
)--3 4
{.. L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_54d// H
.//H I
GoodB2GSink//I T
(//T U
password//U ]
)//^ _
;//_ `
}00 
}22 
}33 ë
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_54d.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_54d F
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_54e!! H
.!!H I
BadSink!!I P
(!!P Q
password!!Q Y
)!!Z [
;!![ \
}"" 
public'' 

static'' 
void'' 
GoodG2BSink'' "
(''" #
string''# )
password''* 2
)''3 4
{(( L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_54e)) H
.))H I
GoodG2BSink))I T
())T U
password))U ]
)))^ _
;))_ `
}** 
public-- 

static-- 
void-- 
GoodB2GSink-- "
(--" #
string--# )
password--* 2
)--3 4
{.. L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_54e// H
.//H I
GoodB2GSink//I T
(//T U
password//U ]
)//^ _
;//_ `
}00 
}22 
}33 ˚6
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_54e.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_54e F
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   
try!! 
{"" 	
using$$ 
($$ 
SqlConnection$$  

connection$$! +
=$$, -
new$$. 1
SqlConnection$$2 ?
($$? @
$str$$@ v
+$$w x
$str$$y }
+$$~ 
$str
$$Ä å
+
$$ç é
password
$$è ó
)
$$ó ò
)
$$ò ô
{%% 

connection&& 
.&& 
Open&& 
(&&  
)&&  !
;&&! "
using'' 
('' 

SqlCommand'' !
command''" )
=''* +
new'', /

SqlCommand''0 :
('': ;
$str''; U
,''U V

connection''W a
)''a b
)''b c
{(( 
command)) 
.)) 
ExecuteNonQuery)) +
())+ ,
))), -
;))- .
}** 
}++ 
},, 	
catch-- 
(-- 
SqlException-- 
	exceptSql-- %
)--% &
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. N
,//N O
	exceptSql//P Y
)//Y Z
;//Z [
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
string66# )
password66* 2
)663 4
{77 
try88 
{99 	
using;; 
(;; 
SqlConnection;;  

connection;;! +
=;;, -
new;;. 1
SqlConnection;;2 ?
(;;? @
$str;;@ v
+;;w x
$str;;y }
+;;~ 
$str
;;Ä å
+
;;ç é
password
;;è ó
)
;;ó ò
)
;;ò ô
{<< 

connection== 
.== 
Open== 
(==  
)==  !
;==! "
using>> 
(>> 

SqlCommand>> !
command>>" )
=>>* +
new>>, /

SqlCommand>>0 :
(>>: ;
$str>>; U
,>>U V

connection>>W a
)>>a b
)>>b c
{?? 
command@@ 
.@@ 
ExecuteNonQuery@@ +
(@@+ ,
)@@, -
;@@- .
}AA 
}BB 
}CC 	
catchDD 
(DD 
SqlExceptionDD 
	exceptSqlDD %
)DD% &
{EE 	
IOFF 
.FF 
LoggerFF 
.FF 
LogFF 
(FF 
NLogFF 
.FF 
LogLevelFF '
.FF' (
WarnFF( ,
,FF, -
$strFF. N
,FFN O
	exceptSqlFFP Y
)FFY Z
;FFZ [
}GG 	
}HH 
publicKK 

staticKK 
voidKK 
GoodB2GSinkKK "
(KK" #
stringKK# )
passwordKK* 2
)KK3 4
{LL 
ifMM 

(MM 
passwordMM 
!=MM 
nullMM 
)MM 
{NN 	
{PP 
usingQQ 
(QQ $
AesCryptoServiceProviderQQ /
aesAlgQQ0 6
=QQ7 8
newQQ9 <$
AesCryptoServiceProviderQQ= U
(QQU V
)QQV W
)QQW X
{RR 
aesAlgSS 
.SS 
PaddingSS "
=SS# $
PaddingModeSS% 0
.SS0 1
NoneSS1 5
;SS5 6
aesAlgTT 
.TT 
KeyTT 
=TT  
EncodingTT! )
.TT) *
UTF8TT* .
.TT. /
GetBytesTT/ 7
(TT7 8
$strTT8 J
)TTJ K
;TTK L
ICryptoTransformVV $
	decryptorVV% .
=VV/ 0
aesAlgVV1 7
.VV7 8
CreateDecryptorVV8 G
(VVG H
aesAlgVVH N
.VVN O
KeyVVO R
,VVR S
aesAlgVVT Z
.VVZ [
IVVV[ ]
)VV] ^
;VV^ _
usingXX 
(XX 
MemoryStreamXX '
	msDecryptXX( 1
=XX2 3
newXX4 7
MemoryStreamXX8 D
(XXD E
EncodingXXE M
.XXM N
UTF8XXN R
.XXR S
GetBytesXXS [
(XX[ \
passwordXX\ d
)XXd e
)XXe f
)XXf g
{YY 
usingZZ 
(ZZ 
CryptoStreamZZ +
	csDecryptZZ, 5
=ZZ6 7
newZZ8 ;
CryptoStreamZZ< H
(ZZH I
	msDecryptZZI R
,ZZR S
	decryptorZZT ]
,ZZ] ^
CryptoStreamModeZZ_ o
.ZZo p
ReadZZp t
)ZZt u
)ZZu v
{[[ 
using\\ !
(\\" #
StreamReader\\# /
	srDecrypt\\0 9
=\\: ;
new\\< ?
StreamReader\\@ L
(\\L M
	csDecrypt\\M V
)\\V W
)\\W X
{]] 
password``  (
=``) *
	srDecrypt``+ 4
.``4 5
	ReadToEnd``5 >
(``> ?
)``? @
;``@ A
}aa 
}bb 
}cc 
}dd 
}ee 
tryff 
{gg 
usingii 
(ii 
SqlConnectionii $

connectionii% /
=ii0 1
newii2 5
SqlConnectionii6 C
(iiC D
$striiD z
+ii{ |
$str	ii} Å
+
iiÇ É
$str
iiÑ ê
+
iië í
password
iiì õ
)
iiõ ú
)
iiú ù
{jj 

connectionkk 
.kk 
Openkk #
(kk# $
)kk$ %
;kk% &
usingll 
(ll 

SqlCommandll %
commandll& -
=ll. /
newll0 3

SqlCommandll4 >
(ll> ?
$strll? Y
,llY Z

connectionll[ e
)lle f
)llf g
{mm 
commandnn 
.nn  
ExecuteNonQuerynn  /
(nn/ 0
)nn0 1
;nn1 2
}oo 
}pp 
}qq 
catchrr 
(rr 
SqlExceptionrr 
	exceptSqlrr  )
)rr) *
{ss 
IOtt 
.tt 
Loggertt 
.tt 
Logtt 
(tt 
NLogtt "
.tt" #
LogLeveltt# +
.tt+ ,
Warntt, 0
,tt0 1
$strtt2 R
,ttR S
	exceptSqlttT ]
)tt] ^
;tt^ _
}uu 
}vv 	
}ww 
}yy 
}zz  =
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_61a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_61a F
:G H
AbstractTestCaseI Y
{ 
public 

override 
void 
Bad 
( 
) 
{   
string!! 
password!! 
=!! L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_61b!! Z
.!!Z [
	BadSource!![ d
(!!d e
)!!e f
;!!f g
try"" 
{## 	
using%% 
(%% 
SqlConnection%%  

connection%%! +
=%%, -
new%%. 1
SqlConnection%%2 ?
(%%? @
$str%%@ v
+%%w x
$str%%y }
+%%~ 
$str
%%Ä å
+
%%ç é
password
%%è ó
)
%%ó ò
)
%%ò ô
{&& 

connection'' 
.'' 
Open'' 
(''  
)''  !
;''! "
using(( 
((( 

SqlCommand(( !
command((" )
=((* +
new((, /

SqlCommand((0 :
(((: ;
$str((; U
,((U V

connection((W a
)((a b
)((b c
{)) 
command** 
.** 
ExecuteNonQuery** +
(**+ ,
)**, -
;**- .
}++ 
},, 
}-- 	
catch.. 
(.. 
SqlException.. 
	exceptSql.. %
)..% &
{// 	
IO00 
.00 
Logger00 
.00 
Log00 
(00 
NLog00 
.00 
LogLevel00 '
.00' (
Warn00( ,
,00, -
$str00. N
,00N O
	exceptSql00P Y
)00Y Z
;00Z [
}11 	
}22 
public55 

override55 
void55 
Good55 
(55 
)55 
{66 
GoodG2B77 
(77 
)77 
;77 
GoodB2G88 
(88 
)88 
;88 
}99 
private<< 
static<< 
void<< 
GoodG2B<< 
(<<  
)<<  !
{== 
string>> 
password>> 
=>> L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_61b>> Z
.>>Z [
GoodG2BSource>>[ h
(>>h i
)>>i j
;>>j k
try?? 
{@@ 	
usingBB 
(BB 
SqlConnectionBB  

connectionBB! +
=BB, -
newBB. 1
SqlConnectionBB2 ?
(BB? @
$strBB@ v
+BBw x
$strBBy }
+BB~ 
$str
BBÄ å
+
BBç é
password
BBè ó
)
BBó ò
)
BBò ô
{CC 

connectionDD 
.DD 
OpenDD 
(DD  
)DD  !
;DD! "
usingEE 
(EE 

SqlCommandEE !
commandEE" )
=EE* +
newEE, /

SqlCommandEE0 :
(EE: ;
$strEE; U
,EEU V

connectionEEW a
)EEa b
)EEb c
{FF 
commandGG 
.GG 
ExecuteNonQueryGG +
(GG+ ,
)GG, -
;GG- .
}HH 
}II 
}JJ 	
catchKK 
(KK 
SqlExceptionKK 
	exceptSqlKK %
)KK% &
{LL 	
IOMM 
.MM 
LoggerMM 
.MM 
LogMM 
(MM 
NLogMM 
.MM 
LogLevelMM '
.MM' (
WarnMM( ,
,MM, -
$strMM. N
,MMN O
	exceptSqlMMP Y
)MMY Z
;MMZ [
}NN 	
}OO 
privateRR 
staticRR 
voidRR 
GoodB2GRR 
(RR  
)RR  !
{SS 
stringTT 
passwordTT 
=TT L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_61bTT Z
.TTZ [
GoodB2GSourceTT[ h
(TTh i
)TTi j
;TTj k
ifUU 

(UU 
passwordUU 
!=UU 
nullUU 
)UU 
{VV 	
{XX 
usingYY 
(YY $
AesCryptoServiceProviderYY /
aesAlgYY0 6
=YY7 8
newYY9 <$
AesCryptoServiceProviderYY= U
(YYU V
)YYV W
)YYW X
{ZZ 
aesAlg[[ 
.[[ 
Padding[[ "
=[[# $
PaddingMode[[% 0
.[[0 1
None[[1 5
;[[5 6
aesAlg\\ 
.\\ 
Key\\ 
=\\  
Encoding\\! )
.\\) *
UTF8\\* .
.\\. /
GetBytes\\/ 7
(\\7 8
$str\\8 J
)\\J K
;\\K L
ICryptoTransform^^ $
	decryptor^^% .
=^^/ 0
aesAlg^^1 7
.^^7 8
CreateDecryptor^^8 G
(^^G H
aesAlg^^H N
.^^N O
Key^^O R
,^^R S
aesAlg^^T Z
.^^Z [
IV^^[ ]
)^^] ^
;^^^ _
using`` 
(`` 
MemoryStream`` '
	msDecrypt``( 1
=``2 3
new``4 7
MemoryStream``8 D
(``D E
Encoding``E M
.``M N
UTF8``N R
.``R S
GetBytes``S [
(``[ \
password``\ d
)``d e
)``e f
)``f g
{aa 
usingbb 
(bb 
CryptoStreambb +
	csDecryptbb, 5
=bb6 7
newbb8 ;
CryptoStreambb< H
(bbH I
	msDecryptbbI R
,bbR S
	decryptorbbT ]
,bb] ^
CryptoStreamModebb_ o
.bbo p
Readbbp t
)bbt u
)bbu v
{cc 
usingdd !
(dd" #
StreamReaderdd# /
	srDecryptdd0 9
=dd: ;
newdd< ?
StreamReaderdd@ L
(ddL M
	csDecryptddM V
)ddV W
)ddW X
{ee 
passwordhh  (
=hh) *
	srDecrypthh+ 4
.hh4 5
	ReadToEndhh5 >
(hh> ?
)hh? @
;hh@ A
}ii 
}jj 
}kk 
}ll 
}mm 
trynn 
{oo 
usingqq 
(qq 
SqlConnectionqq $

connectionqq% /
=qq0 1
newqq2 5
SqlConnectionqq6 C
(qqC D
$strqqD z
+qq{ |
$str	qq} Å
+
qqÇ É
$str
qqÑ ê
+
qqë í
password
qqì õ
)
qqõ ú
)
qqú ù
{rr 

connectionss 
.ss 
Openss #
(ss# $
)ss$ %
;ss% &
usingtt 
(tt 

SqlCommandtt %
commandtt& -
=tt. /
newtt0 3

SqlCommandtt4 >
(tt> ?
$strtt? Y
,ttY Z

connectiontt[ e
)tte f
)ttf g
{uu 
commandvv 
.vv  
ExecuteNonQueryvv  /
(vv/ 0
)vv0 1
;vv1 2
}ww 
}xx 
}yy 
catchzz 
(zz 
SqlExceptionzz 
	exceptSqlzz  )
)zz) *
{{{ 
IO|| 
.|| 
Logger|| 
.|| 
Log|| 
(|| 
NLog|| "
.||" #
LogLevel||# +
.||+ ,
Warn||, 0
,||0 1
$str||2 R
,||R S
	exceptSql||T ]
)||] ^
;||^ _
}}} 
}~~ 	
} 
}ÅÅ 
}ÇÇ ú0
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_61b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_61b F
{ 
public 

static 
string 
	BadSource "
(" #
)# $
{ 
string   
password   
;   
password!! 
=!! 
$str!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try%% 
{&& 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using,, 
(,, 
StreamReader,, '
sr,,( *
=,,+ ,
new,,- 0
StreamReader,,1 =
(,,= >
Console,,> E
.,,E F
OpenStandardInput,,F W
(,,W X
),,X Y
),,Y Z
),,Z [
{-- 
password//  
=//! "
sr//# %
.//% &
ReadLine//& .
(//. /
)/// 0
;//0 1
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
$str552 M
,55M N
exceptIO55O W
)55W X
;55X Y
}66 
finally77 
{88 
try99 
{:: 
if;; 
(;; 
listener;;  
!=;;! #
null;;$ (
);;( )
{<< 
listener==  
.==  !
Stop==! %
(==% &
)==& '
;==' (
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ "
exceptIO@@# +
)@@+ ,
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB !
(BB! "
NLogBB" &
.BB& '
LogLevelBB' /
.BB/ 0
WarnBB0 4
,BB4 5
$strBB6 Q
,BBQ R
exceptIOBBS [
)BB[ \
;BB\ ]
}CC 
}DD 
}EE 	
returnFF 
passwordFF 
;FF 
}GG 
publicLL 

staticLL 
stringLL 
GoodG2BSourceLL &
(LL& '
)LL' (
{MM 
stringNN 
passwordNN 
;NN 
passwordQQ 
=QQ 
$strQQ "
;QQ" #
returnRR 
passwordRR 
;RR 
}SS 
publicVV 

staticVV 
stringVV 
GoodB2GSourceVV &
(VV& '
)VV' (
{WW 
stringXX 
passwordXX 
;XX 
passwordYY 
=YY 
$strYY 
;YY 
{[[ 	
TcpListener\\ 
listener\\  
=\\! "
null\\# '
;\\' (
try]] 
{^^ 
listener`` 
=`` 
new`` 
TcpListener`` *
(``* +
	IPAddress``+ 4
.``4 5
Parse``5 :
(``: ;
$str``; G
)``G H
,``H I
$num``J O
)``O P
;``P Q
listeneraa 
.aa 
Startaa 
(aa 
)aa  
;aa  !
usingbb 
(bb 
	TcpClientbb  
tcpConnbb! (
=bb) *
listenerbb+ 3
.bb3 4
AcceptTcpClientbb4 C
(bbC D
)bbD E
)bbE F
{cc 
usingdd 
(dd 
StreamReaderdd '
srdd( *
=dd+ ,
newdd- 0
StreamReaderdd1 =
(dd= >
Consoledd> E
.ddE F
OpenStandardInputddF W
(ddW X
)ddX Y
)ddY Z
)ddZ [
{ee 
passwordgg  
=gg! "
srgg# %
.gg% &
ReadLinegg& .
(gg. /
)gg/ 0
;gg0 1
}hh 
}ii 
}jj 
catchkk 
(kk 
IOExceptionkk 
exceptIOkk '
)kk' (
{ll 
IOmm 
.mm 
Loggermm 
.mm 
Logmm 
(mm 
NLogmm "
.mm" #
LogLevelmm# +
.mm+ ,
Warnmm, 0
,mm0 1
$strmm2 M
,mmM N
exceptIOmmO W
)mmW X
;mmX Y
}nn 
finallyoo 
{pp 
tryqq 
{rr 
ifss 
(ss 
listenerss  
!=ss! #
nullss$ (
)ss( )
{tt 
listeneruu  
.uu  !
Stopuu! %
(uu% &
)uu& '
;uu' (
}vv 
}ww 
catchxx 
(xx 
IOExceptionxx "
exceptIOxx# +
)xx+ ,
{yy 
IOzz 
.zz 
Loggerzz 
.zz 
Logzz !
(zz! "
NLogzz" &
.zz& '
LogLevelzz' /
.zz/ 0
Warnzz0 4
,zz4 5
$strzz6 Q
,zzQ R
exceptIOzzS [
)zz[ \
;zz\ ]
}{{ 
}|| 
}}} 	
return~~ 
password~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ ı=
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_66a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_66a F
:G H
AbstractTestCaseI Y
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string   
password   
;   
password!! 
=!! 
$str!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try%% 
{&& 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using,, 
(,, 
StreamReader,, '
sr,,( *
=,,+ ,
new,,- 0
StreamReader,,1 =
(,,= >
Console,,> E
.,,E F
OpenStandardInput,,F W
(,,W X
),,X Y
),,Y Z
),,Z [
{-- 
password//  
=//! "
sr//# %
.//% &
ReadLine//& .
(//. /
)/// 0
;//0 1
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
$str552 M
,55M N
exceptIO55O W
)55W X
;55X Y
}66 
finally77 
{88 
try99 
{:: 
if;; 
(;; 
listener;;  
!=;;! #
null;;$ (
);;( )
{<< 
listener==  
.==  !
Stop==! %
(==% &
)==& '
;==' (
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ "
exceptIO@@# +
)@@+ ,
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB !
(BB! "
NLogBB" &
.BB& '
LogLevelBB' /
.BB/ 0
WarnBB0 4
,BB4 5
$strBB6 Q
,BBQ R
exceptIOBBS [
)BB[ \
;BB\ ]
}CC 
}DD 
}EE 	
stringFF 
[FF 
]FF 
passwordArrayFF 
=FF  
newFF! $
stringFF% +
[FF+ ,
$numFF, -
]FF- .
;FF. /
passwordArrayGG 
[GG 
$numGG 
]GG 
=GG 
passwordGG #
;GG# $L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_66bHH H
.HHH I
BadSinkHHI P
(HHP Q
passwordArrayHHQ ^
)HH` a
;HHa b
}II 
publicLL 

overrideLL 
voidLL 
GoodLL 
(LL 
)LL 
{MM 
GoodG2BNN 
(NN 
)NN 
;NN 
GoodB2GOO 
(OO 
)OO 
;OO 
}PP 
privateSS 
staticSS 
voidSS 
GoodG2BSS 
(SS  
)SS  !
{TT 
stringUU 
passwordUU 
;UU 
passwordXX 
=XX 
$strXX "
;XX" #
stringYY 
[YY 
]YY 
passwordArrayYY 
=YY  
newYY! $
stringYY% +
[YY+ ,
$numYY, -
]YY- .
;YY. /
passwordArrayZZ 
[ZZ 
$numZZ 
]ZZ 
=ZZ 
passwordZZ #
;ZZ# $L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_66b[[ H
.[[H I
GoodG2BSink[[I T
([[T U
passwordArray[[U b
)[[d e
;[[e f
}\\ 
private__ 
static__ 
void__ 
GoodB2G__ 
(__  
)__  !
{`` 
stringaa 
passwordaa 
;aa 
passwordbb 
=bb 
$strbb 
;bb 
{dd 	
TcpListeneree 
listeneree  
=ee! "
nullee# '
;ee' (
tryff 
{gg 
listenerii 
=ii 
newii 
TcpListenerii *
(ii* +
	IPAddressii+ 4
.ii4 5
Parseii5 :
(ii: ;
$strii; G
)iiG H
,iiH I
$numiiJ O
)iiO P
;iiP Q
listenerjj 
.jj 
Startjj 
(jj 
)jj  
;jj  !
usingkk 
(kk 
	TcpClientkk  
tcpConnkk! (
=kk) *
listenerkk+ 3
.kk3 4
AcceptTcpClientkk4 C
(kkC D
)kkD E
)kkE F
{ll 
usingmm 
(mm 
StreamReadermm '
srmm( *
=mm+ ,
newmm- 0
StreamReadermm1 =
(mm= >
Consolemm> E
.mmE F
OpenStandardInputmmF W
(mmW X
)mmX Y
)mmY Z
)mmZ [
{nn 
passwordpp  
=pp! "
srpp# %
.pp% &
ReadLinepp& .
(pp. /
)pp/ 0
;pp0 1
}qq 
}rr 
}ss 
catchtt 
(tt 
IOExceptiontt 
exceptIOtt '
)tt' (
{uu 
IOvv 
.vv 
Loggervv 
.vv 
Logvv 
(vv 
NLogvv "
.vv" #
LogLevelvv# +
.vv+ ,
Warnvv, 0
,vv0 1
$strvv2 M
,vvM N
exceptIOvvO W
)vvW X
;vvX Y
}ww 
finallyxx 
{yy 
tryzz 
{{{ 
if|| 
(|| 
listener||  
!=||! #
null||$ (
)||( )
{}} 
listener~~  
.~~  !
Stop~~! %
(~~% &
)~~& '
;~~' (
} 
}
ÄÄ 
catch
ÅÅ 
(
ÅÅ 
IOException
ÅÅ "
exceptIO
ÅÅ# +
)
ÅÅ+ ,
{
ÇÇ 
IO
ÉÉ 
.
ÉÉ 
Logger
ÉÉ 
.
ÉÉ 
Log
ÉÉ !
(
ÉÉ! "
NLog
ÉÉ" &
.
ÉÉ& '
LogLevel
ÉÉ' /
.
ÉÉ/ 0
Warn
ÉÉ0 4
,
ÉÉ4 5
$str
ÉÉ6 Q
,
ÉÉQ R
exceptIO
ÉÉS [
)
ÉÉ[ \
;
ÉÉ\ ]
}
ÑÑ 
}
ÖÖ 
}
ÜÜ 	
string
áá 
[
áá 
]
áá 
passwordArray
áá 
=
áá  
new
áá! $
string
áá% +
[
áá+ ,
$num
áá, -
]
áá- .
;
áá. /
passwordArray
àà 
[
àà 
$num
àà 
]
àà 
=
àà 
password
àà #
;
àà# $N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_66b
ââ H
.
ââH I
GoodB2GSink
ââI T
(
ââT U
passwordArray
ââU b
)
ââd e
;
ââe f
}
ää 
}åå 
}çç ù;
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_66b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_66b F
{ 
public 

static 
void 
BadSink 
( 
string %
[% &
]& '
passwordArray( 5
)6 7
{   
string!! 
password!! 
=!! 
passwordArray!! '
[!!' (
$num!!( )
]!!) *
;!!* +
try"" 
{## 	
using%% 
(%% 
SqlConnection%%  

connection%%! +
=%%, -
new%%. 1
SqlConnection%%2 ?
(%%? @
$str%%@ v
+%%w x
$str%%y }
+%%~ 
$str
%%Ä å
+
%%ç é
password
%%è ó
)
%%ó ò
)
%%ò ô
{&& 

connection'' 
.'' 
Open'' 
(''  
)''  !
;''! "
using(( 
((( 

SqlCommand(( !
command((" )
=((* +
new((, /

SqlCommand((0 :
(((: ;
$str((; U
,((U V

connection((W a
)((a b
)((b c
{)) 
command** 
.** 
ExecuteNonQuery** +
(**+ ,
)**, -
;**- .
}++ 
},, 
}-- 	
catch.. 
(.. 
SqlException.. 
	exceptSql.. %
)..% &
{// 	
IO00 
.00 
Logger00 
.00 
Log00 
(00 
NLog00 
.00 
LogLevel00 '
.00' (
Warn00( ,
,00, -
$str00. N
,00N O
	exceptSql00P Y
)00Y Z
;00Z [
}11 	
}22 
public77 

static77 
void77 
GoodG2BSink77 "
(77" #
string77# )
[77) *
]77* +
passwordArray77, 9
)77: ;
{88 
string99 
password99 
=99 
passwordArray99 '
[99' (
$num99( )
]99) *
;99* +
try:: 
{;; 	
using== 
(== 
SqlConnection==  

connection==! +
===, -
new==. 1
SqlConnection==2 ?
(==? @
$str==@ v
+==w x
$str==y }
+==~ 
$str
==Ä å
+
==ç é
password
==è ó
)
==ó ò
)
==ò ô
{>> 

connection?? 
.?? 
Open?? 
(??  
)??  !
;??! "
using@@ 
(@@ 

SqlCommand@@ !
command@@" )
=@@* +
new@@, /

SqlCommand@@0 :
(@@: ;
$str@@; U
,@@U V

connection@@W a
)@@a b
)@@b c
{AA 
commandBB 
.BB 
ExecuteNonQueryBB +
(BB+ ,
)BB, -
;BB- .
}CC 
}DD 
}EE 	
catchFF 
(FF 
SqlExceptionFF 
	exceptSqlFF %
)FF% &
{GG 	
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH 
.HH 
LogLevelHH '
.HH' (
WarnHH( ,
,HH, -
$strHH. N
,HHN O
	exceptSqlHHP Y
)HHY Z
;HHZ [
}II 	
}JJ 
publicMM 

staticMM 
voidMM 
GoodB2GSinkMM "
(MM" #
stringMM# )
[MM) *
]MM* +
passwordArrayMM, 9
)MM: ;
{NN 
stringOO 
passwordOO 
=OO 
passwordArrayOO '
[OO' (
$numOO( )
]OO) *
;OO* +
ifPP 

(PP 
passwordPP 
!=PP 
nullPP 
)PP 
{QQ 	
{SS 
usingTT 
(TT $
AesCryptoServiceProviderTT /
aesAlgTT0 6
=TT7 8
newTT9 <$
AesCryptoServiceProviderTT= U
(TTU V
)TTV W
)TTW X
{UU 
aesAlgVV 
.VV 
PaddingVV "
=VV# $
PaddingModeVV% 0
.VV0 1
NoneVV1 5
;VV5 6
aesAlgWW 
.WW 
KeyWW 
=WW  
EncodingWW! )
.WW) *
UTF8WW* .
.WW. /
GetBytesWW/ 7
(WW7 8
$strWW8 J
)WWJ K
;WWK L
ICryptoTransformYY $
	decryptorYY% .
=YY/ 0
aesAlgYY1 7
.YY7 8
CreateDecryptorYY8 G
(YYG H
aesAlgYYH N
.YYN O
KeyYYO R
,YYR S
aesAlgYYT Z
.YYZ [
IVYY[ ]
)YY] ^
;YY^ _
using[[ 
([[ 
MemoryStream[[ '
	msDecrypt[[( 1
=[[2 3
new[[4 7
MemoryStream[[8 D
([[D E
Encoding[[E M
.[[M N
UTF8[[N R
.[[R S
GetBytes[[S [
([[[ \
password[[\ d
)[[d e
)[[e f
)[[f g
{\\ 
using]] 
(]] 
CryptoStream]] +
	csDecrypt]], 5
=]]6 7
new]]8 ;
CryptoStream]]< H
(]]H I
	msDecrypt]]I R
,]]R S
	decryptor]]T ]
,]]] ^
CryptoStreamMode]]_ o
.]]o p
Read]]p t
)]]t u
)]]u v
{^^ 
using__ !
(__" #
StreamReader__# /
	srDecrypt__0 9
=__: ;
new__< ?
StreamReader__@ L
(__L M
	csDecrypt__M V
)__V W
)__W X
{`` 
passwordcc  (
=cc) *
	srDecryptcc+ 4
.cc4 5
	ReadToEndcc5 >
(cc> ?
)cc? @
;cc@ A
}dd 
}ee 
}ff 
}gg 
}hh 
tryii 
{jj 
usingll 
(ll 
SqlConnectionll $

connectionll% /
=ll0 1
newll2 5
SqlConnectionll6 C
(llC D
$strllD z
+ll{ |
$str	ll} Å
+
llÇ É
$str
llÑ ê
+
llë í
password
llì õ
)
llõ ú
)
llú ù
{mm 

connectionnn 
.nn 
Opennn #
(nn# $
)nn$ %
;nn% &
usingoo 
(oo 

SqlCommandoo %
commandoo& -
=oo. /
newoo0 3

SqlCommandoo4 >
(oo> ?
$stroo? Y
,ooY Z

connectionoo[ e
)ooe f
)oof g
{pp 
commandqq 
.qq  
ExecuteNonQueryqq  /
(qq/ 0
)qq0 1
;qq1 2
}rr 
}ss 
}tt 
catchuu 
(uu 
SqlExceptionuu 
	exceptSqluu  )
)uu) *
{vv 
IOww 
.ww 
Loggerww 
.ww 
Logww 
(ww 
NLogww "
.ww" #
LogLevelww# +
.ww+ ,
Warnww, 0
,ww0 1
$strww2 R
,wwR S
	exceptSqlwwT ]
)ww] ^
;ww^ _
}xx 
}yy 	
}zz 
}|| 
}}} …>
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_67a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_67a F
:G H
AbstractTestCaseI Y
{ 
public 

class 
	Container 
{ 
public   
string   
containerOne   "
;  " #
}!! 
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
string%% 
password%% 
;%% 
password&& 
=&& 
$str&& 
;&& 
{(( 	
TcpListener)) 
listener))  
=))! "
null))# '
;))' (
try** 
{++ 
listener-- 
=-- 
new-- 
TcpListener-- *
(--* +
	IPAddress--+ 4
.--4 5
Parse--5 :
(--: ;
$str--; G
)--G H
,--H I
$num--J O
)--O P
;--P Q
listener.. 
... 
Start.. 
(.. 
)..  
;..  !
using// 
(// 
	TcpClient//  
tcpConn//! (
=//) *
listener//+ 3
.//3 4
AcceptTcpClient//4 C
(//C D
)//D E
)//E F
{00 
using11 
(11 
StreamReader11 '
sr11( *
=11+ ,
new11- 0
StreamReader111 =
(11= >
Console11> E
.11E F
OpenStandardInput11F W
(11W X
)11X Y
)11Y Z
)11Z [
{22 
password44  
=44! "
sr44# %
.44% &
ReadLine44& .
(44. /
)44/ 0
;440 1
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
$str::2 M
,::M N
exceptIO::O W
)::W X
;::X Y
};; 
finally<< 
{== 
try>> 
{?? 
if@@ 
(@@ 
listener@@  
!=@@! #
null@@$ (
)@@( )
{AA 
listenerBB  
.BB  !
StopBB! %
(BB% &
)BB& '
;BB' (
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE "
exceptIOEE# +
)EE+ ,
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG !
(GG! "
NLogGG" &
.GG& '
LogLevelGG' /
.GG/ 0
WarnGG0 4
,GG4 5
$strGG6 Q
,GGQ R
exceptIOGGS [
)GG[ \
;GG\ ]
}HH 
}II 
}JJ 	
	ContainerKK 
passwordContainerKK #
=KK$ %
newKK& )
	ContainerKK* 3
(KK3 4
)KK4 5
;KK5 6
passwordContainerLL 
.LL 
containerOneLL &
=LL' (
passwordLL) 1
;LL1 2L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_67bMM H
.MMH I
BadSinkMMI P
(MMP Q
passwordContainerMMQ b
)MMd e
;MMe f
}NN 
publicQQ 

overrideQQ 
voidQQ 
GoodQQ 
(QQ 
)QQ 
{RR 
GoodG2BSS 
(SS 
)SS 
;SS 
GoodB2GTT 
(TT 
)TT 
;TT 
}UU 
privateXX 
staticXX 
voidXX 
GoodG2BXX 
(XX  
)XX  !
{YY 
stringZZ 
passwordZZ 
;ZZ 
password]] 
=]] 
$str]] "
;]]" #
	Container^^ 
passwordContainer^^ #
=^^$ %
new^^& )
	Container^^* 3
(^^3 4
)^^4 5
;^^5 6
passwordContainer__ 
.__ 
containerOne__ &
=__' (
password__) 1
;__1 2L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_67b`` H
.``H I
GoodG2BSink``I T
(``T U
passwordContainer``U f
)``h i
;``i j
}aa 
privatedd 
staticdd 
voiddd 
GoodB2Gdd 
(dd  
)dd  !
{ee 
stringff 
passwordff 
;ff 
passwordgg 
=gg 
$strgg 
;gg 
{ii 	
TcpListenerjj 
listenerjj  
=jj! "
nulljj# '
;jj' (
trykk 
{ll 
listenernn 
=nn 
newnn 
TcpListenernn *
(nn* +
	IPAddressnn+ 4
.nn4 5
Parsenn5 :
(nn: ;
$strnn; G
)nnG H
,nnH I
$numnnJ O
)nnO P
;nnP Q
listeneroo 
.oo 
Startoo 
(oo 
)oo  
;oo  !
usingpp 
(pp 
	TcpClientpp  
tcpConnpp! (
=pp) *
listenerpp+ 3
.pp3 4
AcceptTcpClientpp4 C
(ppC D
)ppD E
)ppE F
{qq 
usingrr 
(rr 
StreamReaderrr '
srrr( *
=rr+ ,
newrr- 0
StreamReaderrr1 =
(rr= >
Consolerr> E
.rrE F
OpenStandardInputrrF W
(rrW X
)rrX Y
)rrY Z
)rrZ [
{ss 
passworduu  
=uu! "
sruu# %
.uu% &
ReadLineuu& .
(uu. /
)uu/ 0
;uu0 1
}vv 
}ww 
}xx 
catchyy 
(yy 
IOExceptionyy 
exceptIOyy '
)yy' (
{zz 
IO{{ 
.{{ 
Logger{{ 
.{{ 
Log{{ 
({{ 
NLog{{ "
.{{" #
LogLevel{{# +
.{{+ ,
Warn{{, 0
,{{0 1
$str{{2 M
,{{M N
exceptIO{{O W
){{W X
;{{X Y
}|| 
finally}} 
{~~ 
try 
{
ÄÄ 
if
ÅÅ 
(
ÅÅ 
listener
ÅÅ  
!=
ÅÅ! #
null
ÅÅ$ (
)
ÅÅ( )
{
ÇÇ 
listener
ÉÉ  
.
ÉÉ  !
Stop
ÉÉ! %
(
ÉÉ% &
)
ÉÉ& '
;
ÉÉ' (
}
ÑÑ 
}
ÖÖ 
catch
ÜÜ 
(
ÜÜ 
IOException
ÜÜ "
exceptIO
ÜÜ# +
)
ÜÜ+ ,
{
áá 
IO
àà 
.
àà 
Logger
àà 
.
àà 
Log
àà !
(
àà! "
NLog
àà" &
.
àà& '
LogLevel
àà' /
.
àà/ 0
Warn
àà0 4
,
àà4 5
$str
àà6 Q
,
ààQ R
exceptIO
ààS [
)
àà[ \
;
àà\ ]
}
ââ 
}
ää 
}
ãã 	
	Container
åå 
passwordContainer
åå #
=
åå$ %
new
åå& )
	Container
åå* 3
(
åå3 4
)
åå4 5
;
åå5 6
passwordContainer
çç 
.
çç 
containerOne
çç &
=
çç' (
password
çç) 1
;
çç1 2N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_67b
éé H
.
ééH I
GoodB2GSink
ééI T
(
ééT U
passwordContainer
ééU f
)
ééh i
;
ééi j
}
èè 
}ëë 
}íí Í<
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_67b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_67b F
{ 
public 

static 
void 
BadSink 
( L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_67a _
._ `
	Container` i
passwordContainerj {
)| }
{   
string!! 
password!! 
=!! 
passwordContainer!! +
.!!+ ,
containerOne!!, 8
;!!8 9
try"" 
{## 	
using%% 
(%% 
SqlConnection%%  

connection%%! +
=%%, -
new%%. 1
SqlConnection%%2 ?
(%%? @
$str%%@ v
+%%w x
$str%%y }
+%%~ 
$str
%%Ä å
+
%%ç é
password
%%è ó
)
%%ó ò
)
%%ò ô
{&& 

connection'' 
.'' 
Open'' 
(''  
)''  !
;''! "
using(( 
((( 

SqlCommand(( !
command((" )
=((* +
new((, /

SqlCommand((0 :
(((: ;
$str((; U
,((U V

connection((W a
)((a b
)((b c
{)) 
command** 
.** 
ExecuteNonQuery** +
(**+ ,
)**, -
;**- .
}++ 
},, 
}-- 	
catch.. 
(.. 
SqlException.. 
	exceptSql.. %
)..% &
{// 	
IO00 
.00 
Logger00 
.00 
Log00 
(00 
NLog00 
.00 
LogLevel00 '
.00' (
Warn00( ,
,00, -
$str00. N
,00N O
	exceptSql00P Y
)00Y Z
;00Z [
}11 	
}22 
public77 

static77 
void77 
GoodG2BSink77 "
(77" #L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_67a77# c
.77c d
	Container77d m
passwordContainer77n 
)
77Ä Å
{88 
string99 
password99 
=99 
passwordContainer99 +
.99+ ,
containerOne99, 8
;998 9
try:: 
{;; 	
using== 
(== 
SqlConnection==  

connection==! +
===, -
new==. 1
SqlConnection==2 ?
(==? @
$str==@ v
+==w x
$str==y }
+==~ 
$str
==Ä å
+
==ç é
password
==è ó
)
==ó ò
)
==ò ô
{>> 

connection?? 
.?? 
Open?? 
(??  
)??  !
;??! "
using@@ 
(@@ 

SqlCommand@@ !
command@@" )
=@@* +
new@@, /

SqlCommand@@0 :
(@@: ;
$str@@; U
,@@U V

connection@@W a
)@@a b
)@@b c
{AA 
commandBB 
.BB 
ExecuteNonQueryBB +
(BB+ ,
)BB, -
;BB- .
}CC 
}DD 
}EE 	
catchFF 
(FF 
SqlExceptionFF 
	exceptSqlFF %
)FF% &
{GG 	
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH 
.HH 
LogLevelHH '
.HH' (
WarnHH( ,
,HH, -
$strHH. N
,HHN O
	exceptSqlHHP Y
)HHY Z
;HHZ [
}II 	
}JJ 
publicMM 

staticMM 
voidMM 
GoodB2GSinkMM "
(MM" #L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_67aMM# c
.MMc d
	ContainerMMd m
passwordContainerMMn 
)
MMÄ Å
{NN 
stringOO 
passwordOO 
=OO 
passwordContainerOO +
.OO+ ,
containerOneOO, 8
;OO8 9
ifPP 

(PP 
passwordPP 
!=PP 
nullPP 
)PP 
{QQ 	
{SS 
usingTT 
(TT $
AesCryptoServiceProviderTT /
aesAlgTT0 6
=TT7 8
newTT9 <$
AesCryptoServiceProviderTT= U
(TTU V
)TTV W
)TTW X
{UU 
aesAlgVV 
.VV 
PaddingVV "
=VV# $
PaddingModeVV% 0
.VV0 1
NoneVV1 5
;VV5 6
aesAlgWW 
.WW 
KeyWW 
=WW  
EncodingWW! )
.WW) *
UTF8WW* .
.WW. /
GetBytesWW/ 7
(WW7 8
$strWW8 J
)WWJ K
;WWK L
ICryptoTransformYY $
	decryptorYY% .
=YY/ 0
aesAlgYY1 7
.YY7 8
CreateDecryptorYY8 G
(YYG H
aesAlgYYH N
.YYN O
KeyYYO R
,YYR S
aesAlgYYT Z
.YYZ [
IVYY[ ]
)YY] ^
;YY^ _
using[[ 
([[ 
MemoryStream[[ '
	msDecrypt[[( 1
=[[2 3
new[[4 7
MemoryStream[[8 D
([[D E
Encoding[[E M
.[[M N
UTF8[[N R
.[[R S
GetBytes[[S [
([[[ \
password[[\ d
)[[d e
)[[e f
)[[f g
{\\ 
using]] 
(]] 
CryptoStream]] +
	csDecrypt]], 5
=]]6 7
new]]8 ;
CryptoStream]]< H
(]]H I
	msDecrypt]]I R
,]]R S
	decryptor]]T ]
,]]] ^
CryptoStreamMode]]_ o
.]]o p
Read]]p t
)]]t u
)]]u v
{^^ 
using__ !
(__" #
StreamReader__# /
	srDecrypt__0 9
=__: ;
new__< ?
StreamReader__@ L
(__L M
	csDecrypt__M V
)__V W
)__W X
{`` 
passwordcc  (
=cc) *
	srDecryptcc+ 4
.cc4 5
	ReadToEndcc5 >
(cc> ?
)cc? @
;cc@ A
}dd 
}ee 
}ff 
}gg 
}hh 
tryii 
{jj 
usingll 
(ll 
SqlConnectionll $

connectionll% /
=ll0 1
newll2 5
SqlConnectionll6 C
(llC D
$strllD z
+ll{ |
$str	ll} Å
+
llÇ É
$str
llÑ ê
+
llë í
password
llì õ
)
llõ ú
)
llú ù
{mm 

connectionnn 
.nn 
Opennn #
(nn# $
)nn$ %
;nn% &
usingoo 
(oo 

SqlCommandoo %
commandoo& -
=oo. /
newoo0 3

SqlCommandoo4 >
(oo> ?
$stroo? Y
,ooY Z

connectionoo[ e
)ooe f
)oof g
{pp 
commandqq 
.qq  
ExecuteNonQueryqq  /
(qq/ 0
)qq0 1
;qq1 2
}rr 
}ss 
}tt 
catchuu 
(uu 
SqlExceptionuu 
	exceptSqluu  )
)uu) *
{vv 
IOww 
.ww 
Loggerww 
.ww 
Logww 
(ww 
NLogww "
.ww" #
LogLevelww# +
.ww+ ,
Warnww, 0
,ww0 1
$strww2 R
,wwR S
	exceptSqlwwT ]
)ww] ^
;ww^ _
}xx 
}yy 	
}zz 
}|| 
}}} ≈4
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_68a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_68a F
:G H
AbstractTestCaseI Y
{ 
public 

static 
string 
password !
;! "
public   

override   
void   
Bad   
(   
)   
{!! 
password"" 
="" 
$str"" 
;"" 
{$$ 	
TcpListener%% 
listener%%  
=%%! "
null%%# '
;%%' (
try&& 
{'' 
listener)) 
=)) 
new)) 
TcpListener)) *
())* +
	IPAddress))+ 4
.))4 5
Parse))5 :
()): ;
$str)); G
)))G H
,))H I
$num))J O
)))O P
;))P Q
listener** 
.** 
Start** 
(** 
)**  
;**  !
using++ 
(++ 
	TcpClient++  
tcpConn++! (
=++) *
listener+++ 3
.++3 4
AcceptTcpClient++4 C
(++C D
)++D E
)++E F
{,, 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
Console--> E
.--E F
OpenStandardInput--F W
(--W X
)--X Y
)--Y Z
)--Z [
{.. 
password00  
=00! "
sr00# %
.00% &
ReadLine00& .
(00. /
)00/ 0
;000 1
}11 
}22 
}33 
catch44 
(44 
IOException44 
exceptIO44 '
)44' (
{55 
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 "
.66" #
LogLevel66# +
.66+ ,
Warn66, 0
,660 1
$str662 M
,66M N
exceptIO66O W
)66W X
;66X Y
}77 
finally88 
{99 
try:: 
{;; 
if<< 
(<< 
listener<<  
!=<<! #
null<<$ (
)<<( )
{== 
listener>>  
.>>  !
Stop>>! %
(>>% &
)>>& '
;>>' (
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
$strCC6 Q
,CCQ R
exceptIOCCS [
)CC[ \
;CC\ ]
}DD 
}EE 
}FF 	L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_68bGG H
.GGH I
BadSinkGGI P
(GGP Q
)GGQ R
;GGR S
}HH 
publicKK 

overrideKK 
voidKK 
GoodKK 
(KK 
)KK 
{LL 
GoodG2BMM 
(MM 
)MM 
;MM 
GoodB2GNN 
(NN 
)NN 
;NN 
}OO 
privateRR 
staticRR 
voidRR 
GoodG2BRR 
(RR  
)RR  !
{SS 
passwordVV 
=VV 
$strVV "
;VV" #L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_68bWW H
.WWH I
GoodG2BSinkWWI T
(WWT U
)WWU V
;WWV W
}XX 
private[[ 
static[[ 
void[[ 
GoodB2G[[ 
([[  
)[[  !
{\\ 
password]] 
=]] 
$str]] 
;]] 
{__ 	
TcpListener`` 
listener``  
=``! "
null``# '
;``' (
tryaa 
{bb 
listenerdd 
=dd 
newdd 
TcpListenerdd *
(dd* +
	IPAddressdd+ 4
.dd4 5
Parsedd5 :
(dd: ;
$strdd; G
)ddG H
,ddH I
$numddJ O
)ddO P
;ddP Q
listeneree 
.ee 
Startee 
(ee 
)ee  
;ee  !
usingff 
(ff 
	TcpClientff  
tcpConnff! (
=ff) *
listenerff+ 3
.ff3 4
AcceptTcpClientff4 C
(ffC D
)ffD E
)ffE F
{gg 
usinghh 
(hh 
StreamReaderhh '
srhh( *
=hh+ ,
newhh- 0
StreamReaderhh1 =
(hh= >
Consolehh> E
.hhE F
OpenStandardInputhhF W
(hhW X
)hhX Y
)hhY Z
)hhZ [
{ii 
passwordkk  
=kk! "
srkk# %
.kk% &
ReadLinekk& .
(kk. /
)kk/ 0
;kk0 1
}ll 
}mm 
}nn 
catchoo 
(oo 
IOExceptionoo 
exceptIOoo '
)oo' (
{pp 
IOqq 
.qq 
Loggerqq 
.qq 
Logqq 
(qq 
NLogqq "
.qq" #
LogLevelqq# +
.qq+ ,
Warnqq, 0
,qq0 1
$strqq2 M
,qqM N
exceptIOqqO W
)qqW X
;qqX Y
}rr 
finallyss 
{tt 
tryuu 
{vv 
ifww 
(ww 
listenerww  
!=ww! #
nullww$ (
)ww( )
{xx 
listeneryy  
.yy  !
Stopyy! %
(yy% &
)yy& '
;yy' (
}zz 
}{{ 
catch|| 
(|| 
IOException|| "
exceptIO||# +
)||+ ,
{}} 
IO~~ 
.~~ 
Logger~~ 
.~~ 
Log~~ !
(~~! "
NLog~~" &
.~~& '
LogLevel~~' /
.~~/ 0
Warn~~0 4
,~~4 5
$str~~6 Q
,~~Q R
exceptIO~~S [
)~~[ \
;~~\ ]
} 
}
ÄÄ 
}
ÅÅ 	N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_68b
ÇÇ H
.
ÇÇH I
GoodB2GSink
ÇÇI T
(
ÇÇT U
)
ÇÇU V
;
ÇÇV W
}
ÉÉ 
}ÖÖ 
}ÜÜ Æ:
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_68b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_68b F
{ 
public 

static 
void 
BadSink 
( 
)  
{   
string!! 
password!! 
=!! L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_68a!! Z
.!!Z [
password!![ c
;!!c d
try"" 
{## 	
using%% 
(%% 
SqlConnection%%  

connection%%! +
=%%, -
new%%. 1
SqlConnection%%2 ?
(%%? @
$str%%@ v
+%%w x
$str%%y }
+%%~ 
$str
%%Ä å
+
%%ç é
password
%%è ó
)
%%ó ò
)
%%ò ô
{&& 

connection'' 
.'' 
Open'' 
(''  
)''  !
;''! "
using(( 
((( 

SqlCommand(( !
command((" )
=((* +
new((, /

SqlCommand((0 :
(((: ;
$str((; U
,((U V

connection((W a
)((a b
)((b c
{)) 
command** 
.** 
ExecuteNonQuery** +
(**+ ,
)**, -
;**- .
}++ 
},, 
}-- 	
catch.. 
(.. 
SqlException.. 
	exceptSql.. %
)..% &
{// 	
IO00 
.00 
Logger00 
.00 
Log00 
(00 
NLog00 
.00 
LogLevel00 '
.00' (
Warn00( ,
,00, -
$str00. N
,00N O
	exceptSql00P Y
)00Y Z
;00Z [
}11 	
}22 
public77 

static77 
void77 
GoodG2BSink77 "
(77" #
)77# $
{88 
string99 
password99 
=99 L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_68a99 Z
.99Z [
password99[ c
;99c d
try:: 
{;; 	
using== 
(== 
SqlConnection==  

connection==! +
===, -
new==. 1
SqlConnection==2 ?
(==? @
$str==@ v
+==w x
$str==y }
+==~ 
$str
==Ä å
+
==ç é
password
==è ó
)
==ó ò
)
==ò ô
{>> 

connection?? 
.?? 
Open?? 
(??  
)??  !
;??! "
using@@ 
(@@ 

SqlCommand@@ !
command@@" )
=@@* +
new@@, /

SqlCommand@@0 :
(@@: ;
$str@@; U
,@@U V

connection@@W a
)@@a b
)@@b c
{AA 
commandBB 
.BB 
ExecuteNonQueryBB +
(BB+ ,
)BB, -
;BB- .
}CC 
}DD 
}EE 	
catchFF 
(FF 
SqlExceptionFF 
	exceptSqlFF %
)FF% &
{GG 	
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH 
.HH 
LogLevelHH '
.HH' (
WarnHH( ,
,HH, -
$strHH. N
,HHN O
	exceptSqlHHP Y
)HHY Z
;HHZ [
}II 	
}JJ 
publicMM 

staticMM 
voidMM 
GoodB2GSinkMM "
(MM" #
)MM# $
{NN 
stringOO 
passwordOO 
=OO L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_68aOO Z
.OOZ [
passwordOO[ c
;OOc d
ifPP 

(PP 
passwordPP 
!=PP 
nullPP 
)PP 
{QQ 	
{SS 
usingTT 
(TT $
AesCryptoServiceProviderTT /
aesAlgTT0 6
=TT7 8
newTT9 <$
AesCryptoServiceProviderTT= U
(TTU V
)TTV W
)TTW X
{UU 
aesAlgVV 
.VV 
PaddingVV "
=VV# $
PaddingModeVV% 0
.VV0 1
NoneVV1 5
;VV5 6
aesAlgWW 
.WW 
KeyWW 
=WW  
EncodingWW! )
.WW) *
UTF8WW* .
.WW. /
GetBytesWW/ 7
(WW7 8
$strWW8 J
)WWJ K
;WWK L
ICryptoTransformYY $
	decryptorYY% .
=YY/ 0
aesAlgYY1 7
.YY7 8
CreateDecryptorYY8 G
(YYG H
aesAlgYYH N
.YYN O
KeyYYO R
,YYR S
aesAlgYYT Z
.YYZ [
IVYY[ ]
)YY] ^
;YY^ _
using[[ 
([[ 
MemoryStream[[ '
	msDecrypt[[( 1
=[[2 3
new[[4 7
MemoryStream[[8 D
([[D E
Encoding[[E M
.[[M N
UTF8[[N R
.[[R S
GetBytes[[S [
([[[ \
password[[\ d
)[[d e
)[[e f
)[[f g
{\\ 
using]] 
(]] 
CryptoStream]] +
	csDecrypt]], 5
=]]6 7
new]]8 ;
CryptoStream]]< H
(]]H I
	msDecrypt]]I R
,]]R S
	decryptor]]T ]
,]]] ^
CryptoStreamMode]]_ o
.]]o p
Read]]p t
)]]t u
)]]u v
{^^ 
using__ !
(__" #
StreamReader__# /
	srDecrypt__0 9
=__: ;
new__< ?
StreamReader__@ L
(__L M
	csDecrypt__M V
)__V W
)__W X
{`` 
passwordcc  (
=cc) *
	srDecryptcc+ 4
.cc4 5
	ReadToEndcc5 >
(cc> ?
)cc? @
;cc@ A
}dd 
}ee 
}ff 
}gg 
}hh 
tryii 
{jj 
usingll 
(ll 
SqlConnectionll $

connectionll% /
=ll0 1
newll2 5
SqlConnectionll6 C
(llC D
$strllD z
+ll{ |
$str	ll} Å
+
llÇ É
$str
llÑ ê
+
llë í
password
llì õ
)
llõ ú
)
llú ù
{mm 

connectionnn 
.nn 
Opennn #
(nn# $
)nn$ %
;nn% &
usingoo 
(oo 

SqlCommandoo %
commandoo& -
=oo. /
newoo0 3

SqlCommandoo4 >
(oo> ?
$stroo? Y
,ooY Z

connectionoo[ e
)ooe f
)oof g
{pp 
commandqq 
.qq  
ExecuteNonQueryqq  /
(qq/ 0
)qq0 1
;qq1 2
}rr 
}ss 
}tt 
catchuu 
(uu 
SqlExceptionuu 
	exceptSqluu  )
)uu) *
{vv 
IOww 
.ww 
Loggerww 
.ww 
Logww 
(ww 
NLogww "
.ww" #
LogLevelww# +
.ww+ ,
Warnww, 0
,ww0 1
$strww2 R
,wwR S
	exceptSqlwwT ]
)ww] ^
;ww^ _
}xx 
}yy 	
}zz 
}|| 
}}} Ò6
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_71a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_71a F
:G H
AbstractTestCaseI Y
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string   
password   
;   
password!! 
=!! 
$str!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try%% 
{&& 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using,, 
(,, 
StreamReader,, '
sr,,( *
=,,+ ,
new,,- 0
StreamReader,,1 =
(,,= >
Console,,> E
.,,E F
OpenStandardInput,,F W
(,,W X
),,X Y
),,Y Z
),,Z [
{-- 
password//  
=//! "
sr//# %
.//% &
ReadLine//& .
(//. /
)/// 0
;//0 1
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
$str552 M
,55M N
exceptIO55O W
)55W X
;55X Y
}66 
finally77 
{88 
try99 
{:: 
if;; 
(;; 
listener;;  
!=;;! #
null;;$ (
);;( )
{<< 
listener==  
.==  !
Stop==! %
(==% &
)==& '
;==' (
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ "
exceptIO@@# +
)@@+ ,
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB !
(BB! "
NLogBB" &
.BB& '
LogLevelBB' /
.BB/ 0
WarnBB0 4
,BB4 5
$strBB6 Q
,BBQ R
exceptIOBBS [
)BB[ \
;BB\ ]
}CC 
}DD 
}EE 	L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_71bFF H
.FFH I
BadSinkFFI P
(FFP Q
(FFQ R
ObjectFFR X
)FFX Y
passwordFFY a
)FFc d
;FFd e
}GG 
publicJJ 

overrideJJ 
voidJJ 
GoodJJ 
(JJ 
)JJ 
{KK 
GoodG2BLL 
(LL 
)LL 
;LL 
GoodB2GMM 
(MM 
)MM 
;MM 
}NN 
privateQQ 
staticQQ 
voidQQ 
GoodG2BQQ 
(QQ  
)QQ  !
{RR 
stringSS 
passwordSS 
;SS 
passwordVV 
=VV 
$strVV "
;VV" #L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_71bWW H
.WWH I
GoodG2BSinkWWI T
(WWT U
(WWU V
ObjectWWV \
)WW\ ]
passwordWW] e
)WWg h
;WWh i
}XX 
private[[ 
static[[ 
void[[ 
GoodB2G[[ 
([[  
)[[  !
{\\ 
string]] 
password]] 
;]] 
password^^ 
=^^ 
$str^^ 
;^^ 
{`` 	
TcpListeneraa 
listeneraa  
=aa! "
nullaa# '
;aa' (
trybb 
{cc 
listeneree 
=ee 
newee 
TcpListeneree *
(ee* +
	IPAddressee+ 4
.ee4 5
Parseee5 :
(ee: ;
$stree; G
)eeG H
,eeH I
$numeeJ O
)eeO P
;eeP Q
listenerff 
.ff 
Startff 
(ff 
)ff  
;ff  !
usinggg 
(gg 
	TcpClientgg  
tcpConngg! (
=gg) *
listenergg+ 3
.gg3 4
AcceptTcpClientgg4 C
(ggC D
)ggD E
)ggE F
{hh 
usingii 
(ii 
StreamReaderii '
srii( *
=ii+ ,
newii- 0
StreamReaderii1 =
(ii= >
Consoleii> E
.iiE F
OpenStandardInputiiF W
(iiW X
)iiX Y
)iiY Z
)iiZ [
{jj 
passwordll  
=ll! "
srll# %
.ll% &
ReadLinell& .
(ll. /
)ll/ 0
;ll0 1
}mm 
}nn 
}oo 
catchpp 
(pp 
IOExceptionpp 
exceptIOpp '
)pp' (
{qq 
IOrr 
.rr 
Loggerrr 
.rr 
Logrr 
(rr 
NLogrr "
.rr" #
LogLevelrr# +
.rr+ ,
Warnrr, 0
,rr0 1
$strrr2 M
,rrM N
exceptIOrrO W
)rrW X
;rrX Y
}ss 
finallytt 
{uu 
tryvv 
{ww 
ifxx 
(xx 
listenerxx  
!=xx! #
nullxx$ (
)xx( )
{yy 
listenerzz  
.zz  !
Stopzz! %
(zz% &
)zz& '
;zz' (
}{{ 
}|| 
catch}} 
(}} 
IOException}} "
exceptIO}}# +
)}}+ ,
{~~ 
IO 
. 
Logger 
. 
Log !
(! "
NLog" &
.& '
LogLevel' /
./ 0
Warn0 4
,4 5
$str6 Q
,Q R
exceptIOS [
)[ \
;\ ]
}
ÄÄ 
}
ÅÅ 
}
ÇÇ 	N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_71b
ÉÉ H
.
ÉÉH I
GoodB2GSink
ÉÉI T
(
ÉÉT U
(
ÉÉU V
Object
ÉÉV \
)
ÉÉ\ ]
password
ÉÉ] e
)
ÉÉg h
;
ÉÉh i
}
ÑÑ 
}ÜÜ 
}áá œ:
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_71b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_71b F
{ 
public   

static   
void   
BadSink   
(   
Object   %
passwordObject  & 4
)  5 6
{!! 
string"" 
password"" 
="" 
("" 
string"" !
)""! "
passwordObject""" 0
;""0 1
try## 
{$$ 	
using&& 
(&& 
SqlConnection&&  

connection&&! +
=&&, -
new&&. 1
SqlConnection&&2 ?
(&&? @
$str&&@ v
+&&w x
$str&&y }
+&&~ 
$str
&&Ä å
+
&&ç é
password
&&è ó
)
&&ó ò
)
&&ò ô
{'' 

connection(( 
.(( 
Open(( 
(((  
)((  !
;((! "
using)) 
()) 

SqlCommand)) !
command))" )
=))* +
new)), /

SqlCommand))0 :
()): ;
$str)); U
,))U V

connection))W a
)))a b
)))b c
{** 
command++ 
.++ 
ExecuteNonQuery++ +
(+++ ,
)++, -
;++- .
},, 
}-- 
}.. 	
catch// 
(// 
SqlException// 
	exceptSql// %
)//% &
{00 	
IO11 
.11 
Logger11 
.11 
Log11 
(11 
NLog11 
.11 
LogLevel11 '
.11' (
Warn11( ,
,11, -
$str11. N
,11N O
	exceptSql11P Y
)11Y Z
;11Z [
}22 	
}33 
public88 

static88 
void88 
GoodG2BSink88 "
(88" #
Object88# )
passwordObject88* 8
)889 :
{99 
string:: 
password:: 
=:: 
(:: 
string:: !
)::! "
passwordObject::" 0
;::0 1
try;; 
{<< 	
using>> 
(>> 
SqlConnection>>  

connection>>! +
=>>, -
new>>. 1
SqlConnection>>2 ?
(>>? @
$str>>@ v
+>>w x
$str>>y }
+>>~ 
$str
>>Ä å
+
>>ç é
password
>>è ó
)
>>ó ò
)
>>ò ô
{?? 

connection@@ 
.@@ 
Open@@ 
(@@  
)@@  !
;@@! "
usingAA 
(AA 

SqlCommandAA !
commandAA" )
=AA* +
newAA, /

SqlCommandAA0 :
(AA: ;
$strAA; U
,AAU V

connectionAAW a
)AAa b
)AAb c
{BB 
commandCC 
.CC 
ExecuteNonQueryCC +
(CC+ ,
)CC, -
;CC- .
}DD 
}EE 
}FF 	
catchGG 
(GG 
SqlExceptionGG 
	exceptSqlGG %
)GG% &
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. N
,IIN O
	exceptSqlIIP Y
)IIY Z
;IIZ [
}JJ 	
}KK 
publicNN 

staticNN 
voidNN 
GoodB2GSinkNN "
(NN" #
ObjectNN# )
passwordObjectNN* 8
)NN9 :
{OO 
stringPP 
passwordPP 
=PP 
(PP 
stringPP !
)PP! "
passwordObjectPP" 0
;PP0 1
ifQQ 

(QQ 
passwordQQ 
!=QQ 
nullQQ 
)QQ 
{RR 	
{TT 
usingUU 
(UU $
AesCryptoServiceProviderUU /
aesAlgUU0 6
=UU7 8
newUU9 <$
AesCryptoServiceProviderUU= U
(UUU V
)UUV W
)UUW X
{VV 
aesAlgWW 
.WW 
PaddingWW "
=WW# $
PaddingModeWW% 0
.WW0 1
NoneWW1 5
;WW5 6
aesAlgXX 
.XX 
KeyXX 
=XX  
EncodingXX! )
.XX) *
UTF8XX* .
.XX. /
GetBytesXX/ 7
(XX7 8
$strXX8 J
)XXJ K
;XXK L
ICryptoTransformZZ $
	decryptorZZ% .
=ZZ/ 0
aesAlgZZ1 7
.ZZ7 8
CreateDecryptorZZ8 G
(ZZG H
aesAlgZZH N
.ZZN O
KeyZZO R
,ZZR S
aesAlgZZT Z
.ZZZ [
IVZZ[ ]
)ZZ] ^
;ZZ^ _
using\\ 
(\\ 
MemoryStream\\ '
	msDecrypt\\( 1
=\\2 3
new\\4 7
MemoryStream\\8 D
(\\D E
Encoding\\E M
.\\M N
UTF8\\N R
.\\R S
GetBytes\\S [
(\\[ \
password\\\ d
)\\d e
)\\e f
)\\f g
{]] 
using^^ 
(^^ 
CryptoStream^^ +
	csDecrypt^^, 5
=^^6 7
new^^8 ;
CryptoStream^^< H
(^^H I
	msDecrypt^^I R
,^^R S
	decryptor^^T ]
,^^] ^
CryptoStreamMode^^_ o
.^^o p
Read^^p t
)^^t u
)^^u v
{__ 
using`` !
(``" #
StreamReader``# /
	srDecrypt``0 9
=``: ;
new``< ?
StreamReader``@ L
(``L M
	csDecrypt``M V
)``V W
)``W X
{aa 
passworddd  (
=dd) *
	srDecryptdd+ 4
.dd4 5
	ReadToEnddd5 >
(dd> ?
)dd? @
;dd@ A
}ee 
}ff 
}gg 
}hh 
}ii 
tryjj 
{kk 
usingmm 
(mm 
SqlConnectionmm $

connectionmm% /
=mm0 1
newmm2 5
SqlConnectionmm6 C
(mmC D
$strmmD z
+mm{ |
$str	mm} Å
+
mmÇ É
$str
mmÑ ê
+
mmë í
password
mmì õ
)
mmõ ú
)
mmú ù
{nn 

connectionoo 
.oo 
Openoo #
(oo# $
)oo$ %
;oo% &
usingpp 
(pp 

SqlCommandpp %
commandpp& -
=pp. /
newpp0 3

SqlCommandpp4 >
(pp> ?
$strpp? Y
,ppY Z

connectionpp[ e
)ppe f
)ppf g
{qq 
commandrr 
.rr  
ExecuteNonQueryrr  /
(rr/ 0
)rr0 1
;rr1 2
}ss 
}tt 
}uu 
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv  )
)vv) *
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
	exceptSqlxxT ]
)xx] ^
;xx^ _
}yy 
}zz 	
}{{ 
}}} 
}~~ ≈F
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_72a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_72a F
:G H
AbstractTestCaseI Y
{ 
public 

override 
void 
Bad 
( 
) 
{   
string!! 
password!! 
;!! 
password"" 
="" 
$str"" 
;"" 
{$$ 	
TcpListener%% 
listener%%  
=%%! "
null%%# '
;%%' (
try&& 
{'' 
listener)) 
=)) 
new)) 
TcpListener)) *
())* +
	IPAddress))+ 4
.))4 5
Parse))5 :
()): ;
$str)); G
)))G H
,))H I
$num))J O
)))O P
;))P Q
listener** 
.** 
Start** 
(** 
)**  
;**  !
using++ 
(++ 
	TcpClient++  
tcpConn++! (
=++) *
listener+++ 3
.++3 4
AcceptTcpClient++4 C
(++C D
)++D E
)++E F
{,, 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
Console--> E
.--E F
OpenStandardInput--F W
(--W X
)--X Y
)--Y Z
)--Z [
{.. 
password00  
=00! "
sr00# %
.00% &
ReadLine00& .
(00. /
)00/ 0
;000 1
}11 
}22 
}33 
catch44 
(44 
IOException44 
exceptIO44 '
)44' (
{55 
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 "
.66" #
LogLevel66# +
.66+ ,
Warn66, 0
,660 1
$str662 M
,66M N
exceptIO66O W
)66W X
;66X Y
}77 
finally88 
{99 
try:: 
{;; 
if<< 
(<< 
listener<<  
!=<<! #
null<<$ (
)<<( )
{== 
listener>>  
.>>  !
Stop>>! %
(>>% &
)>>& '
;>>' (
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
$strCC6 Q
,CCQ R
exceptIOCCS [
)CC[ \
;CC\ ]
}DD 
}EE 
}FF 	
	HashtableGG 
passwordHashtableGG #
=GG$ %
newGG& )
	HashtableGG* 3
(GG3 4
$numGG4 5
)GG5 6
;GG6 7
passwordHashtableHH 
.HH 
AddHH 
(HH 
$numHH 
,HH  
passwordHH! )
)HH) *
;HH* +
passwordHashtableII 
.II 
AddII 
(II 
$numII 
,II  
passwordII! )
)II) *
;II* +
passwordHashtableJJ 
.JJ 
AddJJ 
(JJ 
$numJJ 
,JJ  
passwordJJ! )
)JJ) *
;JJ* +L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_72bKK H
.KKH I
BadSinkKKI P
(KKP Q
passwordHashtableKKQ b
)KKd e
;KKe f
}LL 
publicOO 

overrideOO 
voidOO 
GoodOO 
(OO 
)OO 
{PP 
GoodG2BQQ 
(QQ 
)QQ 
;QQ 
GoodB2GRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
staticVV 
voidVV 
GoodG2BVV 
(VV  
)VV  !
{WW 
stringXX 
passwordXX 
;XX 
password[[ 
=[[ 
$str[[ "
;[[" #
	Hashtable\\ 
passwordHashtable\\ #
=\\$ %
new\\& )
	Hashtable\\* 3
(\\3 4
$num\\4 5
)\\5 6
;\\6 7
passwordHashtable]] 
.]] 
Add]] 
(]] 
$num]] 
,]]  
password]]! )
)]]) *
;]]* +
passwordHashtable^^ 
.^^ 
Add^^ 
(^^ 
$num^^ 
,^^  
password^^! )
)^^) *
;^^* +
passwordHashtable__ 
.__ 
Add__ 
(__ 
$num__ 
,__  
password__! )
)__) *
;__* +L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_72b`` H
.``H I
GoodG2BSink``I T
(``T U
passwordHashtable``U f
)``h i
;``i j
}aa 
privatedd 
staticdd 
voiddd 
GoodB2Gdd 
(dd  
)dd  !
{ee 
stringff 
passwordff 
;ff 
passwordgg 
=gg 
$strgg 
;gg 
{ii 	
TcpListenerjj 
listenerjj  
=jj! "
nulljj# '
;jj' (
trykk 
{ll 
listenernn 
=nn 
newnn 
TcpListenernn *
(nn* +
	IPAddressnn+ 4
.nn4 5
Parsenn5 :
(nn: ;
$strnn; G
)nnG H
,nnH I
$numnnJ O
)nnO P
;nnP Q
listeneroo 
.oo 
Startoo 
(oo 
)oo  
;oo  !
usingpp 
(pp 
	TcpClientpp  
tcpConnpp! (
=pp) *
listenerpp+ 3
.pp3 4
AcceptTcpClientpp4 C
(ppC D
)ppD E
)ppE F
{qq 
usingrr 
(rr 
StreamReaderrr '
srrr( *
=rr+ ,
newrr- 0
StreamReaderrr1 =
(rr= >
Consolerr> E
.rrE F
OpenStandardInputrrF W
(rrW X
)rrX Y
)rrY Z
)rrZ [
{ss 
passworduu  
=uu! "
sruu# %
.uu% &
ReadLineuu& .
(uu. /
)uu/ 0
;uu0 1
}vv 
}ww 
}xx 
catchyy 
(yy 
IOExceptionyy 
exceptIOyy '
)yy' (
{zz 
IO{{ 
.{{ 
Logger{{ 
.{{ 
Log{{ 
({{ 
NLog{{ "
.{{" #
LogLevel{{# +
.{{+ ,
Warn{{, 0
,{{0 1
$str{{2 M
,{{M N
exceptIO{{O W
){{W X
;{{X Y
}|| 
finally}} 
{~~ 
try 
{
ÄÄ 
if
ÅÅ 
(
ÅÅ 
listener
ÅÅ  
!=
ÅÅ! #
null
ÅÅ$ (
)
ÅÅ( )
{
ÇÇ 
listener
ÉÉ  
.
ÉÉ  !
Stop
ÉÉ! %
(
ÉÉ% &
)
ÉÉ& '
;
ÉÉ' (
}
ÑÑ 
}
ÖÖ 
catch
ÜÜ 
(
ÜÜ 
IOException
ÜÜ "
exceptIO
ÜÜ# +
)
ÜÜ+ ,
{
áá 
IO
àà 
.
àà 
Logger
àà 
.
àà 
Log
àà !
(
àà! "
NLog
àà" &
.
àà& '
LogLevel
àà' /
.
àà/ 0
Warn
àà0 4
,
àà4 5
$str
àà6 Q
,
ààQ R
exceptIO
ààS [
)
àà[ \
;
àà\ ]
}
ââ 
}
ää 
}
ãã 	
	Hashtable
åå 
passwordHashtable
åå #
=
åå$ %
new
åå& )
	Hashtable
åå* 3
(
åå3 4
$num
åå4 5
)
åå5 6
;
åå6 7
passwordHashtable
çç 
.
çç 
Add
çç 
(
çç 
$num
çç 
,
çç  
password
çç! )
)
çç) *
;
çç* +
passwordHashtable
éé 
.
éé 
Add
éé 
(
éé 
$num
éé 
,
éé  
password
éé! )
)
éé) *
;
éé* +
passwordHashtable
èè 
.
èè 
Add
èè 
(
èè 
$num
èè 
,
èè  
password
èè! )
)
èè) *
;
èè* +N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_72b
êê H
.
êêH I
GoodB2GSink
êêI T
(
êêT U
passwordHashtable
êêU f
)
êêh i
;
êêi j
}
ëë 
}ìì 
}îî ˙;
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_72b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_72b F
{ 
public   

static   
void   
BadSink   
(   
	Hashtable   (
passwordHashtable  ) :
)  ; <
{!! 
string"" 
password"" 
="" 
("" 
string"" !
)""! "
passwordHashtable""# 4
[""4 5
$num""5 6
]""6 7
;""7 8
try## 
{$$ 	
using&& 
(&& 
SqlConnection&&  

connection&&! +
=&&, -
new&&. 1
SqlConnection&&2 ?
(&&? @
$str&&@ v
+&&w x
$str&&y }
+&&~ 
$str
&&Ä å
+
&&ç é
password
&&è ó
)
&&ó ò
)
&&ò ô
{'' 

connection(( 
.(( 
Open(( 
(((  
)((  !
;((! "
using)) 
()) 

SqlCommand)) !
command))" )
=))* +
new)), /

SqlCommand))0 :
()): ;
$str)); U
,))U V

connection))W a
)))a b
)))b c
{** 
command++ 
.++ 
ExecuteNonQuery++ +
(+++ ,
)++, -
;++- .
},, 
}-- 
}.. 	
catch// 
(// 
SqlException// 
	exceptSql// %
)//% &
{00 	
IO11 
.11 
Logger11 
.11 
Log11 
(11 
NLog11 
.11 
LogLevel11 '
.11' (
Warn11( ,
,11, -
$str11. N
,11N O
	exceptSql11P Y
)11Y Z
;11Z [
}22 	
}33 
public88 

static88 
void88 
GoodG2BSink88 "
(88" #
	Hashtable88# ,
passwordHashtable88- >
)88? @
{99 
string:: 
password:: 
=:: 
(:: 
string:: !
)::! "
passwordHashtable::# 4
[::4 5
$num::5 6
]::6 7
;::7 8
try;; 
{<< 	
using>> 
(>> 
SqlConnection>>  

connection>>! +
=>>, -
new>>. 1
SqlConnection>>2 ?
(>>? @
$str>>@ v
+>>w x
$str>>y }
+>>~ 
$str
>>Ä å
+
>>ç é
password
>>è ó
)
>>ó ò
)
>>ò ô
{?? 

connection@@ 
.@@ 
Open@@ 
(@@  
)@@  !
;@@! "
usingAA 
(AA 

SqlCommandAA !
commandAA" )
=AA* +
newAA, /

SqlCommandAA0 :
(AA: ;
$strAA; U
,AAU V

connectionAAW a
)AAa b
)AAb c
{BB 
commandCC 
.CC 
ExecuteNonQueryCC +
(CC+ ,
)CC, -
;CC- .
}DD 
}EE 
}FF 	
catchGG 
(GG 
SqlExceptionGG 
	exceptSqlGG %
)GG% &
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. N
,IIN O
	exceptSqlIIP Y
)IIY Z
;IIZ [
}JJ 	
}KK 
publicNN 

staticNN 
voidNN 
GoodB2GSinkNN "
(NN" #
	HashtableNN# ,
passwordHashtableNN- >
)NN? @
{OO 
stringPP 
passwordPP 
=PP 
(PP 
stringPP !
)PP! "
passwordHashtablePP# 4
[PP4 5
$numPP5 6
]PP6 7
;PP7 8
ifQQ 

(QQ 
passwordQQ 
!=QQ 
nullQQ 
)QQ 
{RR 	
{TT 
usingUU 
(UU $
AesCryptoServiceProviderUU /
aesAlgUU0 6
=UU7 8
newUU9 <$
AesCryptoServiceProviderUU= U
(UUU V
)UUV W
)UUW X
{VV 
aesAlgWW 
.WW 
PaddingWW "
=WW# $
PaddingModeWW% 0
.WW0 1
NoneWW1 5
;WW5 6
aesAlgXX 
.XX 
KeyXX 
=XX  
EncodingXX! )
.XX) *
UTF8XX* .
.XX. /
GetBytesXX/ 7
(XX7 8
$strXX8 J
)XXJ K
;XXK L
ICryptoTransformZZ $
	decryptorZZ% .
=ZZ/ 0
aesAlgZZ1 7
.ZZ7 8
CreateDecryptorZZ8 G
(ZZG H
aesAlgZZH N
.ZZN O
KeyZZO R
,ZZR S
aesAlgZZT Z
.ZZZ [
IVZZ[ ]
)ZZ] ^
;ZZ^ _
using\\ 
(\\ 
MemoryStream\\ '
	msDecrypt\\( 1
=\\2 3
new\\4 7
MemoryStream\\8 D
(\\D E
Encoding\\E M
.\\M N
UTF8\\N R
.\\R S
GetBytes\\S [
(\\[ \
password\\\ d
)\\d e
)\\e f
)\\f g
{]] 
using^^ 
(^^ 
CryptoStream^^ +
	csDecrypt^^, 5
=^^6 7
new^^8 ;
CryptoStream^^< H
(^^H I
	msDecrypt^^I R
,^^R S
	decryptor^^T ]
,^^] ^
CryptoStreamMode^^_ o
.^^o p
Read^^p t
)^^t u
)^^u v
{__ 
using`` !
(``" #
StreamReader``# /
	srDecrypt``0 9
=``: ;
new``< ?
StreamReader``@ L
(``L M
	csDecrypt``M V
)``V W
)``W X
{aa 
passworddd  (
=dd) *
	srDecryptdd+ 4
.dd4 5
	ReadToEnddd5 >
(dd> ?
)dd? @
;dd@ A
}ee 
}ff 
}gg 
}hh 
}ii 
tryjj 
{kk 
usingmm 
(mm 
SqlConnectionmm $

connectionmm% /
=mm0 1
newmm2 5
SqlConnectionmm6 C
(mmC D
$strmmD z
+mm{ |
$str	mm} Å
+
mmÇ É
$str
mmÑ ê
+
mmë í
password
mmì õ
)
mmõ ú
)
mmú ù
{nn 

connectionoo 
.oo 
Openoo #
(oo# $
)oo$ %
;oo% &
usingpp 
(pp 

SqlCommandpp %
commandpp& -
=pp. /
newpp0 3

SqlCommandpp4 >
(pp> ?
$strpp? Y
,ppY Z

connectionpp[ e
)ppe f
)ppf g
{qq 
commandrr 
.rr  
ExecuteNonQueryrr  /
(rr/ 0
)rr0 1
;rr1 2
}ss 
}tt 
}uu 
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv  )
)vv) *
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
	exceptSqlxxT ]
)xx] ^
;xx^ _
}yy 
}zz 	
}{{ 
}}} 
}~~ …F
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_73a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_73a F
:G H
AbstractTestCaseI Y
{ 
public 

override 
void 
Bad 
( 
) 
{   
string!! 
password!! 
;!! 
password"" 
="" 
$str"" 
;"" 
{$$ 	
TcpListener%% 
listener%%  
=%%! "
null%%# '
;%%' (
try&& 
{'' 
listener)) 
=)) 
new)) 
TcpListener)) *
())* +
	IPAddress))+ 4
.))4 5
Parse))5 :
()): ;
$str)); G
)))G H
,))H I
$num))J O
)))O P
;))P Q
listener** 
.** 
Start** 
(** 
)**  
;**  !
using++ 
(++ 
	TcpClient++  
tcpConn++! (
=++) *
listener+++ 3
.++3 4
AcceptTcpClient++4 C
(++C D
)++D E
)++E F
{,, 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
Console--> E
.--E F
OpenStandardInput--F W
(--W X
)--X Y
)--Y Z
)--Z [
{.. 
password00  
=00! "
sr00# %
.00% &
ReadLine00& .
(00. /
)00/ 0
;000 1
}11 
}22 
}33 
catch44 
(44 
IOException44 
exceptIO44 '
)44' (
{55 
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 "
.66" #
LogLevel66# +
.66+ ,
Warn66, 0
,660 1
$str662 M
,66M N
exceptIO66O W
)66W X
;66X Y
}77 
finally88 
{99 
try:: 
{;; 
if<< 
(<< 
listener<<  
!=<<! #
null<<$ (
)<<( )
{== 
listener>>  
.>>  !
Stop>>! %
(>>% &
)>>& '
;>>' (
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
$strCC6 Q
,CCQ R
exceptIOCCS [
)CC[ \
;CC\ ]
}DD 
}EE 
}FF 	

LinkedListGG 
<GG 
stringGG 
>GG 
passwordLinkedListGG -
=GG. /
newGG0 3

LinkedListGG4 >
<GG> ?
stringGG? E
>GGE F
(GGF G
)GGG H
;GGH I
passwordLinkedListHH 
.HH 
AddLastHH "
(HH" #
passwordHH# +
)HH+ ,
;HH, -
passwordLinkedListII 
.II 
AddLastII "
(II" #
passwordII# +
)II+ ,
;II, -
passwordLinkedListJJ 
.JJ 
AddLastJJ "
(JJ" #
passwordJJ# +
)JJ+ ,
;JJ, -L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_73bKK H
.KKH I
BadSinkKKI P
(KKP Q
passwordLinkedListKKQ c
)KKe f
;KKf g
}LL 
publicOO 

overrideOO 
voidOO 
GoodOO 
(OO 
)OO 
{PP 
GoodG2BQQ 
(QQ 
)QQ 
;QQ 
GoodB2GRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
staticVV 
voidVV 
GoodG2BVV 
(VV  
)VV  !
{WW 
stringXX 
passwordXX 
;XX 
password[[ 
=[[ 
$str[[ "
;[[" #

LinkedList\\ 
<\\ 
string\\ 
>\\ 
passwordLinkedList\\ -
=\\. /
new\\0 3

LinkedList\\4 >
<\\> ?
string\\? E
>\\E F
(\\F G
)\\G H
;\\H I
passwordLinkedList]] 
.]] 
AddLast]] "
(]]" #
password]]# +
)]]+ ,
;]], -
passwordLinkedList^^ 
.^^ 
AddLast^^ "
(^^" #
password^^# +
)^^+ ,
;^^, -
passwordLinkedList__ 
.__ 
AddLast__ "
(__" #
password__# +
)__+ ,
;__, -L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_73b`` H
.``H I
GoodG2BSink``I T
(``T U
passwordLinkedList``U g
)``i j
;``j k
}aa 
privatedd 
staticdd 
voiddd 
GoodB2Gdd 
(dd  
)dd  !
{ee 
stringff 
passwordff 
;ff 
passwordgg 
=gg 
$strgg 
;gg 
{ii 	
TcpListenerjj 
listenerjj  
=jj! "
nulljj# '
;jj' (
trykk 
{ll 
listenernn 
=nn 
newnn 
TcpListenernn *
(nn* +
	IPAddressnn+ 4
.nn4 5
Parsenn5 :
(nn: ;
$strnn; G
)nnG H
,nnH I
$numnnJ O
)nnO P
;nnP Q
listeneroo 
.oo 
Startoo 
(oo 
)oo  
;oo  !
usingpp 
(pp 
	TcpClientpp  
tcpConnpp! (
=pp) *
listenerpp+ 3
.pp3 4
AcceptTcpClientpp4 C
(ppC D
)ppD E
)ppE F
{qq 
usingrr 
(rr 
StreamReaderrr '
srrr( *
=rr+ ,
newrr- 0
StreamReaderrr1 =
(rr= >
Consolerr> E
.rrE F
OpenStandardInputrrF W
(rrW X
)rrX Y
)rrY Z
)rrZ [
{ss 
passworduu  
=uu! "
sruu# %
.uu% &
ReadLineuu& .
(uu. /
)uu/ 0
;uu0 1
}vv 
}ww 
}xx 
catchyy 
(yy 
IOExceptionyy 
exceptIOyy '
)yy' (
{zz 
IO{{ 
.{{ 
Logger{{ 
.{{ 
Log{{ 
({{ 
NLog{{ "
.{{" #
LogLevel{{# +
.{{+ ,
Warn{{, 0
,{{0 1
$str{{2 M
,{{M N
exceptIO{{O W
){{W X
;{{X Y
}|| 
finally}} 
{~~ 
try 
{
ÄÄ 
if
ÅÅ 
(
ÅÅ 
listener
ÅÅ  
!=
ÅÅ! #
null
ÅÅ$ (
)
ÅÅ( )
{
ÇÇ 
listener
ÉÉ  
.
ÉÉ  !
Stop
ÉÉ! %
(
ÉÉ% &
)
ÉÉ& '
;
ÉÉ' (
}
ÑÑ 
}
ÖÖ 
catch
ÜÜ 
(
ÜÜ 
IOException
ÜÜ "
exceptIO
ÜÜ# +
)
ÜÜ+ ,
{
áá 
IO
àà 
.
àà 
Logger
àà 
.
àà 
Log
àà !
(
àà! "
NLog
àà" &
.
àà& '
LogLevel
àà' /
.
àà/ 0
Warn
àà0 4
,
àà4 5
$str
àà6 Q
,
ààQ R
exceptIO
ààS [
)
àà[ \
;
àà\ ]
}
ââ 
}
ää 
}
ãã 	

LinkedList
åå 
<
åå 
string
åå 
>
åå  
passwordLinkedList
åå -
=
åå. /
new
åå0 3

LinkedList
åå4 >
<
åå> ?
string
åå? E
>
ååE F
(
ååF G
)
ååG H
;
ååH I 
passwordLinkedList
çç 
.
çç 
AddLast
çç "
(
çç" #
password
çç# +
)
çç+ ,
;
çç, - 
passwordLinkedList
éé 
.
éé 
AddLast
éé "
(
éé" #
password
éé# +
)
éé+ ,
;
éé, - 
passwordLinkedList
èè 
.
èè 
AddLast
èè "
(
èè" #
password
èè# +
)
èè+ ,
;
èè, -N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_73b
êê H
.
êêH I
GoodB2GSink
êêI T
(
êêT U 
passwordLinkedList
êêU g
)
êêi j
;
êêj k
}
ëë 
}ìì 
}îî º<
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_73b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_73b F
{ 
public   

static   
void   
BadSink   
(   

LinkedList   )
<  ) *
string  * 0
>  0 1
passwordLinkedList  2 D
)  E F
{!! 
string"" 
password"" 
="" 
passwordLinkedList"" ,
."", -
Last""- 1
.""1 2
Value""2 7
;""7 8
try## 
{$$ 	
using&& 
(&& 
SqlConnection&&  

connection&&! +
=&&, -
new&&. 1
SqlConnection&&2 ?
(&&? @
$str&&@ v
+&&w x
$str&&y }
+&&~ 
$str
&&Ä å
+
&&ç é
password
&&è ó
)
&&ó ò
)
&&ò ô
{'' 

connection(( 
.(( 
Open(( 
(((  
)((  !
;((! "
using)) 
()) 

SqlCommand)) !
command))" )
=))* +
new)), /

SqlCommand))0 :
()): ;
$str)); U
,))U V

connection))W a
)))a b
)))b c
{** 
command++ 
.++ 
ExecuteNonQuery++ +
(+++ ,
)++, -
;++- .
},, 
}-- 
}.. 	
catch// 
(// 
SqlException// 
	exceptSql// %
)//% &
{00 	
IO11 
.11 
Logger11 
.11 
Log11 
(11 
NLog11 
.11 
LogLevel11 '
.11' (
Warn11( ,
,11, -
$str11. N
,11N O
	exceptSql11P Y
)11Y Z
;11Z [
}22 	
}33 
public88 

static88 
void88 
GoodG2BSink88 "
(88" #

LinkedList88# -
<88- .
string88. 4
>884 5
passwordLinkedList886 H
)88I J
{99 
string:: 
password:: 
=:: 
passwordLinkedList:: ,
.::, -
Last::- 1
.::1 2
Value::2 7
;::7 8
try;; 
{<< 	
using>> 
(>> 
SqlConnection>>  

connection>>! +
=>>, -
new>>. 1
SqlConnection>>2 ?
(>>? @
$str>>@ v
+>>w x
$str>>y }
+>>~ 
$str
>>Ä å
+
>>ç é
password
>>è ó
)
>>ó ò
)
>>ò ô
{?? 

connection@@ 
.@@ 
Open@@ 
(@@  
)@@  !
;@@! "
usingAA 
(AA 

SqlCommandAA !
commandAA" )
=AA* +
newAA, /

SqlCommandAA0 :
(AA: ;
$strAA; U
,AAU V

connectionAAW a
)AAa b
)AAb c
{BB 
commandCC 
.CC 
ExecuteNonQueryCC +
(CC+ ,
)CC, -
;CC- .
}DD 
}EE 
}FF 	
catchGG 
(GG 
SqlExceptionGG 
	exceptSqlGG %
)GG% &
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. N
,IIN O
	exceptSqlIIP Y
)IIY Z
;IIZ [
}JJ 	
}KK 
publicNN 

staticNN 
voidNN 
GoodB2GSinkNN "
(NN" #

LinkedListNN# -
<NN- .
stringNN. 4
>NN4 5
passwordLinkedListNN6 H
)NNI J
{OO 
stringPP 
passwordPP 
=PP 
passwordLinkedListPP ,
.PP, -
LastPP- 1
.PP1 2
ValuePP2 7
;PP7 8
ifQQ 

(QQ 
passwordQQ 
!=QQ 
nullQQ 
)QQ 
{RR 	
{TT 
usingUU 
(UU $
AesCryptoServiceProviderUU /
aesAlgUU0 6
=UU7 8
newUU9 <$
AesCryptoServiceProviderUU= U
(UUU V
)UUV W
)UUW X
{VV 
aesAlgWW 
.WW 
PaddingWW "
=WW# $
PaddingModeWW% 0
.WW0 1
NoneWW1 5
;WW5 6
aesAlgXX 
.XX 
KeyXX 
=XX  
EncodingXX! )
.XX) *
UTF8XX* .
.XX. /
GetBytesXX/ 7
(XX7 8
$strXX8 J
)XXJ K
;XXK L
ICryptoTransformZZ $
	decryptorZZ% .
=ZZ/ 0
aesAlgZZ1 7
.ZZ7 8
CreateDecryptorZZ8 G
(ZZG H
aesAlgZZH N
.ZZN O
KeyZZO R
,ZZR S
aesAlgZZT Z
.ZZZ [
IVZZ[ ]
)ZZ] ^
;ZZ^ _
using\\ 
(\\ 
MemoryStream\\ '
	msDecrypt\\( 1
=\\2 3
new\\4 7
MemoryStream\\8 D
(\\D E
Encoding\\E M
.\\M N
UTF8\\N R
.\\R S
GetBytes\\S [
(\\[ \
password\\\ d
)\\d e
)\\e f
)\\f g
{]] 
using^^ 
(^^ 
CryptoStream^^ +
	csDecrypt^^, 5
=^^6 7
new^^8 ;
CryptoStream^^< H
(^^H I
	msDecrypt^^I R
,^^R S
	decryptor^^T ]
,^^] ^
CryptoStreamMode^^_ o
.^^o p
Read^^p t
)^^t u
)^^u v
{__ 
using`` !
(``" #
StreamReader``# /
	srDecrypt``0 9
=``: ;
new``< ?
StreamReader``@ L
(``L M
	csDecrypt``M V
)``V W
)``W X
{aa 
passworddd  (
=dd) *
	srDecryptdd+ 4
.dd4 5
	ReadToEnddd5 >
(dd> ?
)dd? @
;dd@ A
}ee 
}ff 
}gg 
}hh 
}ii 
tryjj 
{kk 
usingmm 
(mm 
SqlConnectionmm $

connectionmm% /
=mm0 1
newmm2 5
SqlConnectionmm6 C
(mmC D
$strmmD z
+mm{ |
$str	mm} Å
+
mmÇ É
$str
mmÑ ê
+
mmë í
password
mmì õ
)
mmõ ú
)
mmú ù
{nn 

connectionoo 
.oo 
Openoo #
(oo# $
)oo$ %
;oo% &
usingpp 
(pp 

SqlCommandpp %
commandpp& -
=pp. /
newpp0 3

SqlCommandpp4 >
(pp> ?
$strpp? Y
,ppY Z

connectionpp[ e
)ppe f
)ppf g
{qq 
commandrr 
.rr  
ExecuteNonQueryrr  /
(rr/ 0
)rr0 1
;rr1 2
}ss 
}tt 
}uu 
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv  )
)vv) *
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
	exceptSqlxxT ]
)xx] ^
;xx^ _
}yy 
}zz 	
}{{ 
}}} 
}~~ ¢J
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_74a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_74a F
:G H
AbstractTestCaseI Y
{ 
public 

override 
void 
Bad 
( 
) 
{   
string!! 
password!! 
;!! 
password"" 
="" 
$str"" 
;"" 
{$$ 	
TcpListener%% 
listener%%  
=%%! "
null%%# '
;%%' (
try&& 
{'' 
listener)) 
=)) 
new)) 
TcpListener)) *
())* +
	IPAddress))+ 4
.))4 5
Parse))5 :
()): ;
$str)); G
)))G H
,))H I
$num))J O
)))O P
;))P Q
listener** 
.** 
Start** 
(** 
)**  
;**  !
using++ 
(++ 
	TcpClient++  
tcpConn++! (
=++) *
listener+++ 3
.++3 4
AcceptTcpClient++4 C
(++C D
)++D E
)++E F
{,, 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
Console--> E
.--E F
OpenStandardInput--F W
(--W X
)--X Y
)--Y Z
)--Z [
{.. 
password00  
=00! "
sr00# %
.00% &
ReadLine00& .
(00. /
)00/ 0
;000 1
}11 
}22 
}33 
catch44 
(44 
IOException44 
exceptIO44 '
)44' (
{55 
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 "
.66" #
LogLevel66# +
.66+ ,
Warn66, 0
,660 1
$str662 M
,66M N
exceptIO66O W
)66W X
;66X Y
}77 
finally88 
{99 
try:: 
{;; 
if<< 
(<< 
listener<<  
!=<<! #
null<<$ (
)<<( )
{== 
listener>>  
.>>  !
Stop>>! %
(>>% &
)>>& '
;>>' (
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
$strCC6 Q
,CCQ R
exceptIOCCS [
)CC[ \
;CC\ ]
}DD 
}EE 
}FF 	

DictionaryGG 
<GG 
intGG 
,GG 
stringGG 
>GG 
passwordDictionaryGG 1
=GG2 3
newGG4 7

DictionaryGG8 B
<GGB C
intGGC F
,GGF G
stringGGG M
>GGM N
(GGN O
)GGO P
;GGP Q
passwordDictionaryHH 
.HH 
AddHH 
(HH 
$numHH  
,HH  !
passwordHH" *
)HH* +
;HH+ ,
passwordDictionaryII 
.II 
AddII 
(II 
$numII  
,II  !
passwordII" *
)II* +
;II+ ,
passwordDictionaryJJ 
.JJ 
AddJJ 
(JJ 
$numJJ  
,JJ  !
passwordJJ" *
)JJ* +
;JJ+ ,L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_74bKK H
.KKH I
BadSinkKKI P
(KKP Q
passwordDictionaryKKQ c
)KKe f
;KKf g
}LL 
publicOO 

overrideOO 
voidOO 
GoodOO 
(OO 
)OO 
{PP 
GoodG2BQQ 
(QQ 
)QQ 
;QQ 
GoodB2GRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
staticVV 
voidVV 
GoodG2BVV 
(VV  
)VV  !
{WW 
stringXX 
passwordXX 
;XX 
password[[ 
=[[ 
$str[[ "
;[[" #

Dictionary\\ 
<\\ 
int\\ 
,\\ 
string\\ 
>\\ 
passwordDictionary\\ 1
=\\2 3
new\\4 7

Dictionary\\8 B
<\\B C
int\\C F
,\\F G
string\\G M
>\\M N
(\\N O
)\\O P
;\\P Q
passwordDictionary]] 
.]] 
Add]] 
(]] 
$num]]  
,]]  !
password]]" *
)]]* +
;]]+ ,
passwordDictionary^^ 
.^^ 
Add^^ 
(^^ 
$num^^  
,^^  !
password^^" *
)^^* +
;^^+ ,
passwordDictionary__ 
.__ 
Add__ 
(__ 
$num__  
,__  !
password__" *
)__* +
;__+ ,L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_74b`` H
.``H I
GoodG2BSink``I T
(``T U
passwordDictionary``U g
)``i j
;``j k
}aa 
privatedd 
staticdd 
voiddd 
GoodB2Gdd 
(dd  
)dd  !
{ee 
stringff 
passwordff 
;ff 
passwordgg 
=gg 
$strgg 
;gg 
{ii 	
TcpListenerjj 
listenerjj  
=jj! "
nulljj# '
;jj' (
trykk 
{ll 
listenernn 
=nn 
newnn 
TcpListenernn *
(nn* +
	IPAddressnn+ 4
.nn4 5
Parsenn5 :
(nn: ;
$strnn; G
)nnG H
,nnH I
$numnnJ O
)nnO P
;nnP Q
listeneroo 
.oo 
Startoo 
(oo 
)oo  
;oo  !
usingpp 
(pp 
	TcpClientpp  
tcpConnpp! (
=pp) *
listenerpp+ 3
.pp3 4
AcceptTcpClientpp4 C
(ppC D
)ppD E
)ppE F
{qq 
usingrr 
(rr 
StreamReaderrr '
srrr( *
=rr+ ,
newrr- 0
StreamReaderrr1 =
(rr= >
Consolerr> E
.rrE F
OpenStandardInputrrF W
(rrW X
)rrX Y
)rrY Z
)rrZ [
{ss 
passworduu  
=uu! "
sruu# %
.uu% &
ReadLineuu& .
(uu. /
)uu/ 0
;uu0 1
}vv 
}ww 
}xx 
catchyy 
(yy 
IOExceptionyy 
exceptIOyy '
)yy' (
{zz 
IO{{ 
.{{ 
Logger{{ 
.{{ 
Log{{ 
({{ 
NLog{{ "
.{{" #
LogLevel{{# +
.{{+ ,
Warn{{, 0
,{{0 1
$str{{2 M
,{{M N
exceptIO{{O W
){{W X
;{{X Y
}|| 
finally}} 
{~~ 
try 
{
ÄÄ 
if
ÅÅ 
(
ÅÅ 
listener
ÅÅ  
!=
ÅÅ! #
null
ÅÅ$ (
)
ÅÅ( )
{
ÇÇ 
listener
ÉÉ  
.
ÉÉ  !
Stop
ÉÉ! %
(
ÉÉ% &
)
ÉÉ& '
;
ÉÉ' (
}
ÑÑ 
}
ÖÖ 
catch
ÜÜ 
(
ÜÜ 
IOException
ÜÜ "
exceptIO
ÜÜ# +
)
ÜÜ+ ,
{
áá 
IO
àà 
.
àà 
Logger
àà 
.
àà 
Log
àà !
(
àà! "
NLog
àà" &
.
àà& '
LogLevel
àà' /
.
àà/ 0
Warn
àà0 4
,
àà4 5
$str
àà6 Q
,
ààQ R
exceptIO
ààS [
)
àà[ \
;
àà\ ]
}
ââ 
}
ää 
}
ãã 	

Dictionary
åå 
<
åå 
int
åå 
,
åå 
string
åå 
>
åå  
passwordDictionary
åå 1
=
åå2 3
new
åå4 7

Dictionary
åå8 B
<
ååB C
int
ååC F
,
ååF G
string
ååG M
>
ååM N
(
ååN O
)
ååO P
;
ååP Q 
passwordDictionary
çç 
.
çç 
Add
çç 
(
çç 
$num
çç  
,
çç  !
password
çç" *
)
çç* +
;
çç+ , 
passwordDictionary
éé 
.
éé 
Add
éé 
(
éé 
$num
éé  
,
éé  !
password
éé" *
)
éé* +
;
éé+ , 
passwordDictionary
èè 
.
èè 
Add
èè 
(
èè 
$num
èè  
,
èè  !
password
èè" *
)
èè* +
;
èè+ ,N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_74b
êê H
.
êêH I
GoodB2GSink
êêI T
(
êêT U 
passwordDictionary
êêU g
)
êêi j
;
êêj k
}
ëë 
}ìì 
}îî „<
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_74b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_74b F
{ 
public   

static   
void   
BadSink   
(   

Dictionary   )
<  ) *
int  * -
,  - .
string  . 4
>  4 5
passwordDictionary  6 H
)  I J
{!! 
string"" 
password"" 
="" 
passwordDictionary"" ,
["", -
$num""- .
]"". /
;""/ 0
try## 
{$$ 	
using&& 
(&& 
SqlConnection&&  

connection&&! +
=&&, -
new&&. 1
SqlConnection&&2 ?
(&&? @
$str&&@ v
+&&w x
$str&&y }
+&&~ 
$str
&&Ä å
+
&&ç é
password
&&è ó
)
&&ó ò
)
&&ò ô
{'' 

connection(( 
.(( 
Open(( 
(((  
)((  !
;((! "
using)) 
()) 

SqlCommand)) !
command))" )
=))* +
new)), /

SqlCommand))0 :
()): ;
$str)); U
,))U V

connection))W a
)))a b
)))b c
{** 
command++ 
.++ 
ExecuteNonQuery++ +
(+++ ,
)++, -
;++- .
},, 
}-- 
}.. 	
catch// 
(// 
SqlException// 
	exceptSql// %
)//% &
{00 	
IO11 
.11 
Logger11 
.11 
Log11 
(11 
NLog11 
.11 
LogLevel11 '
.11' (
Warn11( ,
,11, -
$str11. N
,11N O
	exceptSql11P Y
)11Y Z
;11Z [
}22 	
}33 
public88 

static88 
void88 
GoodG2BSink88 #
(88# $

Dictionary88$ .
<88. /
int88/ 2
,882 3
string883 9
>889 :
passwordDictionary88; M
)88N O
{99 
string:: 
password:: 
=:: 
passwordDictionary:: ,
[::, -
$num::- .
]::. /
;::/ 0
try;; 
{<< 	
using>> 
(>> 
SqlConnection>>  

connection>>! +
=>>, -
new>>. 1
SqlConnection>>2 ?
(>>? @
$str>>@ v
+>>w x
$str>>y }
+>>~ 
$str
>>Ä å
+
>>ç é
password
>>è ó
)
>>ó ò
)
>>ò ô
{?? 

connection@@ 
.@@ 
Open@@ 
(@@  
)@@  !
;@@! "
usingAA 
(AA 

SqlCommandAA !
commandAA" )
=AA* +
newAA, /

SqlCommandAA0 :
(AA: ;
$strAA; U
,AAU V

connectionAAW a
)AAa b
)AAb c
{BB 
commandCC 
.CC 
ExecuteNonQueryCC +
(CC+ ,
)CC, -
;CC- .
}DD 
}EE 
}FF 	
catchGG 
(GG 
SqlExceptionGG 
	exceptSqlGG %
)GG% &
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. N
,IIN O
	exceptSqlIIP Y
)IIY Z
;IIZ [
}JJ 	
}KK 
publicNN 

staticNN 
voidNN 
GoodB2GSinkNN "
(NN" #

DictionaryNN# -
<NN- .
intNN. 1
,NN1 2
stringNN2 8
>NN8 9
passwordDictionaryNN: L
)NNM N
{OO 
stringPP 
passwordPP 
=PP 
passwordDictionaryPP ,
[PP, -
$numPP- .
]PP. /
;PP/ 0
ifQQ 

(QQ 
passwordQQ 
!=QQ 
nullQQ 
)QQ 
{RR 	
{TT 
usingUU 
(UU $
AesCryptoServiceProviderUU /
aesAlgUU0 6
=UU7 8
newUU9 <$
AesCryptoServiceProviderUU= U
(UUU V
)UUV W
)UUW X
{VV 
aesAlgWW 
.WW 
PaddingWW "
=WW# $
PaddingModeWW% 0
.WW0 1
NoneWW1 5
;WW5 6
aesAlgXX 
.XX 
KeyXX 
=XX  
EncodingXX! )
.XX) *
UTF8XX* .
.XX. /
GetBytesXX/ 7
(XX7 8
$strXX8 J
)XXJ K
;XXK L
ICryptoTransformZZ $
	decryptorZZ% .
=ZZ/ 0
aesAlgZZ1 7
.ZZ7 8
CreateDecryptorZZ8 G
(ZZG H
aesAlgZZH N
.ZZN O
KeyZZO R
,ZZR S
aesAlgZZT Z
.ZZZ [
IVZZ[ ]
)ZZ] ^
;ZZ^ _
using\\ 
(\\ 
MemoryStream\\ '
	msDecrypt\\( 1
=\\2 3
new\\4 7
MemoryStream\\8 D
(\\D E
Encoding\\E M
.\\M N
UTF8\\N R
.\\R S
GetBytes\\S [
(\\[ \
password\\\ d
)\\d e
)\\e f
)\\f g
{]] 
using^^ 
(^^ 
CryptoStream^^ +
	csDecrypt^^, 5
=^^6 7
new^^8 ;
CryptoStream^^< H
(^^H I
	msDecrypt^^I R
,^^R S
	decryptor^^T ]
,^^] ^
CryptoStreamMode^^_ o
.^^o p
Read^^p t
)^^t u
)^^u v
{__ 
using`` !
(``" #
StreamReader``# /
	srDecrypt``0 9
=``: ;
new``< ?
StreamReader``@ L
(``L M
	csDecrypt``M V
)``V W
)``W X
{aa 
passworddd  (
=dd) *
	srDecryptdd+ 4
.dd4 5
	ReadToEnddd5 >
(dd> ?
)dd? @
;dd@ A
}ee 
}ff 
}gg 
}hh 
}ii 
tryjj 
{kk 
usingmm 
(mm 
SqlConnectionmm $

connectionmm% /
=mm0 1
newmm2 5
SqlConnectionmm6 C
(mmC D
$strmmD z
+mm{ |
$str	mm} Å
+
mmÇ É
$str
mmÑ ê
+
mmë í
password
mmì õ
)
mmõ ú
)
mmú ù
{nn 

connectionoo 
.oo 
Openoo #
(oo# $
)oo$ %
;oo% &
usingpp 
(pp 

SqlCommandpp %
commandpp& -
=pp. /
newpp0 3

SqlCommandpp4 >
(pp> ?
$strpp? Y
,ppY Z

connectionpp[ e
)ppe f
)ppf g
{qq 
commandrr 
.rr  
ExecuteNonQueryrr  /
(rr/ 0
)rr0 1
;rr1 2
}ss 
}tt 
}uu 
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv  )
)vv) *
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
	exceptSqlxxT ]
)xx] ^
;xx^ _
}yy 
}zz 	
}{{ 
}}} 
}~~ äk
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_75a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_75a F
:G H
AbstractTestCaseI Y
{ 
public   

override   
void   
Bad   
(   
)   
{!! 
string"" 
password"" 
;"" 
password## 
=## 
$str## 
;## 
{%% 	
TcpListener&& 
listener&&  
=&&! "
null&&# '
;&&' (
try'' 
{(( 
listener** 
=** 
new** 
TcpListener** *
(*** +
	IPAddress**+ 4
.**4 5
Parse**5 :
(**: ;
$str**; G
)**G H
,**H I
$num**J O
)**O P
;**P Q
listener++ 
.++ 
Start++ 
(++ 
)++  
;++  !
using,, 
(,, 
	TcpClient,,  
tcpConn,,! (
=,,) *
listener,,+ 3
.,,3 4
AcceptTcpClient,,4 C
(,,C D
),,D E
),,E F
{-- 
using.. 
(.. 
StreamReader.. '
sr..( *
=..+ ,
new..- 0
StreamReader..1 =
(..= >
Console..> E
...E F
OpenStandardInput..F W
(..W X
)..X Y
)..Y Z
)..Z [
{// 
password11  
=11! "
sr11# %
.11% &
ReadLine11& .
(11. /
)11/ 0
;110 1
}22 
}33 
}44 
catch55 
(55 
IOException55 
exceptIO55 '
)55' (
{66 
IO77 
.77 
Logger77 
.77 
Log77 
(77 
NLog77 "
.77" #
LogLevel77# +
.77+ ,
Warn77, 0
,770 1
$str772 M
,77M N
exceptIO77O W
)77W X
;77X Y
}88 
finally99 
{:: 
try;; 
{<< 
if== 
(== 
listener==  
!===! #
null==$ (
)==( )
{>> 
listener??  
.??  !
Stop??! %
(??% &
)??& '
;??' (
}@@ 
}AA 
catchBB 
(BB 
IOExceptionBB "
exceptIOBB# +
)BB+ ,
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
$strDD6 Q
,DDQ R
exceptIODDS [
)DD[ \
;DD\ ]
}EE 
}FF 
}GG 	
byteII 
[II 
]II 
passwordSerializedII !
=II" #
nullII$ (
;II( )
tryJJ 
{KK 	
BinaryFormatterLL 
bfLL 
=LL  
newLL! $
BinaryFormatterLL% 4
(LL4 5
)LL5 6
;LL6 7
usingMM 
(MM 
varMM 
msMM 
=MM 
newMM 
MemoryStreamMM  ,
(MM, -
)MM- .
)MM. /
{NN 
bfOO 
.OO 
	SerializeOO 
(OO 
msOO 
,OO  
passwordOO! )
)OO) *
;OO* +
passwordSerializedPP "
=PP# $
msPP% '
.PP' (
ToArrayPP( /
(PP/ 0
)PP0 1
;PP1 2
}QQ L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_75bRR L
.RRL M
BadSinkRRM T
(RRT U
passwordSerializedRRU g
)RRi j
;RRj k
}SS 	
catchTT 
(TT "
SerializationExceptionTT %
exceptSerializeTT& 5
)TT5 6
{UU 	
IOVV 
.VV 
LoggerVV 
.VV 
LogVV 
(VV 
NLogVV 
.VV 
LogLevelVV '
.VV' (
WarnVV( ,
,VV, -
$strVV. X
,VVX Y
exceptSerializeVVZ i
)VVi j
;VVj k
}WW 	
}XX 
public[[ 

override[[ 
void[[ 
Good[[ 
([[ 
)[[ 
{\\ 
GoodG2B]] 
(]] 
)]] 
;]] 
GoodB2G^^ 
(^^ 
)^^ 
;^^ 
}__ 
privatebb 
staticbb 
voidbb 
GoodG2Bbb 
(bb  
)bb  !
{cc 
stringdd 
passworddd 
;dd 
passwordee 
=ee 
$stree 
;ee 
{gg 	
TcpListenerhh 
listenerhh  
=hh! "
nullhh# '
;hh' (
tryii 
{jj 
listenerll 
=ll 
newll 
TcpListenerll *
(ll* +
	IPAddressll+ 4
.ll4 5
Parsell5 :
(ll: ;
$strll; G
)llG H
,llH I
$numllJ O
)llO P
;llP Q
listenermm 
.mm 
Startmm 
(mm 
)mm  
;mm  !
usingnn 
(nn 
	TcpClientnn  
tcpConnnn! (
=nn) *
listenernn+ 3
.nn3 4
AcceptTcpClientnn4 C
(nnC D
)nnD E
)nnE F
{oo 
usingpp 
(pp 
StreamReaderpp '
srpp( *
=pp+ ,
newpp- 0
StreamReaderpp1 =
(pp= >
Consolepp> E
.ppE F
OpenStandardInputppF W
(ppW X
)ppX Y
)ppY Z
)ppZ [
{qq 
passwordss  
=ss! "
srss# %
.ss% &
ReadLiness& .
(ss. /
)ss/ 0
;ss0 1
}tt 
}uu 
}vv 
catchww 
(ww 
IOExceptionww 
exceptIOww '
)ww' (
{xx 
IOyy 
.yy 
Loggeryy 
.yy 
Logyy 
(yy 
NLogyy "
.yy" #
LogLevelyy# +
.yy+ ,
Warnyy, 0
,yy0 1
$stryy2 M
,yyM N
exceptIOyyO W
)yyW X
;yyX Y
}zz 
finally{{ 
{|| 
try}} 
{~~ 
if 
( 
listener  
!=! #
null$ (
)( )
{
ÄÄ 
listener
ÅÅ  
.
ÅÅ  !
Stop
ÅÅ! %
(
ÅÅ% &
)
ÅÅ& '
;
ÅÅ' (
}
ÇÇ 
}
ÉÉ 
catch
ÑÑ 
(
ÑÑ 
IOException
ÑÑ "
exceptIO
ÑÑ# +
)
ÑÑ+ ,
{
ÖÖ 
IO
ÜÜ 
.
ÜÜ 
Logger
ÜÜ 
.
ÜÜ 
Log
ÜÜ !
(
ÜÜ! "
NLog
ÜÜ" &
.
ÜÜ& '
LogLevel
ÜÜ' /
.
ÜÜ/ 0
Warn
ÜÜ0 4
,
ÜÜ4 5
$str
ÜÜ6 Q
,
ÜÜQ R
exceptIO
ÜÜS [
)
ÜÜ[ \
;
ÜÜ\ ]
}
áá 
}
àà 
}
ââ 	
byte
ãã 
[
ãã 
]
ãã  
passwordSerialized
ãã !
=
ãã" #
null
ãã$ (
;
ãã( )
try
åå 
{
çç 	
BinaryFormatter
éé 
bf
éé 
=
éé  
new
éé! $
BinaryFormatter
éé% 4
(
éé4 5
)
éé5 6
;
éé6 7
using
èè 
(
èè 
var
èè 
ms
èè 
=
èè 
new
èè 
MemoryStream
èè  ,
(
èè, -
)
èè- .
)
èè. /
{
êê 
bf
ëë 
.
ëë 
	Serialize
ëë 
(
ëë 
ms
ëë 
,
ëë  
password
ëë! )
)
ëë) *
;
ëë* + 
passwordSerialized
íí "
=
íí# $
ms
íí% '
.
íí' (
ToArray
íí( /
(
íí/ 0
)
íí0 1
;
íí1 2
}
ìì N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_75b
îî L
.
îîL M
GoodG2BSink
îîM X
(
îîX Y 
passwordSerialized
îîY k
)
îîm n
;
îîn o
}
ïï 	
catch
ññ 
(
ññ $
SerializationException
ññ %
exceptSerialize
ññ& 5
)
ññ5 6
{
óó 	
IO
òò 
.
òò 
Logger
òò 
.
òò 
Log
òò 
(
òò 
NLog
òò 
.
òò 
LogLevel
òò '
.
òò' (
Warn
òò( ,
,
òò, -
$str
òò. X
,
òòX Y
exceptSerialize
òòZ i
)
òòi j
;
òòj k
}
ôô 	
}
öö 
private
ùù 
static
ùù 
void
ùù 
GoodB2G
ùù 
(
ùù  
)
ùù  !
{
ûû 
string
üü 
password
üü 
;
üü 
password
†† 
=
†† 
$str
†† 
;
†† 
{
¢¢ 	
TcpListener
££ 
listener
££  
=
££! "
null
££# '
;
££' (
try
§§ 
{
•• 
listener
ßß 
=
ßß 
new
ßß 
TcpListener
ßß *
(
ßß* +
	IPAddress
ßß+ 4
.
ßß4 5
Parse
ßß5 :
(
ßß: ;
$str
ßß; G
)
ßßG H
,
ßßH I
$num
ßßJ O
)
ßßO P
;
ßßP Q
listener
®® 
.
®® 
Start
®® 
(
®® 
)
®®  
;
®®  !
using
©© 
(
©© 
	TcpClient
©©  
tcpConn
©©! (
=
©©) *
listener
©©+ 3
.
©©3 4
AcceptTcpClient
©©4 C
(
©©C D
)
©©D E
)
©©E F
{
™™ 
using
´´ 
(
´´ 
StreamReader
´´ '
sr
´´( *
=
´´+ ,
new
´´- 0
StreamReader
´´1 =
(
´´= >
Console
´´> E
.
´´E F
OpenStandardInput
´´F W
(
´´W X
)
´´X Y
)
´´Y Z
)
´´Z [
{
¨¨ 
password
ÆÆ  
=
ÆÆ! "
sr
ÆÆ# %
.
ÆÆ% &
ReadLine
ÆÆ& .
(
ÆÆ. /
)
ÆÆ/ 0
;
ÆÆ0 1
}
ØØ 
}
∞∞ 
}
±± 
catch
≤≤ 
(
≤≤ 
IOException
≤≤ 
exceptIO
≤≤ '
)
≤≤' (
{
≥≥ 
IO
¥¥ 
.
¥¥ 
Logger
¥¥ 
.
¥¥ 
Log
¥¥ 
(
¥¥ 
NLog
¥¥ "
.
¥¥" #
LogLevel
¥¥# +
.
¥¥+ ,
Warn
¥¥, 0
,
¥¥0 1
$str
¥¥2 M
,
¥¥M N
exceptIO
¥¥O W
)
¥¥W X
;
¥¥X Y
}
µµ 
finally
∂∂ 
{
∑∑ 
try
∏∏ 
{
ππ 
if
∫∫ 
(
∫∫ 
listener
∫∫  
!=
∫∫! #
null
∫∫$ (
)
∫∫( )
{
ªª 
listener
ºº  
.
ºº  !
Stop
ºº! %
(
ºº% &
)
ºº& '
;
ºº' (
}
ΩΩ 
}
ææ 
catch
øø 
(
øø 
IOException
øø "
exceptIO
øø# +
)
øø+ ,
{
¿¿ 
IO
¡¡ 
.
¡¡ 
Logger
¡¡ 
.
¡¡ 
Log
¡¡ !
(
¡¡! "
NLog
¡¡" &
.
¡¡& '
LogLevel
¡¡' /
.
¡¡/ 0
Warn
¡¡0 4
,
¡¡4 5
$str
¡¡6 Q
,
¡¡Q R
exceptIO
¡¡S [
)
¡¡[ \
;
¡¡\ ]
}
¬¬ 
}
√√ 
}
ƒƒ 	
byte
∆∆ 
[
∆∆ 
]
∆∆  
passwordSerialized
∆∆ !
=
∆∆" #
null
∆∆$ (
;
∆∆( )
try
«« 
{
»» 	
BinaryFormatter
…… 
bf
…… 
=
……  
new
……! $
BinaryFormatter
……% 4
(
……4 5
)
……5 6
;
……6 7
using
   
(
   
var
   
ms
   
=
   
new
   
MemoryStream
    ,
(
  , -
)
  - .
)
  . /
{
ÀÀ 
bf
ÃÃ 
.
ÃÃ 
	Serialize
ÃÃ 
(
ÃÃ 
ms
ÃÃ 
,
ÃÃ  
password
ÃÃ! )
)
ÃÃ) *
;
ÃÃ* + 
passwordSerialized
ÕÕ "
=
ÕÕ# $
ms
ÕÕ% '
.
ÕÕ' (
ToArray
ÕÕ( /
(
ÕÕ/ 0
)
ÕÕ0 1
;
ÕÕ1 2
}
ŒŒ N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_75b
œœ L
.
œœL M
GoodB2GSink
œœM X
(
œœX Y 
passwordSerialized
œœY k
)
œœm n
;
œœn o
}
–– 	
catch
—— 
(
—— $
SerializationException
—— %
exceptSerialize
——& 5
)
——5 6
{
““ 	
IO
”” 
.
”” 
Logger
”” 
.
”” 
Log
”” 
(
”” 
NLog
”” 
.
”” 
LogLevel
”” '
.
””' (
Warn
””( ,
,
””, -
$str
””. X
,
””X Y
exceptSerialize
””Z i
)
””i j
;
””j k
}
‘‘ 	
}
’’ 
}◊◊ 
}ÿÿ Ñ_
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_75b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_75b F
{ 
public!! 

static!! 
void!! 
BadSink!! 
(!! 
byte!! #
[!!# $
]!!$ %
passwordSerialized!!& 8
)!!9 :
{"" 
try## 
{$$ 	
string%% 
password%% 
;%% 
var&& 
binForm&& 
=&& 
new&& 
BinaryFormatter&& -
(&&- .
)&&. /
;&&/ 0
using'' 
('' 
var'' 
	memStream''  
=''! "
new''# &
MemoryStream''' 3
(''3 4
)''4 5
)''5 6
{(( 
	memStream)) 
.)) 
Write)) 
())  
passwordSerialized))  2
,))2 3
$num))4 5
,))5 6
passwordSerialized))7 I
.))I J
Length))J P
)))P Q
;))Q R
	memStream** 
.** 
Seek** 
(** 
$num**  
,**  !

SeekOrigin**" ,
.**, -
Begin**- 2
)**2 3
;**3 4
password++ 
=++ 
(++ 
string++ "
)++" #
binForm++# *
.++* +
Deserialize+++ 6
(++6 7
	memStream++7 @
)++@ A
;++A B
},, 
try-- 
{.. 
using00 
(00 
SqlConnection00 $

connection00% /
=000 1
new002 5
SqlConnection006 C
(00C D
$str00D z
+00{ |
$str	00} Å
+
00Ç É
$str
00Ñ ê
+
00ë í
password
00ì õ
)
00õ ú
)
00ú ù
{11 

connection22 
.22 
Open22 #
(22# $
)22$ %
;22% &
using33 
(33 

SqlCommand33 %
command33& -
=33. /
new330 3

SqlCommand334 >
(33> ?
$str33? Y
,33Y Z

connection33[ e
)33e f
)33f g
{44 
command55 
.55  
ExecuteNonQuery55  /
(55/ 0
)550 1
;551 2
}66 
}77 
}88 
catch99 
(99 
SqlException99 
	exceptSql99  )
)99) *
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
$str;;2 R
,;;R S
	exceptSql;;T ]
);;] ^
;;;^ _
}<< 
}== 	
catch>> 
(>> "
SerializationException>> %
exceptSerialize>>& 5
)>>5 6
{?? 	
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ 
(@@ 
NLog@@ 
.@@ 
LogLevel@@ '
.@@' (
Warn@@( ,
,@@, -
$str@@. Y
,@@Y Z
exceptSerialize@@[ j
)@@j k
;@@k l
}AA 	
}BB 
publicGG 

staticGG 
voidGG 
GoodG2BSinkGG "
(GG" #
byteGG# '
[GG' (
]GG( )
passwordSerializedGG* <
)GG= >
{HH 
tryII 
{JJ 	
stringKK 
passwordKK 
;KK 
varLL 
binFormLL 
=LL 
newLL 
BinaryFormatterLL -
(LL- .
)LL. /
;LL/ 0
usingMM 
(MM 
varMM 
	memStreamMM  
=MM! "
newMM# &
MemoryStreamMM' 3
(MM3 4
)MM4 5
)MM5 6
{NN 
	memStreamOO 
.OO 
WriteOO 
(OO  
passwordSerializedOO  2
,OO2 3
$numOO4 5
,OO5 6
passwordSerializedOO7 I
.OOI J
LengthOOJ P
)OOP Q
;OOQ R
	memStreamPP 
.PP 
SeekPP 
(PP 
$numPP  
,PP  !

SeekOriginPP" ,
.PP, -
BeginPP- 2
)PP2 3
;PP3 4
passwordQQ 
=QQ 
(QQ 
stringQQ "
)QQ" #
binFormQQ# *
.QQ* +
DeserializeQQ+ 6
(QQ6 7
	memStreamQQ7 @
)QQ@ A
;QQA B
}RR 
trySS 
{TT 
usingVV 
(VV 
SqlConnectionVV $

connectionVV% /
=VV0 1
newVV2 5
SqlConnectionVV6 C
(VVC D
$strVVD z
+VV{ |
$str	VV} Å
+
VVÇ É
$str
VVÑ ê
+
VVë í
password
VVì õ
)
VVõ ú
)
VVú ù
{WW 

connectionXX 
.XX 
OpenXX #
(XX# $
)XX$ %
;XX% &
usingYY 
(YY 

SqlCommandYY %
commandYY& -
=YY. /
newYY0 3

SqlCommandYY4 >
(YY> ?
$strYY? Y
,YYY Z

connectionYY[ e
)YYe f
)YYf g
{ZZ 
command[[ 
.[[  
ExecuteNonQuery[[  /
([[/ 0
)[[0 1
;[[1 2
}\\ 
}]] 
}^^ 
catch__ 
(__ 
SqlException__ 
	exceptSql__  )
)__) *
{`` 
IOaa 
.aa 
Loggeraa 
.aa 
Logaa 
(aa 
NLogaa "
.aa" #
LogLevelaa# +
.aa+ ,
Warnaa, 0
,aa0 1
$straa2 R
,aaR S
	exceptSqlaaT ]
)aa] ^
;aa^ _
}bb 
}cc 	
catchdd 
(dd "
SerializationExceptiondd %
exceptSerializedd& 5
)dd5 6
{ee 	
IOff 
.ff 
Loggerff 
.ff 
Logff 
(ff 
NLogff 
.ff 
LogLevelff '
.ff' (
Warnff( ,
,ff, -
$strff. Y
,ffY Z
exceptSerializeff[ j
)ffj k
;ffk l
}gg 	
}hh 
publickk 

statickk 
voidkk 
GoodB2GSinkkk "
(kk" #
bytekk# '
[kk' (
]kk( )
passwordSerializedkk* <
)kk= >
{ll 
trymm 
{nn 	
stringoo 
passwordoo 
;oo 
varpp 
binFormpp 
=pp 
newpp 
BinaryFormatterpp -
(pp- .
)pp. /
;pp/ 0
usingqq 
(qq 
varqq 
	memStreamqq  
=qq! "
newqq# &
MemoryStreamqq' 3
(qq3 4
)qq4 5
)qq5 6
{rr 
	memStreamss 
.ss 
Writess 
(ss  
passwordSerializedss  2
,ss2 3
$numss4 5
,ss5 6
passwordSerializedss7 I
.ssI J
LengthssJ P
)ssP Q
;ssQ R
	memStreamtt 
.tt 
Seektt 
(tt 
$numtt  
,tt  !

SeekOrigintt" ,
.tt, -
Begintt- 2
)tt2 3
;tt3 4
passworduu 
=uu 
(uu 
stringuu "
)uu" #
binFormuu# *
.uu* +
Deserializeuu+ 6
(uu6 7
	memStreamuu7 @
)uu@ A
;uuA B
}vv 
ifww 
(ww 
passwordww 
!=ww 
nullww  
)ww  !
{xx 
{zz 
using{{ 
({{ $
AesCryptoServiceProvider{{ 3
aesAlg{{4 :
={{; <
new{{= @$
AesCryptoServiceProvider{{A Y
({{Y Z
){{Z [
){{[ \
{|| 
aesAlg}} 
.}} 
Padding}} &
=}}' (
PaddingMode}}) 4
.}}4 5
None}}5 9
;}}9 :
aesAlg~~ 
.~~ 
Key~~ "
=~~# $
Encoding~~% -
.~~- .
UTF8~~. 2
.~~2 3
GetBytes~~3 ;
(~~; <
$str~~< N
)~~N O
;~~O P
ICryptoTransform
ÄÄ (
	decryptor
ÄÄ) 2
=
ÄÄ3 4
aesAlg
ÄÄ5 ;
.
ÄÄ; <
CreateDecryptor
ÄÄ< K
(
ÄÄK L
aesAlg
ÄÄL R
.
ÄÄR S
Key
ÄÄS V
,
ÄÄV W
aesAlg
ÄÄX ^
.
ÄÄ^ _
IV
ÄÄ_ a
)
ÄÄa b
;
ÄÄb c
using
ÇÇ 
(
ÇÇ 
MemoryStream
ÇÇ +
	msDecrypt
ÇÇ, 5
=
ÇÇ6 7
new
ÇÇ8 ;
MemoryStream
ÇÇ< H
(
ÇÇH I
Encoding
ÇÇI Q
.
ÇÇQ R
UTF8
ÇÇR V
.
ÇÇV W
GetBytes
ÇÇW _
(
ÇÇ_ `
password
ÇÇ` h
)
ÇÇh i
)
ÇÇi j
)
ÇÇj k
{
ÉÉ 
using
ÑÑ !
(
ÑÑ" #
CryptoStream
ÑÑ# /
	csDecrypt
ÑÑ0 9
=
ÑÑ: ;
new
ÑÑ< ?
CryptoStream
ÑÑ@ L
(
ÑÑL M
	msDecrypt
ÑÑM V
,
ÑÑV W
	decryptor
ÑÑX a
,
ÑÑa b
CryptoStreamMode
ÑÑc s
.
ÑÑs t
Read
ÑÑt x
)
ÑÑx y
)
ÑÑy z
{
ÖÖ 
using
ÜÜ  %
(
ÜÜ& '
StreamReader
ÜÜ' 3
	srDecrypt
ÜÜ4 =
=
ÜÜ> ?
new
ÜÜ@ C
StreamReader
ÜÜD P
(
ÜÜP Q
	csDecrypt
ÜÜQ Z
)
ÜÜZ [
)
ÜÜ[ \
{
áá  !
password
ää$ ,
=
ää- .
	srDecrypt
ää/ 8
.
ää8 9
	ReadToEnd
ää9 B
(
ääB C
)
ääC D
;
ääD E
}
ãã  !
}
åå 
}
çç 
}
éé 
}
èè 
try
êê 
{
ëë 
using
ìì 
(
ìì 
SqlConnection
ìì (

connection
ìì) 3
=
ìì4 5
new
ìì6 9
SqlConnection
ìì: G
(
ììG H
$str
ììH ~
+ìì Ä
$strììÅ Ö
+ììÜ á
$strììà î
+ììï ñ
passwordììó ü
)ììü †
)ìì† °
{
îî 

connection
ïï "
.
ïï" #
Open
ïï# '
(
ïï' (
)
ïï( )
;
ïï) *
using
ññ 
(
ññ 

SqlCommand
ññ )
command
ññ* 1
=
ññ2 3
new
ññ4 7

SqlCommand
ññ8 B
(
ññB C
$str
ññC ]
,
ññ] ^

connection
ññ_ i
)
ññi j
)
ññj k
{
óó 
command
òò #
.
òò# $
ExecuteNonQuery
òò$ 3
(
òò3 4
)
òò4 5
;
òò5 6
}
ôô 
}
öö 
}
õõ 
catch
úú 
(
úú 
SqlException
úú #
	exceptSql
úú$ -
)
úú- .
{
ùù 
IO
ûû 
.
ûû 
Logger
ûû 
.
ûû 
Log
ûû !
(
ûû! "
NLog
ûû" &
.
ûû& '
LogLevel
ûû' /
.
ûû/ 0
Warn
ûû0 4
,
ûû4 5
$str
ûû6 V
,
ûûV W
	exceptSql
ûûX a
)
ûûa b
;
ûûb c
}
üü 
}
†† 
}
°° 	
catch
¢¢ 
(
¢¢ $
SerializationException
¢¢ %
exceptSerialize
¢¢& 5
)
¢¢5 6
{
££ 	
IO
§§ 
.
§§ 
Logger
§§ 
.
§§ 
Log
§§ 
(
§§ 
NLog
§§ 
.
§§ 
LogLevel
§§ '
.
§§' (
Warn
§§( ,
,
§§, -
$str
§§. Y
,
§§Y Z
exceptSerialize
§§[ j
)
§§j k
;
§§k l
}
•• 	
}
¶¶ 
}®® 
}©© È:
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_81a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class L
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_81a F
:G H
AbstractTestCaseI Y
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string   
password   
;   
password!! 
=!! 
$str!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try%% 
{&& 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using,, 
(,, 
StreamReader,, '
sr,,( *
=,,+ ,
new,,- 0
StreamReader,,1 =
(,,= >
Console,,> E
.,,E F
OpenStandardInput,,F W
(,,W X
),,X Y
),,Y Z
),,Z [
{-- 
password//  
=//! "
sr//# %
.//% &
ReadLine//& .
(//. /
)/// 0
;//0 1
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
$str552 M
,55M N
exceptIO55O W
)55W X
;55X Y
}66 
finally77 
{88 
try99 
{:: 
if;; 
(;; 
listener;;  
!=;;! #
null;;$ (
);;( )
{<< 
listener==  
.==  !
Stop==! %
(==% &
)==& '
;==' (
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ "
exceptIO@@# +
)@@+ ,
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB !
(BB! "
NLogBB" &
.BB& '
LogLevelBB' /
.BB/ 0
WarnBB0 4
,BB4 5
$strBB6 Q
,BBQ R
exceptIOBBS [
)BB[ \
;BB\ ]
}CC 
}DD 
}EE 	P
DCWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_81_baseFF L

baseObjectFFM W
=FFX Y
newFFZ ]P
CCWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_81_bad	FF^ °
(
FF° ¢
)
FF¢ £
;
FF£ §

baseObjectGG 
.GG 
ActionGG 
(GG 
passwordGG "
)GG# $
;GG$ %
}HH 
publicKK 

overrideKK 
voidKK 
GoodKK 
(KK 
)KK 
{LL 
GoodG2BMM 
(MM 
)MM 
;MM 
GoodB2GNN 
(NN 
)NN 
;NN 
}OO 
privateRR 
voidRR 
GoodG2BRR 
(RR 
)RR 
{SS 
stringTT 
passwordTT 
;TT 
passwordWW 
=WW 
$strWW "
;WW" #P
DCWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_81_baseXX L

baseObjectXXM W
=XXX Y
newXXZ ]T
GCWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_81_goodG2B	XX^ •
(
XX• ¶
)
XX¶ ß
;
XXß ®

baseObjectYY 
.YY 
ActionYY 
(YY 
passwordYY "
)YY# $
;YY$ %
}ZZ 
private]] 
void]] 
GoodB2G]] 
(]] 
)]] 
{^^ 
string__ 
password__ 
;__ 
password`` 
=`` 
$str`` 
;`` 
{bb 	
TcpListenercc 
listenercc  
=cc! "
nullcc# '
;cc' (
trydd 
{ee 
listenergg 
=gg 
newgg 
TcpListenergg *
(gg* +
	IPAddressgg+ 4
.gg4 5
Parsegg5 :
(gg: ;
$strgg; G
)ggG H
,ggH I
$numggJ O
)ggO P
;ggP Q
listenerhh 
.hh 
Starthh 
(hh 
)hh  
;hh  !
usingii 
(ii 
	TcpClientii  
tcpConnii! (
=ii) *
listenerii+ 3
.ii3 4
AcceptTcpClientii4 C
(iiC D
)iiD E
)iiE F
{jj 
usingkk 
(kk 
StreamReaderkk '
srkk( *
=kk+ ,
newkk- 0
StreamReaderkk1 =
(kk= >
Consolekk> E
.kkE F
OpenStandardInputkkF W
(kkW X
)kkX Y
)kkY Z
)kkZ [
{ll 
passwordnn  
=nn! "
srnn# %
.nn% &
ReadLinenn& .
(nn. /
)nn/ 0
;nn0 1
}oo 
}pp 
}qq 
catchrr 
(rr 
IOExceptionrr 
exceptIOrr '
)rr' (
{ss 
IOtt 
.tt 
Loggertt 
.tt 
Logtt 
(tt 
NLogtt "
.tt" #
LogLeveltt# +
.tt+ ,
Warntt, 0
,tt0 1
$strtt2 M
,ttM N
exceptIOttO W
)ttW X
;ttX Y
}uu 
finallyvv 
{ww 
tryxx 
{yy 
ifzz 
(zz 
listenerzz  
!=zz! #
nullzz$ (
)zz( )
{{{ 
listener||  
.||  !
Stop||! %
(||% &
)||& '
;||' (
}}} 
}~~ 
catch 
( 
IOException "
exceptIO# +
)+ ,
{
ÄÄ 
IO
ÅÅ 
.
ÅÅ 
Logger
ÅÅ 
.
ÅÅ 
Log
ÅÅ !
(
ÅÅ! "
NLog
ÅÅ" &
.
ÅÅ& '
LogLevel
ÅÅ' /
.
ÅÅ/ 0
Warn
ÅÅ0 4
,
ÅÅ4 5
$str
ÅÅ6 Q
,
ÅÅQ R
exceptIO
ÅÅS [
)
ÅÅ[ \
;
ÅÅ\ ]
}
ÇÇ 
}
ÉÉ 
}
ÑÑ 	R
DCWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_81_base
ÖÖ L

baseObject
ÖÖM W
=
ÖÖX Y
new
ÖÖZ ]V
GCWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_81_goodB2GÖÖ^ •
(ÖÖ• ¶
)ÖÖ¶ ß
;ÖÖß ®

baseObject
ÜÜ 
.
ÜÜ 
Action
ÜÜ 
(
ÜÜ 
password
ÜÜ "
)
ÜÜ# $
;
ÜÜ$ %
}
áá 
}ââ 
}ää Ï
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_81_bad.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class O
CCWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_81_bad I
:J KQ
DCWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_81_base	L ê
{ 
public 

override 
void 
Action 
(  
string  &
password' /
)0 1
{   
try!! 
{"" 	
using$$ 
($$ 
SqlConnection$$  

connection$$! +
=$$, -
new$$. 1
SqlConnection$$2 ?
($$? @
$str$$@ v
+$$w x
$str$$y }
+$$~ 
$str
$$Ä å
+
$$ç é
password
$$è ó
)
$$ó ò
)
$$ò ô
{%% 

connection&& 
.&& 
Open&& 
(&&  
)&&  !
;&&! "
using'' 
('' 

SqlCommand'' !
command''" )
=''* +
new'', /

SqlCommand''0 :
('': ;
$str''; U
,''U V

connection''W a
)''a b
)''b c
{(( 
command)) 
.)) 
ExecuteNonQuery)) +
())+ ,
))), -
;))- .
}** 
}++ 
},, 	
catch-- 
(-- 
SqlException-- 
	exceptSql-- %
)--% &
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. N
,//N O
	exceptSql//P Y
)//Y Z
;//Z [
}00 	
}11 
}22 
}33 à
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_81_base.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
abstract 
class	 P
DCWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_81_base S
{ 
public 

abstract 
void 
Action 
(  
string  &
password' /
)0 1
;1 2
} 
}   ‰ 
…C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_81_goodB2G.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class S
GCWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_81_goodB2G M
:N OQ
DCWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_81_base	P î
{ 
public   

override   
void   
Action   
(    
string    &
password  ' /
)  0 1
{!! 
if"" 

("" 
password"" 
!="" 
null"" 
)"" 
{## 	
{%% 
using&& 
(&& $
AesCryptoServiceProvider&& /
aesAlg&&0 6
=&&7 8
new&&9 <$
AesCryptoServiceProvider&&= U
(&&U V
)&&V W
)&&W X
{'' 
aesAlg(( 
.(( 
Padding(( "
=((# $
PaddingMode((% 0
.((0 1
None((1 5
;((5 6
aesAlg)) 
.)) 
Key)) 
=))  
Encoding))! )
.))) *
UTF8))* .
.)). /
GetBytes))/ 7
())7 8
$str))8 J
)))J K
;))K L
ICryptoTransform++ $
	decryptor++% .
=++/ 0
aesAlg++1 7
.++7 8
CreateDecryptor++8 G
(++G H
aesAlg++H N
.++N O
Key++O R
,++R S
aesAlg++T Z
.++Z [
IV++[ ]
)++] ^
;++^ _
using-- 
(-- 
MemoryStream-- '
	msDecrypt--( 1
=--2 3
new--4 7
MemoryStream--8 D
(--D E
Encoding--E M
.--M N
UTF8--N R
.--R S
GetBytes--S [
(--[ \
password--\ d
)--d e
)--e f
)--f g
{.. 
using// 
(// 
CryptoStream// +
	csDecrypt//, 5
=//6 7
new//8 ;
CryptoStream//< H
(//H I
	msDecrypt//I R
,//R S
	decryptor//T ]
,//] ^
CryptoStreamMode//_ o
.//o p
Read//p t
)//t u
)//u v
{00 
using11 !
(11" #
StreamReader11# /
	srDecrypt110 9
=11: ;
new11< ?
StreamReader11@ L
(11L M
	csDecrypt11M V
)11V W
)11W X
{22 
password55  (
=55) *
	srDecrypt55+ 4
.554 5
	ReadToEnd555 >
(55> ?
)55? @
;55@ A
}66 
}77 
}88 
}99 
}:: 
try;; 
{<< 
using>> 
(>> 
SqlConnection>> $

connection>>% /
=>>0 1
new>>2 5
SqlConnection>>6 C
(>>C D
$str>>D z
+>>{ |
$str	>>} Å
+
>>Ç É
$str
>>Ñ ê
+
>>ë í
password
>>ì õ
)
>>õ ú
)
>>ú ù
{?? 

connection@@ 
.@@ 
Open@@ #
(@@# $
)@@$ %
;@@% &
usingAA 
(AA 

SqlCommandAA %
commandAA& -
=AA. /
newAA0 3

SqlCommandAA4 >
(AA> ?
$strAA? Y
,AAY Z

connectionAA[ e
)AAe f
)AAf g
{BB 
commandCC 
.CC  
ExecuteNonQueryCC  /
(CC/ 0
)CC0 1
;CC1 2
}DD 
}EE 
}FF 
catchGG 
(GG 
SqlExceptionGG 
	exceptSqlGG  )
)GG) *
{HH 
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII "
.II" #
LogLevelII# +
.II+ ,
WarnII, 0
,II0 1
$strII2 R
,IIR S
	exceptSqlIIT ]
)II] ^
;II^ _
}JJ 
}KK 	
}LL 
}MM 
}NN Ù
…C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_81_goodG2B.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class S
GCWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_81_goodG2B M
:N OQ
DCWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_81_base	P î
{ 
public   

override   
void   
Action   
(    
string    &
password  ' /
)  0 1
{!! 
try"" 
{## 	
using%% 
(%% 
SqlConnection%%  

connection%%! +
=%%, -
new%%. 1
SqlConnection%%2 ?
(%%? @
$str%%@ v
+%%w x
$str%%y }
+%%~ 
$str
%%Ä å
+
%%ç é
password
%%è ó
)
%%ó ò
)
%%ò ô
{&& 

connection'' 
.'' 
Open'' 
(''  
)''  !
;''! "
using(( 
((( 

SqlCommand(( !
command((" )
=((* +
new((, /

SqlCommand((0 :
(((: ;
$str((; U
,((U V

connection((W a
)((a b
)((b c
{)) 
command** 
.** 
ExecuteNonQuery** +
(**+ ,
)**, -
;**- .
}++ 
},, 
}-- 	
catch.. 
(.. 
SqlException.. 
	exceptSql.. %
)..% &
{// 	
IO00 
.00 
Logger00 
.00 
Log00 
(00 
NLog00 
.00 
LogLevel00 '
.00' (
Warn00( ,
,00, -
$str00. N
,00N O
	exceptSql00P Y
)00Y Z
;00Z [
}11 	
}22 
}33 
}44 °P
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_01.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class J
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_01 D
:E F
AbstractTestCaseG W
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
password## 
;## 
password$$ 
=$$ 
$str$$ 
;$$ 
{&& 	
try'' 
{(( 
using)) 
()) 
	WebClient))  
client))! '
=))( )
new))* -
	WebClient)). 7
())7 8
)))8 9
)))9 :
{** 
using++ 
(++ 
StreamReader++ '
sr++( *
=+++ ,
new++- 0
StreamReader++1 =
(++= >
client++> D
.++D E
OpenRead++E M
(++M N
$str++N g
)++g h
)++h i
)++i j
{,, 
password00  
=00! "
sr00# %
.00% &
ReadLine00& .
(00. /
)00/ 0
;000 1
}11 
}22 
}33 
catch44 
(44 
IOException44 
exceptIO44 '
)44' (
{55 
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 "
.66" #
LogLevel66# +
.66+ ,
Warn66, 0
,660 1
$str662 M
,66M N
exceptIO66O W
)66W X
;66X Y
}77 
}88 	
try99 
{:: 	
using<< 
(<< 
SqlConnection<<  

connection<<! +
=<<, -
new<<. 1
SqlConnection<<2 ?
(<<? @
$str<<@ v
+<<w x
$str<<y }
+<<~ 
$str
<<Ä å
+
<<ç é
password
<<è ó
)
<<ó ò
)
<<ò ô
{== 

connection>> 
.>> 
Open>> 
(>>  
)>>  !
;>>! "
using?? 
(?? 

SqlCommand?? !
command??" )
=??* +
new??, /

SqlCommand??0 :
(??: ;
$str??; U
,??U V

connection??W a
)??a b
)??b c
{@@ 
commandAA 
.AA 
ExecuteNonQueryAA +
(AA+ ,
)AA, -
;AA- .
}BB 
}CC 
}DD 	
catchEE 
(EE 
SqlExceptionEE 
	exceptSqlEE %
)EE% &
{FF 	
IOGG 
.GG 
LoggerGG 
.GG 
LogGG 
(GG 
NLogGG 
.GG 
LogLevelGG '
.GG' (
WarnGG( ,
,GG, -
$strGG. N
,GGN O
	exceptSqlGGP Y
)GGY Z
;GGZ [
}HH 	
}II 
publicLL 

overrideLL 
voidLL 
GoodLL 
(LL 
)LL 
{MM 
GoodG2BNN 
(NN 
)NN 
;NN 
GoodB2GOO 
(OO 
)OO 
;OO 
}PP 
privateSS 
voidSS 
GoodG2BSS 
(SS 
)SS 
{TT 
stringUU 
passwordUU 
;UU 
passwordXX 
=XX 
$strXX "
;XX" #
tryYY 
{ZZ 	
using\\ 
(\\ 
SqlConnection\\  

connection\\! +
=\\, -
new\\. 1
SqlConnection\\2 ?
(\\? @
$str\\@ v
+\\w x
$str\\y }
+\\~ 
$str
\\Ä å
+
\\ç é
password
\\è ó
)
\\ó ò
)
\\ò ô
{]] 

connection^^ 
.^^ 
Open^^ 
(^^  
)^^  !
;^^! "
using__ 
(__ 

SqlCommand__ !
command__" )
=__* +
new__, /

SqlCommand__0 :
(__: ;
$str__; U
,__U V

connection__W a
)__a b
)__b c
{`` 
commandaa 
.aa 
ExecuteNonQueryaa +
(aa+ ,
)aa, -
;aa- .
}bb 
}cc 
}dd 	
catchee 
(ee 
SqlExceptionee 
	exceptSqlee %
)ee% &
{ff 	
IOgg 
.gg 
Loggergg 
.gg 
Loggg 
(gg 
NLoggg 
.gg 
LogLevelgg '
.gg' (
Warngg( ,
,gg, -
$strgg. N
,ggN O
	exceptSqlggP Y
)ggY Z
;ggZ [
}hh 	
}ii 
privatell 
voidll 
GoodB2Gll 
(ll 
)ll 
{mm 
stringnn 
passwordnn 
;nn 
passwordoo 
=oo 
$stroo 
;oo 
{qq 	
tryrr 
{ss 
usingtt 
(tt 
	WebClienttt  
clienttt! '
=tt( )
newtt* -
	WebClienttt. 7
(tt7 8
)tt8 9
)tt9 :
{uu 
usingvv 
(vv 
StreamReadervv '
srvv( *
=vv+ ,
newvv- 0
StreamReadervv1 =
(vv= >
clientvv> D
.vvD E
OpenReadvvE M
(vvM N
$strvvN g
)vvg h
)vvh i
)vvi j
{ww 
password{{  
={{! "
sr{{# %
.{{% &
ReadLine{{& .
({{. /
){{/ 0
;{{0 1
}|| 
}}} 
}~~ 
catch 
( 
IOException 
exceptIO '
)' (
{
ÄÄ 
IO
ÅÅ 
.
ÅÅ 
Logger
ÅÅ 
.
ÅÅ 
Log
ÅÅ 
(
ÅÅ 
NLog
ÅÅ "
.
ÅÅ" #
LogLevel
ÅÅ# +
.
ÅÅ+ ,
Warn
ÅÅ, 0
,
ÅÅ0 1
$str
ÅÅ2 M
,
ÅÅM N
exceptIO
ÅÅO W
)
ÅÅW X
;
ÅÅX Y
}
ÇÇ 
}
ÉÉ 	
if
ÑÑ 

(
ÑÑ 
password
ÑÑ 
!=
ÑÑ 
null
ÑÑ 
)
ÑÑ 
{
ÖÖ 	
{
áá 
using
àà 
(
àà &
AesCryptoServiceProvider
àà /
aesAlg
àà0 6
=
àà7 8
new
àà9 <&
AesCryptoServiceProvider
àà= U
(
ààU V
)
ààV W
)
ààW X
{
ââ 
aesAlg
ää 
.
ää 
Padding
ää "
=
ää# $
PaddingMode
ää% 0
.
ää0 1
None
ää1 5
;
ää5 6
aesAlg
ãã 
.
ãã 
Key
ãã 
=
ãã  
Encoding
ãã! )
.
ãã) *
UTF8
ãã* .
.
ãã. /
GetBytes
ãã/ 7
(
ãã7 8
$str
ãã8 J
)
ããJ K
;
ããK L
ICryptoTransform
çç $
	decryptor
çç% .
=
çç/ 0
aesAlg
çç1 7
.
çç7 8
CreateDecryptor
çç8 G
(
ççG H
aesAlg
ççH N
.
ççN O
Key
ççO R
,
ççR S
aesAlg
ççT Z
.
ççZ [
IV
çç[ ]
)
çç] ^
;
çç^ _
using
èè 
(
èè 
MemoryStream
èè '
	msDecrypt
èè( 1
=
èè2 3
new
èè4 7
MemoryStream
èè8 D
(
èèD E
Encoding
èèE M
.
èèM N
UTF8
èèN R
.
èèR S
GetBytes
èèS [
(
èè[ \
password
èè\ d
)
èèd e
)
èèe f
)
èèf g
{
êê 
using
ëë 
(
ëë 
CryptoStream
ëë +
	csDecrypt
ëë, 5
=
ëë6 7
new
ëë8 ;
CryptoStream
ëë< H
(
ëëH I
	msDecrypt
ëëI R
,
ëëR S
	decryptor
ëëT ]
,
ëë] ^
CryptoStreamMode
ëë_ o
.
ëëo p
Read
ëëp t
)
ëët u
)
ëëu v
{
íí 
using
ìì !
(
ìì" #
StreamReader
ìì# /
	srDecrypt
ìì0 9
=
ìì: ;
new
ìì< ?
StreamReader
ìì@ L
(
ììL M
	csDecrypt
ììM V
)
ììV W
)
ììW X
{
îî 
password
óó  (
=
óó) *
	srDecrypt
óó+ 4
.
óó4 5
	ReadToEnd
óó5 >
(
óó> ?
)
óó? @
;
óó@ A
}
òò 
}
ôô 
}
öö 
}
õõ 
}
úú 
try
ùù 
{
ûû 
using
†† 
(
†† 
SqlConnection
†† $

connection
††% /
=
††0 1
new
††2 5
SqlConnection
††6 C
(
††C D
$str
††D z
+
††{ |
$str††} Å
+††Ç É
$str††Ñ ê
+††ë í
password††ì õ
)††õ ú
)††ú ù
{
°° 

connection
¢¢ 
.
¢¢ 
Open
¢¢ #
(
¢¢# $
)
¢¢$ %
;
¢¢% &
using
££ 
(
££ 

SqlCommand
££ %
command
££& -
=
££. /
new
££0 3

SqlCommand
££4 >
(
££> ?
$str
££? Y
,
££Y Z

connection
££[ e
)
££e f
)
££f g
{
§§ 
command
•• 
.
••  
ExecuteNonQuery
••  /
(
••/ 0
)
••0 1
;
••1 2
}
¶¶ 
}
ßß 
}
®® 
catch
©© 
(
©© 
SqlException
©© 
	exceptSql
©©  )
)
©©) *
{
™™ 
IO
´´ 
.
´´ 
Logger
´´ 
.
´´ 
Log
´´ 
(
´´ 
NLog
´´ "
.
´´" #
LogLevel
´´# +
.
´´+ ,
Warn
´´, 0
,
´´0 1
$str
´´2 R
,
´´R S
	exceptSql
´´T ]
)
´´] ^
;
´´^ _
}
¨¨ 
}
≠≠ 	
}
ÆÆ 
}∞∞ 
}±± ∫ò
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_02.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class J
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_02 D
:E F
AbstractTestCaseG W
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
password## 
;## 
if$$ 

($$ 
true$$ 
)$$ 
{%% 	
password&& 
=&& 
$str&& 
;&& 
{(( 
try)) 
{** 
using++ 
(++ 
	WebClient++ $
client++% +
=++, -
new++. 1
	WebClient++2 ;
(++; <
)++< =
)++= >
{,, 
using-- 
(-- 
StreamReader-- +
sr--, .
=--/ 0
new--1 4
StreamReader--5 A
(--A B
client--B H
.--H I
OpenRead--I Q
(--Q R
$str--R k
)--k l
)--l m
)--m n
{.. 
password22 $
=22% &
sr22' )
.22) *
ReadLine22* 2
(222 3
)223 4
;224 5
}33 
}44 
}55 
catch66 
(66 
IOException66 "
exceptIO66# +
)66+ ,
{77 
IO88 
.88 
Logger88 
.88 
Log88 !
(88! "
NLog88" &
.88& '
LogLevel88' /
.88/ 0
Warn880 4
,884 5
$str886 Q
,88Q R
exceptIO88S [
)88[ \
;88\ ]
}99 
}:: 
};; 	
else<< 
{== 	
password@@ 
=@@ 
null@@ 
;@@ 
}AA 	
ifBB 

(BB 
trueBB 
)BB 
{CC 	
tryDD 
{EE 
usingGG 
(GG 
SqlConnectionGG $

connectionGG% /
=GG0 1
newGG2 5
SqlConnectionGG6 C
(GGC D
$strGGD z
+GG{ |
$str	GG} Å
+
GGÇ É
$str
GGÑ ê
+
GGë í
password
GGì õ
)
GGõ ú
)
GGú ù
{HH 

connectionII 
.II 
OpenII #
(II# $
)II$ %
;II% &
usingJJ 
(JJ 

SqlCommandJJ %
commandJJ& -
=JJ. /
newJJ0 3

SqlCommandJJ4 >
(JJ> ?
$strJJ? Y
,JJY Z

connectionJJ[ e
)JJe f
)JJf g
{KK 
commandLL 
.LL  
ExecuteNonQueryLL  /
(LL/ 0
)LL0 1
;LL1 2
}MM 
}NN 
}OO 
catchPP 
(PP 
SqlExceptionPP 
	exceptSqlPP  )
)PP) *
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR 
(RR 
NLogRR "
.RR" #
LogLevelRR# +
.RR+ ,
WarnRR, 0
,RR0 1
$strRR2 R
,RRR S
	exceptSqlRRT ]
)RR] ^
;RR^ _
}SS 
}TT 	
}UU 
privateYY 
voidYY 
GoodG2B1YY 
(YY 
)YY 
{ZZ 
string[[ 
password[[ 
;[[ 
if\\ 

(\\ 
false\\ 
)\\ 
{]] 	
password`` 
=`` 
null`` 
;`` 
}aa 	
elsebb 
{cc 	
passwordff 
=ff 
$strff &
;ff& '
}gg 	
ifhh 

(hh 
truehh 
)hh 
{ii 	
tryjj 
{kk 
usingmm 
(mm 
SqlConnectionmm $

connectionmm% /
=mm0 1
newmm2 5
SqlConnectionmm6 C
(mmC D
$strmmD z
+mm{ |
$str	mm} Å
+
mmÇ É
$str
mmÑ ê
+
mmë í
password
mmì õ
)
mmõ ú
)
mmú ù
{nn 

connectionoo 
.oo 
Openoo #
(oo# $
)oo$ %
;oo% &
usingpp 
(pp 

SqlCommandpp %
commandpp& -
=pp. /
newpp0 3

SqlCommandpp4 >
(pp> ?
$strpp? Y
,ppY Z

connectionpp[ e
)ppe f
)ppf g
{qq 
commandrr 
.rr  
ExecuteNonQueryrr  /
(rr/ 0
)rr0 1
;rr1 2
}ss 
}tt 
}uu 
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv  )
)vv) *
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
	exceptSqlxxT ]
)xx] ^
;xx^ _
}yy 
}zz 	
}{{ 
private~~ 
void~~ 
GoodG2B2~~ 
(~~ 
)~~ 
{ 
string
ÄÄ 
password
ÄÄ 
;
ÄÄ 
if
ÅÅ 

(
ÅÅ 
true
ÅÅ 
)
ÅÅ 
{
ÇÇ 	
password
ÖÖ 
=
ÖÖ 
$str
ÖÖ &
;
ÖÖ& '
}
ÜÜ 	
else
áá 
{
àà 	
password
ãã 
=
ãã 
null
ãã 
;
ãã 
}
åå 	
if
çç 

(
çç 
true
çç 
)
çç 
{
éé 	
try
èè 
{
êê 
using
íí 
(
íí 
SqlConnection
íí $

connection
íí% /
=
íí0 1
new
íí2 5
SqlConnection
íí6 C
(
ííC D
$str
ííD z
+
íí{ |
$stríí} Å
+ííÇ É
$strííÑ ê
+ííë í
passwordííì õ
)ííõ ú
)ííú ù
{
ìì 

connection
îî 
.
îî 
Open
îî #
(
îî# $
)
îî$ %
;
îî% &
using
ïï 
(
ïï 

SqlCommand
ïï %
command
ïï& -
=
ïï. /
new
ïï0 3

SqlCommand
ïï4 >
(
ïï> ?
$str
ïï? Y
,
ïïY Z

connection
ïï[ e
)
ïïe f
)
ïïf g
{
ññ 
command
óó 
.
óó  
ExecuteNonQuery
óó  /
(
óó/ 0
)
óó0 1
;
óó1 2
}
òò 
}
ôô 
}
öö 
catch
õõ 
(
õõ 
SqlException
õõ 
	exceptSql
õõ  )
)
õõ) *
{
úú 
IO
ùù 
.
ùù 
Logger
ùù 
.
ùù 
Log
ùù 
(
ùù 
NLog
ùù "
.
ùù" #
LogLevel
ùù# +
.
ùù+ ,
Warn
ùù, 0
,
ùù0 1
$str
ùù2 R
,
ùùR S
	exceptSql
ùùT ]
)
ùù] ^
;
ùù^ _
}
ûû 
}
üü 	
}
†† 
private
££ 
void
££ 
GoodB2G1
££ 
(
££ 
)
££ 
{
§§ 
string
•• 
password
•• 
;
•• 
if
¶¶ 

(
¶¶ 
true
¶¶ 
)
¶¶ 
{
ßß 	
password
®® 
=
®® 
$str
®® 
;
®® 
{
™™ 
try
´´ 
{
¨¨ 
using
≠≠ 
(
≠≠ 
	WebClient
≠≠ $
client
≠≠% +
=
≠≠, -
new
≠≠. 1
	WebClient
≠≠2 ;
(
≠≠; <
)
≠≠< =
)
≠≠= >
{
ÆÆ 
using
ØØ 
(
ØØ 
StreamReader
ØØ +
sr
ØØ, .
=
ØØ/ 0
new
ØØ1 4
StreamReader
ØØ5 A
(
ØØA B
client
ØØB H
.
ØØH I
OpenRead
ØØI Q
(
ØØQ R
$str
ØØR k
)
ØØk l
)
ØØl m
)
ØØm n
{
∞∞ 
password
¥¥ $
=
¥¥% &
sr
¥¥' )
.
¥¥) *
ReadLine
¥¥* 2
(
¥¥2 3
)
¥¥3 4
;
¥¥4 5
}
µµ 
}
∂∂ 
}
∑∑ 
catch
∏∏ 
(
∏∏ 
IOException
∏∏ "
exceptIO
∏∏# +
)
∏∏+ ,
{
ππ 
IO
∫∫ 
.
∫∫ 
Logger
∫∫ 
.
∫∫ 
Log
∫∫ !
(
∫∫! "
NLog
∫∫" &
.
∫∫& '
LogLevel
∫∫' /
.
∫∫/ 0
Warn
∫∫0 4
,
∫∫4 5
$str
∫∫6 Q
,
∫∫Q R
exceptIO
∫∫S [
)
∫∫[ \
;
∫∫\ ]
}
ªª 
}
ºº 
}
ΩΩ 	
else
ææ 
{
øø 	
password
¬¬ 
=
¬¬ 
null
¬¬ 
;
¬¬ 
}
√√ 	
if
ƒƒ 

(
ƒƒ 
false
ƒƒ 
)
ƒƒ 
{
≈≈ 	
IO
«« 
.
«« 
	WriteLine
«« 
(
«« 
$str
«« /
)
««/ 0
;
««0 1
}
»» 	
else
…… 
{
   	
if
ÀÀ 
(
ÀÀ 
password
ÀÀ 
!=
ÀÀ 
null
ÀÀ  
)
ÀÀ  !
{
ÃÃ 
{
ŒŒ 
using
œœ 
(
œœ &
AesCryptoServiceProvider
œœ 3
aesAlg
œœ4 :
=
œœ; <
new
œœ= @&
AesCryptoServiceProvider
œœA Y
(
œœY Z
)
œœZ [
)
œœ[ \
{
–– 
aesAlg
—— 
.
—— 
Padding
—— &
=
——' (
PaddingMode
——) 4
.
——4 5
None
——5 9
;
——9 :
aesAlg
““ 
.
““ 
Key
““ "
=
““# $
Encoding
““% -
.
““- .
UTF8
““. 2
.
““2 3
GetBytes
““3 ;
(
““; <
$str
““< N
)
““N O
;
““O P
ICryptoTransform
‘‘ (
	decryptor
‘‘) 2
=
‘‘3 4
aesAlg
‘‘5 ;
.
‘‘; <
CreateDecryptor
‘‘< K
(
‘‘K L
aesAlg
‘‘L R
.
‘‘R S
Key
‘‘S V
,
‘‘V W
aesAlg
‘‘X ^
.
‘‘^ _
IV
‘‘_ a
)
‘‘a b
;
‘‘b c
using
÷÷ 
(
÷÷ 
MemoryStream
÷÷ +
	msDecrypt
÷÷, 5
=
÷÷6 7
new
÷÷8 ;
MemoryStream
÷÷< H
(
÷÷H I
Encoding
÷÷I Q
.
÷÷Q R
UTF8
÷÷R V
.
÷÷V W
GetBytes
÷÷W _
(
÷÷_ `
password
÷÷` h
)
÷÷h i
)
÷÷i j
)
÷÷j k
{
◊◊ 
using
ÿÿ !
(
ÿÿ" #
CryptoStream
ÿÿ# /
	csDecrypt
ÿÿ0 9
=
ÿÿ: ;
new
ÿÿ< ?
CryptoStream
ÿÿ@ L
(
ÿÿL M
	msDecrypt
ÿÿM V
,
ÿÿV W
	decryptor
ÿÿX a
,
ÿÿa b
CryptoStreamMode
ÿÿc s
.
ÿÿs t
Read
ÿÿt x
)
ÿÿx y
)
ÿÿy z
{
ŸŸ 
using
⁄⁄  %
(
⁄⁄& '
StreamReader
⁄⁄' 3
	srDecrypt
⁄⁄4 =
=
⁄⁄> ?
new
⁄⁄@ C
StreamReader
⁄⁄D P
(
⁄⁄P Q
	csDecrypt
⁄⁄Q Z
)
⁄⁄Z [
)
⁄⁄[ \
{
€€  !
password
ﬁﬁ$ ,
=
ﬁﬁ- .
	srDecrypt
ﬁﬁ/ 8
.
ﬁﬁ8 9
	ReadToEnd
ﬁﬁ9 B
(
ﬁﬁB C
)
ﬁﬁC D
;
ﬁﬁD E
}
ﬂﬂ  !
}
‡‡ 
}
·· 
}
‚‚ 
}
„„ 
try
‰‰ 
{
ÂÂ 
using
ÁÁ 
(
ÁÁ 
SqlConnection
ÁÁ (

connection
ÁÁ) 3
=
ÁÁ4 5
new
ÁÁ6 9
SqlConnection
ÁÁ: G
(
ÁÁG H
$str
ÁÁH ~
+ÁÁ Ä
$strÁÁÅ Ö
+ÁÁÜ á
$strÁÁà î
+ÁÁï ñ
passwordÁÁó ü
)ÁÁü †
)ÁÁ† °
{
ËË 

connection
ÈÈ "
.
ÈÈ" #
Open
ÈÈ# '
(
ÈÈ' (
)
ÈÈ( )
;
ÈÈ) *
using
ÍÍ 
(
ÍÍ 

SqlCommand
ÍÍ )
command
ÍÍ* 1
=
ÍÍ2 3
new
ÍÍ4 7

SqlCommand
ÍÍ8 B
(
ÍÍB C
$str
ÍÍC ]
,
ÍÍ] ^

connection
ÍÍ_ i
)
ÍÍi j
)
ÍÍj k
{
ÎÎ 
command
ÏÏ #
.
ÏÏ# $
ExecuteNonQuery
ÏÏ$ 3
(
ÏÏ3 4
)
ÏÏ4 5
;
ÏÏ5 6
}
ÌÌ 
}
ÓÓ 
}
ÔÔ 
catch
 
(
 
SqlException
 #
	exceptSql
$ -
)
- .
{
ÒÒ 
IO
ÚÚ 
.
ÚÚ 
Logger
ÚÚ 
.
ÚÚ 
Log
ÚÚ !
(
ÚÚ! "
NLog
ÚÚ" &
.
ÚÚ& '
LogLevel
ÚÚ' /
.
ÚÚ/ 0
Warn
ÚÚ0 4
,
ÚÚ4 5
$str
ÚÚ6 V
,
ÚÚV W
	exceptSql
ÚÚX a
)
ÚÚa b
;
ÚÚb c
}
ÛÛ 
}
ÙÙ 
}
ıı 	
}
ˆˆ 
private
˘˘ 
void
˘˘ 
GoodB2G2
˘˘ 
(
˘˘ 
)
˘˘ 
{
˙˙ 
string
˚˚ 
password
˚˚ 
;
˚˚ 
if
¸¸ 

(
¸¸ 
true
¸¸ 
)
¸¸ 
{
˝˝ 	
password
˛˛ 
=
˛˛ 
$str
˛˛ 
;
˛˛ 
{
ÄÄ 
try
ÅÅ 
{
ÇÇ 
using
ÉÉ 
(
ÉÉ 
	WebClient
ÉÉ $
client
ÉÉ% +
=
ÉÉ, -
new
ÉÉ. 1
	WebClient
ÉÉ2 ;
(
ÉÉ; <
)
ÉÉ< =
)
ÉÉ= >
{
ÑÑ 
using
ÖÖ 
(
ÖÖ 
StreamReader
ÖÖ +
sr
ÖÖ, .
=
ÖÖ/ 0
new
ÖÖ1 4
StreamReader
ÖÖ5 A
(
ÖÖA B
client
ÖÖB H
.
ÖÖH I
OpenRead
ÖÖI Q
(
ÖÖQ R
$str
ÖÖR k
)
ÖÖk l
)
ÖÖl m
)
ÖÖm n
{
ÜÜ 
password
ää $
=
ää% &
sr
ää' )
.
ää) *
ReadLine
ää* 2
(
ää2 3
)
ää3 4
;
ää4 5
}
ãã 
}
åå 
}
çç 
catch
éé 
(
éé 
IOException
éé "
exceptIO
éé# +
)
éé+ ,
{
èè 
IO
êê 
.
êê 
Logger
êê 
.
êê 
Log
êê !
(
êê! "
NLog
êê" &
.
êê& '
LogLevel
êê' /
.
êê/ 0
Warn
êê0 4
,
êê4 5
$str
êê6 Q
,
êêQ R
exceptIO
êêS [
)
êê[ \
;
êê\ ]
}
ëë 
}
íí 
}
ìì 	
else
îî 
{
ïï 	
password
òò 
=
òò 
null
òò 
;
òò 
}
ôô 	
if
öö 

(
öö 
true
öö 
)
öö 
{
õõ 	
if
úú 
(
úú 
password
úú 
!=
úú 
null
úú  
)
úú  !
{
ùù 
{
üü 
using
†† 
(
†† &
AesCryptoServiceProvider
†† 3
aesAlg
††4 :
=
††; <
new
††= @&
AesCryptoServiceProvider
††A Y
(
††Y Z
)
††Z [
)
††[ \
{
°° 
aesAlg
¢¢ 
.
¢¢ 
Padding
¢¢ &
=
¢¢' (
PaddingMode
¢¢) 4
.
¢¢4 5
None
¢¢5 9
;
¢¢9 :
aesAlg
££ 
.
££ 
Key
££ "
=
££# $
Encoding
££% -
.
££- .
UTF8
££. 2
.
££2 3
GetBytes
££3 ;
(
££; <
$str
££< N
)
££N O
;
££O P
ICryptoTransform
•• (
	decryptor
••) 2
=
••3 4
aesAlg
••5 ;
.
••; <
CreateDecryptor
••< K
(
••K L
aesAlg
••L R
.
••R S
Key
••S V
,
••V W
aesAlg
••X ^
.
••^ _
IV
••_ a
)
••a b
;
••b c
using
ßß 
(
ßß 
MemoryStream
ßß +
	msDecrypt
ßß, 5
=
ßß6 7
new
ßß8 ;
MemoryStream
ßß< H
(
ßßH I
Encoding
ßßI Q
.
ßßQ R
UTF8
ßßR V
.
ßßV W
GetBytes
ßßW _
(
ßß_ `
password
ßß` h
)
ßßh i
)
ßßi j
)
ßßj k
{
®® 
using
©© !
(
©©" #
CryptoStream
©©# /
	csDecrypt
©©0 9
=
©©: ;
new
©©< ?
CryptoStream
©©@ L
(
©©L M
	msDecrypt
©©M V
,
©©V W
	decryptor
©©X a
,
©©a b
CryptoStreamMode
©©c s
.
©©s t
Read
©©t x
)
©©x y
)
©©y z
{
™™ 
using
´´  %
(
´´& '
StreamReader
´´' 3
	srDecrypt
´´4 =
=
´´> ?
new
´´@ C
StreamReader
´´D P
(
´´P Q
	csDecrypt
´´Q Z
)
´´Z [
)
´´[ \
{
¨¨  !
password
ØØ$ ,
=
ØØ- .
	srDecrypt
ØØ/ 8
.
ØØ8 9
	ReadToEnd
ØØ9 B
(
ØØB C
)
ØØC D
;
ØØD E
}
∞∞  !
}
±± 
}
≤≤ 
}
≥≥ 
}
¥¥ 
try
µµ 
{
∂∂ 
using
∏∏ 
(
∏∏ 
SqlConnection
∏∏ (

connection
∏∏) 3
=
∏∏4 5
new
∏∏6 9
SqlConnection
∏∏: G
(
∏∏G H
$str
∏∏H ~
+∏∏ Ä
$str∏∏Å Ö
+∏∏Ü á
$str∏∏à î
+∏∏ï ñ
password∏∏ó ü
)∏∏ü †
)∏∏† °
{
ππ 

connection
∫∫ "
.
∫∫" #
Open
∫∫# '
(
∫∫' (
)
∫∫( )
;
∫∫) *
using
ªª 
(
ªª 

SqlCommand
ªª )
command
ªª* 1
=
ªª2 3
new
ªª4 7

SqlCommand
ªª8 B
(
ªªB C
$str
ªªC ]
,
ªª] ^

connection
ªª_ i
)
ªªi j
)
ªªj k
{
ºº 
command
ΩΩ #
.
ΩΩ# $
ExecuteNonQuery
ΩΩ$ 3
(
ΩΩ3 4
)
ΩΩ4 5
;
ΩΩ5 6
}
ææ 
}
øø 
}
¿¿ 
catch
¡¡ 
(
¡¡ 
SqlException
¡¡ #
	exceptSql
¡¡$ -
)
¡¡- .
{
¬¬ 
IO
√√ 
.
√√ 
Logger
√√ 
.
√√ 
Log
√√ !
(
√√! "
NLog
√√" &
.
√√& '
LogLevel
√√' /
.
√√/ 0
Warn
√√0 4
,
√√4 5
$str
√√6 V
,
√√V W
	exceptSql
√√X a
)
√√a b
;
√√b c
}
ƒƒ 
}
≈≈ 
}
∆∆ 	
}
«« 
public
…… 

override
…… 
void
…… 
Good
…… 
(
…… 
)
…… 
{
   
GoodG2B1
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
GoodG2B2
ÃÃ 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ 
GoodB2G1
ÕÕ 
(
ÕÕ 
)
ÕÕ 
;
ÕÕ 
GoodB2G2
ŒŒ 
(
ŒŒ 
)
ŒŒ 
;
ŒŒ 
}
œœ 
}—— 
}““ §õ
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_03.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class J
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_03 D
:E F
AbstractTestCaseG W
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
password## 
;## 
if$$ 

($$ 
$num$$ 
==$$ 
$num$$ 
)$$ 
{%% 	
password&& 
=&& 
$str&& 
;&& 
{(( 
try)) 
{** 
using++ 
(++ 
	WebClient++ $
client++% +
=++, -
new++. 1
	WebClient++2 ;
(++; <
)++< =
)++= >
{,, 
using-- 
(-- 
StreamReader-- +
sr--, .
=--/ 0
new--1 4
StreamReader--5 A
(--A B
client--B H
.--H I
OpenRead--I Q
(--Q R
$str--R k
)--k l
)--l m
)--m n
{.. 
password22 $
=22% &
sr22' )
.22) *
ReadLine22* 2
(222 3
)223 4
;224 5
}33 
}44 
}55 
catch66 
(66 
IOException66 "
exceptIO66# +
)66+ ,
{77 
IO88 
.88 
Logger88 
.88 
Log88 !
(88! "
NLog88" &
.88& '
LogLevel88' /
.88/ 0
Warn880 4
,884 5
$str886 Q
,88Q R
exceptIO88S [
)88[ \
;88\ ]
}99 
}:: 
};; 	
else<< 
{== 	
password@@ 
=@@ 
null@@ 
;@@ 
}AA 	
ifBB 

(BB 
$numBB 
==BB 
$numBB 
)BB 
{CC 	
tryDD 
{EE 
usingGG 
(GG 
SqlConnectionGG $

connectionGG% /
=GG0 1
newGG2 5
SqlConnectionGG6 C
(GGC D
$strGGD z
+GG{ |
$str	GG} Å
+
GGÇ É
$str
GGÑ ê
+
GGë í
password
GGì õ
)
GGõ ú
)
GGú ù
{HH 

connectionII 
.II 
OpenII #
(II# $
)II$ %
;II% &
usingJJ 
(JJ 

SqlCommandJJ %
commandJJ& -
=JJ. /
newJJ0 3

SqlCommandJJ4 >
(JJ> ?
$strJJ? Y
,JJY Z

connectionJJ[ e
)JJe f
)JJf g
{KK 
commandLL 
.LL  
ExecuteNonQueryLL  /
(LL/ 0
)LL0 1
;LL1 2
}MM 
}NN 
}OO 
catchPP 
(PP 
SqlExceptionPP 
	exceptSqlPP  )
)PP) *
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR 
(RR 
NLogRR "
.RR" #
LogLevelRR# +
.RR+ ,
WarnRR, 0
,RR0 1
$strRR2 R
,RRR S
	exceptSqlRRT ]
)RR] ^
;RR^ _
}SS 
}TT 	
}UU 
privateYY 
voidYY 
GoodG2B1YY 
(YY 
)YY 
{ZZ 
string[[ 
password[[ 
;[[ 
if\\ 

(\\ 
$num\\ 
!=\\ 
$num\\ 
)\\ 
{]] 	
password`` 
=`` 
null`` 
;`` 
}aa 	
elsebb 
{cc 	
passwordff 
=ff 
$strff &
;ff& '
}gg 	
ifhh 

(hh 
$numhh 
==hh 
$numhh 
)hh 
{ii 	
tryjj 
{kk 
usingmm 
(mm 
SqlConnectionmm $

connectionmm% /
=mm0 1
newmm2 5
SqlConnectionmm6 C
(mmC D
$strmmD z
+mm{ |
$str	mm} Å
+
mmÇ É
$str
mmÑ ê
+
mmë í
password
mmì õ
)
mmõ ú
)
mmú ù
{nn 

connectionoo 
.oo 
Openoo #
(oo# $
)oo$ %
;oo% &
usingpp 
(pp 

SqlCommandpp %
commandpp& -
=pp. /
newpp0 3

SqlCommandpp4 >
(pp> ?
$strpp? Y
,ppY Z

connectionpp[ e
)ppe f
)ppf g
{qq 
commandrr 
.rr  
ExecuteNonQueryrr  /
(rr/ 0
)rr0 1
;rr1 2
}ss 
}tt 
}uu 
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv  )
)vv) *
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
	exceptSqlxxT ]
)xx] ^
;xx^ _
}yy 
}zz 	
}{{ 
private~~ 
void~~ 
GoodG2B2~~ 
(~~ 
)~~ 
{ 
string
ÄÄ 
password
ÄÄ 
;
ÄÄ 
if
ÅÅ 

(
ÅÅ 
$num
ÅÅ 
==
ÅÅ 
$num
ÅÅ 
)
ÅÅ 
{
ÇÇ 	
password
ÖÖ 
=
ÖÖ 
$str
ÖÖ &
;
ÖÖ& '
}
ÜÜ 	
else
áá 
{
àà 	
password
ãã 
=
ãã 
null
ãã 
;
ãã 
}
åå 	
if
çç 

(
çç 
$num
çç 
==
çç 
$num
çç 
)
çç 
{
éé 	
try
èè 
{
êê 
using
íí 
(
íí 
SqlConnection
íí $

connection
íí% /
=
íí0 1
new
íí2 5
SqlConnection
íí6 C
(
ííC D
$str
ííD z
+
íí{ |
$stríí} Å
+ííÇ É
$strííÑ ê
+ííë í
passwordííì õ
)ííõ ú
)ííú ù
{
ìì 

connection
îî 
.
îî 
Open
îî #
(
îî# $
)
îî$ %
;
îî% &
using
ïï 
(
ïï 

SqlCommand
ïï %
command
ïï& -
=
ïï. /
new
ïï0 3

SqlCommand
ïï4 >
(
ïï> ?
$str
ïï? Y
,
ïïY Z

connection
ïï[ e
)
ïïe f
)
ïïf g
{
ññ 
command
óó 
.
óó  
ExecuteNonQuery
óó  /
(
óó/ 0
)
óó0 1
;
óó1 2
}
òò 
}
ôô 
}
öö 
catch
õõ 
(
õõ 
SqlException
õõ 
	exceptSql
õõ  )
)
õõ) *
{
úú 
IO
ùù 
.
ùù 
Logger
ùù 
.
ùù 
Log
ùù 
(
ùù 
NLog
ùù "
.
ùù" #
LogLevel
ùù# +
.
ùù+ ,
Warn
ùù, 0
,
ùù0 1
$str
ùù2 R
,
ùùR S
	exceptSql
ùùT ]
)
ùù] ^
;
ùù^ _
}
ûû 
}
üü 	
}
†† 
private
££ 
void
££ 
GoodB2G1
££ 
(
££ 
)
££ 
{
§§ 
string
•• 
password
•• 
;
•• 
if
¶¶ 

(
¶¶ 
$num
¶¶ 
==
¶¶ 
$num
¶¶ 
)
¶¶ 
{
ßß 	
password
®® 
=
®® 
$str
®® 
;
®® 
{
™™ 
try
´´ 
{
¨¨ 
using
≠≠ 
(
≠≠ 
	WebClient
≠≠ $
client
≠≠% +
=
≠≠, -
new
≠≠. 1
	WebClient
≠≠2 ;
(
≠≠; <
)
≠≠< =
)
≠≠= >
{
ÆÆ 
using
ØØ 
(
ØØ 
StreamReader
ØØ +
sr
ØØ, .
=
ØØ/ 0
new
ØØ1 4
StreamReader
ØØ5 A
(
ØØA B
client
ØØB H
.
ØØH I
OpenRead
ØØI Q
(
ØØQ R
$str
ØØR k
)
ØØk l
)
ØØl m
)
ØØm n
{
∞∞ 
password
¥¥ $
=
¥¥% &
sr
¥¥' )
.
¥¥) *
ReadLine
¥¥* 2
(
¥¥2 3
)
¥¥3 4
;
¥¥4 5
}
µµ 
}
∂∂ 
}
∑∑ 
catch
∏∏ 
(
∏∏ 
IOException
∏∏ "
exceptIO
∏∏# +
)
∏∏+ ,
{
ππ 
IO
∫∫ 
.
∫∫ 
Logger
∫∫ 
.
∫∫ 
Log
∫∫ !
(
∫∫! "
NLog
∫∫" &
.
∫∫& '
LogLevel
∫∫' /
.
∫∫/ 0
Warn
∫∫0 4
,
∫∫4 5
$str
∫∫6 Q
,
∫∫Q R
exceptIO
∫∫S [
)
∫∫[ \
;
∫∫\ ]
}
ªª 
}
ºº 
}
ΩΩ 	
else
ææ 
{
øø 	
password
¬¬ 
=
¬¬ 
null
¬¬ 
;
¬¬ 
}
√√ 	
if
ƒƒ 

(
ƒƒ 
$num
ƒƒ 
!=
ƒƒ 
$num
ƒƒ 
)
ƒƒ 
{
≈≈ 	
IO
«« 
.
«« 
	WriteLine
«« 
(
«« 
$str
«« /
)
««/ 0
;
««0 1
}
»» 	
else
…… 
{
   	
if
ÀÀ 
(
ÀÀ 
password
ÀÀ 
!=
ÀÀ 
null
ÀÀ  
)
ÀÀ  !
{
ÃÃ 
{
ŒŒ 
using
œœ 
(
œœ &
AesCryptoServiceProvider
œœ 3
aesAlg
œœ4 :
=
œœ; <
new
œœ= @&
AesCryptoServiceProvider
œœA Y
(
œœY Z
)
œœZ [
)
œœ[ \
{
–– 
aesAlg
—— 
.
—— 
Padding
—— &
=
——' (
PaddingMode
——) 4
.
——4 5
None
——5 9
;
——9 :
aesAlg
““ 
.
““ 
Key
““ "
=
““# $
Encoding
““% -
.
““- .
UTF8
““. 2
.
““2 3
GetBytes
““3 ;
(
““; <
$str
““< N
)
““N O
;
““O P
ICryptoTransform
‘‘ (
	decryptor
‘‘) 2
=
‘‘3 4
aesAlg
‘‘5 ;
.
‘‘; <
CreateDecryptor
‘‘< K
(
‘‘K L
aesAlg
‘‘L R
.
‘‘R S
Key
‘‘S V
,
‘‘V W
aesAlg
‘‘X ^
.
‘‘^ _
IV
‘‘_ a
)
‘‘a b
;
‘‘b c
using
÷÷ 
(
÷÷ 
MemoryStream
÷÷ +
	msDecrypt
÷÷, 5
=
÷÷6 7
new
÷÷8 ;
MemoryStream
÷÷< H
(
÷÷H I
Encoding
÷÷I Q
.
÷÷Q R
UTF8
÷÷R V
.
÷÷V W
GetBytes
÷÷W _
(
÷÷_ `
password
÷÷` h
)
÷÷h i
)
÷÷i j
)
÷÷j k
{
◊◊ 
using
ÿÿ !
(
ÿÿ" #
CryptoStream
ÿÿ# /
	csDecrypt
ÿÿ0 9
=
ÿÿ: ;
new
ÿÿ< ?
CryptoStream
ÿÿ@ L
(
ÿÿL M
	msDecrypt
ÿÿM V
,
ÿÿV W
	decryptor
ÿÿX a
,
ÿÿa b
CryptoStreamMode
ÿÿc s
.
ÿÿs t
Read
ÿÿt x
)
ÿÿx y
)
ÿÿy z
{
ŸŸ 
using
⁄⁄  %
(
⁄⁄& '
StreamReader
⁄⁄' 3
	srDecrypt
⁄⁄4 =
=
⁄⁄> ?
new
⁄⁄@ C
StreamReader
⁄⁄D P
(
⁄⁄P Q
	csDecrypt
⁄⁄Q Z
)
⁄⁄Z [
)
⁄⁄[ \
{
€€  !
password
ﬁﬁ$ ,
=
ﬁﬁ- .
	srDecrypt
ﬁﬁ/ 8
.
ﬁﬁ8 9
	ReadToEnd
ﬁﬁ9 B
(
ﬁﬁB C
)
ﬁﬁC D
;
ﬁﬁD E
}
ﬂﬂ  !
}
‡‡ 
}
·· 
}
‚‚ 
}
„„ 
try
‰‰ 
{
ÂÂ 
using
ÁÁ 
(
ÁÁ 
SqlConnection
ÁÁ (

connection
ÁÁ) 3
=
ÁÁ4 5
new
ÁÁ6 9
SqlConnection
ÁÁ: G
(
ÁÁG H
$str
ÁÁH ~
+ÁÁ Ä
$strÁÁÅ Ö
+ÁÁÜ á
$strÁÁà î
+ÁÁï ñ
passwordÁÁó ü
)ÁÁü †
)ÁÁ† °
{
ËË 

connection
ÈÈ "
.
ÈÈ" #
Open
ÈÈ# '
(
ÈÈ' (
)
ÈÈ( )
;
ÈÈ) *
using
ÍÍ 
(
ÍÍ 

SqlCommand
ÍÍ )
command
ÍÍ* 1
=
ÍÍ2 3
new
ÍÍ4 7

SqlCommand
ÍÍ8 B
(
ÍÍB C
$str
ÍÍC ]
,
ÍÍ] ^

connection
ÍÍ_ i
)
ÍÍi j
)
ÍÍj k
{
ÎÎ 
command
ÏÏ #
.
ÏÏ# $
ExecuteNonQuery
ÏÏ$ 3
(
ÏÏ3 4
)
ÏÏ4 5
;
ÏÏ5 6
}
ÌÌ 
}
ÓÓ 
}
ÔÔ 
catch
 
(
 
SqlException
 #
	exceptSql
$ -
)
- .
{
ÒÒ 
IO
ÚÚ 
.
ÚÚ 
Logger
ÚÚ 
.
ÚÚ 
Log
ÚÚ !
(
ÚÚ! "
NLog
ÚÚ" &
.
ÚÚ& '
LogLevel
ÚÚ' /
.
ÚÚ/ 0
Warn
ÚÚ0 4
,
ÚÚ4 5
$str
ÚÚ6 V
,
ÚÚV W
	exceptSql
ÚÚX a
)
ÚÚa b
;
ÚÚb c
}
ÛÛ 
}
ÙÙ 
}
ıı 	
}
ˆˆ 
private
˘˘ 
void
˘˘ 
GoodB2G2
˘˘ 
(
˘˘ 
)
˘˘ 
{
˙˙ 
string
˚˚ 
password
˚˚ 
;
˚˚ 
if
¸¸ 

(
¸¸ 
$num
¸¸ 
==
¸¸ 
$num
¸¸ 
)
¸¸ 
{
˝˝ 	
password
˛˛ 
=
˛˛ 
$str
˛˛ 
;
˛˛ 
{
ÄÄ 
try
ÅÅ 
{
ÇÇ 
using
ÉÉ 
(
ÉÉ 
	WebClient
ÉÉ $
client
ÉÉ% +
=
ÉÉ, -
new
ÉÉ. 1
	WebClient
ÉÉ2 ;
(
ÉÉ; <
)
ÉÉ< =
)
ÉÉ= >
{
ÑÑ 
using
ÖÖ 
(
ÖÖ 
StreamReader
ÖÖ +
sr
ÖÖ, .
=
ÖÖ/ 0
new
ÖÖ1 4
StreamReader
ÖÖ5 A
(
ÖÖA B
client
ÖÖB H
.
ÖÖH I
OpenRead
ÖÖI Q
(
ÖÖQ R
$str
ÖÖR k
)
ÖÖk l
)
ÖÖl m
)
ÖÖm n
{
ÜÜ 
password
ää $
=
ää% &
sr
ää' )
.
ää) *
ReadLine
ää* 2
(
ää2 3
)
ää3 4
;
ää4 5
}
ãã 
}
åå 
}
çç 
catch
éé 
(
éé 
IOException
éé "
exceptIO
éé# +
)
éé+ ,
{
èè 
IO
êê 
.
êê 
Logger
êê 
.
êê 
Log
êê !
(
êê! "
NLog
êê" &
.
êê& '
LogLevel
êê' /
.
êê/ 0
Warn
êê0 4
,
êê4 5
$str
êê6 Q
,
êêQ R
exceptIO
êêS [
)
êê[ \
;
êê\ ]
}
ëë 
}
íí 
}
ìì 	
else
îî 
{
ïï 	
password
òò 
=
òò 
null
òò 
;
òò 
}
ôô 	
if
öö 

(
öö 
$num
öö 
==
öö 
$num
öö 
)
öö 
{
õõ 	
if
úú 
(
úú 
password
úú 
!=
úú 
null
úú  
)
úú  !
{
ùù 
{
üü 
using
†† 
(
†† &
AesCryptoServiceProvider
†† 3
aesAlg
††4 :
=
††; <
new
††= @&
AesCryptoServiceProvider
††A Y
(
††Y Z
)
††Z [
)
††[ \
{
°° 
aesAlg
¢¢ 
.
¢¢ 
Padding
¢¢ &
=
¢¢' (
PaddingMode
¢¢) 4
.
¢¢4 5
None
¢¢5 9
;
¢¢9 :
aesAlg
££ 
.
££ 
Key
££ "
=
££# $
Encoding
££% -
.
££- .
UTF8
££. 2
.
££2 3
GetBytes
££3 ;
(
££; <
$str
££< N
)
££N O
;
££O P
ICryptoTransform
•• (
	decryptor
••) 2
=
••3 4
aesAlg
••5 ;
.
••; <
CreateDecryptor
••< K
(
••K L
aesAlg
••L R
.
••R S
Key
••S V
,
••V W
aesAlg
••X ^
.
••^ _
IV
••_ a
)
••a b
;
••b c
using
ßß 
(
ßß 
MemoryStream
ßß +
	msDecrypt
ßß, 5
=
ßß6 7
new
ßß8 ;
MemoryStream
ßß< H
(
ßßH I
Encoding
ßßI Q
.
ßßQ R
UTF8
ßßR V
.
ßßV W
GetBytes
ßßW _
(
ßß_ `
password
ßß` h
)
ßßh i
)
ßßi j
)
ßßj k
{
®® 
using
©© !
(
©©" #
CryptoStream
©©# /
	csDecrypt
©©0 9
=
©©: ;
new
©©< ?
CryptoStream
©©@ L
(
©©L M
	msDecrypt
©©M V
,
©©V W
	decryptor
©©X a
,
©©a b
CryptoStreamMode
©©c s
.
©©s t
Read
©©t x
)
©©x y
)
©©y z
{
™™ 
using
´´  %
(
´´& '
StreamReader
´´' 3
	srDecrypt
´´4 =
=
´´> ?
new
´´@ C
StreamReader
´´D P
(
´´P Q
	csDecrypt
´´Q Z
)
´´Z [
)
´´[ \
{
¨¨  !
password
ØØ$ ,
=
ØØ- .
	srDecrypt
ØØ/ 8
.
ØØ8 9
	ReadToEnd
ØØ9 B
(
ØØB C
)
ØØC D
;
ØØD E
}
∞∞  !
}
±± 
}
≤≤ 
}
≥≥ 
}
¥¥ 
try
µµ 
{
∂∂ 
using
∏∏ 
(
∏∏ 
SqlConnection
∏∏ (

connection
∏∏) 3
=
∏∏4 5
new
∏∏6 9
SqlConnection
∏∏: G
(
∏∏G H
$str
∏∏H ~
+∏∏ Ä
$str∏∏Å Ö
+∏∏Ü á
$str∏∏à î
+∏∏ï ñ
password∏∏ó ü
)∏∏ü †
)∏∏† °
{
ππ 

connection
∫∫ "
.
∫∫" #
Open
∫∫# '
(
∫∫' (
)
∫∫( )
;
∫∫) *
using
ªª 
(
ªª 

SqlCommand
ªª )
command
ªª* 1
=
ªª2 3
new
ªª4 7

SqlCommand
ªª8 B
(
ªªB C
$str
ªªC ]
,
ªª] ^

connection
ªª_ i
)
ªªi j
)
ªªj k
{
ºº 
command
ΩΩ #
.
ΩΩ# $
ExecuteNonQuery
ΩΩ$ 3
(
ΩΩ3 4
)
ΩΩ4 5
;
ΩΩ5 6
}
ææ 
}
øø 
}
¿¿ 
catch
¡¡ 
(
¡¡ 
SqlException
¡¡ #
	exceptSql
¡¡$ -
)
¡¡- .
{
¬¬ 
IO
√√ 
.
√√ 
Logger
√√ 
.
√√ 
Log
√√ !
(
√√! "
NLog
√√" &
.
√√& '
LogLevel
√√' /
.
√√/ 0
Warn
√√0 4
,
√√4 5
$str
√√6 V
,
√√V W
	exceptSql
√√X a
)
√√a b
;
√√b c
}
ƒƒ 
}
≈≈ 
}
∆∆ 	
}
«« 
public
…… 

override
…… 
void
…… 
Good
…… 
(
…… 
)
…… 
{
   
GoodG2B1
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
GoodG2B2
ÃÃ 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ 
GoodB2G1
ÕÕ 
(
ÕÕ 
)
ÕÕ 
;
ÕÕ 
GoodB2G2
ŒŒ 
(
ŒŒ 
)
ŒŒ 
;
ŒŒ 
}
œœ 
}—— 
}““ Óõ
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_04.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class J
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_04 D
:E F
AbstractTestCaseG W
{ 
private%% 
const%% 
bool%% 
PRIVATE_CONST_TRUE%% )
=%%* +
true%%, 0
;%%0 1
private&& 
const&& 
bool&& 
PRIVATE_CONST_FALSE&& *
=&&+ ,
false&&- 2
;&&2 3
public(( 

override(( 
void(( 
Bad(( 
((( 
)(( 
{)) 
string** 
password** 
;** 
if++ 

(++ 
PRIVATE_CONST_TRUE++ 
)++ 
{,, 	
password-- 
=-- 
$str-- 
;-- 
{// 
try00 
{11 
using22 
(22 
	WebClient22 $
client22% +
=22, -
new22. 1
	WebClient222 ;
(22; <
)22< =
)22= >
{33 
using44 
(44 
StreamReader44 +
sr44, .
=44/ 0
new441 4
StreamReader445 A
(44A B
client44B H
.44H I
OpenRead44I Q
(44Q R
$str44R k
)44k l
)44l m
)44m n
{55 
password99 $
=99% &
sr99' )
.99) *
ReadLine99* 2
(992 3
)993 4
;994 5
}:: 
};; 
}<< 
catch== 
(== 
IOException== "
exceptIO==# +
)==+ ,
{>> 
IO?? 
.?? 
Logger?? 
.?? 
Log?? !
(??! "
NLog??" &
.??& '
LogLevel??' /
.??/ 0
Warn??0 4
,??4 5
$str??6 Q
,??Q R
exceptIO??S [
)??[ \
;??\ ]
}@@ 
}AA 
}BB 	
elseCC 
{DD 	
passwordGG 
=GG 
nullGG 
;GG 
}HH 	
ifII 

(II 
PRIVATE_CONST_TRUEII 
)II 
{JJ 	
tryKK 
{LL 
usingNN 
(NN 
SqlConnectionNN $

connectionNN% /
=NN0 1
newNN2 5
SqlConnectionNN6 C
(NNC D
$strNND z
+NN{ |
$str	NN} Å
+
NNÇ É
$str
NNÑ ê
+
NNë í
password
NNì õ
)
NNõ ú
)
NNú ù
{OO 

connectionPP 
.PP 
OpenPP #
(PP# $
)PP$ %
;PP% &
usingQQ 
(QQ 

SqlCommandQQ %
commandQQ& -
=QQ. /
newQQ0 3

SqlCommandQQ4 >
(QQ> ?
$strQQ? Y
,QQY Z

connectionQQ[ e
)QQe f
)QQf g
{RR 
commandSS 
.SS  
ExecuteNonQuerySS  /
(SS/ 0
)SS0 1
;SS1 2
}TT 
}UU 
}VV 
catchWW 
(WW 
SqlExceptionWW 
	exceptSqlWW  )
)WW) *
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY 
(YY 
NLogYY "
.YY" #
LogLevelYY# +
.YY+ ,
WarnYY, 0
,YY0 1
$strYY2 R
,YYR S
	exceptSqlYYT ]
)YY] ^
;YY^ _
}ZZ 
}[[ 	
}\\ 
private`` 
void`` 
GoodG2B1`` 
(`` 
)`` 
{aa 
stringbb 
passwordbb 
;bb 
ifcc 

(cc 
PRIVATE_CONST_FALSEcc 
)cc  
{dd 	
passwordgg 
=gg 
nullgg 
;gg 
}hh 	
elseii 
{jj 	
passwordmm 
=mm 
$strmm &
;mm& '
}nn 	
ifoo 

(oo 
PRIVATE_CONST_TRUEoo 
)oo 
{pp 	
tryqq 
{rr 
usingtt 
(tt 
SqlConnectiontt $

connectiontt% /
=tt0 1
newtt2 5
SqlConnectiontt6 C
(ttC D
$strttD z
+tt{ |
$str	tt} Å
+
ttÇ É
$str
ttÑ ê
+
ttë í
password
ttì õ
)
ttõ ú
)
ttú ù
{uu 

connectionvv 
.vv 
Openvv #
(vv# $
)vv$ %
;vv% &
usingww 
(ww 

SqlCommandww %
commandww& -
=ww. /
newww0 3

SqlCommandww4 >
(ww> ?
$strww? Y
,wwY Z

connectionww[ e
)wwe f
)wwf g
{xx 
commandyy 
.yy  
ExecuteNonQueryyy  /
(yy/ 0
)yy0 1
;yy1 2
}zz 
}{{ 
}|| 
catch}} 
(}} 
SqlException}} 
	exceptSql}}  )
)}}) *
{~~ 
IO 
. 
Logger 
. 
Log 
( 
NLog "
." #
LogLevel# +
.+ ,
Warn, 0
,0 1
$str2 R
,R S
	exceptSqlT ]
)] ^
;^ _
}
ÄÄ 
}
ÅÅ 	
}
ÇÇ 
private
ÖÖ 
void
ÖÖ 
GoodG2B2
ÖÖ 
(
ÖÖ 
)
ÖÖ 
{
ÜÜ 
string
áá 
password
áá 
;
áá 
if
àà 

(
àà  
PRIVATE_CONST_TRUE
àà 
)
àà 
{
ââ 	
password
åå 
=
åå 
$str
åå &
;
åå& '
}
çç 	
else
éé 
{
èè 	
password
íí 
=
íí 
null
íí 
;
íí 
}
ìì 	
if
îî 

(
îî  
PRIVATE_CONST_TRUE
îî 
)
îî 
{
ïï 	
try
ññ 
{
óó 
using
ôô 
(
ôô 
SqlConnection
ôô $

connection
ôô% /
=
ôô0 1
new
ôô2 5
SqlConnection
ôô6 C
(
ôôC D
$str
ôôD z
+
ôô{ |
$strôô} Å
+ôôÇ É
$strôôÑ ê
+ôôë í
passwordôôì õ
)ôôõ ú
)ôôú ù
{
öö 

connection
õõ 
.
õõ 
Open
õõ #
(
õõ# $
)
õõ$ %
;
õõ% &
using
úú 
(
úú 

SqlCommand
úú %
command
úú& -
=
úú. /
new
úú0 3

SqlCommand
úú4 >
(
úú> ?
$str
úú? Y
,
úúY Z

connection
úú[ e
)
úúe f
)
úúf g
{
ùù 
command
ûû 
.
ûû  
ExecuteNonQuery
ûû  /
(
ûû/ 0
)
ûû0 1
;
ûû1 2
}
üü 
}
†† 
}
°° 
catch
¢¢ 
(
¢¢ 
SqlException
¢¢ 
	exceptSql
¢¢  )
)
¢¢) *
{
££ 
IO
§§ 
.
§§ 
Logger
§§ 
.
§§ 
Log
§§ 
(
§§ 
NLog
§§ "
.
§§" #
LogLevel
§§# +
.
§§+ ,
Warn
§§, 0
,
§§0 1
$str
§§2 R
,
§§R S
	exceptSql
§§T ]
)
§§] ^
;
§§^ _
}
•• 
}
¶¶ 	
}
ßß 
private
™™ 
void
™™ 
GoodB2G1
™™ 
(
™™ 
)
™™ 
{
´´ 
string
¨¨ 
password
¨¨ 
;
¨¨ 
if
≠≠ 

(
≠≠  
PRIVATE_CONST_TRUE
≠≠ 
)
≠≠ 
{
ÆÆ 	
password
ØØ 
=
ØØ 
$str
ØØ 
;
ØØ 
{
±± 
try
≤≤ 
{
≥≥ 
using
¥¥ 
(
¥¥ 
	WebClient
¥¥ $
client
¥¥% +
=
¥¥, -
new
¥¥. 1
	WebClient
¥¥2 ;
(
¥¥; <
)
¥¥< =
)
¥¥= >
{
µµ 
using
∂∂ 
(
∂∂ 
StreamReader
∂∂ +
sr
∂∂, .
=
∂∂/ 0
new
∂∂1 4
StreamReader
∂∂5 A
(
∂∂A B
client
∂∂B H
.
∂∂H I
OpenRead
∂∂I Q
(
∂∂Q R
$str
∂∂R k
)
∂∂k l
)
∂∂l m
)
∂∂m n
{
∑∑ 
password
ªª $
=
ªª% &
sr
ªª' )
.
ªª) *
ReadLine
ªª* 2
(
ªª2 3
)
ªª3 4
;
ªª4 5
}
ºº 
}
ΩΩ 
}
ææ 
catch
øø 
(
øø 
IOException
øø "
exceptIO
øø# +
)
øø+ ,
{
¿¿ 
IO
¡¡ 
.
¡¡ 
Logger
¡¡ 
.
¡¡ 
Log
¡¡ !
(
¡¡! "
NLog
¡¡" &
.
¡¡& '
LogLevel
¡¡' /
.
¡¡/ 0
Warn
¡¡0 4
,
¡¡4 5
$str
¡¡6 Q
,
¡¡Q R
exceptIO
¡¡S [
)
¡¡[ \
;
¡¡\ ]
}
¬¬ 
}
√√ 
}
ƒƒ 	
else
≈≈ 
{
∆∆ 	
password
…… 
=
…… 
null
…… 
;
…… 
}
   	
if
ÀÀ 

(
ÀÀ !
PRIVATE_CONST_FALSE
ÀÀ 
)
ÀÀ  
{
ÃÃ 	
IO
ŒŒ 
.
ŒŒ 
	WriteLine
ŒŒ 
(
ŒŒ 
$str
ŒŒ /
)
ŒŒ/ 0
;
ŒŒ0 1
}
œœ 	
else
–– 
{
—— 	
if
““ 
(
““ 
password
““ 
!=
““ 
null
““  
)
““  !
{
”” 
{
’’ 
using
÷÷ 
(
÷÷ &
AesCryptoServiceProvider
÷÷ 3
aesAlg
÷÷4 :
=
÷÷; <
new
÷÷= @&
AesCryptoServiceProvider
÷÷A Y
(
÷÷Y Z
)
÷÷Z [
)
÷÷[ \
{
◊◊ 
aesAlg
ÿÿ 
.
ÿÿ 
Padding
ÿÿ &
=
ÿÿ' (
PaddingMode
ÿÿ) 4
.
ÿÿ4 5
None
ÿÿ5 9
;
ÿÿ9 :
aesAlg
ŸŸ 
.
ŸŸ 
Key
ŸŸ "
=
ŸŸ# $
Encoding
ŸŸ% -
.
ŸŸ- .
UTF8
ŸŸ. 2
.
ŸŸ2 3
GetBytes
ŸŸ3 ;
(
ŸŸ; <
$str
ŸŸ< N
)
ŸŸN O
;
ŸŸO P
ICryptoTransform
€€ (
	decryptor
€€) 2
=
€€3 4
aesAlg
€€5 ;
.
€€; <
CreateDecryptor
€€< K
(
€€K L
aesAlg
€€L R
.
€€R S
Key
€€S V
,
€€V W
aesAlg
€€X ^
.
€€^ _
IV
€€_ a
)
€€a b
;
€€b c
using
›› 
(
›› 
MemoryStream
›› +
	msDecrypt
››, 5
=
››6 7
new
››8 ;
MemoryStream
››< H
(
››H I
Encoding
››I Q
.
››Q R
UTF8
››R V
.
››V W
GetBytes
››W _
(
››_ `
password
››` h
)
››h i
)
››i j
)
››j k
{
ﬁﬁ 
using
ﬂﬂ !
(
ﬂﬂ" #
CryptoStream
ﬂﬂ# /
	csDecrypt
ﬂﬂ0 9
=
ﬂﬂ: ;
new
ﬂﬂ< ?
CryptoStream
ﬂﬂ@ L
(
ﬂﬂL M
	msDecrypt
ﬂﬂM V
,
ﬂﬂV W
	decryptor
ﬂﬂX a
,
ﬂﬂa b
CryptoStreamMode
ﬂﬂc s
.
ﬂﬂs t
Read
ﬂﬂt x
)
ﬂﬂx y
)
ﬂﬂy z
{
‡‡ 
using
··  %
(
··& '
StreamReader
··' 3
	srDecrypt
··4 =
=
··> ?
new
··@ C
StreamReader
··D P
(
··P Q
	csDecrypt
··Q Z
)
··Z [
)
··[ \
{
‚‚  !
password
ÂÂ$ ,
=
ÂÂ- .
	srDecrypt
ÂÂ/ 8
.
ÂÂ8 9
	ReadToEnd
ÂÂ9 B
(
ÂÂB C
)
ÂÂC D
;
ÂÂD E
}
ÊÊ  !
}
ÁÁ 
}
ËË 
}
ÈÈ 
}
ÍÍ 
try
ÎÎ 
{
ÏÏ 
using
ÓÓ 
(
ÓÓ 
SqlConnection
ÓÓ (

connection
ÓÓ) 3
=
ÓÓ4 5
new
ÓÓ6 9
SqlConnection
ÓÓ: G
(
ÓÓG H
$str
ÓÓH ~
+ÓÓ Ä
$strÓÓÅ Ö
+ÓÓÜ á
$strÓÓà î
+ÓÓï ñ
passwordÓÓó ü
)ÓÓü †
)ÓÓ† °
{
ÔÔ 

connection
 "
.
" #
Open
# '
(
' (
)
( )
;
) *
using
ÒÒ 
(
ÒÒ 

SqlCommand
ÒÒ )
command
ÒÒ* 1
=
ÒÒ2 3
new
ÒÒ4 7

SqlCommand
ÒÒ8 B
(
ÒÒB C
$str
ÒÒC ]
,
ÒÒ] ^

connection
ÒÒ_ i
)
ÒÒi j
)
ÒÒj k
{
ÚÚ 
command
ÛÛ #
.
ÛÛ# $
ExecuteNonQuery
ÛÛ$ 3
(
ÛÛ3 4
)
ÛÛ4 5
;
ÛÛ5 6
}
ÙÙ 
}
ıı 
}
ˆˆ 
catch
˜˜ 
(
˜˜ 
SqlException
˜˜ #
	exceptSql
˜˜$ -
)
˜˜- .
{
¯¯ 
IO
˘˘ 
.
˘˘ 
Logger
˘˘ 
.
˘˘ 
Log
˘˘ !
(
˘˘! "
NLog
˘˘" &
.
˘˘& '
LogLevel
˘˘' /
.
˘˘/ 0
Warn
˘˘0 4
,
˘˘4 5
$str
˘˘6 V
,
˘˘V W
	exceptSql
˘˘X a
)
˘˘a b
;
˘˘b c
}
˙˙ 
}
˚˚ 
}
¸¸ 	
}
˝˝ 
private
ÄÄ 
void
ÄÄ 
GoodB2G2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 
string
ÇÇ 
password
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ  
PRIVATE_CONST_TRUE
ÉÉ 
)
ÉÉ 
{
ÑÑ 	
password
ÖÖ 
=
ÖÖ 
$str
ÖÖ 
;
ÖÖ 
{
áá 
try
àà 
{
ââ 
using
ää 
(
ää 
	WebClient
ää $
client
ää% +
=
ää, -
new
ää. 1
	WebClient
ää2 ;
(
ää; <
)
ää< =
)
ää= >
{
ãã 
using
åå 
(
åå 
StreamReader
åå +
sr
åå, .
=
åå/ 0
new
åå1 4
StreamReader
åå5 A
(
ååA B
client
ååB H
.
ååH I
OpenRead
ååI Q
(
ååQ R
$str
ååR k
)
ååk l
)
åål m
)
ååm n
{
çç 
password
ëë $
=
ëë% &
sr
ëë' )
.
ëë) *
ReadLine
ëë* 2
(
ëë2 3
)
ëë3 4
;
ëë4 5
}
íí 
}
ìì 
}
îî 
catch
ïï 
(
ïï 
IOException
ïï "
exceptIO
ïï# +
)
ïï+ ,
{
ññ 
IO
óó 
.
óó 
Logger
óó 
.
óó 
Log
óó !
(
óó! "
NLog
óó" &
.
óó& '
LogLevel
óó' /
.
óó/ 0
Warn
óó0 4
,
óó4 5
$str
óó6 Q
,
óóQ R
exceptIO
óóS [
)
óó[ \
;
óó\ ]
}
òò 
}
ôô 
}
öö 	
else
õõ 
{
úú 	
password
üü 
=
üü 
null
üü 
;
üü 
}
†† 	
if
°° 

(
°°  
PRIVATE_CONST_TRUE
°° 
)
°° 
{
¢¢ 	
if
££ 
(
££ 
password
££ 
!=
££ 
null
££  
)
££  !
{
§§ 
{
¶¶ 
using
ßß 
(
ßß &
AesCryptoServiceProvider
ßß 3
aesAlg
ßß4 :
=
ßß; <
new
ßß= @&
AesCryptoServiceProvider
ßßA Y
(
ßßY Z
)
ßßZ [
)
ßß[ \
{
®® 
aesAlg
©© 
.
©© 
Padding
©© &
=
©©' (
PaddingMode
©©) 4
.
©©4 5
None
©©5 9
;
©©9 :
aesAlg
™™ 
.
™™ 
Key
™™ "
=
™™# $
Encoding
™™% -
.
™™- .
UTF8
™™. 2
.
™™2 3
GetBytes
™™3 ;
(
™™; <
$str
™™< N
)
™™N O
;
™™O P
ICryptoTransform
¨¨ (
	decryptor
¨¨) 2
=
¨¨3 4
aesAlg
¨¨5 ;
.
¨¨; <
CreateDecryptor
¨¨< K
(
¨¨K L
aesAlg
¨¨L R
.
¨¨R S
Key
¨¨S V
,
¨¨V W
aesAlg
¨¨X ^
.
¨¨^ _
IV
¨¨_ a
)
¨¨a b
;
¨¨b c
using
ÆÆ 
(
ÆÆ 
MemoryStream
ÆÆ +
	msDecrypt
ÆÆ, 5
=
ÆÆ6 7
new
ÆÆ8 ;
MemoryStream
ÆÆ< H
(
ÆÆH I
Encoding
ÆÆI Q
.
ÆÆQ R
UTF8
ÆÆR V
.
ÆÆV W
GetBytes
ÆÆW _
(
ÆÆ_ `
password
ÆÆ` h
)
ÆÆh i
)
ÆÆi j
)
ÆÆj k
{
ØØ 
using
∞∞ !
(
∞∞" #
CryptoStream
∞∞# /
	csDecrypt
∞∞0 9
=
∞∞: ;
new
∞∞< ?
CryptoStream
∞∞@ L
(
∞∞L M
	msDecrypt
∞∞M V
,
∞∞V W
	decryptor
∞∞X a
,
∞∞a b
CryptoStreamMode
∞∞c s
.
∞∞s t
Read
∞∞t x
)
∞∞x y
)
∞∞y z
{
±± 
using
≤≤  %
(
≤≤& '
StreamReader
≤≤' 3
	srDecrypt
≤≤4 =
=
≤≤> ?
new
≤≤@ C
StreamReader
≤≤D P
(
≤≤P Q
	csDecrypt
≤≤Q Z
)
≤≤Z [
)
≤≤[ \
{
≥≥  !
password
∂∂$ ,
=
∂∂- .
	srDecrypt
∂∂/ 8
.
∂∂8 9
	ReadToEnd
∂∂9 B
(
∂∂B C
)
∂∂C D
;
∂∂D E
}
∑∑  !
}
∏∏ 
}
ππ 
}
∫∫ 
}
ªª 
try
ºº 
{
ΩΩ 
using
øø 
(
øø 
SqlConnection
øø (

connection
øø) 3
=
øø4 5
new
øø6 9
SqlConnection
øø: G
(
øøG H
$str
øøH ~
+øø Ä
$strøøÅ Ö
+øøÜ á
$strøøà î
+øøï ñ
passwordøøó ü
)øøü †
)øø† °
{
¿¿ 

connection
¡¡ "
.
¡¡" #
Open
¡¡# '
(
¡¡' (
)
¡¡( )
;
¡¡) *
using
¬¬ 
(
¬¬ 

SqlCommand
¬¬ )
command
¬¬* 1
=
¬¬2 3
new
¬¬4 7

SqlCommand
¬¬8 B
(
¬¬B C
$str
¬¬C ]
,
¬¬] ^

connection
¬¬_ i
)
¬¬i j
)
¬¬j k
{
√√ 
command
ƒƒ #
.
ƒƒ# $
ExecuteNonQuery
ƒƒ$ 3
(
ƒƒ3 4
)
ƒƒ4 5
;
ƒƒ5 6
}
≈≈ 
}
∆∆ 
}
«« 
catch
»» 
(
»» 
SqlException
»» #
	exceptSql
»»$ -
)
»»- .
{
…… 
IO
   
.
   
Logger
   
.
   
Log
   !
(
  ! "
NLog
  " &
.
  & '
LogLevel
  ' /
.
  / 0
Warn
  0 4
,
  4 5
$str
  6 V
,
  V W
	exceptSql
  X a
)
  a b
;
  b c
}
ÀÀ 
}
ÃÃ 
}
ÕÕ 	
}
ŒŒ 
public
–– 

override
–– 
void
–– 
Good
–– 
(
–– 
)
–– 
{
—— 
GoodG2B1
““ 
(
““ 
)
““ 
;
““ 
GoodG2B2
”” 
(
”” 
)
”” 
;
”” 
GoodB2G1
‘‘ 
(
‘‘ 
)
‘‘ 
;
‘‘ 
GoodB2G2
’’ 
(
’’ 
)
’’ 
;
’’ 
}
÷÷ 
}ÿÿ 
}ŸŸ Úö
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_05.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class J
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_05 D
:E F
AbstractTestCaseG W
{ 
private$$ 
bool$$ 
privateTrue$$ 
=$$ 
true$$ #
;$$# $
private%% 
bool%% 
privateFalse%% 
=%% 
false%%  %
;%%% &
public'' 

override'' 
void'' 
Bad'' 
('' 
)'' 
{(( 
string)) 
password)) 
;)) 
if** 

(** 
privateTrue** 
)** 
{++ 	
password,, 
=,, 
$str,, 
;,, 
{.. 
try// 
{00 
using11 
(11 
	WebClient11 $
client11% +
=11, -
new11. 1
	WebClient112 ;
(11; <
)11< =
)11= >
{22 
using33 
(33 
StreamReader33 +
sr33, .
=33/ 0
new331 4
StreamReader335 A
(33A B
client33B H
.33H I
OpenRead33I Q
(33Q R
$str33R k
)33k l
)33l m
)33m n
{44 
password88 $
=88% &
sr88' )
.88) *
ReadLine88* 2
(882 3
)883 4
;884 5
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< "
exceptIO<<# +
)<<+ ,
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> !
(>>! "
NLog>>" &
.>>& '
LogLevel>>' /
.>>/ 0
Warn>>0 4
,>>4 5
$str>>6 Q
,>>Q R
exceptIO>>S [
)>>[ \
;>>\ ]
}?? 
}@@ 
}AA 	
elseBB 
{CC 	
passwordFF 
=FF 
nullFF 
;FF 
}GG 	
ifHH 

(HH 
privateTrueHH 
)HH 
{II 	
tryJJ 
{KK 
usingMM 
(MM 
SqlConnectionMM $

connectionMM% /
=MM0 1
newMM2 5
SqlConnectionMM6 C
(MMC D
$strMMD z
+MM{ |
$str	MM} Å
+
MMÇ É
$str
MMÑ ê
+
MMë í
password
MMì õ
)
MMõ ú
)
MMú ù
{NN 

connectionOO 
.OO 
OpenOO #
(OO# $
)OO$ %
;OO% &
usingPP 
(PP 

SqlCommandPP %
commandPP& -
=PP. /
newPP0 3

SqlCommandPP4 >
(PP> ?
$strPP? Y
,PPY Z

connectionPP[ e
)PPe f
)PPf g
{QQ 
commandRR 
.RR  
ExecuteNonQueryRR  /
(RR/ 0
)RR0 1
;RR1 2
}SS 
}TT 
}UU 
catchVV 
(VV 
SqlExceptionVV 
	exceptSqlVV  )
)VV) *
{WW 
IOXX 
.XX 
LoggerXX 
.XX 
LogXX 
(XX 
NLogXX "
.XX" #
LogLevelXX# +
.XX+ ,
WarnXX, 0
,XX0 1
$strXX2 R
,XXR S
	exceptSqlXXT ]
)XX] ^
;XX^ _
}YY 
}ZZ 	
}[[ 
private__ 
void__ 
GoodG2B1__ 
(__ 
)__ 
{`` 
stringaa 
passwordaa 
;aa 
ifbb 

(bb 
privateFalsebb 
)bb 
{cc 	
passwordff 
=ff 
nullff 
;ff 
}gg 	
elsehh 
{ii 	
passwordll 
=ll 
$strll &
;ll& '
}mm 	
ifnn 

(nn 
privateTruenn 
)nn 
{oo 	
trypp 
{qq 
usingss 
(ss 
SqlConnectionss $

connectionss% /
=ss0 1
newss2 5
SqlConnectionss6 C
(ssC D
$strssD z
+ss{ |
$str	ss} Å
+
ssÇ É
$str
ssÑ ê
+
ssë í
password
ssì õ
)
ssõ ú
)
ssú ù
{tt 

connectionuu 
.uu 
Openuu #
(uu# $
)uu$ %
;uu% &
usingvv 
(vv 

SqlCommandvv %
commandvv& -
=vv. /
newvv0 3

SqlCommandvv4 >
(vv> ?
$strvv? Y
,vvY Z

connectionvv[ e
)vve f
)vvf g
{ww 
commandxx 
.xx  
ExecuteNonQueryxx  /
(xx/ 0
)xx0 1
;xx1 2
}yy 
}zz 
}{{ 
catch|| 
(|| 
SqlException|| 
	exceptSql||  )
)||) *
{}} 
IO~~ 
.~~ 
Logger~~ 
.~~ 
Log~~ 
(~~ 
NLog~~ "
.~~" #
LogLevel~~# +
.~~+ ,
Warn~~, 0
,~~0 1
$str~~2 R
,~~R S
	exceptSql~~T ]
)~~] ^
;~~^ _
} 
}
ÄÄ 	
}
ÅÅ 
private
ÑÑ 
void
ÑÑ 
GoodG2B2
ÑÑ 
(
ÑÑ 
)
ÑÑ 
{
ÖÖ 
string
ÜÜ 
password
ÜÜ 
;
ÜÜ 
if
áá 

(
áá 
privateTrue
áá 
)
áá 
{
àà 	
password
ãã 
=
ãã 
$str
ãã &
;
ãã& '
}
åå 	
else
çç 
{
éé 	
password
ëë 
=
ëë 
null
ëë 
;
ëë 
}
íí 	
if
ìì 

(
ìì 
privateTrue
ìì 
)
ìì 
{
îî 	
try
ïï 
{
ññ 
using
òò 
(
òò 
SqlConnection
òò $

connection
òò% /
=
òò0 1
new
òò2 5
SqlConnection
òò6 C
(
òòC D
$str
òòD z
+
òò{ |
$stròò} Å
+òòÇ É
$stròòÑ ê
+òòë í
passwordòòì õ
)òòõ ú
)òòú ù
{
ôô 

connection
öö 
.
öö 
Open
öö #
(
öö# $
)
öö$ %
;
öö% &
using
õõ 
(
õõ 

SqlCommand
õõ %
command
õõ& -
=
õõ. /
new
õõ0 3

SqlCommand
õõ4 >
(
õõ> ?
$str
õõ? Y
,
õõY Z

connection
õõ[ e
)
õõe f
)
õõf g
{
úú 
command
ùù 
.
ùù  
ExecuteNonQuery
ùù  /
(
ùù/ 0
)
ùù0 1
;
ùù1 2
}
ûû 
}
üü 
}
†† 
catch
°° 
(
°° 
SqlException
°° 
	exceptSql
°°  )
)
°°) *
{
¢¢ 
IO
££ 
.
££ 
Logger
££ 
.
££ 
Log
££ 
(
££ 
NLog
££ "
.
££" #
LogLevel
££# +
.
££+ ,
Warn
££, 0
,
££0 1
$str
££2 R
,
££R S
	exceptSql
££T ]
)
££] ^
;
££^ _
}
§§ 
}
•• 	
}
¶¶ 
private
©© 
void
©© 
GoodB2G1
©© 
(
©© 
)
©© 
{
™™ 
string
´´ 
password
´´ 
;
´´ 
if
¨¨ 

(
¨¨ 
privateTrue
¨¨ 
)
¨¨ 
{
≠≠ 	
password
ÆÆ 
=
ÆÆ 
$str
ÆÆ 
;
ÆÆ 
{
∞∞ 
try
±± 
{
≤≤ 
using
≥≥ 
(
≥≥ 
	WebClient
≥≥ $
client
≥≥% +
=
≥≥, -
new
≥≥. 1
	WebClient
≥≥2 ;
(
≥≥; <
)
≥≥< =
)
≥≥= >
{
¥¥ 
using
µµ 
(
µµ 
StreamReader
µµ +
sr
µµ, .
=
µµ/ 0
new
µµ1 4
StreamReader
µµ5 A
(
µµA B
client
µµB H
.
µµH I
OpenRead
µµI Q
(
µµQ R
$str
µµR k
)
µµk l
)
µµl m
)
µµm n
{
∂∂ 
password
∫∫ $
=
∫∫% &
sr
∫∫' )
.
∫∫) *
ReadLine
∫∫* 2
(
∫∫2 3
)
∫∫3 4
;
∫∫4 5
}
ªª 
}
ºº 
}
ΩΩ 
catch
ææ 
(
ææ 
IOException
ææ "
exceptIO
ææ# +
)
ææ+ ,
{
øø 
IO
¿¿ 
.
¿¿ 
Logger
¿¿ 
.
¿¿ 
Log
¿¿ !
(
¿¿! "
NLog
¿¿" &
.
¿¿& '
LogLevel
¿¿' /
.
¿¿/ 0
Warn
¿¿0 4
,
¿¿4 5
$str
¿¿6 Q
,
¿¿Q R
exceptIO
¿¿S [
)
¿¿[ \
;
¿¿\ ]
}
¡¡ 
}
¬¬ 
}
√√ 	
else
ƒƒ 
{
≈≈ 	
password
»» 
=
»» 
null
»» 
;
»» 
}
…… 	
if
   

(
   
privateFalse
   
)
   
{
ÀÀ 	
IO
ÕÕ 
.
ÕÕ 
	WriteLine
ÕÕ 
(
ÕÕ 
$str
ÕÕ /
)
ÕÕ/ 0
;
ÕÕ0 1
}
ŒŒ 	
else
œœ 
{
–– 	
if
—— 
(
—— 
password
—— 
!=
—— 
null
——  
)
——  !
{
““ 
{
‘‘ 
using
’’ 
(
’’ &
AesCryptoServiceProvider
’’ 3
aesAlg
’’4 :
=
’’; <
new
’’= @&
AesCryptoServiceProvider
’’A Y
(
’’Y Z
)
’’Z [
)
’’[ \
{
÷÷ 
aesAlg
◊◊ 
.
◊◊ 
Padding
◊◊ &
=
◊◊' (
PaddingMode
◊◊) 4
.
◊◊4 5
None
◊◊5 9
;
◊◊9 :
aesAlg
ÿÿ 
.
ÿÿ 
Key
ÿÿ "
=
ÿÿ# $
Encoding
ÿÿ% -
.
ÿÿ- .
UTF8
ÿÿ. 2
.
ÿÿ2 3
GetBytes
ÿÿ3 ;
(
ÿÿ; <
$str
ÿÿ< N
)
ÿÿN O
;
ÿÿO P
ICryptoTransform
⁄⁄ (
	decryptor
⁄⁄) 2
=
⁄⁄3 4
aesAlg
⁄⁄5 ;
.
⁄⁄; <
CreateDecryptor
⁄⁄< K
(
⁄⁄K L
aesAlg
⁄⁄L R
.
⁄⁄R S
Key
⁄⁄S V
,
⁄⁄V W
aesAlg
⁄⁄X ^
.
⁄⁄^ _
IV
⁄⁄_ a
)
⁄⁄a b
;
⁄⁄b c
using
‹‹ 
(
‹‹ 
MemoryStream
‹‹ +
	msDecrypt
‹‹, 5
=
‹‹6 7
new
‹‹8 ;
MemoryStream
‹‹< H
(
‹‹H I
Encoding
‹‹I Q
.
‹‹Q R
UTF8
‹‹R V
.
‹‹V W
GetBytes
‹‹W _
(
‹‹_ `
password
‹‹` h
)
‹‹h i
)
‹‹i j
)
‹‹j k
{
›› 
using
ﬁﬁ !
(
ﬁﬁ" #
CryptoStream
ﬁﬁ# /
	csDecrypt
ﬁﬁ0 9
=
ﬁﬁ: ;
new
ﬁﬁ< ?
CryptoStream
ﬁﬁ@ L
(
ﬁﬁL M
	msDecrypt
ﬁﬁM V
,
ﬁﬁV W
	decryptor
ﬁﬁX a
,
ﬁﬁa b
CryptoStreamMode
ﬁﬁc s
.
ﬁﬁs t
Read
ﬁﬁt x
)
ﬁﬁx y
)
ﬁﬁy z
{
ﬂﬂ 
using
‡‡  %
(
‡‡& '
StreamReader
‡‡' 3
	srDecrypt
‡‡4 =
=
‡‡> ?
new
‡‡@ C
StreamReader
‡‡D P
(
‡‡P Q
	csDecrypt
‡‡Q Z
)
‡‡Z [
)
‡‡[ \
{
··  !
password
‰‰$ ,
=
‰‰- .
	srDecrypt
‰‰/ 8
.
‰‰8 9
	ReadToEnd
‰‰9 B
(
‰‰B C
)
‰‰C D
;
‰‰D E
}
ÂÂ  !
}
ÊÊ 
}
ÁÁ 
}
ËË 
}
ÈÈ 
try
ÍÍ 
{
ÎÎ 
using
ÌÌ 
(
ÌÌ 
SqlConnection
ÌÌ (

connection
ÌÌ) 3
=
ÌÌ4 5
new
ÌÌ6 9
SqlConnection
ÌÌ: G
(
ÌÌG H
$str
ÌÌH ~
+ÌÌ Ä
$strÌÌÅ Ö
+ÌÌÜ á
$strÌÌà î
+ÌÌï ñ
passwordÌÌó ü
)ÌÌü †
)ÌÌ† °
{
ÓÓ 

connection
ÔÔ "
.
ÔÔ" #
Open
ÔÔ# '
(
ÔÔ' (
)
ÔÔ( )
;
ÔÔ) *
using
 
(
 

SqlCommand
 )
command
* 1
=
2 3
new
4 7

SqlCommand
8 B
(
B C
$str
C ]
,
] ^

connection
_ i
)
i j
)
j k
{
ÒÒ 
command
ÚÚ #
.
ÚÚ# $
ExecuteNonQuery
ÚÚ$ 3
(
ÚÚ3 4
)
ÚÚ4 5
;
ÚÚ5 6
}
ÛÛ 
}
ÙÙ 
}
ıı 
catch
ˆˆ 
(
ˆˆ 
SqlException
ˆˆ #
	exceptSql
ˆˆ$ -
)
ˆˆ- .
{
˜˜ 
IO
¯¯ 
.
¯¯ 
Logger
¯¯ 
.
¯¯ 
Log
¯¯ !
(
¯¯! "
NLog
¯¯" &
.
¯¯& '
LogLevel
¯¯' /
.
¯¯/ 0
Warn
¯¯0 4
,
¯¯4 5
$str
¯¯6 V
,
¯¯V W
	exceptSql
¯¯X a
)
¯¯a b
;
¯¯b c
}
˘˘ 
}
˙˙ 
}
˚˚ 	
}
¸¸ 
private
ˇˇ 
void
ˇˇ 
GoodB2G2
ˇˇ 
(
ˇˇ 
)
ˇˇ 
{
ÄÄ 
string
ÅÅ 
password
ÅÅ 
;
ÅÅ 
if
ÇÇ 

(
ÇÇ 
privateTrue
ÇÇ 
)
ÇÇ 
{
ÉÉ 	
password
ÑÑ 
=
ÑÑ 
$str
ÑÑ 
;
ÑÑ 
{
ÜÜ 
try
áá 
{
àà 
using
ââ 
(
ââ 
	WebClient
ââ $
client
ââ% +
=
ââ, -
new
ââ. 1
	WebClient
ââ2 ;
(
ââ; <
)
ââ< =
)
ââ= >
{
ää 
using
ãã 
(
ãã 
StreamReader
ãã +
sr
ãã, .
=
ãã/ 0
new
ãã1 4
StreamReader
ãã5 A
(
ããA B
client
ããB H
.
ããH I
OpenRead
ããI Q
(
ããQ R
$str
ããR k
)
ããk l
)
ããl m
)
ããm n
{
åå 
password
êê $
=
êê% &
sr
êê' )
.
êê) *
ReadLine
êê* 2
(
êê2 3
)
êê3 4
;
êê4 5
}
ëë 
}
íí 
}
ìì 
catch
îî 
(
îî 
IOException
îî "
exceptIO
îî# +
)
îî+ ,
{
ïï 
IO
ññ 
.
ññ 
Logger
ññ 
.
ññ 
Log
ññ !
(
ññ! "
NLog
ññ" &
.
ññ& '
LogLevel
ññ' /
.
ññ/ 0
Warn
ññ0 4
,
ññ4 5
$str
ññ6 Q
,
ññQ R
exceptIO
ññS [
)
ññ[ \
;
ññ\ ]
}
óó 
}
òò 
}
ôô 	
else
öö 
{
õõ 	
password
ûû 
=
ûû 
null
ûû 
;
ûû 
}
üü 	
if
†† 

(
†† 
privateTrue
†† 
)
†† 
{
°° 	
if
¢¢ 
(
¢¢ 
password
¢¢ 
!=
¢¢ 
null
¢¢  
)
¢¢  !
{
££ 
{
•• 
using
¶¶ 
(
¶¶ &
AesCryptoServiceProvider
¶¶ 3
aesAlg
¶¶4 :
=
¶¶; <
new
¶¶= @&
AesCryptoServiceProvider
¶¶A Y
(
¶¶Y Z
)
¶¶Z [
)
¶¶[ \
{
ßß 
aesAlg
®® 
.
®® 
Padding
®® &
=
®®' (
PaddingMode
®®) 4
.
®®4 5
None
®®5 9
;
®®9 :
aesAlg
©© 
.
©© 
Key
©© "
=
©©# $
Encoding
©©% -
.
©©- .
UTF8
©©. 2
.
©©2 3
GetBytes
©©3 ;
(
©©; <
$str
©©< N
)
©©N O
;
©©O P
ICryptoTransform
´´ (
	decryptor
´´) 2
=
´´3 4
aesAlg
´´5 ;
.
´´; <
CreateDecryptor
´´< K
(
´´K L
aesAlg
´´L R
.
´´R S
Key
´´S V
,
´´V W
aesAlg
´´X ^
.
´´^ _
IV
´´_ a
)
´´a b
;
´´b c
using
≠≠ 
(
≠≠ 
MemoryStream
≠≠ +
	msDecrypt
≠≠, 5
=
≠≠6 7
new
≠≠8 ;
MemoryStream
≠≠< H
(
≠≠H I
Encoding
≠≠I Q
.
≠≠Q R
UTF8
≠≠R V
.
≠≠V W
GetBytes
≠≠W _
(
≠≠_ `
password
≠≠` h
)
≠≠h i
)
≠≠i j
)
≠≠j k
{
ÆÆ 
using
ØØ !
(
ØØ" #
CryptoStream
ØØ# /
	csDecrypt
ØØ0 9
=
ØØ: ;
new
ØØ< ?
CryptoStream
ØØ@ L
(
ØØL M
	msDecrypt
ØØM V
,
ØØV W
	decryptor
ØØX a
,
ØØa b
CryptoStreamMode
ØØc s
.
ØØs t
Read
ØØt x
)
ØØx y
)
ØØy z
{
∞∞ 
using
±±  %
(
±±& '
StreamReader
±±' 3
	srDecrypt
±±4 =
=
±±> ?
new
±±@ C
StreamReader
±±D P
(
±±P Q
	csDecrypt
±±Q Z
)
±±Z [
)
±±[ \
{
≤≤  !
password
µµ$ ,
=
µµ- .
	srDecrypt
µµ/ 8
.
µµ8 9
	ReadToEnd
µµ9 B
(
µµB C
)
µµC D
;
µµD E
}
∂∂  !
}
∑∑ 
}
∏∏ 
}
ππ 
}
∫∫ 
try
ªª 
{
ºº 
using
ææ 
(
ææ 
SqlConnection
ææ (

connection
ææ) 3
=
ææ4 5
new
ææ6 9
SqlConnection
ææ: G
(
ææG H
$str
ææH ~
+ææ Ä
$strææÅ Ö
+ææÜ á
$strææà î
+ææï ñ
passwordææó ü
)ææü †
)ææ† °
{
øø 

connection
¿¿ "
.
¿¿" #
Open
¿¿# '
(
¿¿' (
)
¿¿( )
;
¿¿) *
using
¡¡ 
(
¡¡ 

SqlCommand
¡¡ )
command
¡¡* 1
=
¡¡2 3
new
¡¡4 7

SqlCommand
¡¡8 B
(
¡¡B C
$str
¡¡C ]
,
¡¡] ^

connection
¡¡_ i
)
¡¡i j
)
¡¡j k
{
¬¬ 
command
√√ #
.
√√# $
ExecuteNonQuery
√√$ 3
(
√√3 4
)
√√4 5
;
√√5 6
}
ƒƒ 
}
≈≈ 
}
∆∆ 
catch
«« 
(
«« 
SqlException
«« #
	exceptSql
««$ -
)
««- .
{
»» 
IO
…… 
.
…… 
Logger
…… 
.
…… 
Log
…… !
(
……! "
NLog
……" &
.
……& '
LogLevel
……' /
.
……/ 0
Warn
……0 4
,
……4 5
$str
……6 V
,
……V W
	exceptSql
……X a
)
……a b
;
……b c
}
   
}
ÀÀ 
}
ÃÃ 	
}
ÕÕ 
public
œœ 

override
œœ 
void
œœ 
Good
œœ 
(
œœ 
)
œœ 
{
–– 
GoodG2B1
—— 
(
—— 
)
—— 
;
—— 
GoodG2B2
““ 
(
““ 
)
““ 
;
““ 
GoodB2G1
”” 
(
”” 
)
”” 
;
”” 
GoodB2G2
‘‘ 
(
‘‘ 
)
‘‘ 
;
‘‘ 
}
’’ 
}◊◊ 
}ÿÿ «ù
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_06.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class J
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_06 D
:E F
AbstractTestCaseG W
{ 
private$$ 
const$$ 
int$$ 
PRIVATE_CONST_FIVE$$ (
=$$) *
$num$$+ ,
;$$, -
public&& 

override&& 
void&& 
Bad&& 
(&& 
)&& 
{'' 
string(( 
password(( 
;(( 
if)) 

()) 
PRIVATE_CONST_FIVE)) 
==))  
$num))  !
)))! "
{** 	
password++ 
=++ 
$str++ 
;++ 
{-- 
try.. 
{// 
using00 
(00 
	WebClient00 $
client00% +
=00, -
new00. 1
	WebClient002 ;
(00; <
)00< =
)00= >
{11 
using22 
(22 
StreamReader22 +
sr22, .
=22/ 0
new221 4
StreamReader225 A
(22A B
client22B H
.22H I
OpenRead22I Q
(22Q R
$str22R k
)22k l
)22l m
)22m n
{33 
password77 $
=77% &
sr77' )
.77) *
ReadLine77* 2
(772 3
)773 4
;774 5
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
$str==6 Q
,==Q R
exceptIO==S [
)==[ \
;==\ ]
}>> 
}?? 
}@@ 	
elseAA 
{BB 	
passwordEE 
=EE 
nullEE 
;EE 
}FF 	
ifGG 

(GG 
PRIVATE_CONST_FIVEGG 
==GG  
$numGG  !
)GG! "
{HH 	
tryII 
{JJ 
usingLL 
(LL 
SqlConnectionLL $

connectionLL% /
=LL0 1
newLL2 5
SqlConnectionLL6 C
(LLC D
$strLLD z
+LL{ |
$str	LL} Å
+
LLÇ É
$str
LLÑ ê
+
LLë í
password
LLì õ
)
LLõ ú
)
LLú ù
{MM 

connectionNN 
.NN 
OpenNN #
(NN# $
)NN$ %
;NN% &
usingOO 
(OO 

SqlCommandOO %
commandOO& -
=OO. /
newOO0 3

SqlCommandOO4 >
(OO> ?
$strOO? Y
,OOY Z

connectionOO[ e
)OOe f
)OOf g
{PP 
commandQQ 
.QQ  
ExecuteNonQueryQQ  /
(QQ/ 0
)QQ0 1
;QQ1 2
}RR 
}SS 
}TT 
catchUU 
(UU 
SqlExceptionUU 
	exceptSqlUU  )
)UU) *
{VV 
IOWW 
.WW 
LoggerWW 
.WW 
LogWW 
(WW 
NLogWW "
.WW" #
LogLevelWW# +
.WW+ ,
WarnWW, 0
,WW0 1
$strWW2 R
,WWR S
	exceptSqlWWT ]
)WW] ^
;WW^ _
}XX 
}YY 	
}ZZ 
private^^ 
void^^ 
GoodG2B1^^ 
(^^ 
)^^ 
{__ 
string`` 
password`` 
;`` 
ifaa 

(aa 
PRIVATE_CONST_FIVEaa 
!=aa  
$numaa  !
)aa! "
{bb 	
passwordee 
=ee 
nullee 
;ee 
}ff 	
elsegg 
{hh 	
passwordkk 
=kk 
$strkk &
;kk& '
}ll 	
ifmm 

(mm 
PRIVATE_CONST_FIVEmm 
==mm  
$nummm  !
)mm! "
{nn 	
tryoo 
{pp 
usingrr 
(rr 
SqlConnectionrr $

connectionrr% /
=rr0 1
newrr2 5
SqlConnectionrr6 C
(rrC D
$strrrD z
+rr{ |
$str	rr} Å
+
rrÇ É
$str
rrÑ ê
+
rrë í
password
rrì õ
)
rrõ ú
)
rrú ù
{ss 

connectiontt 
.tt 
Opentt #
(tt# $
)tt$ %
;tt% &
usinguu 
(uu 

SqlCommanduu %
commanduu& -
=uu. /
newuu0 3

SqlCommanduu4 >
(uu> ?
$struu? Y
,uuY Z

connectionuu[ e
)uue f
)uuf g
{vv 
commandww 
.ww  
ExecuteNonQueryww  /
(ww/ 0
)ww0 1
;ww1 2
}xx 
}yy 
}zz 
catch{{ 
({{ 
SqlException{{ 
	exceptSql{{  )
){{) *
{|| 
IO}} 
.}} 
Logger}} 
.}} 
Log}} 
(}} 
NLog}} "
.}}" #
LogLevel}}# +
.}}+ ,
Warn}}, 0
,}}0 1
$str}}2 R
,}}R S
	exceptSql}}T ]
)}}] ^
;}}^ _
}~~ 
} 	
}
ÄÄ 
private
ÉÉ 
void
ÉÉ 
GoodG2B2
ÉÉ 
(
ÉÉ 
)
ÉÉ 
{
ÑÑ 
string
ÖÖ 
password
ÖÖ 
;
ÖÖ 
if
ÜÜ 

(
ÜÜ  
PRIVATE_CONST_FIVE
ÜÜ 
==
ÜÜ  
$num
ÜÜ  !
)
ÜÜ! "
{
áá 	
password
ää 
=
ää 
$str
ää &
;
ää& '
}
ãã 	
else
åå 
{
çç 	
password
êê 
=
êê 
null
êê 
;
êê 
}
ëë 	
if
íí 

(
íí  
PRIVATE_CONST_FIVE
íí 
==
íí  
$num
íí  !
)
íí! "
{
ìì 	
try
îî 
{
ïï 
using
óó 
(
óó 
SqlConnection
óó $

connection
óó% /
=
óó0 1
new
óó2 5
SqlConnection
óó6 C
(
óóC D
$str
óóD z
+
óó{ |
$stróó} Å
+óóÇ É
$stróóÑ ê
+óóë í
passwordóóì õ
)óóõ ú
)óóú ù
{
òò 

connection
ôô 
.
ôô 
Open
ôô #
(
ôô# $
)
ôô$ %
;
ôô% &
using
öö 
(
öö 

SqlCommand
öö %
command
öö& -
=
öö. /
new
öö0 3

SqlCommand
öö4 >
(
öö> ?
$str
öö? Y
,
ööY Z

connection
öö[ e
)
ööe f
)
ööf g
{
õõ 
command
úú 
.
úú  
ExecuteNonQuery
úú  /
(
úú/ 0
)
úú0 1
;
úú1 2
}
ùù 
}
ûû 
}
üü 
catch
†† 
(
†† 
SqlException
†† 
	exceptSql
††  )
)
††) *
{
°° 
IO
¢¢ 
.
¢¢ 
Logger
¢¢ 
.
¢¢ 
Log
¢¢ 
(
¢¢ 
NLog
¢¢ "
.
¢¢" #
LogLevel
¢¢# +
.
¢¢+ ,
Warn
¢¢, 0
,
¢¢0 1
$str
¢¢2 R
,
¢¢R S
	exceptSql
¢¢T ]
)
¢¢] ^
;
¢¢^ _
}
££ 
}
§§ 	
}
•• 
private
®® 
void
®® 
GoodB2G1
®® 
(
®® 
)
®® 
{
©© 
string
™™ 
password
™™ 
;
™™ 
if
´´ 

(
´´  
PRIVATE_CONST_FIVE
´´ 
==
´´  
$num
´´  !
)
´´! "
{
¨¨ 	
password
≠≠ 
=
≠≠ 
$str
≠≠ 
;
≠≠ 
{
ØØ 
try
∞∞ 
{
±± 
using
≤≤ 
(
≤≤ 
	WebClient
≤≤ $
client
≤≤% +
=
≤≤, -
new
≤≤. 1
	WebClient
≤≤2 ;
(
≤≤; <
)
≤≤< =
)
≤≤= >
{
≥≥ 
using
¥¥ 
(
¥¥ 
StreamReader
¥¥ +
sr
¥¥, .
=
¥¥/ 0
new
¥¥1 4
StreamReader
¥¥5 A
(
¥¥A B
client
¥¥B H
.
¥¥H I
OpenRead
¥¥I Q
(
¥¥Q R
$str
¥¥R k
)
¥¥k l
)
¥¥l m
)
¥¥m n
{
µµ 
password
ππ $
=
ππ% &
sr
ππ' )
.
ππ) *
ReadLine
ππ* 2
(
ππ2 3
)
ππ3 4
;
ππ4 5
}
∫∫ 
}
ªª 
}
ºº 
catch
ΩΩ 
(
ΩΩ 
IOException
ΩΩ "
exceptIO
ΩΩ# +
)
ΩΩ+ ,
{
ææ 
IO
øø 
.
øø 
Logger
øø 
.
øø 
Log
øø !
(
øø! "
NLog
øø" &
.
øø& '
LogLevel
øø' /
.
øø/ 0
Warn
øø0 4
,
øø4 5
$str
øø6 Q
,
øøQ R
exceptIO
øøS [
)
øø[ \
;
øø\ ]
}
¿¿ 
}
¡¡ 
}
¬¬ 	
else
√√ 
{
ƒƒ 	
password
«« 
=
«« 
null
«« 
;
«« 
}
»» 	
if
…… 

(
……  
PRIVATE_CONST_FIVE
…… 
!=
……  
$num
……  !
)
……! "
{
   	
IO
ÃÃ 
.
ÃÃ 
	WriteLine
ÃÃ 
(
ÃÃ 
$str
ÃÃ /
)
ÃÃ/ 0
;
ÃÃ0 1
}
ÕÕ 	
else
ŒŒ 
{
œœ 	
if
–– 
(
–– 
password
–– 
!=
–– 
null
––  
)
––  !
{
—— 
{
”” 
using
‘‘ 
(
‘‘ &
AesCryptoServiceProvider
‘‘ 3
aesAlg
‘‘4 :
=
‘‘; <
new
‘‘= @&
AesCryptoServiceProvider
‘‘A Y
(
‘‘Y Z
)
‘‘Z [
)
‘‘[ \
{
’’ 
aesAlg
÷÷ 
.
÷÷ 
Padding
÷÷ &
=
÷÷' (
PaddingMode
÷÷) 4
.
÷÷4 5
None
÷÷5 9
;
÷÷9 :
aesAlg
◊◊ 
.
◊◊ 
Key
◊◊ "
=
◊◊# $
Encoding
◊◊% -
.
◊◊- .
UTF8
◊◊. 2
.
◊◊2 3
GetBytes
◊◊3 ;
(
◊◊; <
$str
◊◊< N
)
◊◊N O
;
◊◊O P
ICryptoTransform
ŸŸ (
	decryptor
ŸŸ) 2
=
ŸŸ3 4
aesAlg
ŸŸ5 ;
.
ŸŸ; <
CreateDecryptor
ŸŸ< K
(
ŸŸK L
aesAlg
ŸŸL R
.
ŸŸR S
Key
ŸŸS V
,
ŸŸV W
aesAlg
ŸŸX ^
.
ŸŸ^ _
IV
ŸŸ_ a
)
ŸŸa b
;
ŸŸb c
using
€€ 
(
€€ 
MemoryStream
€€ +
	msDecrypt
€€, 5
=
€€6 7
new
€€8 ;
MemoryStream
€€< H
(
€€H I
Encoding
€€I Q
.
€€Q R
UTF8
€€R V
.
€€V W
GetBytes
€€W _
(
€€_ `
password
€€` h
)
€€h i
)
€€i j
)
€€j k
{
‹‹ 
using
›› !
(
››" #
CryptoStream
››# /
	csDecrypt
››0 9
=
››: ;
new
››< ?
CryptoStream
››@ L
(
››L M
	msDecrypt
››M V
,
››V W
	decryptor
››X a
,
››a b
CryptoStreamMode
››c s
.
››s t
Read
››t x
)
››x y
)
››y z
{
ﬁﬁ 
using
ﬂﬂ  %
(
ﬂﬂ& '
StreamReader
ﬂﬂ' 3
	srDecrypt
ﬂﬂ4 =
=
ﬂﬂ> ?
new
ﬂﬂ@ C
StreamReader
ﬂﬂD P
(
ﬂﬂP Q
	csDecrypt
ﬂﬂQ Z
)
ﬂﬂZ [
)
ﬂﬂ[ \
{
‡‡  !
password
„„$ ,
=
„„- .
	srDecrypt
„„/ 8
.
„„8 9
	ReadToEnd
„„9 B
(
„„B C
)
„„C D
;
„„D E
}
‰‰  !
}
ÂÂ 
}
ÊÊ 
}
ÁÁ 
}
ËË 
try
ÈÈ 
{
ÍÍ 
using
ÏÏ 
(
ÏÏ 
SqlConnection
ÏÏ (

connection
ÏÏ) 3
=
ÏÏ4 5
new
ÏÏ6 9
SqlConnection
ÏÏ: G
(
ÏÏG H
$str
ÏÏH ~
+ÏÏ Ä
$strÏÏÅ Ö
+ÏÏÜ á
$strÏÏà î
+ÏÏï ñ
passwordÏÏó ü
)ÏÏü †
)ÏÏ† °
{
ÌÌ 

connection
ÓÓ "
.
ÓÓ" #
Open
ÓÓ# '
(
ÓÓ' (
)
ÓÓ( )
;
ÓÓ) *
using
ÔÔ 
(
ÔÔ 

SqlCommand
ÔÔ )
command
ÔÔ* 1
=
ÔÔ2 3
new
ÔÔ4 7

SqlCommand
ÔÔ8 B
(
ÔÔB C
$str
ÔÔC ]
,
ÔÔ] ^

connection
ÔÔ_ i
)
ÔÔi j
)
ÔÔj k
{
 
command
ÒÒ #
.
ÒÒ# $
ExecuteNonQuery
ÒÒ$ 3
(
ÒÒ3 4
)
ÒÒ4 5
;
ÒÒ5 6
}
ÚÚ 
}
ÛÛ 
}
ÙÙ 
catch
ıı 
(
ıı 
SqlException
ıı #
	exceptSql
ıı$ -
)
ıı- .
{
ˆˆ 
IO
˜˜ 
.
˜˜ 
Logger
˜˜ 
.
˜˜ 
Log
˜˜ !
(
˜˜! "
NLog
˜˜" &
.
˜˜& '
LogLevel
˜˜' /
.
˜˜/ 0
Warn
˜˜0 4
,
˜˜4 5
$str
˜˜6 V
,
˜˜V W
	exceptSql
˜˜X a
)
˜˜a b
;
˜˜b c
}
¯¯ 
}
˘˘ 
}
˙˙ 	
}
˚˚ 
private
˛˛ 
void
˛˛ 
GoodB2G2
˛˛ 
(
˛˛ 
)
˛˛ 
{
ˇˇ 
string
ÄÄ 
password
ÄÄ 
;
ÄÄ 
if
ÅÅ 

(
ÅÅ  
PRIVATE_CONST_FIVE
ÅÅ 
==
ÅÅ  
$num
ÅÅ  !
)
ÅÅ! "
{
ÇÇ 	
password
ÉÉ 
=
ÉÉ 
$str
ÉÉ 
;
ÉÉ 
{
ÖÖ 
try
ÜÜ 
{
áá 
using
àà 
(
àà 
	WebClient
àà $
client
àà% +
=
àà, -
new
àà. 1
	WebClient
àà2 ;
(
àà; <
)
àà< =
)
àà= >
{
ââ 
using
ää 
(
ää 
StreamReader
ää +
sr
ää, .
=
ää/ 0
new
ää1 4
StreamReader
ää5 A
(
ääA B
client
ääB H
.
ääH I
OpenRead
ääI Q
(
ääQ R
$str
ääR k
)
ääk l
)
ääl m
)
ääm n
{
ãã 
password
èè $
=
èè% &
sr
èè' )
.
èè) *
ReadLine
èè* 2
(
èè2 3
)
èè3 4
;
èè4 5
}
êê 
}
ëë 
}
íí 
catch
ìì 
(
ìì 
IOException
ìì "
exceptIO
ìì# +
)
ìì+ ,
{
îî 
IO
ïï 
.
ïï 
Logger
ïï 
.
ïï 
Log
ïï !
(
ïï! "
NLog
ïï" &
.
ïï& '
LogLevel
ïï' /
.
ïï/ 0
Warn
ïï0 4
,
ïï4 5
$str
ïï6 Q
,
ïïQ R
exceptIO
ïïS [
)
ïï[ \
;
ïï\ ]
}
ññ 
}
óó 
}
òò 	
else
ôô 
{
öö 	
password
ùù 
=
ùù 
null
ùù 
;
ùù 
}
ûû 	
if
üü 

(
üü  
PRIVATE_CONST_FIVE
üü 
==
üü  
$num
üü  !
)
üü! "
{
†† 	
if
°° 
(
°° 
password
°° 
!=
°° 
null
°°  
)
°°  !
{
¢¢ 
{
§§ 
using
•• 
(
•• &
AesCryptoServiceProvider
•• 3
aesAlg
••4 :
=
••; <
new
••= @&
AesCryptoServiceProvider
••A Y
(
••Y Z
)
••Z [
)
••[ \
{
¶¶ 
aesAlg
ßß 
.
ßß 
Padding
ßß &
=
ßß' (
PaddingMode
ßß) 4
.
ßß4 5
None
ßß5 9
;
ßß9 :
aesAlg
®® 
.
®® 
Key
®® "
=
®®# $
Encoding
®®% -
.
®®- .
UTF8
®®. 2
.
®®2 3
GetBytes
®®3 ;
(
®®; <
$str
®®< N
)
®®N O
;
®®O P
ICryptoTransform
™™ (
	decryptor
™™) 2
=
™™3 4
aesAlg
™™5 ;
.
™™; <
CreateDecryptor
™™< K
(
™™K L
aesAlg
™™L R
.
™™R S
Key
™™S V
,
™™V W
aesAlg
™™X ^
.
™™^ _
IV
™™_ a
)
™™a b
;
™™b c
using
¨¨ 
(
¨¨ 
MemoryStream
¨¨ +
	msDecrypt
¨¨, 5
=
¨¨6 7
new
¨¨8 ;
MemoryStream
¨¨< H
(
¨¨H I
Encoding
¨¨I Q
.
¨¨Q R
UTF8
¨¨R V
.
¨¨V W
GetBytes
¨¨W _
(
¨¨_ `
password
¨¨` h
)
¨¨h i
)
¨¨i j
)
¨¨j k
{
≠≠ 
using
ÆÆ !
(
ÆÆ" #
CryptoStream
ÆÆ# /
	csDecrypt
ÆÆ0 9
=
ÆÆ: ;
new
ÆÆ< ?
CryptoStream
ÆÆ@ L
(
ÆÆL M
	msDecrypt
ÆÆM V
,
ÆÆV W
	decryptor
ÆÆX a
,
ÆÆa b
CryptoStreamMode
ÆÆc s
.
ÆÆs t
Read
ÆÆt x
)
ÆÆx y
)
ÆÆy z
{
ØØ 
using
∞∞  %
(
∞∞& '
StreamReader
∞∞' 3
	srDecrypt
∞∞4 =
=
∞∞> ?
new
∞∞@ C
StreamReader
∞∞D P
(
∞∞P Q
	csDecrypt
∞∞Q Z
)
∞∞Z [
)
∞∞[ \
{
±±  !
password
¥¥$ ,
=
¥¥- .
	srDecrypt
¥¥/ 8
.
¥¥8 9
	ReadToEnd
¥¥9 B
(
¥¥B C
)
¥¥C D
;
¥¥D E
}
µµ  !
}
∂∂ 
}
∑∑ 
}
∏∏ 
}
ππ 
try
∫∫ 
{
ªª 
using
ΩΩ 
(
ΩΩ 
SqlConnection
ΩΩ (

connection
ΩΩ) 3
=
ΩΩ4 5
new
ΩΩ6 9
SqlConnection
ΩΩ: G
(
ΩΩG H
$str
ΩΩH ~
+ΩΩ Ä
$strΩΩÅ Ö
+ΩΩÜ á
$strΩΩà î
+ΩΩï ñ
passwordΩΩó ü
)ΩΩü †
)ΩΩ† °
{
ææ 

connection
øø "
.
øø" #
Open
øø# '
(
øø' (
)
øø( )
;
øø) *
using
¿¿ 
(
¿¿ 

SqlCommand
¿¿ )
command
¿¿* 1
=
¿¿2 3
new
¿¿4 7

SqlCommand
¿¿8 B
(
¿¿B C
$str
¿¿C ]
,
¿¿] ^

connection
¿¿_ i
)
¿¿i j
)
¿¿j k
{
¡¡ 
command
¬¬ #
.
¬¬# $
ExecuteNonQuery
¬¬$ 3
(
¬¬3 4
)
¬¬4 5
;
¬¬5 6
}
√√ 
}
ƒƒ 
}
≈≈ 
catch
∆∆ 
(
∆∆ 
SqlException
∆∆ #
	exceptSql
∆∆$ -
)
∆∆- .
{
«« 
IO
»» 
.
»» 
Logger
»» 
.
»» 
Log
»» !
(
»»! "
NLog
»»" &
.
»»& '
LogLevel
»»' /
.
»»/ 0
Warn
»»0 4
,
»»4 5
$str
»»6 V
,
»»V W
	exceptSql
»»X a
)
»»a b
;
»»b c
}
…… 
}
   
}
ÀÀ 	
}
ÃÃ 
public
ŒŒ 

override
ŒŒ 
void
ŒŒ 
Good
ŒŒ 
(
ŒŒ 
)
ŒŒ 
{
œœ 
GoodG2B1
–– 
(
–– 
)
–– 
;
–– 
GoodG2B2
—— 
(
—— 
)
—— 
;
—— 
GoodB2G1
““ 
(
““ 
)
““ 
;
““ 
GoodB2G2
”” 
(
”” 
)
”” 
;
”” 
}
‘‘ 
}÷÷ 
}◊◊ Áú
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_07.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class J
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_07 D
:E F
AbstractTestCaseG W
{ 
private$$ 
int$$ 
privateFive$$ 
=$$ 
$num$$ 
;$$  
public&& 

override&& 
void&& 
Bad&& 
(&& 
)&& 
{'' 
string(( 
password(( 
;(( 
if)) 

()) 
privateFive)) 
==)) 
$num)) 
))) 
{** 	
password++ 
=++ 
$str++ 
;++ 
{-- 
try.. 
{// 
using00 
(00 
	WebClient00 $
client00% +
=00, -
new00. 1
	WebClient002 ;
(00; <
)00< =
)00= >
{11 
using22 
(22 
StreamReader22 +
sr22, .
=22/ 0
new221 4
StreamReader225 A
(22A B
client22B H
.22H I
OpenRead22I Q
(22Q R
$str22R k
)22k l
)22l m
)22m n
{33 
password77 $
=77% &
sr77' )
.77) *
ReadLine77* 2
(772 3
)773 4
;774 5
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
$str==6 Q
,==Q R
exceptIO==S [
)==[ \
;==\ ]
}>> 
}?? 
}@@ 	
elseAA 
{BB 	
passwordEE 
=EE 
nullEE 
;EE 
}FF 	
ifGG 

(GG 
privateFiveGG 
==GG 
$numGG 
)GG 
{HH 	
tryII 
{JJ 
usingLL 
(LL 
SqlConnectionLL $

connectionLL% /
=LL0 1
newLL2 5
SqlConnectionLL6 C
(LLC D
$strLLD z
+LL{ |
$str	LL} Å
+
LLÇ É
$str
LLÑ ê
+
LLë í
password
LLì õ
)
LLõ ú
)
LLú ù
{MM 

connectionNN 
.NN 
OpenNN #
(NN# $
)NN$ %
;NN% &
usingOO 
(OO 

SqlCommandOO %
commandOO& -
=OO. /
newOO0 3

SqlCommandOO4 >
(OO> ?
$strOO? Y
,OOY Z

connectionOO[ e
)OOe f
)OOf g
{PP 
commandQQ 
.QQ  
ExecuteNonQueryQQ  /
(QQ/ 0
)QQ0 1
;QQ1 2
}RR 
}SS 
}TT 
catchUU 
(UU 
SqlExceptionUU 
	exceptSqlUU  )
)UU) *
{VV 
IOWW 
.WW 
LoggerWW 
.WW 
LogWW 
(WW 
NLogWW "
.WW" #
LogLevelWW# +
.WW+ ,
WarnWW, 0
,WW0 1
$strWW2 R
,WWR S
	exceptSqlWWT ]
)WW] ^
;WW^ _
}XX 
}YY 	
}ZZ 
private^^ 
void^^ 
GoodG2B1^^ 
(^^ 
)^^ 
{__ 
string`` 
password`` 
;`` 
ifaa 

(aa 
privateFiveaa 
!=aa 
$numaa 
)aa 
{bb 	
passwordee 
=ee 
nullee 
;ee 
}ff 	
elsegg 
{hh 	
passwordkk 
=kk 
$strkk &
;kk& '
}ll 	
ifmm 

(mm 
privateFivemm 
==mm 
$nummm 
)mm 
{nn 	
tryoo 
{pp 
usingrr 
(rr 
SqlConnectionrr $

connectionrr% /
=rr0 1
newrr2 5
SqlConnectionrr6 C
(rrC D
$strrrD z
+rr{ |
$str	rr} Å
+
rrÇ É
$str
rrÑ ê
+
rrë í
password
rrì õ
)
rrõ ú
)
rrú ù
{ss 

connectiontt 
.tt 
Opentt #
(tt# $
)tt$ %
;tt% &
usinguu 
(uu 

SqlCommanduu %
commanduu& -
=uu. /
newuu0 3

SqlCommanduu4 >
(uu> ?
$struu? Y
,uuY Z

connectionuu[ e
)uue f
)uuf g
{vv 
commandww 
.ww  
ExecuteNonQueryww  /
(ww/ 0
)ww0 1
;ww1 2
}xx 
}yy 
}zz 
catch{{ 
({{ 
SqlException{{ 
	exceptSql{{  )
){{) *
{|| 
IO}} 
.}} 
Logger}} 
.}} 
Log}} 
(}} 
NLog}} "
.}}" #
LogLevel}}# +
.}}+ ,
Warn}}, 0
,}}0 1
$str}}2 R
,}}R S
	exceptSql}}T ]
)}}] ^
;}}^ _
}~~ 
} 	
}
ÄÄ 
private
ÉÉ 
void
ÉÉ 
GoodG2B2
ÉÉ 
(
ÉÉ 
)
ÉÉ 
{
ÑÑ 
string
ÖÖ 
password
ÖÖ 
;
ÖÖ 
if
ÜÜ 

(
ÜÜ 
privateFive
ÜÜ 
==
ÜÜ 
$num
ÜÜ 
)
ÜÜ 
{
áá 	
password
ää 
=
ää 
$str
ää &
;
ää& '
}
ãã 	
else
åå 
{
çç 	
password
êê 
=
êê 
null
êê 
;
êê 
}
ëë 	
if
íí 

(
íí 
privateFive
íí 
==
íí 
$num
íí 
)
íí 
{
ìì 	
try
îî 
{
ïï 
using
óó 
(
óó 
SqlConnection
óó $

connection
óó% /
=
óó0 1
new
óó2 5
SqlConnection
óó6 C
(
óóC D
$str
óóD z
+
óó{ |
$stróó} Å
+óóÇ É
$stróóÑ ê
+óóë í
passwordóóì õ
)óóõ ú
)óóú ù
{
òò 

connection
ôô 
.
ôô 
Open
ôô #
(
ôô# $
)
ôô$ %
;
ôô% &
using
öö 
(
öö 

SqlCommand
öö %
command
öö& -
=
öö. /
new
öö0 3

SqlCommand
öö4 >
(
öö> ?
$str
öö? Y
,
ööY Z

connection
öö[ e
)
ööe f
)
ööf g
{
õõ 
command
úú 
.
úú  
ExecuteNonQuery
úú  /
(
úú/ 0
)
úú0 1
;
úú1 2
}
ùù 
}
ûû 
}
üü 
catch
†† 
(
†† 
SqlException
†† 
	exceptSql
††  )
)
††) *
{
°° 
IO
¢¢ 
.
¢¢ 
Logger
¢¢ 
.
¢¢ 
Log
¢¢ 
(
¢¢ 
NLog
¢¢ "
.
¢¢" #
LogLevel
¢¢# +
.
¢¢+ ,
Warn
¢¢, 0
,
¢¢0 1
$str
¢¢2 R
,
¢¢R S
	exceptSql
¢¢T ]
)
¢¢] ^
;
¢¢^ _
}
££ 
}
§§ 	
}
•• 
private
®® 
void
®® 
GoodB2G1
®® 
(
®® 
)
®® 
{
©© 
string
™™ 
password
™™ 
;
™™ 
if
´´ 

(
´´ 
privateFive
´´ 
==
´´ 
$num
´´ 
)
´´ 
{
¨¨ 	
password
≠≠ 
=
≠≠ 
$str
≠≠ 
;
≠≠ 
{
ØØ 
try
∞∞ 
{
±± 
using
≤≤ 
(
≤≤ 
	WebClient
≤≤ $
client
≤≤% +
=
≤≤, -
new
≤≤. 1
	WebClient
≤≤2 ;
(
≤≤; <
)
≤≤< =
)
≤≤= >
{
≥≥ 
using
¥¥ 
(
¥¥ 
StreamReader
¥¥ +
sr
¥¥, .
=
¥¥/ 0
new
¥¥1 4
StreamReader
¥¥5 A
(
¥¥A B
client
¥¥B H
.
¥¥H I
OpenRead
¥¥I Q
(
¥¥Q R
$str
¥¥R k
)
¥¥k l
)
¥¥l m
)
¥¥m n
{
µµ 
password
ππ $
=
ππ% &
sr
ππ' )
.
ππ) *
ReadLine
ππ* 2
(
ππ2 3
)
ππ3 4
;
ππ4 5
}
∫∫ 
}
ªª 
}
ºº 
catch
ΩΩ 
(
ΩΩ 
IOException
ΩΩ "
exceptIO
ΩΩ# +
)
ΩΩ+ ,
{
ææ 
IO
øø 
.
øø 
Logger
øø 
.
øø 
Log
øø !
(
øø! "
NLog
øø" &
.
øø& '
LogLevel
øø' /
.
øø/ 0
Warn
øø0 4
,
øø4 5
$str
øø6 Q
,
øøQ R
exceptIO
øøS [
)
øø[ \
;
øø\ ]
}
¿¿ 
}
¡¡ 
}
¬¬ 	
else
√√ 
{
ƒƒ 	
password
«« 
=
«« 
null
«« 
;
«« 
}
»» 	
if
…… 

(
…… 
privateFive
…… 
!=
…… 
$num
…… 
)
…… 
{
   	
IO
ÃÃ 
.
ÃÃ 
	WriteLine
ÃÃ 
(
ÃÃ 
$str
ÃÃ /
)
ÃÃ/ 0
;
ÃÃ0 1
}
ÕÕ 	
else
ŒŒ 
{
œœ 	
if
–– 
(
–– 
password
–– 
!=
–– 
null
––  
)
––  !
{
—— 
{
”” 
using
‘‘ 
(
‘‘ &
AesCryptoServiceProvider
‘‘ 3
aesAlg
‘‘4 :
=
‘‘; <
new
‘‘= @&
AesCryptoServiceProvider
‘‘A Y
(
‘‘Y Z
)
‘‘Z [
)
‘‘[ \
{
’’ 
aesAlg
÷÷ 
.
÷÷ 
Padding
÷÷ &
=
÷÷' (
PaddingMode
÷÷) 4
.
÷÷4 5
None
÷÷5 9
;
÷÷9 :
aesAlg
◊◊ 
.
◊◊ 
Key
◊◊ "
=
◊◊# $
Encoding
◊◊% -
.
◊◊- .
UTF8
◊◊. 2
.
◊◊2 3
GetBytes
◊◊3 ;
(
◊◊; <
$str
◊◊< N
)
◊◊N O
;
◊◊O P
ICryptoTransform
ŸŸ (
	decryptor
ŸŸ) 2
=
ŸŸ3 4
aesAlg
ŸŸ5 ;
.
ŸŸ; <
CreateDecryptor
ŸŸ< K
(
ŸŸK L
aesAlg
ŸŸL R
.
ŸŸR S
Key
ŸŸS V
,
ŸŸV W
aesAlg
ŸŸX ^
.
ŸŸ^ _
IV
ŸŸ_ a
)
ŸŸa b
;
ŸŸb c
using
€€ 
(
€€ 
MemoryStream
€€ +
	msDecrypt
€€, 5
=
€€6 7
new
€€8 ;
MemoryStream
€€< H
(
€€H I
Encoding
€€I Q
.
€€Q R
UTF8
€€R V
.
€€V W
GetBytes
€€W _
(
€€_ `
password
€€` h
)
€€h i
)
€€i j
)
€€j k
{
‹‹ 
using
›› !
(
››" #
CryptoStream
››# /
	csDecrypt
››0 9
=
››: ;
new
››< ?
CryptoStream
››@ L
(
››L M
	msDecrypt
››M V
,
››V W
	decryptor
››X a
,
››a b
CryptoStreamMode
››c s
.
››s t
Read
››t x
)
››x y
)
››y z
{
ﬁﬁ 
using
ﬂﬂ  %
(
ﬂﬂ& '
StreamReader
ﬂﬂ' 3
	srDecrypt
ﬂﬂ4 =
=
ﬂﬂ> ?
new
ﬂﬂ@ C
StreamReader
ﬂﬂD P
(
ﬂﬂP Q
	csDecrypt
ﬂﬂQ Z
)
ﬂﬂZ [
)
ﬂﬂ[ \
{
‡‡  !
password
„„$ ,
=
„„- .
	srDecrypt
„„/ 8
.
„„8 9
	ReadToEnd
„„9 B
(
„„B C
)
„„C D
;
„„D E
}
‰‰  !
}
ÂÂ 
}
ÊÊ 
}
ÁÁ 
}
ËË 
try
ÈÈ 
{
ÍÍ 
using
ÏÏ 
(
ÏÏ 
SqlConnection
ÏÏ (

connection
ÏÏ) 3
=
ÏÏ4 5
new
ÏÏ6 9
SqlConnection
ÏÏ: G
(
ÏÏG H
$str
ÏÏH ~
+ÏÏ Ä
$strÏÏÅ Ö
+ÏÏÜ á
$strÏÏà î
+ÏÏï ñ
passwordÏÏó ü
)ÏÏü †
)ÏÏ† °
{
ÌÌ 

connection
ÓÓ "
.
ÓÓ" #
Open
ÓÓ# '
(
ÓÓ' (
)
ÓÓ( )
;
ÓÓ) *
using
ÔÔ 
(
ÔÔ 

SqlCommand
ÔÔ )
command
ÔÔ* 1
=
ÔÔ2 3
new
ÔÔ4 7

SqlCommand
ÔÔ8 B
(
ÔÔB C
$str
ÔÔC ]
,
ÔÔ] ^

connection
ÔÔ_ i
)
ÔÔi j
)
ÔÔj k
{
 
command
ÒÒ #
.
ÒÒ# $
ExecuteNonQuery
ÒÒ$ 3
(
ÒÒ3 4
)
ÒÒ4 5
;
ÒÒ5 6
}
ÚÚ 
}
ÛÛ 
}
ÙÙ 
catch
ıı 
(
ıı 
SqlException
ıı #
	exceptSql
ıı$ -
)
ıı- .
{
ˆˆ 
IO
˜˜ 
.
˜˜ 
Logger
˜˜ 
.
˜˜ 
Log
˜˜ !
(
˜˜! "
NLog
˜˜" &
.
˜˜& '
LogLevel
˜˜' /
.
˜˜/ 0
Warn
˜˜0 4
,
˜˜4 5
$str
˜˜6 V
,
˜˜V W
	exceptSql
˜˜X a
)
˜˜a b
;
˜˜b c
}
¯¯ 
}
˘˘ 
}
˙˙ 	
}
˚˚ 
private
˛˛ 
void
˛˛ 
GoodB2G2
˛˛ 
(
˛˛ 
)
˛˛ 
{
ˇˇ 
string
ÄÄ 
password
ÄÄ 
;
ÄÄ 
if
ÅÅ 

(
ÅÅ 
privateFive
ÅÅ 
==
ÅÅ 
$num
ÅÅ 
)
ÅÅ 
{
ÇÇ 	
password
ÉÉ 
=
ÉÉ 
$str
ÉÉ 
;
ÉÉ 
{
ÖÖ 
try
ÜÜ 
{
áá 
using
àà 
(
àà 
	WebClient
àà $
client
àà% +
=
àà, -
new
àà. 1
	WebClient
àà2 ;
(
àà; <
)
àà< =
)
àà= >
{
ââ 
using
ää 
(
ää 
StreamReader
ää +
sr
ää, .
=
ää/ 0
new
ää1 4
StreamReader
ää5 A
(
ääA B
client
ääB H
.
ääH I
OpenRead
ääI Q
(
ääQ R
$str
ääR k
)
ääk l
)
ääl m
)
ääm n
{
ãã 
password
èè $
=
èè% &
sr
èè' )
.
èè) *
ReadLine
èè* 2
(
èè2 3
)
èè3 4
;
èè4 5
}
êê 
}
ëë 
}
íí 
catch
ìì 
(
ìì 
IOException
ìì "
exceptIO
ìì# +
)
ìì+ ,
{
îî 
IO
ïï 
.
ïï 
Logger
ïï 
.
ïï 
Log
ïï !
(
ïï! "
NLog
ïï" &
.
ïï& '
LogLevel
ïï' /
.
ïï/ 0
Warn
ïï0 4
,
ïï4 5
$str
ïï6 Q
,
ïïQ R
exceptIO
ïïS [
)
ïï[ \
;
ïï\ ]
}
ññ 
}
óó 
}
òò 	
else
ôô 
{
öö 	
password
ùù 
=
ùù 
null
ùù 
;
ùù 
}
ûû 	
if
üü 

(
üü 
privateFive
üü 
==
üü 
$num
üü 
)
üü 
{
†† 	
if
°° 
(
°° 
password
°° 
!=
°° 
null
°°  
)
°°  !
{
¢¢ 
{
§§ 
using
•• 
(
•• &
AesCryptoServiceProvider
•• 3
aesAlg
••4 :
=
••; <
new
••= @&
AesCryptoServiceProvider
••A Y
(
••Y Z
)
••Z [
)
••[ \
{
¶¶ 
aesAlg
ßß 
.
ßß 
Padding
ßß &
=
ßß' (
PaddingMode
ßß) 4
.
ßß4 5
None
ßß5 9
;
ßß9 :
aesAlg
®® 
.
®® 
Key
®® "
=
®®# $
Encoding
®®% -
.
®®- .
UTF8
®®. 2
.
®®2 3
GetBytes
®®3 ;
(
®®; <
$str
®®< N
)
®®N O
;
®®O P
ICryptoTransform
™™ (
	decryptor
™™) 2
=
™™3 4
aesAlg
™™5 ;
.
™™; <
CreateDecryptor
™™< K
(
™™K L
aesAlg
™™L R
.
™™R S
Key
™™S V
,
™™V W
aesAlg
™™X ^
.
™™^ _
IV
™™_ a
)
™™a b
;
™™b c
using
¨¨ 
(
¨¨ 
MemoryStream
¨¨ +
	msDecrypt
¨¨, 5
=
¨¨6 7
new
¨¨8 ;
MemoryStream
¨¨< H
(
¨¨H I
Encoding
¨¨I Q
.
¨¨Q R
UTF8
¨¨R V
.
¨¨V W
GetBytes
¨¨W _
(
¨¨_ `
password
¨¨` h
)
¨¨h i
)
¨¨i j
)
¨¨j k
{
≠≠ 
using
ÆÆ !
(
ÆÆ" #
CryptoStream
ÆÆ# /
	csDecrypt
ÆÆ0 9
=
ÆÆ: ;
new
ÆÆ< ?
CryptoStream
ÆÆ@ L
(
ÆÆL M
	msDecrypt
ÆÆM V
,
ÆÆV W
	decryptor
ÆÆX a
,
ÆÆa b
CryptoStreamMode
ÆÆc s
.
ÆÆs t
Read
ÆÆt x
)
ÆÆx y
)
ÆÆy z
{
ØØ 
using
∞∞  %
(
∞∞& '
StreamReader
∞∞' 3
	srDecrypt
∞∞4 =
=
∞∞> ?
new
∞∞@ C
StreamReader
∞∞D P
(
∞∞P Q
	csDecrypt
∞∞Q Z
)
∞∞Z [
)
∞∞[ \
{
±±  !
password
¥¥$ ,
=
¥¥- .
	srDecrypt
¥¥/ 8
.
¥¥8 9
	ReadToEnd
¥¥9 B
(
¥¥B C
)
¥¥C D
;
¥¥D E
}
µµ  !
}
∂∂ 
}
∑∑ 
}
∏∏ 
}
ππ 
try
∫∫ 
{
ªª 
using
ΩΩ 
(
ΩΩ 
SqlConnection
ΩΩ (

connection
ΩΩ) 3
=
ΩΩ4 5
new
ΩΩ6 9
SqlConnection
ΩΩ: G
(
ΩΩG H
$str
ΩΩH ~
+ΩΩ Ä
$strΩΩÅ Ö
+ΩΩÜ á
$strΩΩà î
+ΩΩï ñ
passwordΩΩó ü
)ΩΩü †
)ΩΩ† °
{
ææ 

connection
øø "
.
øø" #
Open
øø# '
(
øø' (
)
øø( )
;
øø) *
using
¿¿ 
(
¿¿ 

SqlCommand
¿¿ )
command
¿¿* 1
=
¿¿2 3
new
¿¿4 7

SqlCommand
¿¿8 B
(
¿¿B C
$str
¿¿C ]
,
¿¿] ^

connection
¿¿_ i
)
¿¿i j
)
¿¿j k
{
¡¡ 
command
¬¬ #
.
¬¬# $
ExecuteNonQuery
¬¬$ 3
(
¬¬3 4
)
¬¬4 5
;
¬¬5 6
}
√√ 
}
ƒƒ 
}
≈≈ 
catch
∆∆ 
(
∆∆ 
SqlException
∆∆ #
	exceptSql
∆∆$ -
)
∆∆- .
{
«« 
IO
»» 
.
»» 
Logger
»» 
.
»» 
Log
»» !
(
»»! "
NLog
»»" &
.
»»& '
LogLevel
»»' /
.
»»/ 0
Warn
»»0 4
,
»»4 5
$str
»»6 V
,
»»V W
	exceptSql
»»X a
)
»»a b
;
»»b c
}
…… 
}
   
}
ÀÀ 	
}
ÃÃ 
public
ŒŒ 

override
ŒŒ 
void
ŒŒ 
Good
ŒŒ 
(
ŒŒ 
)
ŒŒ 
{
œœ 
GoodG2B1
–– 
(
–– 
)
–– 
;
–– 
GoodG2B2
—— 
(
—— 
)
—— 
;
—— 
GoodB2G1
““ 
(
““ 
)
““ 
;
““ 
GoodB2G2
”” 
(
”” 
)
”” 
;
”” 
}
‘‘ 
}÷÷ 
}◊◊ Íü
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_08.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class J
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_08 D
:E F
AbstractTestCaseG W
{ 
private$$ 
static$$ 
bool$$ 
PrivateReturnsTrue$$ *
($$* +
)$$+ ,
{%% 
return&& 
true&& 
;&& 
}'' 
private)) 
static)) 
bool)) 
PrivateReturnsFalse)) +
())+ ,
))), -
{** 
return++ 
false++ 
;++ 
},, 
public.. 

override.. 
void.. 
Bad.. 
(.. 
).. 
{// 
string00 
password00 
;00 
if11 

(11 
PrivateReturnsTrue11 
(11 
)11  
)11  !
{22 	
password33 
=33 
$str33 
;33 
{55 
try66 
{77 
using88 
(88 
	WebClient88 $
client88% +
=88, -
new88. 1
	WebClient882 ;
(88; <
)88< =
)88= >
{99 
using:: 
(:: 
StreamReader:: +
sr::, .
=::/ 0
new::1 4
StreamReader::5 A
(::A B
client::B H
.::H I
OpenRead::I Q
(::Q R
$str::R k
)::k l
)::l m
)::m n
{;; 
password?? $
=??% &
sr??' )
.??) *
ReadLine??* 2
(??2 3
)??3 4
;??4 5
}@@ 
}AA 
}BB 
catchCC 
(CC 
IOExceptionCC "
exceptIOCC# +
)CC+ ,
{DD 
IOEE 
.EE 
LoggerEE 
.EE 
LogEE !
(EE! "
NLogEE" &
.EE& '
LogLevelEE' /
.EE/ 0
WarnEE0 4
,EE4 5
$strEE6 Q
,EEQ R
exceptIOEES [
)EE[ \
;EE\ ]
}FF 
}GG 
}HH 	
elseII 
{JJ 	
passwordMM 
=MM 
nullMM 
;MM 
}NN 	
ifOO 

(OO 
PrivateReturnsTrueOO 
(OO 
)OO  
)OO  !
{PP 	
tryQQ 
{RR 
usingTT 
(TT 
SqlConnectionTT $

connectionTT% /
=TT0 1
newTT2 5
SqlConnectionTT6 C
(TTC D
$strTTD z
+TT{ |
$str	TT} Å
+
TTÇ É
$str
TTÑ ê
+
TTë í
password
TTì õ
)
TTõ ú
)
TTú ù
{UU 

connectionVV 
.VV 
OpenVV #
(VV# $
)VV$ %
;VV% &
usingWW 
(WW 

SqlCommandWW %
commandWW& -
=WW. /
newWW0 3

SqlCommandWW4 >
(WW> ?
$strWW? Y
,WWY Z

connectionWW[ e
)WWe f
)WWf g
{XX 
commandYY 
.YY  
ExecuteNonQueryYY  /
(YY/ 0
)YY0 1
;YY1 2
}ZZ 
}[[ 
}\\ 
catch]] 
(]] 
SqlException]] 
	exceptSql]]  )
)]]) *
{^^ 
IO__ 
.__ 
Logger__ 
.__ 
Log__ 
(__ 
NLog__ "
.__" #
LogLevel__# +
.__+ ,
Warn__, 0
,__0 1
$str__2 R
,__R S
	exceptSql__T ]
)__] ^
;__^ _
}`` 
}aa 	
}bb 
privateff 
voidff 
GoodG2B1ff 
(ff 
)ff 
{gg 
stringhh 
passwordhh 
;hh 
ifii 

(ii 
PrivateReturnsFalseii 
(ii  
)ii  !
)ii! "
{jj 	
passwordmm 
=mm 
nullmm 
;mm 
}nn 	
elseoo 
{pp 	
passwordss 
=ss 
$strss &
;ss& '
}tt 	
ifuu 

(uu 
PrivateReturnsTrueuu 
(uu 
)uu  
)uu  !
{vv 	
tryww 
{xx 
usingzz 
(zz 
SqlConnectionzz $

connectionzz% /
=zz0 1
newzz2 5
SqlConnectionzz6 C
(zzC D
$strzzD z
+zz{ |
$str	zz} Å
+
zzÇ É
$str
zzÑ ê
+
zzë í
password
zzì õ
)
zzõ ú
)
zzú ù
{{{ 

connection|| 
.|| 
Open|| #
(||# $
)||$ %
;||% &
using}} 
(}} 

SqlCommand}} %
command}}& -
=}}. /
new}}0 3

SqlCommand}}4 >
(}}> ?
$str}}? Y
,}}Y Z

connection}}[ e
)}}e f
)}}f g
{~~ 
command 
.  
ExecuteNonQuery  /
(/ 0
)0 1
;1 2
}
ÄÄ 
}
ÅÅ 
}
ÇÇ 
catch
ÉÉ 
(
ÉÉ 
SqlException
ÉÉ 
	exceptSql
ÉÉ  )
)
ÉÉ) *
{
ÑÑ 
IO
ÖÖ 
.
ÖÖ 
Logger
ÖÖ 
.
ÖÖ 
Log
ÖÖ 
(
ÖÖ 
NLog
ÖÖ "
.
ÖÖ" #
LogLevel
ÖÖ# +
.
ÖÖ+ ,
Warn
ÖÖ, 0
,
ÖÖ0 1
$str
ÖÖ2 R
,
ÖÖR S
	exceptSql
ÖÖT ]
)
ÖÖ] ^
;
ÖÖ^ _
}
ÜÜ 
}
áá 	
}
àà 
private
ãã 
void
ãã 
GoodG2B2
ãã 
(
ãã 
)
ãã 
{
åå 
string
çç 
password
çç 
;
çç 
if
éé 

(
éé  
PrivateReturnsTrue
éé 
(
éé 
)
éé  
)
éé  !
{
èè 	
password
íí 
=
íí 
$str
íí &
;
íí& '
}
ìì 	
else
îî 
{
ïï 	
password
òò 
=
òò 
null
òò 
;
òò 
}
ôô 	
if
öö 

(
öö  
PrivateReturnsTrue
öö 
(
öö 
)
öö  
)
öö  !
{
õõ 	
try
úú 
{
ùù 
using
üü 
(
üü 
SqlConnection
üü $

connection
üü% /
=
üü0 1
new
üü2 5
SqlConnection
üü6 C
(
üüC D
$str
üüD z
+
üü{ |
$strüü} Å
+üüÇ É
$strüüÑ ê
+üüë í
passwordüüì õ
)üüõ ú
)üüú ù
{
†† 

connection
°° 
.
°° 
Open
°° #
(
°°# $
)
°°$ %
;
°°% &
using
¢¢ 
(
¢¢ 

SqlCommand
¢¢ %
command
¢¢& -
=
¢¢. /
new
¢¢0 3

SqlCommand
¢¢4 >
(
¢¢> ?
$str
¢¢? Y
,
¢¢Y Z

connection
¢¢[ e
)
¢¢e f
)
¢¢f g
{
££ 
command
§§ 
.
§§  
ExecuteNonQuery
§§  /
(
§§/ 0
)
§§0 1
;
§§1 2
}
•• 
}
¶¶ 
}
ßß 
catch
®® 
(
®® 
SqlException
®® 
	exceptSql
®®  )
)
®®) *
{
©© 
IO
™™ 
.
™™ 
Logger
™™ 
.
™™ 
Log
™™ 
(
™™ 
NLog
™™ "
.
™™" #
LogLevel
™™# +
.
™™+ ,
Warn
™™, 0
,
™™0 1
$str
™™2 R
,
™™R S
	exceptSql
™™T ]
)
™™] ^
;
™™^ _
}
´´ 
}
¨¨ 	
}
≠≠ 
private
∞∞ 
void
∞∞ 
GoodB2G1
∞∞ 
(
∞∞ 
)
∞∞ 
{
±± 
string
≤≤ 
password
≤≤ 
;
≤≤ 
if
≥≥ 

(
≥≥  
PrivateReturnsTrue
≥≥ 
(
≥≥ 
)
≥≥  
)
≥≥  !
{
¥¥ 	
password
µµ 
=
µµ 
$str
µµ 
;
µµ 
{
∑∑ 
try
∏∏ 
{
ππ 
using
∫∫ 
(
∫∫ 
	WebClient
∫∫ $
client
∫∫% +
=
∫∫, -
new
∫∫. 1
	WebClient
∫∫2 ;
(
∫∫; <
)
∫∫< =
)
∫∫= >
{
ªª 
using
ºº 
(
ºº 
StreamReader
ºº +
sr
ºº, .
=
ºº/ 0
new
ºº1 4
StreamReader
ºº5 A
(
ººA B
client
ººB H
.
ººH I
OpenRead
ººI Q
(
ººQ R
$str
ººR k
)
ººk l
)
ººl m
)
ººm n
{
ΩΩ 
password
¡¡ $
=
¡¡% &
sr
¡¡' )
.
¡¡) *
ReadLine
¡¡* 2
(
¡¡2 3
)
¡¡3 4
;
¡¡4 5
}
¬¬ 
}
√√ 
}
ƒƒ 
catch
≈≈ 
(
≈≈ 
IOException
≈≈ "
exceptIO
≈≈# +
)
≈≈+ ,
{
∆∆ 
IO
«« 
.
«« 
Logger
«« 
.
«« 
Log
«« !
(
««! "
NLog
««" &
.
««& '
LogLevel
««' /
.
««/ 0
Warn
««0 4
,
««4 5
$str
««6 Q
,
««Q R
exceptIO
««S [
)
««[ \
;
««\ ]
}
»» 
}
…… 
}
   	
else
ÀÀ 
{
ÃÃ 	
password
œœ 
=
œœ 
null
œœ 
;
œœ 
}
–– 	
if
—— 

(
—— !
PrivateReturnsFalse
—— 
(
——  
)
——  !
)
——! "
{
““ 	
IO
‘‘ 
.
‘‘ 
	WriteLine
‘‘ 
(
‘‘ 
$str
‘‘ /
)
‘‘/ 0
;
‘‘0 1
}
’’ 	
else
÷÷ 
{
◊◊ 	
if
ÿÿ 
(
ÿÿ 
password
ÿÿ 
!=
ÿÿ 
null
ÿÿ  
)
ÿÿ  !
{
ŸŸ 
{
€€ 
using
‹‹ 
(
‹‹ &
AesCryptoServiceProvider
‹‹ 3
aesAlg
‹‹4 :
=
‹‹; <
new
‹‹= @&
AesCryptoServiceProvider
‹‹A Y
(
‹‹Y Z
)
‹‹Z [
)
‹‹[ \
{
›› 
aesAlg
ﬁﬁ 
.
ﬁﬁ 
Padding
ﬁﬁ &
=
ﬁﬁ' (
PaddingMode
ﬁﬁ) 4
.
ﬁﬁ4 5
None
ﬁﬁ5 9
;
ﬁﬁ9 :
aesAlg
ﬂﬂ 
.
ﬂﬂ 
Key
ﬂﬂ "
=
ﬂﬂ# $
Encoding
ﬂﬂ% -
.
ﬂﬂ- .
UTF8
ﬂﬂ. 2
.
ﬂﬂ2 3
GetBytes
ﬂﬂ3 ;
(
ﬂﬂ; <
$str
ﬂﬂ< N
)
ﬂﬂN O
;
ﬂﬂO P
ICryptoTransform
·· (
	decryptor
··) 2
=
··3 4
aesAlg
··5 ;
.
··; <
CreateDecryptor
··< K
(
··K L
aesAlg
··L R
.
··R S
Key
··S V
,
··V W
aesAlg
··X ^
.
··^ _
IV
··_ a
)
··a b
;
··b c
using
„„ 
(
„„ 
MemoryStream
„„ +
	msDecrypt
„„, 5
=
„„6 7
new
„„8 ;
MemoryStream
„„< H
(
„„H I
Encoding
„„I Q
.
„„Q R
UTF8
„„R V
.
„„V W
GetBytes
„„W _
(
„„_ `
password
„„` h
)
„„h i
)
„„i j
)
„„j k
{
‰‰ 
using
ÂÂ !
(
ÂÂ" #
CryptoStream
ÂÂ# /
	csDecrypt
ÂÂ0 9
=
ÂÂ: ;
new
ÂÂ< ?
CryptoStream
ÂÂ@ L
(
ÂÂL M
	msDecrypt
ÂÂM V
,
ÂÂV W
	decryptor
ÂÂX a
,
ÂÂa b
CryptoStreamMode
ÂÂc s
.
ÂÂs t
Read
ÂÂt x
)
ÂÂx y
)
ÂÂy z
{
ÊÊ 
using
ÁÁ  %
(
ÁÁ& '
StreamReader
ÁÁ' 3
	srDecrypt
ÁÁ4 =
=
ÁÁ> ?
new
ÁÁ@ C
StreamReader
ÁÁD P
(
ÁÁP Q
	csDecrypt
ÁÁQ Z
)
ÁÁZ [
)
ÁÁ[ \
{
ËË  !
password
ÎÎ$ ,
=
ÎÎ- .
	srDecrypt
ÎÎ/ 8
.
ÎÎ8 9
	ReadToEnd
ÎÎ9 B
(
ÎÎB C
)
ÎÎC D
;
ÎÎD E
}
ÏÏ  !
}
ÌÌ 
}
ÓÓ 
}
ÔÔ 
}
 
try
ÒÒ 
{
ÚÚ 
using
ÙÙ 
(
ÙÙ 
SqlConnection
ÙÙ (

connection
ÙÙ) 3
=
ÙÙ4 5
new
ÙÙ6 9
SqlConnection
ÙÙ: G
(
ÙÙG H
$str
ÙÙH ~
+ÙÙ Ä
$strÙÙÅ Ö
+ÙÙÜ á
$strÙÙà î
+ÙÙï ñ
passwordÙÙó ü
)ÙÙü †
)ÙÙ† °
{
ıı 

connection
ˆˆ "
.
ˆˆ" #
Open
ˆˆ# '
(
ˆˆ' (
)
ˆˆ( )
;
ˆˆ) *
using
˜˜ 
(
˜˜ 

SqlCommand
˜˜ )
command
˜˜* 1
=
˜˜2 3
new
˜˜4 7

SqlCommand
˜˜8 B
(
˜˜B C
$str
˜˜C ]
,
˜˜] ^

connection
˜˜_ i
)
˜˜i j
)
˜˜j k
{
¯¯ 
command
˘˘ #
.
˘˘# $
ExecuteNonQuery
˘˘$ 3
(
˘˘3 4
)
˘˘4 5
;
˘˘5 6
}
˙˙ 
}
˚˚ 
}
¸¸ 
catch
˝˝ 
(
˝˝ 
SqlException
˝˝ #
	exceptSql
˝˝$ -
)
˝˝- .
{
˛˛ 
IO
ˇˇ 
.
ˇˇ 
Logger
ˇˇ 
.
ˇˇ 
Log
ˇˇ !
(
ˇˇ! "
NLog
ˇˇ" &
.
ˇˇ& '
LogLevel
ˇˇ' /
.
ˇˇ/ 0
Warn
ˇˇ0 4
,
ˇˇ4 5
$str
ˇˇ6 V
,
ˇˇV W
	exceptSql
ˇˇX a
)
ˇˇa b
;
ˇˇb c
}
ÄÄ 
}
ÅÅ 
}
ÇÇ 	
}
ÉÉ 
private
ÜÜ 
void
ÜÜ 
GoodB2G2
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
string
àà 
password
àà 
;
àà 
if
ââ 

(
ââ  
PrivateReturnsTrue
ââ 
(
ââ 
)
ââ  
)
ââ  !
{
ää 	
password
ãã 
=
ãã 
$str
ãã 
;
ãã 
{
çç 
try
éé 
{
èè 
using
êê 
(
êê 
	WebClient
êê $
client
êê% +
=
êê, -
new
êê. 1
	WebClient
êê2 ;
(
êê; <
)
êê< =
)
êê= >
{
ëë 
using
íí 
(
íí 
StreamReader
íí +
sr
íí, .
=
íí/ 0
new
íí1 4
StreamReader
íí5 A
(
ííA B
client
ííB H
.
ííH I
OpenRead
ííI Q
(
ííQ R
$str
ííR k
)
íík l
)
ííl m
)
íím n
{
ìì 
password
óó $
=
óó% &
sr
óó' )
.
óó) *
ReadLine
óó* 2
(
óó2 3
)
óó3 4
;
óó4 5
}
òò 
}
ôô 
}
öö 
catch
õõ 
(
õõ 
IOException
õõ "
exceptIO
õõ# +
)
õõ+ ,
{
úú 
IO
ùù 
.
ùù 
Logger
ùù 
.
ùù 
Log
ùù !
(
ùù! "
NLog
ùù" &
.
ùù& '
LogLevel
ùù' /
.
ùù/ 0
Warn
ùù0 4
,
ùù4 5
$str
ùù6 Q
,
ùùQ R
exceptIO
ùùS [
)
ùù[ \
;
ùù\ ]
}
ûû 
}
üü 
}
†† 	
else
°° 
{
¢¢ 	
password
•• 
=
•• 
null
•• 
;
•• 
}
¶¶ 	
if
ßß 

(
ßß  
PrivateReturnsTrue
ßß 
(
ßß 
)
ßß  
)
ßß  !
{
®® 	
if
©© 
(
©© 
password
©© 
!=
©© 
null
©©  
)
©©  !
{
™™ 
{
¨¨ 
using
≠≠ 
(
≠≠ &
AesCryptoServiceProvider
≠≠ 3
aesAlg
≠≠4 :
=
≠≠; <
new
≠≠= @&
AesCryptoServiceProvider
≠≠A Y
(
≠≠Y Z
)
≠≠Z [
)
≠≠[ \
{
ÆÆ 
aesAlg
ØØ 
.
ØØ 
Padding
ØØ &
=
ØØ' (
PaddingMode
ØØ) 4
.
ØØ4 5
None
ØØ5 9
;
ØØ9 :
aesAlg
∞∞ 
.
∞∞ 
Key
∞∞ "
=
∞∞# $
Encoding
∞∞% -
.
∞∞- .
UTF8
∞∞. 2
.
∞∞2 3
GetBytes
∞∞3 ;
(
∞∞; <
$str
∞∞< N
)
∞∞N O
;
∞∞O P
ICryptoTransform
≤≤ (
	decryptor
≤≤) 2
=
≤≤3 4
aesAlg
≤≤5 ;
.
≤≤; <
CreateDecryptor
≤≤< K
(
≤≤K L
aesAlg
≤≤L R
.
≤≤R S
Key
≤≤S V
,
≤≤V W
aesAlg
≤≤X ^
.
≤≤^ _
IV
≤≤_ a
)
≤≤a b
;
≤≤b c
using
¥¥ 
(
¥¥ 
MemoryStream
¥¥ +
	msDecrypt
¥¥, 5
=
¥¥6 7
new
¥¥8 ;
MemoryStream
¥¥< H
(
¥¥H I
Encoding
¥¥I Q
.
¥¥Q R
UTF8
¥¥R V
.
¥¥V W
GetBytes
¥¥W _
(
¥¥_ `
password
¥¥` h
)
¥¥h i
)
¥¥i j
)
¥¥j k
{
µµ 
using
∂∂ !
(
∂∂" #
CryptoStream
∂∂# /
	csDecrypt
∂∂0 9
=
∂∂: ;
new
∂∂< ?
CryptoStream
∂∂@ L
(
∂∂L M
	msDecrypt
∂∂M V
,
∂∂V W
	decryptor
∂∂X a
,
∂∂a b
CryptoStreamMode
∂∂c s
.
∂∂s t
Read
∂∂t x
)
∂∂x y
)
∂∂y z
{
∑∑ 
using
∏∏  %
(
∏∏& '
StreamReader
∏∏' 3
	srDecrypt
∏∏4 =
=
∏∏> ?
new
∏∏@ C
StreamReader
∏∏D P
(
∏∏P Q
	csDecrypt
∏∏Q Z
)
∏∏Z [
)
∏∏[ \
{
ππ  !
password
ºº$ ,
=
ºº- .
	srDecrypt
ºº/ 8
.
ºº8 9
	ReadToEnd
ºº9 B
(
ººB C
)
ººC D
;
ººD E
}
ΩΩ  !
}
ææ 
}
øø 
}
¿¿ 
}
¡¡ 
try
¬¬ 
{
√√ 
using
≈≈ 
(
≈≈ 
SqlConnection
≈≈ (

connection
≈≈) 3
=
≈≈4 5
new
≈≈6 9
SqlConnection
≈≈: G
(
≈≈G H
$str
≈≈H ~
+≈≈ Ä
$str≈≈Å Ö
+≈≈Ü á
$str≈≈à î
+≈≈ï ñ
password≈≈ó ü
)≈≈ü †
)≈≈† °
{
∆∆ 

connection
«« "
.
««" #
Open
««# '
(
««' (
)
««( )
;
««) *
using
»» 
(
»» 

SqlCommand
»» )
command
»»* 1
=
»»2 3
new
»»4 7

SqlCommand
»»8 B
(
»»B C
$str
»»C ]
,
»»] ^

connection
»»_ i
)
»»i j
)
»»j k
{
…… 
command
   #
.
  # $
ExecuteNonQuery
  $ 3
(
  3 4
)
  4 5
;
  5 6
}
ÀÀ 
}
ÃÃ 
}
ÕÕ 
catch
ŒŒ 
(
ŒŒ 
SqlException
ŒŒ #
	exceptSql
ŒŒ$ -
)
ŒŒ- .
{
œœ 
IO
–– 
.
–– 
Logger
–– 
.
–– 
Log
–– !
(
––! "
NLog
––" &
.
––& '
LogLevel
––' /
.
––/ 0
Warn
––0 4
,
––4 5
$str
––6 V
,
––V W
	exceptSql
––X a
)
––a b
;
––b c
}
—— 
}
““ 
}
”” 	
}
‘‘ 
public
÷÷ 

override
÷÷ 
void
÷÷ 
Good
÷÷ 
(
÷÷ 
)
÷÷ 
{
◊◊ 
GoodG2B1
ÿÿ 
(
ÿÿ 
)
ÿÿ 
;
ÿÿ 
GoodG2B2
ŸŸ 
(
ŸŸ 
)
ŸŸ 
;
ŸŸ 
GoodB2G1
⁄⁄ 
(
⁄⁄ 
)
⁄⁄ 
;
⁄⁄ 
GoodB2G2
€€ 
(
€€ 
)
€€ 
;
€€ 
}
‹‹ 
}ﬁﬁ 
}ﬂﬂ ®ú
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_09.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class J
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_09 D
:E F
AbstractTestCaseG W
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
password## 
;## 
if$$ 

($$ 
IO$$ 
.$$  
STATIC_READONLY_TRUE$$ #
)$$# $
{%% 	
password&& 
=&& 
$str&& 
;&& 
{(( 
try)) 
{** 
using++ 
(++ 
	WebClient++ $
client++% +
=++, -
new++. 1
	WebClient++2 ;
(++; <
)++< =
)++= >
{,, 
using-- 
(-- 
StreamReader-- +
sr--, .
=--/ 0
new--1 4
StreamReader--5 A
(--A B
client--B H
.--H I
OpenRead--I Q
(--Q R
$str--R k
)--k l
)--l m
)--m n
{.. 
password22 $
=22% &
sr22' )
.22) *
ReadLine22* 2
(222 3
)223 4
;224 5
}33 
}44 
}55 
catch66 
(66 
IOException66 "
exceptIO66# +
)66+ ,
{77 
IO88 
.88 
Logger88 
.88 
Log88 !
(88! "
NLog88" &
.88& '
LogLevel88' /
.88/ 0
Warn880 4
,884 5
$str886 Q
,88Q R
exceptIO88S [
)88[ \
;88\ ]
}99 
}:: 
};; 	
else<< 
{== 	
password@@ 
=@@ 
null@@ 
;@@ 
}AA 	
ifBB 

(BB 
IOBB 
.BB  
STATIC_READONLY_TRUEBB #
)BB# $
{CC 	
tryDD 
{EE 
usingGG 
(GG 
SqlConnectionGG $

connectionGG% /
=GG0 1
newGG2 5
SqlConnectionGG6 C
(GGC D
$strGGD z
+GG{ |
$str	GG} Å
+
GGÇ É
$str
GGÑ ê
+
GGë í
password
GGì õ
)
GGõ ú
)
GGú ù
{HH 

connectionII 
.II 
OpenII #
(II# $
)II$ %
;II% &
usingJJ 
(JJ 

SqlCommandJJ %
commandJJ& -
=JJ. /
newJJ0 3

SqlCommandJJ4 >
(JJ> ?
$strJJ? Y
,JJY Z

connectionJJ[ e
)JJe f
)JJf g
{KK 
commandLL 
.LL  
ExecuteNonQueryLL  /
(LL/ 0
)LL0 1
;LL1 2
}MM 
}NN 
}OO 
catchPP 
(PP 
SqlExceptionPP 
	exceptSqlPP  )
)PP) *
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR 
(RR 
NLogRR "
.RR" #
LogLevelRR# +
.RR+ ,
WarnRR, 0
,RR0 1
$strRR2 R
,RRR S
	exceptSqlRRT ]
)RR] ^
;RR^ _
}SS 
}TT 	
}UU 
privateYY 
voidYY 
GoodG2B1YY 
(YY 
)YY 
{ZZ 
string[[ 
password[[ 
;[[ 
if\\ 

(\\ 
IO\\ 
.\\ !
STATIC_READONLY_FALSE\\ $
)\\$ %
{]] 	
password`` 
=`` 
null`` 
;`` 
}aa 	
elsebb 
{cc 	
passwordff 
=ff 
$strff &
;ff& '
}gg 	
ifhh 

(hh 
IOhh 
.hh  
STATIC_READONLY_TRUEhh #
)hh# $
{ii 	
tryjj 
{kk 
usingmm 
(mm 
SqlConnectionmm $

connectionmm% /
=mm0 1
newmm2 5
SqlConnectionmm6 C
(mmC D
$strmmD z
+mm{ |
$str	mm} Å
+
mmÇ É
$str
mmÑ ê
+
mmë í
password
mmì õ
)
mmõ ú
)
mmú ù
{nn 

connectionoo 
.oo 
Openoo #
(oo# $
)oo$ %
;oo% &
usingpp 
(pp 

SqlCommandpp %
commandpp& -
=pp. /
newpp0 3

SqlCommandpp4 >
(pp> ?
$strpp? Y
,ppY Z

connectionpp[ e
)ppe f
)ppf g
{qq 
commandrr 
.rr  
ExecuteNonQueryrr  /
(rr/ 0
)rr0 1
;rr1 2
}ss 
}tt 
}uu 
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv  )
)vv) *
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
	exceptSqlxxT ]
)xx] ^
;xx^ _
}yy 
}zz 	
}{{ 
private~~ 
void~~ 
GoodG2B2~~ 
(~~ 
)~~ 
{ 
string
ÄÄ 
password
ÄÄ 
;
ÄÄ 
if
ÅÅ 

(
ÅÅ 
IO
ÅÅ 
.
ÅÅ "
STATIC_READONLY_TRUE
ÅÅ #
)
ÅÅ# $
{
ÇÇ 	
password
ÖÖ 
=
ÖÖ 
$str
ÖÖ &
;
ÖÖ& '
}
ÜÜ 	
else
áá 
{
àà 	
password
ãã 
=
ãã 
null
ãã 
;
ãã 
}
åå 	
if
çç 

(
çç 
IO
çç 
.
çç "
STATIC_READONLY_TRUE
çç #
)
çç# $
{
éé 	
try
èè 
{
êê 
using
íí 
(
íí 
SqlConnection
íí $

connection
íí% /
=
íí0 1
new
íí2 5
SqlConnection
íí6 C
(
ííC D
$str
ííD z
+
íí{ |
$stríí} Å
+ííÇ É
$strííÑ ê
+ííë í
passwordííì õ
)ííõ ú
)ííú ù
{
ìì 

connection
îî 
.
îî 
Open
îî #
(
îî# $
)
îî$ %
;
îî% &
using
ïï 
(
ïï 

SqlCommand
ïï %
command
ïï& -
=
ïï. /
new
ïï0 3

SqlCommand
ïï4 >
(
ïï> ?
$str
ïï? Y
,
ïïY Z

connection
ïï[ e
)
ïïe f
)
ïïf g
{
ññ 
command
óó 
.
óó  
ExecuteNonQuery
óó  /
(
óó/ 0
)
óó0 1
;
óó1 2
}
òò 
}
ôô 
}
öö 
catch
õõ 
(
õõ 
SqlException
õõ 
	exceptSql
õõ  )
)
õõ) *
{
úú 
IO
ùù 
.
ùù 
Logger
ùù 
.
ùù 
Log
ùù 
(
ùù 
NLog
ùù "
.
ùù" #
LogLevel
ùù# +
.
ùù+ ,
Warn
ùù, 0
,
ùù0 1
$str
ùù2 R
,
ùùR S
	exceptSql
ùùT ]
)
ùù] ^
;
ùù^ _
}
ûû 
}
üü 	
}
†† 
private
££ 
void
££ 
GoodB2G1
££ 
(
££ 
)
££ 
{
§§ 
string
•• 
password
•• 
;
•• 
if
¶¶ 

(
¶¶ 
IO
¶¶ 
.
¶¶ "
STATIC_READONLY_TRUE
¶¶ #
)
¶¶# $
{
ßß 	
password
®® 
=
®® 
$str
®® 
;
®® 
{
™™ 
try
´´ 
{
¨¨ 
using
≠≠ 
(
≠≠ 
	WebClient
≠≠ $
client
≠≠% +
=
≠≠, -
new
≠≠. 1
	WebClient
≠≠2 ;
(
≠≠; <
)
≠≠< =
)
≠≠= >
{
ÆÆ 
using
ØØ 
(
ØØ 
StreamReader
ØØ +
sr
ØØ, .
=
ØØ/ 0
new
ØØ1 4
StreamReader
ØØ5 A
(
ØØA B
client
ØØB H
.
ØØH I
OpenRead
ØØI Q
(
ØØQ R
$str
ØØR k
)
ØØk l
)
ØØl m
)
ØØm n
{
∞∞ 
password
¥¥ $
=
¥¥% &
sr
¥¥' )
.
¥¥) *
ReadLine
¥¥* 2
(
¥¥2 3
)
¥¥3 4
;
¥¥4 5
}
µµ 
}
∂∂ 
}
∑∑ 
catch
∏∏ 
(
∏∏ 
IOException
∏∏ "
exceptIO
∏∏# +
)
∏∏+ ,
{
ππ 
IO
∫∫ 
.
∫∫ 
Logger
∫∫ 
.
∫∫ 
Log
∫∫ !
(
∫∫! "
NLog
∫∫" &
.
∫∫& '
LogLevel
∫∫' /
.
∫∫/ 0
Warn
∫∫0 4
,
∫∫4 5
$str
∫∫6 Q
,
∫∫Q R
exceptIO
∫∫S [
)
∫∫[ \
;
∫∫\ ]
}
ªª 
}
ºº 
}
ΩΩ 	
else
ææ 
{
øø 	
password
¬¬ 
=
¬¬ 
null
¬¬ 
;
¬¬ 
}
√√ 	
if
ƒƒ 

(
ƒƒ 
IO
ƒƒ 
.
ƒƒ #
STATIC_READONLY_FALSE
ƒƒ $
)
ƒƒ$ %
{
≈≈ 	
IO
«« 
.
«« 
	WriteLine
«« 
(
«« 
$str
«« /
)
««/ 0
;
««0 1
}
»» 	
else
…… 
{
   	
if
ÀÀ 
(
ÀÀ 
password
ÀÀ 
!=
ÀÀ 
null
ÀÀ  
)
ÀÀ  !
{
ÃÃ 
{
ŒŒ 
using
œœ 
(
œœ &
AesCryptoServiceProvider
œœ 3
aesAlg
œœ4 :
=
œœ; <
new
œœ= @&
AesCryptoServiceProvider
œœA Y
(
œœY Z
)
œœZ [
)
œœ[ \
{
–– 
aesAlg
—— 
.
—— 
Padding
—— &
=
——' (
PaddingMode
——) 4
.
——4 5
None
——5 9
;
——9 :
aesAlg
““ 
.
““ 
Key
““ "
=
““# $
Encoding
““% -
.
““- .
UTF8
““. 2
.
““2 3
GetBytes
““3 ;
(
““; <
$str
““< N
)
““N O
;
““O P
ICryptoTransform
‘‘ (
	decryptor
‘‘) 2
=
‘‘3 4
aesAlg
‘‘5 ;
.
‘‘; <
CreateDecryptor
‘‘< K
(
‘‘K L
aesAlg
‘‘L R
.
‘‘R S
Key
‘‘S V
,
‘‘V W
aesAlg
‘‘X ^
.
‘‘^ _
IV
‘‘_ a
)
‘‘a b
;
‘‘b c
using
÷÷ 
(
÷÷ 
MemoryStream
÷÷ +
	msDecrypt
÷÷, 5
=
÷÷6 7
new
÷÷8 ;
MemoryStream
÷÷< H
(
÷÷H I
Encoding
÷÷I Q
.
÷÷Q R
UTF8
÷÷R V
.
÷÷V W
GetBytes
÷÷W _
(
÷÷_ `
password
÷÷` h
)
÷÷h i
)
÷÷i j
)
÷÷j k
{
◊◊ 
using
ÿÿ !
(
ÿÿ" #
CryptoStream
ÿÿ# /
	csDecrypt
ÿÿ0 9
=
ÿÿ: ;
new
ÿÿ< ?
CryptoStream
ÿÿ@ L
(
ÿÿL M
	msDecrypt
ÿÿM V
,
ÿÿV W
	decryptor
ÿÿX a
,
ÿÿa b
CryptoStreamMode
ÿÿc s
.
ÿÿs t
Read
ÿÿt x
)
ÿÿx y
)
ÿÿy z
{
ŸŸ 
using
⁄⁄  %
(
⁄⁄& '
StreamReader
⁄⁄' 3
	srDecrypt
⁄⁄4 =
=
⁄⁄> ?
new
⁄⁄@ C
StreamReader
⁄⁄D P
(
⁄⁄P Q
	csDecrypt
⁄⁄Q Z
)
⁄⁄Z [
)
⁄⁄[ \
{
€€  !
password
ﬁﬁ$ ,
=
ﬁﬁ- .
	srDecrypt
ﬁﬁ/ 8
.
ﬁﬁ8 9
	ReadToEnd
ﬁﬁ9 B
(
ﬁﬁB C
)
ﬁﬁC D
;
ﬁﬁD E
}
ﬂﬂ  !
}
‡‡ 
}
·· 
}
‚‚ 
}
„„ 
try
‰‰ 
{
ÂÂ 
using
ÁÁ 
(
ÁÁ 
SqlConnection
ÁÁ (

connection
ÁÁ) 3
=
ÁÁ4 5
new
ÁÁ6 9
SqlConnection
ÁÁ: G
(
ÁÁG H
$str
ÁÁH ~
+ÁÁ Ä
$strÁÁÅ Ö
+ÁÁÜ á
$strÁÁà î
+ÁÁï ñ
passwordÁÁó ü
)ÁÁü †
)ÁÁ† °
{
ËË 

connection
ÈÈ "
.
ÈÈ" #
Open
ÈÈ# '
(
ÈÈ' (
)
ÈÈ( )
;
ÈÈ) *
using
ÍÍ 
(
ÍÍ 

SqlCommand
ÍÍ )
command
ÍÍ* 1
=
ÍÍ2 3
new
ÍÍ4 7

SqlCommand
ÍÍ8 B
(
ÍÍB C
$str
ÍÍC ]
,
ÍÍ] ^

connection
ÍÍ_ i
)
ÍÍi j
)
ÍÍj k
{
ÎÎ 
command
ÏÏ #
.
ÏÏ# $
ExecuteNonQuery
ÏÏ$ 3
(
ÏÏ3 4
)
ÏÏ4 5
;
ÏÏ5 6
}
ÌÌ 
}
ÓÓ 
}
ÔÔ 
catch
 
(
 
SqlException
 #
	exceptSql
$ -
)
- .
{
ÒÒ 
IO
ÚÚ 
.
ÚÚ 
Logger
ÚÚ 
.
ÚÚ 
Log
ÚÚ !
(
ÚÚ! "
NLog
ÚÚ" &
.
ÚÚ& '
LogLevel
ÚÚ' /
.
ÚÚ/ 0
Warn
ÚÚ0 4
,
ÚÚ4 5
$str
ÚÚ6 V
,
ÚÚV W
	exceptSql
ÚÚX a
)
ÚÚa b
;
ÚÚb c
}
ÛÛ 
}
ÙÙ 
}
ıı 	
}
ˆˆ 
private
˘˘ 
void
˘˘ 
GoodB2G2
˘˘ 
(
˘˘ 
)
˘˘ 
{
˙˙ 
string
˚˚ 
password
˚˚ 
;
˚˚ 
if
¸¸ 

(
¸¸ 
IO
¸¸ 
.
¸¸ "
STATIC_READONLY_TRUE
¸¸ #
)
¸¸# $
{
˝˝ 	
password
˛˛ 
=
˛˛ 
$str
˛˛ 
;
˛˛ 
{
ÄÄ 
try
ÅÅ 
{
ÇÇ 
using
ÉÉ 
(
ÉÉ 
	WebClient
ÉÉ $
client
ÉÉ% +
=
ÉÉ, -
new
ÉÉ. 1
	WebClient
ÉÉ2 ;
(
ÉÉ; <
)
ÉÉ< =
)
ÉÉ= >
{
ÑÑ 
using
ÖÖ 
(
ÖÖ 
StreamReader
ÖÖ +
sr
ÖÖ, .
=
ÖÖ/ 0
new
ÖÖ1 4
StreamReader
ÖÖ5 A
(
ÖÖA B
client
ÖÖB H
.
ÖÖH I
OpenRead
ÖÖI Q
(
ÖÖQ R
$str
ÖÖR k
)
ÖÖk l
)
ÖÖl m
)
ÖÖm n
{
ÜÜ 
password
ää $
=
ää% &
sr
ää' )
.
ää) *
ReadLine
ää* 2
(
ää2 3
)
ää3 4
;
ää4 5
}
ãã 
}
åå 
}
çç 
catch
éé 
(
éé 
IOException
éé "
exceptIO
éé# +
)
éé+ ,
{
èè 
IO
êê 
.
êê 
Logger
êê 
.
êê 
Log
êê !
(
êê! "
NLog
êê" &
.
êê& '
LogLevel
êê' /
.
êê/ 0
Warn
êê0 4
,
êê4 5
$str
êê6 Q
,
êêQ R
exceptIO
êêS [
)
êê[ \
;
êê\ ]
}
ëë 
}
íí 
}
ìì 	
else
îî 
{
ïï 	
password
òò 
=
òò 
null
òò 
;
òò 
}
ôô 	
if
öö 

(
öö 
IO
öö 
.
öö "
STATIC_READONLY_TRUE
öö #
)
öö# $
{
õõ 	
if
úú 
(
úú 
password
úú 
!=
úú 
null
úú  
)
úú  !
{
ùù 
{
üü 
using
†† 
(
†† &
AesCryptoServiceProvider
†† 3
aesAlg
††4 :
=
††; <
new
††= @&
AesCryptoServiceProvider
††A Y
(
††Y Z
)
††Z [
)
††[ \
{
°° 
aesAlg
¢¢ 
.
¢¢ 
Padding
¢¢ &
=
¢¢' (
PaddingMode
¢¢) 4
.
¢¢4 5
None
¢¢5 9
;
¢¢9 :
aesAlg
££ 
.
££ 
Key
££ "
=
££# $
Encoding
££% -
.
££- .
UTF8
££. 2
.
££2 3
GetBytes
££3 ;
(
££; <
$str
££< N
)
££N O
;
££O P
ICryptoTransform
•• (
	decryptor
••) 2
=
••3 4
aesAlg
••5 ;
.
••; <
CreateDecryptor
••< K
(
••K L
aesAlg
••L R
.
••R S
Key
••S V
,
••V W
aesAlg
••X ^
.
••^ _
IV
••_ a
)
••a b
;
••b c
using
ßß 
(
ßß 
MemoryStream
ßß +
	msDecrypt
ßß, 5
=
ßß6 7
new
ßß8 ;
MemoryStream
ßß< H
(
ßßH I
Encoding
ßßI Q
.
ßßQ R
UTF8
ßßR V
.
ßßV W
GetBytes
ßßW _
(
ßß_ `
password
ßß` h
)
ßßh i
)
ßßi j
)
ßßj k
{
®® 
using
©© !
(
©©" #
CryptoStream
©©# /
	csDecrypt
©©0 9
=
©©: ;
new
©©< ?
CryptoStream
©©@ L
(
©©L M
	msDecrypt
©©M V
,
©©V W
	decryptor
©©X a
,
©©a b
CryptoStreamMode
©©c s
.
©©s t
Read
©©t x
)
©©x y
)
©©y z
{
™™ 
using
´´  %
(
´´& '
StreamReader
´´' 3
	srDecrypt
´´4 =
=
´´> ?
new
´´@ C
StreamReader
´´D P
(
´´P Q
	csDecrypt
´´Q Z
)
´´Z [
)
´´[ \
{
¨¨  !
password
ØØ$ ,
=
ØØ- .
	srDecrypt
ØØ/ 8
.
ØØ8 9
	ReadToEnd
ØØ9 B
(
ØØB C
)
ØØC D
;
ØØD E
}
∞∞  !
}
±± 
}
≤≤ 
}
≥≥ 
}
¥¥ 
try
µµ 
{
∂∂ 
using
∏∏ 
(
∏∏ 
SqlConnection
∏∏ (

connection
∏∏) 3
=
∏∏4 5
new
∏∏6 9
SqlConnection
∏∏: G
(
∏∏G H
$str
∏∏H ~
+∏∏ Ä
$str∏∏Å Ö
+∏∏Ü á
$str∏∏à î
+∏∏ï ñ
password∏∏ó ü
)∏∏ü †
)∏∏† °
{
ππ 

connection
∫∫ "
.
∫∫" #
Open
∫∫# '
(
∫∫' (
)
∫∫( )
;
∫∫) *
using
ªª 
(
ªª 

SqlCommand
ªª )
command
ªª* 1
=
ªª2 3
new
ªª4 7

SqlCommand
ªª8 B
(
ªªB C
$str
ªªC ]
,
ªª] ^

connection
ªª_ i
)
ªªi j
)
ªªj k
{
ºº 
command
ΩΩ #
.
ΩΩ# $
ExecuteNonQuery
ΩΩ$ 3
(
ΩΩ3 4
)
ΩΩ4 5
;
ΩΩ5 6
}
ææ 
}
øø 
}
¿¿ 
catch
¡¡ 
(
¡¡ 
SqlException
¡¡ #
	exceptSql
¡¡$ -
)
¡¡- .
{
¬¬ 
IO
√√ 
.
√√ 
Logger
√√ 
.
√√ 
Log
√√ !
(
√√! "
NLog
√√" &
.
√√& '
LogLevel
√√' /
.
√√/ 0
Warn
√√0 4
,
√√4 5
$str
√√6 V
,
√√V W
	exceptSql
√√X a
)
√√a b
;
√√b c
}
ƒƒ 
}
≈≈ 
}
∆∆ 	
}
«« 
public
…… 

override
…… 
void
…… 
Good
…… 
(
…… 
)
…… 
{
   
GoodG2B1
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
GoodG2B2
ÃÃ 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ 
GoodB2G1
ÕÕ 
(
ÕÕ 
)
ÕÕ 
;
ÕÕ 
GoodB2G2
ŒŒ 
(
ŒŒ 
)
ŒŒ 
;
ŒŒ 
}
œœ 
}—— 
}““ ƒõ
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_10.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class J
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_10 D
:E F
AbstractTestCaseG W
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
password## 
;## 
if$$ 

($$ 
IO$$ 
.$$ 

staticTrue$$ 
)$$ 
{%% 	
password&& 
=&& 
$str&& 
;&& 
{(( 
try)) 
{** 
using++ 
(++ 
	WebClient++ $
client++% +
=++, -
new++. 1
	WebClient++2 ;
(++; <
)++< =
)++= >
{,, 
using-- 
(-- 
StreamReader-- +
sr--, .
=--/ 0
new--1 4
StreamReader--5 A
(--A B
client--B H
.--H I
OpenRead--I Q
(--Q R
$str--R k
)--k l
)--l m
)--m n
{.. 
password22 $
=22% &
sr22' )
.22) *
ReadLine22* 2
(222 3
)223 4
;224 5
}33 
}44 
}55 
catch66 
(66 
IOException66 "
exceptIO66# +
)66+ ,
{77 
IO88 
.88 
Logger88 
.88 
Log88 !
(88! "
NLog88" &
.88& '
LogLevel88' /
.88/ 0
Warn880 4
,884 5
$str886 Q
,88Q R
exceptIO88S [
)88[ \
;88\ ]
}99 
}:: 
};; 	
else<< 
{== 	
password@@ 
=@@ 
null@@ 
;@@ 
}AA 	
ifBB 

(BB 
IOBB 
.BB 

staticTrueBB 
)BB 
{CC 	
tryDD 
{EE 
usingGG 
(GG 
SqlConnectionGG $

connectionGG% /
=GG0 1
newGG2 5
SqlConnectionGG6 C
(GGC D
$strGGD z
+GG{ |
$str	GG} Å
+
GGÇ É
$str
GGÑ ê
+
GGë í
password
GGì õ
)
GGõ ú
)
GGú ù
{HH 

connectionII 
.II 
OpenII #
(II# $
)II$ %
;II% &
usingJJ 
(JJ 

SqlCommandJJ %
commandJJ& -
=JJ. /
newJJ0 3

SqlCommandJJ4 >
(JJ> ?
$strJJ? Y
,JJY Z

connectionJJ[ e
)JJe f
)JJf g
{KK 
commandLL 
.LL  
ExecuteNonQueryLL  /
(LL/ 0
)LL0 1
;LL1 2
}MM 
}NN 
}OO 
catchPP 
(PP 
SqlExceptionPP 
	exceptSqlPP  )
)PP) *
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR 
(RR 
NLogRR "
.RR" #
LogLevelRR# +
.RR+ ,
WarnRR, 0
,RR0 1
$strRR2 R
,RRR S
	exceptSqlRRT ]
)RR] ^
;RR^ _
}SS 
}TT 	
}UU 
privateYY 
voidYY 
GoodG2B1YY 
(YY 
)YY 
{ZZ 
string[[ 
password[[ 
;[[ 
if\\ 

(\\ 
IO\\ 
.\\ 
staticFalse\\ 
)\\ 
{]] 	
password`` 
=`` 
null`` 
;`` 
}aa 	
elsebb 
{cc 	
passwordff 
=ff 
$strff &
;ff& '
}gg 	
ifhh 

(hh 
IOhh 
.hh 

staticTruehh 
)hh 
{ii 	
tryjj 
{kk 
usingmm 
(mm 
SqlConnectionmm $

connectionmm% /
=mm0 1
newmm2 5
SqlConnectionmm6 C
(mmC D
$strmmD z
+mm{ |
$str	mm} Å
+
mmÇ É
$str
mmÑ ê
+
mmë í
password
mmì õ
)
mmõ ú
)
mmú ù
{nn 

connectionoo 
.oo 
Openoo #
(oo# $
)oo$ %
;oo% &
usingpp 
(pp 

SqlCommandpp %
commandpp& -
=pp. /
newpp0 3

SqlCommandpp4 >
(pp> ?
$strpp? Y
,ppY Z

connectionpp[ e
)ppe f
)ppf g
{qq 
commandrr 
.rr  
ExecuteNonQueryrr  /
(rr/ 0
)rr0 1
;rr1 2
}ss 
}tt 
}uu 
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv  )
)vv) *
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
	exceptSqlxxT ]
)xx] ^
;xx^ _
}yy 
}zz 	
}{{ 
private~~ 
void~~ 
GoodG2B2~~ 
(~~ 
)~~ 
{ 
string
ÄÄ 
password
ÄÄ 
;
ÄÄ 
if
ÅÅ 

(
ÅÅ 
IO
ÅÅ 
.
ÅÅ 

staticTrue
ÅÅ 
)
ÅÅ 
{
ÇÇ 	
password
ÖÖ 
=
ÖÖ 
$str
ÖÖ &
;
ÖÖ& '
}
ÜÜ 	
else
áá 
{
àà 	
password
ãã 
=
ãã 
null
ãã 
;
ãã 
}
åå 	
if
çç 

(
çç 
IO
çç 
.
çç 

staticTrue
çç 
)
çç 
{
éé 	
try
èè 
{
êê 
using
íí 
(
íí 
SqlConnection
íí $

connection
íí% /
=
íí0 1
new
íí2 5
SqlConnection
íí6 C
(
ííC D
$str
ííD z
+
íí{ |
$stríí} Å
+ííÇ É
$strííÑ ê
+ííë í
passwordííì õ
)ííõ ú
)ííú ù
{
ìì 

connection
îî 
.
îî 
Open
îî #
(
îî# $
)
îî$ %
;
îî% &
using
ïï 
(
ïï 

SqlCommand
ïï %
command
ïï& -
=
ïï. /
new
ïï0 3

SqlCommand
ïï4 >
(
ïï> ?
$str
ïï? Y
,
ïïY Z

connection
ïï[ e
)
ïïe f
)
ïïf g
{
ññ 
command
óó 
.
óó  
ExecuteNonQuery
óó  /
(
óó/ 0
)
óó0 1
;
óó1 2
}
òò 
}
ôô 
}
öö 
catch
õõ 
(
õõ 
SqlException
õõ 
	exceptSql
õõ  )
)
õõ) *
{
úú 
IO
ùù 
.
ùù 
Logger
ùù 
.
ùù 
Log
ùù 
(
ùù 
NLog
ùù "
.
ùù" #
LogLevel
ùù# +
.
ùù+ ,
Warn
ùù, 0
,
ùù0 1
$str
ùù2 R
,
ùùR S
	exceptSql
ùùT ]
)
ùù] ^
;
ùù^ _
}
ûû 
}
üü 	
}
†† 
private
££ 
void
££ 
GoodB2G1
££ 
(
££ 
)
££ 
{
§§ 
string
•• 
password
•• 
;
•• 
if
¶¶ 

(
¶¶ 
IO
¶¶ 
.
¶¶ 

staticTrue
¶¶ 
)
¶¶ 
{
ßß 	
password
®® 
=
®® 
$str
®® 
;
®® 
{
™™ 
try
´´ 
{
¨¨ 
using
≠≠ 
(
≠≠ 
	WebClient
≠≠ $
client
≠≠% +
=
≠≠, -
new
≠≠. 1
	WebClient
≠≠2 ;
(
≠≠; <
)
≠≠< =
)
≠≠= >
{
ÆÆ 
using
ØØ 
(
ØØ 
StreamReader
ØØ +
sr
ØØ, .
=
ØØ/ 0
new
ØØ1 4
StreamReader
ØØ5 A
(
ØØA B
client
ØØB H
.
ØØH I
OpenRead
ØØI Q
(
ØØQ R
$str
ØØR k
)
ØØk l
)
ØØl m
)
ØØm n
{
∞∞ 
password
¥¥ $
=
¥¥% &
sr
¥¥' )
.
¥¥) *
ReadLine
¥¥* 2
(
¥¥2 3
)
¥¥3 4
;
¥¥4 5
}
µµ 
}
∂∂ 
}
∑∑ 
catch
∏∏ 
(
∏∏ 
IOException
∏∏ "
exceptIO
∏∏# +
)
∏∏+ ,
{
ππ 
IO
∫∫ 
.
∫∫ 
Logger
∫∫ 
.
∫∫ 
Log
∫∫ !
(
∫∫! "
NLog
∫∫" &
.
∫∫& '
LogLevel
∫∫' /
.
∫∫/ 0
Warn
∫∫0 4
,
∫∫4 5
$str
∫∫6 Q
,
∫∫Q R
exceptIO
∫∫S [
)
∫∫[ \
;
∫∫\ ]
}
ªª 
}
ºº 
}
ΩΩ 	
else
ææ 
{
øø 	
password
¬¬ 
=
¬¬ 
null
¬¬ 
;
¬¬ 
}
√√ 	
if
ƒƒ 

(
ƒƒ 
IO
ƒƒ 
.
ƒƒ 
staticFalse
ƒƒ 
)
ƒƒ 
{
≈≈ 	
IO
«« 
.
«« 
	WriteLine
«« 
(
«« 
$str
«« /
)
««/ 0
;
««0 1
}
»» 	
else
…… 
{
   	
if
ÀÀ 
(
ÀÀ 
password
ÀÀ 
!=
ÀÀ 
null
ÀÀ  
)
ÀÀ  !
{
ÃÃ 
{
ŒŒ 
using
œœ 
(
œœ &
AesCryptoServiceProvider
œœ 3
aesAlg
œœ4 :
=
œœ; <
new
œœ= @&
AesCryptoServiceProvider
œœA Y
(
œœY Z
)
œœZ [
)
œœ[ \
{
–– 
aesAlg
—— 
.
—— 
Padding
—— &
=
——' (
PaddingMode
——) 4
.
——4 5
None
——5 9
;
——9 :
aesAlg
““ 
.
““ 
Key
““ "
=
““# $
Encoding
““% -
.
““- .
UTF8
““. 2
.
““2 3
GetBytes
““3 ;
(
““; <
$str
““< N
)
““N O
;
““O P
ICryptoTransform
‘‘ (
	decryptor
‘‘) 2
=
‘‘3 4
aesAlg
‘‘5 ;
.
‘‘; <
CreateDecryptor
‘‘< K
(
‘‘K L
aesAlg
‘‘L R
.
‘‘R S
Key
‘‘S V
,
‘‘V W
aesAlg
‘‘X ^
.
‘‘^ _
IV
‘‘_ a
)
‘‘a b
;
‘‘b c
using
÷÷ 
(
÷÷ 
MemoryStream
÷÷ +
	msDecrypt
÷÷, 5
=
÷÷6 7
new
÷÷8 ;
MemoryStream
÷÷< H
(
÷÷H I
Encoding
÷÷I Q
.
÷÷Q R
UTF8
÷÷R V
.
÷÷V W
GetBytes
÷÷W _
(
÷÷_ `
password
÷÷` h
)
÷÷h i
)
÷÷i j
)
÷÷j k
{
◊◊ 
using
ÿÿ !
(
ÿÿ" #
CryptoStream
ÿÿ# /
	csDecrypt
ÿÿ0 9
=
ÿÿ: ;
new
ÿÿ< ?
CryptoStream
ÿÿ@ L
(
ÿÿL M
	msDecrypt
ÿÿM V
,
ÿÿV W
	decryptor
ÿÿX a
,
ÿÿa b
CryptoStreamMode
ÿÿc s
.
ÿÿs t
Read
ÿÿt x
)
ÿÿx y
)
ÿÿy z
{
ŸŸ 
using
⁄⁄  %
(
⁄⁄& '
StreamReader
⁄⁄' 3
	srDecrypt
⁄⁄4 =
=
⁄⁄> ?
new
⁄⁄@ C
StreamReader
⁄⁄D P
(
⁄⁄P Q
	csDecrypt
⁄⁄Q Z
)
⁄⁄Z [
)
⁄⁄[ \
{
€€  !
password
ﬁﬁ$ ,
=
ﬁﬁ- .
	srDecrypt
ﬁﬁ/ 8
.
ﬁﬁ8 9
	ReadToEnd
ﬁﬁ9 B
(
ﬁﬁB C
)
ﬁﬁC D
;
ﬁﬁD E
}
ﬂﬂ  !
}
‡‡ 
}
·· 
}
‚‚ 
}
„„ 
try
‰‰ 
{
ÂÂ 
using
ÁÁ 
(
ÁÁ 
SqlConnection
ÁÁ (

connection
ÁÁ) 3
=
ÁÁ4 5
new
ÁÁ6 9
SqlConnection
ÁÁ: G
(
ÁÁG H
$str
ÁÁH ~
+ÁÁ Ä
$strÁÁÅ Ö
+ÁÁÜ á
$strÁÁà î
+ÁÁï ñ
passwordÁÁó ü
)ÁÁü †
)ÁÁ† °
{
ËË 

connection
ÈÈ "
.
ÈÈ" #
Open
ÈÈ# '
(
ÈÈ' (
)
ÈÈ( )
;
ÈÈ) *
using
ÍÍ 
(
ÍÍ 

SqlCommand
ÍÍ )
command
ÍÍ* 1
=
ÍÍ2 3
new
ÍÍ4 7

SqlCommand
ÍÍ8 B
(
ÍÍB C
$str
ÍÍC ]
,
ÍÍ] ^

connection
ÍÍ_ i
)
ÍÍi j
)
ÍÍj k
{
ÎÎ 
command
ÏÏ #
.
ÏÏ# $
ExecuteNonQuery
ÏÏ$ 3
(
ÏÏ3 4
)
ÏÏ4 5
;
ÏÏ5 6
}
ÌÌ 
}
ÓÓ 
}
ÔÔ 
catch
 
(
 
SqlException
 #
	exceptSql
$ -
)
- .
{
ÒÒ 
IO
ÚÚ 
.
ÚÚ 
Logger
ÚÚ 
.
ÚÚ 
Log
ÚÚ !
(
ÚÚ! "
NLog
ÚÚ" &
.
ÚÚ& '
LogLevel
ÚÚ' /
.
ÚÚ/ 0
Warn
ÚÚ0 4
,
ÚÚ4 5
$str
ÚÚ6 V
,
ÚÚV W
	exceptSql
ÚÚX a
)
ÚÚa b
;
ÚÚb c
}
ÛÛ 
}
ÙÙ 
}
ıı 	
}
ˆˆ 
private
˘˘ 
void
˘˘ 
GoodB2G2
˘˘ 
(
˘˘ 
)
˘˘ 
{
˙˙ 
string
˚˚ 
password
˚˚ 
;
˚˚ 
if
¸¸ 

(
¸¸ 
IO
¸¸ 
.
¸¸ 

staticTrue
¸¸ 
)
¸¸ 
{
˝˝ 	
password
˛˛ 
=
˛˛ 
$str
˛˛ 
;
˛˛ 
{
ÄÄ 
try
ÅÅ 
{
ÇÇ 
using
ÉÉ 
(
ÉÉ 
	WebClient
ÉÉ $
client
ÉÉ% +
=
ÉÉ, -
new
ÉÉ. 1
	WebClient
ÉÉ2 ;
(
ÉÉ; <
)
ÉÉ< =
)
ÉÉ= >
{
ÑÑ 
using
ÖÖ 
(
ÖÖ 
StreamReader
ÖÖ +
sr
ÖÖ, .
=
ÖÖ/ 0
new
ÖÖ1 4
StreamReader
ÖÖ5 A
(
ÖÖA B
client
ÖÖB H
.
ÖÖH I
OpenRead
ÖÖI Q
(
ÖÖQ R
$str
ÖÖR k
)
ÖÖk l
)
ÖÖl m
)
ÖÖm n
{
ÜÜ 
password
ää $
=
ää% &
sr
ää' )
.
ää) *
ReadLine
ää* 2
(
ää2 3
)
ää3 4
;
ää4 5
}
ãã 
}
åå 
}
çç 
catch
éé 
(
éé 
IOException
éé "
exceptIO
éé# +
)
éé+ ,
{
èè 
IO
êê 
.
êê 
Logger
êê 
.
êê 
Log
êê !
(
êê! "
NLog
êê" &
.
êê& '
LogLevel
êê' /
.
êê/ 0
Warn
êê0 4
,
êê4 5
$str
êê6 Q
,
êêQ R
exceptIO
êêS [
)
êê[ \
;
êê\ ]
}
ëë 
}
íí 
}
ìì 	
else
îî 
{
ïï 	
password
òò 
=
òò 
null
òò 
;
òò 
}
ôô 	
if
öö 

(
öö 
IO
öö 
.
öö 

staticTrue
öö 
)
öö 
{
õõ 	
if
úú 
(
úú 
password
úú 
!=
úú 
null
úú  
)
úú  !
{
ùù 
{
üü 
using
†† 
(
†† &
AesCryptoServiceProvider
†† 3
aesAlg
††4 :
=
††; <
new
††= @&
AesCryptoServiceProvider
††A Y
(
††Y Z
)
††Z [
)
††[ \
{
°° 
aesAlg
¢¢ 
.
¢¢ 
Padding
¢¢ &
=
¢¢' (
PaddingMode
¢¢) 4
.
¢¢4 5
None
¢¢5 9
;
¢¢9 :
aesAlg
££ 
.
££ 
Key
££ "
=
££# $
Encoding
££% -
.
££- .
UTF8
££. 2
.
££2 3
GetBytes
££3 ;
(
££; <
$str
££< N
)
££N O
;
££O P
ICryptoTransform
•• (
	decryptor
••) 2
=
••3 4
aesAlg
••5 ;
.
••; <
CreateDecryptor
••< K
(
••K L
aesAlg
••L R
.
••R S
Key
••S V
,
••V W
aesAlg
••X ^
.
••^ _
IV
••_ a
)
••a b
;
••b c
using
ßß 
(
ßß 
MemoryStream
ßß +
	msDecrypt
ßß, 5
=
ßß6 7
new
ßß8 ;
MemoryStream
ßß< H
(
ßßH I
Encoding
ßßI Q
.
ßßQ R
UTF8
ßßR V
.
ßßV W
GetBytes
ßßW _
(
ßß_ `
password
ßß` h
)
ßßh i
)
ßßi j
)
ßßj k
{
®® 
using
©© !
(
©©" #
CryptoStream
©©# /
	csDecrypt
©©0 9
=
©©: ;
new
©©< ?
CryptoStream
©©@ L
(
©©L M
	msDecrypt
©©M V
,
©©V W
	decryptor
©©X a
,
©©a b
CryptoStreamMode
©©c s
.
©©s t
Read
©©t x
)
©©x y
)
©©y z
{
™™ 
using
´´  %
(
´´& '
StreamReader
´´' 3
	srDecrypt
´´4 =
=
´´> ?
new
´´@ C
StreamReader
´´D P
(
´´P Q
	csDecrypt
´´Q Z
)
´´Z [
)
´´[ \
{
¨¨  !
password
ØØ$ ,
=
ØØ- .
	srDecrypt
ØØ/ 8
.
ØØ8 9
	ReadToEnd
ØØ9 B
(
ØØB C
)
ØØC D
;
ØØD E
}
∞∞  !
}
±± 
}
≤≤ 
}
≥≥ 
}
¥¥ 
try
µµ 
{
∂∂ 
using
∏∏ 
(
∏∏ 
SqlConnection
∏∏ (

connection
∏∏) 3
=
∏∏4 5
new
∏∏6 9
SqlConnection
∏∏: G
(
∏∏G H
$str
∏∏H ~
+∏∏ Ä
$str∏∏Å Ö
+∏∏Ü á
$str∏∏à î
+∏∏ï ñ
password∏∏ó ü
)∏∏ü †
)∏∏† °
{
ππ 

connection
∫∫ "
.
∫∫" #
Open
∫∫# '
(
∫∫' (
)
∫∫( )
;
∫∫) *
using
ªª 
(
ªª 

SqlCommand
ªª )
command
ªª* 1
=
ªª2 3
new
ªª4 7

SqlCommand
ªª8 B
(
ªªB C
$str
ªªC ]
,
ªª] ^

connection
ªª_ i
)
ªªi j
)
ªªj k
{
ºº 
command
ΩΩ #
.
ΩΩ# $
ExecuteNonQuery
ΩΩ$ 3
(
ΩΩ3 4
)
ΩΩ4 5
;
ΩΩ5 6
}
ææ 
}
øø 
}
¿¿ 
catch
¡¡ 
(
¡¡ 
SqlException
¡¡ #
	exceptSql
¡¡$ -
)
¡¡- .
{
¬¬ 
IO
√√ 
.
√√ 
Logger
√√ 
.
√√ 
Log
√√ !
(
√√! "
NLog
√√" &
.
√√& '
LogLevel
√√' /
.
√√/ 0
Warn
√√0 4
,
√√4 5
$str
√√6 V
,
√√V W
	exceptSql
√√X a
)
√√a b
;
√√b c
}
ƒƒ 
}
≈≈ 
}
∆∆ 	
}
«« 
public
…… 

override
…… 
void
…… 
Good
…… 
(
…… 
)
…… 
{
   
GoodG2B1
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
GoodG2B2
ÃÃ 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ 
GoodB2G1
ÕÕ 
(
ÕÕ 
)
ÕÕ 
;
ÕÕ 
GoodB2G2
ŒŒ 
(
ŒŒ 
)
ŒŒ 
;
ŒŒ 
}
œœ 
}—— 
}““ Œû
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_11.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class J
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_11 D
:E F
AbstractTestCaseG W
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
password## 
;## 
if$$ 

($$ 
IO$$ 
.$$ 
StaticReturnsTrue$$  
($$  !
)$$! "
)$$" #
{%% 	
password&& 
=&& 
$str&& 
;&& 
{(( 
try)) 
{** 
using++ 
(++ 
	WebClient++ $
client++% +
=++, -
new++. 1
	WebClient++2 ;
(++; <
)++< =
)++= >
{,, 
using-- 
(-- 
StreamReader-- +
sr--, .
=--/ 0
new--1 4
StreamReader--5 A
(--A B
client--B H
.--H I
OpenRead--I Q
(--Q R
$str--R k
)--k l
)--l m
)--m n
{.. 
password22 $
=22% &
sr22' )
.22) *
ReadLine22* 2
(222 3
)223 4
;224 5
}33 
}44 
}55 
catch66 
(66 
IOException66 "
exceptIO66# +
)66+ ,
{77 
IO88 
.88 
Logger88 
.88 
Log88 !
(88! "
NLog88" &
.88& '
LogLevel88' /
.88/ 0
Warn880 4
,884 5
$str886 Q
,88Q R
exceptIO88S [
)88[ \
;88\ ]
}99 
}:: 
};; 	
else<< 
{== 	
password@@ 
=@@ 
null@@ 
;@@ 
}AA 	
ifBB 

(BB
 
IOBB 
.BB 
StaticReturnsTrueBB 
(BB  
)BB  !
)BB! "
{CC 	
tryDD 
{EE 
usingGG 
(GG 
SqlConnectionGG $

connectionGG% /
=GG0 1
newGG2 5
SqlConnectionGG6 C
(GGC D
$strGGD z
+GG{ |
$str	GG} Å
+
GGÇ É
$str
GGÑ ê
+
GGë í
password
GGì õ
)
GGõ ú
)
GGú ù
{HH 

connectionII 
.II 
OpenII #
(II# $
)II$ %
;II% &
usingJJ 
(JJ 

SqlCommandJJ %
commandJJ& -
=JJ. /
newJJ0 3

SqlCommandJJ4 >
(JJ> ?
$strJJ? Y
,JJY Z

connectionJJ[ e
)JJe f
)JJf g
{KK 
commandLL 
.LL  
ExecuteNonQueryLL  /
(LL/ 0
)LL0 1
;LL1 2
}MM 
}NN 
}OO 
catchPP 
(PP 
SqlExceptionPP 
	exceptSqlPP  )
)PP) *
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR 
(RR 
NLogRR "
.RR" #
LogLevelRR# +
.RR+ ,
WarnRR, 0
,RR0 1
$strRR2 R
,RRR S
	exceptSqlRRT ]
)RR] ^
;RR^ _
}SS 
}TT 	
}UU 
privateYY 
voidYY 
GoodG2B1YY 
(YY 
)YY 
{ZZ 
string[[ 
password[[ 
;[[ 
if\\ 

(\\ 
IO\\ 
.\\ 
StaticReturnsFalse\\ !
(\\! "
)\\" #
)\\# $
{]] 	
password`` 
=`` 
null`` 
;`` 
}aa 	
elsebb 
{cc 	
passwordff 
=ff 
$strff &
;ff& '
}gg 	
ifhh 

(hh 
IOhh 
.hh 
StaticReturnsTruehh  
(hh  !
)hh! "
)hh" #
{ii 	
tryjj 
{kk 
usingmm 
(mm 
SqlConnectionmm $

connectionmm% /
=mm0 1
newmm2 5
SqlConnectionmm6 C
(mmC D
$strmmD z
+mm{ |
$str	mm} Å
+
mmÇ É
$str
mmÑ ê
+
mmë í
password
mmì õ
)
mmõ ú
)
mmú ù
{nn 

connectionoo 
.oo 
Openoo #
(oo# $
)oo$ %
;oo% &
usingpp 
(pp 

SqlCommandpp %
commandpp& -
=pp. /
newpp0 3

SqlCommandpp4 >
(pp> ?
$strpp? Y
,ppY Z

connectionpp[ e
)ppe f
)ppf g
{qq 
commandrr 
.rr  
ExecuteNonQueryrr  /
(rr/ 0
)rr0 1
;rr1 2
}ss 
}tt 
}uu 
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv  )
)vv) *
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
	exceptSqlxxT ]
)xx] ^
;xx^ _
}yy 
}zz 	
}{{ 
private~~ 
void~~ 
GoodG2B2~~ 
(~~ 
)~~ 
{ 
string
ÄÄ 
password
ÄÄ 
;
ÄÄ 
if
ÅÅ 

(
ÅÅ 
IO
ÅÅ 
.
ÅÅ 
StaticReturnsTrue
ÅÅ  
(
ÅÅ  !
)
ÅÅ! "
)
ÅÅ" #
{
ÇÇ 	
password
ÖÖ 
=
ÖÖ 
$str
ÖÖ &
;
ÖÖ& '
}
ÜÜ 	
else
áá 
{
àà 	
password
ãã 
=
ãã 
null
ãã 
;
ãã 
}
åå 	
if
çç 

(
çç 
IO
çç 
.
çç 
StaticReturnsTrue
çç  
(
çç  !
)
çç! "
)
çç" #
{
éé 	
try
èè 
{
êê 
using
íí 
(
íí 
SqlConnection
íí $

connection
íí% /
=
íí0 1
new
íí2 5
SqlConnection
íí6 C
(
ííC D
$str
ííD z
+
íí{ |
$stríí} Å
+ííÇ É
$strííÑ ê
+ííë í
passwordííì õ
)ííõ ú
)ííú ù
{
ìì 

connection
îî 
.
îî 
Open
îî #
(
îî# $
)
îî$ %
;
îî% &
using
ïï 
(
ïï 

SqlCommand
ïï %
command
ïï& -
=
ïï. /
new
ïï0 3

SqlCommand
ïï4 >
(
ïï> ?
$str
ïï? Y
,
ïïY Z

connection
ïï[ e
)
ïïe f
)
ïïf g
{
ññ 
command
óó 
.
óó  
ExecuteNonQuery
óó  /
(
óó/ 0
)
óó0 1
;
óó1 2
}
òò 
}
ôô 
}
öö 
catch
õõ 
(
õõ 
SqlException
õõ 
	exceptSql
õõ  )
)
õõ) *
{
úú 
IO
ùù 
.
ùù 
Logger
ùù 
.
ùù 
Log
ùù 
(
ùù 
NLog
ùù "
.
ùù" #
LogLevel
ùù# +
.
ùù+ ,
Warn
ùù, 0
,
ùù0 1
$str
ùù2 R
,
ùùR S
	exceptSql
ùùT ]
)
ùù] ^
;
ùù^ _
}
ûû 
}
üü 	
}
†† 
private
££ 
void
££ 
GoodB2G1
££ 
(
££ 
)
££ 
{
§§ 
string
•• 
password
•• 
;
•• 
if
¶¶ 

(
¶¶ 
IO
¶¶ 
.
¶¶ 
StaticReturnsTrue
¶¶  
(
¶¶  !
)
¶¶! "
)
¶¶" #
{
ßß 	
password
®® 
=
®® 
$str
®® 
;
®® 
{
™™ 
try
´´ 
{
¨¨ 
using
≠≠ 
(
≠≠ 
	WebClient
≠≠ $
client
≠≠% +
=
≠≠, -
new
≠≠. 1
	WebClient
≠≠2 ;
(
≠≠; <
)
≠≠< =
)
≠≠= >
{
ÆÆ 
using
ØØ 
(
ØØ 
StreamReader
ØØ +
sr
ØØ, .
=
ØØ/ 0
new
ØØ1 4
StreamReader
ØØ5 A
(
ØØA B
client
ØØB H
.
ØØH I
OpenRead
ØØI Q
(
ØØQ R
$str
ØØR k
)
ØØk l
)
ØØl m
)
ØØm n
{
∞∞ 
password
¥¥ $
=
¥¥% &
sr
¥¥' )
.
¥¥) *
ReadLine
¥¥* 2
(
¥¥2 3
)
¥¥3 4
;
¥¥4 5
}
µµ 
}
∂∂ 
}
∑∑ 
catch
∏∏ 
(
∏∏ 
IOException
∏∏ "
exceptIO
∏∏# +
)
∏∏+ ,
{
ππ 
IO
∫∫ 
.
∫∫ 
Logger
∫∫ 
.
∫∫ 
Log
∫∫ !
(
∫∫! "
NLog
∫∫" &
.
∫∫& '
LogLevel
∫∫' /
.
∫∫/ 0
Warn
∫∫0 4
,
∫∫4 5
$str
∫∫6 Q
,
∫∫Q R
exceptIO
∫∫S [
)
∫∫[ \
;
∫∫\ ]
}
ªª 
}
ºº 
}
ΩΩ 	
else
ææ 
{
øø 	
password
¬¬ 
=
¬¬ 
null
¬¬ 
;
¬¬ 
}
√√ 	
if
ƒƒ 

(
ƒƒ 
IO
ƒƒ 
.
ƒƒ  
StaticReturnsFalse
ƒƒ !
(
ƒƒ! "
)
ƒƒ" #
)
ƒƒ# $
{
≈≈ 	
IO
«« 
.
«« 
	WriteLine
«« 
(
«« 
$str
«« /
)
««/ 0
;
««0 1
}
»» 	
else
…… 
{
   	
if
ÀÀ 
(
ÀÀ 
password
ÀÀ 
!=
ÀÀ 
null
ÀÀ  
)
ÀÀ  !
{
ÃÃ 
{
ŒŒ 
using
œœ 
(
œœ &
AesCryptoServiceProvider
œœ 3
aesAlg
œœ4 :
=
œœ; <
new
œœ= @&
AesCryptoServiceProvider
œœA Y
(
œœY Z
)
œœZ [
)
œœ[ \
{
–– 
aesAlg
—— 
.
—— 
Padding
—— &
=
——' (
PaddingMode
——) 4
.
——4 5
None
——5 9
;
——9 :
aesAlg
““ 
.
““ 
Key
““ "
=
““# $
Encoding
““% -
.
““- .
UTF8
““. 2
.
““2 3
GetBytes
““3 ;
(
““; <
$str
““< N
)
““N O
;
““O P
ICryptoTransform
‘‘ (
	decryptor
‘‘) 2
=
‘‘3 4
aesAlg
‘‘5 ;
.
‘‘; <
CreateDecryptor
‘‘< K
(
‘‘K L
aesAlg
‘‘L R
.
‘‘R S
Key
‘‘S V
,
‘‘V W
aesAlg
‘‘X ^
.
‘‘^ _
IV
‘‘_ a
)
‘‘a b
;
‘‘b c
using
÷÷ 
(
÷÷ 
MemoryStream
÷÷ +
	msDecrypt
÷÷, 5
=
÷÷6 7
new
÷÷8 ;
MemoryStream
÷÷< H
(
÷÷H I
Encoding
÷÷I Q
.
÷÷Q R
UTF8
÷÷R V
.
÷÷V W
GetBytes
÷÷W _
(
÷÷_ `
password
÷÷` h
)
÷÷h i
)
÷÷i j
)
÷÷j k
{
◊◊ 
using
ÿÿ !
(
ÿÿ" #
CryptoStream
ÿÿ# /
	csDecrypt
ÿÿ0 9
=
ÿÿ: ;
new
ÿÿ< ?
CryptoStream
ÿÿ@ L
(
ÿÿL M
	msDecrypt
ÿÿM V
,
ÿÿV W
	decryptor
ÿÿX a
,
ÿÿa b
CryptoStreamMode
ÿÿc s
.
ÿÿs t
Read
ÿÿt x
)
ÿÿx y
)
ÿÿy z
{
ŸŸ 
using
⁄⁄  %
(
⁄⁄& '
StreamReader
⁄⁄' 3
	srDecrypt
⁄⁄4 =
=
⁄⁄> ?
new
⁄⁄@ C
StreamReader
⁄⁄D P
(
⁄⁄P Q
	csDecrypt
⁄⁄Q Z
)
⁄⁄Z [
)
⁄⁄[ \
{
€€  !
password
ﬁﬁ$ ,
=
ﬁﬁ- .
	srDecrypt
ﬁﬁ/ 8
.
ﬁﬁ8 9
	ReadToEnd
ﬁﬁ9 B
(
ﬁﬁB C
)
ﬁﬁC D
;
ﬁﬁD E
}
ﬂﬂ  !
}
‡‡ 
}
·· 
}
‚‚ 
}
„„ 
try
‰‰ 
{
ÂÂ 
using
ÁÁ 
(
ÁÁ 
SqlConnection
ÁÁ (

connection
ÁÁ) 3
=
ÁÁ4 5
new
ÁÁ6 9
SqlConnection
ÁÁ: G
(
ÁÁG H
$str
ÁÁH ~
+ÁÁ Ä
$strÁÁÅ Ö
+ÁÁÜ á
$strÁÁà î
+ÁÁï ñ
passwordÁÁó ü
)ÁÁü †
)ÁÁ† °
{
ËË 

connection
ÈÈ "
.
ÈÈ" #
Open
ÈÈ# '
(
ÈÈ' (
)
ÈÈ( )
;
ÈÈ) *
using
ÍÍ 
(
ÍÍ 

SqlCommand
ÍÍ )
command
ÍÍ* 1
=
ÍÍ2 3
new
ÍÍ4 7

SqlCommand
ÍÍ8 B
(
ÍÍB C
$str
ÍÍC ]
,
ÍÍ] ^

connection
ÍÍ_ i
)
ÍÍi j
)
ÍÍj k
{
ÎÎ 
command
ÏÏ #
.
ÏÏ# $
ExecuteNonQuery
ÏÏ$ 3
(
ÏÏ3 4
)
ÏÏ4 5
;
ÏÏ5 6
}
ÌÌ 
}
ÓÓ 
}
ÔÔ 
catch
 
(
 
SqlException
 #
	exceptSql
$ -
)
- .
{
ÒÒ 
IO
ÚÚ 
.
ÚÚ 
Logger
ÚÚ 
.
ÚÚ 
Log
ÚÚ !
(
ÚÚ! "
NLog
ÚÚ" &
.
ÚÚ& '
LogLevel
ÚÚ' /
.
ÚÚ/ 0
Warn
ÚÚ0 4
,
ÚÚ4 5
$str
ÚÚ6 V
,
ÚÚV W
	exceptSql
ÚÚX a
)
ÚÚa b
;
ÚÚb c
}
ÛÛ 
}
ÙÙ 
}
ıı 	
}
ˆˆ 
private
˘˘ 
void
˘˘ 
GoodB2G2
˘˘ 
(
˘˘ 
)
˘˘ 
{
˙˙ 
string
˚˚ 
password
˚˚ 
;
˚˚ 
if
¸¸ 

(
¸¸ 
IO
¸¸ 
.
¸¸ 
StaticReturnsTrue
¸¸  
(
¸¸  !
)
¸¸! "
)
¸¸" #
{
˝˝ 	
password
˛˛ 
=
˛˛ 
$str
˛˛ 
;
˛˛ 
{
ÄÄ 
try
ÅÅ 
{
ÇÇ 
using
ÉÉ 
(
ÉÉ 
	WebClient
ÉÉ $
client
ÉÉ% +
=
ÉÉ, -
new
ÉÉ. 1
	WebClient
ÉÉ2 ;
(
ÉÉ; <
)
ÉÉ< =
)
ÉÉ= >
{
ÑÑ 
using
ÖÖ 
(
ÖÖ 
StreamReader
ÖÖ +
sr
ÖÖ, .
=
ÖÖ/ 0
new
ÖÖ1 4
StreamReader
ÖÖ5 A
(
ÖÖA B
client
ÖÖB H
.
ÖÖH I
OpenRead
ÖÖI Q
(
ÖÖQ R
$str
ÖÖR k
)
ÖÖk l
)
ÖÖl m
)
ÖÖm n
{
ÜÜ 
password
ää $
=
ää% &
sr
ää' )
.
ää) *
ReadLine
ää* 2
(
ää2 3
)
ää3 4
;
ää4 5
}
ãã 
}
åå 
}
çç 
catch
éé 
(
éé 
IOException
éé "
exceptIO
éé# +
)
éé+ ,
{
èè 
IO
êê 
.
êê 
Logger
êê 
.
êê 
Log
êê !
(
êê! "
NLog
êê" &
.
êê& '
LogLevel
êê' /
.
êê/ 0
Warn
êê0 4
,
êê4 5
$str
êê6 Q
,
êêQ R
exceptIO
êêS [
)
êê[ \
;
êê\ ]
}
ëë 
}
íí 
}
ìì 	
else
îî 
{
ïï 	
password
òò 
=
òò 
null
òò 
;
òò 
}
ôô 	
if
öö 

(
öö 
IO
öö 
.
öö 
StaticReturnsTrue
öö  
(
öö  !
)
öö! "
)
öö" #
{
õõ 	
if
úú 
(
úú 
password
úú 
!=
úú 
null
úú  
)
úú  !
{
ùù 
{
üü 
using
†† 
(
†† &
AesCryptoServiceProvider
†† 3
aesAlg
††4 :
=
††; <
new
††= @&
AesCryptoServiceProvider
††A Y
(
††Y Z
)
††Z [
)
††[ \
{
°° 
aesAlg
¢¢ 
.
¢¢ 
Padding
¢¢ &
=
¢¢' (
PaddingMode
¢¢) 4
.
¢¢4 5
None
¢¢5 9
;
¢¢9 :
aesAlg
££ 
.
££ 
Key
££ "
=
££# $
Encoding
££% -
.
££- .
UTF8
££. 2
.
££2 3
GetBytes
££3 ;
(
££; <
$str
££< N
)
££N O
;
££O P
ICryptoTransform
•• (
	decryptor
••) 2
=
••3 4
aesAlg
••5 ;
.
••; <
CreateDecryptor
••< K
(
••K L
aesAlg
••L R
.
••R S
Key
••S V
,
••V W
aesAlg
••X ^
.
••^ _
IV
••_ a
)
••a b
;
••b c
using
ßß 
(
ßß 
MemoryStream
ßß +
	msDecrypt
ßß, 5
=
ßß6 7
new
ßß8 ;
MemoryStream
ßß< H
(
ßßH I
Encoding
ßßI Q
.
ßßQ R
UTF8
ßßR V
.
ßßV W
GetBytes
ßßW _
(
ßß_ `
password
ßß` h
)
ßßh i
)
ßßi j
)
ßßj k
{
®® 
using
©© !
(
©©" #
CryptoStream
©©# /
	csDecrypt
©©0 9
=
©©: ;
new
©©< ?
CryptoStream
©©@ L
(
©©L M
	msDecrypt
©©M V
,
©©V W
	decryptor
©©X a
,
©©a b
CryptoStreamMode
©©c s
.
©©s t
Read
©©t x
)
©©x y
)
©©y z
{
™™ 
using
´´  %
(
´´& '
StreamReader
´´' 3
	srDecrypt
´´4 =
=
´´> ?
new
´´@ C
StreamReader
´´D P
(
´´P Q
	csDecrypt
´´Q Z
)
´´Z [
)
´´[ \
{
¨¨  !
password
ØØ$ ,
=
ØØ- .
	srDecrypt
ØØ/ 8
.
ØØ8 9
	ReadToEnd
ØØ9 B
(
ØØB C
)
ØØC D
;
ØØD E
}
∞∞  !
}
±± 
}
≤≤ 
}
≥≥ 
}
¥¥ 
try
µµ 
{
∂∂ 
using
∏∏ 
(
∏∏ 
SqlConnection
∏∏ (

connection
∏∏) 3
=
∏∏4 5
new
∏∏6 9
SqlConnection
∏∏: G
(
∏∏G H
$str
∏∏H ~
+∏∏ Ä
$str∏∏Å Ö
+∏∏Ü á
$str∏∏à î
+∏∏ï ñ
password∏∏ó ü
)∏∏ü †
)∏∏† °
{
ππ 

connection
∫∫ "
.
∫∫" #
Open
∫∫# '
(
∫∫' (
)
∫∫( )
;
∫∫) *
using
ªª 
(
ªª 

SqlCommand
ªª )
command
ªª* 1
=
ªª2 3
new
ªª4 7

SqlCommand
ªª8 B
(
ªªB C
$str
ªªC ]
,
ªª] ^

connection
ªª_ i
)
ªªi j
)
ªªj k
{
ºº 
command
ΩΩ #
.
ΩΩ# $
ExecuteNonQuery
ΩΩ$ 3
(
ΩΩ3 4
)
ΩΩ4 5
;
ΩΩ5 6
}
ææ 
}
øø 
}
¿¿ 
catch
¡¡ 
(
¡¡ 
SqlException
¡¡ #
	exceptSql
¡¡$ -
)
¡¡- .
{
¬¬ 
IO
√√ 
.
√√ 
Logger
√√ 
.
√√ 
Log
√√ !
(
√√! "
NLog
√√" &
.
√√& '
LogLevel
√√' /
.
√√/ 0
Warn
√√0 4
,
√√4 5
$str
√√6 V
,
√√V W
	exceptSql
√√X a
)
√√a b
;
√√b c
}
ƒƒ 
}
≈≈ 
}
∆∆ 	
}
«« 
public
…… 

override
…… 
void
…… 
Good
…… 
(
…… 
)
…… 
{
   
GoodG2B1
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
GoodG2B2
ÃÃ 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ 
GoodB2G1
ÕÕ 
(
ÕÕ 
)
ÕÕ 
;
ÕÕ 
GoodB2G2
ŒŒ 
(
ŒŒ 
)
ŒŒ 
;
ŒŒ 
}
œœ 
}—— 
}““ íÆ
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_12.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class J
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_12 D
:E F
AbstractTestCaseG W
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
password## 
;## 
if$$ 

($$
 
IO$$ 
.$$ $
StaticReturnsTrueOrFalse$$ &
($$& '
)$$' (
)$$( )
{%% 	
password&& 
=&& 
$str&& 
;&& 
{(( 
try)) 
{** 
using++ 
(++ 
	WebClient++ $
client++% +
=++, -
new++. 1
	WebClient++2 ;
(++; <
)++< =
)++= >
{,, 
using-- 
(-- 
StreamReader-- +
sr--, .
=--/ 0
new--1 4
StreamReader--5 A
(--A B
client--B H
.--H I
OpenRead--I Q
(--Q R
$str--R k
)--k l
)--l m
)--m n
{.. 
password22 $
=22% &
sr22' )
.22) *
ReadLine22* 2
(222 3
)223 4
;224 5
}33 
}44 
}55 
catch66 
(66 
IOException66 "
exceptIO66# +
)66+ ,
{77 
IO88 
.88 
Logger88 
.88 
Log88 !
(88! "
NLog88" &
.88& '
LogLevel88' /
.88/ 0
Warn880 4
,884 5
$str886 Q
,88Q R
exceptIO88S [
)88[ \
;88\ ]
}99 
}:: 
};; 	
else<< 
{== 	
password@@ 
=@@ 
$str@@ &
;@@& '
}AA 	
ifBB 

(BB
 
IOBB 
.BB $
StaticReturnsTrueOrFalseBB &
(BB& '
)BB' (
)BB( )
{CC 	
tryDD 
{EE 
usingGG 
(GG 
SqlConnectionGG $

connectionGG% /
=GG0 1
newGG2 5
SqlConnectionGG6 C
(GGC D
$strGGD z
+GG{ |
$str	GG} Å
+
GGÇ É
$str
GGÑ ê
+
GGë í
password
GGì õ
)
GGõ ú
)
GGú ù
{HH 

connectionII 
.II 
OpenII #
(II# $
)II$ %
;II% &
usingJJ 
(JJ 

SqlCommandJJ %
commandJJ& -
=JJ. /
newJJ0 3

SqlCommandJJ4 >
(JJ> ?
$strJJ? Y
,JJY Z

connectionJJ[ e
)JJe f
)JJf g
{KK 
commandLL 
.LL  
ExecuteNonQueryLL  /
(LL/ 0
)LL0 1
;LL1 2
}MM 
}NN 
}OO 
catchPP 
(PP 
SqlExceptionPP 
	exceptSqlPP  )
)PP) *
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR 
(RR 
NLogRR "
.RR" #
LogLevelRR# +
.RR+ ,
WarnRR, 0
,RR0 1
$strRR2 R
,RRR S
	exceptSqlRRT ]
)RR] ^
;RR^ _
}SS 
}TT 	
elseUU 
{VV 	
ifWW 
(WW 
passwordWW 
!=WW 
nullWW  
)WW  !
{XX 
{ZZ 
using[[ 
([[ $
AesCryptoServiceProvider[[ 3
aesAlg[[4 :
=[[; <
new[[= @$
AesCryptoServiceProvider[[A Y
([[Y Z
)[[Z [
)[[[ \
{\\ 
aesAlg]] 
.]] 
Padding]] &
=]]' (
PaddingMode]]) 4
.]]4 5
None]]5 9
;]]9 :
aesAlg^^ 
.^^ 
Key^^ "
=^^# $
Encoding^^% -
.^^- .
UTF8^^. 2
.^^2 3
GetBytes^^3 ;
(^^; <
$str^^< N
)^^N O
;^^O P
ICryptoTransform`` (
	decryptor``) 2
=``3 4
aesAlg``5 ;
.``; <
CreateDecryptor``< K
(``K L
aesAlg``L R
.``R S
Key``S V
,``V W
aesAlg``X ^
.``^ _
IV``_ a
)``a b
;``b c
usingbb 
(bb 
MemoryStreambb +
	msDecryptbb, 5
=bb6 7
newbb8 ;
MemoryStreambb< H
(bbH I
EncodingbbI Q
.bbQ R
UTF8bbR V
.bbV W
GetBytesbbW _
(bb_ `
passwordbb` h
)bbh i
)bbi j
)bbj k
{cc 
usingdd !
(dd" #
CryptoStreamdd# /
	csDecryptdd0 9
=dd: ;
newdd< ?
CryptoStreamdd@ L
(ddL M
	msDecryptddM V
,ddV W
	decryptorddX a
,dda b
CryptoStreamModeddc s
.dds t
Readddt x
)ddx y
)ddy z
{ee 
usingff  %
(ff& '
StreamReaderff' 3
	srDecryptff4 =
=ff> ?
newff@ C
StreamReaderffD P
(ffP Q
	csDecryptffQ Z
)ffZ [
)ff[ \
{gg  !
passwordjj$ ,
=jj- .
	srDecryptjj/ 8
.jj8 9
	ReadToEndjj9 B
(jjB C
)jjC D
;jjD E
}kk  !
}ll 
}mm 
}nn 
}oo 
trypp 
{qq 
usingss 
(ss 
SqlConnectionss (

connectionss) 3
=ss4 5
newss6 9
SqlConnectionss: G
(ssG H
$strssH ~
+	ss Ä
$str
ssÅ Ö
+
ssÜ á
$str
ssà î
+
ssï ñ
password
ssó ü
)
ssü †
)
ss† °
{tt 

connectionuu "
.uu" #
Openuu# '
(uu' (
)uu( )
;uu) *
usingvv 
(vv 

SqlCommandvv )
commandvv* 1
=vv2 3
newvv4 7

SqlCommandvv8 B
(vvB C
$strvvC ]
,vv] ^

connectionvv_ i
)vvi j
)vvj k
{ww 
commandxx #
.xx# $
ExecuteNonQueryxx$ 3
(xx3 4
)xx4 5
;xx5 6
}yy 
}zz 
}{{ 
catch|| 
(|| 
SqlException|| #
	exceptSql||$ -
)||- .
{}} 
IO~~ 
.~~ 
Logger~~ 
.~~ 
Log~~ !
(~~! "
NLog~~" &
.~~& '
LogLevel~~' /
.~~/ 0
Warn~~0 4
,~~4 5
$str~~6 V
,~~V W
	exceptSql~~X a
)~~a b
;~~b c
} 
}
ÄÄ 
}
ÅÅ 	
}
ÇÇ 
private
áá 
void
áá 
GoodG2B
áá 
(
áá 
)
áá 
{
àà 
string
ââ 
password
ââ 
;
ââ 
if
ää 

(
ää
 
IO
ää 
.
ää &
StaticReturnsTrueOrFalse
ää &
(
ää& '
)
ää' (
)
ää( )
{
ãã 	
password
éé 
=
éé 
$str
éé &
;
éé& '
}
èè 	
else
êê 
{
ëë 	
password
îî 
=
îî 
$str
îî &
;
îî& '
}
ïï 	
if
ññ 

(
ññ
 
IO
ññ 
.
ññ &
StaticReturnsTrueOrFalse
ññ &
(
ññ& '
)
ññ' (
)
ññ( )
{
óó 	
try
òò 
{
ôô 
using
õõ 
(
õõ 
SqlConnection
õõ $

connection
õõ% /
=
õõ0 1
new
õõ2 5
SqlConnection
õõ6 C
(
õõC D
$str
õõD z
+
õõ{ |
$strõõ} Å
+õõÇ É
$strõõÑ ê
+õõë í
passwordõõì õ
)õõõ ú
)õõú ù
{
úú 

connection
ùù 
.
ùù 
Open
ùù #
(
ùù# $
)
ùù$ %
;
ùù% &
using
ûû 
(
ûû 

SqlCommand
ûû %
command
ûû& -
=
ûû. /
new
ûû0 3

SqlCommand
ûû4 >
(
ûû> ?
$str
ûû? Y
,
ûûY Z

connection
ûû[ e
)
ûûe f
)
ûûf g
{
üü 
command
†† 
.
††  
ExecuteNonQuery
††  /
(
††/ 0
)
††0 1
;
††1 2
}
°° 
}
¢¢ 
}
££ 
catch
§§ 
(
§§ 
SqlException
§§ 
	exceptSql
§§  )
)
§§) *
{
•• 
IO
¶¶ 
.
¶¶ 
Logger
¶¶ 
.
¶¶ 
Log
¶¶ 
(
¶¶ 
NLog
¶¶ "
.
¶¶" #
LogLevel
¶¶# +
.
¶¶+ ,
Warn
¶¶, 0
,
¶¶0 1
$str
¶¶2 R
,
¶¶R S
	exceptSql
¶¶T ]
)
¶¶] ^
;
¶¶^ _
}
ßß 
}
®® 	
else
©© 
{
™™ 	
try
´´ 
{
¨¨ 
using
ÆÆ 
(
ÆÆ 
SqlConnection
ÆÆ $

connection
ÆÆ% /
=
ÆÆ0 1
new
ÆÆ2 5
SqlConnection
ÆÆ6 C
(
ÆÆC D
$str
ÆÆD z
+
ÆÆ{ |
$strÆÆ} Å
+ÆÆÇ É
$strÆÆÑ ê
+ÆÆë í
passwordÆÆì õ
)ÆÆõ ú
)ÆÆú ù
{
ØØ 

connection
∞∞ 
.
∞∞ 
Open
∞∞ #
(
∞∞# $
)
∞∞$ %
;
∞∞% &
using
±± 
(
±± 

SqlCommand
±± %
command
±±& -
=
±±. /
new
±±0 3

SqlCommand
±±4 >
(
±±> ?
$str
±±? Y
,
±±Y Z

connection
±±[ e
)
±±e f
)
±±f g
{
≤≤ 
command
≥≥ 
.
≥≥  
ExecuteNonQuery
≥≥  /
(
≥≥/ 0
)
≥≥0 1
;
≥≥1 2
}
¥¥ 
}
µµ 
}
∂∂ 
catch
∑∑ 
(
∑∑ 
SqlException
∑∑ 
	exceptSql
∑∑  )
)
∑∑) *
{
∏∏ 
IO
ππ 
.
ππ 
Logger
ππ 
.
ππ 
Log
ππ 
(
ππ 
NLog
ππ "
.
ππ" #
LogLevel
ππ# +
.
ππ+ ,
Warn
ππ, 0
,
ππ0 1
$str
ππ2 R
,
ππR S
	exceptSql
ππT ]
)
ππ] ^
;
ππ^ _
}
∫∫ 
}
ªª 	
}
ºº 
private
¿¿ 
void
¿¿ 
GoodB2G
¿¿ 
(
¿¿ 
)
¿¿ 
{
¡¡ 
string
¬¬ 
password
¬¬ 
;
¬¬ 
if
√√ 

(
√√
 
IO
√√ 
.
√√ &
StaticReturnsTrueOrFalse
√√ &
(
√√& '
)
√√' (
)
√√( )
{
ƒƒ 	
password
≈≈ 
=
≈≈ 
$str
≈≈ 
;
≈≈ 
{
«« 
try
»» 
{
…… 
using
   
(
   
	WebClient
   $
client
  % +
=
  , -
new
  . 1
	WebClient
  2 ;
(
  ; <
)
  < =
)
  = >
{
ÀÀ 
using
ÃÃ 
(
ÃÃ 
StreamReader
ÃÃ +
sr
ÃÃ, .
=
ÃÃ/ 0
new
ÃÃ1 4
StreamReader
ÃÃ5 A
(
ÃÃA B
client
ÃÃB H
.
ÃÃH I
OpenRead
ÃÃI Q
(
ÃÃQ R
$str
ÃÃR k
)
ÃÃk l
)
ÃÃl m
)
ÃÃm n
{
ÕÕ 
password
—— $
=
——% &
sr
——' )
.
——) *
ReadLine
——* 2
(
——2 3
)
——3 4
;
——4 5
}
““ 
}
”” 
}
‘‘ 
catch
’’ 
(
’’ 
IOException
’’ "
exceptIO
’’# +
)
’’+ ,
{
÷÷ 
IO
◊◊ 
.
◊◊ 
Logger
◊◊ 
.
◊◊ 
Log
◊◊ !
(
◊◊! "
NLog
◊◊" &
.
◊◊& '
LogLevel
◊◊' /
.
◊◊/ 0
Warn
◊◊0 4
,
◊◊4 5
$str
◊◊6 Q
,
◊◊Q R
exceptIO
◊◊S [
)
◊◊[ \
;
◊◊\ ]
}
ÿÿ 
}
ŸŸ 
}
⁄⁄ 	
else
€€ 
{
‹‹ 	
password
›› 
=
›› 
$str
›› 
;
›› 
{
ﬂﬂ 
try
‡‡ 
{
·· 
using
‚‚ 
(
‚‚ 
	WebClient
‚‚ $
client
‚‚% +
=
‚‚, -
new
‚‚. 1
	WebClient
‚‚2 ;
(
‚‚; <
)
‚‚< =
)
‚‚= >
{
„„ 
using
‰‰ 
(
‰‰ 
StreamReader
‰‰ +
sr
‰‰, .
=
‰‰/ 0
new
‰‰1 4
StreamReader
‰‰5 A
(
‰‰A B
client
‰‰B H
.
‰‰H I
OpenRead
‰‰I Q
(
‰‰Q R
$str
‰‰R k
)
‰‰k l
)
‰‰l m
)
‰‰m n
{
ÂÂ 
password
ÈÈ $
=
ÈÈ% &
sr
ÈÈ' )
.
ÈÈ) *
ReadLine
ÈÈ* 2
(
ÈÈ2 3
)
ÈÈ3 4
;
ÈÈ4 5
}
ÍÍ 
}
ÎÎ 
}
ÏÏ 
catch
ÌÌ 
(
ÌÌ 
IOException
ÌÌ "
exceptIO
ÌÌ# +
)
ÌÌ+ ,
{
ÓÓ 
IO
ÔÔ 
.
ÔÔ 
Logger
ÔÔ 
.
ÔÔ 
Log
ÔÔ !
(
ÔÔ! "
NLog
ÔÔ" &
.
ÔÔ& '
LogLevel
ÔÔ' /
.
ÔÔ/ 0
Warn
ÔÔ0 4
,
ÔÔ4 5
$str
ÔÔ6 Q
,
ÔÔQ R
exceptIO
ÔÔS [
)
ÔÔ[ \
;
ÔÔ\ ]
}
 
}
ÒÒ 
}
ÚÚ 	
if
ÛÛ 

(
ÛÛ
 
IO
ÛÛ 
.
ÛÛ &
StaticReturnsTrueOrFalse
ÛÛ &
(
ÛÛ& '
)
ÛÛ' (
)
ÛÛ( )
{
ÙÙ 	
if
ıı 
(
ıı 
password
ıı 
!=
ıı 
null
ıı  
)
ıı  !
{
ˆˆ 
{
¯¯ 
using
˘˘ 
(
˘˘ &
AesCryptoServiceProvider
˘˘ 3
aesAlg
˘˘4 :
=
˘˘; <
new
˘˘= @&
AesCryptoServiceProvider
˘˘A Y
(
˘˘Y Z
)
˘˘Z [
)
˘˘[ \
{
˙˙ 
aesAlg
˚˚ 
.
˚˚ 
Padding
˚˚ &
=
˚˚' (
PaddingMode
˚˚) 4
.
˚˚4 5
None
˚˚5 9
;
˚˚9 :
aesAlg
¸¸ 
.
¸¸ 
Key
¸¸ "
=
¸¸# $
Encoding
¸¸% -
.
¸¸- .
UTF8
¸¸. 2
.
¸¸2 3
GetBytes
¸¸3 ;
(
¸¸; <
$str
¸¸< N
)
¸¸N O
;
¸¸O P
ICryptoTransform
˛˛ (
	decryptor
˛˛) 2
=
˛˛3 4
aesAlg
˛˛5 ;
.
˛˛; <
CreateDecryptor
˛˛< K
(
˛˛K L
aesAlg
˛˛L R
.
˛˛R S
Key
˛˛S V
,
˛˛V W
aesAlg
˛˛X ^
.
˛˛^ _
IV
˛˛_ a
)
˛˛a b
;
˛˛b c
using
ÄÄ 
(
ÄÄ 
MemoryStream
ÄÄ +
	msDecrypt
ÄÄ, 5
=
ÄÄ6 7
new
ÄÄ8 ;
MemoryStream
ÄÄ< H
(
ÄÄH I
Encoding
ÄÄI Q
.
ÄÄQ R
UTF8
ÄÄR V
.
ÄÄV W
GetBytes
ÄÄW _
(
ÄÄ_ `
password
ÄÄ` h
)
ÄÄh i
)
ÄÄi j
)
ÄÄj k
{
ÅÅ 
using
ÇÇ !
(
ÇÇ" #
CryptoStream
ÇÇ# /
	csDecrypt
ÇÇ0 9
=
ÇÇ: ;
new
ÇÇ< ?
CryptoStream
ÇÇ@ L
(
ÇÇL M
	msDecrypt
ÇÇM V
,
ÇÇV W
	decryptor
ÇÇX a
,
ÇÇa b
CryptoStreamMode
ÇÇc s
.
ÇÇs t
Read
ÇÇt x
)
ÇÇx y
)
ÇÇy z
{
ÉÉ 
using
ÑÑ  %
(
ÑÑ& '
StreamReader
ÑÑ' 3
	srDecrypt
ÑÑ4 =
=
ÑÑ> ?
new
ÑÑ@ C
StreamReader
ÑÑD P
(
ÑÑP Q
	csDecrypt
ÑÑQ Z
)
ÑÑZ [
)
ÑÑ[ \
{
ÖÖ  !
password
àà$ ,
=
àà- .
	srDecrypt
àà/ 8
.
àà8 9
	ReadToEnd
àà9 B
(
ààB C
)
ààC D
;
ààD E
}
ââ  !
}
ää 
}
ãã 
}
åå 
}
çç 
try
éé 
{
èè 
using
ëë 
(
ëë 
SqlConnection
ëë (

connection
ëë) 3
=
ëë4 5
new
ëë6 9
SqlConnection
ëë: G
(
ëëG H
$str
ëëH ~
+ëë Ä
$strëëÅ Ö
+ëëÜ á
$strëëà î
+ëëï ñ
passwordëëó ü
)ëëü †
)ëë† °
{
íí 

connection
ìì "
.
ìì" #
Open
ìì# '
(
ìì' (
)
ìì( )
;
ìì) *
using
îî 
(
îî 

SqlCommand
îî )
command
îî* 1
=
îî2 3
new
îî4 7

SqlCommand
îî8 B
(
îîB C
$str
îîC ]
,
îî] ^

connection
îî_ i
)
îîi j
)
îîj k
{
ïï 
command
ññ #
.
ññ# $
ExecuteNonQuery
ññ$ 3
(
ññ3 4
)
ññ4 5
;
ññ5 6
}
óó 
}
òò 
}
ôô 
catch
öö 
(
öö 
SqlException
öö #
	exceptSql
öö$ -
)
öö- .
{
õõ 
IO
úú 
.
úú 
Logger
úú 
.
úú 
Log
úú !
(
úú! "
NLog
úú" &
.
úú& '
LogLevel
úú' /
.
úú/ 0
Warn
úú0 4
,
úú4 5
$str
úú6 V
,
úúV W
	exceptSql
úúX a
)
úúa b
;
úúb c
}
ùù 
}
ûû 
}
üü 	
else
†† 
{
°° 	
if
¢¢ 
(
¢¢ 
password
¢¢ 
!=
¢¢ 
null
¢¢  
)
¢¢  !
{
££ 
{
•• 
using
¶¶ 
(
¶¶ &
AesCryptoServiceProvider
¶¶ 3
aesAlg
¶¶4 :
=
¶¶; <
new
¶¶= @&
AesCryptoServiceProvider
¶¶A Y
(
¶¶Y Z
)
¶¶Z [
)
¶¶[ \
{
ßß 
aesAlg
®® 
.
®® 
Padding
®® &
=
®®' (
PaddingMode
®®) 4
.
®®4 5
None
®®5 9
;
®®9 :
aesAlg
©© 
.
©© 
Key
©© "
=
©©# $
Encoding
©©% -
.
©©- .
UTF8
©©. 2
.
©©2 3
GetBytes
©©3 ;
(
©©; <
$str
©©< N
)
©©N O
;
©©O P
ICryptoTransform
´´ (
	decryptor
´´) 2
=
´´3 4
aesAlg
´´5 ;
.
´´; <
CreateDecryptor
´´< K
(
´´K L
aesAlg
´´L R
.
´´R S
Key
´´S V
,
´´V W
aesAlg
´´X ^
.
´´^ _
IV
´´_ a
)
´´a b
;
´´b c
using
≠≠ 
(
≠≠ 
MemoryStream
≠≠ +
	msDecrypt
≠≠, 5
=
≠≠6 7
new
≠≠8 ;
MemoryStream
≠≠< H
(
≠≠H I
Encoding
≠≠I Q
.
≠≠Q R
UTF8
≠≠R V
.
≠≠V W
GetBytes
≠≠W _
(
≠≠_ `
password
≠≠` h
)
≠≠h i
)
≠≠i j
)
≠≠j k
{
ÆÆ 
using
ØØ !
(
ØØ" #
CryptoStream
ØØ# /
	csDecrypt
ØØ0 9
=
ØØ: ;
new
ØØ< ?
CryptoStream
ØØ@ L
(
ØØL M
	msDecrypt
ØØM V
,
ØØV W
	decryptor
ØØX a
,
ØØa b
CryptoStreamMode
ØØc s
.
ØØs t
Read
ØØt x
)
ØØx y
)
ØØy z
{
∞∞ 
using
±±  %
(
±±& '
StreamReader
±±' 3
	srDecrypt
±±4 =
=
±±> ?
new
±±@ C
StreamReader
±±D P
(
±±P Q
	csDecrypt
±±Q Z
)
±±Z [
)
±±[ \
{
≤≤  !
password
µµ$ ,
=
µµ- .
	srDecrypt
µµ/ 8
.
µµ8 9
	ReadToEnd
µµ9 B
(
µµB C
)
µµC D
;
µµD E
}
∂∂  !
}
∑∑ 
}
∏∏ 
}
ππ 
}
∫∫ 
try
ªª 
{
ºº 
using
ææ 
(
ææ 
SqlConnection
ææ (

connection
ææ) 3
=
ææ4 5
new
ææ6 9
SqlConnection
ææ: G
(
ææG H
$str
ææH ~
+ææ Ä
$strææÅ Ö
+ææÜ á
$strææà î
+ææï ñ
passwordææó ü
)ææü †
)ææ† °
{
øø 

connection
¿¿ "
.
¿¿" #
Open
¿¿# '
(
¿¿' (
)
¿¿( )
;
¿¿) *
using
¡¡ 
(
¡¡ 

SqlCommand
¡¡ )
command
¡¡* 1
=
¡¡2 3
new
¡¡4 7

SqlCommand
¡¡8 B
(
¡¡B C
$str
¡¡C ]
,
¡¡] ^

connection
¡¡_ i
)
¡¡i j
)
¡¡j k
{
¬¬ 
command
√√ #
.
√√# $
ExecuteNonQuery
√√$ 3
(
√√3 4
)
√√4 5
;
√√5 6
}
ƒƒ 
}
≈≈ 
}
∆∆ 
catch
«« 
(
«« 
SqlException
«« #
	exceptSql
««$ -
)
««- .
{
»» 
IO
…… 
.
…… 
Logger
…… 
.
…… 
Log
…… !
(
……! "
NLog
……" &
.
……& '
LogLevel
……' /
.
……/ 0
Warn
……0 4
,
……4 5
$str
……6 V
,
……V W
	exceptSql
……X a
)
……a b
;
……b c
}
   
}
ÀÀ 
}
ÃÃ 	
}
ÕÕ 
public
œœ 

override
œœ 
void
œœ 
Good
œœ 
(
œœ 
)
œœ 
{
—— 
GoodG2B
““ 
(
““ 
)
““ 
;
““ 
GoodB2G
”” 
(
”” 
)
”” 
;
”” 
}
‘‘ 
}÷÷ 
}◊◊ íü
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_13.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class J
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_13 D
:E F
AbstractTestCaseG W
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
password## 
;## 
if$$ 

($$ 
IO$$ 
.$$  
STATIC_READONLY_FIVE$$ #
==$$# %
$num$$% &
)$$& '
{%% 	
password&& 
=&& 
$str&& 
;&& 
{(( 
try)) 
{** 
using++ 
(++ 
	WebClient++ $
client++% +
=++, -
new++. 1
	WebClient++2 ;
(++; <
)++< =
)++= >
{,, 
using-- 
(-- 
StreamReader-- +
sr--, .
=--/ 0
new--1 4
StreamReader--5 A
(--A B
client--B H
.--H I
OpenRead--I Q
(--Q R
$str--R k
)--k l
)--l m
)--m n
{.. 
password22 $
=22% &
sr22' )
.22) *
ReadLine22* 2
(222 3
)223 4
;224 5
}33 
}44 
}55 
catch66 
(66 
IOException66 "
exceptIO66# +
)66+ ,
{77 
IO88 
.88 
Logger88 
.88 
Log88 !
(88! "
NLog88" &
.88& '
LogLevel88' /
.88/ 0
Warn880 4
,884 5
$str886 Q
,88Q R
exceptIO88S [
)88[ \
;88\ ]
}99 
}:: 
};; 	
else<< 
{== 	
password@@ 
=@@ 
null@@ 
;@@ 
}AA 	
ifBB 

(BB 
IOBB 
.BB  
STATIC_READONLY_FIVEBB #
==BB# %
$numBB% &
)BB& '
{CC 	
tryDD 
{EE 
usingGG 
(GG 
SqlConnectionGG $

connectionGG% /
=GG0 1
newGG2 5
SqlConnectionGG6 C
(GGC D
$strGGD z
+GG{ |
$str	GG} Å
+
GGÇ É
$str
GGÑ ê
+
GGë í
password
GGì õ
)
GGõ ú
)
GGú ù
{HH 

connectionII 
.II 
OpenII #
(II# $
)II$ %
;II% &
usingJJ 
(JJ 

SqlCommandJJ %
commandJJ& -
=JJ. /
newJJ0 3

SqlCommandJJ4 >
(JJ> ?
$strJJ? Y
,JJY Z

connectionJJ[ e
)JJe f
)JJf g
{KK 
commandLL 
.LL  
ExecuteNonQueryLL  /
(LL/ 0
)LL0 1
;LL1 2
}MM 
}NN 
}OO 
catchPP 
(PP 
SqlExceptionPP 
	exceptSqlPP  )
)PP) *
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR 
(RR 
NLogRR "
.RR" #
LogLevelRR# +
.RR+ ,
WarnRR, 0
,RR0 1
$strRR2 R
,RRR S
	exceptSqlRRT ]
)RR] ^
;RR^ _
}SS 
}TT 	
}UU 
privateYY 
voidYY 
GoodG2B1YY 
(YY 
)YY 
{ZZ 
string[[ 
password[[ 
;[[ 
if\\ 

(\\ 
IO\\ 
.\\  
STATIC_READONLY_FIVE\\ #
!=\\# %
$num\\% &
)\\& '
{]] 	
password`` 
=`` 
null`` 
;`` 
}aa 	
elsebb 
{cc 	
passwordff 
=ff 
$strff &
;ff& '
}gg 	
ifhh 

(hh 
IOhh 
.hh  
STATIC_READONLY_FIVEhh #
==hh# %
$numhh% &
)hh& '
{ii 	
tryjj 
{kk 
usingmm 
(mm 
SqlConnectionmm $

connectionmm% /
=mm0 1
newmm2 5
SqlConnectionmm6 C
(mmC D
$strmmD z
+mm{ |
$str	mm} Å
+
mmÇ É
$str
mmÑ ê
+
mmë í
password
mmì õ
)
mmõ ú
)
mmú ù
{nn 

connectionoo 
.oo 
Openoo #
(oo# $
)oo$ %
;oo% &
usingpp 
(pp 

SqlCommandpp %
commandpp& -
=pp. /
newpp0 3

SqlCommandpp4 >
(pp> ?
$strpp? Y
,ppY Z

connectionpp[ e
)ppe f
)ppf g
{qq 
commandrr 
.rr  
ExecuteNonQueryrr  /
(rr/ 0
)rr0 1
;rr1 2
}ss 
}tt 
}uu 
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv  )
)vv) *
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
	exceptSqlxxT ]
)xx] ^
;xx^ _
}yy 
}zz 	
}{{ 
private~~ 
void~~ 
GoodG2B2~~ 
(~~ 
)~~ 
{ 
string
ÄÄ 
password
ÄÄ 
;
ÄÄ 
if
ÅÅ 

(
ÅÅ 
IO
ÅÅ 
.
ÅÅ "
STATIC_READONLY_FIVE
ÅÅ #
==
ÅÅ# %
$num
ÅÅ% &
)
ÅÅ& '
{
ÇÇ 	
password
ÖÖ 
=
ÖÖ 
$str
ÖÖ &
;
ÖÖ& '
}
ÜÜ 	
else
áá 
{
àà 	
password
ãã 
=
ãã 
null
ãã 
;
ãã 
}
åå 	
if
çç 

(
çç 
IO
çç 
.
çç "
STATIC_READONLY_FIVE
çç #
==
çç# %
$num
çç% &
)
çç& '
{
éé 	
try
èè 
{
êê 
using
íí 
(
íí 
SqlConnection
íí $

connection
íí% /
=
íí0 1
new
íí2 5
SqlConnection
íí6 C
(
ííC D
$str
ííD z
+
íí{ |
$stríí} Å
+ííÇ É
$strííÑ ê
+ííë í
passwordííì õ
)ííõ ú
)ííú ù
{
ìì 

connection
îî 
.
îî 
Open
îî #
(
îî# $
)
îî$ %
;
îî% &
using
ïï 
(
ïï 

SqlCommand
ïï %
command
ïï& -
=
ïï. /
new
ïï0 3

SqlCommand
ïï4 >
(
ïï> ?
$str
ïï? Y
,
ïïY Z

connection
ïï[ e
)
ïïe f
)
ïïf g
{
ññ 
command
óó 
.
óó  
ExecuteNonQuery
óó  /
(
óó/ 0
)
óó0 1
;
óó1 2
}
òò 
}
ôô 
}
öö 
catch
õõ 
(
õõ 
SqlException
õõ 
	exceptSql
õõ  )
)
õõ) *
{
úú 
IO
ùù 
.
ùù 
Logger
ùù 
.
ùù 
Log
ùù 
(
ùù 
NLog
ùù "
.
ùù" #
LogLevel
ùù# +
.
ùù+ ,
Warn
ùù, 0
,
ùù0 1
$str
ùù2 R
,
ùùR S
	exceptSql
ùùT ]
)
ùù] ^
;
ùù^ _
}
ûû 
}
üü 	
}
†† 
private
££ 
void
££ 
GoodB2G1
££ 
(
££ 
)
££ 
{
§§ 
string
•• 
password
•• 
;
•• 
if
¶¶ 

(
¶¶ 
IO
¶¶ 
.
¶¶ "
STATIC_READONLY_FIVE
¶¶ #
==
¶¶# %
$num
¶¶% &
)
¶¶& '
{
ßß 	
password
®® 
=
®® 
$str
®® 
;
®® 
{
™™ 
try
´´ 
{
¨¨ 
using
≠≠ 
(
≠≠ 
	WebClient
≠≠ $
client
≠≠% +
=
≠≠, -
new
≠≠. 1
	WebClient
≠≠2 ;
(
≠≠; <
)
≠≠< =
)
≠≠= >
{
ÆÆ 
using
ØØ 
(
ØØ 
StreamReader
ØØ +
sr
ØØ, .
=
ØØ/ 0
new
ØØ1 4
StreamReader
ØØ5 A
(
ØØA B
client
ØØB H
.
ØØH I
OpenRead
ØØI Q
(
ØØQ R
$str
ØØR k
)
ØØk l
)
ØØl m
)
ØØm n
{
∞∞ 
password
¥¥ $
=
¥¥% &
sr
¥¥' )
.
¥¥) *
ReadLine
¥¥* 2
(
¥¥2 3
)
¥¥3 4
;
¥¥4 5
}
µµ 
}
∂∂ 
}
∑∑ 
catch
∏∏ 
(
∏∏ 
IOException
∏∏ "
exceptIO
∏∏# +
)
∏∏+ ,
{
ππ 
IO
∫∫ 
.
∫∫ 
Logger
∫∫ 
.
∫∫ 
Log
∫∫ !
(
∫∫! "
NLog
∫∫" &
.
∫∫& '
LogLevel
∫∫' /
.
∫∫/ 0
Warn
∫∫0 4
,
∫∫4 5
$str
∫∫6 Q
,
∫∫Q R
exceptIO
∫∫S [
)
∫∫[ \
;
∫∫\ ]
}
ªª 
}
ºº 
}
ΩΩ 	
else
ææ 
{
øø 	
password
¬¬ 
=
¬¬ 
null
¬¬ 
;
¬¬ 
}
√√ 	
if
ƒƒ 

(
ƒƒ 
IO
ƒƒ 
.
ƒƒ "
STATIC_READONLY_FIVE
ƒƒ #
!=
ƒƒ# %
$num
ƒƒ% &
)
ƒƒ& '
{
≈≈ 	
IO
«« 
.
«« 
	WriteLine
«« 
(
«« 
$str
«« /
)
««/ 0
;
««0 1
}
»» 	
else
…… 
{
   	
if
ÀÀ 
(
ÀÀ 
password
ÀÀ 
!=
ÀÀ 
null
ÀÀ  
)
ÀÀ  !
{
ÃÃ 
{
ŒŒ 
using
œœ 
(
œœ &
AesCryptoServiceProvider
œœ 3
aesAlg
œœ4 :
=
œœ; <
new
œœ= @&
AesCryptoServiceProvider
œœA Y
(
œœY Z
)
œœZ [
)
œœ[ \
{
–– 
aesAlg
—— 
.
—— 
Padding
—— &
=
——' (
PaddingMode
——) 4
.
——4 5
None
——5 9
;
——9 :
aesAlg
““ 
.
““ 
Key
““ "
=
““# $
Encoding
““% -
.
““- .
UTF8
““. 2
.
““2 3
GetBytes
““3 ;
(
““; <
$str
““< N
)
““N O
;
““O P
ICryptoTransform
‘‘ (
	decryptor
‘‘) 2
=
‘‘3 4
aesAlg
‘‘5 ;
.
‘‘; <
CreateDecryptor
‘‘< K
(
‘‘K L
aesAlg
‘‘L R
.
‘‘R S
Key
‘‘S V
,
‘‘V W
aesAlg
‘‘X ^
.
‘‘^ _
IV
‘‘_ a
)
‘‘a b
;
‘‘b c
using
÷÷ 
(
÷÷ 
MemoryStream
÷÷ +
	msDecrypt
÷÷, 5
=
÷÷6 7
new
÷÷8 ;
MemoryStream
÷÷< H
(
÷÷H I
Encoding
÷÷I Q
.
÷÷Q R
UTF8
÷÷R V
.
÷÷V W
GetBytes
÷÷W _
(
÷÷_ `
password
÷÷` h
)
÷÷h i
)
÷÷i j
)
÷÷j k
{
◊◊ 
using
ÿÿ !
(
ÿÿ" #
CryptoStream
ÿÿ# /
	csDecrypt
ÿÿ0 9
=
ÿÿ: ;
new
ÿÿ< ?
CryptoStream
ÿÿ@ L
(
ÿÿL M
	msDecrypt
ÿÿM V
,
ÿÿV W
	decryptor
ÿÿX a
,
ÿÿa b
CryptoStreamMode
ÿÿc s
.
ÿÿs t
Read
ÿÿt x
)
ÿÿx y
)
ÿÿy z
{
ŸŸ 
using
⁄⁄  %
(
⁄⁄& '
StreamReader
⁄⁄' 3
	srDecrypt
⁄⁄4 =
=
⁄⁄> ?
new
⁄⁄@ C
StreamReader
⁄⁄D P
(
⁄⁄P Q
	csDecrypt
⁄⁄Q Z
)
⁄⁄Z [
)
⁄⁄[ \
{
€€  !
password
ﬁﬁ$ ,
=
ﬁﬁ- .
	srDecrypt
ﬁﬁ/ 8
.
ﬁﬁ8 9
	ReadToEnd
ﬁﬁ9 B
(
ﬁﬁB C
)
ﬁﬁC D
;
ﬁﬁD E
}
ﬂﬂ  !
}
‡‡ 
}
·· 
}
‚‚ 
}
„„ 
try
‰‰ 
{
ÂÂ 
using
ÁÁ 
(
ÁÁ 
SqlConnection
ÁÁ (

connection
ÁÁ) 3
=
ÁÁ4 5
new
ÁÁ6 9
SqlConnection
ÁÁ: G
(
ÁÁG H
$str
ÁÁH ~
+ÁÁ Ä
$strÁÁÅ Ö
+ÁÁÜ á
$strÁÁà î
+ÁÁï ñ
passwordÁÁó ü
)ÁÁü †
)ÁÁ† °
{
ËË 

connection
ÈÈ "
.
ÈÈ" #
Open
ÈÈ# '
(
ÈÈ' (
)
ÈÈ( )
;
ÈÈ) *
using
ÍÍ 
(
ÍÍ 

SqlCommand
ÍÍ )
command
ÍÍ* 1
=
ÍÍ2 3
new
ÍÍ4 7

SqlCommand
ÍÍ8 B
(
ÍÍB C
$str
ÍÍC ]
,
ÍÍ] ^

connection
ÍÍ_ i
)
ÍÍi j
)
ÍÍj k
{
ÎÎ 
command
ÏÏ #
.
ÏÏ# $
ExecuteNonQuery
ÏÏ$ 3
(
ÏÏ3 4
)
ÏÏ4 5
;
ÏÏ5 6
}
ÌÌ 
}
ÓÓ 
}
ÔÔ 
catch
 
(
 
SqlException
 #
	exceptSql
$ -
)
- .
{
ÒÒ 
IO
ÚÚ 
.
ÚÚ 
Logger
ÚÚ 
.
ÚÚ 
Log
ÚÚ !
(
ÚÚ! "
NLog
ÚÚ" &
.
ÚÚ& '
LogLevel
ÚÚ' /
.
ÚÚ/ 0
Warn
ÚÚ0 4
,
ÚÚ4 5
$str
ÚÚ6 V
,
ÚÚV W
	exceptSql
ÚÚX a
)
ÚÚa b
;
ÚÚb c
}
ÛÛ 
}
ÙÙ 
}
ıı 	
}
ˆˆ 
private
˘˘ 
void
˘˘ 
GoodB2G2
˘˘ 
(
˘˘ 
)
˘˘ 
{
˙˙ 
string
˚˚ 
password
˚˚ 
;
˚˚ 
if
¸¸ 

(
¸¸ 
IO
¸¸ 
.
¸¸ "
STATIC_READONLY_FIVE
¸¸ #
==
¸¸# %
$num
¸¸% &
)
¸¸& '
{
˝˝ 	
password
˛˛ 
=
˛˛ 
$str
˛˛ 
;
˛˛ 
{
ÄÄ 
try
ÅÅ 
{
ÇÇ 
using
ÉÉ 
(
ÉÉ 
	WebClient
ÉÉ $
client
ÉÉ% +
=
ÉÉ, -
new
ÉÉ. 1
	WebClient
ÉÉ2 ;
(
ÉÉ; <
)
ÉÉ< =
)
ÉÉ= >
{
ÑÑ 
using
ÖÖ 
(
ÖÖ 
StreamReader
ÖÖ +
sr
ÖÖ, .
=
ÖÖ/ 0
new
ÖÖ1 4
StreamReader
ÖÖ5 A
(
ÖÖA B
client
ÖÖB H
.
ÖÖH I
OpenRead
ÖÖI Q
(
ÖÖQ R
$str
ÖÖR k
)
ÖÖk l
)
ÖÖl m
)
ÖÖm n
{
ÜÜ 
password
ää $
=
ää% &
sr
ää' )
.
ää) *
ReadLine
ää* 2
(
ää2 3
)
ää3 4
;
ää4 5
}
ãã 
}
åå 
}
çç 
catch
éé 
(
éé 
IOException
éé "
exceptIO
éé# +
)
éé+ ,
{
èè 
IO
êê 
.
êê 
Logger
êê 
.
êê 
Log
êê !
(
êê! "
NLog
êê" &
.
êê& '
LogLevel
êê' /
.
êê/ 0
Warn
êê0 4
,
êê4 5
$str
êê6 Q
,
êêQ R
exceptIO
êêS [
)
êê[ \
;
êê\ ]
}
ëë 
}
íí 
}
ìì 	
else
îî 
{
ïï 	
password
òò 
=
òò 
null
òò 
;
òò 
}
ôô 	
if
öö 

(
öö 
IO
öö 
.
öö "
STATIC_READONLY_FIVE
öö #
==
öö# %
$num
öö% &
)
öö& '
{
õõ 	
if
úú 
(
úú 
password
úú 
!=
úú 
null
úú  
)
úú  !
{
ùù 
{
üü 
using
†† 
(
†† &
AesCryptoServiceProvider
†† 3
aesAlg
††4 :
=
††; <
new
††= @&
AesCryptoServiceProvider
††A Y
(
††Y Z
)
††Z [
)
††[ \
{
°° 
aesAlg
¢¢ 
.
¢¢ 
Padding
¢¢ &
=
¢¢' (
PaddingMode
¢¢) 4
.
¢¢4 5
None
¢¢5 9
;
¢¢9 :
aesAlg
££ 
.
££ 
Key
££ "
=
££# $
Encoding
££% -
.
££- .
UTF8
££. 2
.
££2 3
GetBytes
££3 ;
(
££; <
$str
££< N
)
££N O
;
££O P
ICryptoTransform
•• (
	decryptor
••) 2
=
••3 4
aesAlg
••5 ;
.
••; <
CreateDecryptor
••< K
(
••K L
aesAlg
••L R
.
••R S
Key
••S V
,
••V W
aesAlg
••X ^
.
••^ _
IV
••_ a
)
••a b
;
••b c
using
ßß 
(
ßß 
MemoryStream
ßß +
	msDecrypt
ßß, 5
=
ßß6 7
new
ßß8 ;
MemoryStream
ßß< H
(
ßßH I
Encoding
ßßI Q
.
ßßQ R
UTF8
ßßR V
.
ßßV W
GetBytes
ßßW _
(
ßß_ `
password
ßß` h
)
ßßh i
)
ßßi j
)
ßßj k
{
®® 
using
©© !
(
©©" #
CryptoStream
©©# /
	csDecrypt
©©0 9
=
©©: ;
new
©©< ?
CryptoStream
©©@ L
(
©©L M
	msDecrypt
©©M V
,
©©V W
	decryptor
©©X a
,
©©a b
CryptoStreamMode
©©c s
.
©©s t
Read
©©t x
)
©©x y
)
©©y z
{
™™ 
using
´´  %
(
´´& '
StreamReader
´´' 3
	srDecrypt
´´4 =
=
´´> ?
new
´´@ C
StreamReader
´´D P
(
´´P Q
	csDecrypt
´´Q Z
)
´´Z [
)
´´[ \
{
¨¨  !
password
ØØ$ ,
=
ØØ- .
	srDecrypt
ØØ/ 8
.
ØØ8 9
	ReadToEnd
ØØ9 B
(
ØØB C
)
ØØC D
;
ØØD E
}
∞∞  !
}
±± 
}
≤≤ 
}
≥≥ 
}
¥¥ 
try
µµ 
{
∂∂ 
using
∏∏ 
(
∏∏ 
SqlConnection
∏∏ (

connection
∏∏) 3
=
∏∏4 5
new
∏∏6 9
SqlConnection
∏∏: G
(
∏∏G H
$str
∏∏H ~
+∏∏ Ä
$str∏∏Å Ö
+∏∏Ü á
$str∏∏à î
+∏∏ï ñ
password∏∏ó ü
)∏∏ü †
)∏∏† °
{
ππ 

connection
∫∫ "
.
∫∫" #
Open
∫∫# '
(
∫∫' (
)
∫∫( )
;
∫∫) *
using
ªª 
(
ªª 

SqlCommand
ªª )
command
ªª* 1
=
ªª2 3
new
ªª4 7

SqlCommand
ªª8 B
(
ªªB C
$str
ªªC ]
,
ªª] ^

connection
ªª_ i
)
ªªi j
)
ªªj k
{
ºº 
command
ΩΩ #
.
ΩΩ# $
ExecuteNonQuery
ΩΩ$ 3
(
ΩΩ3 4
)
ΩΩ4 5
;
ΩΩ5 6
}
ææ 
}
øø 
}
¿¿ 
catch
¡¡ 
(
¡¡ 
SqlException
¡¡ #
	exceptSql
¡¡$ -
)
¡¡- .
{
¬¬ 
IO
√√ 
.
√√ 
Logger
√√ 
.
√√ 
Log
√√ !
(
√√! "
NLog
√√" &
.
√√& '
LogLevel
√√' /
.
√√/ 0
Warn
√√0 4
,
√√4 5
$str
√√6 V
,
√√V W
	exceptSql
√√X a
)
√√a b
;
√√b c
}
ƒƒ 
}
≈≈ 
}
∆∆ 	
}
«« 
public
…… 

override
…… 
void
…… 
Good
…… 
(
…… 
)
…… 
{
   
GoodG2B1
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
GoodG2B2
ÃÃ 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ 
GoodB2G1
ÕÕ 
(
ÕÕ 
)
ÕÕ 
;
ÕÕ 
GoodB2G2
ŒŒ 
(
ŒŒ 
)
ŒŒ 
;
ŒŒ 
}
œœ 
}—— 
}““ Æû
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_14.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class J
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_14 D
:E F
AbstractTestCaseG W
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
password## 
;## 
if$$ 

($$ 
IO$$ 
.$$ 

staticFive$$ 
==$$ 
$num$$ 
)$$ 
{%% 	
password&& 
=&& 
$str&& 
;&& 
{(( 
try)) 
{** 
using++ 
(++ 
	WebClient++ $
client++% +
=++, -
new++. 1
	WebClient++2 ;
(++; <
)++< =
)++= >
{,, 
using-- 
(-- 
StreamReader-- +
sr--, .
=--/ 0
new--1 4
StreamReader--5 A
(--A B
client--B H
.--H I
OpenRead--I Q
(--Q R
$str--R k
)--k l
)--l m
)--m n
{.. 
password22 $
=22% &
sr22' )
.22) *
ReadLine22* 2
(222 3
)223 4
;224 5
}33 
}44 
}55 
catch66 
(66 
IOException66 "
exceptIO66# +
)66+ ,
{77 
IO88 
.88 
Logger88 
.88 
Log88 !
(88! "
NLog88" &
.88& '
LogLevel88' /
.88/ 0
Warn880 4
,884 5
$str886 Q
,88Q R
exceptIO88S [
)88[ \
;88\ ]
}99 
}:: 
};; 	
else<< 
{== 	
password@@ 
=@@ 
null@@ 
;@@ 
}AA 	
ifBB 

(BB 
IOBB 
.BB 

staticFiveBB 
==BB 
$numBB 
)BB 
{CC 	
tryDD 
{EE 
usingGG 
(GG 
SqlConnectionGG $

connectionGG% /
=GG0 1
newGG2 5
SqlConnectionGG6 C
(GGC D
$strGGD z
+GG{ |
$str	GG} Å
+
GGÇ É
$str
GGÑ ê
+
GGë í
password
GGì õ
)
GGõ ú
)
GGú ù
{HH 

connectionII 
.II 
OpenII #
(II# $
)II$ %
;II% &
usingJJ 
(JJ 

SqlCommandJJ %
commandJJ& -
=JJ. /
newJJ0 3

SqlCommandJJ4 >
(JJ> ?
$strJJ? Y
,JJY Z

connectionJJ[ e
)JJe f
)JJf g
{KK 
commandLL 
.LL  
ExecuteNonQueryLL  /
(LL/ 0
)LL0 1
;LL1 2
}MM 
}NN 
}OO 
catchPP 
(PP 
SqlExceptionPP 
	exceptSqlPP  )
)PP) *
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR 
(RR 
NLogRR "
.RR" #
LogLevelRR# +
.RR+ ,
WarnRR, 0
,RR0 1
$strRR2 R
,RRR S
	exceptSqlRRT ]
)RR] ^
;RR^ _
}SS 
}TT 	
}UU 
privateYY 
voidYY 
GoodG2B1YY 
(YY 
)YY 
{ZZ 
string[[ 
password[[ 
;[[ 
if\\ 

(\\ 
IO\\ 
.\\ 

staticFive\\ 
!=\\ 
$num\\ 
)\\ 
{]] 	
password`` 
=`` 
null`` 
;`` 
}aa 	
elsebb 
{cc 	
passwordff 
=ff 
$strff &
;ff& '
}gg 	
ifhh 

(hh 
IOhh 
.hh 

staticFivehh 
==hh 
$numhh 
)hh 
{ii 	
tryjj 
{kk 
usingmm 
(mm 
SqlConnectionmm $

connectionmm% /
=mm0 1
newmm2 5
SqlConnectionmm6 C
(mmC D
$strmmD z
+mm{ |
$str	mm} Å
+
mmÇ É
$str
mmÑ ê
+
mmë í
password
mmì õ
)
mmõ ú
)
mmú ù
{nn 

connectionoo 
.oo 
Openoo #
(oo# $
)oo$ %
;oo% &
usingpp 
(pp 

SqlCommandpp %
commandpp& -
=pp. /
newpp0 3

SqlCommandpp4 >
(pp> ?
$strpp? Y
,ppY Z

connectionpp[ e
)ppe f
)ppf g
{qq 
commandrr 
.rr  
ExecuteNonQueryrr  /
(rr/ 0
)rr0 1
;rr1 2
}ss 
}tt 
}uu 
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv  )
)vv) *
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
	exceptSqlxxT ]
)xx] ^
;xx^ _
}yy 
}zz 	
}{{ 
private~~ 
void~~ 
GoodG2B2~~ 
(~~ 
)~~ 
{ 
string
ÄÄ 
password
ÄÄ 
;
ÄÄ 
if
ÅÅ 

(
ÅÅ 
IO
ÅÅ 
.
ÅÅ 

staticFive
ÅÅ 
==
ÅÅ 
$num
ÅÅ 
)
ÅÅ 
{
ÇÇ 	
password
ÖÖ 
=
ÖÖ 
$str
ÖÖ &
;
ÖÖ& '
}
ÜÜ 	
else
áá 
{
àà 	
password
ãã 
=
ãã 
null
ãã 
;
ãã 
}
åå 	
if
çç 

(
çç 
IO
çç 
.
çç 

staticFive
çç 
==
çç 
$num
çç 
)
çç 
{
éé 	
try
èè 
{
êê 
using
íí 
(
íí 
SqlConnection
íí $

connection
íí% /
=
íí0 1
new
íí2 5
SqlConnection
íí6 C
(
ííC D
$str
ííD z
+
íí{ |
$stríí} Å
+ííÇ É
$strííÑ ê
+ííë í
passwordííì õ
)ííõ ú
)ííú ù
{
ìì 

connection
îî 
.
îî 
Open
îî #
(
îî# $
)
îî$ %
;
îî% &
using
ïï 
(
ïï 

SqlCommand
ïï %
command
ïï& -
=
ïï. /
new
ïï0 3

SqlCommand
ïï4 >
(
ïï> ?
$str
ïï? Y
,
ïïY Z

connection
ïï[ e
)
ïïe f
)
ïïf g
{
ññ 
command
óó 
.
óó  
ExecuteNonQuery
óó  /
(
óó/ 0
)
óó0 1
;
óó1 2
}
òò 
}
ôô 
}
öö 
catch
õõ 
(
õõ 
SqlException
õõ 
	exceptSql
õõ  )
)
õõ) *
{
úú 
IO
ùù 
.
ùù 
Logger
ùù 
.
ùù 
Log
ùù 
(
ùù 
NLog
ùù "
.
ùù" #
LogLevel
ùù# +
.
ùù+ ,
Warn
ùù, 0
,
ùù0 1
$str
ùù2 R
,
ùùR S
	exceptSql
ùùT ]
)
ùù] ^
;
ùù^ _
}
ûû 
}
üü 	
}
†† 
private
££ 
void
££ 
GoodB2G1
££ 
(
££ 
)
££ 
{
§§ 
string
•• 
password
•• 
;
•• 
if
¶¶ 

(
¶¶ 
IO
¶¶ 
.
¶¶ 

staticFive
¶¶ 
==
¶¶ 
$num
¶¶ 
)
¶¶ 
{
ßß 	
password
®® 
=
®® 
$str
®® 
;
®® 
{
™™ 
try
´´ 
{
¨¨ 
using
≠≠ 
(
≠≠ 
	WebClient
≠≠ $
client
≠≠% +
=
≠≠, -
new
≠≠. 1
	WebClient
≠≠2 ;
(
≠≠; <
)
≠≠< =
)
≠≠= >
{
ÆÆ 
using
ØØ 
(
ØØ 
StreamReader
ØØ +
sr
ØØ, .
=
ØØ/ 0
new
ØØ1 4
StreamReader
ØØ5 A
(
ØØA B
client
ØØB H
.
ØØH I
OpenRead
ØØI Q
(
ØØQ R
$str
ØØR k
)
ØØk l
)
ØØl m
)
ØØm n
{
∞∞ 
password
¥¥ $
=
¥¥% &
sr
¥¥' )
.
¥¥) *
ReadLine
¥¥* 2
(
¥¥2 3
)
¥¥3 4
;
¥¥4 5
}
µµ 
}
∂∂ 
}
∑∑ 
catch
∏∏ 
(
∏∏ 
IOException
∏∏ "
exceptIO
∏∏# +
)
∏∏+ ,
{
ππ 
IO
∫∫ 
.
∫∫ 
Logger
∫∫ 
.
∫∫ 
Log
∫∫ !
(
∫∫! "
NLog
∫∫" &
.
∫∫& '
LogLevel
∫∫' /
.
∫∫/ 0
Warn
∫∫0 4
,
∫∫4 5
$str
∫∫6 Q
,
∫∫Q R
exceptIO
∫∫S [
)
∫∫[ \
;
∫∫\ ]
}
ªª 
}
ºº 
}
ΩΩ 	
else
ææ 
{
øø 	
password
¬¬ 
=
¬¬ 
null
¬¬ 
;
¬¬ 
}
√√ 	
if
ƒƒ 

(
ƒƒ 
IO
ƒƒ 
.
ƒƒ 

staticFive
ƒƒ 
!=
ƒƒ 
$num
ƒƒ 
)
ƒƒ 
{
≈≈ 	
IO
«« 
.
«« 
	WriteLine
«« 
(
«« 
$str
«« /
)
««/ 0
;
««0 1
}
»» 	
else
…… 
{
   	
if
ÀÀ 
(
ÀÀ 
password
ÀÀ 
!=
ÀÀ 
null
ÀÀ  
)
ÀÀ  !
{
ÃÃ 
{
ŒŒ 
using
œœ 
(
œœ &
AesCryptoServiceProvider
œœ 3
aesAlg
œœ4 :
=
œœ; <
new
œœ= @&
AesCryptoServiceProvider
œœA Y
(
œœY Z
)
œœZ [
)
œœ[ \
{
–– 
aesAlg
—— 
.
—— 
Padding
—— &
=
——' (
PaddingMode
——) 4
.
——4 5
None
——5 9
;
——9 :
aesAlg
““ 
.
““ 
Key
““ "
=
““# $
Encoding
““% -
.
““- .
UTF8
““. 2
.
““2 3
GetBytes
““3 ;
(
““; <
$str
““< N
)
““N O
;
““O P
ICryptoTransform
‘‘ (
	decryptor
‘‘) 2
=
‘‘3 4
aesAlg
‘‘5 ;
.
‘‘; <
CreateDecryptor
‘‘< K
(
‘‘K L
aesAlg
‘‘L R
.
‘‘R S
Key
‘‘S V
,
‘‘V W
aesAlg
‘‘X ^
.
‘‘^ _
IV
‘‘_ a
)
‘‘a b
;
‘‘b c
using
÷÷ 
(
÷÷ 
MemoryStream
÷÷ +
	msDecrypt
÷÷, 5
=
÷÷6 7
new
÷÷8 ;
MemoryStream
÷÷< H
(
÷÷H I
Encoding
÷÷I Q
.
÷÷Q R
UTF8
÷÷R V
.
÷÷V W
GetBytes
÷÷W _
(
÷÷_ `
password
÷÷` h
)
÷÷h i
)
÷÷i j
)
÷÷j k
{
◊◊ 
using
ÿÿ !
(
ÿÿ" #
CryptoStream
ÿÿ# /
	csDecrypt
ÿÿ0 9
=
ÿÿ: ;
new
ÿÿ< ?
CryptoStream
ÿÿ@ L
(
ÿÿL M
	msDecrypt
ÿÿM V
,
ÿÿV W
	decryptor
ÿÿX a
,
ÿÿa b
CryptoStreamMode
ÿÿc s
.
ÿÿs t
Read
ÿÿt x
)
ÿÿx y
)
ÿÿy z
{
ŸŸ 
using
⁄⁄  %
(
⁄⁄& '
StreamReader
⁄⁄' 3
	srDecrypt
⁄⁄4 =
=
⁄⁄> ?
new
⁄⁄@ C
StreamReader
⁄⁄D P
(
⁄⁄P Q
	csDecrypt
⁄⁄Q Z
)
⁄⁄Z [
)
⁄⁄[ \
{
€€  !
password
ﬁﬁ$ ,
=
ﬁﬁ- .
	srDecrypt
ﬁﬁ/ 8
.
ﬁﬁ8 9
	ReadToEnd
ﬁﬁ9 B
(
ﬁﬁB C
)
ﬁﬁC D
;
ﬁﬁD E
}
ﬂﬂ  !
}
‡‡ 
}
·· 
}
‚‚ 
}
„„ 
try
‰‰ 
{
ÂÂ 
using
ÁÁ 
(
ÁÁ 
SqlConnection
ÁÁ (

connection
ÁÁ) 3
=
ÁÁ4 5
new
ÁÁ6 9
SqlConnection
ÁÁ: G
(
ÁÁG H
$str
ÁÁH ~
+ÁÁ Ä
$strÁÁÅ Ö
+ÁÁÜ á
$strÁÁà î
+ÁÁï ñ
passwordÁÁó ü
)ÁÁü †
)ÁÁ† °
{
ËË 

connection
ÈÈ "
.
ÈÈ" #
Open
ÈÈ# '
(
ÈÈ' (
)
ÈÈ( )
;
ÈÈ) *
using
ÍÍ 
(
ÍÍ 

SqlCommand
ÍÍ )
command
ÍÍ* 1
=
ÍÍ2 3
new
ÍÍ4 7

SqlCommand
ÍÍ8 B
(
ÍÍB C
$str
ÍÍC ]
,
ÍÍ] ^

connection
ÍÍ_ i
)
ÍÍi j
)
ÍÍj k
{
ÎÎ 
command
ÏÏ #
.
ÏÏ# $
ExecuteNonQuery
ÏÏ$ 3
(
ÏÏ3 4
)
ÏÏ4 5
;
ÏÏ5 6
}
ÌÌ 
}
ÓÓ 
}
ÔÔ 
catch
 
(
 
SqlException
 #
	exceptSql
$ -
)
- .
{
ÒÒ 
IO
ÚÚ 
.
ÚÚ 
Logger
ÚÚ 
.
ÚÚ 
Log
ÚÚ !
(
ÚÚ! "
NLog
ÚÚ" &
.
ÚÚ& '
LogLevel
ÚÚ' /
.
ÚÚ/ 0
Warn
ÚÚ0 4
,
ÚÚ4 5
$str
ÚÚ6 V
,
ÚÚV W
	exceptSql
ÚÚX a
)
ÚÚa b
;
ÚÚb c
}
ÛÛ 
}
ÙÙ 
}
ıı 	
}
ˆˆ 
private
˘˘ 
void
˘˘ 
GoodB2G2
˘˘ 
(
˘˘ 
)
˘˘ 
{
˙˙ 
string
˚˚ 
password
˚˚ 
;
˚˚ 
if
¸¸ 

(
¸¸ 
IO
¸¸ 
.
¸¸ 

staticFive
¸¸ 
==
¸¸ 
$num
¸¸ 
)
¸¸ 
{
˝˝ 	
password
˛˛ 
=
˛˛ 
$str
˛˛ 
;
˛˛ 
{
ÄÄ 
try
ÅÅ 
{
ÇÇ 
using
ÉÉ 
(
ÉÉ 
	WebClient
ÉÉ $
client
ÉÉ% +
=
ÉÉ, -
new
ÉÉ. 1
	WebClient
ÉÉ2 ;
(
ÉÉ; <
)
ÉÉ< =
)
ÉÉ= >
{
ÑÑ 
using
ÖÖ 
(
ÖÖ 
StreamReader
ÖÖ +
sr
ÖÖ, .
=
ÖÖ/ 0
new
ÖÖ1 4
StreamReader
ÖÖ5 A
(
ÖÖA B
client
ÖÖB H
.
ÖÖH I
OpenRead
ÖÖI Q
(
ÖÖQ R
$str
ÖÖR k
)
ÖÖk l
)
ÖÖl m
)
ÖÖm n
{
ÜÜ 
password
ää $
=
ää% &
sr
ää' )
.
ää) *
ReadLine
ää* 2
(
ää2 3
)
ää3 4
;
ää4 5
}
ãã 
}
åå 
}
çç 
catch
éé 
(
éé 
IOException
éé "
exceptIO
éé# +
)
éé+ ,
{
èè 
IO
êê 
.
êê 
Logger
êê 
.
êê 
Log
êê !
(
êê! "
NLog
êê" &
.
êê& '
LogLevel
êê' /
.
êê/ 0
Warn
êê0 4
,
êê4 5
$str
êê6 Q
,
êêQ R
exceptIO
êêS [
)
êê[ \
;
êê\ ]
}
ëë 
}
íí 
}
ìì 	
else
îî 
{
ïï 	
password
òò 
=
òò 
null
òò 
;
òò 
}
ôô 	
if
öö 

(
öö 
IO
öö 
.
öö 

staticFive
öö 
==
öö 
$num
öö 
)
öö 
{
õõ 	
if
úú 
(
úú 
password
úú 
!=
úú 
null
úú  
)
úú  !
{
ùù 
{
üü 
using
†† 
(
†† &
AesCryptoServiceProvider
†† 3
aesAlg
††4 :
=
††; <
new
††= @&
AesCryptoServiceProvider
††A Y
(
††Y Z
)
††Z [
)
††[ \
{
°° 
aesAlg
¢¢ 
.
¢¢ 
Padding
¢¢ &
=
¢¢' (
PaddingMode
¢¢) 4
.
¢¢4 5
None
¢¢5 9
;
¢¢9 :
aesAlg
££ 
.
££ 
Key
££ "
=
££# $
Encoding
££% -
.
££- .
UTF8
££. 2
.
££2 3
GetBytes
££3 ;
(
££; <
$str
££< N
)
££N O
;
££O P
ICryptoTransform
•• (
	decryptor
••) 2
=
••3 4
aesAlg
••5 ;
.
••; <
CreateDecryptor
••< K
(
••K L
aesAlg
••L R
.
••R S
Key
••S V
,
••V W
aesAlg
••X ^
.
••^ _
IV
••_ a
)
••a b
;
••b c
using
ßß 
(
ßß 
MemoryStream
ßß +
	msDecrypt
ßß, 5
=
ßß6 7
new
ßß8 ;
MemoryStream
ßß< H
(
ßßH I
Encoding
ßßI Q
.
ßßQ R
UTF8
ßßR V
.
ßßV W
GetBytes
ßßW _
(
ßß_ `
password
ßß` h
)
ßßh i
)
ßßi j
)
ßßj k
{
®® 
using
©© !
(
©©" #
CryptoStream
©©# /
	csDecrypt
©©0 9
=
©©: ;
new
©©< ?
CryptoStream
©©@ L
(
©©L M
	msDecrypt
©©M V
,
©©V W
	decryptor
©©X a
,
©©a b
CryptoStreamMode
©©c s
.
©©s t
Read
©©t x
)
©©x y
)
©©y z
{
™™ 
using
´´  %
(
´´& '
StreamReader
´´' 3
	srDecrypt
´´4 =
=
´´> ?
new
´´@ C
StreamReader
´´D P
(
´´P Q
	csDecrypt
´´Q Z
)
´´Z [
)
´´[ \
{
¨¨  !
password
ØØ$ ,
=
ØØ- .
	srDecrypt
ØØ/ 8
.
ØØ8 9
	ReadToEnd
ØØ9 B
(
ØØB C
)
ØØC D
;
ØØD E
}
∞∞  !
}
±± 
}
≤≤ 
}
≥≥ 
}
¥¥ 
try
µµ 
{
∂∂ 
using
∏∏ 
(
∏∏ 
SqlConnection
∏∏ (

connection
∏∏) 3
=
∏∏4 5
new
∏∏6 9
SqlConnection
∏∏: G
(
∏∏G H
$str
∏∏H ~
+∏∏ Ä
$str∏∏Å Ö
+∏∏Ü á
$str∏∏à î
+∏∏ï ñ
password∏∏ó ü
)∏∏ü †
)∏∏† °
{
ππ 

connection
∫∫ "
.
∫∫" #
Open
∫∫# '
(
∫∫' (
)
∫∫( )
;
∫∫) *
using
ªª 
(
ªª 

SqlCommand
ªª )
command
ªª* 1
=
ªª2 3
new
ªª4 7

SqlCommand
ªª8 B
(
ªªB C
$str
ªªC ]
,
ªª] ^

connection
ªª_ i
)
ªªi j
)
ªªj k
{
ºº 
command
ΩΩ #
.
ΩΩ# $
ExecuteNonQuery
ΩΩ$ 3
(
ΩΩ3 4
)
ΩΩ4 5
;
ΩΩ5 6
}
ææ 
}
øø 
}
¿¿ 
catch
¡¡ 
(
¡¡ 
SqlException
¡¡ #
	exceptSql
¡¡$ -
)
¡¡- .
{
¬¬ 
IO
√√ 
.
√√ 
Logger
√√ 
.
√√ 
Log
√√ !
(
√√! "
NLog
√√" &
.
√√& '
LogLevel
√√' /
.
√√/ 0
Warn
√√0 4
,
√√4 5
$str
√√6 V
,
√√V W
	exceptSql
√√X a
)
√√a b
;
√√b c
}
ƒƒ 
}
≈≈ 
}
∆∆ 	
}
«« 
public
…… 

override
…… 
void
…… 
Good
…… 
(
…… 
)
…… 
{
   
GoodG2B1
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
GoodG2B2
ÃÃ 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ 
GoodB2G1
ÕÕ 
(
ÕÕ 
)
ÕÕ 
;
ÕÕ 
GoodB2G2
ŒŒ 
(
ŒŒ 
)
ŒŒ 
;
ŒŒ 
}
œœ 
}—— 
}““ ‚ß
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_15.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class J
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_15 D
:E F
AbstractTestCaseG W
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
password## 
;## 
switch$$ 
($$ 
$num$$ 
)$$ 
{%% 	
case&& 
$num&& 
:&& 
password'' 
='' 
$str'' 
;'' 
{)) 
try** 
{++ 
using,, 
(,, 
	WebClient,, $
client,,% +
=,,, -
new,,. 1
	WebClient,,2 ;
(,,; <
),,< =
),,= >
{-- 
using.. 
(.. 
StreamReader.. +
sr.., .
=../ 0
new..1 4
StreamReader..5 A
(..A B
client..B H
...H I
OpenRead..I Q
(..Q R
$str..R k
)..k l
)..l m
)..m n
{// 
password33 $
=33% &
sr33' )
.33) *
ReadLine33* 2
(332 3
)333 4
;334 5
}44 
}55 
}66 
catch77 
(77 
IOException77 "
exceptIO77# +
)77+ ,
{88 
IO99 
.99 
Logger99 
.99 
Log99 !
(99! "
NLog99" &
.99& '
LogLevel99' /
.99/ 0
Warn990 4
,994 5
$str996 Q
,99Q R
exceptIO99S [
)99[ \
;99\ ]
}:: 
};; 
break<< 
;<< 
default== 
:== 
password@@ 
=@@ 
null@@ 
;@@ 
breakAA 
;AA 
}BB 	
switchCC 
(CC 
$numCC 
)CC 
{DD 	
caseEE 
$numEE 
:EE 
tryFF 
{GG 
usingII 
(II 
SqlConnectionII $

connectionII% /
=II0 1
newII2 5
SqlConnectionII6 C
(IIC D
$strIID z
+II{ |
$str	II} Å
+
IIÇ É
$str
IIÑ ê
+
IIë í
password
IIì õ
)
IIõ ú
)
IIú ù
{JJ 

connectionKK 
.KK 
OpenKK #
(KK# $
)KK$ %
;KK% &
usingLL 
(LL 

SqlCommandLL %
commandLL& -
=LL. /
newLL0 3

SqlCommandLL4 >
(LL> ?
$strLL? Y
,LLY Z

connectionLL[ e
)LLe f
)LLf g
{MM 
commandNN 
.NN  
ExecuteNonQueryNN  /
(NN/ 0
)NN0 1
;NN1 2
}OO 
}PP 
}QQ 
catchRR 
(RR 
SqlExceptionRR 
	exceptSqlRR  )
)RR) *
{SS 
IOTT 
.TT 
LoggerTT 
.TT 
LogTT 
(TT 
NLogTT "
.TT" #
LogLevelTT# +
.TT+ ,
WarnTT, 0
,TT0 1
$strTT2 R
,TTR S
	exceptSqlTTT ]
)TT] ^
;TT^ _
}UU 
breakVV 
;VV 
defaultWW 
:WW 
IOYY 
.YY 
	WriteLineYY 
(YY 
$strYY /
)YY/ 0
;YY0 1
breakZZ 
;ZZ 
}[[ 	
}\\ 
private`` 
void`` 
GoodG2B1`` 
(`` 
)`` 
{aa 
stringbb 
passwordbb 
;bb 
switchcc 
(cc 
$numcc 
)cc 
{dd 	
caseee 
$numee 
:ee 
passwordhh 
=hh 
nullhh 
;hh 
breakii 
;ii 
defaultjj 
:jj 
passwordmm 
=mm 
$strmm &
;mm& '
breaknn 
;nn 
}oo 	
switchpp 
(pp 
$numpp 
)pp 
{qq 	
caserr 
$numrr 
:rr 
tryss 
{tt 
usingvv 
(vv 
SqlConnectionvv $

connectionvv% /
=vv0 1
newvv2 5
SqlConnectionvv6 C
(vvC D
$strvvD z
+vv{ |
$str	vv} Å
+
vvÇ É
$str
vvÑ ê
+
vvë í
password
vvì õ
)
vvõ ú
)
vvú ù
{ww 

connectionxx 
.xx 
Openxx #
(xx# $
)xx$ %
;xx% &
usingyy 
(yy 

SqlCommandyy %
commandyy& -
=yy. /
newyy0 3

SqlCommandyy4 >
(yy> ?
$stryy? Y
,yyY Z

connectionyy[ e
)yye f
)yyf g
{zz 
command{{ 
.{{  
ExecuteNonQuery{{  /
({{/ 0
){{0 1
;{{1 2
}|| 
}}} 
}~~ 
catch 
( 
SqlException 
	exceptSql  )
)) *
{
ÄÄ 
IO
ÅÅ 
.
ÅÅ 
Logger
ÅÅ 
.
ÅÅ 
Log
ÅÅ 
(
ÅÅ 
NLog
ÅÅ "
.
ÅÅ" #
LogLevel
ÅÅ# +
.
ÅÅ+ ,
Warn
ÅÅ, 0
,
ÅÅ0 1
$str
ÅÅ2 R
,
ÅÅR S
	exceptSql
ÅÅT ]
)
ÅÅ] ^
;
ÅÅ^ _
}
ÇÇ 
break
ÉÉ 
;
ÉÉ 
default
ÑÑ 
:
ÑÑ 
IO
ÜÜ 
.
ÜÜ 
	WriteLine
ÜÜ 
(
ÜÜ 
$str
ÜÜ /
)
ÜÜ/ 0
;
ÜÜ0 1
break
áá 
;
áá 
}
àà 	
}
ââ 
private
åå 
void
åå 
GoodG2B2
åå 
(
åå 
)
åå 
{
çç 
string
éé 
password
éé 
;
éé 
switch
èè 
(
èè 
$num
èè 
)
èè 
{
êê 	
case
ëë 
$num
ëë 
:
ëë 
password
îî 
=
îî 
$str
îî &
;
îî& '
break
ïï 
;
ïï 
default
ññ 
:
ññ 
password
ôô 
=
ôô 
null
ôô 
;
ôô 
break
öö 
;
öö 
}
õõ 	
switch
úú 
(
úú 
$num
úú 
)
úú 
{
ùù 	
case
ûû 
$num
ûû 
:
ûû 
try
üü 
{
†† 
using
¢¢ 
(
¢¢ 
SqlConnection
¢¢ $

connection
¢¢% /
=
¢¢0 1
new
¢¢2 5
SqlConnection
¢¢6 C
(
¢¢C D
$str
¢¢D z
+
¢¢{ |
$str¢¢} Å
+¢¢Ç É
$str¢¢Ñ ê
+¢¢ë í
password¢¢ì õ
)¢¢õ ú
)¢¢ú ù
{
££ 

connection
§§ 
.
§§ 
Open
§§ #
(
§§# $
)
§§$ %
;
§§% &
using
•• 
(
•• 

SqlCommand
•• %
command
••& -
=
••. /
new
••0 3

SqlCommand
••4 >
(
••> ?
$str
••? Y
,
••Y Z

connection
••[ e
)
••e f
)
••f g
{
¶¶ 
command
ßß 
.
ßß  
ExecuteNonQuery
ßß  /
(
ßß/ 0
)
ßß0 1
;
ßß1 2
}
®® 
}
©© 
}
™™ 
catch
´´ 
(
´´ 
SqlException
´´ 
	exceptSql
´´  )
)
´´) *
{
¨¨ 
IO
≠≠ 
.
≠≠ 
Logger
≠≠ 
.
≠≠ 
Log
≠≠ 
(
≠≠ 
NLog
≠≠ "
.
≠≠" #
LogLevel
≠≠# +
.
≠≠+ ,
Warn
≠≠, 0
,
≠≠0 1
$str
≠≠2 R
,
≠≠R S
	exceptSql
≠≠T ]
)
≠≠] ^
;
≠≠^ _
}
ÆÆ 
break
ØØ 
;
ØØ 
default
∞∞ 
:
∞∞ 
IO
≤≤ 
.
≤≤ 
	WriteLine
≤≤ 
(
≤≤ 
$str
≤≤ /
)
≤≤/ 0
;
≤≤0 1
break
≥≥ 
;
≥≥ 
}
¥¥ 	
}
µµ 
private
∏∏ 
void
∏∏ 
GoodB2G1
∏∏ 
(
∏∏ 
)
∏∏ 
{
ππ 
string
∫∫ 
password
∫∫ 
;
∫∫ 
switch
ªª 
(
ªª 
$num
ªª 
)
ªª 
{
ºº 	
case
ΩΩ 
$num
ΩΩ 
:
ΩΩ 
password
ææ 
=
ææ 
$str
ææ 
;
ææ 
{
¿¿ 
try
¡¡ 
{
¬¬ 
using
√√ 
(
√√ 
	WebClient
√√ $
client
√√% +
=
√√, -
new
√√. 1
	WebClient
√√2 ;
(
√√; <
)
√√< =
)
√√= >
{
ƒƒ 
using
≈≈ 
(
≈≈ 
StreamReader
≈≈ +
sr
≈≈, .
=
≈≈/ 0
new
≈≈1 4
StreamReader
≈≈5 A
(
≈≈A B
client
≈≈B H
.
≈≈H I
OpenRead
≈≈I Q
(
≈≈Q R
$str
≈≈R k
)
≈≈k l
)
≈≈l m
)
≈≈m n
{
∆∆ 
password
   $
=
  % &
sr
  ' )
.
  ) *
ReadLine
  * 2
(
  2 3
)
  3 4
;
  4 5
}
ÀÀ 
}
ÃÃ 
}
ÕÕ 
catch
ŒŒ 
(
ŒŒ 
IOException
ŒŒ "
exceptIO
ŒŒ# +
)
ŒŒ+ ,
{
œœ 
IO
–– 
.
–– 
Logger
–– 
.
–– 
Log
–– !
(
––! "
NLog
––" &
.
––& '
LogLevel
––' /
.
––/ 0
Warn
––0 4
,
––4 5
$str
––6 Q
,
––Q R
exceptIO
––S [
)
––[ \
;
––\ ]
}
—— 
}
““ 
break
”” 
;
”” 
default
‘‘ 
:
‘‘ 
password
◊◊ 
=
◊◊ 
null
◊◊ 
;
◊◊ 
break
ÿÿ 
;
ÿÿ 
}
ŸŸ 	
switch
⁄⁄ 
(
⁄⁄ 
$num
⁄⁄ 
)
⁄⁄ 
{
€€ 	
case
‹‹ 
$num
‹‹ 
:
‹‹ 
IO
ﬁﬁ 
.
ﬁﬁ 
	WriteLine
ﬁﬁ 
(
ﬁﬁ 
$str
ﬁﬁ /
)
ﬁﬁ/ 0
;
ﬁﬁ0 1
break
ﬂﬂ 
;
ﬂﬂ 
default
‡‡ 
:
‡‡ 
if
·· 
(
·· 
password
·· 
!=
·· 
null
··  
)
··  !
{
‚‚ 
{
‰‰ 
using
ÂÂ 
(
ÂÂ &
AesCryptoServiceProvider
ÂÂ 3
aesAlg
ÂÂ4 :
=
ÂÂ; <
new
ÂÂ= @&
AesCryptoServiceProvider
ÂÂA Y
(
ÂÂY Z
)
ÂÂZ [
)
ÂÂ[ \
{
ÊÊ 
aesAlg
ÁÁ 
.
ÁÁ 
Padding
ÁÁ &
=
ÁÁ' (
PaddingMode
ÁÁ) 4
.
ÁÁ4 5
None
ÁÁ5 9
;
ÁÁ9 :
aesAlg
ËË 
.
ËË 
Key
ËË "
=
ËË# $
Encoding
ËË% -
.
ËË- .
UTF8
ËË. 2
.
ËË2 3
GetBytes
ËË3 ;
(
ËË; <
$str
ËË< N
)
ËËN O
;
ËËO P
ICryptoTransform
ÍÍ (
	decryptor
ÍÍ) 2
=
ÍÍ3 4
aesAlg
ÍÍ5 ;
.
ÍÍ; <
CreateDecryptor
ÍÍ< K
(
ÍÍK L
aesAlg
ÍÍL R
.
ÍÍR S
Key
ÍÍS V
,
ÍÍV W
aesAlg
ÍÍX ^
.
ÍÍ^ _
IV
ÍÍ_ a
)
ÍÍa b
;
ÍÍb c
using
ÏÏ 
(
ÏÏ 
MemoryStream
ÏÏ +
	msDecrypt
ÏÏ, 5
=
ÏÏ6 7
new
ÏÏ8 ;
MemoryStream
ÏÏ< H
(
ÏÏH I
Encoding
ÏÏI Q
.
ÏÏQ R
UTF8
ÏÏR V
.
ÏÏV W
GetBytes
ÏÏW _
(
ÏÏ_ `
password
ÏÏ` h
)
ÏÏh i
)
ÏÏi j
)
ÏÏj k
{
ÌÌ 
using
ÓÓ !
(
ÓÓ" #
CryptoStream
ÓÓ# /
	csDecrypt
ÓÓ0 9
=
ÓÓ: ;
new
ÓÓ< ?
CryptoStream
ÓÓ@ L
(
ÓÓL M
	msDecrypt
ÓÓM V
,
ÓÓV W
	decryptor
ÓÓX a
,
ÓÓa b
CryptoStreamMode
ÓÓc s
.
ÓÓs t
Read
ÓÓt x
)
ÓÓx y
)
ÓÓy z
{
ÔÔ 
using
  %
(
& '
StreamReader
' 3
	srDecrypt
4 =
=
> ?
new
@ C
StreamReader
D P
(
P Q
	csDecrypt
Q Z
)
Z [
)
[ \
{
ÒÒ  !
password
ÙÙ$ ,
=
ÙÙ- .
	srDecrypt
ÙÙ/ 8
.
ÙÙ8 9
	ReadToEnd
ÙÙ9 B
(
ÙÙB C
)
ÙÙC D
;
ÙÙD E
}
ıı  !
}
ˆˆ 
}
˜˜ 
}
¯¯ 
}
˘˘ 
try
˙˙ 
{
˚˚ 
using
˝˝ 
(
˝˝ 
SqlConnection
˝˝ (

connection
˝˝) 3
=
˝˝4 5
new
˝˝6 9
SqlConnection
˝˝: G
(
˝˝G H
$str
˝˝H ~
+˝˝ Ä
$str˝˝Å Ö
+˝˝Ü á
$str˝˝à î
+˝˝ï ñ
password˝˝ó ü
)˝˝ü †
)˝˝† °
{
˛˛ 

connection
ˇˇ "
.
ˇˇ" #
Open
ˇˇ# '
(
ˇˇ' (
)
ˇˇ( )
;
ˇˇ) *
using
ÄÄ 
(
ÄÄ 

SqlCommand
ÄÄ )
command
ÄÄ* 1
=
ÄÄ2 3
new
ÄÄ4 7

SqlCommand
ÄÄ8 B
(
ÄÄB C
$str
ÄÄC ]
,
ÄÄ] ^

connection
ÄÄ_ i
)
ÄÄi j
)
ÄÄj k
{
ÅÅ 
command
ÇÇ #
.
ÇÇ# $
ExecuteNonQuery
ÇÇ$ 3
(
ÇÇ3 4
)
ÇÇ4 5
;
ÇÇ5 6
}
ÉÉ 
}
ÑÑ 
}
ÖÖ 
catch
ÜÜ 
(
ÜÜ 
SqlException
ÜÜ #
	exceptSql
ÜÜ$ -
)
ÜÜ- .
{
áá 
IO
àà 
.
àà 
Logger
àà 
.
àà 
Log
àà !
(
àà! "
NLog
àà" &
.
àà& '
LogLevel
àà' /
.
àà/ 0
Warn
àà0 4
,
àà4 5
$str
àà6 V
,
ààV W
	exceptSql
ààX a
)
ààa b
;
ààb c
}
ââ 
}
ää 
break
ãã 
;
ãã 
}
åå 	
}
çç 
private
êê 
void
êê 
GoodB2G2
êê 
(
êê 
)
êê 
{
ëë 
string
íí 
password
íí 
;
íí 
switch
ìì 
(
ìì 
$num
ìì 
)
ìì 
{
îî 	
case
ïï 
$num
ïï 
:
ïï 
password
ññ 
=
ññ 
$str
ññ 
;
ññ 
{
òò 
try
ôô 
{
öö 
using
õõ 
(
õõ 
	WebClient
õõ $
client
õõ% +
=
õõ, -
new
õõ. 1
	WebClient
õõ2 ;
(
õõ; <
)
õõ< =
)
õõ= >
{
úú 
using
ùù 
(
ùù 
StreamReader
ùù +
sr
ùù, .
=
ùù/ 0
new
ùù1 4
StreamReader
ùù5 A
(
ùùA B
client
ùùB H
.
ùùH I
OpenRead
ùùI Q
(
ùùQ R
$str
ùùR k
)
ùùk l
)
ùùl m
)
ùùm n
{
ûû 
password
¢¢ $
=
¢¢% &
sr
¢¢' )
.
¢¢) *
ReadLine
¢¢* 2
(
¢¢2 3
)
¢¢3 4
;
¢¢4 5
}
££ 
}
§§ 
}
•• 
catch
¶¶ 
(
¶¶ 
IOException
¶¶ "
exceptIO
¶¶# +
)
¶¶+ ,
{
ßß 
IO
®® 
.
®® 
Logger
®® 
.
®® 
Log
®® !
(
®®! "
NLog
®®" &
.
®®& '
LogLevel
®®' /
.
®®/ 0
Warn
®®0 4
,
®®4 5
$str
®®6 Q
,
®®Q R
exceptIO
®®S [
)
®®[ \
;
®®\ ]
}
©© 
}
™™ 
break
´´ 
;
´´ 
default
¨¨ 
:
¨¨ 
password
ØØ 
=
ØØ 
null
ØØ 
;
ØØ 
break
∞∞ 
;
∞∞ 
}
±± 	
switch
≤≤ 
(
≤≤ 
$num
≤≤ 
)
≤≤ 
{
≥≥ 	
case
¥¥ 
$num
¥¥ 
:
¥¥ 
if
µµ 
(
µµ 
password
µµ 
!=
µµ 
null
µµ  
)
µµ  !
{
∂∂ 
{
∏∏ 
using
ππ 
(
ππ &
AesCryptoServiceProvider
ππ 3
aesAlg
ππ4 :
=
ππ; <
new
ππ= @&
AesCryptoServiceProvider
ππA Y
(
ππY Z
)
ππZ [
)
ππ[ \
{
∫∫ 
aesAlg
ªª 
.
ªª 
Padding
ªª &
=
ªª' (
PaddingMode
ªª) 4
.
ªª4 5
None
ªª5 9
;
ªª9 :
aesAlg
ºº 
.
ºº 
Key
ºº "
=
ºº# $
Encoding
ºº% -
.
ºº- .
UTF8
ºº. 2
.
ºº2 3
GetBytes
ºº3 ;
(
ºº; <
$str
ºº< N
)
ººN O
;
ººO P
ICryptoTransform
ææ (
	decryptor
ææ) 2
=
ææ3 4
aesAlg
ææ5 ;
.
ææ; <
CreateDecryptor
ææ< K
(
ææK L
aesAlg
ææL R
.
ææR S
Key
ææS V
,
ææV W
aesAlg
ææX ^
.
ææ^ _
IV
ææ_ a
)
ææa b
;
ææb c
using
¿¿ 
(
¿¿ 
MemoryStream
¿¿ +
	msDecrypt
¿¿, 5
=
¿¿6 7
new
¿¿8 ;
MemoryStream
¿¿< H
(
¿¿H I
Encoding
¿¿I Q
.
¿¿Q R
UTF8
¿¿R V
.
¿¿V W
GetBytes
¿¿W _
(
¿¿_ `
password
¿¿` h
)
¿¿h i
)
¿¿i j
)
¿¿j k
{
¡¡ 
using
¬¬ !
(
¬¬" #
CryptoStream
¬¬# /
	csDecrypt
¬¬0 9
=
¬¬: ;
new
¬¬< ?
CryptoStream
¬¬@ L
(
¬¬L M
	msDecrypt
¬¬M V
,
¬¬V W
	decryptor
¬¬X a
,
¬¬a b
CryptoStreamMode
¬¬c s
.
¬¬s t
Read
¬¬t x
)
¬¬x y
)
¬¬y z
{
√√ 
using
ƒƒ  %
(
ƒƒ& '
StreamReader
ƒƒ' 3
	srDecrypt
ƒƒ4 =
=
ƒƒ> ?
new
ƒƒ@ C
StreamReader
ƒƒD P
(
ƒƒP Q
	csDecrypt
ƒƒQ Z
)
ƒƒZ [
)
ƒƒ[ \
{
≈≈  !
password
»»$ ,
=
»»- .
	srDecrypt
»»/ 8
.
»»8 9
	ReadToEnd
»»9 B
(
»»B C
)
»»C D
;
»»D E
}
……  !
}
   
}
ÀÀ 
}
ÃÃ 
}
ÕÕ 
try
ŒŒ 
{
œœ 
using
—— 
(
—— 
SqlConnection
—— (

connection
——) 3
=
——4 5
new
——6 9
SqlConnection
——: G
(
——G H
$str
——H ~
+—— Ä
$str——Å Ö
+——Ü á
$str——à î
+——ï ñ
password——ó ü
)——ü †
)——† °
{
““ 

connection
”” "
.
””" #
Open
””# '
(
””' (
)
””( )
;
””) *
using
‘‘ 
(
‘‘ 

SqlCommand
‘‘ )
command
‘‘* 1
=
‘‘2 3
new
‘‘4 7

SqlCommand
‘‘8 B
(
‘‘B C
$str
‘‘C ]
,
‘‘] ^

connection
‘‘_ i
)
‘‘i j
)
‘‘j k
{
’’ 
command
÷÷ #
.
÷÷# $
ExecuteNonQuery
÷÷$ 3
(
÷÷3 4
)
÷÷4 5
;
÷÷5 6
}
◊◊ 
}
ÿÿ 
}
ŸŸ 
catch
⁄⁄ 
(
⁄⁄ 
SqlException
⁄⁄ #
	exceptSql
⁄⁄$ -
)
⁄⁄- .
{
€€ 
IO
‹‹ 
.
‹‹ 
Logger
‹‹ 
.
‹‹ 
Log
‹‹ !
(
‹‹! "
NLog
‹‹" &
.
‹‹& '
LogLevel
‹‹' /
.
‹‹/ 0
Warn
‹‹0 4
,
‹‹4 5
$str
‹‹6 V
,
‹‹V W
	exceptSql
‹‹X a
)
‹‹a b
;
‹‹b c
}
›› 
}
ﬁﬁ 
break
ﬂﬂ 
;
ﬂﬂ 
default
‡‡ 
:
‡‡ 
IO
‚‚ 
.
‚‚ 
	WriteLine
‚‚ 
(
‚‚ 
$str
‚‚ /
)
‚‚/ 0
;
‚‚0 1
break
„„ 
;
„„ 
}
‰‰ 	
}
ÂÂ 
public
ÁÁ 

override
ÁÁ 
void
ÁÁ 
Good
ÁÁ 
(
ÁÁ 
)
ÁÁ 
{
ËË 
GoodG2B1
ÈÈ 
(
ÈÈ 
)
ÈÈ 
;
ÈÈ 
GoodG2B2
ÍÍ 
(
ÍÍ 
)
ÍÍ 
;
ÍÍ 
GoodB2G1
ÎÎ 
(
ÎÎ 
)
ÎÎ 
;
ÎÎ 
GoodB2G2
ÏÏ 
(
ÏÏ 
)
ÏÏ 
;
ÏÏ 
}
ÌÌ 
}ÔÔ 
} …W
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_16.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class J
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_16 D
:E F
AbstractTestCaseG W
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
password## 
;## 
while$$ 
($$ 
true$$ 
)$$ 
{%% 	
password&& 
=&& 
$str&& 
;&& 
{(( 
try)) 
{** 
using++ 
(++ 
	WebClient++ $
client++% +
=++, -
new++. 1
	WebClient++2 ;
(++; <
)++< =
)++= >
{,, 
using-- 
(-- 
StreamReader-- +
sr--, .
=--/ 0
new--1 4
StreamReader--5 A
(--A B
client--B H
.--H I
OpenRead--I Q
(--Q R
$str--R k
)--k l
)--l m
)--m n
{.. 
password22 $
=22% &
sr22' )
.22) *
ReadLine22* 2
(222 3
)223 4
;224 5
}33 
}44 
}55 
catch66 
(66 
IOException66 "
exceptIO66# +
)66+ ,
{77 
IO88 
.88 
Logger88 
.88 
Log88 !
(88! "
NLog88" &
.88& '
LogLevel88' /
.88/ 0
Warn880 4
,884 5
$str886 Q
,88Q R
exceptIO88S [
)88[ \
;88\ ]
}99 
}:: 
break;; 
;;; 
}<< 	
while== 
(== 
true== 
)== 
{>> 	
try?? 
{@@ 
usingBB 
(BB 
SqlConnectionBB $

connectionBB% /
=BB0 1
newBB2 5
SqlConnectionBB6 C
(BBC D
$strBBD z
+BB{ |
$str	BB} Å
+
BBÇ É
$str
BBÑ ê
+
BBë í
password
BBì õ
)
BBõ ú
)
BBú ù
{CC 

connectionDD 
.DD 
OpenDD #
(DD# $
)DD$ %
;DD% &
usingEE 
(EE 

SqlCommandEE %
commandEE& -
=EE. /
newEE0 3

SqlCommandEE4 >
(EE> ?
$strEE? Y
,EEY Z

connectionEE[ e
)EEe f
)EEf g
{FF 
commandGG 
.GG  
ExecuteNonQueryGG  /
(GG/ 0
)GG0 1
;GG1 2
}HH 
}II 
}JJ 
catchKK 
(KK 
SqlExceptionKK 
	exceptSqlKK  )
)KK) *
{LL 
IOMM 
.MM 
LoggerMM 
.MM 
LogMM 
(MM 
NLogMM "
.MM" #
LogLevelMM# +
.MM+ ,
WarnMM, 0
,MM0 1
$strMM2 R
,MMR S
	exceptSqlMMT ]
)MM] ^
;MM^ _
}NN 
breakOO 
;OO 
}PP 	
}QQ 
privateUU 
voidUU 
GoodG2BUU 
(UU 
)UU 
{VV 
stringWW 
passwordWW 
;WW 
whileXX 
(XX 
trueXX 
)XX 
{YY 	
password\\ 
=\\ 
$str\\ &
;\\& '
break]] 
;]] 
}^^ 	
while__ 
(__ 
true__ 
)__ 
{`` 	
tryaa 
{bb 
usingdd 
(dd 
SqlConnectiondd $

connectiondd% /
=dd0 1
newdd2 5
SqlConnectiondd6 C
(ddC D
$strddD z
+dd{ |
$str	dd} Å
+
ddÇ É
$str
ddÑ ê
+
ddë í
password
ddì õ
)
ddõ ú
)
ddú ù
{ee 

connectionff 
.ff 
Openff #
(ff# $
)ff$ %
;ff% &
usinggg 
(gg 

SqlCommandgg %
commandgg& -
=gg. /
newgg0 3

SqlCommandgg4 >
(gg> ?
$strgg? Y
,ggY Z

connectiongg[ e
)gge f
)ggf g
{hh 
commandii 
.ii  
ExecuteNonQueryii  /
(ii/ 0
)ii0 1
;ii1 2
}jj 
}kk 
}ll 
catchmm 
(mm 
SqlExceptionmm 
	exceptSqlmm  )
)mm) *
{nn 
IOoo 
.oo 
Loggeroo 
.oo 
Logoo 
(oo 
NLogoo "
.oo" #
LogLeveloo# +
.oo+ ,
Warnoo, 0
,oo0 1
$stroo2 R
,ooR S
	exceptSqlooT ]
)oo] ^
;oo^ _
}pp 
breakqq 
;qq 
}rr 	
}ss 
privatevv 
voidvv 
GoodB2Gvv 
(vv 
)vv 
{ww 
stringxx 
passwordxx 
;xx 
whileyy 
(yy 
trueyy 
)yy 
{zz 	
password{{ 
={{ 
$str{{ 
;{{ 
{}} 
try~~ 
{ 
using
ÄÄ 
(
ÄÄ 
	WebClient
ÄÄ $
client
ÄÄ% +
=
ÄÄ, -
new
ÄÄ. 1
	WebClient
ÄÄ2 ;
(
ÄÄ; <
)
ÄÄ< =
)
ÄÄ= >
{
ÅÅ 
using
ÇÇ 
(
ÇÇ 
StreamReader
ÇÇ +
sr
ÇÇ, .
=
ÇÇ/ 0
new
ÇÇ1 4
StreamReader
ÇÇ5 A
(
ÇÇA B
client
ÇÇB H
.
ÇÇH I
OpenRead
ÇÇI Q
(
ÇÇQ R
$str
ÇÇR k
)
ÇÇk l
)
ÇÇl m
)
ÇÇm n
{
ÉÉ 
password
áá $
=
áá% &
sr
áá' )
.
áá) *
ReadLine
áá* 2
(
áá2 3
)
áá3 4
;
áá4 5
}
àà 
}
ââ 
}
ää 
catch
ãã 
(
ãã 
IOException
ãã "
exceptIO
ãã# +
)
ãã+ ,
{
åå 
IO
çç 
.
çç 
Logger
çç 
.
çç 
Log
çç !
(
çç! "
NLog
çç" &
.
çç& '
LogLevel
çç' /
.
çç/ 0
Warn
çç0 4
,
çç4 5
$str
çç6 Q
,
ççQ R
exceptIO
ççS [
)
çç[ \
;
çç\ ]
}
éé 
}
èè 
break
êê 
;
êê 
}
ëë 	
while
íí 
(
íí 
true
íí 
)
íí 
{
ìì 	
if
îî 
(
îî 
password
îî 
!=
îî 
null
îî  
)
îî  !
{
ïï 
{
óó 
using
òò 
(
òò &
AesCryptoServiceProvider
òò 3
aesAlg
òò4 :
=
òò; <
new
òò= @&
AesCryptoServiceProvider
òòA Y
(
òòY Z
)
òòZ [
)
òò[ \
{
ôô 
aesAlg
öö 
.
öö 
Padding
öö &
=
öö' (
PaddingMode
öö) 4
.
öö4 5
None
öö5 9
;
öö9 :
aesAlg
õõ 
.
õõ 
Key
õõ "
=
õõ# $
Encoding
õõ% -
.
õõ- .
UTF8
õõ. 2
.
õõ2 3
GetBytes
õõ3 ;
(
õõ; <
$str
õõ< N
)
õõN O
;
õõO P
ICryptoTransform
ùù (
	decryptor
ùù) 2
=
ùù3 4
aesAlg
ùù5 ;
.
ùù; <
CreateDecryptor
ùù< K
(
ùùK L
aesAlg
ùùL R
.
ùùR S
Key
ùùS V
,
ùùV W
aesAlg
ùùX ^
.
ùù^ _
IV
ùù_ a
)
ùùa b
;
ùùb c
using
üü 
(
üü 
MemoryStream
üü +
	msDecrypt
üü, 5
=
üü6 7
new
üü8 ;
MemoryStream
üü< H
(
üüH I
Encoding
üüI Q
.
üüQ R
UTF8
üüR V
.
üüV W
GetBytes
üüW _
(
üü_ `
password
üü` h
)
üüh i
)
üüi j
)
üüj k
{
†† 
using
°° !
(
°°" #
CryptoStream
°°# /
	csDecrypt
°°0 9
=
°°: ;
new
°°< ?
CryptoStream
°°@ L
(
°°L M
	msDecrypt
°°M V
,
°°V W
	decryptor
°°X a
,
°°a b
CryptoStreamMode
°°c s
.
°°s t
Read
°°t x
)
°°x y
)
°°y z
{
¢¢ 
using
££  %
(
££& '
StreamReader
££' 3
	srDecrypt
££4 =
=
££> ?
new
££@ C
StreamReader
££D P
(
££P Q
	csDecrypt
££Q Z
)
££Z [
)
££[ \
{
§§  !
password
ßß$ ,
=
ßß- .
	srDecrypt
ßß/ 8
.
ßß8 9
	ReadToEnd
ßß9 B
(
ßßB C
)
ßßC D
;
ßßD E
}
®®  !
}
©© 
}
™™ 
}
´´ 
}
¨¨ 
try
≠≠ 
{
ÆÆ 
using
∞∞ 
(
∞∞ 
SqlConnection
∞∞ (

connection
∞∞) 3
=
∞∞4 5
new
∞∞6 9
SqlConnection
∞∞: G
(
∞∞G H
$str
∞∞H ~
+∞∞ Ä
$str∞∞Å Ö
+∞∞Ü á
$str∞∞à î
+∞∞ï ñ
password∞∞ó ü
)∞∞ü †
)∞∞† °
{
±± 

connection
≤≤ "
.
≤≤" #
Open
≤≤# '
(
≤≤' (
)
≤≤( )
;
≤≤) *
using
≥≥ 
(
≥≥ 

SqlCommand
≥≥ )
command
≥≥* 1
=
≥≥2 3
new
≥≥4 7

SqlCommand
≥≥8 B
(
≥≥B C
$str
≥≥C ]
,
≥≥] ^

connection
≥≥_ i
)
≥≥i j
)
≥≥j k
{
¥¥ 
command
µµ #
.
µµ# $
ExecuteNonQuery
µµ$ 3
(
µµ3 4
)
µµ4 5
;
µµ5 6
}
∂∂ 
}
∑∑ 
}
∏∏ 
catch
ππ 
(
ππ 
SqlException
ππ #
	exceptSql
ππ$ -
)
ππ- .
{
∫∫ 
IO
ªª 
.
ªª 
Logger
ªª 
.
ªª 
Log
ªª !
(
ªª! "
NLog
ªª" &
.
ªª& '
LogLevel
ªª' /
.
ªª/ 0
Warn
ªª0 4
,
ªª4 5
$str
ªª6 V
,
ªªV W
	exceptSql
ªªX a
)
ªªa b
;
ªªb c
}
ºº 
}
ΩΩ 
break
ææ 
;
ææ 
}
øø 	
}
¿¿ 
public
¬¬ 

override
¬¬ 
void
¬¬ 
Good
¬¬ 
(
¬¬ 
)
¬¬ 
{
√√ 
GoodG2B
ƒƒ 
(
ƒƒ 
)
ƒƒ 
;
ƒƒ 
GoodB2G
≈≈ 
(
≈≈ 
)
≈≈ 
;
≈≈ 
}
∆∆ 
}»» 
}…… ÍV
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_17.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class J
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_17 D
:E F
AbstractTestCaseG W
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
password## 
;## 
password(( 
=(( 
$str(( 
;(( 
{** 	
try++ 
{,, 
using-- 
(-- 
	WebClient--  
client--! '
=--( )
new--* -
	WebClient--. 7
(--7 8
)--8 9
)--9 :
{.. 
using// 
(// 
StreamReader// '
sr//( *
=//+ ,
new//- 0
StreamReader//1 =
(//= >
client//> D
.//D E
OpenRead//E M
(//M N
$str//N g
)//g h
)//h i
)//i j
{00 
password44  
=44! "
sr44# %
.44% &
ReadLine44& .
(44. /
)44/ 0
;440 1
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
$str::2 M
,::M N
exceptIO::O W
)::W X
;::X Y
};; 
}<< 	
for== 
(== 
int== 
j== 
=== 
$num== 
;== 
j== 
<== 
$num== 
;== 
j==  
++==  "
)==" #
{>> 	
try?? 
{@@ 
usingBB 
(BB 
SqlConnectionBB $

connectionBB% /
=BB0 1
newBB2 5
SqlConnectionBB6 C
(BBC D
$strBBD z
+BB{ |
$str	BB} Å
+
BBÇ É
$str
BBÑ ê
+
BBë í
password
BBì õ
)
BBõ ú
)
BBú ù
{CC 

connectionDD 
.DD 
OpenDD #
(DD# $
)DD$ %
;DD% &
usingEE 
(EE 

SqlCommandEE %
commandEE& -
=EE. /
newEE0 3

SqlCommandEE4 >
(EE> ?
$strEE? Y
,EEY Z

connectionEE[ e
)EEe f
)EEf g
{FF 
commandGG 
.GG  
ExecuteNonQueryGG  /
(GG/ 0
)GG0 1
;GG1 2
}HH 
}II 
}JJ 
catchKK 
(KK 
SqlExceptionKK 
	exceptSqlKK  )
)KK) *
{LL 
IOMM 
.MM 
LoggerMM 
.MM 
LogMM 
(MM 
NLogMM "
.MM" #
LogLevelMM# +
.MM+ ,
WarnMM, 0
,MM0 1
$strMM2 R
,MMR S
	exceptSqlMMT ]
)MM] ^
;MM^ _
}NN 
}OO 	
}PP 
privateTT 
voidTT 
GoodG2BTT 
(TT 
)TT 
{UU 
stringVV 
passwordVV 
;VV 
passwordYY 
=YY 
$strYY "
;YY" #
forZZ 
(ZZ 
intZZ 
jZZ 
=ZZ 
$numZZ 
;ZZ 
jZZ 
<ZZ 
$numZZ 
;ZZ 
jZZ  
++ZZ  "
)ZZ" #
{[[ 	
try\\ 
{]] 
using__ 
(__ 
SqlConnection__ $

connection__% /
=__0 1
new__2 5
SqlConnection__6 C
(__C D
$str__D z
+__{ |
$str	__} Å
+
__Ç É
$str
__Ñ ê
+
__ë í
password
__ì õ
)
__õ ú
)
__ú ù
{`` 

connectionaa 
.aa 
Openaa #
(aa# $
)aa$ %
;aa% &
usingbb 
(bb 

SqlCommandbb %
commandbb& -
=bb. /
newbb0 3

SqlCommandbb4 >
(bb> ?
$strbb? Y
,bbY Z

connectionbb[ e
)bbe f
)bbf g
{cc 
commanddd 
.dd  
ExecuteNonQuerydd  /
(dd/ 0
)dd0 1
;dd1 2
}ee 
}ff 
}gg 
catchhh 
(hh 
SqlExceptionhh 
	exceptSqlhh  )
)hh) *
{ii 
IOjj 
.jj 
Loggerjj 
.jj 
Logjj 
(jj 
NLogjj "
.jj" #
LogLeveljj# +
.jj+ ,
Warnjj, 0
,jj0 1
$strjj2 R
,jjR S
	exceptSqljjT ]
)jj] ^
;jj^ _
}kk 
}ll 	
}mm 
privatepp 
voidpp 
GoodB2Gpp 
(pp 
)pp 
{qq 
stringrr 
passwordrr 
;rr 
passwordss 
=ss 
$strss 
;ss 
{uu 	
tryvv 
{ww 
usingxx 
(xx 
	WebClientxx  
clientxx! '
=xx( )
newxx* -
	WebClientxx. 7
(xx7 8
)xx8 9
)xx9 :
{yy 
usingzz 
(zz 
StreamReaderzz '
srzz( *
=zz+ ,
newzz- 0
StreamReaderzz1 =
(zz= >
clientzz> D
.zzD E
OpenReadzzE M
(zzM N
$strzzN g
)zzg h
)zzh i
)zzi j
{{{ 
password  
=! "
sr# %
.% &
ReadLine& .
(. /
)/ 0
;0 1
}
ÄÄ 
}
ÅÅ 
}
ÇÇ 
catch
ÉÉ 
(
ÉÉ 
IOException
ÉÉ 
exceptIO
ÉÉ '
)
ÉÉ' (
{
ÑÑ 
IO
ÖÖ 
.
ÖÖ 
Logger
ÖÖ 
.
ÖÖ 
Log
ÖÖ 
(
ÖÖ 
NLog
ÖÖ "
.
ÖÖ" #
LogLevel
ÖÖ# +
.
ÖÖ+ ,
Warn
ÖÖ, 0
,
ÖÖ0 1
$str
ÖÖ2 M
,
ÖÖM N
exceptIO
ÖÖO W
)
ÖÖW X
;
ÖÖX Y
}
ÜÜ 
}
áá 	
for
àà 
(
àà 
int
àà 
k
àà 
=
àà 
$num
àà 
;
àà 
k
àà 
<
àà 
$num
àà 
;
àà 
k
àà  
++
àà  "
)
àà" #
{
ââ 	
if
ää 
(
ää 
password
ää 
!=
ää 
null
ää  
)
ää  !
{
ãã 
{
çç 
using
éé 
(
éé &
AesCryptoServiceProvider
éé 3
aesAlg
éé4 :
=
éé; <
new
éé= @&
AesCryptoServiceProvider
ééA Y
(
ééY Z
)
ééZ [
)
éé[ \
{
èè 
aesAlg
êê 
.
êê 
Padding
êê &
=
êê' (
PaddingMode
êê) 4
.
êê4 5
None
êê5 9
;
êê9 :
aesAlg
ëë 
.
ëë 
Key
ëë "
=
ëë# $
Encoding
ëë% -
.
ëë- .
UTF8
ëë. 2
.
ëë2 3
GetBytes
ëë3 ;
(
ëë; <
$str
ëë< N
)
ëëN O
;
ëëO P
ICryptoTransform
ìì (
	decryptor
ìì) 2
=
ìì3 4
aesAlg
ìì5 ;
.
ìì; <
CreateDecryptor
ìì< K
(
ììK L
aesAlg
ììL R
.
ììR S
Key
ììS V
,
ììV W
aesAlg
ììX ^
.
ìì^ _
IV
ìì_ a
)
ììa b
;
ììb c
using
ïï 
(
ïï 
MemoryStream
ïï +
	msDecrypt
ïï, 5
=
ïï6 7
new
ïï8 ;
MemoryStream
ïï< H
(
ïïH I
Encoding
ïïI Q
.
ïïQ R
UTF8
ïïR V
.
ïïV W
GetBytes
ïïW _
(
ïï_ `
password
ïï` h
)
ïïh i
)
ïïi j
)
ïïj k
{
ññ 
using
óó !
(
óó" #
CryptoStream
óó# /
	csDecrypt
óó0 9
=
óó: ;
new
óó< ?
CryptoStream
óó@ L
(
óóL M
	msDecrypt
óóM V
,
óóV W
	decryptor
óóX a
,
óóa b
CryptoStreamMode
óóc s
.
óós t
Read
óót x
)
óóx y
)
óóy z
{
òò 
using
ôô  %
(
ôô& '
StreamReader
ôô' 3
	srDecrypt
ôô4 =
=
ôô> ?
new
ôô@ C
StreamReader
ôôD P
(
ôôP Q
	csDecrypt
ôôQ Z
)
ôôZ [
)
ôô[ \
{
öö  !
password
ùù$ ,
=
ùù- .
	srDecrypt
ùù/ 8
.
ùù8 9
	ReadToEnd
ùù9 B
(
ùùB C
)
ùùC D
;
ùùD E
}
ûû  !
}
üü 
}
†† 
}
°° 
}
¢¢ 
try
££ 
{
§§ 
using
¶¶ 
(
¶¶ 
SqlConnection
¶¶ (

connection
¶¶) 3
=
¶¶4 5
new
¶¶6 9
SqlConnection
¶¶: G
(
¶¶G H
$str
¶¶H ~
+¶¶ Ä
$str¶¶Å Ö
+¶¶Ü á
$str¶¶à î
+¶¶ï ñ
password¶¶ó ü
)¶¶ü †
)¶¶† °
{
ßß 

connection
®® "
.
®®" #
Open
®®# '
(
®®' (
)
®®( )
;
®®) *
using
©© 
(
©© 

SqlCommand
©© )
command
©©* 1
=
©©2 3
new
©©4 7

SqlCommand
©©8 B
(
©©B C
$str
©©C ]
,
©©] ^

connection
©©_ i
)
©©i j
)
©©j k
{
™™ 
command
´´ #
.
´´# $
ExecuteNonQuery
´´$ 3
(
´´3 4
)
´´4 5
;
´´5 6
}
¨¨ 
}
≠≠ 
}
ÆÆ 
catch
ØØ 
(
ØØ 
SqlException
ØØ #
	exceptSql
ØØ$ -
)
ØØ- .
{
∞∞ 
IO
±± 
.
±± 
Logger
±± 
.
±± 
Log
±± !
(
±±! "
NLog
±±" &
.
±±& '
LogLevel
±±' /
.
±±/ 0
Warn
±±0 4
,
±±4 5
$str
±±6 V
,
±±V W
	exceptSql
±±X a
)
±±a b
;
±±b c
}
≤≤ 
}
≥≥ 
}
¥¥ 	
}
µµ 
public
∑∑ 

override
∑∑ 
void
∑∑ 
Good
∑∑ 
(
∑∑ 
)
∑∑ 
{
∏∏ 
GoodG2B
ππ 
(
ππ 
)
ππ 
;
ππ 
GoodB2G
∫∫ 
(
∫∫ 
)
∫∫ 
;
∫∫ 
}
ªª 
}ΩΩ 
}ææ ÿè
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_21.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class J
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_21 D
:E F
AbstractTestCaseG W
{ 
private"" 
bool"" 

badPrivate"" 
="" 
false"" #
;""# $
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
string&& 
password&& 
;&& 
password'' 
='' 
$str'' 
;'' 
{)) 	
try** 
{++ 
using,, 
(,, 
	WebClient,,  
client,,! '
=,,( )
new,,* -
	WebClient,,. 7
(,,7 8
),,8 9
),,9 :
{-- 
using.. 
(.. 
StreamReader.. '
sr..( *
=..+ ,
new..- 0
StreamReader..1 =
(..= >
client..> D
...D E
OpenRead..E M
(..M N
$str..N g
)..g h
)..h i
)..i j
{// 
password33  
=33! "
sr33# %
.33% &
ReadLine33& .
(33. /
)33/ 0
;330 1
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
$str992 M
,99M N
exceptIO99O W
)99W X
;99X Y
}:: 
};; 	

badPrivate<< 
=<< 
true<< 
;<< 
BadSink== 
(== 
password== 
)== 
;== 
}>> 
private@@ 
void@@ 
BadSink@@ 
(@@ 
string@@ 
password@@  (
)@@) *
{AA 
ifBB 

(BB 

badPrivateBB 
)BB 
{CC 	
tryDD 
{EE 
usingGG 
(GG 
SqlConnectionGG $

connectionGG% /
=GG0 1
newGG2 5
SqlConnectionGG6 C
(GGC D
$strGGD z
+GG{ |
$str	GG} Å
+
GGÇ É
$str
GGÑ ê
+
GGë í
password
GGì õ
)
GGõ ú
)
GGú ù
{HH 

connectionII 
.II 
OpenII #
(II# $
)II$ %
;II% &
usingJJ 
(JJ 

SqlCommandJJ %
commandJJ& -
=JJ. /
newJJ0 3

SqlCommandJJ4 >
(JJ> ?
$strJJ? Y
,JJY Z

connectionJJ[ e
)JJe f
)JJf g
{KK 
commandLL 
.LL  
ExecuteNonQueryLL  /
(LL/ 0
)LL0 1
;LL1 2
}MM 
}NN 
}OO 
catchPP 
(PP 
SqlExceptionPP 
	exceptSqlPP  )
)PP) *
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR 
(RR 
NLogRR "
.RR" #
LogLevelRR# +
.RR+ ,
WarnRR, 0
,RR0 1
$strRR2 R
,RRR S
	exceptSqlRRT ]
)RR] ^
;RR^ _
}SS 
}TT 	
}UU 
privateXX 
boolXX 
goodB2G1PrivateXX  
=XX! "
falseXX# (
;XX( )
privateYY 
boolYY 
goodB2G2PrivateYY  
=YY! "
falseYY# (
;YY( )
privateZZ 
boolZZ 
goodG2BPrivateZZ 
=ZZ  !
falseZZ" '
;ZZ' (
public\\ 

override\\ 
void\\ 
Good\\ 
(\\ 
)\\ 
{]] 
GoodB2G1^^ 
(^^ 
)^^ 
;^^ 
GoodB2G2__ 
(__ 
)__ 
;__ 
GoodG2B`` 
(`` 
)`` 
;`` 
}aa 
privatedd 
voiddd 
GoodB2G1dd 
(dd 
)dd 
{ee 
stringff 
passwordff 
;ff 
passwordgg 
=gg 
$strgg 
;gg 
{ii 	
tryjj 
{kk 
usingll 
(ll 
	WebClientll  
clientll! '
=ll( )
newll* -
	WebClientll. 7
(ll7 8
)ll8 9
)ll9 :
{mm 
usingnn 
(nn 
StreamReadernn '
srnn( *
=nn+ ,
newnn- 0
StreamReadernn1 =
(nn= >
clientnn> D
.nnD E
OpenReadnnE M
(nnM N
$strnnN g
)nng h
)nnh i
)nni j
{oo 
passwordss  
=ss! "
srss# %
.ss% &
ReadLiness& .
(ss. /
)ss/ 0
;ss0 1
}tt 
}uu 
}vv 
catchww 
(ww 
IOExceptionww 
exceptIOww '
)ww' (
{xx 
IOyy 
.yy 
Loggeryy 
.yy 
Logyy 
(yy 
NLogyy "
.yy" #
LogLevelyy# +
.yy+ ,
Warnyy, 0
,yy0 1
$stryy2 M
,yyM N
exceptIOyyO W
)yyW X
;yyX Y
}zz 
}{{ 	
goodB2G1Private|| 
=|| 
false|| 
;||  
GoodB2G1Sink}} 
(}} 
password}} 
)}} 
;}}  
}~~ 
private
ÄÄ 
void
ÄÄ 
GoodB2G1Sink
ÄÄ 
(
ÄÄ 
string
ÄÄ $
password
ÄÄ% -
)
ÄÄ. /
{
ÅÅ 
if
ÇÇ 

(
ÇÇ 
goodB2G1Private
ÇÇ 
)
ÇÇ 
{
ÉÉ 	
IO
ÖÖ 
.
ÖÖ 
	WriteLine
ÖÖ 
(
ÖÖ 
$str
ÖÖ /
)
ÖÖ/ 0
;
ÖÖ0 1
}
ÜÜ 	
else
áá 
{
àà 	
if
ââ 
(
ââ 
password
ââ 
!=
ââ 
null
ââ  
)
ââ  !
{
ää 
{
åå 
using
çç 
(
çç &
AesCryptoServiceProvider
çç 3
aesAlg
çç4 :
=
çç; <
new
çç= @&
AesCryptoServiceProvider
ççA Y
(
ççY Z
)
ççZ [
)
çç[ \
{
éé 
aesAlg
èè 
.
èè 
Padding
èè &
=
èè' (
PaddingMode
èè) 4
.
èè4 5
None
èè5 9
;
èè9 :
aesAlg
êê 
.
êê 
Key
êê "
=
êê# $
Encoding
êê% -
.
êê- .
UTF8
êê. 2
.
êê2 3
GetBytes
êê3 ;
(
êê; <
$str
êê< N
)
êêN O
;
êêO P
ICryptoTransform
íí (
	decryptor
íí) 2
=
íí3 4
aesAlg
íí5 ;
.
íí; <
CreateDecryptor
íí< K
(
ííK L
aesAlg
ííL R
.
ííR S
Key
ííS V
,
ííV W
aesAlg
ííX ^
.
íí^ _
IV
íí_ a
)
íía b
;
ííb c
using
îî 
(
îî 
MemoryStream
îî +
	msDecrypt
îî, 5
=
îî6 7
new
îî8 ;
MemoryStream
îî< H
(
îîH I
Encoding
îîI Q
.
îîQ R
UTF8
îîR V
.
îîV W
GetBytes
îîW _
(
îî_ `
password
îî` h
)
îîh i
)
îîi j
)
îîj k
{
ïï 
using
ññ !
(
ññ" #
CryptoStream
ññ# /
	csDecrypt
ññ0 9
=
ññ: ;
new
ññ< ?
CryptoStream
ññ@ L
(
ññL M
	msDecrypt
ññM V
,
ññV W
	decryptor
ññX a
,
ñña b
CryptoStreamMode
ññc s
.
ññs t
Read
ññt x
)
ññx y
)
ññy z
{
óó 
using
òò  %
(
òò& '
StreamReader
òò' 3
	srDecrypt
òò4 =
=
òò> ?
new
òò@ C
StreamReader
òòD P
(
òòP Q
	csDecrypt
òòQ Z
)
òòZ [
)
òò[ \
{
ôô  !
password
úú$ ,
=
úú- .
	srDecrypt
úú/ 8
.
úú8 9
	ReadToEnd
úú9 B
(
úúB C
)
úúC D
;
úúD E
}
ùù  !
}
ûû 
}
üü 
}
†† 
}
°° 
try
¢¢ 
{
££ 
using
•• 
(
•• 
SqlConnection
•• (

connection
••) 3
=
••4 5
new
••6 9
SqlConnection
••: G
(
••G H
$str
••H ~
+•• Ä
$str••Å Ö
+••Ü á
$str••à î
+••ï ñ
password••ó ü
)••ü †
)••† °
{
¶¶ 

connection
ßß "
.
ßß" #
Open
ßß# '
(
ßß' (
)
ßß( )
;
ßß) *
using
®® 
(
®® 

SqlCommand
®® )
command
®®* 1
=
®®2 3
new
®®4 7

SqlCommand
®®8 B
(
®®B C
$str
®®C ]
,
®®] ^

connection
®®_ i
)
®®i j
)
®®j k
{
©© 
command
™™ #
.
™™# $
ExecuteNonQuery
™™$ 3
(
™™3 4
)
™™4 5
;
™™5 6
}
´´ 
}
¨¨ 
}
≠≠ 
catch
ÆÆ 
(
ÆÆ 
SqlException
ÆÆ #
	exceptSql
ÆÆ$ -
)
ÆÆ- .
{
ØØ 
IO
∞∞ 
.
∞∞ 
Logger
∞∞ 
.
∞∞ 
Log
∞∞ !
(
∞∞! "
NLog
∞∞" &
.
∞∞& '
LogLevel
∞∞' /
.
∞∞/ 0
Warn
∞∞0 4
,
∞∞4 5
$str
∞∞6 V
,
∞∞V W
	exceptSql
∞∞X a
)
∞∞a b
;
∞∞b c
}
±± 
}
≤≤ 
}
≥≥ 	
}
¥¥ 
private
∑∑ 
void
∑∑ 
GoodB2G2
∑∑ 
(
∑∑ 
)
∑∑ 
{
∏∏ 
string
ππ 
password
ππ 
;
ππ 
password
∫∫ 
=
∫∫ 
$str
∫∫ 
;
∫∫ 
{
ºº 	
try
ΩΩ 
{
ææ 
using
øø 
(
øø 
	WebClient
øø  
client
øø! '
=
øø( )
new
øø* -
	WebClient
øø. 7
(
øø7 8
)
øø8 9
)
øø9 :
{
¿¿ 
using
¡¡ 
(
¡¡ 
StreamReader
¡¡ '
sr
¡¡( *
=
¡¡+ ,
new
¡¡- 0
StreamReader
¡¡1 =
(
¡¡= >
client
¡¡> D
.
¡¡D E
OpenRead
¡¡E M
(
¡¡M N
$str
¡¡N g
)
¡¡g h
)
¡¡h i
)
¡¡i j
{
¬¬ 
password
∆∆  
=
∆∆! "
sr
∆∆# %
.
∆∆% &
ReadLine
∆∆& .
(
∆∆. /
)
∆∆/ 0
;
∆∆0 1
}
«« 
}
»» 
}
…… 
catch
   
(
   
IOException
   
exceptIO
   '
)
  ' (
{
ÀÀ 
IO
ÃÃ 
.
ÃÃ 
Logger
ÃÃ 
.
ÃÃ 
Log
ÃÃ 
(
ÃÃ 
NLog
ÃÃ "
.
ÃÃ" #
LogLevel
ÃÃ# +
.
ÃÃ+ ,
Warn
ÃÃ, 0
,
ÃÃ0 1
$str
ÃÃ2 M
,
ÃÃM N
exceptIO
ÃÃO W
)
ÃÃW X
;
ÃÃX Y
}
ÕÕ 
}
ŒŒ 	
goodB2G2Private
œœ 
=
œœ 
true
œœ 
;
œœ 
GoodB2G2Sink
–– 
(
–– 
password
–– 
)
–– 
;
––  
}
—— 
private
”” 
void
”” 
GoodB2G2Sink
”” 
(
”” 
string
”” $
password
””% -
)
””. /
{
‘‘ 
if
’’ 

(
’’ 
goodB2G2Private
’’ 
)
’’ 
{
÷÷ 	
if
◊◊ 
(
◊◊ 
password
◊◊ 
!=
◊◊ 
null
◊◊  
)
◊◊  !
{
ÿÿ 
{
⁄⁄ 
using
€€ 
(
€€ &
AesCryptoServiceProvider
€€ 3
aesAlg
€€4 :
=
€€; <
new
€€= @&
AesCryptoServiceProvider
€€A Y
(
€€Y Z
)
€€Z [
)
€€[ \
{
‹‹ 
aesAlg
›› 
.
›› 
Padding
›› &
=
››' (
PaddingMode
››) 4
.
››4 5
None
››5 9
;
››9 :
aesAlg
ﬁﬁ 
.
ﬁﬁ 
Key
ﬁﬁ "
=
ﬁﬁ# $
Encoding
ﬁﬁ% -
.
ﬁﬁ- .
UTF8
ﬁﬁ. 2
.
ﬁﬁ2 3
GetBytes
ﬁﬁ3 ;
(
ﬁﬁ; <
$str
ﬁﬁ< N
)
ﬁﬁN O
;
ﬁﬁO P
ICryptoTransform
‡‡ (
	decryptor
‡‡) 2
=
‡‡3 4
aesAlg
‡‡5 ;
.
‡‡; <
CreateDecryptor
‡‡< K
(
‡‡K L
aesAlg
‡‡L R
.
‡‡R S
Key
‡‡S V
,
‡‡V W
aesAlg
‡‡X ^
.
‡‡^ _
IV
‡‡_ a
)
‡‡a b
;
‡‡b c
using
‚‚ 
(
‚‚ 
MemoryStream
‚‚ +
	msDecrypt
‚‚, 5
=
‚‚6 7
new
‚‚8 ;
MemoryStream
‚‚< H
(
‚‚H I
Encoding
‚‚I Q
.
‚‚Q R
UTF8
‚‚R V
.
‚‚V W
GetBytes
‚‚W _
(
‚‚_ `
password
‚‚` h
)
‚‚h i
)
‚‚i j
)
‚‚j k
{
„„ 
using
‰‰ !
(
‰‰" #
CryptoStream
‰‰# /
	csDecrypt
‰‰0 9
=
‰‰: ;
new
‰‰< ?
CryptoStream
‰‰@ L
(
‰‰L M
	msDecrypt
‰‰M V
,
‰‰V W
	decryptor
‰‰X a
,
‰‰a b
CryptoStreamMode
‰‰c s
.
‰‰s t
Read
‰‰t x
)
‰‰x y
)
‰‰y z
{
ÂÂ 
using
ÊÊ  %
(
ÊÊ& '
StreamReader
ÊÊ' 3
	srDecrypt
ÊÊ4 =
=
ÊÊ> ?
new
ÊÊ@ C
StreamReader
ÊÊD P
(
ÊÊP Q
	csDecrypt
ÊÊQ Z
)
ÊÊZ [
)
ÊÊ[ \
{
ÁÁ  !
password
ÍÍ$ ,
=
ÍÍ- .
	srDecrypt
ÍÍ/ 8
.
ÍÍ8 9
	ReadToEnd
ÍÍ9 B
(
ÍÍB C
)
ÍÍC D
;
ÍÍD E
}
ÎÎ  !
}
ÏÏ 
}
ÌÌ 
}
ÓÓ 
}
ÔÔ 
try
 
{
ÒÒ 
using
ÛÛ 
(
ÛÛ 
SqlConnection
ÛÛ (

connection
ÛÛ) 3
=
ÛÛ4 5
new
ÛÛ6 9
SqlConnection
ÛÛ: G
(
ÛÛG H
$str
ÛÛH ~
+ÛÛ Ä
$strÛÛÅ Ö
+ÛÛÜ á
$strÛÛà î
+ÛÛï ñ
passwordÛÛó ü
)ÛÛü †
)ÛÛ† °
{
ÙÙ 

connection
ıı "
.
ıı" #
Open
ıı# '
(
ıı' (
)
ıı( )
;
ıı) *
using
ˆˆ 
(
ˆˆ 

SqlCommand
ˆˆ )
command
ˆˆ* 1
=
ˆˆ2 3
new
ˆˆ4 7

SqlCommand
ˆˆ8 B
(
ˆˆB C
$str
ˆˆC ]
,
ˆˆ] ^

connection
ˆˆ_ i
)
ˆˆi j
)
ˆˆj k
{
˜˜ 
command
¯¯ #
.
¯¯# $
ExecuteNonQuery
¯¯$ 3
(
¯¯3 4
)
¯¯4 5
;
¯¯5 6
}
˘˘ 
}
˙˙ 
}
˚˚ 
catch
¸¸ 
(
¸¸ 
SqlException
¸¸ #
	exceptSql
¸¸$ -
)
¸¸- .
{
˝˝ 
IO
˛˛ 
.
˛˛ 
Logger
˛˛ 
.
˛˛ 
Log
˛˛ !
(
˛˛! "
NLog
˛˛" &
.
˛˛& '
LogLevel
˛˛' /
.
˛˛/ 0
Warn
˛˛0 4
,
˛˛4 5
$str
˛˛6 V
,
˛˛V W
	exceptSql
˛˛X a
)
˛˛a b
;
˛˛b c
}
ˇˇ 
}
ÄÄ 
}
ÅÅ 	
}
ÇÇ 
private
ÖÖ 
void
ÖÖ 
GoodG2B
ÖÖ 
(
ÖÖ 
)
ÖÖ 
{
ÜÜ 
string
áá 
password
áá 
;
áá 
password
ää 
=
ää 
$str
ää "
;
ää" #
goodG2BPrivate
ãã 
=
ãã 
true
ãã 
;
ãã 
GoodG2BSink
åå 
(
åå 
password
åå 
)
åå 
;
åå 
}
çç 
private
èè 
void
èè 
GoodG2BSink
èè 
(
èè 
string
èè #
password
èè$ ,
)
èè- .
{
êê 
if
ëë 

(
ëë 
goodG2BPrivate
ëë 
)
ëë 
{
íí 	
try
ìì 
{
îî 
using
ññ 
(
ññ 
SqlConnection
ññ $

connection
ññ% /
=
ññ0 1
new
ññ2 5
SqlConnection
ññ6 C
(
ññC D
$str
ññD z
+
ññ{ |
$strññ} Å
+ññÇ É
$strññÑ ê
+ññë í
passwordññì õ
)ññõ ú
)ññú ù
{
óó 

connection
òò 
.
òò 
Open
òò #
(
òò# $
)
òò$ %
;
òò% &
using
ôô 
(
ôô 

SqlCommand
ôô %
command
ôô& -
=
ôô. /
new
ôô0 3

SqlCommand
ôô4 >
(
ôô> ?
$str
ôô? Y
,
ôôY Z

connection
ôô[ e
)
ôôe f
)
ôôf g
{
öö 
command
õõ 
.
õõ  
ExecuteNonQuery
õõ  /
(
õõ/ 0
)
õõ0 1
;
õõ1 2
}
úú 
}
ùù 
}
ûû 
catch
üü 
(
üü 
SqlException
üü 
	exceptSql
üü  )
)
üü) *
{
†† 
IO
°° 
.
°° 
Logger
°° 
.
°° 
Log
°° 
(
°° 
NLog
°° "
.
°°" #
LogLevel
°°# +
.
°°+ ,
Warn
°°, 0
,
°°0 1
$str
°°2 R
,
°°R S
	exceptSql
°°T ]
)
°°] ^
;
°°^ _
}
¢¢ 
}
££ 	
}
§§ 
}¶¶ 
}ßß ©7
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_22a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_22a E
:F G
AbstractTestCaseH X
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public   

override   
void   
Bad   
(   
)   
{!! 
string"" 
password"" 
="" 
null"" 
;"" 
password## 
=## 
$str## 
;## 
{%% 	
try&& 
{'' 
using(( 
((( 
	WebClient((  
client((! '
=((( )
new((* -
	WebClient((. 7
(((7 8
)((8 9
)((9 :
{)) 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
client**> D
.**D E
OpenRead**E M
(**M N
$str**N g
)**g h
)**h i
)**i j
{++ 
password//  
=//! "
sr//# %
.//% &
ReadLine//& .
(//. /
)/// 0
;//0 1
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
$str552 M
,55M N
exceptIO55O W
)55W X
;55X Y
}66 
}77 	
badPublicStatic88 
=88 
true88 
;88 K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_22b99 G
.99G H
BadSink99H O
(99O P
password99P X
)99Y Z
;99Z [
}:: 
public== 

static== 
bool==  
goodB2G1PublicStatic== +
===, -
false==. 3
;==3 4
public>> 

static>> 
bool>>  
goodB2G2PublicStatic>> +
=>>, -
false>>. 3
;>>3 4
public?? 

static?? 
bool?? 
goodG2BPublicStatic?? *
=??+ ,
false??- 2
;??2 3
publicAA 

overrideAA 
voidAA 
GoodAA 
(AA 
)AA 
{BB 
GoodB2G1CC 
(CC 
)CC 
;CC 
GoodB2G2DD 
(DD 
)DD 
;DD 
GoodG2BEE 
(EE 
)EE 
;EE 
}FF 
privateII 
voidII 
GoodB2G1II 
(II 
)II 
{JJ 
stringKK 
passwordKK 
=KK 
nullKK 
;KK 
passwordLL 
=LL 
$strLL 
;LL 
{NN 	
tryOO 
{PP 
usingQQ 
(QQ 
	WebClientQQ  
clientQQ! '
=QQ( )
newQQ* -
	WebClientQQ. 7
(QQ7 8
)QQ8 9
)QQ9 :
{RR 
usingSS 
(SS 
StreamReaderSS '
srSS( *
=SS+ ,
newSS- 0
StreamReaderSS1 =
(SS= >
clientSS> D
.SSD E
OpenReadSSE M
(SSM N
$strSSN g
)SSg h
)SSh i
)SSi j
{TT 
passwordXX  
=XX! "
srXX# %
.XX% &
ReadLineXX& .
(XX. /
)XX/ 0
;XX0 1
}YY 
}ZZ 
}[[ 
catch\\ 
(\\ 
IOException\\ 
exceptIO\\ '
)\\' (
{]] 
IO^^ 
.^^ 
Logger^^ 
.^^ 
Log^^ 
(^^ 
NLog^^ "
.^^" #
LogLevel^^# +
.^^+ ,
Warn^^, 0
,^^0 1
$str^^2 M
,^^M N
exceptIO^^O W
)^^W X
;^^X Y
}__ 
}`` 	 
goodB2G1PublicStaticaa 
=aa 
falseaa $
;aa$ %K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_22bbb G
.bbG H
GoodB2G1SinkbbH T
(bbT U
passwordbbU ]
)bb^ _
;bb_ `
}cc 
privateff 
voidff 
GoodB2G2ff 
(ff 
)ff 
{gg 
stringhh 
passwordhh 
=hh 
nullhh 
;hh 
passwordii 
=ii 
$strii 
;ii 
{kk 	
tryll 
{mm 
usingnn 
(nn 
	WebClientnn  
clientnn! '
=nn( )
newnn* -
	WebClientnn. 7
(nn7 8
)nn8 9
)nn9 :
{oo 
usingpp 
(pp 
StreamReaderpp '
srpp( *
=pp+ ,
newpp- 0
StreamReaderpp1 =
(pp= >
clientpp> D
.ppD E
OpenReadppE M
(ppM N
$strppN g
)ppg h
)pph i
)ppi j
{qq 
passworduu  
=uu! "
sruu# %
.uu% &
ReadLineuu& .
(uu. /
)uu/ 0
;uu0 1
}vv 
}ww 
}xx 
catchyy 
(yy 
IOExceptionyy 
exceptIOyy '
)yy' (
{zz 
IO{{ 
.{{ 
Logger{{ 
.{{ 
Log{{ 
({{ 
NLog{{ "
.{{" #
LogLevel{{# +
.{{+ ,
Warn{{, 0
,{{0 1
$str{{2 M
,{{M N
exceptIO{{O W
){{W X
;{{X Y
}|| 
}}} 	 
goodB2G2PublicStatic~~ 
=~~ 
true~~ #
;~~# $K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_22b G
.G H
GoodB2G2SinkH T
(T U
passwordU ]
)^ _
;_ `
}
ÄÄ 
private
ÉÉ 
void
ÉÉ 
GoodG2B
ÉÉ 
(
ÉÉ 
)
ÉÉ 
{
ÑÑ 
string
ÖÖ 
password
ÖÖ 
=
ÖÖ 
null
ÖÖ 
;
ÖÖ 
password
àà 
=
àà 
$str
àà "
;
àà" #!
goodG2BPublicStatic
ââ 
=
ââ 
true
ââ "
;
ââ" #M
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_22b
ää G
.
ääG H
GoodG2BSink
ääH S
(
ääS T
password
ääT \
)
ää] ^
;
ää^ _
}
ãã 
}çç 
}éé Èa
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_22b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_22b E
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   
if!! 

(!! K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_22a!! K
.!!K L
badPublicStatic!!L [
)!![ \
{"" 	
try## 
{$$ 
using&& 
(&& 
SqlConnection&& $

connection&&% /
=&&0 1
new&&2 5
SqlConnection&&6 C
(&&C D
$str&&D z
+&&{ |
$str	&&} Å
+
&&Ç É
$str
&&Ñ ê
+
&&ë í
password
&&ì õ
)
&&õ ú
)
&&ú ù
{'' 

connection(( 
.(( 
Open(( #
(((# $
)(($ %
;((% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
$str))? Y
,))Y Z

connection))[ e
)))e f
)))f g
{** 
command++ 
.++  
ExecuteNonQuery++  /
(++/ 0
)++0 1
;++1 2
},, 
}-- 
}.. 
catch// 
(// 
SqlException// 
	exceptSql//  )
)//) *
{00 
IO11 
.11 
Logger11 
.11 
Log11 
(11 
NLog11 "
.11" #
LogLevel11# +
.11+ ,
Warn11, 0
,110 1
$str112 R
,11R S
	exceptSql11T ]
)11] ^
;11^ _
}22 
}33 	
else44 
{55 	
password88 
=88 
null88 
;88 
}99 	
}:: 
public?? 

static?? 
void?? 
GoodB2G1Sink?? #
(??# $
string??$ *
password??+ 3
)??4 5
{@@ 
ifAA 

(AA K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_22aAA K
.AAK L 
goodB2G1PublicStaticAAL `
)AA` a
{BB 	
passwordEE 
=EE 
nullEE 
;EE 
}FF 	
elseGG 
{HH 	
ifII 
(II 
passwordII 
!=II 
nullII  
)II  !
{JJ 
{LL 
usingMM 
(MM $
AesCryptoServiceProviderMM 3
aesAlgMM4 :
=MM; <
newMM= @$
AesCryptoServiceProviderMMA Y
(MMY Z
)MMZ [
)MM[ \
{NN 
aesAlgOO 
.OO 
PaddingOO &
=OO' (
PaddingModeOO) 4
.OO4 5
NoneOO5 9
;OO9 :
aesAlgPP 
.PP 
KeyPP "
=PP# $
EncodingPP% -
.PP- .
UTF8PP. 2
.PP2 3
GetBytesPP3 ;
(PP; <
$strPP< N
)PPN O
;PPO P
ICryptoTransformRR (
	decryptorRR) 2
=RR3 4
aesAlgRR5 ;
.RR; <
CreateDecryptorRR< K
(RRK L
aesAlgRRL R
.RRR S
KeyRRS V
,RRV W
aesAlgRRX ^
.RR^ _
IVRR_ a
)RRa b
;RRb c
usingTT 
(TT 
MemoryStreamTT +
	msDecryptTT, 5
=TT6 7
newTT8 ;
MemoryStreamTT< H
(TTH I
EncodingTTI Q
.TTQ R
UTF8TTR V
.TTV W
GetBytesTTW _
(TT_ `
passwordTT` h
)TTh i
)TTi j
)TTj k
{UU 
usingVV !
(VV" #
CryptoStreamVV# /
	csDecryptVV0 9
=VV: ;
newVV< ?
CryptoStreamVV@ L
(VVL M
	msDecryptVVM V
,VVV W
	decryptorVVX a
,VVa b
CryptoStreamModeVVc s
.VVs t
ReadVVt x
)VVx y
)VVy z
{WW 
usingXX  %
(XX& '
StreamReaderXX' 3
	srDecryptXX4 =
=XX> ?
newXX@ C
StreamReaderXXD P
(XXP Q
	csDecryptXXQ Z
)XXZ [
)XX[ \
{YY  !
password\\$ ,
=\\- .
	srDecrypt\\/ 8
.\\8 9
	ReadToEnd\\9 B
(\\B C
)\\C D
;\\D E
}]]  !
}^^ 
}__ 
}`` 
}aa 
trybb 
{cc 
usingee 
(ee 
SqlConnectionee (

connectionee) 3
=ee4 5
newee6 9
SqlConnectionee: G
(eeG H
$streeH ~
+	ee Ä
$str
eeÅ Ö
+
eeÜ á
$str
eeà î
+
eeï ñ
password
eeó ü
)
eeü †
)
ee† °
{ff 

connectiongg "
.gg" #
Opengg# '
(gg' (
)gg( )
;gg) *
usinghh 
(hh 

SqlCommandhh )
commandhh* 1
=hh2 3
newhh4 7

SqlCommandhh8 B
(hhB C
$strhhC ]
,hh] ^

connectionhh_ i
)hhi j
)hhj k
{ii 
commandjj #
.jj# $
ExecuteNonQueryjj$ 3
(jj3 4
)jj4 5
;jj5 6
}kk 
}ll 
}mm 
catchnn 
(nn 
SqlExceptionnn #
	exceptSqlnn$ -
)nn- .
{oo 
IOpp 
.pp 
Loggerpp 
.pp 
Logpp !
(pp! "
NLogpp" &
.pp& '
LogLevelpp' /
.pp/ 0
Warnpp0 4
,pp4 5
$strpp6 V
,ppV W
	exceptSqlppX a
)ppa b
;ppb c
}qq 
}rr 
}ss 	
}tt 
publicww 

staticww 
voidww 
GoodB2G2Sinkww #
(ww# $
stringww$ *
passwordww+ 3
)ww4 5
{xx 
ifyy 

(yy K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_22ayy K
.yyK L 
goodB2G2PublicStaticyyL `
)yy` a
{zz 	
if{{ 
({{ 
password{{ 
!={{ 
null{{  
){{  !
{|| 
{~~ 
using 
( $
AesCryptoServiceProvider 3
aesAlg4 :
=; <
new= @$
AesCryptoServiceProviderA Y
(Y Z
)Z [
)[ \
{
ÄÄ 
aesAlg
ÅÅ 
.
ÅÅ 
Padding
ÅÅ &
=
ÅÅ' (
PaddingMode
ÅÅ) 4
.
ÅÅ4 5
None
ÅÅ5 9
;
ÅÅ9 :
aesAlg
ÇÇ 
.
ÇÇ 
Key
ÇÇ "
=
ÇÇ# $
Encoding
ÇÇ% -
.
ÇÇ- .
UTF8
ÇÇ. 2
.
ÇÇ2 3
GetBytes
ÇÇ3 ;
(
ÇÇ; <
$str
ÇÇ< N
)
ÇÇN O
;
ÇÇO P
ICryptoTransform
ÑÑ (
	decryptor
ÑÑ) 2
=
ÑÑ3 4
aesAlg
ÑÑ5 ;
.
ÑÑ; <
CreateDecryptor
ÑÑ< K
(
ÑÑK L
aesAlg
ÑÑL R
.
ÑÑR S
Key
ÑÑS V
,
ÑÑV W
aesAlg
ÑÑX ^
.
ÑÑ^ _
IV
ÑÑ_ a
)
ÑÑa b
;
ÑÑb c
using
ÜÜ 
(
ÜÜ 
MemoryStream
ÜÜ +
	msDecrypt
ÜÜ, 5
=
ÜÜ6 7
new
ÜÜ8 ;
MemoryStream
ÜÜ< H
(
ÜÜH I
Encoding
ÜÜI Q
.
ÜÜQ R
UTF8
ÜÜR V
.
ÜÜV W
GetBytes
ÜÜW _
(
ÜÜ_ `
password
ÜÜ` h
)
ÜÜh i
)
ÜÜi j
)
ÜÜj k
{
áá 
using
àà !
(
àà" #
CryptoStream
àà# /
	csDecrypt
àà0 9
=
àà: ;
new
àà< ?
CryptoStream
àà@ L
(
ààL M
	msDecrypt
ààM V
,
ààV W
	decryptor
ààX a
,
ààa b
CryptoStreamMode
ààc s
.
ààs t
Read
ààt x
)
ààx y
)
àày z
{
ââ 
using
ää  %
(
ää& '
StreamReader
ää' 3
	srDecrypt
ää4 =
=
ää> ?
new
ää@ C
StreamReader
ääD P
(
ääP Q
	csDecrypt
ääQ Z
)
ääZ [
)
ää[ \
{
ãã  !
password
éé$ ,
=
éé- .
	srDecrypt
éé/ 8
.
éé8 9
	ReadToEnd
éé9 B
(
ééB C
)
ééC D
;
ééD E
}
èè  !
}
êê 
}
ëë 
}
íí 
}
ìì 
try
îî 
{
ïï 
using
óó 
(
óó 
SqlConnection
óó (

connection
óó) 3
=
óó4 5
new
óó6 9
SqlConnection
óó: G
(
óóG H
$str
óóH ~
+óó Ä
$stróóÅ Ö
+óóÜ á
$stróóà î
+óóï ñ
passwordóóó ü
)óóü †
)óó† °
{
òò 

connection
ôô "
.
ôô" #
Open
ôô# '
(
ôô' (
)
ôô( )
;
ôô) *
using
öö 
(
öö 

SqlCommand
öö )
command
öö* 1
=
öö2 3
new
öö4 7

SqlCommand
öö8 B
(
ööB C
$str
ööC ]
,
öö] ^

connection
öö_ i
)
ööi j
)
ööj k
{
õõ 
command
úú #
.
úú# $
ExecuteNonQuery
úú$ 3
(
úú3 4
)
úú4 5
;
úú5 6
}
ùù 
}
ûû 
}
üü 
catch
†† 
(
†† 
SqlException
†† #
	exceptSql
††$ -
)
††- .
{
°° 
IO
¢¢ 
.
¢¢ 
Logger
¢¢ 
.
¢¢ 
Log
¢¢ !
(
¢¢! "
NLog
¢¢" &
.
¢¢& '
LogLevel
¢¢' /
.
¢¢/ 0
Warn
¢¢0 4
,
¢¢4 5
$str
¢¢6 V
,
¢¢V W
	exceptSql
¢¢X a
)
¢¢a b
;
¢¢b c
}
££ 
}
§§ 
}
•• 	
else
¶¶ 
{
ßß 	
password
™™ 
=
™™ 
null
™™ 
;
™™ 
}
´´ 	
}
¨¨ 
public
ØØ 

static
ØØ 
void
ØØ 
GoodG2BSink
ØØ "
(
ØØ" #
string
ØØ# )
password
ØØ* 2
)
ØØ3 4
{
∞∞ 
if
±± 

(
±± M
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_22a
±± K
.
±±K L!
goodG2BPublicStatic
±±L _
)
±±_ `
{
≤≤ 	
try
≥≥ 
{
¥¥ 
using
∂∂ 
(
∂∂ 
SqlConnection
∂∂ $

connection
∂∂% /
=
∂∂0 1
new
∂∂2 5
SqlConnection
∂∂6 C
(
∂∂C D
$str
∂∂D z
+
∂∂{ |
$str∂∂} Å
+∂∂Ç É
$str∂∂Ñ ê
+∂∂ë í
password∂∂ì õ
)∂∂õ ú
)∂∂ú ù
{
∑∑ 

connection
∏∏ 
.
∏∏ 
Open
∏∏ #
(
∏∏# $
)
∏∏$ %
;
∏∏% &
using
ππ 
(
ππ 

SqlCommand
ππ %
command
ππ& -
=
ππ. /
new
ππ0 3

SqlCommand
ππ4 >
(
ππ> ?
$str
ππ? Y
,
ππY Z

connection
ππ[ e
)
ππe f
)
ππf g
{
∫∫ 
command
ªª 
.
ªª  
ExecuteNonQuery
ªª  /
(
ªª/ 0
)
ªª0 1
;
ªª1 2
}
ºº 
}
ΩΩ 
}
ææ 
catch
øø 
(
øø 
SqlException
øø 
	exceptSql
øø  )
)
øø) *
{
¿¿ 
IO
¡¡ 
.
¡¡ 
Logger
¡¡ 
.
¡¡ 
Log
¡¡ 
(
¡¡ 
NLog
¡¡ "
.
¡¡" #
LogLevel
¡¡# +
.
¡¡+ ,
Warn
¡¡, 0
,
¡¡0 1
$str
¡¡2 R
,
¡¡R S
	exceptSql
¡¡T ]
)
¡¡] ^
;
¡¡^ _
}
¬¬ 
}
√√ 	
else
ƒƒ 
{
≈≈ 	
password
»» 
=
»» 
null
»» 
;
»» 
}
…… 	
}
   
}ÃÃ 
}ÕÕ öX
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_31.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class J
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_31 D
:E F
AbstractTestCaseG W
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
passwordCopy## 
;## 
{$$ 	
string%% 
password%% 
;%% 
password&& 
=&& 
$str&& 
;&& 
{(( 
try)) 
{** 
using++ 
(++ 
	WebClient++ $
client++% +
=++, -
new++. 1
	WebClient++2 ;
(++; <
)++< =
)++= >
{,, 
using-- 
(-- 
StreamReader-- +
sr--, .
=--/ 0
new--1 4
StreamReader--5 A
(--A B
client--B H
.--H I
OpenRead--I Q
(--Q R
$str--R k
)--k l
)--l m
)--m n
{.. 
password22 $
=22% &
sr22' )
.22) *
ReadLine22* 2
(222 3
)223 4
;224 5
}33 
}44 
}55 
catch66 
(66 
IOException66 "
exceptIO66# +
)66+ ,
{77 
IO88 
.88 
Logger88 
.88 
Log88 !
(88! "
NLog88" &
.88& '
LogLevel88' /
.88/ 0
Warn880 4
,884 5
$str886 Q
,88Q R
exceptIO88S [
)88[ \
;88\ ]
}99 
}:: 
passwordCopy;; 
=;; 
password;; #
;;;# $
}<< 	
{== 	
string>> 
password>> 
=>> 
passwordCopy>> *
;>>* +
try?? 
{@@ 
usingBB 
(BB 
SqlConnectionBB $

connectionBB% /
=BB0 1
newBB2 5
SqlConnectionBB6 C
(BBC D
$strBBD z
+BB{ |
$str	BB} Å
+
BBÇ É
$str
BBÑ ê
+
BBë í
password
BBì õ
)
BBõ ú
)
BBú ù
{CC 

connectionDD 
.DD 
OpenDD #
(DD# $
)DD$ %
;DD% &
usingEE 
(EE 

SqlCommandEE %
commandEE& -
=EE. /
newEE0 3

SqlCommandEE4 >
(EE> ?
$strEE? Y
,EEY Z

connectionEE[ e
)EEe f
)EEf g
{FF 
commandGG 
.GG  
ExecuteNonQueryGG  /
(GG/ 0
)GG0 1
;GG1 2
}HH 
}II 
}JJ 
catchKK 
(KK 
SqlExceptionKK 
	exceptSqlKK  )
)KK) *
{LL 
IOMM 
.MM 
LoggerMM 
.MM 
LogMM 
(MM 
NLogMM "
.MM" #
LogLevelMM# +
.MM+ ,
WarnMM, 0
,MM0 1
$strMM2 R
,MMR S
	exceptSqlMMT ]
)MM] ^
;MM^ _
}NN 
}OO 	
}PP 
publicSS 

overrideSS 
voidSS 
GoodSS 
(SS 
)SS 
{TT 
GoodG2BUU 
(UU 
)UU 
;UU 
GoodB2GVV 
(VV 
)VV 
;VV 
}WW 
privateZZ 
voidZZ 
GoodG2BZZ 
(ZZ 
)ZZ 
{[[ 
string\\ 
passwordCopy\\ 
;\\ 
{]] 	
string^^ 
password^^ 
;^^ 
passwordaa 
=aa 
$straa &
;aa& '
passwordCopybb 
=bb 
passwordbb #
;bb# $
}cc 	
{dd 	
stringee 
passwordee 
=ee 
passwordCopyee *
;ee* +
tryff 
{gg 
usingii 
(ii 
SqlConnectionii $

connectionii% /
=ii0 1
newii2 5
SqlConnectionii6 C
(iiC D
$striiD z
+ii{ |
$str	ii} Å
+
iiÇ É
$str
iiÑ ê
+
iië í
password
iiì õ
)
iiõ ú
)
iiú ù
{jj 

connectionkk 
.kk 
Openkk #
(kk# $
)kk$ %
;kk% &
usingll 
(ll 

SqlCommandll %
commandll& -
=ll. /
newll0 3

SqlCommandll4 >
(ll> ?
$strll? Y
,llY Z

connectionll[ e
)lle f
)llf g
{mm 
commandnn 
.nn  
ExecuteNonQuerynn  /
(nn/ 0
)nn0 1
;nn1 2
}oo 
}pp 
}qq 
catchrr 
(rr 
SqlExceptionrr 
	exceptSqlrr  )
)rr) *
{ss 
IOtt 
.tt 
Loggertt 
.tt 
Logtt 
(tt 
NLogtt "
.tt" #
LogLeveltt# +
.tt+ ,
Warntt, 0
,tt0 1
$strtt2 R
,ttR S
	exceptSqlttT ]
)tt] ^
;tt^ _
}uu 
}vv 	
}ww 
privatezz 
voidzz 
GoodB2Gzz 
(zz 
)zz 
{{{ 
string|| 
passwordCopy|| 
;|| 
{}} 	
string~~ 
password~~ 
;~~ 
password 
= 
$str 
; 
{
ÅÅ 
try
ÇÇ 
{
ÉÉ 
using
ÑÑ 
(
ÑÑ 
	WebClient
ÑÑ $
client
ÑÑ% +
=
ÑÑ, -
new
ÑÑ. 1
	WebClient
ÑÑ2 ;
(
ÑÑ; <
)
ÑÑ< =
)
ÑÑ= >
{
ÖÖ 
using
ÜÜ 
(
ÜÜ 
StreamReader
ÜÜ +
sr
ÜÜ, .
=
ÜÜ/ 0
new
ÜÜ1 4
StreamReader
ÜÜ5 A
(
ÜÜA B
client
ÜÜB H
.
ÜÜH I
OpenRead
ÜÜI Q
(
ÜÜQ R
$str
ÜÜR k
)
ÜÜk l
)
ÜÜl m
)
ÜÜm n
{
áá 
password
ãã $
=
ãã% &
sr
ãã' )
.
ãã) *
ReadLine
ãã* 2
(
ãã2 3
)
ãã3 4
;
ãã4 5
}
åå 
}
çç 
}
éé 
catch
èè 
(
èè 
IOException
èè "
exceptIO
èè# +
)
èè+ ,
{
êê 
IO
ëë 
.
ëë 
Logger
ëë 
.
ëë 
Log
ëë !
(
ëë! "
NLog
ëë" &
.
ëë& '
LogLevel
ëë' /
.
ëë/ 0
Warn
ëë0 4
,
ëë4 5
$str
ëë6 Q
,
ëëQ R
exceptIO
ëëS [
)
ëë[ \
;
ëë\ ]
}
íí 
}
ìì 
passwordCopy
îî 
=
îî 
password
îî #
;
îî# $
}
ïï 	
{
ññ 	
string
óó 
password
óó 
=
óó 
passwordCopy
óó *
;
óó* +
if
òò 
(
òò 
password
òò 
!=
òò 
null
òò  
)
òò  !
{
ôô 
{
õõ 
using
úú 
(
úú &
AesCryptoServiceProvider
úú 3
aesAlg
úú4 :
=
úú; <
new
úú= @&
AesCryptoServiceProvider
úúA Y
(
úúY Z
)
úúZ [
)
úú[ \
{
ùù 
aesAlg
ûû 
.
ûû 
Padding
ûû &
=
ûû' (
PaddingMode
ûû) 4
.
ûû4 5
None
ûû5 9
;
ûû9 :
aesAlg
üü 
.
üü 
Key
üü "
=
üü# $
Encoding
üü% -
.
üü- .
UTF8
üü. 2
.
üü2 3
GetBytes
üü3 ;
(
üü; <
$str
üü< N
)
üüN O
;
üüO P
ICryptoTransform
°° (
	decryptor
°°) 2
=
°°3 4
aesAlg
°°5 ;
.
°°; <
CreateDecryptor
°°< K
(
°°K L
aesAlg
°°L R
.
°°R S
Key
°°S V
,
°°V W
aesAlg
°°X ^
.
°°^ _
IV
°°_ a
)
°°a b
;
°°b c
using
££ 
(
££ 
MemoryStream
££ +
	msDecrypt
££, 5
=
££6 7
new
££8 ;
MemoryStream
££< H
(
££H I
Encoding
££I Q
.
££Q R
UTF8
££R V
.
££V W
GetBytes
££W _
(
££_ `
password
££` h
)
££h i
)
££i j
)
££j k
{
§§ 
using
•• !
(
••" #
CryptoStream
••# /
	csDecrypt
••0 9
=
••: ;
new
••< ?
CryptoStream
••@ L
(
••L M
	msDecrypt
••M V
,
••V W
	decryptor
••X a
,
••a b
CryptoStreamMode
••c s
.
••s t
Read
••t x
)
••x y
)
••y z
{
¶¶ 
using
ßß  %
(
ßß& '
StreamReader
ßß' 3
	srDecrypt
ßß4 =
=
ßß> ?
new
ßß@ C
StreamReader
ßßD P
(
ßßP Q
	csDecrypt
ßßQ Z
)
ßßZ [
)
ßß[ \
{
®®  !
password
´´$ ,
=
´´- .
	srDecrypt
´´/ 8
.
´´8 9
	ReadToEnd
´´9 B
(
´´B C
)
´´C D
;
´´D E
}
¨¨  !
}
≠≠ 
}
ÆÆ 
}
ØØ 
}
∞∞ 
try
±± 
{
≤≤ 
using
¥¥ 
(
¥¥ 
SqlConnection
¥¥ (

connection
¥¥) 3
=
¥¥4 5
new
¥¥6 9
SqlConnection
¥¥: G
(
¥¥G H
$str
¥¥H ~
+¥¥ Ä
$str¥¥Å Ö
+¥¥Ü á
$str¥¥à î
+¥¥ï ñ
password¥¥ó ü
)¥¥ü †
)¥¥† °
{
µµ 

connection
∂∂ "
.
∂∂" #
Open
∂∂# '
(
∂∂' (
)
∂∂( )
;
∂∂) *
using
∑∑ 
(
∑∑ 

SqlCommand
∑∑ )
command
∑∑* 1
=
∑∑2 3
new
∑∑4 7

SqlCommand
∑∑8 B
(
∑∑B C
$str
∑∑C ]
,
∑∑] ^

connection
∑∑_ i
)
∑∑i j
)
∑∑j k
{
∏∏ 
command
ππ #
.
ππ# $
ExecuteNonQuery
ππ$ 3
(
ππ3 4
)
ππ4 5
;
ππ5 6
}
∫∫ 
}
ªª 
}
ºº 
catch
ΩΩ 
(
ΩΩ 
SqlException
ΩΩ #
	exceptSql
ΩΩ$ -
)
ΩΩ- .
{
ææ 
IO
øø 
.
øø 
Logger
øø 
.
øø 
Log
øø !
(
øø! "
NLog
øø" &
.
øø& '
LogLevel
øø' /
.
øø/ 0
Warn
øø0 4
,
øø4 5
$str
øø6 V
,
øøV W
	exceptSql
øøX a
)
øøa b
;
øøb c
}
¿¿ 
}
¡¡ 
}
¬¬ 	
}
√√ 
}≈≈ 
}∆∆ πW
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_41.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class J
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_41 D
:E F
AbstractTestCaseG W
{ 
private!! 
static!! 
void!! 
BadSink!! 
(!!  
string!!  &
password!!' /
)!!0 1
{"" 
try## 
{$$ 	
using&& 
(&& 
SqlConnection&&  

connection&&! +
=&&, -
new&&. 1
SqlConnection&&2 ?
(&&? @
$str&&@ v
+&&w x
$str&&y }
+&&~ 
$str
&&Ä å
+
&&ç é
password
&&è ó
)
&&ó ò
)
&&ò ô
{'' 

connection(( 
.(( 
Open(( 
(((  
)((  !
;((! "
using)) 
()) 

SqlCommand)) !
command))" )
=))* +
new)), /

SqlCommand))0 :
()): ;
$str)); U
,))U V

connection))W a
)))a b
)))b c
{** 
command++ 
.++ 
ExecuteNonQuery++ +
(+++ ,
)++, -
;++- .
},, 
}-- 
}.. 	
catch// 
(// 
SqlException// 
	exceptSql// %
)//% &
{00 	
IO11 
.11 
Logger11 
.11 
Log11 
(11 
NLog11 
.11 
LogLevel11 '
.11' (
Warn11( ,
,11, -
$str11. N
,11N O
	exceptSql11P Y
)11Y Z
;11Z [
}22 	
}33 
public55 

override55 
void55 
Bad55 
(55 
)55 
{66 
string77 
password77 
;77 
password88 
=88 
$str88 
;88 
{:: 	
try;; 
{<< 
using== 
(== 
	WebClient==  
client==! '
===( )
new==* -
	WebClient==. 7
(==7 8
)==8 9
)==9 :
{>> 
using?? 
(?? 
StreamReader?? '
sr??( *
=??+ ,
new??- 0
StreamReader??1 =
(??= >
client??> D
.??D E
OpenRead??E M
(??M N
$str??N g
)??g h
)??h i
)??i j
{@@ 
passwordDD  
=DD! "
srDD# %
.DD% &
ReadLineDD& .
(DD. /
)DD/ 0
;DD0 1
}EE 
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH 
exceptIOHH '
)HH' (
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ 
(JJ 
NLogJJ "
.JJ" #
LogLevelJJ# +
.JJ+ ,
WarnJJ, 0
,JJ0 1
$strJJ2 M
,JJM N
exceptIOJJO W
)JJW X
;JJX Y
}KK 
}LL 	
BadSinkMM 
(MM 
passwordMM 
)MM 
;MM 
}NN 
publicQQ 

overrideQQ 
voidQQ 
GoodQQ 
(QQ 
)QQ 
{RR 
GoodG2BSS 
(SS 
)SS 
;SS 
GoodB2GTT 
(TT 
)TT 
;TT 
}UU 
privateWW 
staticWW 
voidWW 
GoodG2BSinkWW #
(WW# $
stringWW$ *
passwordWW+ 3
)WW4 5
{XX 
tryYY 
{ZZ 	
using\\ 
(\\ 
SqlConnection\\  

connection\\! +
=\\, -
new\\. 1
SqlConnection\\2 ?
(\\? @
$str\\@ v
+\\w x
$str\\y }
+\\~ 
$str
\\Ä å
+
\\ç é
password
\\è ó
)
\\ó ò
)
\\ò ô
{]] 

connection^^ 
.^^ 
Open^^ 
(^^  
)^^  !
;^^! "
using__ 
(__ 

SqlCommand__ !
command__" )
=__* +
new__, /

SqlCommand__0 :
(__: ;
$str__; U
,__U V

connection__W a
)__a b
)__b c
{`` 
commandaa 
.aa 
ExecuteNonQueryaa +
(aa+ ,
)aa, -
;aa- .
}bb 
}cc 
}dd 	
catchee 
(ee 
SqlExceptionee 
	exceptSqlee %
)ee% &
{ff 	
IOgg 
.gg 
Loggergg 
.gg 
Loggg 
(gg 
NLoggg 
.gg 
LogLevelgg '
.gg' (
Warngg( ,
,gg, -
$strgg. N
,ggN O
	exceptSqlggP Y
)ggY Z
;ggZ [
}hh 	
}ii 
privatell 
staticll 
voidll 
GoodG2Bll 
(ll  
)ll  !
{mm 
stringnn 
passwordnn 
;nn 
passwordqq 
=qq 
$strqq "
;qq" #
GoodG2BSinkrr 
(rr 
passwordrr 
)rr 
;rr  
}ss 
privateuu 
staticuu 
voiduu 
GoodB2GSinkuu #
(uu# $
stringuu$ *
passworduu+ 3
)uu4 5
{vv 
ifww 

(ww 
passwordww 
!=ww 
nullww 
)ww 
{xx 	
{zz 
using{{ 
({{ $
AesCryptoServiceProvider{{ /
aesAlg{{0 6
={{7 8
new{{9 <$
AesCryptoServiceProvider{{= U
({{U V
){{V W
){{W X
{|| 
aesAlg}} 
.}} 
Padding}} "
=}}# $
PaddingMode}}% 0
.}}0 1
None}}1 5
;}}5 6
aesAlg~~ 
.~~ 
Key~~ 
=~~  
Encoding~~! )
.~~) *
UTF8~~* .
.~~. /
GetBytes~~/ 7
(~~7 8
$str~~8 J
)~~J K
;~~K L
ICryptoTransform
ÄÄ $
	decryptor
ÄÄ% .
=
ÄÄ/ 0
aesAlg
ÄÄ1 7
.
ÄÄ7 8
CreateDecryptor
ÄÄ8 G
(
ÄÄG H
aesAlg
ÄÄH N
.
ÄÄN O
Key
ÄÄO R
,
ÄÄR S
aesAlg
ÄÄT Z
.
ÄÄZ [
IV
ÄÄ[ ]
)
ÄÄ] ^
;
ÄÄ^ _
using
ÇÇ 
(
ÇÇ 
MemoryStream
ÇÇ '
	msDecrypt
ÇÇ( 1
=
ÇÇ2 3
new
ÇÇ4 7
MemoryStream
ÇÇ8 D
(
ÇÇD E
Encoding
ÇÇE M
.
ÇÇM N
UTF8
ÇÇN R
.
ÇÇR S
GetBytes
ÇÇS [
(
ÇÇ[ \
password
ÇÇ\ d
)
ÇÇd e
)
ÇÇe f
)
ÇÇf g
{
ÉÉ 
using
ÑÑ 
(
ÑÑ 
CryptoStream
ÑÑ +
	csDecrypt
ÑÑ, 5
=
ÑÑ6 7
new
ÑÑ8 ;
CryptoStream
ÑÑ< H
(
ÑÑH I
	msDecrypt
ÑÑI R
,
ÑÑR S
	decryptor
ÑÑT ]
,
ÑÑ] ^
CryptoStreamMode
ÑÑ_ o
.
ÑÑo p
Read
ÑÑp t
)
ÑÑt u
)
ÑÑu v
{
ÖÖ 
using
ÜÜ !
(
ÜÜ" #
StreamReader
ÜÜ# /
	srDecrypt
ÜÜ0 9
=
ÜÜ: ;
new
ÜÜ< ?
StreamReader
ÜÜ@ L
(
ÜÜL M
	csDecrypt
ÜÜM V
)
ÜÜV W
)
ÜÜW X
{
áá 
password
ää  (
=
ää) *
	srDecrypt
ää+ 4
.
ää4 5
	ReadToEnd
ää5 >
(
ää> ?
)
ää? @
;
ää@ A
}
ãã 
}
åå 
}
çç 
}
éé 
}
èè 
try
êê 
{
ëë 
using
ìì 
(
ìì 
SqlConnection
ìì $

connection
ìì% /
=
ìì0 1
new
ìì2 5
SqlConnection
ìì6 C
(
ììC D
$str
ììD z
+
ìì{ |
$strìì} Å
+ììÇ É
$strììÑ ê
+ììë í
passwordììì õ
)ììõ ú
)ììú ù
{
îî 

connection
ïï 
.
ïï 
Open
ïï #
(
ïï# $
)
ïï$ %
;
ïï% &
using
ññ 
(
ññ 

SqlCommand
ññ %
command
ññ& -
=
ññ. /
new
ññ0 3

SqlCommand
ññ4 >
(
ññ> ?
$str
ññ? Y
,
ññY Z

connection
ññ[ e
)
ññe f
)
ññf g
{
óó 
command
òò 
.
òò  
ExecuteNonQuery
òò  /
(
òò/ 0
)
òò0 1
;
òò1 2
}
ôô 
}
öö 
}
õõ 
catch
úú 
(
úú 
SqlException
úú 
	exceptSql
úú  )
)
úú) *
{
ùù 
IO
ûû 
.
ûû 
Logger
ûû 
.
ûû 
Log
ûû 
(
ûû 
NLog
ûû "
.
ûû" #
LogLevel
ûû# +
.
ûû+ ,
Warn
ûû, 0
,
ûû0 1
$str
ûû2 R
,
ûûR S
	exceptSql
ûûT ]
)
ûû] ^
;
ûû^ _
}
üü 
}
†† 	
}
°° 
private
§§ 
static
§§ 
void
§§ 
GoodB2G
§§ 
(
§§  
)
§§  !
{
•• 
string
¶¶ 
password
¶¶ 
;
¶¶ 
password
ßß 
=
ßß 
$str
ßß 
;
ßß 
{
©© 	
try
™™ 
{
´´ 
using
¨¨ 
(
¨¨ 
	WebClient
¨¨  
client
¨¨! '
=
¨¨( )
new
¨¨* -
	WebClient
¨¨. 7
(
¨¨7 8
)
¨¨8 9
)
¨¨9 :
{
≠≠ 
using
ÆÆ 
(
ÆÆ 
StreamReader
ÆÆ '
sr
ÆÆ( *
=
ÆÆ+ ,
new
ÆÆ- 0
StreamReader
ÆÆ1 =
(
ÆÆ= >
client
ÆÆ> D
.
ÆÆD E
OpenRead
ÆÆE M
(
ÆÆM N
$str
ÆÆN g
)
ÆÆg h
)
ÆÆh i
)
ÆÆi j
{
ØØ 
password
≥≥  
=
≥≥! "
sr
≥≥# %
.
≥≥% &
ReadLine
≥≥& .
(
≥≥. /
)
≥≥/ 0
;
≥≥0 1
}
¥¥ 
}
µµ 
}
∂∂ 
catch
∑∑ 
(
∑∑ 
IOException
∑∑ 
exceptIO
∑∑ '
)
∑∑' (
{
∏∏ 
IO
ππ 
.
ππ 
Logger
ππ 
.
ππ 
Log
ππ 
(
ππ 
NLog
ππ "
.
ππ" #
LogLevel
ππ# +
.
ππ+ ,
Warn
ππ, 0
,
ππ0 1
$str
ππ2 M
,
ππM N
exceptIO
ππO W
)
ππW X
;
ππX Y
}
∫∫ 
}
ªª 	
GoodB2GSink
ºº 
(
ºº 
password
ºº 
)
ºº 
;
ºº  
}
ΩΩ 
}øø 
}¿¿ èY
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_42.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class J
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_42 D
:E F
AbstractTestCaseG W
{ 
private!! 
static!! 
string!! 
	BadSource!! #
(!!# $
)!!$ %
{"" 
string## 
password## 
;## 
password$$ 
=$$ 
$str$$ 
;$$ 
{&& 	
try'' 
{(( 
using)) 
()) 
	WebClient))  
client))! '
=))( )
new))* -
	WebClient)). 7
())7 8
)))8 9
)))9 :
{** 
using++ 
(++ 
StreamReader++ '
sr++( *
=+++ ,
new++- 0
StreamReader++1 =
(++= >
client++> D
.++D E
OpenRead++E M
(++M N
$str++N g
)++g h
)++h i
)++i j
{,, 
password00  
=00! "
sr00# %
.00% &
ReadLine00& .
(00. /
)00/ 0
;000 1
}11 
}22 
}33 
catch44 
(44 
IOException44 
exceptIO44 '
)44' (
{55 
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 "
.66" #
LogLevel66# +
.66+ ,
Warn66, 0
,660 1
$str662 M
,66M N
exceptIO66O W
)66W X
;66X Y
}77 
}88 	
return99 
password99 
;99 
}:: 
public<< 

override<< 
void<< 
Bad<< 
(<< 
)<< 
{== 
string>> 
password>> 
=>> 
	BadSource>> #
(>># $
)>>$ %
;>>% &
try?? 
{@@ 	
usingBB 
(BB 
SqlConnectionBB  

connectionBB! +
=BB, -
newBB. 1
SqlConnectionBB2 ?
(BB? @
$strBB@ v
+BBw x
$strBBy }
+BB~ 
$str
BBÄ å
+
BBç é
password
BBè ó
)
BBó ò
)
BBò ô
{CC 

connectionDD 
.DD 
OpenDD 
(DD  
)DD  !
;DD! "
usingEE 
(EE 

SqlCommandEE !
commandEE" )
=EE* +
newEE, /

SqlCommandEE0 :
(EE: ;
$strEE; U
,EEU V

connectionEEW a
)EEa b
)EEb c
{FF 
commandGG 
.GG 
ExecuteNonQueryGG +
(GG+ ,
)GG, -
;GG- .
}HH 
}II 
}JJ 	
catchKK 
(KK 
SqlExceptionKK 
	exceptSqlKK %
)KK% &
{LL 	
IOMM 
.MM 
LoggerMM 
.MM 
LogMM 
(MM 
NLogMM 
.MM 
LogLevelMM '
.MM' (
WarnMM( ,
,MM, -
$strMM. N
,MMN O
	exceptSqlMMP Y
)MMY Z
;MMZ [
}NN 	
}OO 
privateSS 
staticSS 
stringSS 
GoodG2BSourceSS '
(SS' (
)SS( )
{TT 
stringUU 
passwordUU 
;UU 
passwordXX 
=XX 
$strXX "
;XX" #
returnYY 
passwordYY 
;YY 
}ZZ 
private\\ 
static\\ 
void\\ 
GoodG2B\\ 
(\\  
)\\  !
{]] 
string^^ 
password^^ 
=^^ 
GoodG2BSource^^ '
(^^' (
)^^( )
;^^) *
try__ 
{`` 	
usingbb 
(bb 
SqlConnectionbb  

connectionbb! +
=bb, -
newbb. 1
SqlConnectionbb2 ?
(bb? @
$strbb@ v
+bbw x
$strbby }
+bb~ 
$str
bbÄ å
+
bbç é
password
bbè ó
)
bbó ò
)
bbò ô
{cc 

connectiondd 
.dd 
Opendd 
(dd  
)dd  !
;dd! "
usingee 
(ee 

SqlCommandee !
commandee" )
=ee* +
newee, /

SqlCommandee0 :
(ee: ;
$stree; U
,eeU V

connectioneeW a
)eea b
)eeb c
{ff 
commandgg 
.gg 
ExecuteNonQuerygg +
(gg+ ,
)gg, -
;gg- .
}hh 
}ii 
}jj 	
catchkk 
(kk 
SqlExceptionkk 
	exceptSqlkk %
)kk% &
{ll 	
IOmm 
.mm 
Loggermm 
.mm 
Logmm 
(mm 
NLogmm 
.mm 
LogLevelmm '
.mm' (
Warnmm( ,
,mm, -
$strmm. N
,mmN O
	exceptSqlmmP Y
)mmY Z
;mmZ [
}nn 	
}oo 
privaterr 
staticrr 
stringrr 
GoodB2GSourcerr '
(rr' (
)rr( )
{ss 
stringtt 
passwordtt 
;tt 
passworduu 
=uu 
$struu 
;uu 
{ww 	
tryxx 
{yy 
usingzz 
(zz 
	WebClientzz  
clientzz! '
=zz( )
newzz* -
	WebClientzz. 7
(zz7 8
)zz8 9
)zz9 :
{{{ 
using|| 
(|| 
StreamReader|| '
sr||( *
=||+ ,
new||- 0
StreamReader||1 =
(||= >
client||> D
.||D E
OpenRead||E M
(||M N
$str||N g
)||g h
)||h i
)||i j
{}} 
password
ÅÅ  
=
ÅÅ! "
sr
ÅÅ# %
.
ÅÅ% &
ReadLine
ÅÅ& .
(
ÅÅ. /
)
ÅÅ/ 0
;
ÅÅ0 1
}
ÇÇ 
}
ÉÉ 
}
ÑÑ 
catch
ÖÖ 
(
ÖÖ 
IOException
ÖÖ 
exceptIO
ÖÖ '
)
ÖÖ' (
{
ÜÜ 
IO
áá 
.
áá 
Logger
áá 
.
áá 
Log
áá 
(
áá 
NLog
áá "
.
áá" #
LogLevel
áá# +
.
áá+ ,
Warn
áá, 0
,
áá0 1
$str
áá2 M
,
ááM N
exceptIO
ááO W
)
ááW X
;
ááX Y
}
àà 
}
ââ 	
return
ää 
password
ää 
;
ää 
}
ãã 
private
çç 
static
çç 
void
çç 
GoodB2G
çç 
(
çç  
)
çç  !
{
éé 
string
èè 
password
èè 
=
èè 
GoodB2GSource
èè '
(
èè' (
)
èè( )
;
èè) *
if
êê 

(
êê 
password
êê 
!=
êê 
null
êê 
)
êê 
{
ëë 	
{
ìì 
using
îî 
(
îî &
AesCryptoServiceProvider
îî /
aesAlg
îî0 6
=
îî7 8
new
îî9 <&
AesCryptoServiceProvider
îî= U
(
îîU V
)
îîV W
)
îîW X
{
ïï 
aesAlg
ññ 
.
ññ 
Padding
ññ "
=
ññ# $
PaddingMode
ññ% 0
.
ññ0 1
None
ññ1 5
;
ññ5 6
aesAlg
óó 
.
óó 
Key
óó 
=
óó  
Encoding
óó! )
.
óó) *
UTF8
óó* .
.
óó. /
GetBytes
óó/ 7
(
óó7 8
$str
óó8 J
)
óóJ K
;
óóK L
ICryptoTransform
ôô $
	decryptor
ôô% .
=
ôô/ 0
aesAlg
ôô1 7
.
ôô7 8
CreateDecryptor
ôô8 G
(
ôôG H
aesAlg
ôôH N
.
ôôN O
Key
ôôO R
,
ôôR S
aesAlg
ôôT Z
.
ôôZ [
IV
ôô[ ]
)
ôô] ^
;
ôô^ _
using
õõ 
(
õõ 
MemoryStream
õõ '
	msDecrypt
õõ( 1
=
õõ2 3
new
õõ4 7
MemoryStream
õõ8 D
(
õõD E
Encoding
õõE M
.
õõM N
UTF8
õõN R
.
õõR S
GetBytes
õõS [
(
õõ[ \
password
õõ\ d
)
õõd e
)
õõe f
)
õõf g
{
úú 
using
ùù 
(
ùù 
CryptoStream
ùù +
	csDecrypt
ùù, 5
=
ùù6 7
new
ùù8 ;
CryptoStream
ùù< H
(
ùùH I
	msDecrypt
ùùI R
,
ùùR S
	decryptor
ùùT ]
,
ùù] ^
CryptoStreamMode
ùù_ o
.
ùùo p
Read
ùùp t
)
ùùt u
)
ùùu v
{
ûû 
using
üü !
(
üü" #
StreamReader
üü# /
	srDecrypt
üü0 9
=
üü: ;
new
üü< ?
StreamReader
üü@ L
(
üüL M
	csDecrypt
üüM V
)
üüV W
)
üüW X
{
†† 
password
££  (
=
££) *
	srDecrypt
££+ 4
.
££4 5
	ReadToEnd
££5 >
(
££> ?
)
££? @
;
££@ A
}
§§ 
}
•• 
}
¶¶ 
}
ßß 
}
®® 
try
©© 
{
™™ 
using
¨¨ 
(
¨¨ 
SqlConnection
¨¨ $

connection
¨¨% /
=
¨¨0 1
new
¨¨2 5
SqlConnection
¨¨6 C
(
¨¨C D
$str
¨¨D z
+
¨¨{ |
$str¨¨} Å
+¨¨Ç É
$str¨¨Ñ ê
+¨¨ë í
password¨¨ì õ
)¨¨õ ú
)¨¨ú ù
{
≠≠ 

connection
ÆÆ 
.
ÆÆ 
Open
ÆÆ #
(
ÆÆ# $
)
ÆÆ$ %
;
ÆÆ% &
using
ØØ 
(
ØØ 

SqlCommand
ØØ %
command
ØØ& -
=
ØØ. /
new
ØØ0 3

SqlCommand
ØØ4 >
(
ØØ> ?
$str
ØØ? Y
,
ØØY Z

connection
ØØ[ e
)
ØØe f
)
ØØf g
{
∞∞ 
command
±± 
.
±±  
ExecuteNonQuery
±±  /
(
±±/ 0
)
±±0 1
;
±±1 2
}
≤≤ 
}
≥≥ 
}
¥¥ 
catch
µµ 
(
µµ 
SqlException
µµ 
	exceptSql
µµ  )
)
µµ) *
{
∂∂ 
IO
∑∑ 
.
∑∑ 
Logger
∑∑ 
.
∑∑ 
Log
∑∑ 
(
∑∑ 
NLog
∑∑ "
.
∑∑" #
LogLevel
∑∑# +
.
∑∑+ ,
Warn
∑∑, 0
,
∑∑0 1
$str
∑∑2 R
,
∑∑R S
	exceptSql
∑∑T ]
)
∑∑] ^
;
∑∑^ _
}
∏∏ 
}
ππ 	
}
∫∫ 
public
ºº 

override
ºº 
void
ºº 
Good
ºº 
(
ºº 
)
ºº 
{
ΩΩ 
GoodG2B
ææ 
(
ææ 
)
ææ 
;
ææ 
GoodB2G
øø 
(
øø 
)
øø 
;
øø 
}
¿¿ 
}¬¬ 
}√√ ˛[
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_45.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class J
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_45 D
:E F
AbstractTestCaseG W
{ 
private!! 
string!! 
passwordBad!! 
;!! 
private"" 
string"" 
passwordGoodG2B"" "
;""" #
private## 
string## 
passwordGoodB2G## "
;##" #
private%% 
void%% 
BadSink%% 
(%% 
)%% 
{&& 
string'' 
password'' 
='' 
passwordBad'' %
;''% &
try(( 
{)) 	
using++ 
(++ 
SqlConnection++  

connection++! +
=++, -
new++. 1
SqlConnection++2 ?
(++? @
$str++@ v
+++w x
$str++y }
+++~ 
$str
++Ä å
+
++ç é
password
++è ó
)
++ó ò
)
++ò ô
{,, 

connection-- 
.-- 
Open-- 
(--  
)--  !
;--! "
using.. 
(.. 

SqlCommand.. !
command.." )
=..* +
new.., /

SqlCommand..0 :
(..: ;
$str..; U
,..U V

connection..W a
)..a b
)..b c
{// 
command00 
.00 
ExecuteNonQuery00 +
(00+ ,
)00, -
;00- .
}11 
}22 
}33 	
catch44 
(44 
SqlException44 
	exceptSql44 %
)44% &
{55 	
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 
.66 
LogLevel66 '
.66' (
Warn66( ,
,66, -
$str66. N
,66N O
	exceptSql66P Y
)66Y Z
;66Z [
}77 	
}88 
public:: 

override:: 
void:: 
Bad:: 
(:: 
):: 
{;; 
string<< 
password<< 
;<< 
password== 
=== 
$str== 
;== 
{?? 	
try@@ 
{AA 
usingBB 
(BB 
	WebClientBB  
clientBB! '
=BB( )
newBB* -
	WebClientBB. 7
(BB7 8
)BB8 9
)BB9 :
{CC 
usingDD 
(DD 
StreamReaderDD '
srDD( *
=DD+ ,
newDD- 0
StreamReaderDD1 =
(DD= >
clientDD> D
.DDD E
OpenReadDDE M
(DDM N
$strDDN g
)DDg h
)DDh i
)DDi j
{EE 
passwordII  
=II! "
srII# %
.II% &
ReadLineII& .
(II. /
)II/ 0
;II0 1
}JJ 
}KK 
}LL 
catchMM 
(MM 
IOExceptionMM 
exceptIOMM '
)MM' (
{NN 
IOOO 
.OO 
LoggerOO 
.OO 
LogOO 
(OO 
NLogOO "
.OO" #
LogLevelOO# +
.OO+ ,
WarnOO, 0
,OO0 1
$strOO2 M
,OOM N
exceptIOOOO W
)OOW X
;OOX Y
}PP 
}QQ 	
passwordBadRR 
=RR 
passwordRR 
;RR 
BadSinkSS 
(SS 
)SS 
;SS 
}TT 
publicWW 

overrideWW 
voidWW 
GoodWW 
(WW 
)WW 
{XX 
GoodG2BYY 
(YY 
)YY 
;YY 
GoodB2GZZ 
(ZZ 
)ZZ 
;ZZ 
}[[ 
private]] 
void]] 
GoodG2BSink]] 
(]] 
)]] 
{^^ 
string__ 
password__ 
=__ 
passwordGoodG2B__ )
;__) *
try`` 
{aa 	
usingcc 
(cc 
SqlConnectioncc  

connectioncc! +
=cc, -
newcc. 1
SqlConnectioncc2 ?
(cc? @
$strcc@ v
+ccw x
$strccy }
+cc~ 
$str
ccÄ å
+
ccç é
password
ccè ó
)
ccó ò
)
ccò ô
{dd 

connectionee 
.ee 
Openee 
(ee  
)ee  !
;ee! "
usingff 
(ff 

SqlCommandff !
commandff" )
=ff* +
newff, /

SqlCommandff0 :
(ff: ;
$strff; U
,ffU V

connectionffW a
)ffa b
)ffb c
{gg 
commandhh 
.hh 
ExecuteNonQueryhh +
(hh+ ,
)hh, -
;hh- .
}ii 
}jj 
}kk 	
catchll 
(ll 
SqlExceptionll 
	exceptSqlll %
)ll% &
{mm 	
IOnn 
.nn 
Loggernn 
.nn 
Lognn 
(nn 
NLognn 
.nn 
LogLevelnn '
.nn' (
Warnnn( ,
,nn, -
$strnn. N
,nnN O
	exceptSqlnnP Y
)nnY Z
;nnZ [
}oo 	
}pp 
privatess 
voidss 
GoodG2Bss 
(ss 
)ss 
{tt 
stringuu 
passworduu 
;uu 
passwordxx 
=xx 
$strxx "
;xx" #
passwordGoodG2Byy 
=yy 
passwordyy "
;yy" #
GoodG2BSinkzz 
(zz 
)zz 
;zz 
}{{ 
private}} 
void}} 
GoodB2GSink}} 
(}} 
)}} 
{~~ 
string 
password 
= 
passwordGoodB2G )
;) *
if
ÄÄ 

(
ÄÄ 
password
ÄÄ 
!=
ÄÄ 
null
ÄÄ 
)
ÄÄ 
{
ÅÅ 	
{
ÉÉ 
using
ÑÑ 
(
ÑÑ &
AesCryptoServiceProvider
ÑÑ /
aesAlg
ÑÑ0 6
=
ÑÑ7 8
new
ÑÑ9 <&
AesCryptoServiceProvider
ÑÑ= U
(
ÑÑU V
)
ÑÑV W
)
ÑÑW X
{
ÖÖ 
aesAlg
ÜÜ 
.
ÜÜ 
Padding
ÜÜ "
=
ÜÜ# $
PaddingMode
ÜÜ% 0
.
ÜÜ0 1
None
ÜÜ1 5
;
ÜÜ5 6
aesAlg
áá 
.
áá 
Key
áá 
=
áá  
Encoding
áá! )
.
áá) *
UTF8
áá* .
.
áá. /
GetBytes
áá/ 7
(
áá7 8
$str
áá8 J
)
ááJ K
;
ááK L
ICryptoTransform
ââ $
	decryptor
ââ% .
=
ââ/ 0
aesAlg
ââ1 7
.
ââ7 8
CreateDecryptor
ââ8 G
(
ââG H
aesAlg
ââH N
.
ââN O
Key
ââO R
,
ââR S
aesAlg
ââT Z
.
ââZ [
IV
ââ[ ]
)
ââ] ^
;
ââ^ _
using
ãã 
(
ãã 
MemoryStream
ãã '
	msDecrypt
ãã( 1
=
ãã2 3
new
ãã4 7
MemoryStream
ãã8 D
(
ããD E
Encoding
ããE M
.
ããM N
UTF8
ããN R
.
ããR S
GetBytes
ããS [
(
ãã[ \
password
ãã\ d
)
ããd e
)
ããe f
)
ããf g
{
åå 
using
çç 
(
çç 
CryptoStream
çç +
	csDecrypt
çç, 5
=
çç6 7
new
çç8 ;
CryptoStream
çç< H
(
ççH I
	msDecrypt
ççI R
,
ççR S
	decryptor
ççT ]
,
çç] ^
CryptoStreamMode
çç_ o
.
çço p
Read
ççp t
)
ççt u
)
ççu v
{
éé 
using
èè !
(
èè" #
StreamReader
èè# /
	srDecrypt
èè0 9
=
èè: ;
new
èè< ?
StreamReader
èè@ L
(
èèL M
	csDecrypt
èèM V
)
èèV W
)
èèW X
{
êê 
password
ìì  (
=
ìì) *
	srDecrypt
ìì+ 4
.
ìì4 5
	ReadToEnd
ìì5 >
(
ìì> ?
)
ìì? @
;
ìì@ A
}
îî 
}
ïï 
}
ññ 
}
óó 
}
òò 
try
ôô 
{
öö 
using
úú 
(
úú 
SqlConnection
úú $

connection
úú% /
=
úú0 1
new
úú2 5
SqlConnection
úú6 C
(
úúC D
$str
úúD z
+
úú{ |
$strúú} Å
+úúÇ É
$strúúÑ ê
+úúë í
passwordúúì õ
)úúõ ú
)úúú ù
{
ùù 

connection
ûû 
.
ûû 
Open
ûû #
(
ûû# $
)
ûû$ %
;
ûû% &
using
üü 
(
üü 

SqlCommand
üü %
command
üü& -
=
üü. /
new
üü0 3

SqlCommand
üü4 >
(
üü> ?
$str
üü? Y
,
üüY Z

connection
üü[ e
)
üüe f
)
üüf g
{
†† 
command
°° 
.
°°  
ExecuteNonQuery
°°  /
(
°°/ 0
)
°°0 1
;
°°1 2
}
¢¢ 
}
££ 
}
§§ 
catch
•• 
(
•• 
SqlException
•• 
	exceptSql
••  )
)
••) *
{
¶¶ 
IO
ßß 
.
ßß 
Logger
ßß 
.
ßß 
Log
ßß 
(
ßß 
NLog
ßß "
.
ßß" #
LogLevel
ßß# +
.
ßß+ ,
Warn
ßß, 0
,
ßß0 1
$str
ßß2 R
,
ßßR S
	exceptSql
ßßT ]
)
ßß] ^
;
ßß^ _
}
®® 
}
©© 	
}
™™ 
private
≠≠ 
void
≠≠ 
GoodB2G
≠≠ 
(
≠≠ 
)
≠≠ 
{
ÆÆ 
string
ØØ 
password
ØØ 
;
ØØ 
password
∞∞ 
=
∞∞ 
$str
∞∞ 
;
∞∞ 
{
≤≤ 	
try
≥≥ 
{
¥¥ 
using
µµ 
(
µµ 
	WebClient
µµ  
client
µµ! '
=
µµ( )
new
µµ* -
	WebClient
µµ. 7
(
µµ7 8
)
µµ8 9
)
µµ9 :
{
∂∂ 
using
∑∑ 
(
∑∑ 
StreamReader
∑∑ '
sr
∑∑( *
=
∑∑+ ,
new
∑∑- 0
StreamReader
∑∑1 =
(
∑∑= >
client
∑∑> D
.
∑∑D E
OpenRead
∑∑E M
(
∑∑M N
$str
∑∑N g
)
∑∑g h
)
∑∑h i
)
∑∑i j
{
∏∏ 
password
ºº  
=
ºº! "
sr
ºº# %
.
ºº% &
ReadLine
ºº& .
(
ºº. /
)
ºº/ 0
;
ºº0 1
}
ΩΩ 
}
ææ 
}
øø 
catch
¿¿ 
(
¿¿ 
IOException
¿¿ 
exceptIO
¿¿ '
)
¿¿' (
{
¡¡ 
IO
¬¬ 
.
¬¬ 
Logger
¬¬ 
.
¬¬ 
Log
¬¬ 
(
¬¬ 
NLog
¬¬ "
.
¬¬" #
LogLevel
¬¬# +
.
¬¬+ ,
Warn
¬¬, 0
,
¬¬0 1
$str
¬¬2 M
,
¬¬M N
exceptIO
¬¬O W
)
¬¬W X
;
¬¬X Y
}
√√ 
}
ƒƒ 	
passwordGoodB2G
≈≈ 
=
≈≈ 
password
≈≈ "
;
≈≈" #
GoodB2GSink
∆∆ 
(
∆∆ 
)
∆∆ 
;
∆∆ 
}
«« 
}…… 
}   à"
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_51a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_51a E
:F G
AbstractTestCaseH X
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string 
password 
; 
password   
=   
$str   
;   
{"" 	
try## 
{$$ 
using%% 
(%% 
	WebClient%%  
client%%! '
=%%( )
new%%* -
	WebClient%%. 7
(%%7 8
)%%8 9
)%%9 :
{&& 
using'' 
('' 
StreamReader'' '
sr''( *
=''+ ,
new''- 0
StreamReader''1 =
(''= >
client''> D
.''D E
OpenRead''E M
(''M N
$str''N g
)''g h
)''h i
)''i j
{(( 
password,,  
=,,! "
sr,,# %
.,,% &
ReadLine,,& .
(,,. /
),,/ 0
;,,0 1
}-- 
}.. 
}// 
catch00 
(00 
IOException00 
exceptIO00 '
)00' (
{11 
IO22 
.22 
Logger22 
.22 
Log22 
(22 
NLog22 "
.22" #
LogLevel22# +
.22+ ,
Warn22, 0
,220 1
$str222 M
,22M N
exceptIO22O W
)22W X
;22X Y
}33 
}44 	K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_51b55 G
.55G H
BadSink55H O
(55O P
password55P X
)55Z [
;55[ \
}66 
public99 

override99 
void99 
Good99 
(99 
)99 
{:: 
GoodG2B;; 
(;; 
);; 
;;; 
GoodB2G<< 
(<< 
)<< 
;<< 
}== 
private@@ 
void@@ 
GoodG2B@@ 
(@@ 
)@@ 
{AA 
stringBB 
passwordBB 
;BB 
passwordEE 
=EE 
$strEE "
;EE" #K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_51bFF G
.FFG H
GoodG2BSinkFFH S
(FFS T
passwordFFT \
)FF^ _
;FF_ `
}GG 
privateJJ 
voidJJ 
GoodB2GJJ 
(JJ 
)JJ 
{KK 
stringLL 
passwordLL 
;LL 
passwordMM 
=MM 
$strMM 
;MM 
{OO 	
tryPP 
{QQ 
usingRR 
(RR 
	WebClientRR  
clientRR! '
=RR( )
newRR* -
	WebClientRR. 7
(RR7 8
)RR8 9
)RR9 :
{SS 
usingTT 
(TT 
StreamReaderTT '
srTT( *
=TT+ ,
newTT- 0
StreamReaderTT1 =
(TT= >
clientTT> D
.TTD E
OpenReadTTE M
(TTM N
$strTTN g
)TTg h
)TTh i
)TTi j
{UU 
passwordYY  
=YY! "
srYY# %
.YY% &
ReadLineYY& .
(YY. /
)YY/ 0
;YY0 1
}ZZ 
}[[ 
}\\ 
catch]] 
(]] 
IOException]] 
exceptIO]] '
)]]' (
{^^ 
IO__ 
.__ 
Logger__ 
.__ 
Log__ 
(__ 
NLog__ "
.__" #
LogLevel__# +
.__+ ,
Warn__, 0
,__0 1
$str__2 M
,__M N
exceptIO__O W
)__W X
;__X Y
}`` 
}aa 	K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_51bbb G
.bbG H
GoodB2GSinkbbH S
(bbS T
passwordbbT \
)bb^ _
;bb_ `
}cc 
}ee 
}ff ˘6
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_51b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_51b E
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   
try!! 
{"" 	
using$$ 
($$ 
SqlConnection$$  

connection$$! +
=$$, -
new$$. 1
SqlConnection$$2 ?
($$? @
$str$$@ v
+$$w x
$str$$y }
+$$~ 
$str
$$Ä å
+
$$ç é
password
$$è ó
)
$$ó ò
)
$$ò ô
{%% 

connection&& 
.&& 
Open&& 
(&&  
)&&  !
;&&! "
using'' 
('' 

SqlCommand'' !
command''" )
=''* +
new'', /

SqlCommand''0 :
('': ;
$str''; U
,''U V

connection''W a
)''a b
)''b c
{(( 
command)) 
.)) 
ExecuteNonQuery)) +
())+ ,
))), -
;))- .
}** 
}++ 
},, 	
catch-- 
(-- 
SqlException-- 
	exceptSql-- %
)--% &
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. N
,//N O
	exceptSql//P Y
)//Y Z
;//Z [
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
string66# )
password66* 2
)663 4
{77 
try88 
{99 	
using;; 
(;; 
SqlConnection;;  

connection;;! +
=;;, -
new;;. 1
SqlConnection;;2 ?
(;;? @
$str;;@ v
+;;w x
$str;;y }
+;;~ 
$str
;;Ä å
+
;;ç é
password
;;è ó
)
;;ó ò
)
;;ò ô
{<< 

connection== 
.== 
Open== 
(==  
)==  !
;==! "
using>> 
(>> 

SqlCommand>> !
command>>" )
=>>* +
new>>, /

SqlCommand>>0 :
(>>: ;
$str>>; U
,>>U V

connection>>W a
)>>a b
)>>b c
{?? 
command@@ 
.@@ 
ExecuteNonQuery@@ +
(@@+ ,
)@@, -
;@@- .
}AA 
}BB 
}CC 	
catchDD 
(DD 
SqlExceptionDD 
	exceptSqlDD %
)DD% &
{EE 	
IOFF 
.FF 
LoggerFF 
.FF 
LogFF 
(FF 
NLogFF 
.FF 
LogLevelFF '
.FF' (
WarnFF( ,
,FF, -
$strFF. N
,FFN O
	exceptSqlFFP Y
)FFY Z
;FFZ [
}GG 	
}HH 
publicKK 

staticKK 
voidKK 
GoodB2GSinkKK "
(KK" #
stringKK# )
passwordKK* 2
)KK3 4
{LL 
ifMM 

(MM 
passwordMM 
!=MM 
nullMM 
)MM 
{NN 	
{PP 
usingQQ 
(QQ $
AesCryptoServiceProviderQQ /
aesAlgQQ0 6
=QQ7 8
newQQ9 <$
AesCryptoServiceProviderQQ= U
(QQU V
)QQV W
)QQW X
{RR 
aesAlgSS 
.SS 
PaddingSS "
=SS# $
PaddingModeSS% 0
.SS0 1
NoneSS1 5
;SS5 6
aesAlgTT 
.TT 
KeyTT 
=TT  
EncodingTT! )
.TT) *
UTF8TT* .
.TT. /
GetBytesTT/ 7
(TT7 8
$strTT8 J
)TTJ K
;TTK L
ICryptoTransformVV $
	decryptorVV% .
=VV/ 0
aesAlgVV1 7
.VV7 8
CreateDecryptorVV8 G
(VVG H
aesAlgVVH N
.VVN O
KeyVVO R
,VVR S
aesAlgVVT Z
.VVZ [
IVVV[ ]
)VV] ^
;VV^ _
usingXX 
(XX 
MemoryStreamXX '
	msDecryptXX( 1
=XX2 3
newXX4 7
MemoryStreamXX8 D
(XXD E
EncodingXXE M
.XXM N
UTF8XXN R
.XXR S
GetBytesXXS [
(XX[ \
passwordXX\ d
)XXd e
)XXe f
)XXf g
{YY 
usingZZ 
(ZZ 
CryptoStreamZZ +
	csDecryptZZ, 5
=ZZ6 7
newZZ8 ;
CryptoStreamZZ< H
(ZZH I
	msDecryptZZI R
,ZZR S
	decryptorZZT ]
,ZZ] ^
CryptoStreamModeZZ_ o
.ZZo p
ReadZZp t
)ZZt u
)ZZu v
{[[ 
using\\ !
(\\" #
StreamReader\\# /
	srDecrypt\\0 9
=\\: ;
new\\< ?
StreamReader\\@ L
(\\L M
	csDecrypt\\M V
)\\V W
)\\W X
{]] 
password``  (
=``) *
	srDecrypt``+ 4
.``4 5
	ReadToEnd``5 >
(``> ?
)``? @
;``@ A
}aa 
}bb 
}cc 
}dd 
}ee 
tryff 
{gg 
usingii 
(ii 
SqlConnectionii $

connectionii% /
=ii0 1
newii2 5
SqlConnectionii6 C
(iiC D
$striiD z
+ii{ |
$str	ii} Å
+
iiÇ É
$str
iiÑ ê
+
iië í
password
iiì õ
)
iiõ ú
)
iiú ù
{jj 

connectionkk 
.kk 
Openkk #
(kk# $
)kk$ %
;kk% &
usingll 
(ll 

SqlCommandll %
commandll& -
=ll. /
newll0 3

SqlCommandll4 >
(ll> ?
$strll? Y
,llY Z

connectionll[ e
)lle f
)llf g
{mm 
commandnn 
.nn  
ExecuteNonQuerynn  /
(nn/ 0
)nn0 1
;nn1 2
}oo 
}pp 
}qq 
catchrr 
(rr 
SqlExceptionrr 
	exceptSqlrr  )
)rr) *
{ss 
IOtt 
.tt 
Loggertt 
.tt 
Logtt 
(tt 
NLogtt "
.tt" #
LogLeveltt# +
.tt+ ,
Warntt, 0
,tt0 1
$strtt2 R
,ttR S
	exceptSqlttT ]
)tt] ^
;tt^ _
}uu 
}vv 	
}ww 
}yy 
}zz à"
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_52a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_52a E
:F G
AbstractTestCaseH X
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string 
password 
; 
password   
=   
$str   
;   
{"" 	
try## 
{$$ 
using%% 
(%% 
	WebClient%%  
client%%! '
=%%( )
new%%* -
	WebClient%%. 7
(%%7 8
)%%8 9
)%%9 :
{&& 
using'' 
('' 
StreamReader'' '
sr''( *
=''+ ,
new''- 0
StreamReader''1 =
(''= >
client''> D
.''D E
OpenRead''E M
(''M N
$str''N g
)''g h
)''h i
)''i j
{(( 
password,,  
=,,! "
sr,,# %
.,,% &
ReadLine,,& .
(,,. /
),,/ 0
;,,0 1
}-- 
}.. 
}// 
catch00 
(00 
IOException00 
exceptIO00 '
)00' (
{11 
IO22 
.22 
Logger22 
.22 
Log22 
(22 
NLog22 "
.22" #
LogLevel22# +
.22+ ,
Warn22, 0
,220 1
$str222 M
,22M N
exceptIO22O W
)22W X
;22X Y
}33 
}44 	K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_52b55 G
.55G H
BadSink55H O
(55O P
password55P X
)55Y Z
;55Z [
}66 
public99 

override99 
void99 
Good99 
(99 
)99 
{:: 
GoodG2B;; 
(;; 
);; 
;;; 
GoodB2G<< 
(<< 
)<< 
;<< 
}== 
private@@ 
void@@ 
GoodG2B@@ 
(@@ 
)@@ 
{AA 
stringBB 
passwordBB 
;BB 
passwordEE 
=EE 
$strEE "
;EE" #K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_52bFF G
.FFG H
GoodG2BSinkFFH S
(FFS T
passwordFFT \
)FF] ^
;FF^ _
}GG 
privateJJ 
voidJJ 
GoodB2GJJ 
(JJ 
)JJ 
{KK 
stringLL 
passwordLL 
;LL 
passwordMM 
=MM 
$strMM 
;MM 
{OO 	
tryPP 
{QQ 
usingRR 
(RR 
	WebClientRR  
clientRR! '
=RR( )
newRR* -
	WebClientRR. 7
(RR7 8
)RR8 9
)RR9 :
{SS 
usingTT 
(TT 
StreamReaderTT '
srTT( *
=TT+ ,
newTT- 0
StreamReaderTT1 =
(TT= >
clientTT> D
.TTD E
OpenReadTTE M
(TTM N
$strTTN g
)TTg h
)TTh i
)TTi j
{UU 
passwordYY  
=YY! "
srYY# %
.YY% &
ReadLineYY& .
(YY. /
)YY/ 0
;YY0 1
}ZZ 
}[[ 
}\\ 
catch]] 
(]] 
IOException]] 
exceptIO]] '
)]]' (
{^^ 
IO__ 
.__ 
Logger__ 
.__ 
Log__ 
(__ 
NLog__ "
.__" #
LogLevel__# +
.__+ ,
Warn__, 0
,__0 1
$str__2 M
,__M N
exceptIO__O W
)__W X
;__X Y
}`` 
}aa 	K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_52bbb G
.bbG H
GoodB2GSinkbbH S
(bbS T
passwordbbT \
)bb] ^
;bb^ _
}cc 
}ee 
}ff å
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_52b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_52b E
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_52c!! G
.!!G H
BadSink!!H O
(!!O P
password!!P X
)!!Y Z
;!!Z [
}"" 
public'' 

static'' 
void'' 
GoodG2BSink'' "
(''" #
string''# )
password''* 2
)''3 4
{(( K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_52c)) G
.))G H
GoodG2BSink))H S
())S T
password))T \
)))] ^
;))^ _
}** 
public-- 

static-- 
void-- 
GoodB2GSink-- "
(--" #
string--# )
password--* 2
)--3 4
{.. K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_52c// G
.//G H
GoodB2GSink//H S
(//S T
password//T \
)//] ^
;//^ _
}00 
}22 
}33 ˘6
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_52c.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_52c E
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   
try!! 
{"" 	
using$$ 
($$ 
SqlConnection$$  

connection$$! +
=$$, -
new$$. 1
SqlConnection$$2 ?
($$? @
$str$$@ v
+$$w x
$str$$y }
+$$~ 
$str
$$Ä å
+
$$ç é
password
$$è ó
)
$$ó ò
)
$$ò ô
{%% 

connection&& 
.&& 
Open&& 
(&&  
)&&  !
;&&! "
using'' 
('' 

SqlCommand'' !
command''" )
=''* +
new'', /

SqlCommand''0 :
('': ;
$str''; U
,''U V

connection''W a
)''a b
)''b c
{(( 
command)) 
.)) 
ExecuteNonQuery)) +
())+ ,
))), -
;))- .
}** 
}++ 
},, 	
catch-- 
(-- 
SqlException-- 
	exceptSql-- %
)--% &
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. N
,//N O
	exceptSql//P Y
)//Y Z
;//Z [
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
string66# )
password66* 2
)663 4
{77 
try88 
{99 	
using;; 
(;; 
SqlConnection;;  

connection;;! +
=;;, -
new;;. 1
SqlConnection;;2 ?
(;;? @
$str;;@ v
+;;w x
$str;;y }
+;;~ 
$str
;;Ä å
+
;;ç é
password
;;è ó
)
;;ó ò
)
;;ò ô
{<< 

connection== 
.== 
Open== 
(==  
)==  !
;==! "
using>> 
(>> 

SqlCommand>> !
command>>" )
=>>* +
new>>, /

SqlCommand>>0 :
(>>: ;
$str>>; U
,>>U V

connection>>W a
)>>a b
)>>b c
{?? 
command@@ 
.@@ 
ExecuteNonQuery@@ +
(@@+ ,
)@@, -
;@@- .
}AA 
}BB 
}CC 	
catchDD 
(DD 
SqlExceptionDD 
	exceptSqlDD %
)DD% &
{EE 	
IOFF 
.FF 
LoggerFF 
.FF 
LogFF 
(FF 
NLogFF 
.FF 
LogLevelFF '
.FF' (
WarnFF( ,
,FF, -
$strFF. N
,FFN O
	exceptSqlFFP Y
)FFY Z
;FFZ [
}GG 	
}HH 
publicKK 

staticKK 
voidKK 
GoodB2GSinkKK "
(KK" #
stringKK# )
passwordKK* 2
)KK3 4
{LL 
ifMM 

(MM 
passwordMM 
!=MM 
nullMM 
)MM 
{NN 	
{PP 
usingQQ 
(QQ $
AesCryptoServiceProviderQQ /
aesAlgQQ0 6
=QQ7 8
newQQ9 <$
AesCryptoServiceProviderQQ= U
(QQU V
)QQV W
)QQW X
{RR 
aesAlgSS 
.SS 
PaddingSS "
=SS# $
PaddingModeSS% 0
.SS0 1
NoneSS1 5
;SS5 6
aesAlgTT 
.TT 
KeyTT 
=TT  
EncodingTT! )
.TT) *
UTF8TT* .
.TT. /
GetBytesTT/ 7
(TT7 8
$strTT8 J
)TTJ K
;TTK L
ICryptoTransformVV $
	decryptorVV% .
=VV/ 0
aesAlgVV1 7
.VV7 8
CreateDecryptorVV8 G
(VVG H
aesAlgVVH N
.VVN O
KeyVVO R
,VVR S
aesAlgVVT Z
.VVZ [
IVVV[ ]
)VV] ^
;VV^ _
usingXX 
(XX 
MemoryStreamXX '
	msDecryptXX( 1
=XX2 3
newXX4 7
MemoryStreamXX8 D
(XXD E
EncodingXXE M
.XXM N
UTF8XXN R
.XXR S
GetBytesXXS [
(XX[ \
passwordXX\ d
)XXd e
)XXe f
)XXf g
{YY 
usingZZ 
(ZZ 
CryptoStreamZZ +
	csDecryptZZ, 5
=ZZ6 7
newZZ8 ;
CryptoStreamZZ< H
(ZZH I
	msDecryptZZI R
,ZZR S
	decryptorZZT ]
,ZZ] ^
CryptoStreamModeZZ_ o
.ZZo p
ReadZZp t
)ZZt u
)ZZu v
{[[ 
using\\ !
(\\" #
StreamReader\\# /
	srDecrypt\\0 9
=\\: ;
new\\< ?
StreamReader\\@ L
(\\L M
	csDecrypt\\M V
)\\V W
)\\W X
{]] 
password``  (
=``) *
	srDecrypt``+ 4
.``4 5
	ReadToEnd``5 >
(``> ?
)``? @
;``@ A
}aa 
}bb 
}cc 
}dd 
}ee 
tryff 
{gg 
usingii 
(ii 
SqlConnectionii $

connectionii% /
=ii0 1
newii2 5
SqlConnectionii6 C
(iiC D
$striiD z
+ii{ |
$str	ii} Å
+
iiÇ É
$str
iiÑ ê
+
iië í
password
iiì õ
)
iiõ ú
)
iiú ù
{jj 

connectionkk 
.kk 
Openkk #
(kk# $
)kk$ %
;kk% &
usingll 
(ll 

SqlCommandll %
commandll& -
=ll. /
newll0 3

SqlCommandll4 >
(ll> ?
$strll? Y
,llY Z

connectionll[ e
)lle f
)llf g
{mm 
commandnn 
.nn  
ExecuteNonQuerynn  /
(nn/ 0
)nn0 1
;nn1 2
}oo 
}pp 
}qq 
catchrr 
(rr 
SqlExceptionrr 
	exceptSqlrr  )
)rr) *
{ss 
IOtt 
.tt 
Loggertt 
.tt 
Logtt 
(tt 
NLogtt "
.tt" #
LogLeveltt# +
.tt+ ,
Warntt, 0
,tt0 1
$strtt2 R
,ttR S
	exceptSqlttT ]
)tt] ^
;tt^ _
}uu 
}vv 	
}ww 
}yy 
}zz à"
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_53a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_53a E
:F G
AbstractTestCaseH X
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string 
password 
; 
password   
=   
$str   
;   
{"" 	
try## 
{$$ 
using%% 
(%% 
	WebClient%%  
client%%! '
=%%( )
new%%* -
	WebClient%%. 7
(%%7 8
)%%8 9
)%%9 :
{&& 
using'' 
('' 
StreamReader'' '
sr''( *
=''+ ,
new''- 0
StreamReader''1 =
(''= >
client''> D
.''D E
OpenRead''E M
(''M N
$str''N g
)''g h
)''h i
)''i j
{(( 
password,,  
=,,! "
sr,,# %
.,,% &
ReadLine,,& .
(,,. /
),,/ 0
;,,0 1
}-- 
}.. 
}// 
catch00 
(00 
IOException00 
exceptIO00 '
)00' (
{11 
IO22 
.22 
Logger22 
.22 
Log22 
(22 
NLog22 "
.22" #
LogLevel22# +
.22+ ,
Warn22, 0
,220 1
$str222 M
,22M N
exceptIO22O W
)22W X
;22X Y
}33 
}44 	K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_53b55 G
.55G H
BadSink55H O
(55O P
password55P X
)55Y Z
;55Z [
}66 
public99 

override99 
void99 
Good99 
(99 
)99 
{:: 
GoodG2B;; 
(;; 
);; 
;;; 
GoodB2G<< 
(<< 
)<< 
;<< 
}== 
private@@ 
void@@ 
GoodG2B@@ 
(@@ 
)@@ 
{AA 
stringBB 
passwordBB 
;BB 
passwordEE 
=EE 
$strEE "
;EE" #K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_53bFF G
.FFG H
GoodG2BSinkFFH S
(FFS T
passwordFFT \
)FF] ^
;FF^ _
}GG 
privateJJ 
voidJJ 
GoodB2GJJ 
(JJ 
)JJ 
{KK 
stringLL 
passwordLL 
;LL 
passwordMM 
=MM 
$strMM 
;MM 
{OO 	
tryPP 
{QQ 
usingRR 
(RR 
	WebClientRR  
clientRR! '
=RR( )
newRR* -
	WebClientRR. 7
(RR7 8
)RR8 9
)RR9 :
{SS 
usingTT 
(TT 
StreamReaderTT '
srTT( *
=TT+ ,
newTT- 0
StreamReaderTT1 =
(TT= >
clientTT> D
.TTD E
OpenReadTTE M
(TTM N
$strTTN g
)TTg h
)TTh i
)TTi j
{UU 
passwordYY  
=YY! "
srYY# %
.YY% &
ReadLineYY& .
(YY. /
)YY/ 0
;YY0 1
}ZZ 
}[[ 
}\\ 
catch]] 
(]] 
IOException]] 
exceptIO]] '
)]]' (
{^^ 
IO__ 
.__ 
Logger__ 
.__ 
Log__ 
(__ 
NLog__ "
.__" #
LogLevel__# +
.__+ ,
Warn__, 0
,__0 1
$str__2 M
,__M N
exceptIO__O W
)__W X
;__X Y
}`` 
}aa 	K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_53bbb G
.bbG H
GoodB2GSinkbbH S
(bbS T
passwordbbT \
)bb] ^
;bb^ _
}cc 
}ee 
}ff å
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_53b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_53b E
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_53c!! G
.!!G H
BadSink!!H O
(!!O P
password!!P X
)!!Y Z
;!!Z [
}"" 
public'' 

static'' 
void'' 
GoodG2BSink'' "
(''" #
string''# )
password''* 2
)''3 4
{(( K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_53c)) G
.))G H
GoodG2BSink))H S
())S T
password))T \
)))] ^
;))^ _
}** 
public-- 

static-- 
void-- 
GoodB2GSink-- "
(--" #
string--# )
password--* 2
)--3 4
{.. K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_53c// G
.//G H
GoodB2GSink//H S
(//S T
password//T \
)//] ^
;//^ _
}00 
}22 
}33 å
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_53c.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_53c E
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_53d!! G
.!!G H
BadSink!!H O
(!!O P
password!!P X
)!!Y Z
;!!Z [
}"" 
public'' 

static'' 
void'' 
GoodG2BSink'' "
(''" #
string''# )
password''* 2
)''3 4
{(( K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_53d)) G
.))G H
GoodG2BSink))H S
())S T
password))T \
)))] ^
;))^ _
}** 
public-- 

static-- 
void-- 
GoodB2GSink-- "
(--" #
string--# )
password--* 2
)--3 4
{.. K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_53d// G
.//G H
GoodB2GSink//H S
(//S T
password//T \
)//] ^
;//^ _
}00 
}22 
}33 ˘6
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_53d.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_53d E
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   
try!! 
{"" 	
using$$ 
($$ 
SqlConnection$$  

connection$$! +
=$$, -
new$$. 1
SqlConnection$$2 ?
($$? @
$str$$@ v
+$$w x
$str$$y }
+$$~ 
$str
$$Ä å
+
$$ç é
password
$$è ó
)
$$ó ò
)
$$ò ô
{%% 

connection&& 
.&& 
Open&& 
(&&  
)&&  !
;&&! "
using'' 
('' 

SqlCommand'' !
command''" )
=''* +
new'', /

SqlCommand''0 :
('': ;
$str''; U
,''U V

connection''W a
)''a b
)''b c
{(( 
command)) 
.)) 
ExecuteNonQuery)) +
())+ ,
))), -
;))- .
}** 
}++ 
},, 	
catch-- 
(-- 
SqlException-- 
	exceptSql-- %
)--% &
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. N
,//N O
	exceptSql//P Y
)//Y Z
;//Z [
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
string66# )
password66* 2
)663 4
{77 
try88 
{99 	
using;; 
(;; 
SqlConnection;;  

connection;;! +
=;;, -
new;;. 1
SqlConnection;;2 ?
(;;? @
$str;;@ v
+;;w x
$str;;y }
+;;~ 
$str
;;Ä å
+
;;ç é
password
;;è ó
)
;;ó ò
)
;;ò ô
{<< 

connection== 
.== 
Open== 
(==  
)==  !
;==! "
using>> 
(>> 

SqlCommand>> !
command>>" )
=>>* +
new>>, /

SqlCommand>>0 :
(>>: ;
$str>>; U
,>>U V

connection>>W a
)>>a b
)>>b c
{?? 
command@@ 
.@@ 
ExecuteNonQuery@@ +
(@@+ ,
)@@, -
;@@- .
}AA 
}BB 
}CC 	
catchDD 
(DD 
SqlExceptionDD 
	exceptSqlDD %
)DD% &
{EE 	
IOFF 
.FF 
LoggerFF 
.FF 
LogFF 
(FF 
NLogFF 
.FF 
LogLevelFF '
.FF' (
WarnFF( ,
,FF, -
$strFF. N
,FFN O
	exceptSqlFFP Y
)FFY Z
;FFZ [
}GG 	
}HH 
publicKK 

staticKK 
voidKK 
GoodB2GSinkKK "
(KK" #
stringKK# )
passwordKK* 2
)KK3 4
{LL 
ifMM 

(MM 
passwordMM 
!=MM 
nullMM 
)MM 
{NN 	
{PP 
usingQQ 
(QQ $
AesCryptoServiceProviderQQ /
aesAlgQQ0 6
=QQ7 8
newQQ9 <$
AesCryptoServiceProviderQQ= U
(QQU V
)QQV W
)QQW X
{RR 
aesAlgSS 
.SS 
PaddingSS "
=SS# $
PaddingModeSS% 0
.SS0 1
NoneSS1 5
;SS5 6
aesAlgTT 
.TT 
KeyTT 
=TT  
EncodingTT! )
.TT) *
UTF8TT* .
.TT. /
GetBytesTT/ 7
(TT7 8
$strTT8 J
)TTJ K
;TTK L
ICryptoTransformVV $
	decryptorVV% .
=VV/ 0
aesAlgVV1 7
.VV7 8
CreateDecryptorVV8 G
(VVG H
aesAlgVVH N
.VVN O
KeyVVO R
,VVR S
aesAlgVVT Z
.VVZ [
IVVV[ ]
)VV] ^
;VV^ _
usingXX 
(XX 
MemoryStreamXX '
	msDecryptXX( 1
=XX2 3
newXX4 7
MemoryStreamXX8 D
(XXD E
EncodingXXE M
.XXM N
UTF8XXN R
.XXR S
GetBytesXXS [
(XX[ \
passwordXX\ d
)XXd e
)XXe f
)XXf g
{YY 
usingZZ 
(ZZ 
CryptoStreamZZ +
	csDecryptZZ, 5
=ZZ6 7
newZZ8 ;
CryptoStreamZZ< H
(ZZH I
	msDecryptZZI R
,ZZR S
	decryptorZZT ]
,ZZ] ^
CryptoStreamModeZZ_ o
.ZZo p
ReadZZp t
)ZZt u
)ZZu v
{[[ 
using\\ !
(\\" #
StreamReader\\# /
	srDecrypt\\0 9
=\\: ;
new\\< ?
StreamReader\\@ L
(\\L M
	csDecrypt\\M V
)\\V W
)\\W X
{]] 
password``  (
=``) *
	srDecrypt``+ 4
.``4 5
	ReadToEnd``5 >
(``> ?
)``? @
;``@ A
}aa 
}bb 
}cc 
}dd 
}ee 
tryff 
{gg 
usingii 
(ii 
SqlConnectionii $

connectionii% /
=ii0 1
newii2 5
SqlConnectionii6 C
(iiC D
$striiD z
+ii{ |
$str	ii} Å
+
iiÇ É
$str
iiÑ ê
+
iië í
password
iiì õ
)
iiõ ú
)
iiú ù
{jj 

connectionkk 
.kk 
Openkk #
(kk# $
)kk$ %
;kk% &
usingll 
(ll 

SqlCommandll %
commandll& -
=ll. /
newll0 3

SqlCommandll4 >
(ll> ?
$strll? Y
,llY Z

connectionll[ e
)lle f
)llf g
{mm 
commandnn 
.nn  
ExecuteNonQuerynn  /
(nn/ 0
)nn0 1
;nn1 2
}oo 
}pp 
}qq 
catchrr 
(rr 
SqlExceptionrr 
	exceptSqlrr  )
)rr) *
{ss 
IOtt 
.tt 
Loggertt 
.tt 
Logtt 
(tt 
NLogtt "
.tt" #
LogLeveltt# +
.tt+ ,
Warntt, 0
,tt0 1
$strtt2 R
,ttR S
	exceptSqlttT ]
)tt] ^
;tt^ _
}uu 
}vv 	
}ww 
}yy 
}zz à"
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_54a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_54a E
:F G
AbstractTestCaseH X
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string 
password 
; 
password   
=   
$str   
;   
{"" 	
try## 
{$$ 
using%% 
(%% 
	WebClient%%  
client%%! '
=%%( )
new%%* -
	WebClient%%. 7
(%%7 8
)%%8 9
)%%9 :
{&& 
using'' 
('' 
StreamReader'' '
sr''( *
=''+ ,
new''- 0
StreamReader''1 =
(''= >
client''> D
.''D E
OpenRead''E M
(''M N
$str''N g
)''g h
)''h i
)''i j
{(( 
password,,  
=,,! "
sr,,# %
.,,% &
ReadLine,,& .
(,,. /
),,/ 0
;,,0 1
}-- 
}.. 
}// 
catch00 
(00 
IOException00 
exceptIO00 '
)00' (
{11 
IO22 
.22 
Logger22 
.22 
Log22 
(22 
NLog22 "
.22" #
LogLevel22# +
.22+ ,
Warn22, 0
,220 1
$str222 M
,22M N
exceptIO22O W
)22W X
;22X Y
}33 
}44 	K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_54b55 G
.55G H
BadSink55H O
(55O P
password55P X
)55Y Z
;55Z [
}66 
public99 

override99 
void99 
Good99 
(99 
)99 
{:: 
GoodG2B;; 
(;; 
);; 
;;; 
GoodB2G<< 
(<< 
)<< 
;<< 
}== 
private@@ 
void@@ 
GoodG2B@@ 
(@@ 
)@@ 
{AA 
stringBB 
passwordBB 
;BB 
passwordEE 
=EE 
$strEE "
;EE" #K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_54bFF G
.FFG H
GoodG2BSinkFFH S
(FFS T
passwordFFT \
)FF] ^
;FF^ _
}GG 
privateJJ 
voidJJ 
GoodB2GJJ 
(JJ 
)JJ 
{KK 
stringLL 
passwordLL 
;LL 
passwordMM 
=MM 
$strMM 
;MM 
{OO 	
tryPP 
{QQ 
usingRR 
(RR 
	WebClientRR  
clientRR! '
=RR( )
newRR* -
	WebClientRR. 7
(RR7 8
)RR8 9
)RR9 :
{SS 
usingTT 
(TT 
StreamReaderTT '
srTT( *
=TT+ ,
newTT- 0
StreamReaderTT1 =
(TT= >
clientTT> D
.TTD E
OpenReadTTE M
(TTM N
$strTTN g
)TTg h
)TTh i
)TTi j
{UU 
passwordYY  
=YY! "
srYY# %
.YY% &
ReadLineYY& .
(YY. /
)YY/ 0
;YY0 1
}ZZ 
}[[ 
}\\ 
catch]] 
(]] 
IOException]] 
exceptIO]] '
)]]' (
{^^ 
IO__ 
.__ 
Logger__ 
.__ 
Log__ 
(__ 
NLog__ "
.__" #
LogLevel__# +
.__+ ,
Warn__, 0
,__0 1
$str__2 M
,__M N
exceptIO__O W
)__W X
;__X Y
}`` 
}aa 	K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_54bbb G
.bbG H
GoodB2GSinkbbH S
(bbS T
passwordbbT \
)bb] ^
;bb^ _
}cc 
}ee 
}ff å
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_54b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_54b E
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_54c!! G
.!!G H
BadSink!!H O
(!!O P
password!!P X
)!!Y Z
;!!Z [
}"" 
public'' 

static'' 
void'' 
GoodG2BSink'' "
(''" #
string''# )
password''* 2
)''3 4
{(( K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_54c)) G
.))G H
GoodG2BSink))H S
())S T
password))T \
)))] ^
;))^ _
}** 
public-- 

static-- 
void-- 
GoodB2GSink-- "
(--" #
string--# )
password--* 2
)--3 4
{.. K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_54c// G
.//G H
GoodB2GSink//H S
(//S T
password//T \
)//] ^
;//^ _
}00 
}22 
}33 å
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_54c.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_54c E
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_54d!! G
.!!G H
BadSink!!H O
(!!O P
password!!P X
)!!Y Z
;!!Z [
}"" 
public'' 

static'' 
void'' 
GoodG2BSink'' "
(''" #
string''# )
password''* 2
)''3 4
{(( K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_54d)) G
.))G H
GoodG2BSink))H S
())S T
password))T \
)))] ^
;))^ _
}** 
public-- 

static-- 
void-- 
GoodB2GSink-- "
(--" #
string--# )
password--* 2
)--3 4
{.. K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_54d// G
.//G H
GoodB2GSink//H S
(//S T
password//T \
)//] ^
;//^ _
}00 
}22 
}33 å
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_54d.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_54d E
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_54e!! G
.!!G H
BadSink!!H O
(!!O P
password!!P X
)!!Y Z
;!!Z [
}"" 
public'' 

static'' 
void'' 
GoodG2BSink'' "
(''" #
string''# )
password''* 2
)''3 4
{(( K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_54e)) G
.))G H
GoodG2BSink))H S
())S T
password))T \
)))] ^
;))^ _
}** 
public-- 

static-- 
void-- 
GoodB2GSink-- "
(--" #
string--# )
password--* 2
)--3 4
{.. K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_54e// G
.//G H
GoodB2GSink//H S
(//S T
password//T \
)//] ^
;//^ _
}00 
}22 
}33 ˘6
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_54e.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_54e E
{ 
public 

static 
void 
BadSink 
( 
string %
password& .
)/ 0
{   
try!! 
{"" 	
using$$ 
($$ 
SqlConnection$$  

connection$$! +
=$$, -
new$$. 1
SqlConnection$$2 ?
($$? @
$str$$@ v
+$$w x
$str$$y }
+$$~ 
$str
$$Ä å
+
$$ç é
password
$$è ó
)
$$ó ò
)
$$ò ô
{%% 

connection&& 
.&& 
Open&& 
(&&  
)&&  !
;&&! "
using'' 
('' 

SqlCommand'' !
command''" )
=''* +
new'', /

SqlCommand''0 :
('': ;
$str''; U
,''U V

connection''W a
)''a b
)''b c
{(( 
command)) 
.)) 
ExecuteNonQuery)) +
())+ ,
))), -
;))- .
}** 
}++ 
},, 	
catch-- 
(-- 
SqlException-- 
	exceptSql-- %
)--% &
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. N
,//N O
	exceptSql//P Y
)//Y Z
;//Z [
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
string66# )
password66* 2
)663 4
{77 
try88 
{99 	
using;; 
(;; 
SqlConnection;;  

connection;;! +
=;;, -
new;;. 1
SqlConnection;;2 ?
(;;? @
$str;;@ v
+;;w x
$str;;y }
+;;~ 
$str
;;Ä å
+
;;ç é
password
;;è ó
)
;;ó ò
)
;;ò ô
{<< 

connection== 
.== 
Open== 
(==  
)==  !
;==! "
using>> 
(>> 

SqlCommand>> !
command>>" )
=>>* +
new>>, /

SqlCommand>>0 :
(>>: ;
$str>>; U
,>>U V

connection>>W a
)>>a b
)>>b c
{?? 
command@@ 
.@@ 
ExecuteNonQuery@@ +
(@@+ ,
)@@, -
;@@- .
}AA 
}BB 
}CC 	
catchDD 
(DD 
SqlExceptionDD 
	exceptSqlDD %
)DD% &
{EE 	
IOFF 
.FF 
LoggerFF 
.FF 
LogFF 
(FF 
NLogFF 
.FF 
LogLevelFF '
.FF' (
WarnFF( ,
,FF, -
$strFF. N
,FFN O
	exceptSqlFFP Y
)FFY Z
;FFZ [
}GG 	
}HH 
publicKK 

staticKK 
voidKK 
GoodB2GSinkKK "
(KK" #
stringKK# )
passwordKK* 2
)KK3 4
{LL 
ifMM 

(MM 
passwordMM 
!=MM 
nullMM 
)MM 
{NN 	
{PP 
usingQQ 
(QQ $
AesCryptoServiceProviderQQ /
aesAlgQQ0 6
=QQ7 8
newQQ9 <$
AesCryptoServiceProviderQQ= U
(QQU V
)QQV W
)QQW X
{RR 
aesAlgSS 
.SS 
PaddingSS "
=SS# $
PaddingModeSS% 0
.SS0 1
NoneSS1 5
;SS5 6
aesAlgTT 
.TT 
KeyTT 
=TT  
EncodingTT! )
.TT) *
UTF8TT* .
.TT. /
GetBytesTT/ 7
(TT7 8
$strTT8 J
)TTJ K
;TTK L
ICryptoTransformVV $
	decryptorVV% .
=VV/ 0
aesAlgVV1 7
.VV7 8
CreateDecryptorVV8 G
(VVG H
aesAlgVVH N
.VVN O
KeyVVO R
,VVR S
aesAlgVVT Z
.VVZ [
IVVV[ ]
)VV] ^
;VV^ _
usingXX 
(XX 
MemoryStreamXX '
	msDecryptXX( 1
=XX2 3
newXX4 7
MemoryStreamXX8 D
(XXD E
EncodingXXE M
.XXM N
UTF8XXN R
.XXR S
GetBytesXXS [
(XX[ \
passwordXX\ d
)XXd e
)XXe f
)XXf g
{YY 
usingZZ 
(ZZ 
CryptoStreamZZ +
	csDecryptZZ, 5
=ZZ6 7
newZZ8 ;
CryptoStreamZZ< H
(ZZH I
	msDecryptZZI R
,ZZR S
	decryptorZZT ]
,ZZ] ^
CryptoStreamModeZZ_ o
.ZZo p
ReadZZp t
)ZZt u
)ZZu v
{[[ 
using\\ !
(\\" #
StreamReader\\# /
	srDecrypt\\0 9
=\\: ;
new\\< ?
StreamReader\\@ L
(\\L M
	csDecrypt\\M V
)\\V W
)\\W X
{]] 
password``  (
=``) *
	srDecrypt``+ 4
.``4 5
	ReadToEnd``5 >
(``> ?
)``? @
;``@ A
}aa 
}bb 
}cc 
}dd 
}ee 
tryff 
{gg 
usingii 
(ii 
SqlConnectionii $

connectionii% /
=ii0 1
newii2 5
SqlConnectionii6 C
(iiC D
$striiD z
+ii{ |
$str	ii} Å
+
iiÇ É
$str
iiÑ ê
+
iië í
password
iiì õ
)
iiõ ú
)
iiú ù
{jj 

connectionkk 
.kk 
Openkk #
(kk# $
)kk$ %
;kk% &
usingll 
(ll 

SqlCommandll %
commandll& -
=ll. /
newll0 3

SqlCommandll4 >
(ll> ?
$strll? Y
,llY Z

connectionll[ e
)lle f
)llf g
{mm 
commandnn 
.nn  
ExecuteNonQuerynn  /
(nn/ 0
)nn0 1
;nn1 2
}oo 
}pp 
}qq 
catchrr 
(rr 
SqlExceptionrr 
	exceptSqlrr  )
)rr) *
{ss 
IOtt 
.tt 
Loggertt 
.tt 
Logtt 
(tt 
NLogtt "
.tt" #
LogLeveltt# +
.tt+ ,
Warntt, 0
,tt0 1
$strtt2 R
,ttR S
	exceptSqlttT ]
)tt] ^
;tt^ _
}uu 
}vv 	
}ww 
}yy 
}zz ≈=
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_61a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_61a E
:F G
AbstractTestCaseH X
{ 
public 

override 
void 
Bad 
( 
) 
{   
string!! 
password!! 
=!! K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_61b!! Y
.!!Y Z
	BadSource!!Z c
(!!c d
)!!d e
;!!e f
try"" 
{## 	
using%% 
(%% 
SqlConnection%%  

connection%%! +
=%%, -
new%%. 1
SqlConnection%%2 ?
(%%? @
$str%%@ v
+%%w x
$str%%y }
+%%~ 
$str
%%Ä å
+
%%ç é
password
%%è ó
)
%%ó ò
)
%%ò ô
{&& 

connection'' 
.'' 
Open'' 
(''  
)''  !
;''! "
using(( 
((( 

SqlCommand(( !
command((" )
=((* +
new((, /

SqlCommand((0 :
(((: ;
$str((; U
,((U V

connection((W a
)((a b
)((b c
{)) 
command** 
.** 
ExecuteNonQuery** +
(**+ ,
)**, -
;**- .
}++ 
},, 
}-- 	
catch.. 
(.. 
SqlException.. 
	exceptSql.. %
)..% &
{// 	
IO00 
.00 
Logger00 
.00 
Log00 
(00 
NLog00 
.00 
LogLevel00 '
.00' (
Warn00( ,
,00, -
$str00. N
,00N O
	exceptSql00P Y
)00Y Z
;00Z [
}11 	
}22 
public55 

override55 
void55 
Good55 
(55 
)55 
{66 
GoodG2B77 
(77 
)77 
;77 
GoodB2G88 
(88 
)88 
;88 
}99 
private<< 
static<< 
void<< 
GoodG2B<< 
(<<  
)<<  !
{== 
string>> 
password>> 
=>> K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_61b>> Y
.>>Y Z
GoodG2BSource>>Z g
(>>g h
)>>h i
;>>i j
try?? 
{@@ 	
usingBB 
(BB 
SqlConnectionBB  

connectionBB! +
=BB, -
newBB. 1
SqlConnectionBB2 ?
(BB? @
$strBB@ v
+BBw x
$strBBy }
+BB~ 
$str
BBÄ å
+
BBç é
password
BBè ó
)
BBó ò
)
BBò ô
{CC 

connectionDD 
.DD 
OpenDD 
(DD  
)DD  !
;DD! "
usingEE 
(EE 

SqlCommandEE !
commandEE" )
=EE* +
newEE, /

SqlCommandEE0 :
(EE: ;
$strEE; U
,EEU V

connectionEEW a
)EEa b
)EEb c
{FF 
commandGG 
.GG 
ExecuteNonQueryGG +
(GG+ ,
)GG, -
;GG- .
}HH 
}II 
}JJ 	
catchKK 
(KK 
SqlExceptionKK 
	exceptSqlKK %
)KK% &
{LL 	
IOMM 
.MM 
LoggerMM 
.MM 
LogMM 
(MM 
NLogMM 
.MM 
LogLevelMM '
.MM' (
WarnMM( ,
,MM, -
$strMM. N
,MMN O
	exceptSqlMMP Y
)MMY Z
;MMZ [
}NN 	
}OO 
privateRR 
staticRR 
voidRR 
GoodB2GRR 
(RR  
)RR  !
{SS 
stringTT 
passwordTT 
=TT K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_61bTT Y
.TTY Z
GoodB2GSourceTTZ g
(TTg h
)TTh i
;TTi j
ifUU 

(UU 
passwordUU 
!=UU 
nullUU 
)UU 
{VV 	
{XX 
usingYY 
(YY $
AesCryptoServiceProviderYY /
aesAlgYY0 6
=YY7 8
newYY9 <$
AesCryptoServiceProviderYY= U
(YYU V
)YYV W
)YYW X
{ZZ 
aesAlg[[ 
.[[ 
Padding[[ "
=[[# $
PaddingMode[[% 0
.[[0 1
None[[1 5
;[[5 6
aesAlg\\ 
.\\ 
Key\\ 
=\\  
Encoding\\! )
.\\) *
UTF8\\* .
.\\. /
GetBytes\\/ 7
(\\7 8
$str\\8 J
)\\J K
;\\K L
ICryptoTransform^^ $
	decryptor^^% .
=^^/ 0
aesAlg^^1 7
.^^7 8
CreateDecryptor^^8 G
(^^G H
aesAlg^^H N
.^^N O
Key^^O R
,^^R S
aesAlg^^T Z
.^^Z [
IV^^[ ]
)^^] ^
;^^^ _
using`` 
(`` 
MemoryStream`` '
	msDecrypt``( 1
=``2 3
new``4 7
MemoryStream``8 D
(``D E
Encoding``E M
.``M N
UTF8``N R
.``R S
GetBytes``S [
(``[ \
password``\ d
)``d e
)``e f
)``f g
{aa 
usingbb 
(bb 
CryptoStreambb +
	csDecryptbb, 5
=bb6 7
newbb8 ;
CryptoStreambb< H
(bbH I
	msDecryptbbI R
,bbR S
	decryptorbbT ]
,bb] ^
CryptoStreamModebb_ o
.bbo p
Readbbp t
)bbt u
)bbu v
{cc 
usingdd !
(dd" #
StreamReaderdd# /
	srDecryptdd0 9
=dd: ;
newdd< ?
StreamReaderdd@ L
(ddL M
	csDecryptddM V
)ddV W
)ddW X
{ee 
passwordhh  (
=hh) *
	srDecrypthh+ 4
.hh4 5
	ReadToEndhh5 >
(hh> ?
)hh? @
;hh@ A
}ii 
}jj 
}kk 
}ll 
}mm 
trynn 
{oo 
usingqq 
(qq 
SqlConnectionqq $

connectionqq% /
=qq0 1
newqq2 5
SqlConnectionqq6 C
(qqC D
$strqqD z
+qq{ |
$str	qq} Å
+
qqÇ É
$str
qqÑ ê
+
qqë í
password
qqì õ
)
qqõ ú
)
qqú ù
{rr 

connectionss 
.ss 
Openss #
(ss# $
)ss$ %
;ss% &
usingtt 
(tt 

SqlCommandtt %
commandtt& -
=tt. /
newtt0 3

SqlCommandtt4 >
(tt> ?
$strtt? Y
,ttY Z

connectiontt[ e
)tte f
)ttf g
{uu 
commandvv 
.vv  
ExecuteNonQueryvv  /
(vv/ 0
)vv0 1
;vv1 2
}ww 
}xx 
}yy 
catchzz 
(zz 
SqlExceptionzz 
	exceptSqlzz  )
)zz) *
{{{ 
IO|| 
.|| 
Logger|| 
.|| 
Log|| 
(|| 
NLog|| "
.||" #
LogLevel||# +
.||+ ,
Warn||, 0
,||0 1
$str||2 R
,||R S
	exceptSql||T ]
)||] ^
;||^ _
}}} 
}~~ 	
} 
}ÅÅ 
}ÇÇ ê
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_61b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_61b E
{ 
public 

static 
string 
	BadSource "
(" #
)# $
{ 
string 
password 
; 
password   
=   
$str   
;   
{"" 	
try## 
{$$ 
using%% 
(%% 
	WebClient%%  
client%%! '
=%%( )
new%%* -
	WebClient%%. 7
(%%7 8
)%%8 9
)%%9 :
{&& 
using'' 
('' 
StreamReader'' '
sr''( *
=''+ ,
new''- 0
StreamReader''1 =
(''= >
client''> D
.''D E
OpenRead''E M
(''M N
$str''N g
)''g h
)''h i
)''i j
{(( 
password,,  
=,,! "
sr,,# %
.,,% &
ReadLine,,& .
(,,. /
),,/ 0
;,,0 1
}-- 
}.. 
}// 
catch00 
(00 
IOException00 
exceptIO00 '
)00' (
{11 
IO22 
.22 
Logger22 
.22 
Log22 
(22 
NLog22 "
.22" #
LogLevel22# +
.22+ ,
Warn22, 0
,220 1
$str222 M
,22M N
exceptIO22O W
)22W X
;22X Y
}33 
}44 	
return55 
password55 
;55 
}66 
public;; 

static;; 
string;; 
GoodG2BSource;; &
(;;& '
);;' (
{<< 
string== 
password== 
;== 
password@@ 
=@@ 
$str@@ "
;@@" #
returnAA 
passwordAA 
;AA 
}BB 
publicEE 

staticEE 
stringEE 
GoodB2GSourceEE &
(EE& '
)EE' (
{FF 
stringGG 
passwordGG 
;GG 
passwordHH 
=HH 
$strHH 
;HH 
{JJ 	
tryKK 
{LL 
usingMM 
(MM 
	WebClientMM  
clientMM! '
=MM( )
newMM* -
	WebClientMM. 7
(MM7 8
)MM8 9
)MM9 :
{NN 
usingOO 
(OO 
StreamReaderOO '
srOO( *
=OO+ ,
newOO- 0
StreamReaderOO1 =
(OO= >
clientOO> D
.OOD E
OpenReadOOE M
(OOM N
$strOON g
)OOg h
)OOh i
)OOi j
{PP 
passwordTT  
=TT! "
srTT# %
.TT% &
ReadLineTT& .
(TT. /
)TT/ 0
;TT0 1
}UU 
}VV 
}WW 
catchXX 
(XX 
IOExceptionXX 
exceptIOXX '
)XX' (
{YY 
IOZZ 
.ZZ 
LoggerZZ 
.ZZ 
LogZZ 
(ZZ 
NLogZZ "
.ZZ" #
LogLevelZZ# +
.ZZ+ ,
WarnZZ, 0
,ZZ0 1
$strZZ2 M
,ZZM N
exceptIOZZO W
)ZZW X
;ZZX Y
}[[ 
}\\ 	
return]] 
password]] 
;]] 
}^^ 
}`` 
}aa ¸)
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_66a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_66a E
:F G
AbstractTestCaseH X
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string 
password 
; 
password   
=   
$str   
;   
{"" 	
try## 
{$$ 
using%% 
(%% 
	WebClient%%  
client%%! '
=%%( )
new%%* -
	WebClient%%. 7
(%%7 8
)%%8 9
)%%9 :
{&& 
using'' 
('' 
StreamReader'' '
sr''( *
=''+ ,
new''- 0
StreamReader''1 =
(''= >
client''> D
.''D E
OpenRead''E M
(''M N
$str''N g
)''g h
)''h i
)''i j
{(( 
password,,  
=,,! "
sr,,# %
.,,% &
ReadLine,,& .
(,,. /
),,/ 0
;,,0 1
}-- 
}.. 
}// 
catch00 
(00 
IOException00 
exceptIO00 '
)00' (
{11 
IO22 
.22 
Logger22 
.22 
Log22 
(22 
NLog22 "
.22" #
LogLevel22# +
.22+ ,
Warn22, 0
,220 1
$str222 M
,22M N
exceptIO22O W
)22W X
;22X Y
}33 
}44 	
string55 
[55 
]55 
passwordArray55 
=55  
new55! $
string55% +
[55+ ,
$num55, -
]55- .
;55. /
passwordArray66 
[66 
$num66 
]66 
=66 
password66 #
;66# $K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_66b77 G
.77G H
BadSink77H O
(77O P
passwordArray77P ]
)77_ `
;77` a
}88 
public;; 

override;; 
void;; 
Good;; 
(;; 
);; 
{<< 
GoodG2B== 
(== 
)== 
;== 
GoodB2G>> 
(>> 
)>> 
;>> 
}?? 
privateBB 
staticBB 
voidBB 
GoodG2BBB 
(BB  
)BB  !
{CC 
stringDD 
passwordDD 
;DD 
passwordGG 
=GG 
$strGG "
;GG" #
stringHH 
[HH 
]HH 
passwordArrayHH 
=HH  
newHH! $
stringHH% +
[HH+ ,
$numHH, -
]HH- .
;HH. /
passwordArrayII 
[II 
$numII 
]II 
=II 
passwordII #
;II# $K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_66bJJ G
.JJG H
GoodG2BSinkJJH S
(JJS T
passwordArrayJJT a
)JJc d
;JJd e
}KK 
privateNN 
staticNN 
voidNN 
GoodB2GNN 
(NN  
)NN  !
{OO 
stringPP 
passwordPP 
;PP 
passwordQQ 
=QQ 
$strQQ 
;QQ 
{SS 	
tryTT 
{UU 
usingVV 
(VV 
	WebClientVV  
clientVV! '
=VV( )
newVV* -
	WebClientVV. 7
(VV7 8
)VV8 9
)VV9 :
{WW 
usingXX 
(XX 
StreamReaderXX '
srXX( *
=XX+ ,
newXX- 0
StreamReaderXX1 =
(XX= >
clientXX> D
.XXD E
OpenReadXXE M
(XXM N
$strXXN g
)XXg h
)XXh i
)XXi j
{YY 
password]]  
=]]! "
sr]]# %
.]]% &
ReadLine]]& .
(]]. /
)]]/ 0
;]]0 1
}^^ 
}__ 
}`` 
catchaa 
(aa 
IOExceptionaa 
exceptIOaa '
)aa' (
{bb 
IOcc 
.cc 
Loggercc 
.cc 
Logcc 
(cc 
NLogcc "
.cc" #
LogLevelcc# +
.cc+ ,
Warncc, 0
,cc0 1
$strcc2 M
,ccM N
exceptIOccO W
)ccW X
;ccX Y
}dd 
}ee 	
stringff 
[ff 
]ff 
passwordArrayff 
=ff  
newff! $
stringff% +
[ff+ ,
$numff, -
]ff- .
;ff. /
passwordArraygg 
[gg 
$numgg 
]gg 
=gg 
passwordgg #
;gg# $K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_66bhh G
.hhG H
GoodB2GSinkhhH S
(hhS T
passwordArrayhhT a
)hhc d
;hhd e
}ii 
}kk 
}ll õ;
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_66b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_66b E
{ 
public 

static 
void 
BadSink 
( 
string %
[% &
]& '
passwordArray( 5
)6 7
{   
string!! 
password!! 
=!! 
passwordArray!! '
[!!' (
$num!!( )
]!!) *
;!!* +
try"" 
{## 	
using%% 
(%% 
SqlConnection%%  

connection%%! +
=%%, -
new%%. 1
SqlConnection%%2 ?
(%%? @
$str%%@ v
+%%w x
$str%%y }
+%%~ 
$str
%%Ä å
+
%%ç é
password
%%è ó
)
%%ó ò
)
%%ò ô
{&& 

connection'' 
.'' 
Open'' 
(''  
)''  !
;''! "
using(( 
((( 

SqlCommand(( !
command((" )
=((* +
new((, /

SqlCommand((0 :
(((: ;
$str((; U
,((U V

connection((W a
)((a b
)((b c
{)) 
command** 
.** 
ExecuteNonQuery** +
(**+ ,
)**, -
;**- .
}++ 
},, 
}-- 	
catch.. 
(.. 
SqlException.. 
	exceptSql.. %
)..% &
{// 	
IO00 
.00 
Logger00 
.00 
Log00 
(00 
NLog00 
.00 
LogLevel00 '
.00' (
Warn00( ,
,00, -
$str00. N
,00N O
	exceptSql00P Y
)00Y Z
;00Z [
}11 	
}22 
public77 

static77 
void77 
GoodG2BSink77 "
(77" #
string77# )
[77) *
]77* +
passwordArray77, 9
)77: ;
{88 
string99 
password99 
=99 
passwordArray99 '
[99' (
$num99( )
]99) *
;99* +
try:: 
{;; 	
using== 
(== 
SqlConnection==  

connection==! +
===, -
new==. 1
SqlConnection==2 ?
(==? @
$str==@ v
+==w x
$str==y }
+==~ 
$str
==Ä å
+
==ç é
password
==è ó
)
==ó ò
)
==ò ô
{>> 

connection?? 
.?? 
Open?? 
(??  
)??  !
;??! "
using@@ 
(@@ 

SqlCommand@@ !
command@@" )
=@@* +
new@@, /

SqlCommand@@0 :
(@@: ;
$str@@; U
,@@U V

connection@@W a
)@@a b
)@@b c
{AA 
commandBB 
.BB 
ExecuteNonQueryBB +
(BB+ ,
)BB, -
;BB- .
}CC 
}DD 
}EE 	
catchFF 
(FF 
SqlExceptionFF 
	exceptSqlFF %
)FF% &
{GG 	
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH 
.HH 
LogLevelHH '
.HH' (
WarnHH( ,
,HH, -
$strHH. N
,HHN O
	exceptSqlHHP Y
)HHY Z
;HHZ [
}II 	
}JJ 
publicMM 

staticMM 
voidMM 
GoodB2GSinkMM "
(MM" #
stringMM# )
[MM) *
]MM* +
passwordArrayMM, 9
)MM: ;
{NN 
stringOO 
passwordOO 
=OO 
passwordArrayOO '
[OO' (
$numOO( )
]OO) *
;OO* +
ifPP 

(PP 
passwordPP 
!=PP 
nullPP 
)PP 
{QQ 	
{SS 
usingTT 
(TT $
AesCryptoServiceProviderTT /
aesAlgTT0 6
=TT7 8
newTT9 <$
AesCryptoServiceProviderTT= U
(TTU V
)TTV W
)TTW X
{UU 
aesAlgVV 
.VV 
PaddingVV "
=VV# $
PaddingModeVV% 0
.VV0 1
NoneVV1 5
;VV5 6
aesAlgWW 
.WW 
KeyWW 
=WW  
EncodingWW! )
.WW) *
UTF8WW* .
.WW. /
GetBytesWW/ 7
(WW7 8
$strWW8 J
)WWJ K
;WWK L
ICryptoTransformYY $
	decryptorYY% .
=YY/ 0
aesAlgYY1 7
.YY7 8
CreateDecryptorYY8 G
(YYG H
aesAlgYYH N
.YYN O
KeyYYO R
,YYR S
aesAlgYYT Z
.YYZ [
IVYY[ ]
)YY] ^
;YY^ _
using[[ 
([[ 
MemoryStream[[ '
	msDecrypt[[( 1
=[[2 3
new[[4 7
MemoryStream[[8 D
([[D E
Encoding[[E M
.[[M N
UTF8[[N R
.[[R S
GetBytes[[S [
([[[ \
password[[\ d
)[[d e
)[[e f
)[[f g
{\\ 
using]] 
(]] 
CryptoStream]] +
	csDecrypt]], 5
=]]6 7
new]]8 ;
CryptoStream]]< H
(]]H I
	msDecrypt]]I R
,]]R S
	decryptor]]T ]
,]]] ^
CryptoStreamMode]]_ o
.]]o p
Read]]p t
)]]t u
)]]u v
{^^ 
using__ !
(__" #
StreamReader__# /
	srDecrypt__0 9
=__: ;
new__< ?
StreamReader__@ L
(__L M
	csDecrypt__M V
)__V W
)__W X
{`` 
passwordcc  (
=cc) *
	srDecryptcc+ 4
.cc4 5
	ReadToEndcc5 >
(cc> ?
)cc? @
;cc@ A
}dd 
}ee 
}ff 
}gg 
}hh 
tryii 
{jj 
usingll 
(ll 
SqlConnectionll $

connectionll% /
=ll0 1
newll2 5
SqlConnectionll6 C
(llC D
$strllD z
+ll{ |
$str	ll} Å
+
llÇ É
$str
llÑ ê
+
llë í
password
llì õ
)
llõ ú
)
llú ù
{mm 

connectionnn 
.nn 
Opennn #
(nn# $
)nn$ %
;nn% &
usingoo 
(oo 

SqlCommandoo %
commandoo& -
=oo. /
newoo0 3

SqlCommandoo4 >
(oo> ?
$stroo? Y
,ooY Z

connectionoo[ e
)ooe f
)oof g
{pp 
commandqq 
.qq  
ExecuteNonQueryqq  /
(qq/ 0
)qq0 1
;qq1 2
}rr 
}ss 
}tt 
catchuu 
(uu 
SqlExceptionuu 
	exceptSqluu  )
)uu) *
{vv 
IOww 
.ww 
Loggerww 
.ww 
Logww 
(ww 
NLogww "
.ww" #
LogLevelww# +
.ww+ ,
Warnww, 0
,ww0 1
$strww2 R
,wwR S
	exceptSqlwwT ]
)ww] ^
;ww^ _
}xx 
}yy 	
}zz 
}|| 
}}} ∫*
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_67a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_67a E
:F G
AbstractTestCaseH X
{ 
public 

class 
	Container 
{ 
public 
string 
containerOne "
;" #
}   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
string$$ 
password$$ 
;$$ 
password%% 
=%% 
$str%% 
;%% 
{'' 	
try(( 
{)) 
using** 
(** 
	WebClient**  
client**! '
=**( )
new*** -
	WebClient**. 7
(**7 8
)**8 9
)**9 :
{++ 
using,, 
(,, 
StreamReader,, '
sr,,( *
=,,+ ,
new,,- 0
StreamReader,,1 =
(,,= >
client,,> D
.,,D E
OpenRead,,E M
(,,M N
$str,,N g
),,g h
),,h i
),,i j
{-- 
password11  
=11! "
sr11# %
.11% &
ReadLine11& .
(11. /
)11/ 0
;110 1
}22 
}33 
}44 
catch55 
(55 
IOException55 
exceptIO55 '
)55' (
{66 
IO77 
.77 
Logger77 
.77 
Log77 
(77 
NLog77 "
.77" #
LogLevel77# +
.77+ ,
Warn77, 0
,770 1
$str772 M
,77M N
exceptIO77O W
)77W X
;77X Y
}88 
}99 	
	Container:: 
passwordContainer:: #
=::$ %
new::& )
	Container::* 3
(::3 4
)::4 5
;::5 6
passwordContainer;; 
.;; 
containerOne;; &
=;;' (
password;;) 1
;;;1 2K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_67b<< G
.<<G H
BadSink<<H O
(<<O P
passwordContainer<<P a
)<<c d
;<<d e
}== 
public@@ 

override@@ 
void@@ 
Good@@ 
(@@ 
)@@ 
{AA 
GoodG2BBB 
(BB 
)BB 
;BB 
GoodB2GCC 
(CC 
)CC 
;CC 
}DD 
privateGG 
staticGG 
voidGG 
GoodG2BGG 
(GG  
)GG  !
{HH 
stringII 
passwordII 
;II 
passwordLL 
=LL 
$strLL "
;LL" #
	ContainerMM 
passwordContainerMM #
=MM$ %
newMM& )
	ContainerMM* 3
(MM3 4
)MM4 5
;MM5 6
passwordContainerNN 
.NN 
containerOneNN &
=NN' (
passwordNN) 1
;NN1 2K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_67bOO G
.OOG H
GoodG2BSinkOOH S
(OOS T
passwordContainerOOT e
)OOg h
;OOh i
}PP 
privateSS 
staticSS 
voidSS 
GoodB2GSS 
(SS  
)SS  !
{TT 
stringUU 
passwordUU 
;UU 
passwordVV 
=VV 
$strVV 
;VV 
{XX 	
tryYY 
{ZZ 
using[[ 
([[ 
	WebClient[[  
client[[! '
=[[( )
new[[* -
	WebClient[[. 7
([[7 8
)[[8 9
)[[9 :
{\\ 
using]] 
(]] 
StreamReader]] '
sr]]( *
=]]+ ,
new]]- 0
StreamReader]]1 =
(]]= >
client]]> D
.]]D E
OpenRead]]E M
(]]M N
$str]]N g
)]]g h
)]]h i
)]]i j
{^^ 
passwordbb  
=bb! "
srbb# %
.bb% &
ReadLinebb& .
(bb. /
)bb/ 0
;bb0 1
}cc 
}dd 
}ee 
catchff 
(ff 
IOExceptionff 
exceptIOff '
)ff' (
{gg 
IOhh 
.hh 
Loggerhh 
.hh 
Loghh 
(hh 
NLoghh "
.hh" #
LogLevelhh# +
.hh+ ,
Warnhh, 0
,hh0 1
$strhh2 M
,hhM N
exceptIOhhO W
)hhW X
;hhX Y
}ii 
}jj 	
	Containerkk 
passwordContainerkk #
=kk$ %
newkk& )
	Containerkk* 3
(kk3 4
)kk4 5
;kk5 6
passwordContainerll 
.ll 
containerOnell &
=ll' (
passwordll) 1
;ll1 2K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_67bmm G
.mmG H
GoodB2GSinkmmH S
(mmS T
passwordContainermmT e
)mmg h
;mmh i
}nn 
}pp 
}qq „<
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_67b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_67b E
{ 
public 

static 
void 
BadSink 
( K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_67a ^
.^ _
	Container_ h
passwordContaineri z
){ |
{   
string!! 
password!! 
=!! 
passwordContainer!! +
.!!+ ,
containerOne!!, 8
;!!8 9
try"" 
{## 	
using%% 
(%% 
SqlConnection%%  

connection%%! +
=%%, -
new%%. 1
SqlConnection%%2 ?
(%%? @
$str%%@ v
+%%w x
$str%%y }
+%%~ 
$str
%%Ä å
+
%%ç é
password
%%è ó
)
%%ó ò
)
%%ò ô
{&& 

connection'' 
.'' 
Open'' 
(''  
)''  !
;''! "
using(( 
((( 

SqlCommand(( !
command((" )
=((* +
new((, /

SqlCommand((0 :
(((: ;
$str((; U
,((U V

connection((W a
)((a b
)((b c
{)) 
command** 
.** 
ExecuteNonQuery** +
(**+ ,
)**, -
;**- .
}++ 
},, 
}-- 	
catch.. 
(.. 
SqlException.. 
	exceptSql.. %
)..% &
{// 	
IO00 
.00 
Logger00 
.00 
Log00 
(00 
NLog00 
.00 
LogLevel00 '
.00' (
Warn00( ,
,00, -
$str00. N
,00N O
	exceptSql00P Y
)00Y Z
;00Z [
}11 	
}22 
public77 

static77 
void77 
GoodG2BSink77 "
(77" #K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_67a77# b
.77b c
	Container77c l
passwordContainer77m ~
)	77 Ä
{88 
string99 
password99 
=99 
passwordContainer99 +
.99+ ,
containerOne99, 8
;998 9
try:: 
{;; 	
using== 
(== 
SqlConnection==  

connection==! +
===, -
new==. 1
SqlConnection==2 ?
(==? @
$str==@ v
+==w x
$str==y }
+==~ 
$str
==Ä å
+
==ç é
password
==è ó
)
==ó ò
)
==ò ô
{>> 

connection?? 
.?? 
Open?? 
(??  
)??  !
;??! "
using@@ 
(@@ 

SqlCommand@@ !
command@@" )
=@@* +
new@@, /

SqlCommand@@0 :
(@@: ;
$str@@; U
,@@U V

connection@@W a
)@@a b
)@@b c
{AA 
commandBB 
.BB 
ExecuteNonQueryBB +
(BB+ ,
)BB, -
;BB- .
}CC 
}DD 
}EE 	
catchFF 
(FF 
SqlExceptionFF 
	exceptSqlFF %
)FF% &
{GG 	
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH 
.HH 
LogLevelHH '
.HH' (
WarnHH( ,
,HH, -
$strHH. N
,HHN O
	exceptSqlHHP Y
)HHY Z
;HHZ [
}II 	
}JJ 
publicMM 

staticMM 
voidMM 
GoodB2GSinkMM "
(MM" #K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_67aMM# b
.MMb c
	ContainerMMc l
passwordContainerMMm ~
)	MM Ä
{NN 
stringOO 
passwordOO 
=OO 
passwordContainerOO +
.OO+ ,
containerOneOO, 8
;OO8 9
ifPP 

(PP 
passwordPP 
!=PP 
nullPP 
)PP 
{QQ 	
{SS 
usingTT 
(TT $
AesCryptoServiceProviderTT /
aesAlgTT0 6
=TT7 8
newTT9 <$
AesCryptoServiceProviderTT= U
(TTU V
)TTV W
)TTW X
{UU 
aesAlgVV 
.VV 
PaddingVV "
=VV# $
PaddingModeVV% 0
.VV0 1
NoneVV1 5
;VV5 6
aesAlgWW 
.WW 
KeyWW 
=WW  
EncodingWW! )
.WW) *
UTF8WW* .
.WW. /
GetBytesWW/ 7
(WW7 8
$strWW8 J
)WWJ K
;WWK L
ICryptoTransformYY $
	decryptorYY% .
=YY/ 0
aesAlgYY1 7
.YY7 8
CreateDecryptorYY8 G
(YYG H
aesAlgYYH N
.YYN O
KeyYYO R
,YYR S
aesAlgYYT Z
.YYZ [
IVYY[ ]
)YY] ^
;YY^ _
using[[ 
([[ 
MemoryStream[[ '
	msDecrypt[[( 1
=[[2 3
new[[4 7
MemoryStream[[8 D
([[D E
Encoding[[E M
.[[M N
UTF8[[N R
.[[R S
GetBytes[[S [
([[[ \
password[[\ d
)[[d e
)[[e f
)[[f g
{\\ 
using]] 
(]] 
CryptoStream]] +
	csDecrypt]], 5
=]]6 7
new]]8 ;
CryptoStream]]< H
(]]H I
	msDecrypt]]I R
,]]R S
	decryptor]]T ]
,]]] ^
CryptoStreamMode]]_ o
.]]o p
Read]]p t
)]]t u
)]]u v
{^^ 
using__ !
(__" #
StreamReader__# /
	srDecrypt__0 9
=__: ;
new__< ?
StreamReader__@ L
(__L M
	csDecrypt__M V
)__V W
)__W X
{`` 
passwordcc  (
=cc) *
	srDecryptcc+ 4
.cc4 5
	ReadToEndcc5 >
(cc> ?
)cc? @
;cc@ A
}dd 
}ee 
}ff 
}gg 
}hh 
tryii 
{jj 
usingll 
(ll 
SqlConnectionll $

connectionll% /
=ll0 1
newll2 5
SqlConnectionll6 C
(llC D
$strllD z
+ll{ |
$str	ll} Å
+
llÇ É
$str
llÑ ê
+
llë í
password
llì õ
)
llõ ú
)
llú ù
{mm 

connectionnn 
.nn 
Opennn #
(nn# $
)nn$ %
;nn% &
usingoo 
(oo 

SqlCommandoo %
commandoo& -
=oo. /
newoo0 3

SqlCommandoo4 >
(oo> ?
$stroo? Y
,ooY Z

connectionoo[ e
)ooe f
)oof g
{pp 
commandqq 
.qq  
ExecuteNonQueryqq  /
(qq/ 0
)qq0 1
;qq1 2
}rr 
}ss 
}tt 
catchuu 
(uu 
SqlExceptionuu 
	exceptSqluu  )
)uu) *
{vv 
IOww 
.ww 
Loggerww 
.ww 
Logww 
(ww 
NLogww "
.ww" #
LogLevelww# +
.ww+ ,
Warnww, 0
,ww0 1
$strww2 R
,wwR S
	exceptSqlwwT ]
)ww] ^
;ww^ _
}xx 
}yy 	
}zz 
}|| 
}}} §!
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_68a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_68a E
:F G
AbstractTestCaseH X
{ 
public 

static 
string 
password !
;! "
public 

override 
void 
Bad 
( 
) 
{   
password!! 
=!! 
$str!! 
;!! 
{## 	
try$$ 
{%% 
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
password--  
=--! "
sr--# %
.--% &
ReadLine--& .
(--. /
)--/ 0
;--0 1
}.. 
}// 
}00 
catch11 
(11 
IOException11 
exceptIO11 '
)11' (
{22 
IO33 
.33 
Logger33 
.33 
Log33 
(33 
NLog33 "
.33" #
LogLevel33# +
.33+ ,
Warn33, 0
,330 1
$str332 M
,33M N
exceptIO33O W
)33W X
;33X Y
}44 
}55 	K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_68b66 G
.66G H
BadSink66H O
(66O P
)66P Q
;66Q R
}77 
public:: 

override:: 
void:: 
Good:: 
(:: 
):: 
{;; 
GoodG2B<< 
(<< 
)<< 
;<< 
GoodB2G== 
(== 
)== 
;== 
}>> 
privateAA 
staticAA 
voidAA 
GoodG2BAA 
(AA  
)AA  !
{BB 
passwordEE 
=EE 
$strEE "
;EE" #K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_68bFF G
.FFG H
GoodG2BSinkFFH S
(FFS T
)FFT U
;FFU V
}GG 
privateJJ 
staticJJ 
voidJJ 
GoodB2GJJ 
(JJ  
)JJ  !
{KK 
passwordLL 
=LL 
$strLL 
;LL 
{NN 	
tryOO 
{PP 
usingQQ 
(QQ 
	WebClientQQ  
clientQQ! '
=QQ( )
newQQ* -
	WebClientQQ. 7
(QQ7 8
)QQ8 9
)QQ9 :
{RR 
usingSS 
(SS 
StreamReaderSS '
srSS( *
=SS+ ,
newSS- 0
StreamReaderSS1 =
(SS= >
clientSS> D
.SSD E
OpenReadSSE M
(SSM N
$strSSN g
)SSg h
)SSh i
)SSi j
{TT 
passwordXX  
=XX! "
srXX# %
.XX% &
ReadLineXX& .
(XX. /
)XX/ 0
;XX0 1
}YY 
}ZZ 
}[[ 
catch\\ 
(\\ 
IOException\\ 
exceptIO\\ '
)\\' (
{]] 
IO^^ 
.^^ 
Logger^^ 
.^^ 
Log^^ 
(^^ 
NLog^^ "
.^^" #
LogLevel^^# +
.^^+ ,
Warn^^, 0
,^^0 1
$str^^2 M
,^^M N
exceptIO^^O W
)^^W X
;^^X Y
}__ 
}`` 	K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_68baa G
.aaG H
GoodB2GSinkaaH S
(aaS T
)aaT U
;aaU V
}bb 
}dd 
}ee ©:
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_68b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_68b E
{ 
public 

static 
void 
BadSink 
( 
)  
{   
string!! 
password!! 
=!! K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_68a!! Y
.!!Y Z
password!!Z b
;!!b c
try"" 
{## 	
using%% 
(%% 
SqlConnection%%  

connection%%! +
=%%, -
new%%. 1
SqlConnection%%2 ?
(%%? @
$str%%@ v
+%%w x
$str%%y }
+%%~ 
$str
%%Ä å
+
%%ç é
password
%%è ó
)
%%ó ò
)
%%ò ô
{&& 

connection'' 
.'' 
Open'' 
(''  
)''  !
;''! "
using(( 
((( 

SqlCommand(( !
command((" )
=((* +
new((, /

SqlCommand((0 :
(((: ;
$str((; U
,((U V

connection((W a
)((a b
)((b c
{)) 
command** 
.** 
ExecuteNonQuery** +
(**+ ,
)**, -
;**- .
}++ 
},, 
}-- 	
catch.. 
(.. 
SqlException.. 
	exceptSql.. %
)..% &
{// 	
IO00 
.00 
Logger00 
.00 
Log00 
(00 
NLog00 
.00 
LogLevel00 '
.00' (
Warn00( ,
,00, -
$str00. N
,00N O
	exceptSql00P Y
)00Y Z
;00Z [
}11 	
}22 
public77 

static77 
void77 
GoodG2BSink77 "
(77" #
)77# $
{88 
string99 
password99 
=99 K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_68a99 Y
.99Y Z
password99Z b
;99b c
try:: 
{;; 	
using== 
(== 
SqlConnection==  

connection==! +
===, -
new==. 1
SqlConnection==2 ?
(==? @
$str==@ v
+==w x
$str==y }
+==~ 
$str
==Ä å
+
==ç é
password
==è ó
)
==ó ò
)
==ò ô
{>> 

connection?? 
.?? 
Open?? 
(??  
)??  !
;??! "
using@@ 
(@@ 

SqlCommand@@ !
command@@" )
=@@* +
new@@, /

SqlCommand@@0 :
(@@: ;
$str@@; U
,@@U V

connection@@W a
)@@a b
)@@b c
{AA 
commandBB 
.BB 
ExecuteNonQueryBB +
(BB+ ,
)BB, -
;BB- .
}CC 
}DD 
}EE 	
catchFF 
(FF 
SqlExceptionFF 
	exceptSqlFF %
)FF% &
{GG 	
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH 
.HH 
LogLevelHH '
.HH' (
WarnHH( ,
,HH, -
$strHH. N
,HHN O
	exceptSqlHHP Y
)HHY Z
;HHZ [
}II 	
}JJ 
publicMM 

staticMM 
voidMM 
GoodB2GSinkMM "
(MM" #
)MM# $
{NN 
stringOO 
passwordOO 
=OO K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_68aOO Y
.OOY Z
passwordOOZ b
;OOb c
ifPP 

(PP 
passwordPP 
!=PP 
nullPP 
)PP 
{QQ 	
{SS 
usingTT 
(TT $
AesCryptoServiceProviderTT /
aesAlgTT0 6
=TT7 8
newTT9 <$
AesCryptoServiceProviderTT= U
(TTU V
)TTV W
)TTW X
{UU 
aesAlgVV 
.VV 
PaddingVV "
=VV# $
PaddingModeVV% 0
.VV0 1
NoneVV1 5
;VV5 6
aesAlgWW 
.WW 
KeyWW 
=WW  
EncodingWW! )
.WW) *
UTF8WW* .
.WW. /
GetBytesWW/ 7
(WW7 8
$strWW8 J
)WWJ K
;WWK L
ICryptoTransformYY $
	decryptorYY% .
=YY/ 0
aesAlgYY1 7
.YY7 8
CreateDecryptorYY8 G
(YYG H
aesAlgYYH N
.YYN O
KeyYYO R
,YYR S
aesAlgYYT Z
.YYZ [
IVYY[ ]
)YY] ^
;YY^ _
using[[ 
([[ 
MemoryStream[[ '
	msDecrypt[[( 1
=[[2 3
new[[4 7
MemoryStream[[8 D
([[D E
Encoding[[E M
.[[M N
UTF8[[N R
.[[R S
GetBytes[[S [
([[[ \
password[[\ d
)[[d e
)[[e f
)[[f g
{\\ 
using]] 
(]] 
CryptoStream]] +
	csDecrypt]], 5
=]]6 7
new]]8 ;
CryptoStream]]< H
(]]H I
	msDecrypt]]I R
,]]R S
	decryptor]]T ]
,]]] ^
CryptoStreamMode]]_ o
.]]o p
Read]]p t
)]]t u
)]]u v
{^^ 
using__ !
(__" #
StreamReader__# /
	srDecrypt__0 9
=__: ;
new__< ?
StreamReader__@ L
(__L M
	csDecrypt__M V
)__V W
)__W X
{`` 
passwordcc  (
=cc) *
	srDecryptcc+ 4
.cc4 5
	ReadToEndcc5 >
(cc> ?
)cc? @
;cc@ A
}dd 
}ee 
}ff 
}gg 
}hh 
tryii 
{jj 
usingll 
(ll 
SqlConnectionll $

connectionll% /
=ll0 1
newll2 5
SqlConnectionll6 C
(llC D
$strllD z
+ll{ |
$str	ll} Å
+
llÇ É
$str
llÑ ê
+
llë í
password
llì õ
)
llõ ú
)
llú ù
{mm 

connectionnn 
.nn 
Opennn #
(nn# $
)nn$ %
;nn% &
usingoo 
(oo 

SqlCommandoo %
commandoo& -
=oo. /
newoo0 3

SqlCommandoo4 >
(oo> ?
$stroo? Y
,ooY Z

connectionoo[ e
)ooe f
)oof g
{pp 
commandqq 
.qq  
ExecuteNonQueryqq  /
(qq/ 0
)qq0 1
;qq1 2
}rr 
}ss 
}tt 
catchuu 
(uu 
SqlExceptionuu 
	exceptSqluu  )
)uu) *
{vv 
IOww 
.ww 
Loggerww 
.ww 
Logww 
(ww 
NLogww "
.ww" #
LogLevelww# +
.ww+ ,
Warnww, 0
,ww0 1
$strww2 R
,wwR S
	exceptSqlwwT ]
)ww] ^
;ww^ _
}xx 
}yy 	
}zz 
}|| 
}}} ∆#
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_71a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_71a E
:F G
AbstractTestCaseH X
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string 
password 
; 
password   
=   
$str   
;   
{"" 	
try## 
{$$ 
using%% 
(%% 
	WebClient%%  
client%%! '
=%%( )
new%%* -
	WebClient%%. 7
(%%7 8
)%%8 9
)%%9 :
{&& 
using'' 
('' 
StreamReader'' '
sr''( *
=''+ ,
new''- 0
StreamReader''1 =
(''= >
client''> D
.''D E
OpenRead''E M
(''M N
$str''N g
)''g h
)''h i
)''i j
{(( 
password,,  
=,,! "
sr,,# %
.,,% &
ReadLine,,& .
(,,. /
),,/ 0
;,,0 1
}-- 
}.. 
}// 
catch00 
(00 
IOException00 
exceptIO00 '
)00' (
{11 
IO22 
.22 
Logger22 
.22 
Log22 
(22 
NLog22 "
.22" #
LogLevel22# +
.22+ ,
Warn22, 0
,220 1
$str222 M
,22M N
exceptIO22O W
)22W X
;22X Y
}33 
}44 	K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_71b55 G
.55G H
BadSink55H O
(55O P
(55P Q
Object55Q W
)55W X
password55X `
)55b c
;55c d
}66 
public99 

override99 
void99 
Good99 
(99 
)99 
{:: 
GoodG2B;; 
(;; 
);; 
;;; 
GoodB2G<< 
(<< 
)<< 
;<< 
}== 
private@@ 
static@@ 
void@@ 
GoodG2B@@ 
(@@  
)@@  !
{AA 
stringBB 
passwordBB 
;BB 
passwordEE 
=EE 
$strEE "
;EE" #K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_71bFF G
.FFG H
GoodG2BSinkFFH S
(FFS T
(FFT U
ObjectFFU [
)FF[ \
passwordFF\ d
)FFf g
;FFg h
}GG 
privateJJ 
staticJJ 
voidJJ 
GoodB2GJJ 
(JJ  
)JJ  !
{KK 
stringLL 
passwordLL 
;LL 
passwordMM 
=MM 
$strMM 
;MM 
{OO 	
tryPP 
{QQ 
usingRR 
(RR 
	WebClientRR  
clientRR! '
=RR( )
newRR* -
	WebClientRR. 7
(RR7 8
)RR8 9
)RR9 :
{SS 
usingTT 
(TT 
StreamReaderTT '
srTT( *
=TT+ ,
newTT- 0
StreamReaderTT1 =
(TT= >
clientTT> D
.TTD E
OpenReadTTE M
(TTM N
$strTTN g
)TTg h
)TTh i
)TTi j
{UU 
passwordYY  
=YY! "
srYY# %
.YY% &
ReadLineYY& .
(YY. /
)YY/ 0
;YY0 1
}ZZ 
}[[ 
}\\ 
catch]] 
(]] 
IOException]] 
exceptIO]] '
)]]' (
{^^ 
IO__ 
.__ 
Logger__ 
.__ 
Log__ 
(__ 
NLog__ "
.__" #
LogLevel__# +
.__+ ,
Warn__, 0
,__0 1
$str__2 M
,__M N
exceptIO__O W
)__W X
;__X Y
}`` 
}aa 	K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_71bbb G
.bbG H
GoodB2GSinkbbH S
(bbS T
(bbT U
ObjectbbU [
)bb[ \
passwordbb\ d
)bbf g
;bbg h
}cc 
}ee 
}ff Õ:
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_71b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_71b E
{ 
public   

static   
void   
BadSink   
(   
Object   %
passwordObject  & 4
)  5 6
{!! 
string"" 
password"" 
="" 
("" 
string"" !
)""! "
passwordObject""" 0
;""0 1
try## 
{$$ 	
using&& 
(&& 
SqlConnection&&  

connection&&! +
=&&, -
new&&. 1
SqlConnection&&2 ?
(&&? @
$str&&@ v
+&&w x
$str&&y }
+&&~ 
$str
&&Ä å
+
&&ç é
password
&&è ó
)
&&ó ò
)
&&ò ô
{'' 

connection(( 
.(( 
Open(( 
(((  
)((  !
;((! "
using)) 
()) 

SqlCommand)) !
command))" )
=))* +
new)), /

SqlCommand))0 :
()): ;
$str)); U
,))U V

connection))W a
)))a b
)))b c
{** 
command++ 
.++ 
ExecuteNonQuery++ +
(+++ ,
)++, -
;++- .
},, 
}-- 
}.. 	
catch// 
(// 
SqlException// 
	exceptSql// %
)//% &
{00 	
IO11 
.11 
Logger11 
.11 
Log11 
(11 
NLog11 
.11 
LogLevel11 '
.11' (
Warn11( ,
,11, -
$str11. N
,11N O
	exceptSql11P Y
)11Y Z
;11Z [
}22 	
}33 
public88 

static88 
void88 
GoodG2BSink88 "
(88" #
Object88# )
passwordObject88* 8
)889 :
{99 
string:: 
password:: 
=:: 
(:: 
string:: !
)::! "
passwordObject::" 0
;::0 1
try;; 
{<< 	
using>> 
(>> 
SqlConnection>>  

connection>>! +
=>>, -
new>>. 1
SqlConnection>>2 ?
(>>? @
$str>>@ v
+>>w x
$str>>y }
+>>~ 
$str
>>Ä å
+
>>ç é
password
>>è ó
)
>>ó ò
)
>>ò ô
{?? 

connection@@ 
.@@ 
Open@@ 
(@@  
)@@  !
;@@! "
usingAA 
(AA 

SqlCommandAA !
commandAA" )
=AA* +
newAA, /

SqlCommandAA0 :
(AA: ;
$strAA; U
,AAU V

connectionAAW a
)AAa b
)AAb c
{BB 
commandCC 
.CC 
ExecuteNonQueryCC +
(CC+ ,
)CC, -
;CC- .
}DD 
}EE 
}FF 	
catchGG 
(GG 
SqlExceptionGG 
	exceptSqlGG %
)GG% &
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. N
,IIN O
	exceptSqlIIP Y
)IIY Z
;IIZ [
}JJ 	
}KK 
publicNN 

staticNN 
voidNN 
GoodB2GSinkNN "
(NN" #
ObjectNN# )
passwordObjectNN* 8
)NN9 :
{OO 
stringPP 
passwordPP 
=PP 
(PP 
stringPP !
)PP! "
passwordObjectPP" 0
;PP0 1
ifQQ 

(QQ 
passwordQQ 
!=QQ 
nullQQ 
)QQ 
{RR 	
{TT 
usingUU 
(UU $
AesCryptoServiceProviderUU /
aesAlgUU0 6
=UU7 8
newUU9 <$
AesCryptoServiceProviderUU= U
(UUU V
)UUV W
)UUW X
{VV 
aesAlgWW 
.WW 
PaddingWW "
=WW# $
PaddingModeWW% 0
.WW0 1
NoneWW1 5
;WW5 6
aesAlgXX 
.XX 
KeyXX 
=XX  
EncodingXX! )
.XX) *
UTF8XX* .
.XX. /
GetBytesXX/ 7
(XX7 8
$strXX8 J
)XXJ K
;XXK L
ICryptoTransformZZ $
	decryptorZZ% .
=ZZ/ 0
aesAlgZZ1 7
.ZZ7 8
CreateDecryptorZZ8 G
(ZZG H
aesAlgZZH N
.ZZN O
KeyZZO R
,ZZR S
aesAlgZZT Z
.ZZZ [
IVZZ[ ]
)ZZ] ^
;ZZ^ _
using\\ 
(\\ 
MemoryStream\\ '
	msDecrypt\\( 1
=\\2 3
new\\4 7
MemoryStream\\8 D
(\\D E
Encoding\\E M
.\\M N
UTF8\\N R
.\\R S
GetBytes\\S [
(\\[ \
password\\\ d
)\\d e
)\\e f
)\\f g
{]] 
using^^ 
(^^ 
CryptoStream^^ +
	csDecrypt^^, 5
=^^6 7
new^^8 ;
CryptoStream^^< H
(^^H I
	msDecrypt^^I R
,^^R S
	decryptor^^T ]
,^^] ^
CryptoStreamMode^^_ o
.^^o p
Read^^p t
)^^t u
)^^u v
{__ 
using`` !
(``" #
StreamReader``# /
	srDecrypt``0 9
=``: ;
new``< ?
StreamReader``@ L
(``L M
	csDecrypt``M V
)``V W
)``W X
{aa 
passworddd  (
=dd) *
	srDecryptdd+ 4
.dd4 5
	ReadToEnddd5 >
(dd> ?
)dd? @
;dd@ A
}ee 
}ff 
}gg 
}hh 
}ii 
tryjj 
{kk 
usingmm 
(mm 
SqlConnectionmm $

connectionmm% /
=mm0 1
newmm2 5
SqlConnectionmm6 C
(mmC D
$strmmD z
+mm{ |
$str	mm} Å
+
mmÇ É
$str
mmÑ ê
+
mmë í
password
mmì õ
)
mmõ ú
)
mmú ù
{nn 

connectionoo 
.oo 
Openoo #
(oo# $
)oo$ %
;oo% &
usingpp 
(pp 

SqlCommandpp %
commandpp& -
=pp. /
newpp0 3

SqlCommandpp4 >
(pp> ?
$strpp? Y
,ppY Z

connectionpp[ e
)ppe f
)ppf g
{qq 
commandrr 
.rr  
ExecuteNonQueryrr  /
(rr/ 0
)rr0 1
;rr1 2
}ss 
}tt 
}uu 
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv  )
)vv) *
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
	exceptSqlxxT ]
)xx] ^
;xx^ _
}yy 
}zz 	
}{{ 
}}} 
}~~ ä2
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_72a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_72a E
:F G
AbstractTestCaseH X
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string   
password   
;   
password!! 
=!! 
$str!! 
;!! 
{## 	
try$$ 
{%% 
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
password--  
=--! "
sr--# %
.--% &
ReadLine--& .
(--. /
)--/ 0
;--0 1
}.. 
}// 
}00 
catch11 
(11 
IOException11 
exceptIO11 '
)11' (
{22 
IO33 
.33 
Logger33 
.33 
Log33 
(33 
NLog33 "
.33" #
LogLevel33# +
.33+ ,
Warn33, 0
,330 1
$str332 M
,33M N
exceptIO33O W
)33W X
;33X Y
}44 
}55 	
	Hashtable66 
passwordHashtable66 #
=66$ %
new66& )
	Hashtable66* 3
(663 4
$num664 5
)665 6
;666 7
passwordHashtable77 
.77 
Add77 
(77 
$num77 
,77  
password77! )
)77) *
;77* +
passwordHashtable88 
.88 
Add88 
(88 
$num88 
,88  
password88! )
)88) *
;88* +
passwordHashtable99 
.99 
Add99 
(99 
$num99 
,99  
password99! )
)99) *
;99* +K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_72b:: G
.::G H
BadSink::H O
(::O P
passwordHashtable::P a
)::c d
;::d e
};; 
public>> 

override>> 
void>> 
Good>> 
(>> 
)>> 
{?? 
GoodG2B@@ 
(@@ 
)@@ 
;@@ 
GoodB2GAA 
(AA 
)AA 
;AA 
}BB 
privateEE 
staticEE 
voidEE 
GoodG2BEE 
(EE  
)EE  !
{FF 
stringGG 
passwordGG 
;GG 
passwordJJ 
=JJ 
$strJJ "
;JJ" #
	HashtableKK 
passwordHashtableKK #
=KK$ %
newKK& )
	HashtableKK* 3
(KK3 4
$numKK4 5
)KK5 6
;KK6 7
passwordHashtableLL 
.LL 
AddLL 
(LL 
$numLL 
,LL  
passwordLL! )
)LL) *
;LL* +
passwordHashtableMM 
.MM 
AddMM 
(MM 
$numMM 
,MM  
passwordMM! )
)MM) *
;MM* +
passwordHashtableNN 
.NN 
AddNN 
(NN 
$numNN 
,NN  
passwordNN! )
)NN) *
;NN* +K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_72bOO G
.OOG H
GoodG2BSinkOOH S
(OOS T
passwordHashtableOOT e
)OOg h
;OOh i
}PP 
privateSS 
staticSS 
voidSS 
GoodB2GSS 
(SS  
)SS  !
{TT 
stringUU 
passwordUU 
;UU 
passwordVV 
=VV 
$strVV 
;VV 
{XX 	
tryYY 
{ZZ 
using[[ 
([[ 
	WebClient[[  
client[[! '
=[[( )
new[[* -
	WebClient[[. 7
([[7 8
)[[8 9
)[[9 :
{\\ 
using]] 
(]] 
StreamReader]] '
sr]]( *
=]]+ ,
new]]- 0
StreamReader]]1 =
(]]= >
client]]> D
.]]D E
OpenRead]]E M
(]]M N
$str]]N g
)]]g h
)]]h i
)]]i j
{^^ 
passwordbb  
=bb! "
srbb# %
.bb% &
ReadLinebb& .
(bb. /
)bb/ 0
;bb0 1
}cc 
}dd 
}ee 
catchff 
(ff 
IOExceptionff 
exceptIOff '
)ff' (
{gg 
IOhh 
.hh 
Loggerhh 
.hh 
Loghh 
(hh 
NLoghh "
.hh" #
LogLevelhh# +
.hh+ ,
Warnhh, 0
,hh0 1
$strhh2 M
,hhM N
exceptIOhhO W
)hhW X
;hhX Y
}ii 
}jj 	
	Hashtablekk 
passwordHashtablekk #
=kk$ %
newkk& )
	Hashtablekk* 3
(kk3 4
$numkk4 5
)kk5 6
;kk6 7
passwordHashtablell 
.ll 
Addll 
(ll 
$numll 
,ll  
passwordll! )
)ll) *
;ll* +
passwordHashtablemm 
.mm 
Addmm 
(mm 
$nummm 
,mm  
passwordmm! )
)mm) *
;mm* +
passwordHashtablenn 
.nn 
Addnn 
(nn 
$numnn 
,nn  
passwordnn! )
)nn) *
;nn* +K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_72boo G
.ooG H
GoodB2GSinkooH S
(ooS T
passwordHashtableooT e
)oog h
;ooh i
}pp 
}rr 
}ss ¯;
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_72b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_72b E
{ 
public   

static   
void   
BadSink   
(   
	Hashtable   (
passwordHashtable  ) :
)  ; <
{!! 
string"" 
password"" 
="" 
("" 
string"" !
)""! "
passwordHashtable""# 4
[""4 5
$num""5 6
]""6 7
;""7 8
try## 
{$$ 	
using&& 
(&& 
SqlConnection&&  

connection&&! +
=&&, -
new&&. 1
SqlConnection&&2 ?
(&&? @
$str&&@ v
+&&w x
$str&&y }
+&&~ 
$str
&&Ä å
+
&&ç é
password
&&è ó
)
&&ó ò
)
&&ò ô
{'' 

connection(( 
.(( 
Open(( 
(((  
)((  !
;((! "
using)) 
()) 

SqlCommand)) !
command))" )
=))* +
new)), /

SqlCommand))0 :
()): ;
$str)); U
,))U V

connection))W a
)))a b
)))b c
{** 
command++ 
.++ 
ExecuteNonQuery++ +
(+++ ,
)++, -
;++- .
},, 
}-- 
}.. 	
catch// 
(// 
SqlException// 
	exceptSql// %
)//% &
{00 	
IO11 
.11 
Logger11 
.11 
Log11 
(11 
NLog11 
.11 
LogLevel11 '
.11' (
Warn11( ,
,11, -
$str11. N
,11N O
	exceptSql11P Y
)11Y Z
;11Z [
}22 	
}33 
public88 

static88 
void88 
GoodG2BSink88 "
(88" #
	Hashtable88# ,
passwordHashtable88- >
)88? @
{99 
string:: 
password:: 
=:: 
(:: 
string:: !
)::! "
passwordHashtable::# 4
[::4 5
$num::5 6
]::6 7
;::7 8
try;; 
{<< 	
using>> 
(>> 
SqlConnection>>  

connection>>! +
=>>, -
new>>. 1
SqlConnection>>2 ?
(>>? @
$str>>@ v
+>>w x
$str>>y }
+>>~ 
$str
>>Ä å
+
>>ç é
password
>>è ó
)
>>ó ò
)
>>ò ô
{?? 

connection@@ 
.@@ 
Open@@ 
(@@  
)@@  !
;@@! "
usingAA 
(AA 

SqlCommandAA !
commandAA" )
=AA* +
newAA, /

SqlCommandAA0 :
(AA: ;
$strAA; U
,AAU V

connectionAAW a
)AAa b
)AAb c
{BB 
commandCC 
.CC 
ExecuteNonQueryCC +
(CC+ ,
)CC, -
;CC- .
}DD 
}EE 
}FF 	
catchGG 
(GG 
SqlExceptionGG 
	exceptSqlGG %
)GG% &
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. N
,IIN O
	exceptSqlIIP Y
)IIY Z
;IIZ [
}JJ 	
}KK 
publicNN 

staticNN 
voidNN 
GoodB2GSinkNN "
(NN" #
	HashtableNN# ,
passwordHashtableNN- >
)NN? @
{OO 
stringPP 
passwordPP 
=PP 
(PP 
stringPP !
)PP! "
passwordHashtablePP# 4
[PP4 5
$numPP5 6
]PP6 7
;PP7 8
ifQQ 

(QQ 
passwordQQ 
!=QQ 
nullQQ 
)QQ 
{RR 	
{TT 
usingUU 
(UU $
AesCryptoServiceProviderUU /
aesAlgUU0 6
=UU7 8
newUU9 <$
AesCryptoServiceProviderUU= U
(UUU V
)UUV W
)UUW X
{VV 
aesAlgWW 
.WW 
PaddingWW "
=WW# $
PaddingModeWW% 0
.WW0 1
NoneWW1 5
;WW5 6
aesAlgXX 
.XX 
KeyXX 
=XX  
EncodingXX! )
.XX) *
UTF8XX* .
.XX. /
GetBytesXX/ 7
(XX7 8
$strXX8 J
)XXJ K
;XXK L
ICryptoTransformZZ $
	decryptorZZ% .
=ZZ/ 0
aesAlgZZ1 7
.ZZ7 8
CreateDecryptorZZ8 G
(ZZG H
aesAlgZZH N
.ZZN O
KeyZZO R
,ZZR S
aesAlgZZT Z
.ZZZ [
IVZZ[ ]
)ZZ] ^
;ZZ^ _
using\\ 
(\\ 
MemoryStream\\ '
	msDecrypt\\( 1
=\\2 3
new\\4 7
MemoryStream\\8 D
(\\D E
Encoding\\E M
.\\M N
UTF8\\N R
.\\R S
GetBytes\\S [
(\\[ \
password\\\ d
)\\d e
)\\e f
)\\f g
{]] 
using^^ 
(^^ 
CryptoStream^^ +
	csDecrypt^^, 5
=^^6 7
new^^8 ;
CryptoStream^^< H
(^^H I
	msDecrypt^^I R
,^^R S
	decryptor^^T ]
,^^] ^
CryptoStreamMode^^_ o
.^^o p
Read^^p t
)^^t u
)^^u v
{__ 
using`` !
(``" #
StreamReader``# /
	srDecrypt``0 9
=``: ;
new``< ?
StreamReader``@ L
(``L M
	csDecrypt``M V
)``V W
)``W X
{aa 
passworddd  (
=dd) *
	srDecryptdd+ 4
.dd4 5
	ReadToEnddd5 >
(dd> ?
)dd? @
;dd@ A
}ee 
}ff 
}gg 
}hh 
}ii 
tryjj 
{kk 
usingmm 
(mm 
SqlConnectionmm $

connectionmm% /
=mm0 1
newmm2 5
SqlConnectionmm6 C
(mmC D
$strmmD z
+mm{ |
$str	mm} Å
+
mmÇ É
$str
mmÑ ê
+
mmë í
password
mmì õ
)
mmõ ú
)
mmú ù
{nn 

connectionoo 
.oo 
Openoo #
(oo# $
)oo$ %
;oo% &
usingpp 
(pp 

SqlCommandpp %
commandpp& -
=pp. /
newpp0 3

SqlCommandpp4 >
(pp> ?
$strpp? Y
,ppY Z

connectionpp[ e
)ppe f
)ppf g
{qq 
commandrr 
.rr  
ExecuteNonQueryrr  /
(rr/ 0
)rr0 1
;rr1 2
}ss 
}tt 
}uu 
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv  )
)vv) *
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
	exceptSqlxxT ]
)xx] ^
;xx^ _
}yy 
}zz 	
}{{ 
}}} 
}~~ ê2
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_73a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_73a E
:F G
AbstractTestCaseH X
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string   
password   
;   
password!! 
=!! 
$str!! 
;!! 
{## 	
try$$ 
{%% 
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
password--  
=--! "
sr--# %
.--% &
ReadLine--& .
(--. /
)--/ 0
;--0 1
}.. 
}// 
}00 
catch11 
(11 
IOException11 
exceptIO11 '
)11' (
{22 
IO33 
.33 
Logger33 
.33 
Log33 
(33 
NLog33 "
.33" #
LogLevel33# +
.33+ ,
Warn33, 0
,330 1
$str332 M
,33M N
exceptIO33O W
)33W X
;33X Y
}44 
}55 	

LinkedList66 
<66 
string66 
>66 
passwordLinkedList66 -
=66. /
new660 3

LinkedList664 >
<66> ?
string66? E
>66E F
(66F G
)66G H
;66H I
passwordLinkedList77 
.77 
AddLast77 "
(77" #
password77# +
)77+ ,
;77, -
passwordLinkedList88 
.88 
AddLast88 "
(88" #
password88# +
)88+ ,
;88, -
passwordLinkedList99 
.99 
AddLast99 "
(99" #
password99# +
)99+ ,
;99, -K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_73b:: G
.::G H
BadSink::H O
(::O P
passwordLinkedList::P b
)::d e
;::e f
};; 
public>> 

override>> 
void>> 
Good>> 
(>> 
)>> 
{?? 
GoodG2B@@ 
(@@ 
)@@ 
;@@ 
GoodB2GAA 
(AA 
)AA 
;AA 
}BB 
privateEE 
staticEE 
voidEE 
GoodG2BEE 
(EE  
)EE  !
{FF 
stringGG 
passwordGG 
;GG 
passwordJJ 
=JJ 
$strJJ "
;JJ" #

LinkedListKK 
<KK 
stringKK 
>KK 
passwordLinkedListKK -
=KK. /
newKK0 3

LinkedListKK4 >
<KK> ?
stringKK? E
>KKE F
(KKF G
)KKG H
;KKH I
passwordLinkedListLL 
.LL 
AddLastLL "
(LL" #
passwordLL# +
)LL+ ,
;LL, -
passwordLinkedListMM 
.MM 
AddLastMM "
(MM" #
passwordMM# +
)MM+ ,
;MM, -
passwordLinkedListNN 
.NN 
AddLastNN "
(NN" #
passwordNN# +
)NN+ ,
;NN, -K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_73bOO G
.OOG H
GoodG2BSinkOOH S
(OOS T
passwordLinkedListOOT f
)OOh i
;OOi j
}PP 
privateSS 
staticSS 
voidSS 
GoodB2GSS 
(SS  
)SS  !
{TT 
stringUU 
passwordUU 
;UU 
passwordVV 
=VV 
$strVV 
;VV 
{XX 	
tryYY 
{ZZ 
using[[ 
([[ 
	WebClient[[  
client[[! '
=[[( )
new[[* -
	WebClient[[. 7
([[7 8
)[[8 9
)[[9 :
{\\ 
using]] 
(]] 
StreamReader]] '
sr]]( *
=]]+ ,
new]]- 0
StreamReader]]1 =
(]]= >
client]]> D
.]]D E
OpenRead]]E M
(]]M N
$str]]N g
)]]g h
)]]h i
)]]i j
{^^ 
passwordbb  
=bb! "
srbb# %
.bb% &
ReadLinebb& .
(bb. /
)bb/ 0
;bb0 1
}cc 
}dd 
}ee 
catchff 
(ff 
IOExceptionff 
exceptIOff '
)ff' (
{gg 
IOhh 
.hh 
Loggerhh 
.hh 
Loghh 
(hh 
NLoghh "
.hh" #
LogLevelhh# +
.hh+ ,
Warnhh, 0
,hh0 1
$strhh2 M
,hhM N
exceptIOhhO W
)hhW X
;hhX Y
}ii 
}jj 	

LinkedListkk 
<kk 
stringkk 
>kk 
passwordLinkedListkk -
=kk. /
newkk0 3

LinkedListkk4 >
<kk> ?
stringkk? E
>kkE F
(kkF G
)kkG H
;kkH I
passwordLinkedListll 
.ll 
AddLastll "
(ll" #
passwordll# +
)ll+ ,
;ll, -
passwordLinkedListmm 
.mm 
AddLastmm "
(mm" #
passwordmm# +
)mm+ ,
;mm, -
passwordLinkedListnn 
.nn 
AddLastnn "
(nn" #
passwordnn# +
)nn+ ,
;nn, -K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_73boo G
.ooG H
GoodB2GSinkooH S
(ooS T
passwordLinkedListooT f
)ooh i
;ooi j
}pp 
}rr 
}ss ∫<
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_73b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_73b E
{ 
public   

static   
void   
BadSink   
(   

LinkedList   )
<  ) *
string  * 0
>  0 1
passwordLinkedList  2 D
)  E F
{!! 
string"" 
password"" 
="" 
passwordLinkedList"" ,
."", -
Last""- 1
.""1 2
Value""2 7
;""7 8
try## 
{$$ 	
using&& 
(&& 
SqlConnection&&  

connection&&! +
=&&, -
new&&. 1
SqlConnection&&2 ?
(&&? @
$str&&@ v
+&&w x
$str&&y }
+&&~ 
$str
&&Ä å
+
&&ç é
password
&&è ó
)
&&ó ò
)
&&ò ô
{'' 

connection(( 
.(( 
Open(( 
(((  
)((  !
;((! "
using)) 
()) 

SqlCommand)) !
command))" )
=))* +
new)), /

SqlCommand))0 :
()): ;
$str)); U
,))U V

connection))W a
)))a b
)))b c
{** 
command++ 
.++ 
ExecuteNonQuery++ +
(+++ ,
)++, -
;++- .
},, 
}-- 
}.. 	
catch// 
(// 
SqlException// 
	exceptSql// %
)//% &
{00 	
IO11 
.11 
Logger11 
.11 
Log11 
(11 
NLog11 
.11 
LogLevel11 '
.11' (
Warn11( ,
,11, -
$str11. N
,11N O
	exceptSql11P Y
)11Y Z
;11Z [
}22 	
}33 
public88 

static88 
void88 
GoodG2BSink88 "
(88" #

LinkedList88# -
<88- .
string88. 4
>884 5
passwordLinkedList886 H
)88I J
{99 
string:: 
password:: 
=:: 
passwordLinkedList:: ,
.::, -
Last::- 1
.::1 2
Value::2 7
;::7 8
try;; 
{<< 	
using>> 
(>> 
SqlConnection>>  

connection>>! +
=>>, -
new>>. 1
SqlConnection>>2 ?
(>>? @
$str>>@ v
+>>w x
$str>>y }
+>>~ 
$str
>>Ä å
+
>>ç é
password
>>è ó
)
>>ó ò
)
>>ò ô
{?? 

connection@@ 
.@@ 
Open@@ 
(@@  
)@@  !
;@@! "
usingAA 
(AA 

SqlCommandAA !
commandAA" )
=AA* +
newAA, /

SqlCommandAA0 :
(AA: ;
$strAA; U
,AAU V

connectionAAW a
)AAa b
)AAb c
{BB 
commandCC 
.CC 
ExecuteNonQueryCC +
(CC+ ,
)CC, -
;CC- .
}DD 
}EE 
}FF 	
catchGG 
(GG 
SqlExceptionGG 
	exceptSqlGG %
)GG% &
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. N
,IIN O
	exceptSqlIIP Y
)IIY Z
;IIZ [
}JJ 	
}KK 
publicNN 

staticNN 
voidNN 
GoodB2GSinkNN "
(NN" #

LinkedListNN# -
<NN- .
stringNN. 4
>NN4 5
passwordLinkedListNN6 H
)NNI J
{OO 
stringPP 
passwordPP 
=PP 
passwordLinkedListPP ,
.PP, -
LastPP- 1
.PP1 2
ValuePP2 7
;PP7 8
ifQQ 

(QQ 
passwordQQ 
!=QQ 
nullQQ 
)QQ 
{RR 	
{TT 
usingUU 
(UU $
AesCryptoServiceProviderUU /
aesAlgUU0 6
=UU7 8
newUU9 <$
AesCryptoServiceProviderUU= U
(UUU V
)UUV W
)UUW X
{VV 
aesAlgWW 
.WW 
PaddingWW "
=WW# $
PaddingModeWW% 0
.WW0 1
NoneWW1 5
;WW5 6
aesAlgXX 
.XX 
KeyXX 
=XX  
EncodingXX! )
.XX) *
UTF8XX* .
.XX. /
GetBytesXX/ 7
(XX7 8
$strXX8 J
)XXJ K
;XXK L
ICryptoTransformZZ $
	decryptorZZ% .
=ZZ/ 0
aesAlgZZ1 7
.ZZ7 8
CreateDecryptorZZ8 G
(ZZG H
aesAlgZZH N
.ZZN O
KeyZZO R
,ZZR S
aesAlgZZT Z
.ZZZ [
IVZZ[ ]
)ZZ] ^
;ZZ^ _
using\\ 
(\\ 
MemoryStream\\ '
	msDecrypt\\( 1
=\\2 3
new\\4 7
MemoryStream\\8 D
(\\D E
Encoding\\E M
.\\M N
UTF8\\N R
.\\R S
GetBytes\\S [
(\\[ \
password\\\ d
)\\d e
)\\e f
)\\f g
{]] 
using^^ 
(^^ 
CryptoStream^^ +
	csDecrypt^^, 5
=^^6 7
new^^8 ;
CryptoStream^^< H
(^^H I
	msDecrypt^^I R
,^^R S
	decryptor^^T ]
,^^] ^
CryptoStreamMode^^_ o
.^^o p
Read^^p t
)^^t u
)^^u v
{__ 
using`` !
(``" #
StreamReader``# /
	srDecrypt``0 9
=``: ;
new``< ?
StreamReader``@ L
(``L M
	csDecrypt``M V
)``V W
)``W X
{aa 
passworddd  (
=dd) *
	srDecryptdd+ 4
.dd4 5
	ReadToEnddd5 >
(dd> ?
)dd? @
;dd@ A
}ee 
}ff 
}gg 
}hh 
}ii 
tryjj 
{kk 
usingmm 
(mm 
SqlConnectionmm $

connectionmm% /
=mm0 1
newmm2 5
SqlConnectionmm6 C
(mmC D
$strmmD z
+mm{ |
$str	mm} Å
+
mmÇ É
$str
mmÑ ê
+
mmë í
password
mmì õ
)
mmõ ú
)
mmú ù
{nn 

connectionoo 
.oo 
Openoo #
(oo# $
)oo$ %
;oo% &
usingpp 
(pp 

SqlCommandpp %
commandpp& -
=pp. /
newpp0 3

SqlCommandpp4 >
(pp> ?
$strpp? Y
,ppY Z

connectionpp[ e
)ppe f
)ppf g
{qq 
commandrr 
.rr  
ExecuteNonQueryrr  /
(rr/ 0
)rr0 1
;rr1 2
}ss 
}tt 
}uu 
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv  )
)vv) *
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
	exceptSqlxxT ]
)xx] ^
;xx^ _
}yy 
}zz 	
}{{ 
}}} 
}~~ ’5
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_74a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_74a E
:F G
AbstractTestCaseH X
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string   
password   
;   
password!! 
=!! 
$str!! 
;!! 
{## 	
try$$ 
{%% 
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
password--  
=--! "
sr--# %
.--% &
ReadLine--& .
(--. /
)--/ 0
;--0 1
}.. 
}// 
}00 
catch11 
(11 
IOException11 
exceptIO11 '
)11' (
{22 
IO33 
.33 
Logger33 
.33 
Log33 
(33 
NLog33 "
.33" #
LogLevel33# +
.33+ ,
Warn33, 0
,330 1
$str332 M
,33M N
exceptIO33O W
)33W X
;33X Y
}44 
}55 	

Dictionary66 
<66 
int66 
,66 
string66 
>66 
passwordDictionary66 1
=662 3
new664 7

Dictionary668 B
<66B C
int66C F
,66F G
string66G M
>66M N
(66N O
)66O P
;66P Q
passwordDictionary77 
.77 
Add77 
(77 
$num77  
,77  !
password77" *
)77* +
;77+ ,
passwordDictionary88 
.88 
Add88 
(88 
$num88  
,88  !
password88" *
)88* +
;88+ ,
passwordDictionary99 
.99 
Add99 
(99 
$num99  
,99  !
password99" *
)99* +
;99+ ,K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_74b:: G
.::G H
BadSink::H O
(::O P
passwordDictionary::P b
)::d e
;::e f
};; 
public>> 

override>> 
void>> 
Good>> 
(>> 
)>> 
{?? 
GoodG2B@@ 
(@@ 
)@@ 
;@@ 
GoodB2GAA 
(AA 
)AA 
;AA 
}BB 
privateEE 
staticEE 
voidEE 
GoodG2BEE 
(EE  
)EE  !
{FF 
stringGG 
passwordGG 
;GG 
passwordJJ 
=JJ 
$strJJ "
;JJ" #

DictionaryKK 
<KK 
intKK 
,KK 
stringKK 
>KK 
passwordDictionaryKK 1
=KK2 3
newKK4 7

DictionaryKK8 B
<KKB C
intKKC F
,KKF G
stringKKG M
>KKM N
(KKN O
)KKO P
;KKP Q
passwordDictionaryLL 
.LL 
AddLL 
(LL 
$numLL  
,LL  !
passwordLL" *
)LL* +
;LL+ ,
passwordDictionaryMM 
.MM 
AddMM 
(MM 
$numMM  
,MM  !
passwordMM" *
)MM* +
;MM+ ,
passwordDictionaryNN 
.NN 
AddNN 
(NN 
$numNN  
,NN  !
passwordNN" *
)NN* +
;NN+ ,K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_74bOO G
.OOG H
GoodG2BSinkOOH S
(OOS T
passwordDictionaryOOT f
)OOh i
;OOi j
}PP 
privateSS 
staticSS 
voidSS 
GoodB2GSS 
(SS  
)SS  !
{TT 
stringUU 
passwordUU 
;UU 
passwordVV 
=VV 
$strVV 
;VV 
{XX 	
tryYY 
{ZZ 
using[[ 
([[ 
	WebClient[[  
client[[! '
=[[( )
new[[* -
	WebClient[[. 7
([[7 8
)[[8 9
)[[9 :
{\\ 
using]] 
(]] 
StreamReader]] '
sr]]( *
=]]+ ,
new]]- 0
StreamReader]]1 =
(]]= >
client]]> D
.]]D E
OpenRead]]E M
(]]M N
$str]]N g
)]]g h
)]]h i
)]]i j
{^^ 
passwordbb  
=bb! "
srbb# %
.bb% &
ReadLinebb& .
(bb. /
)bb/ 0
;bb0 1
}cc 
}dd 
}ee 
catchff 
(ff 
IOExceptionff 
exceptIOff '
)ff' (
{gg 
IOhh 
.hh 
Loggerhh 
.hh 
Loghh 
(hh 
NLoghh "
.hh" #
LogLevelhh# +
.hh+ ,
Warnhh, 0
,hh0 1
$strhh2 M
,hhM N
exceptIOhhO W
)hhW X
;hhX Y
}ii 
}jj 	

Dictionarykk 
<kk 
intkk 
,kk 
stringkk 
>kk 
passwordDictionarykk 1
=kk2 3
newkk4 7

Dictionarykk8 B
<kkB C
intkkC F
,kkF G
stringkkG M
>kkM N
(kkN O
)kkO P
;kkP Q
passwordDictionaryll 
.ll 
Addll 
(ll 
$numll  
,ll  !
passwordll" *
)ll* +
;ll+ ,
passwordDictionarymm 
.mm 
Addmm 
(mm 
$nummm  
,mm  !
passwordmm" *
)mm* +
;mm+ ,
passwordDictionarynn 
.nn 
Addnn 
(nn 
$numnn  
,nn  !
passwordnn" *
)nn* +
;nn+ ,K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_74boo G
.ooG H
GoodB2GSinkooH S
(ooS T
passwordDictionaryooT f
)ooh i
;ooi j
}pp 
}rr 
}ss ·<
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_74b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_74b E
{ 
public   

static   
void   
BadSink   
(   

Dictionary   )
<  ) *
int  * -
,  - .
string  . 4
>  4 5
passwordDictionary  6 H
)  I J
{!! 
string"" 
password"" 
="" 
passwordDictionary"" ,
["", -
$num""- .
]"". /
;""/ 0
try## 
{$$ 	
using&& 
(&& 
SqlConnection&&  

connection&&! +
=&&, -
new&&. 1
SqlConnection&&2 ?
(&&? @
$str&&@ v
+&&w x
$str&&y }
+&&~ 
$str
&&Ä å
+
&&ç é
password
&&è ó
)
&&ó ò
)
&&ò ô
{'' 

connection(( 
.(( 
Open(( 
(((  
)((  !
;((! "
using)) 
()) 

SqlCommand)) !
command))" )
=))* +
new)), /

SqlCommand))0 :
()): ;
$str)); U
,))U V

connection))W a
)))a b
)))b c
{** 
command++ 
.++ 
ExecuteNonQuery++ +
(+++ ,
)++, -
;++- .
},, 
}-- 
}.. 	
catch// 
(// 
SqlException// 
	exceptSql// %
)//% &
{00 	
IO11 
.11 
Logger11 
.11 
Log11 
(11 
NLog11 
.11 
LogLevel11 '
.11' (
Warn11( ,
,11, -
$str11. N
,11N O
	exceptSql11P Y
)11Y Z
;11Z [
}22 	
}33 
public88 

static88 
void88 
GoodG2BSink88 #
(88# $

Dictionary88$ .
<88. /
int88/ 2
,882 3
string883 9
>889 :
passwordDictionary88; M
)88N O
{99 
string:: 
password:: 
=:: 
passwordDictionary:: ,
[::, -
$num::- .
]::. /
;::/ 0
try;; 
{<< 	
using>> 
(>> 
SqlConnection>>  

connection>>! +
=>>, -
new>>. 1
SqlConnection>>2 ?
(>>? @
$str>>@ v
+>>w x
$str>>y }
+>>~ 
$str
>>Ä å
+
>>ç é
password
>>è ó
)
>>ó ò
)
>>ò ô
{?? 

connection@@ 
.@@ 
Open@@ 
(@@  
)@@  !
;@@! "
usingAA 
(AA 

SqlCommandAA !
commandAA" )
=AA* +
newAA, /

SqlCommandAA0 :
(AA: ;
$strAA; U
,AAU V

connectionAAW a
)AAa b
)AAb c
{BB 
commandCC 
.CC 
ExecuteNonQueryCC +
(CC+ ,
)CC, -
;CC- .
}DD 
}EE 
}FF 	
catchGG 
(GG 
SqlExceptionGG 
	exceptSqlGG %
)GG% &
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. N
,IIN O
	exceptSqlIIP Y
)IIY Z
;IIZ [
}JJ 	
}KK 
publicNN 

staticNN 
voidNN 
GoodB2GSinkNN "
(NN" #

DictionaryNN# -
<NN- .
intNN. 1
,NN1 2
stringNN2 8
>NN8 9
passwordDictionaryNN: L
)NNM N
{OO 
stringPP 
passwordPP 
=PP 
passwordDictionaryPP ,
[PP, -
$numPP- .
]PP. /
;PP/ 0
ifQQ 

(QQ 
passwordQQ 
!=QQ 
nullQQ 
)QQ 
{RR 	
{TT 
usingUU 
(UU $
AesCryptoServiceProviderUU /
aesAlgUU0 6
=UU7 8
newUU9 <$
AesCryptoServiceProviderUU= U
(UUU V
)UUV W
)UUW X
{VV 
aesAlgWW 
.WW 
PaddingWW "
=WW# $
PaddingModeWW% 0
.WW0 1
NoneWW1 5
;WW5 6
aesAlgXX 
.XX 
KeyXX 
=XX  
EncodingXX! )
.XX) *
UTF8XX* .
.XX. /
GetBytesXX/ 7
(XX7 8
$strXX8 J
)XXJ K
;XXK L
ICryptoTransformZZ $
	decryptorZZ% .
=ZZ/ 0
aesAlgZZ1 7
.ZZ7 8
CreateDecryptorZZ8 G
(ZZG H
aesAlgZZH N
.ZZN O
KeyZZO R
,ZZR S
aesAlgZZT Z
.ZZZ [
IVZZ[ ]
)ZZ] ^
;ZZ^ _
using\\ 
(\\ 
MemoryStream\\ '
	msDecrypt\\( 1
=\\2 3
new\\4 7
MemoryStream\\8 D
(\\D E
Encoding\\E M
.\\M N
UTF8\\N R
.\\R S
GetBytes\\S [
(\\[ \
password\\\ d
)\\d e
)\\e f
)\\f g
{]] 
using^^ 
(^^ 
CryptoStream^^ +
	csDecrypt^^, 5
=^^6 7
new^^8 ;
CryptoStream^^< H
(^^H I
	msDecrypt^^I R
,^^R S
	decryptor^^T ]
,^^] ^
CryptoStreamMode^^_ o
.^^o p
Read^^p t
)^^t u
)^^u v
{__ 
using`` !
(``" #
StreamReader``# /
	srDecrypt``0 9
=``: ;
new``< ?
StreamReader``@ L
(``L M
	csDecrypt``M V
)``V W
)``W X
{aa 
passworddd  (
=dd) *
	srDecryptdd+ 4
.dd4 5
	ReadToEnddd5 >
(dd> ?
)dd? @
;dd@ A
}ee 
}ff 
}gg 
}hh 
}ii 
tryjj 
{kk 
usingmm 
(mm 
SqlConnectionmm $

connectionmm% /
=mm0 1
newmm2 5
SqlConnectionmm6 C
(mmC D
$strmmD z
+mm{ |
$str	mm} Å
+
mmÇ É
$str
mmÑ ê
+
mmë í
password
mmì õ
)
mmõ ú
)
mmú ù
{nn 

connectionoo 
.oo 
Openoo #
(oo# $
)oo$ %
;oo% &
usingpp 
(pp 

SqlCommandpp %
commandpp& -
=pp. /
newpp0 3

SqlCommandpp4 >
(pp> ?
$strpp? Y
,ppY Z

connectionpp[ e
)ppe f
)ppf g
{qq 
commandrr 
.rr  
ExecuteNonQueryrr  /
(rr/ 0
)rr0 1
;rr1 2
}ss 
}tt 
}uu 
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv  )
)vv) *
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
	exceptSqlxxT ]
)xx] ^
;xx^ _
}yy 
}zz 	
}{{ 
}}} 
}~~ ∞K
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_75a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_75a E
:F G
AbstractTestCaseH X
{ 
public 

override 
void 
Bad 
( 
) 
{   
string!! 
password!! 
;!! 
password"" 
="" 
$str"" 
;"" 
{$$ 	
try%% 
{&& 
using'' 
('' 
	WebClient''  
client''! '
=''( )
new''* -
	WebClient''. 7
(''7 8
)''8 9
)''9 :
{(( 
using)) 
()) 
StreamReader)) '
sr))( *
=))+ ,
new))- 0
StreamReader))1 =
())= >
client))> D
.))D E
OpenRead))E M
())M N
$str))N g
)))g h
)))h i
)))i j
{** 
password..  
=..! "
sr..# %
...% &
ReadLine..& .
(... /
)../ 0
;..0 1
}// 
}00 
}11 
catch22 
(22 
IOException22 
exceptIO22 '
)22' (
{33 
IO44 
.44 
Logger44 
.44 
Log44 
(44 
NLog44 "
.44" #
LogLevel44# +
.44+ ,
Warn44, 0
,440 1
$str442 M
,44M N
exceptIO44O W
)44W X
;44X Y
}55 
}66 	
byte88 
[88 
]88 
passwordSerialized88 !
=88" #
null88$ (
;88( )
try99 
{:: 	
BinaryFormatter;; 
bf;; 
=;;  
new;;! $
BinaryFormatter;;% 4
(;;4 5
);;5 6
;;;6 7
using<< 
(<< 
var<< 
ms<< 
=<< 
new<< 
MemoryStream<<  ,
(<<, -
)<<- .
)<<. /
{== 
bf>> 
.>> 
	Serialize>> 
(>> 
ms>> 
,>>  
password>>! )
)>>) *
;>>* +
passwordSerialized?? "
=??# $
ms??% '
.??' (
ToArray??( /
(??/ 0
)??0 1
;??1 2
}@@ K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_75bAA K
.AAK L
BadSinkAAL S
(AAS T
passwordSerializedAAT f
)AAh i
;AAi j
}BB 	
catchCC 
(CC "
SerializationExceptionCC %
exceptSerializeCC& 5
)CC5 6
{DD 	
IOEE 
.EE 
LoggerEE 
.EE 
LogEE 
(EE 
NLogEE 
.EE 
LogLevelEE '
.EE' (
WarnEE( ,
,EE, -
$strEE. X
,EEX Y
exceptSerializeEEZ i
)EEi j
;EEj k
}FF 	
}GG 
publicJJ 

overrideJJ 
voidJJ 
GoodJJ 
(JJ 
)JJ 
{KK 
GoodG2BLL 
(LL 
)LL 
;LL 
GoodB2GMM 
(MM 
)MM 
;MM 
}NN 
privateQQ 
staticQQ 
voidQQ 
GoodG2BQQ 
(QQ  
)QQ  !
{RR 
stringSS 
passwordSS 
;SS 
passwordTT 
=TT 
$strTT 
;TT 
{VV 	
tryWW 
{XX 
usingYY 
(YY 
	WebClientYY  
clientYY! '
=YY( )
newYY* -
	WebClientYY. 7
(YY7 8
)YY8 9
)YY9 :
{ZZ 
using[[ 
([[ 
StreamReader[[ '
sr[[( *
=[[+ ,
new[[- 0
StreamReader[[1 =
([[= >
client[[> D
.[[D E
OpenRead[[E M
([[M N
$str[[N g
)[[g h
)[[h i
)[[i j
{\\ 
password``  
=``! "
sr``# %
.``% &
ReadLine``& .
(``. /
)``/ 0
;``0 1
}aa 
}bb 
}cc 
catchdd 
(dd 
IOExceptiondd 
exceptIOdd '
)dd' (
{ee 
IOff 
.ff 
Loggerff 
.ff 
Logff 
(ff 
NLogff "
.ff" #
LogLevelff# +
.ff+ ,
Warnff, 0
,ff0 1
$strff2 M
,ffM N
exceptIOffO W
)ffW X
;ffX Y
}gg 
}hh 	
bytejj 
[jj 
]jj 
passwordSerializedjj !
=jj" #
nulljj$ (
;jj( )
trykk 
{ll 	
BinaryFormattermm 
bfmm 
=mm  
newmm! $
BinaryFormattermm% 4
(mm4 5
)mm5 6
;mm6 7
usingnn 
(nn 
varnn 
msnn 
=nn 
newnn 
MemoryStreamnn  ,
(nn, -
)nn- .
)nn. /
{oo 
bfpp 
.pp 
	Serializepp 
(pp 
mspp 
,pp  
passwordpp! )
)pp) *
;pp* +
passwordSerializedqq "
=qq# $
msqq% '
.qq' (
ToArrayqq( /
(qq/ 0
)qq0 1
;qq1 2
}rr K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_75bss K
.ssK L
GoodG2BSinkssL W
(ssW X
passwordSerializedssX j
)ssl m
;ssm n
}tt 	
catchuu 
(uu "
SerializationExceptionuu %
exceptSerializeuu& 5
)uu5 6
{vv 	
IOww 
.ww 
Loggerww 
.ww 
Logww 
(ww 
NLogww 
.ww 
LogLevelww '
.ww' (
Warnww( ,
,ww, -
$strww. X
,wwX Y
exceptSerializewwZ i
)wwi j
;wwj k
}xx 	
}yy 
private|| 
static|| 
void|| 
GoodB2G|| 
(||  
)||  !
{}} 
string~~ 
password~~ 
;~~ 
password 
= 
$str 
; 
{
ÅÅ 	
try
ÇÇ 
{
ÉÉ 
using
ÑÑ 
(
ÑÑ 
	WebClient
ÑÑ  
client
ÑÑ! '
=
ÑÑ( )
new
ÑÑ* -
	WebClient
ÑÑ. 7
(
ÑÑ7 8
)
ÑÑ8 9
)
ÑÑ9 :
{
ÖÖ 
using
ÜÜ 
(
ÜÜ 
StreamReader
ÜÜ '
sr
ÜÜ( *
=
ÜÜ+ ,
new
ÜÜ- 0
StreamReader
ÜÜ1 =
(
ÜÜ= >
client
ÜÜ> D
.
ÜÜD E
OpenRead
ÜÜE M
(
ÜÜM N
$str
ÜÜN g
)
ÜÜg h
)
ÜÜh i
)
ÜÜi j
{
áá 
password
ãã  
=
ãã! "
sr
ãã# %
.
ãã% &
ReadLine
ãã& .
(
ãã. /
)
ãã/ 0
;
ãã0 1
}
åå 
}
çç 
}
éé 
catch
èè 
(
èè 
IOException
èè 
exceptIO
èè '
)
èè' (
{
êê 
IO
ëë 
.
ëë 
Logger
ëë 
.
ëë 
Log
ëë 
(
ëë 
NLog
ëë "
.
ëë" #
LogLevel
ëë# +
.
ëë+ ,
Warn
ëë, 0
,
ëë0 1
$str
ëë2 M
,
ëëM N
exceptIO
ëëO W
)
ëëW X
;
ëëX Y
}
íí 
}
ìì 	
byte
ïï 
[
ïï 
]
ïï  
passwordSerialized
ïï !
=
ïï" #
null
ïï$ (
;
ïï( )
try
ññ 
{
óó 	
BinaryFormatter
òò 
bf
òò 
=
òò  
new
òò! $
BinaryFormatter
òò% 4
(
òò4 5
)
òò5 6
;
òò6 7
using
ôô 
(
ôô 
var
ôô 
ms
ôô 
=
ôô 
new
ôô 
MemoryStream
ôô  ,
(
ôô, -
)
ôô- .
)
ôô. /
{
öö 
bf
õõ 
.
õõ 
	Serialize
õõ 
(
õõ 
ms
õõ 
,
õõ  
password
õõ! )
)
õõ) *
;
õõ* + 
passwordSerialized
úú "
=
úú# $
ms
úú% '
.
úú' (
ToArray
úú( /
(
úú/ 0
)
úú0 1
;
úú1 2
}
ùù M
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_75b
ûû K
.
ûûK L
GoodB2GSink
ûûL W
(
ûûW X 
passwordSerialized
ûûX j
)
ûûl m
;
ûûm n
}
üü 	
catch
†† 
(
†† $
SerializationException
†† %
exceptSerialize
††& 5
)
††5 6
{
°° 	
IO
¢¢ 
.
¢¢ 
Logger
¢¢ 
.
¢¢ 
Log
¢¢ 
(
¢¢ 
NLog
¢¢ 
.
¢¢ 
LogLevel
¢¢ '
.
¢¢' (
Warn
¢¢( ,
,
¢¢, -
$str
¢¢. X
,
¢¢X Y
exceptSerialize
¢¢Z i
)
¢¢i j
;
¢¢j k
}
££ 	
}
§§ 
}¶¶ 
}ßß Ç_
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_75b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_75b E
{ 
public!! 

static!! 
void!! 
BadSink!! 
(!! 
byte!! #
[!!# $
]!!$ %
passwordSerialized!!& 8
)!!9 :
{"" 
try## 
{$$ 	
string%% 
password%% 
;%% 
var&& 
binForm&& 
=&& 
new&& 
BinaryFormatter&& -
(&&- .
)&&. /
;&&/ 0
using'' 
('' 
var'' 
	memStream''  
=''! "
new''# &
MemoryStream''' 3
(''3 4
)''4 5
)''5 6
{(( 
	memStream)) 
.)) 
Write)) 
())  
passwordSerialized))  2
,))2 3
$num))4 5
,))5 6
passwordSerialized))7 I
.))I J
Length))J P
)))P Q
;))Q R
	memStream** 
.** 
Seek** 
(** 
$num**  
,**  !

SeekOrigin**" ,
.**, -
Begin**- 2
)**2 3
;**3 4
password++ 
=++ 
(++ 
string++ "
)++" #
binForm++# *
.++* +
Deserialize+++ 6
(++6 7
	memStream++7 @
)++@ A
;++A B
},, 
try-- 
{.. 
using00 
(00 
SqlConnection00 $

connection00% /
=000 1
new002 5
SqlConnection006 C
(00C D
$str00D z
+00{ |
$str	00} Å
+
00Ç É
$str
00Ñ ê
+
00ë í
password
00ì õ
)
00õ ú
)
00ú ù
{11 

connection22 
.22 
Open22 #
(22# $
)22$ %
;22% &
using33 
(33 

SqlCommand33 %
command33& -
=33. /
new330 3

SqlCommand334 >
(33> ?
$str33? Y
,33Y Z

connection33[ e
)33e f
)33f g
{44 
command55 
.55  
ExecuteNonQuery55  /
(55/ 0
)550 1
;551 2
}66 
}77 
}88 
catch99 
(99 
SqlException99 
	exceptSql99  )
)99) *
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
$str;;2 R
,;;R S
	exceptSql;;T ]
);;] ^
;;;^ _
}<< 
}== 	
catch>> 
(>> "
SerializationException>> %
exceptSerialize>>& 5
)>>5 6
{?? 	
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ 
(@@ 
NLog@@ 
.@@ 
LogLevel@@ '
.@@' (
Warn@@( ,
,@@, -
$str@@. Y
,@@Y Z
exceptSerialize@@[ j
)@@j k
;@@k l
}AA 	
}BB 
publicGG 

staticGG 
voidGG 
GoodG2BSinkGG "
(GG" #
byteGG# '
[GG' (
]GG( )
passwordSerializedGG* <
)GG= >
{HH 
tryII 
{JJ 	
stringKK 
passwordKK 
;KK 
varLL 
binFormLL 
=LL 
newLL 
BinaryFormatterLL -
(LL- .
)LL. /
;LL/ 0
usingMM 
(MM 
varMM 
	memStreamMM  
=MM! "
newMM# &
MemoryStreamMM' 3
(MM3 4
)MM4 5
)MM5 6
{NN 
	memStreamOO 
.OO 
WriteOO 
(OO  
passwordSerializedOO  2
,OO2 3
$numOO4 5
,OO5 6
passwordSerializedOO7 I
.OOI J
LengthOOJ P
)OOP Q
;OOQ R
	memStreamPP 
.PP 
SeekPP 
(PP 
$numPP  
,PP  !

SeekOriginPP" ,
.PP, -
BeginPP- 2
)PP2 3
;PP3 4
passwordQQ 
=QQ 
(QQ 
stringQQ "
)QQ" #
binFormQQ# *
.QQ* +
DeserializeQQ+ 6
(QQ6 7
	memStreamQQ7 @
)QQ@ A
;QQA B
}RR 
trySS 
{TT 
usingVV 
(VV 
SqlConnectionVV $

connectionVV% /
=VV0 1
newVV2 5
SqlConnectionVV6 C
(VVC D
$strVVD z
+VV{ |
$str	VV} Å
+
VVÇ É
$str
VVÑ ê
+
VVë í
password
VVì õ
)
VVõ ú
)
VVú ù
{WW 

connectionXX 
.XX 
OpenXX #
(XX# $
)XX$ %
;XX% &
usingYY 
(YY 

SqlCommandYY %
commandYY& -
=YY. /
newYY0 3

SqlCommandYY4 >
(YY> ?
$strYY? Y
,YYY Z

connectionYY[ e
)YYe f
)YYf g
{ZZ 
command[[ 
.[[  
ExecuteNonQuery[[  /
([[/ 0
)[[0 1
;[[1 2
}\\ 
}]] 
}^^ 
catch__ 
(__ 
SqlException__ 
	exceptSql__  )
)__) *
{`` 
IOaa 
.aa 
Loggeraa 
.aa 
Logaa 
(aa 
NLogaa "
.aa" #
LogLevelaa# +
.aa+ ,
Warnaa, 0
,aa0 1
$straa2 R
,aaR S
	exceptSqlaaT ]
)aa] ^
;aa^ _
}bb 
}cc 	
catchdd 
(dd "
SerializationExceptiondd %
exceptSerializedd& 5
)dd5 6
{ee 	
IOff 
.ff 
Loggerff 
.ff 
Logff 
(ff 
NLogff 
.ff 
LogLevelff '
.ff' (
Warnff( ,
,ff, -
$strff. Y
,ffY Z
exceptSerializeff[ j
)ffj k
;ffk l
}gg 	
}hh 
publickk 

statickk 
voidkk 
GoodB2GSinkkk "
(kk" #
bytekk# '
[kk' (
]kk( )
passwordSerializedkk* <
)kk= >
{ll 
trymm 
{nn 	
stringoo 
passwordoo 
;oo 
varpp 
binFormpp 
=pp 
newpp 
BinaryFormatterpp -
(pp- .
)pp. /
;pp/ 0
usingqq 
(qq 
varqq 
	memStreamqq  
=qq! "
newqq# &
MemoryStreamqq' 3
(qq3 4
)qq4 5
)qq5 6
{rr 
	memStreamss 
.ss 
Writess 
(ss  
passwordSerializedss  2
,ss2 3
$numss4 5
,ss5 6
passwordSerializedss7 I
.ssI J
LengthssJ P
)ssP Q
;ssQ R
	memStreamtt 
.tt 
Seektt 
(tt 
$numtt  
,tt  !

SeekOrigintt" ,
.tt, -
Begintt- 2
)tt2 3
;tt3 4
passworduu 
=uu 
(uu 
stringuu "
)uu" #
binFormuu# *
.uu* +
Deserializeuu+ 6
(uu6 7
	memStreamuu7 @
)uu@ A
;uuA B
}vv 
ifww 
(ww 
passwordww 
!=ww 
nullww  
)ww  !
{xx 
{zz 
using{{ 
({{ $
AesCryptoServiceProvider{{ 3
aesAlg{{4 :
={{; <
new{{= @$
AesCryptoServiceProvider{{A Y
({{Y Z
){{Z [
){{[ \
{|| 
aesAlg}} 
.}} 
Padding}} &
=}}' (
PaddingMode}}) 4
.}}4 5
None}}5 9
;}}9 :
aesAlg~~ 
.~~ 
Key~~ "
=~~# $
Encoding~~% -
.~~- .
UTF8~~. 2
.~~2 3
GetBytes~~3 ;
(~~; <
$str~~< N
)~~N O
;~~O P
ICryptoTransform
ÄÄ (
	decryptor
ÄÄ) 2
=
ÄÄ3 4
aesAlg
ÄÄ5 ;
.
ÄÄ; <
CreateDecryptor
ÄÄ< K
(
ÄÄK L
aesAlg
ÄÄL R
.
ÄÄR S
Key
ÄÄS V
,
ÄÄV W
aesAlg
ÄÄX ^
.
ÄÄ^ _
IV
ÄÄ_ a
)
ÄÄa b
;
ÄÄb c
using
ÇÇ 
(
ÇÇ 
MemoryStream
ÇÇ +
	msDecrypt
ÇÇ, 5
=
ÇÇ6 7
new
ÇÇ8 ;
MemoryStream
ÇÇ< H
(
ÇÇH I
Encoding
ÇÇI Q
.
ÇÇQ R
UTF8
ÇÇR V
.
ÇÇV W
GetBytes
ÇÇW _
(
ÇÇ_ `
password
ÇÇ` h
)
ÇÇh i
)
ÇÇi j
)
ÇÇj k
{
ÉÉ 
using
ÑÑ !
(
ÑÑ" #
CryptoStream
ÑÑ# /
	csDecrypt
ÑÑ0 9
=
ÑÑ: ;
new
ÑÑ< ?
CryptoStream
ÑÑ@ L
(
ÑÑL M
	msDecrypt
ÑÑM V
,
ÑÑV W
	decryptor
ÑÑX a
,
ÑÑa b
CryptoStreamMode
ÑÑc s
.
ÑÑs t
Read
ÑÑt x
)
ÑÑx y
)
ÑÑy z
{
ÖÖ 
using
ÜÜ  %
(
ÜÜ& '
StreamReader
ÜÜ' 3
	srDecrypt
ÜÜ4 =
=
ÜÜ> ?
new
ÜÜ@ C
StreamReader
ÜÜD P
(
ÜÜP Q
	csDecrypt
ÜÜQ Z
)
ÜÜZ [
)
ÜÜ[ \
{
áá  !
password
ää$ ,
=
ää- .
	srDecrypt
ää/ 8
.
ää8 9
	ReadToEnd
ää9 B
(
ääB C
)
ääC D
;
ääD E
}
ãã  !
}
åå 
}
çç 
}
éé 
}
èè 
try
êê 
{
ëë 
using
ìì 
(
ìì 
SqlConnection
ìì (

connection
ìì) 3
=
ìì4 5
new
ìì6 9
SqlConnection
ìì: G
(
ììG H
$str
ììH ~
+ìì Ä
$strììÅ Ö
+ììÜ á
$strììà î
+ììï ñ
passwordììó ü
)ììü †
)ìì† °
{
îî 

connection
ïï "
.
ïï" #
Open
ïï# '
(
ïï' (
)
ïï( )
;
ïï) *
using
ññ 
(
ññ 

SqlCommand
ññ )
command
ññ* 1
=
ññ2 3
new
ññ4 7

SqlCommand
ññ8 B
(
ññB C
$str
ññC ]
,
ññ] ^

connection
ññ_ i
)
ññi j
)
ññj k
{
óó 
command
òò #
.
òò# $
ExecuteNonQuery
òò$ 3
(
òò3 4
)
òò4 5
;
òò5 6
}
ôô 
}
öö 
}
õõ 
catch
úú 
(
úú 
SqlException
úú #
	exceptSql
úú$ -
)
úú- .
{
ùù 
IO
ûû 
.
ûû 
Logger
ûû 
.
ûû 
Log
ûû !
(
ûû! "
NLog
ûû" &
.
ûû& '
LogLevel
ûû' /
.
ûû/ 0
Warn
ûû0 4
,
ûû4 5
$str
ûû6 V
,
ûûV W
	exceptSql
ûûX a
)
ûûa b
;
ûûb c
}
üü 
}
†† 
}
°° 	
catch
¢¢ 
(
¢¢ $
SerializationException
¢¢ %
exceptSerialize
¢¢& 5
)
¢¢5 6
{
££ 	
IO
§§ 
.
§§ 
Logger
§§ 
.
§§ 
Log
§§ 
(
§§ 
NLog
§§ 
.
§§ 
LogLevel
§§ '
.
§§' (
Warn
§§( ,
,
§§, -
$str
§§. Y
,
§§Y Z
exceptSerialize
§§[ j
)
§§j k
;
§§k l
}
•• 	
}
¶¶ 
}®® 
}©© ç'
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_81a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class K
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_81a E
:F G
AbstractTestCaseH X
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string 
password 
; 
password   
=   
$str   
;   
{"" 	
try## 
{$$ 
using%% 
(%% 
	WebClient%%  
client%%! '
=%%( )
new%%* -
	WebClient%%. 7
(%%7 8
)%%8 9
)%%9 :
{&& 
using'' 
('' 
StreamReader'' '
sr''( *
=''+ ,
new''- 0
StreamReader''1 =
(''= >
client''> D
.''D E
OpenRead''E M
(''M N
$str''N g
)''g h
)''h i
)''i j
{(( 
password,,  
=,,! "
sr,,# %
.,,% &
ReadLine,,& .
(,,. /
),,/ 0
;,,0 1
}-- 
}.. 
}// 
catch00 
(00 
IOException00 
exceptIO00 '
)00' (
{11 
IO22 
.22 
Logger22 
.22 
Log22 
(22 
NLog22 "
.22" #
LogLevel22# +
.22+ ,
Warn22, 0
,220 1
$str222 M
,22M N
exceptIO22O W
)22W X
;22X Y
}33 
}44 	O
CCWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_81_base55 K

baseObject55L V
=55W X
new55Y \O
BCWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_81_bad	55] ü
(
55ü †
)
55† °
;
55° ¢

baseObject66 
.66 
Action66 
(66 
password66 "
)66# $
;66$ %
}77 
public:: 

override:: 
void:: 
Good:: 
(:: 
):: 
{;; 
GoodG2B<< 
(<< 
)<< 
;<< 
GoodB2G== 
(== 
)== 
;== 
}>> 
privateAA 
voidAA 
GoodG2BAA 
(AA 
)AA 
{BB 
stringCC 
passwordCC 
;CC 
passwordFF 
=FF 
$strFF "
;FF" #O
CCWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_81_baseGG K

baseObjectGGL V
=GGW X
newGGY \S
FCWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_81_goodG2B	GG] £
(
GG£ §
)
GG§ •
;
GG• ¶

baseObjectHH 
.HH 
ActionHH 
(HH 
passwordHH "
)HH# $
;HH$ %
}II 
privateLL 
voidLL 
GoodB2GLL 
(LL 
)LL 
{MM 
stringNN 
passwordNN 
;NN 
passwordOO 
=OO 
$strOO 
;OO 
{QQ 	
tryRR 
{SS 
usingTT 
(TT 
	WebClientTT  
clientTT! '
=TT( )
newTT* -
	WebClientTT. 7
(TT7 8
)TT8 9
)TT9 :
{UU 
usingVV 
(VV 
StreamReaderVV '
srVV( *
=VV+ ,
newVV- 0
StreamReaderVV1 =
(VV= >
clientVV> D
.VVD E
OpenReadVVE M
(VVM N
$strVVN g
)VVg h
)VVh i
)VVi j
{WW 
password[[  
=[[! "
sr[[# %
.[[% &
ReadLine[[& .
([[. /
)[[/ 0
;[[0 1
}\\ 
}]] 
}^^ 
catch__ 
(__ 
IOException__ 
exceptIO__ '
)__' (
{`` 
IOaa 
.aa 
Loggeraa 
.aa 
Logaa 
(aa 
NLogaa "
.aa" #
LogLevelaa# +
.aa+ ,
Warnaa, 0
,aa0 1
$straa2 M
,aaM N
exceptIOaaO W
)aaW X
;aaX Y
}bb 
}cc 	O
CCWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_81_basedd K

baseObjectddL V
=ddW X
newddY \S
FCWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_81_goodB2G	dd] £
(
dd£ §
)
dd§ •
;
dd• ¶

baseObjectee 
.ee 
Actionee 
(ee 
passwordee "
)ee# $
;ee$ %
}ff 
}hh 
}ii È
ƒC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_81_bad.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class N
BCWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_81_bad H
:I JP
CCWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_81_base	K é
{ 
public 

override 
void 
Action 
(  
string  &
password' /
)0 1
{   
try!! 
{"" 	
using$$ 
($$ 
SqlConnection$$  

connection$$! +
=$$, -
new$$. 1
SqlConnection$$2 ?
($$? @
$str$$@ v
+$$w x
$str$$y }
+$$~ 
$str
$$Ä å
+
$$ç é
password
$$è ó
)
$$ó ò
)
$$ò ô
{%% 

connection&& 
.&& 
Open&& 
(&&  
)&&  !
;&&! "
using'' 
('' 

SqlCommand'' !
command''" )
=''* +
new'', /

SqlCommand''0 :
('': ;
$str''; U
,''U V

connection''W a
)''a b
)''b c
{(( 
command)) 
.)) 
ExecuteNonQuery)) +
())+ ,
))), -
;))- .
}** 
}++ 
},, 	
catch-- 
(-- 
SqlException-- 
	exceptSql-- %
)--% &
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. N
,//N O
	exceptSql//P Y
)//Y Z
;//Z [
}00 	
}11 
}22 
}33 Ü
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_81_base.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
abstract 
class	 O
CCWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_81_base R
{ 
public 

abstract 
void 
Action 
(  
string  &
password' /
)0 1
;1 2
} 
}   · 
»C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_81_goodB2G.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class R
FCWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_81_goodB2G L
:M NP
CCWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_81_base	O í
{ 
public   

override   
void   
Action   
(    
string    &
password  ' /
)  0 1
{!! 
if"" 

("" 
password"" 
!="" 
null"" 
)"" 
{## 	
{%% 
using&& 
(&& $
AesCryptoServiceProvider&& /
aesAlg&&0 6
=&&7 8
new&&9 <$
AesCryptoServiceProvider&&= U
(&&U V
)&&V W
)&&W X
{'' 
aesAlg(( 
.(( 
Padding(( "
=((# $
PaddingMode((% 0
.((0 1
None((1 5
;((5 6
aesAlg)) 
.)) 
Key)) 
=))  
Encoding))! )
.))) *
UTF8))* .
.)). /
GetBytes))/ 7
())7 8
$str))8 J
)))J K
;))K L
ICryptoTransform++ $
	decryptor++% .
=++/ 0
aesAlg++1 7
.++7 8
CreateDecryptor++8 G
(++G H
aesAlg++H N
.++N O
Key++O R
,++R S
aesAlg++T Z
.++Z [
IV++[ ]
)++] ^
;++^ _
using-- 
(-- 
MemoryStream-- '
	msDecrypt--( 1
=--2 3
new--4 7
MemoryStream--8 D
(--D E
Encoding--E M
.--M N
UTF8--N R
.--R S
GetBytes--S [
(--[ \
password--\ d
)--d e
)--e f
)--f g
{.. 
using// 
(// 
CryptoStream// +
	csDecrypt//, 5
=//6 7
new//8 ;
CryptoStream//< H
(//H I
	msDecrypt//I R
,//R S
	decryptor//T ]
,//] ^
CryptoStreamMode//_ o
.//o p
Read//p t
)//t u
)//u v
{00 
using11 !
(11" #
StreamReader11# /
	srDecrypt110 9
=11: ;
new11< ?
StreamReader11@ L
(11L M
	csDecrypt11M V
)11V W
)11W X
{22 
password55  (
=55) *
	srDecrypt55+ 4
.554 5
	ReadToEnd555 >
(55> ?
)55? @
;55@ A
}66 
}77 
}88 
}99 
}:: 
try;; 
{<< 
using>> 
(>> 
SqlConnection>> $

connection>>% /
=>>0 1
new>>2 5
SqlConnection>>6 C
(>>C D
$str>>D z
+>>{ |
$str	>>} Å
+
>>Ç É
$str
>>Ñ ê
+
>>ë í
password
>>ì õ
)
>>õ ú
)
>>ú ù
{?? 

connection@@ 
.@@ 
Open@@ #
(@@# $
)@@$ %
;@@% &
usingAA 
(AA 

SqlCommandAA %
commandAA& -
=AA. /
newAA0 3

SqlCommandAA4 >
(AA> ?
$strAA? Y
,AAY Z

connectionAA[ e
)AAe f
)AAf g
{BB 
commandCC 
.CC  
ExecuteNonQueryCC  /
(CC/ 0
)CC0 1
;CC1 2
}DD 
}EE 
}FF 
catchGG 
(GG 
SqlExceptionGG 
	exceptSqlGG  )
)GG) *
{HH 
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII "
.II" #
LogLevelII# +
.II+ ,
WarnII, 0
,II0 1
$strII2 R
,IIR S
	exceptSqlIIT ]
)II] ^
;II^ _
}JJ 
}KK 	
}LL 
}MM 
}NN Ò
»C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_81_goodG2B.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class R
FCWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_81_goodG2B L
:M NP
CCWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_81_base	O í
{ 
public   

override   
void   
Action   
(    
string    &
password  ' /
)  0 1
{!! 
try"" 
{## 	
using%% 
(%% 
SqlConnection%%  

connection%%! +
=%%, -
new%%. 1
SqlConnection%%2 ?
(%%? @
$str%%@ v
+%%w x
$str%%y }
+%%~ 
$str
%%Ä å
+
%%ç é
password
%%è ó
)
%%ó ò
)
%%ò ô
{&& 

connection'' 
.'' 
Open'' 
(''  
)''  !
;''! "
using(( 
((( 

SqlCommand(( !
command((" )
=((* +
new((, /

SqlCommand((0 :
(((: ;
$str((; U
,((U V

connection((W a
)((a b
)((b c
{)) 
command** 
.** 
ExecuteNonQuery** +
(**+ ,
)**, -
;**- .
}++ 
},, 
}-- 	
catch.. 
(.. 
SqlException.. 
	exceptSql.. %
)..% &
{// 	
IO00 
.00 
Logger00 
.00 
Log00 
(00 
NLog00 
.00 
LogLevel00 '
.00' (
Warn00( ,
,00, -
$str00. N
,00N O
	exceptSql00P Y
)00Y Z
;00Z [
}11 	
}22 
}33 
}44 ›2
≠C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_01.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 7
+CWE319_Cleartext_Tx_Sensitive_Info__send_01 1
:2 3
AbstractTestCase4 D
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
data## 
;## 
using$$ 
($$ 
SecureString$$ 
	securePwd$$ %
=$$& '
new$$( +
SecureString$$, 8
($$8 9
)$$9 :
)$$: ;
{%% 	
for&& 
(&& 
int&& 
i&& 
=&& 
$num&& 
;&& 
i&& 
<&& 
$str&&  +
.&&+ ,
Length&&, 2
;&&2 3
i&&4 5
++&&5 7
)&&7 8
{'' 
	securePwd)) 
.)) 

AppendChar)) $
())$ %
$str))% 0
[))0 1
i))1 2
]))2 3
)))3 4
;))4 5
}** 
data-- 
=-- 
	securePwd-- 
.-- 
ToString-- %
(--% &
)--& '
;--' (
}.. 	
try// 
{00 	
using11 
(11 
	TcpClient11 
	tcpClient11 &
=11' (
new11) ,
	TcpClient11- 6
(116 7
$str117 D
,11D E
$num11F J
)11J K
)11K L
{22 
using33 
(33 
StreamWriter33 #
writer33$ *
=33+ ,
new33- 0
StreamWriter331 =
(33= >
	tcpClient33> G
.33G H
	GetStream33H Q
(33Q R
)33R S
)33S T
)33T U
{44 
writer66 
.66 
	WriteLine66 $
(66$ %
data66% )
)66) *
;66* +
}77 
}88 
}99 	
catch:: 
(:: 
IOException:: 
exceptIO:: #
)::# $
{;; 	
IO<< 
.<< 
Logger<< 
.<< 
Log<< 
(<< 
NLog<< 
.<< 
LogLevel<< '
.<<' (
Warn<<( ,
,<<, -
$str<<. N
,<<N O
exceptIO<<P X
)<<X Y
;<<Y Z
}== 	
}>> 
publicAA 

overrideAA 
voidAA 
GoodAA 
(AA 
)AA 
{BB 
GoodG2BCC 
(CC 
)CC 
;CC 
GoodB2GDD 
(DD 
)DD 
;DD 
}EE 
privateHH 
voidHH 
GoodG2BHH 
(HH 
)HH 
{II 
stringJJ 
dataJJ 
;JJ 
dataLL 
=LL 
$strLL 
;LL 
tryMM 
{NN 	
usingOO 
(OO 
	TcpClientOO 
	tcpClientOO &
=OO' (
newOO) ,
	TcpClientOO- 6
(OO6 7
$strOO7 D
,OOD E
$numOOF J
)OOJ K
)OOK L
{PP 
usingQQ 
(QQ 
StreamWriterQQ #
writerQQ$ *
=QQ+ ,
newQQ- 0
StreamWriterQQ1 =
(QQ= >
	tcpClientQQ> G
.QQG H
	GetStreamQQH Q
(QQQ R
)QQR S
)QQS T
)QQT U
{RR 
writerTT 
.TT 
	WriteLineTT $
(TT$ %
dataTT% )
)TT) *
;TT* +
}UU 
}VV 
}WW 	
catchXX 
(XX 
IOExceptionXX 
exceptIOXX #
)XX# $
{YY 	
IOZZ 
.ZZ 
LoggerZZ 
.ZZ 
LogZZ 
(ZZ 
NLogZZ 
.ZZ 
LogLevelZZ '
.ZZ' (
WarnZZ( ,
,ZZ, -
$strZZ. N
,ZZN O
exceptIOZZP X
)ZZX Y
;ZZY Z
}[[ 	
}\\ 
private__ 
void__ 
GoodB2G__ 
(__ 
)__ 
{`` 
stringaa 
dataaa 
;aa 
usingbb 
(bb 
SecureStringbb 
	securePwdbb %
=bb& '
newbb( +
SecureStringbb, 8
(bb8 9
)bb9 :
)bb: ;
{cc 	
fordd 
(dd 
intdd 
idd 
=dd 
$numdd 
;dd 
idd 
<dd 
$strdd  +
.dd+ ,
Lengthdd, 2
;dd2 3
idd4 5
++dd5 7
)dd7 8
{ee 
	securePwdgg 
.gg 

AppendChargg $
(gg$ %
$strgg% 0
[gg0 1
igg1 2
]gg2 3
)gg3 4
;gg4 5
}hh 
datakk 
=kk 
	securePwdkk 
.kk 
ToStringkk %
(kk% &
)kk& '
;kk' (
}ll 	
trymm 
{nn 	
usingoo 
(oo 
	TcpClientoo 
clientoo #
=oo$ %
newoo& )
	TcpClientoo* 3
(oo3 4
$stroo4 A
,ooA B
$numooC G
)ooG H
)ooH I
{pp 
usingqq 
(qq 
	SslStreamqq  
	sslStreamqq! *
=qq+ ,
newqq- 0
	SslStreamqq1 :
(qq: ;
clientqq; A
.qqA B
	GetStreamqqB K
(qqK L
)qqL M
)qqM N
)qqN O
{rr 
	sslStreamtt 
.tt 
Writett #
(tt# $
Encodingtt$ ,
.tt, -
UTF8tt- 1
.tt1 2
GetBytestt2 :
(tt: ;
datatt; ?
)tt? @
)tt@ A
;ttA B
}uu 
}vv 
}ww 	
catchxx 
(xx 
IOExceptionxx 
exceptIOxx #
)xx# $
{yy 	
IOzz 
.zz 
Loggerzz 
.zz 
Logzz 
(zz 
NLogzz 
.zz 
LogLevelzz '
.zz' (
Warnzz( ,
,zz, -
$strzz. N
,zzN O
exceptIOzzP X
)zzX Y
;zzY Z
}{{ 	
}|| 
}~~ 
} »c
≠C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_02.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 7
+CWE319_Cleartext_Tx_Sensitive_Info__send_02 1
:2 3
AbstractTestCase4 D
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
data## 
;## 
if$$ 

($$ 
true$$ 
)$$ 
{%% 	
using&& 
(&& 
SecureString&& 
	securePwd&&  )
=&&* +
new&&, /
SecureString&&0 <
(&&< =
)&&= >
)&&> ?
{'' 
for(( 
((( 
int(( 
i(( 
=(( 
$num(( 
;(( 
i((  !
<((" #
$str(($ /
.((/ 0
Length((0 6
;((6 7
i((8 9
++((9 ;
)((; <
{)) 
	securePwd++ 
.++ 

AppendChar++ (
(++( )
$str++) 4
[++4 5
i++5 6
]++6 7
)++7 8
;++8 9
},, 
data// 
=// 
	securePwd//  
.//  !
ToString//! )
(//) *
)//* +
;//+ ,
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
true88 
)88 
{99 	
try:: 
{;; 
using<< 
(<< 
	TcpClient<<  
	tcpClient<<! *
=<<+ ,
new<<- 0
	TcpClient<<1 :
(<<: ;
$str<<; H
,<<H I
$num<<J N
)<<N O
)<<O P
{== 
using>> 
(>> 
StreamWriter>> '
writer>>( .
=>>/ 0
new>>1 4
StreamWriter>>5 A
(>>A B
	tcpClient>>B K
.>>K L
	GetStream>>L U
(>>U V
)>>V W
)>>W X
)>>X Y
{?? 
writerAA 
.AA 
	WriteLineAA (
(AA( )
dataAA) -
)AA- .
;AA. /
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE 
exceptIOEE '
)EE' (
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG 
(GG 
NLogGG "
.GG" #
LogLevelGG# +
.GG+ ,
WarnGG, 0
,GG0 1
$strGG2 R
,GGR S
exceptIOGGT \
)GG\ ]
;GG] ^
}HH 
}II 	
}JJ 
privateNN 
voidNN 
GoodG2B1NN 
(NN 
)NN 
{OO 
stringPP 
dataPP 
;PP 
ifQQ 

(QQ 
falseQQ 
)QQ 
{RR 	
dataUU 
=UU 
nullUU 
;UU 
}VV 	
elseWW 
{XX 	
dataZZ 
=ZZ 
$strZZ  
;ZZ  !
}[[ 	
if\\ 

(\\ 
true\\ 
)\\ 
{]] 	
try^^ 
{__ 
using`` 
(`` 
	TcpClient``  
	tcpClient``! *
=``+ ,
new``- 0
	TcpClient``1 :
(``: ;
$str``; H
,``H I
$num``J N
)``N O
)``O P
{aa 
usingbb 
(bb 
StreamWriterbb '
writerbb( .
=bb/ 0
newbb1 4
StreamWriterbb5 A
(bbA B
	tcpClientbbB K
.bbK L
	GetStreambbL U
(bbU V
)bbV W
)bbW X
)bbX Y
{cc 
writeree 
.ee 
	WriteLineee (
(ee( )
dataee) -
)ee- .
;ee. /
}ff 
}gg 
}hh 
catchii 
(ii 
IOExceptionii 
exceptIOii '
)ii' (
{jj 
IOkk 
.kk 
Loggerkk 
.kk 
Logkk 
(kk 
NLogkk "
.kk" #
LogLevelkk# +
.kk+ ,
Warnkk, 0
,kk0 1
$strkk2 R
,kkR S
exceptIOkkT \
)kk\ ]
;kk] ^
}ll 
}mm 	
}nn 
privateqq 
voidqq 
GoodG2B2qq 
(qq 
)qq 
{rr 
stringss 
datass 
;ss 
iftt 

(tt 
truett 
)tt 
{uu 	
dataww 
=ww 
$strww  
;ww  !
}xx 	
elseyy 
{zz 	
data}} 
=}} 
null}} 
;}} 
}~~ 	
if 

( 
true 
) 
{
ÄÄ 	
try
ÅÅ 
{
ÇÇ 
using
ÉÉ 
(
ÉÉ 
	TcpClient
ÉÉ  
	tcpClient
ÉÉ! *
=
ÉÉ+ ,
new
ÉÉ- 0
	TcpClient
ÉÉ1 :
(
ÉÉ: ;
$str
ÉÉ; H
,
ÉÉH I
$num
ÉÉJ N
)
ÉÉN O
)
ÉÉO P
{
ÑÑ 
using
ÖÖ 
(
ÖÖ 
StreamWriter
ÖÖ '
writer
ÖÖ( .
=
ÖÖ/ 0
new
ÖÖ1 4
StreamWriter
ÖÖ5 A
(
ÖÖA B
	tcpClient
ÖÖB K
.
ÖÖK L
	GetStream
ÖÖL U
(
ÖÖU V
)
ÖÖV W
)
ÖÖW X
)
ÖÖX Y
{
ÜÜ 
writer
àà 
.
àà 
	WriteLine
àà (
(
àà( )
data
àà) -
)
àà- .
;
àà. /
}
ââ 
}
ää 
}
ãã 
catch
åå 
(
åå 
IOException
åå 
exceptIO
åå '
)
åå' (
{
çç 
IO
éé 
.
éé 
Logger
éé 
.
éé 
Log
éé 
(
éé 
NLog
éé "
.
éé" #
LogLevel
éé# +
.
éé+ ,
Warn
éé, 0
,
éé0 1
$str
éé2 R
,
ééR S
exceptIO
ééT \
)
éé\ ]
;
éé] ^
}
èè 
}
êê 	
}
ëë 
private
îî 
void
îî 
GoodB2G1
îî 
(
îî 
)
îî 
{
ïï 
string
ññ 
data
ññ 
;
ññ 
if
óó 

(
óó 
true
óó 
)
óó 
{
òò 	
using
ôô 
(
ôô 
SecureString
ôô 
	securePwd
ôô  )
=
ôô* +
new
ôô, /
SecureString
ôô0 <
(
ôô< =
)
ôô= >
)
ôô> ?
{
öö 
for
õõ 
(
õõ 
int
õõ 
i
õõ 
=
õõ 
$num
õõ 
;
õõ 
i
õõ  !
<
õõ" #
$str
õõ$ /
.
õõ/ 0
Length
õõ0 6
;
õõ6 7
i
õõ8 9
++
õõ9 ;
)
õõ; <
{
úú 
	securePwd
ûû 
.
ûû 

AppendChar
ûû (
(
ûû( )
$str
ûû) 4
[
ûû4 5
i
ûû5 6
]
ûû6 7
)
ûû7 8
;
ûû8 9
}
üü 
data
¢¢ 
=
¢¢ 
	securePwd
¢¢  
.
¢¢  !
ToString
¢¢! )
(
¢¢) *
)
¢¢* +
;
¢¢+ ,
}
££ 
}
§§ 	
else
•• 
{
¶¶ 	
data
©© 
=
©© 
null
©© 
;
©© 
}
™™ 	
if
´´ 

(
´´ 
false
´´ 
)
´´ 
{
¨¨ 	
IO
ÆÆ 
.
ÆÆ 
	WriteLine
ÆÆ 
(
ÆÆ 
$str
ÆÆ /
)
ÆÆ/ 0
;
ÆÆ0 1
}
ØØ 	
else
∞∞ 
{
±± 	
try
≤≤ 
{
≥≥ 
using
¥¥ 
(
¥¥ 
	TcpClient
¥¥  
client
¥¥! '
=
¥¥( )
new
¥¥* -
	TcpClient
¥¥. 7
(
¥¥7 8
$str
¥¥8 E
,
¥¥E F
$num
¥¥G K
)
¥¥K L
)
¥¥L M
{
µµ 
using
∂∂ 
(
∂∂ 
	SslStream
∂∂ $
	sslStream
∂∂% .
=
∂∂/ 0
new
∂∂1 4
	SslStream
∂∂5 >
(
∂∂> ?
client
∂∂? E
.
∂∂E F
	GetStream
∂∂F O
(
∂∂O P
)
∂∂P Q
)
∂∂Q R
)
∂∂R S
{
∑∑ 
	sslStream
ππ !
.
ππ! "
Write
ππ" '
(
ππ' (
Encoding
ππ( 0
.
ππ0 1
UTF8
ππ1 5
.
ππ5 6
GetBytes
ππ6 >
(
ππ> ?
data
ππ? C
)
ππC D
)
ππD E
;
ππE F
}
∫∫ 
}
ªª 
}
ºº 
catch
ΩΩ 
(
ΩΩ 
IOException
ΩΩ 
exceptIO
ΩΩ '
)
ΩΩ' (
{
ææ 
IO
øø 
.
øø 
Logger
øø 
.
øø 
Log
øø 
(
øø 
NLog
øø "
.
øø" #
LogLevel
øø# +
.
øø+ ,
Warn
øø, 0
,
øø0 1
$str
øø2 R
,
øøR S
exceptIO
øøT \
)
øø\ ]
;
øø] ^
}
¿¿ 
}
¡¡ 	
}
¬¬ 
private
≈≈ 
void
≈≈ 
GoodB2G2
≈≈ 
(
≈≈ 
)
≈≈ 
{
∆∆ 
string
«« 
data
«« 
;
«« 
if
»» 

(
»» 
true
»» 
)
»» 
{
…… 	
using
   
(
   
SecureString
   
	securePwd
    )
=
  * +
new
  , /
SecureString
  0 <
(
  < =
)
  = >
)
  > ?
{
ÀÀ 
for
ÃÃ 
(
ÃÃ 
int
ÃÃ 
i
ÃÃ 
=
ÃÃ 
$num
ÃÃ 
;
ÃÃ 
i
ÃÃ  !
<
ÃÃ" #
$str
ÃÃ$ /
.
ÃÃ/ 0
Length
ÃÃ0 6
;
ÃÃ6 7
i
ÃÃ8 9
++
ÃÃ9 ;
)
ÃÃ; <
{
ÕÕ 
	securePwd
œœ 
.
œœ 

AppendChar
œœ (
(
œœ( )
$str
œœ) 4
[
œœ4 5
i
œœ5 6
]
œœ6 7
)
œœ7 8
;
œœ8 9
}
–– 
data
”” 
=
”” 
	securePwd
””  
.
””  !
ToString
””! )
(
””) *
)
””* +
;
””+ ,
}
‘‘ 
}
’’ 	
else
÷÷ 
{
◊◊ 	
data
⁄⁄ 
=
⁄⁄ 
null
⁄⁄ 
;
⁄⁄ 
}
€€ 	
if
‹‹ 

(
‹‹ 
true
‹‹ 
)
‹‹ 
{
›› 	
try
ﬁﬁ 
{
ﬂﬂ 
using
‡‡ 
(
‡‡ 
	TcpClient
‡‡  
client
‡‡! '
=
‡‡( )
new
‡‡* -
	TcpClient
‡‡. 7
(
‡‡7 8
$str
‡‡8 E
,
‡‡E F
$num
‡‡G K
)
‡‡K L
)
‡‡L M
{
·· 
using
‚‚ 
(
‚‚ 
	SslStream
‚‚ $
	sslStream
‚‚% .
=
‚‚/ 0
new
‚‚1 4
	SslStream
‚‚5 >
(
‚‚> ?
client
‚‚? E
.
‚‚E F
	GetStream
‚‚F O
(
‚‚O P
)
‚‚P Q
)
‚‚Q R
)
‚‚R S
{
„„ 
	sslStream
ÂÂ !
.
ÂÂ! "
Write
ÂÂ" '
(
ÂÂ' (
Encoding
ÂÂ( 0
.
ÂÂ0 1
UTF8
ÂÂ1 5
.
ÂÂ5 6
GetBytes
ÂÂ6 >
(
ÂÂ> ?
data
ÂÂ? C
)
ÂÂC D
)
ÂÂD E
;
ÂÂE F
}
ÊÊ 
}
ÁÁ 
}
ËË 
catch
ÈÈ 
(
ÈÈ 
IOException
ÈÈ 
exceptIO
ÈÈ '
)
ÈÈ' (
{
ÍÍ 
IO
ÎÎ 
.
ÎÎ 
Logger
ÎÎ 
.
ÎÎ 
Log
ÎÎ 
(
ÎÎ 
NLog
ÎÎ "
.
ÎÎ" #
LogLevel
ÎÎ# +
.
ÎÎ+ ,
Warn
ÎÎ, 0
,
ÎÎ0 1
$str
ÎÎ2 R
,
ÎÎR S
exceptIO
ÎÎT \
)
ÎÎ\ ]
;
ÎÎ] ^
}
ÏÏ 
}
ÌÌ 	
}
ÓÓ 
public
 

override
 
void
 
Good
 
(
 
)
 
{
ÒÒ 
GoodG2B1
ÚÚ 
(
ÚÚ 
)
ÚÚ 
;
ÚÚ 
GoodG2B2
ÛÛ 
(
ÛÛ 
)
ÛÛ 
;
ÛÛ 
GoodB2G1
ÙÙ 
(
ÙÙ 
)
ÙÙ 
;
ÙÙ 
GoodB2G2
ıı 
(
ıı 
)
ıı 
;
ıı 
}
ˆˆ 
}¯¯ 
}˘˘ ™f
≠C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_03.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 7
+CWE319_Cleartext_Tx_Sensitive_Info__send_03 1
:2 3
AbstractTestCase4 D
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
data## 
;## 
if$$ 

($$ 
$num$$ 
==$$ 
$num$$ 
)$$ 
{%% 	
using&& 
(&& 
SecureString&& 
	securePwd&&  )
=&&* +
new&&, /
SecureString&&0 <
(&&< =
)&&= >
)&&> ?
{'' 
for(( 
((( 
int(( 
i(( 
=(( 
$num(( 
;(( 
i((  !
<((" #
$str(($ /
.((/ 0
Length((0 6
;((6 7
i((8 9
++((9 ;
)((; <
{)) 
	securePwd++ 
.++ 

AppendChar++ (
(++( )
$str++) 4
[++4 5
i++5 6
]++6 7
)++7 8
;++8 9
},, 
data// 
=// 
	securePwd//  
.//  !
ToString//! )
(//) *
)//* +
;//+ ,
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
$num88 
==88 
$num88 
)88 
{99 	
try:: 
{;; 
using<< 
(<< 
	TcpClient<<  
	tcpClient<<! *
=<<+ ,
new<<- 0
	TcpClient<<1 :
(<<: ;
$str<<; H
,<<H I
$num<<J N
)<<N O
)<<O P
{== 
using>> 
(>> 
StreamWriter>> '
writer>>( .
=>>/ 0
new>>1 4
StreamWriter>>5 A
(>>A B
	tcpClient>>B K
.>>K L
	GetStream>>L U
(>>U V
)>>V W
)>>W X
)>>X Y
{?? 
writerAA 
.AA 
	WriteLineAA (
(AA( )
dataAA) -
)AA- .
;AA. /
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE 
exceptIOEE '
)EE' (
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG 
(GG 
NLogGG "
.GG" #
LogLevelGG# +
.GG+ ,
WarnGG, 0
,GG0 1
$strGG2 R
,GGR S
exceptIOGGT \
)GG\ ]
;GG] ^
}HH 
}II 	
}JJ 
privateNN 
voidNN 
GoodG2B1NN 
(NN 
)NN 
{OO 
stringPP 
dataPP 
;PP 
ifQQ 

(QQ 
$numQQ 
!=QQ 
$numQQ 
)QQ 
{RR 	
dataUU 
=UU 
nullUU 
;UU 
}VV 	
elseWW 
{XX 	
dataZZ 
=ZZ 
$strZZ  
;ZZ  !
}[[ 	
if\\ 

(\\ 
$num\\ 
==\\ 
$num\\ 
)\\ 
{]] 	
try^^ 
{__ 
using`` 
(`` 
	TcpClient``  
	tcpClient``! *
=``+ ,
new``- 0
	TcpClient``1 :
(``: ;
$str``; H
,``H I
$num``J N
)``N O
)``O P
{aa 
usingbb 
(bb 
StreamWriterbb '
writerbb( .
=bb/ 0
newbb1 4
StreamWriterbb5 A
(bbA B
	tcpClientbbB K
.bbK L
	GetStreambbL U
(bbU V
)bbV W
)bbW X
)bbX Y
{cc 
writeree 
.ee 
	WriteLineee (
(ee( )
dataee) -
)ee- .
;ee. /
}ff 
}gg 
}hh 
catchii 
(ii 
IOExceptionii 
exceptIOii '
)ii' (
{jj 
IOkk 
.kk 
Loggerkk 
.kk 
Logkk 
(kk 
NLogkk "
.kk" #
LogLevelkk# +
.kk+ ,
Warnkk, 0
,kk0 1
$strkk2 R
,kkR S
exceptIOkkT \
)kk\ ]
;kk] ^
}ll 
}mm 	
}nn 
privateqq 
voidqq 
GoodG2B2qq 
(qq 
)qq 
{rr 
stringss 
datass 
;ss 
iftt 

(tt 
$numtt 
==tt 
$numtt 
)tt 
{uu 	
dataww 
=ww 
$strww  
;ww  !
}xx 	
elseyy 
{zz 	
data}} 
=}} 
null}} 
;}} 
}~~ 	
if 

( 
$num 
== 
$num 
) 
{
ÄÄ 	
try
ÅÅ 
{
ÇÇ 
using
ÉÉ 
(
ÉÉ 
	TcpClient
ÉÉ  
	tcpClient
ÉÉ! *
=
ÉÉ+ ,
new
ÉÉ- 0
	TcpClient
ÉÉ1 :
(
ÉÉ: ;
$str
ÉÉ; H
,
ÉÉH I
$num
ÉÉJ N
)
ÉÉN O
)
ÉÉO P
{
ÑÑ 
using
ÖÖ 
(
ÖÖ 
StreamWriter
ÖÖ '
writer
ÖÖ( .
=
ÖÖ/ 0
new
ÖÖ1 4
StreamWriter
ÖÖ5 A
(
ÖÖA B
	tcpClient
ÖÖB K
.
ÖÖK L
	GetStream
ÖÖL U
(
ÖÖU V
)
ÖÖV W
)
ÖÖW X
)
ÖÖX Y
{
ÜÜ 
writer
àà 
.
àà 
	WriteLine
àà (
(
àà( )
data
àà) -
)
àà- .
;
àà. /
}
ââ 
}
ää 
}
ãã 
catch
åå 
(
åå 
IOException
åå 
exceptIO
åå '
)
åå' (
{
çç 
IO
éé 
.
éé 
Logger
éé 
.
éé 
Log
éé 
(
éé 
NLog
éé "
.
éé" #
LogLevel
éé# +
.
éé+ ,
Warn
éé, 0
,
éé0 1
$str
éé2 R
,
ééR S
exceptIO
ééT \
)
éé\ ]
;
éé] ^
}
èè 
}
êê 	
}
ëë 
private
îî 
void
îî 
GoodB2G1
îî 
(
îî 
)
îî 
{
ïï 
string
ññ 
data
ññ 
;
ññ 
if
óó 

(
óó 
$num
óó 
==
óó 
$num
óó 
)
óó 
{
òò 	
using
ôô 
(
ôô 
SecureString
ôô 
	securePwd
ôô  )
=
ôô* +
new
ôô, /
SecureString
ôô0 <
(
ôô< =
)
ôô= >
)
ôô> ?
{
öö 
for
õõ 
(
õõ 
int
õõ 
i
õõ 
=
õõ 
$num
õõ 
;
õõ 
i
õõ  !
<
õõ" #
$str
õõ$ /
.
õõ/ 0
Length
õõ0 6
;
õõ6 7
i
õõ8 9
++
õõ9 ;
)
õõ; <
{
úú 
	securePwd
ûû 
.
ûû 

AppendChar
ûû (
(
ûû( )
$str
ûû) 4
[
ûû4 5
i
ûû5 6
]
ûû6 7
)
ûû7 8
;
ûû8 9
}
üü 
data
¢¢ 
=
¢¢ 
	securePwd
¢¢  
.
¢¢  !
ToString
¢¢! )
(
¢¢) *
)
¢¢* +
;
¢¢+ ,
}
££ 
}
§§ 	
else
•• 
{
¶¶ 	
data
©© 
=
©© 
null
©© 
;
©© 
}
™™ 	
if
´´ 

(
´´ 
$num
´´ 
!=
´´ 
$num
´´ 
)
´´ 
{
¨¨ 	
IO
ÆÆ 
.
ÆÆ 
	WriteLine
ÆÆ 
(
ÆÆ 
$str
ÆÆ /
)
ÆÆ/ 0
;
ÆÆ0 1
}
ØØ 	
else
∞∞ 
{
±± 	
try
≤≤ 
{
≥≥ 
using
¥¥ 
(
¥¥ 
	TcpClient
¥¥  
client
¥¥! '
=
¥¥( )
new
¥¥* -
	TcpClient
¥¥. 7
(
¥¥7 8
$str
¥¥8 E
,
¥¥E F
$num
¥¥G K
)
¥¥K L
)
¥¥L M
{
µµ 
using
∂∂ 
(
∂∂ 
	SslStream
∂∂ $
	sslStream
∂∂% .
=
∂∂/ 0
new
∂∂1 4
	SslStream
∂∂5 >
(
∂∂> ?
client
∂∂? E
.
∂∂E F
	GetStream
∂∂F O
(
∂∂O P
)
∂∂P Q
)
∂∂Q R
)
∂∂R S
{
∑∑ 
	sslStream
ππ !
.
ππ! "
Write
ππ" '
(
ππ' (
Encoding
ππ( 0
.
ππ0 1
UTF8
ππ1 5
.
ππ5 6
GetBytes
ππ6 >
(
ππ> ?
data
ππ? C
)
ππC D
)
ππD E
;
ππE F
}
∫∫ 
}
ªª 
}
ºº 
catch
ΩΩ 
(
ΩΩ 
IOException
ΩΩ 
exceptIO
ΩΩ '
)
ΩΩ' (
{
ææ 
IO
øø 
.
øø 
Logger
øø 
.
øø 
Log
øø 
(
øø 
NLog
øø "
.
øø" #
LogLevel
øø# +
.
øø+ ,
Warn
øø, 0
,
øø0 1
$str
øø2 R
,
øøR S
exceptIO
øøT \
)
øø\ ]
;
øø] ^
}
¿¿ 
}
¡¡ 	
}
¬¬ 
private
≈≈ 
void
≈≈ 
GoodB2G2
≈≈ 
(
≈≈ 
)
≈≈ 
{
∆∆ 
string
«« 
data
«« 
;
«« 
if
»» 

(
»» 
$num
»» 
==
»» 
$num
»» 
)
»» 
{
…… 	
using
   
(
   
SecureString
   
	securePwd
    )
=
  * +
new
  , /
SecureString
  0 <
(
  < =
)
  = >
)
  > ?
{
ÀÀ 
for
ÃÃ 
(
ÃÃ 
int
ÃÃ 
i
ÃÃ 
=
ÃÃ 
$num
ÃÃ 
;
ÃÃ 
i
ÃÃ  !
<
ÃÃ" #
$str
ÃÃ$ /
.
ÃÃ/ 0
Length
ÃÃ0 6
;
ÃÃ6 7
i
ÃÃ8 9
++
ÃÃ9 ;
)
ÃÃ; <
{
ÕÕ 
	securePwd
œœ 
.
œœ 

AppendChar
œœ (
(
œœ( )
$str
œœ) 4
[
œœ4 5
i
œœ5 6
]
œœ6 7
)
œœ7 8
;
œœ8 9
}
–– 
data
”” 
=
”” 
	securePwd
””  
.
””  !
ToString
””! )
(
””) *
)
””* +
;
””+ ,
}
‘‘ 
}
’’ 	
else
÷÷ 
{
◊◊ 	
data
⁄⁄ 
=
⁄⁄ 
null
⁄⁄ 
;
⁄⁄ 
}
€€ 	
if
‹‹ 

(
‹‹ 
$num
‹‹ 
==
‹‹ 
$num
‹‹ 
)
‹‹ 
{
›› 	
try
ﬁﬁ 
{
ﬂﬂ 
using
‡‡ 
(
‡‡ 
	TcpClient
‡‡  
client
‡‡! '
=
‡‡( )
new
‡‡* -
	TcpClient
‡‡. 7
(
‡‡7 8
$str
‡‡8 E
,
‡‡E F
$num
‡‡G K
)
‡‡K L
)
‡‡L M
{
·· 
using
‚‚ 
(
‚‚ 
	SslStream
‚‚ $
	sslStream
‚‚% .
=
‚‚/ 0
new
‚‚1 4
	SslStream
‚‚5 >
(
‚‚> ?
client
‚‚? E
.
‚‚E F
	GetStream
‚‚F O
(
‚‚O P
)
‚‚P Q
)
‚‚Q R
)
‚‚R S
{
„„ 
	sslStream
ÂÂ !
.
ÂÂ! "
Write
ÂÂ" '
(
ÂÂ' (
Encoding
ÂÂ( 0
.
ÂÂ0 1
UTF8
ÂÂ1 5
.
ÂÂ5 6
GetBytes
ÂÂ6 >
(
ÂÂ> ?
data
ÂÂ? C
)
ÂÂC D
)
ÂÂD E
;
ÂÂE F
}
ÊÊ 
}
ÁÁ 
}
ËË 
catch
ÈÈ 
(
ÈÈ 
IOException
ÈÈ 
exceptIO
ÈÈ '
)
ÈÈ' (
{
ÍÍ 
IO
ÎÎ 
.
ÎÎ 
Logger
ÎÎ 
.
ÎÎ 
Log
ÎÎ 
(
ÎÎ 
NLog
ÎÎ "
.
ÎÎ" #
LogLevel
ÎÎ# +
.
ÎÎ+ ,
Warn
ÎÎ, 0
,
ÎÎ0 1
$str
ÎÎ2 R
,
ÎÎR S
exceptIO
ÎÎT \
)
ÎÎ\ ]
;
ÎÎ] ^
}
ÏÏ 
}
ÌÌ 	
}
ÓÓ 
public
 

override
 
void
 
Good
 
(
 
)
 
{
ÒÒ 
GoodG2B1
ÚÚ 
(
ÚÚ 
)
ÚÚ 
;
ÚÚ 
GoodG2B2
ÛÛ 
(
ÛÛ 
)
ÛÛ 
;
ÛÛ 
GoodB2G1
ÙÙ 
(
ÙÙ 
)
ÙÙ 
;
ÙÙ 
GoodB2G2
ıı 
(
ıı 
)
ıı 
;
ıı 
}
ˆˆ 
}¯¯ 
}˘˘ Äg
≠C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_04.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 7
+CWE319_Cleartext_Tx_Sensitive_Info__send_04 1
:2 3
AbstractTestCase4 D
{ 
private%% 
const%% 
bool%% 
PRIVATE_CONST_TRUE%% )
=%%* +
true%%, 0
;%%0 1
private&& 
const&& 
bool&& 
PRIVATE_CONST_FALSE&& *
=&&+ ,
false&&- 2
;&&2 3
public(( 

override(( 
void(( 
Bad(( 
((( 
)(( 
{)) 
string** 
data** 
;** 
if++ 

(++ 
PRIVATE_CONST_TRUE++ 
)++ 
{,, 	
using-- 
(-- 
SecureString-- 
	securePwd--  )
=--* +
new--, /
SecureString--0 <
(--< =
)--= >
)--> ?
{.. 
for// 
(// 
int// 
i// 
=// 
$num// 
;// 
i//  !
<//" #
$str//$ /
./// 0
Length//0 6
;//6 7
i//8 9
++//9 ;
)//; <
{00 
	securePwd22 
.22 

AppendChar22 (
(22( )
$str22) 4
[224 5
i225 6
]226 7
)227 8
;228 9
}33 
data66 
=66 
	securePwd66  
.66  !
ToString66! )
(66) *
)66* +
;66+ ,
}77 
}88 	
else99 
{:: 	
data== 
=== 
null== 
;== 
}>> 	
if?? 

(?? 
PRIVATE_CONST_TRUE?? 
)?? 
{@@ 	
tryAA 
{BB 
usingCC 
(CC 
	TcpClientCC  
	tcpClientCC! *
=CC+ ,
newCC- 0
	TcpClientCC1 :
(CC: ;
$strCC; H
,CCH I
$numCCJ N
)CCN O
)CCO P
{DD 
usingEE 
(EE 
StreamWriterEE '
writerEE( .
=EE/ 0
newEE1 4
StreamWriterEE5 A
(EEA B
	tcpClientEEB K
.EEK L
	GetStreamEEL U
(EEU V
)EEV W
)EEW X
)EEX Y
{FF 
writerHH 
.HH 
	WriteLineHH (
(HH( )
dataHH) -
)HH- .
;HH. /
}II 
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL 
exceptIOLL '
)LL' (
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN 
(NN 
NLogNN "
.NN" #
LogLevelNN# +
.NN+ ,
WarnNN, 0
,NN0 1
$strNN2 R
,NNR S
exceptIONNT \
)NN\ ]
;NN] ^
}OO 
}PP 	
}QQ 
privateUU 
voidUU 
GoodG2B1UU 
(UU 
)UU 
{VV 
stringWW 
dataWW 
;WW 
ifXX 

(XX 
PRIVATE_CONST_FALSEXX 
)XX  
{YY 	
data\\ 
=\\ 
null\\ 
;\\ 
}]] 	
else^^ 
{__ 	
dataaa 
=aa 
$straa  
;aa  !
}bb 	
ifcc 

(cc 
PRIVATE_CONST_TRUEcc 
)cc 
{dd 	
tryee 
{ff 
usinggg 
(gg 
	TcpClientgg  
	tcpClientgg! *
=gg+ ,
newgg- 0
	TcpClientgg1 :
(gg: ;
$strgg; H
,ggH I
$numggJ N
)ggN O
)ggO P
{hh 
usingii 
(ii 
StreamWriterii '
writerii( .
=ii/ 0
newii1 4
StreamWriterii5 A
(iiA B
	tcpClientiiB K
.iiK L
	GetStreamiiL U
(iiU V
)iiV W
)iiW X
)iiX Y
{jj 
writerll 
.ll 
	WriteLinell (
(ll( )
datall) -
)ll- .
;ll. /
}mm 
}nn 
}oo 
catchpp 
(pp 
IOExceptionpp 
exceptIOpp '
)pp' (
{qq 
IOrr 
.rr 
Loggerrr 
.rr 
Logrr 
(rr 
NLogrr "
.rr" #
LogLevelrr# +
.rr+ ,
Warnrr, 0
,rr0 1
$strrr2 R
,rrR S
exceptIOrrT \
)rr\ ]
;rr] ^
}ss 
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
)xx 
{yy 
stringzz 
datazz 
;zz 
if{{ 

({{ 
PRIVATE_CONST_TRUE{{ 
){{ 
{|| 	
data~~ 
=~~ 
$str~~  
;~~  !
} 	
else
ÄÄ 
{
ÅÅ 	
data
ÑÑ 
=
ÑÑ 
null
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
if
ÜÜ 

(
ÜÜ  
PRIVATE_CONST_TRUE
ÜÜ 
)
ÜÜ 
{
áá 	
try
àà 
{
ââ 
using
ää 
(
ää 
	TcpClient
ää  
	tcpClient
ää! *
=
ää+ ,
new
ää- 0
	TcpClient
ää1 :
(
ää: ;
$str
ää; H
,
ääH I
$num
ääJ N
)
ääN O
)
ääO P
{
ãã 
using
åå 
(
åå 
StreamWriter
åå '
writer
åå( .
=
åå/ 0
new
åå1 4
StreamWriter
åå5 A
(
ååA B
	tcpClient
ååB K
.
ååK L
	GetStream
ååL U
(
ååU V
)
ååV W
)
ååW X
)
ååX Y
{
çç 
writer
èè 
.
èè 
	WriteLine
èè (
(
èè( )
data
èè) -
)
èè- .
;
èè. /
}
êê 
}
ëë 
}
íí 
catch
ìì 
(
ìì 
IOException
ìì 
exceptIO
ìì '
)
ìì' (
{
îî 
IO
ïï 
.
ïï 
Logger
ïï 
.
ïï 
Log
ïï 
(
ïï 
NLog
ïï "
.
ïï" #
LogLevel
ïï# +
.
ïï+ ,
Warn
ïï, 0
,
ïï0 1
$str
ïï2 R
,
ïïR S
exceptIO
ïïT \
)
ïï\ ]
;
ïï] ^
}
ññ 
}
óó 	
}
òò 
private
õõ 
void
õõ 
GoodB2G1
õõ 
(
õõ 
)
õõ 
{
úú 
string
ùù 
data
ùù 
;
ùù 
if
ûû 

(
ûû  
PRIVATE_CONST_TRUE
ûû 
)
ûû 
{
üü 	
using
†† 
(
†† 
SecureString
†† 
	securePwd
††  )
=
††* +
new
††, /
SecureString
††0 <
(
††< =
)
††= >
)
††> ?
{
°° 
for
¢¢ 
(
¢¢ 
int
¢¢ 
i
¢¢ 
=
¢¢ 
$num
¢¢ 
;
¢¢ 
i
¢¢  !
<
¢¢" #
$str
¢¢$ /
.
¢¢/ 0
Length
¢¢0 6
;
¢¢6 7
i
¢¢8 9
++
¢¢9 ;
)
¢¢; <
{
££ 
	securePwd
•• 
.
•• 

AppendChar
•• (
(
••( )
$str
••) 4
[
••4 5
i
••5 6
]
••6 7
)
••7 8
;
••8 9
}
¶¶ 
data
©© 
=
©© 
	securePwd
©©  
.
©©  !
ToString
©©! )
(
©©) *
)
©©* +
;
©©+ ,
}
™™ 
}
´´ 	
else
¨¨ 
{
≠≠ 	
data
∞∞ 
=
∞∞ 
null
∞∞ 
;
∞∞ 
}
±± 	
if
≤≤ 

(
≤≤ !
PRIVATE_CONST_FALSE
≤≤ 
)
≤≤  
{
≥≥ 	
IO
µµ 
.
µµ 
	WriteLine
µµ 
(
µµ 
$str
µµ /
)
µµ/ 0
;
µµ0 1
}
∂∂ 	
else
∑∑ 
{
∏∏ 	
try
ππ 
{
∫∫ 
using
ªª 
(
ªª 
	TcpClient
ªª  
client
ªª! '
=
ªª( )
new
ªª* -
	TcpClient
ªª. 7
(
ªª7 8
$str
ªª8 E
,
ªªE F
$num
ªªG K
)
ªªK L
)
ªªL M
{
ºº 
using
ΩΩ 
(
ΩΩ 
	SslStream
ΩΩ $
	sslStream
ΩΩ% .
=
ΩΩ/ 0
new
ΩΩ1 4
	SslStream
ΩΩ5 >
(
ΩΩ> ?
client
ΩΩ? E
.
ΩΩE F
	GetStream
ΩΩF O
(
ΩΩO P
)
ΩΩP Q
)
ΩΩQ R
)
ΩΩR S
{
ææ 
	sslStream
¿¿ !
.
¿¿! "
Write
¿¿" '
(
¿¿' (
Encoding
¿¿( 0
.
¿¿0 1
UTF8
¿¿1 5
.
¿¿5 6
GetBytes
¿¿6 >
(
¿¿> ?
data
¿¿? C
)
¿¿C D
)
¿¿D E
;
¿¿E F
}
¡¡ 
}
¬¬ 
}
√√ 
catch
ƒƒ 
(
ƒƒ 
IOException
ƒƒ 
exceptIO
ƒƒ '
)
ƒƒ' (
{
≈≈ 
IO
∆∆ 
.
∆∆ 
Logger
∆∆ 
.
∆∆ 
Log
∆∆ 
(
∆∆ 
NLog
∆∆ "
.
∆∆" #
LogLevel
∆∆# +
.
∆∆+ ,
Warn
∆∆, 0
,
∆∆0 1
$str
∆∆2 R
,
∆∆R S
exceptIO
∆∆T \
)
∆∆\ ]
;
∆∆] ^
}
«« 
}
»» 	
}
…… 
private
ÃÃ 
void
ÃÃ 
GoodB2G2
ÃÃ 
(
ÃÃ 
)
ÃÃ 
{
ÕÕ 
string
ŒŒ 
data
ŒŒ 
;
ŒŒ 
if
œœ 

(
œœ  
PRIVATE_CONST_TRUE
œœ 
)
œœ 
{
–– 	
using
—— 
(
—— 
SecureString
—— 
	securePwd
——  )
=
——* +
new
——, /
SecureString
——0 <
(
——< =
)
——= >
)
——> ?
{
““ 
for
”” 
(
”” 
int
”” 
i
”” 
=
”” 
$num
”” 
;
”” 
i
””  !
<
””" #
$str
””$ /
.
””/ 0
Length
””0 6
;
””6 7
i
””8 9
++
””9 ;
)
””; <
{
‘‘ 
	securePwd
÷÷ 
.
÷÷ 

AppendChar
÷÷ (
(
÷÷( )
$str
÷÷) 4
[
÷÷4 5
i
÷÷5 6
]
÷÷6 7
)
÷÷7 8
;
÷÷8 9
}
◊◊ 
data
⁄⁄ 
=
⁄⁄ 
	securePwd
⁄⁄  
.
⁄⁄  !
ToString
⁄⁄! )
(
⁄⁄) *
)
⁄⁄* +
;
⁄⁄+ ,
}
€€ 
}
‹‹ 	
else
›› 
{
ﬁﬁ 	
data
·· 
=
·· 
null
·· 
;
·· 
}
‚‚ 	
if
„„ 

(
„„  
PRIVATE_CONST_TRUE
„„ 
)
„„ 
{
‰‰ 	
try
ÂÂ 
{
ÊÊ 
using
ÁÁ 
(
ÁÁ 
	TcpClient
ÁÁ  
client
ÁÁ! '
=
ÁÁ( )
new
ÁÁ* -
	TcpClient
ÁÁ. 7
(
ÁÁ7 8
$str
ÁÁ8 E
,
ÁÁE F
$num
ÁÁG K
)
ÁÁK L
)
ÁÁL M
{
ËË 
using
ÈÈ 
(
ÈÈ 
	SslStream
ÈÈ $
	sslStream
ÈÈ% .
=
ÈÈ/ 0
new
ÈÈ1 4
	SslStream
ÈÈ5 >
(
ÈÈ> ?
client
ÈÈ? E
.
ÈÈE F
	GetStream
ÈÈF O
(
ÈÈO P
)
ÈÈP Q
)
ÈÈQ R
)
ÈÈR S
{
ÍÍ 
	sslStream
ÏÏ !
.
ÏÏ! "
Write
ÏÏ" '
(
ÏÏ' (
Encoding
ÏÏ( 0
.
ÏÏ0 1
UTF8
ÏÏ1 5
.
ÏÏ5 6
GetBytes
ÏÏ6 >
(
ÏÏ> ?
data
ÏÏ? C
)
ÏÏC D
)
ÏÏD E
;
ÏÏE F
}
ÌÌ 
}
ÓÓ 
}
ÔÔ 
catch
 
(
 
IOException
 
exceptIO
 '
)
' (
{
ÒÒ 
IO
ÚÚ 
.
ÚÚ 
Logger
ÚÚ 
.
ÚÚ 
Log
ÚÚ 
(
ÚÚ 
NLog
ÚÚ "
.
ÚÚ" #
LogLevel
ÚÚ# +
.
ÚÚ+ ,
Warn
ÚÚ, 0
,
ÚÚ0 1
$str
ÚÚ2 R
,
ÚÚR S
exceptIO
ÚÚT \
)
ÚÚ\ ]
;
ÚÚ] ^
}
ÛÛ 
}
ÙÙ 	
}
ıı 
public
˜˜ 

override
˜˜ 
void
˜˜ 
Good
˜˜ 
(
˜˜ 
)
˜˜ 
{
¯¯ 
GoodG2B1
˘˘ 
(
˘˘ 
)
˘˘ 
;
˘˘ 
GoodG2B2
˙˙ 
(
˙˙ 
)
˙˙ 
;
˙˙ 
GoodB2G1
˚˚ 
(
˚˚ 
)
˚˚ 
;
˚˚ 
GoodB2G2
¸¸ 
(
¸¸ 
)
¸¸ 
;
¸¸ 
}
˝˝ 
}ˇˇ 
}ÄÄ Ñf
≠C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_05.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 7
+CWE319_Cleartext_Tx_Sensitive_Info__send_05 1
:2 3
AbstractTestCase4 D
{ 
private$$ 
bool$$ 
privateTrue$$ 
=$$ 
true$$ #
;$$# $
private%% 
bool%% 
privateFalse%% 
=%% 
false%%  %
;%%% &
public'' 

override'' 
void'' 
Bad'' 
('' 
)'' 
{(( 
string)) 
data)) 
;)) 
if** 

(** 
privateTrue** 
)** 
{++ 	
using,, 
(,, 
SecureString,, 
	securePwd,,  )
=,,* +
new,,, /
SecureString,,0 <
(,,< =
),,= >
),,> ?
{-- 
for.. 
(.. 
int.. 
i.. 
=.. 
$num.. 
;.. 
i..  !
<.." #
$str..$ /
.../ 0
Length..0 6
;..6 7
i..8 9
++..9 ;
)..; <
{// 
	securePwd11 
.11 

AppendChar11 (
(11( )
$str11) 4
[114 5
i115 6
]116 7
)117 8
;118 9
}22 
data55 
=55 
	securePwd55  
.55  !
ToString55! )
(55) *
)55* +
;55+ ,
}66 
}77 	
else88 
{99 	
data<< 
=<< 
null<< 
;<< 
}== 	
if>> 

(>> 
privateTrue>> 
)>> 
{?? 	
try@@ 
{AA 
usingBB 
(BB 
	TcpClientBB  
	tcpClientBB! *
=BB+ ,
newBB- 0
	TcpClientBB1 :
(BB: ;
$strBB; H
,BBH I
$numBBJ N
)BBN O
)BBO P
{CC 
usingDD 
(DD 
StreamWriterDD '
writerDD( .
=DD/ 0
newDD1 4
StreamWriterDD5 A
(DDA B
	tcpClientDDB K
.DDK L
	GetStreamDDL U
(DDU V
)DDV W
)DDW X
)DDX Y
{EE 
writerGG 
.GG 
	WriteLineGG (
(GG( )
dataGG) -
)GG- .
;GG. /
}HH 
}II 
}JJ 
catchKK 
(KK 
IOExceptionKK 
exceptIOKK '
)KK' (
{LL 
IOMM 
.MM 
LoggerMM 
.MM 
LogMM 
(MM 
NLogMM "
.MM" #
LogLevelMM# +
.MM+ ,
WarnMM, 0
,MM0 1
$strMM2 R
,MMR S
exceptIOMMT \
)MM\ ]
;MM] ^
}NN 
}OO 	
}PP 
privateTT 
voidTT 
GoodG2B1TT 
(TT 
)TT 
{UU 
stringVV 
dataVV 
;VV 
ifWW 

(WW 
privateFalseWW 
)WW 
{XX 	
data[[ 
=[[ 
null[[ 
;[[ 
}\\ 	
else]] 
{^^ 	
data`` 
=`` 
$str``  
;``  !
}aa 	
ifbb 

(bb 
privateTruebb 
)bb 
{cc 	
trydd 
{ee 
usingff 
(ff 
	TcpClientff  
	tcpClientff! *
=ff+ ,
newff- 0
	TcpClientff1 :
(ff: ;
$strff; H
,ffH I
$numffJ N
)ffN O
)ffO P
{gg 
usinghh 
(hh 
StreamWriterhh '
writerhh( .
=hh/ 0
newhh1 4
StreamWriterhh5 A
(hhA B
	tcpClienthhB K
.hhK L
	GetStreamhhL U
(hhU V
)hhV W
)hhW X
)hhX Y
{ii 
writerkk 
.kk 
	WriteLinekk (
(kk( )
datakk) -
)kk- .
;kk. /
}ll 
}mm 
}nn 
catchoo 
(oo 
IOExceptionoo 
exceptIOoo '
)oo' (
{pp 
IOqq 
.qq 
Loggerqq 
.qq 
Logqq 
(qq 
NLogqq "
.qq" #
LogLevelqq# +
.qq+ ,
Warnqq, 0
,qq0 1
$strqq2 R
,qqR S
exceptIOqqT \
)qq\ ]
;qq] ^
}rr 
}ss 	
}tt 
privateww 
voidww 
GoodG2B2ww 
(ww 
)ww 
{xx 
stringyy 
datayy 
;yy 
ifzz 

(zz 
privateTruezz 
)zz 
{{{ 	
data}} 
=}} 
$str}}  
;}}  !
}~~ 	
else 
{
ÄÄ 	
data
ÉÉ 
=
ÉÉ 
null
ÉÉ 
;
ÉÉ 
}
ÑÑ 	
if
ÖÖ 

(
ÖÖ 
privateTrue
ÖÖ 
)
ÖÖ 
{
ÜÜ 	
try
áá 
{
àà 
using
ââ 
(
ââ 
	TcpClient
ââ  
	tcpClient
ââ! *
=
ââ+ ,
new
ââ- 0
	TcpClient
ââ1 :
(
ââ: ;
$str
ââ; H
,
ââH I
$num
ââJ N
)
ââN O
)
ââO P
{
ää 
using
ãã 
(
ãã 
StreamWriter
ãã '
writer
ãã( .
=
ãã/ 0
new
ãã1 4
StreamWriter
ãã5 A
(
ããA B
	tcpClient
ããB K
.
ããK L
	GetStream
ããL U
(
ããU V
)
ããV W
)
ããW X
)
ããX Y
{
åå 
writer
éé 
.
éé 
	WriteLine
éé (
(
éé( )
data
éé) -
)
éé- .
;
éé. /
}
èè 
}
êê 
}
ëë 
catch
íí 
(
íí 
IOException
íí 
exceptIO
íí '
)
íí' (
{
ìì 
IO
îî 
.
îî 
Logger
îî 
.
îî 
Log
îî 
(
îî 
NLog
îî "
.
îî" #
LogLevel
îî# +
.
îî+ ,
Warn
îî, 0
,
îî0 1
$str
îî2 R
,
îîR S
exceptIO
îîT \
)
îî\ ]
;
îî] ^
}
ïï 
}
ññ 	
}
óó 
private
öö 
void
öö 
GoodB2G1
öö 
(
öö 
)
öö 
{
õõ 
string
úú 
data
úú 
;
úú 
if
ùù 

(
ùù 
privateTrue
ùù 
)
ùù 
{
ûû 	
using
üü 
(
üü 
SecureString
üü 
	securePwd
üü  )
=
üü* +
new
üü, /
SecureString
üü0 <
(
üü< =
)
üü= >
)
üü> ?
{
†† 
for
°° 
(
°° 
int
°° 
i
°° 
=
°° 
$num
°° 
;
°° 
i
°°  !
<
°°" #
$str
°°$ /
.
°°/ 0
Length
°°0 6
;
°°6 7
i
°°8 9
++
°°9 ;
)
°°; <
{
¢¢ 
	securePwd
§§ 
.
§§ 

AppendChar
§§ (
(
§§( )
$str
§§) 4
[
§§4 5
i
§§5 6
]
§§6 7
)
§§7 8
;
§§8 9
}
•• 
data
®® 
=
®® 
	securePwd
®®  
.
®®  !
ToString
®®! )
(
®®) *
)
®®* +
;
®®+ ,
}
©© 
}
™™ 	
else
´´ 
{
¨¨ 	
data
ØØ 
=
ØØ 
null
ØØ 
;
ØØ 
}
∞∞ 	
if
±± 

(
±± 
privateFalse
±± 
)
±± 
{
≤≤ 	
IO
¥¥ 
.
¥¥ 
	WriteLine
¥¥ 
(
¥¥ 
$str
¥¥ /
)
¥¥/ 0
;
¥¥0 1
}
µµ 	
else
∂∂ 
{
∑∑ 	
try
∏∏ 
{
ππ 
using
∫∫ 
(
∫∫ 
	TcpClient
∫∫  
client
∫∫! '
=
∫∫( )
new
∫∫* -
	TcpClient
∫∫. 7
(
∫∫7 8
$str
∫∫8 E
,
∫∫E F
$num
∫∫G K
)
∫∫K L
)
∫∫L M
{
ªª 
using
ºº 
(
ºº 
	SslStream
ºº $
	sslStream
ºº% .
=
ºº/ 0
new
ºº1 4
	SslStream
ºº5 >
(
ºº> ?
client
ºº? E
.
ººE F
	GetStream
ººF O
(
ººO P
)
ººP Q
)
ººQ R
)
ººR S
{
ΩΩ 
	sslStream
øø !
.
øø! "
Write
øø" '
(
øø' (
Encoding
øø( 0
.
øø0 1
UTF8
øø1 5
.
øø5 6
GetBytes
øø6 >
(
øø> ?
data
øø? C
)
øøC D
)
øøD E
;
øøE F
}
¿¿ 
}
¡¡ 
}
¬¬ 
catch
√√ 
(
√√ 
IOException
√√ 
exceptIO
√√ '
)
√√' (
{
ƒƒ 
IO
≈≈ 
.
≈≈ 
Logger
≈≈ 
.
≈≈ 
Log
≈≈ 
(
≈≈ 
NLog
≈≈ "
.
≈≈" #
LogLevel
≈≈# +
.
≈≈+ ,
Warn
≈≈, 0
,
≈≈0 1
$str
≈≈2 R
,
≈≈R S
exceptIO
≈≈T \
)
≈≈\ ]
;
≈≈] ^
}
∆∆ 
}
«« 	
}
»» 
private
ÀÀ 
void
ÀÀ 
GoodB2G2
ÀÀ 
(
ÀÀ 
)
ÀÀ 
{
ÃÃ 
string
ÕÕ 
data
ÕÕ 
;
ÕÕ 
if
ŒŒ 

(
ŒŒ 
privateTrue
ŒŒ 
)
ŒŒ 
{
œœ 	
using
–– 
(
–– 
SecureString
–– 
	securePwd
––  )
=
––* +
new
––, /
SecureString
––0 <
(
––< =
)
––= >
)
––> ?
{
—— 
for
““ 
(
““ 
int
““ 
i
““ 
=
““ 
$num
““ 
;
““ 
i
““  !
<
““" #
$str
““$ /
.
““/ 0
Length
““0 6
;
““6 7
i
““8 9
++
““9 ;
)
““; <
{
”” 
	securePwd
’’ 
.
’’ 

AppendChar
’’ (
(
’’( )
$str
’’) 4
[
’’4 5
i
’’5 6
]
’’6 7
)
’’7 8
;
’’8 9
}
÷÷ 
data
ŸŸ 
=
ŸŸ 
	securePwd
ŸŸ  
.
ŸŸ  !
ToString
ŸŸ! )
(
ŸŸ) *
)
ŸŸ* +
;
ŸŸ+ ,
}
⁄⁄ 
}
€€ 	
else
‹‹ 
{
›› 	
data
‡‡ 
=
‡‡ 
null
‡‡ 
;
‡‡ 
}
·· 	
if
‚‚ 

(
‚‚ 
privateTrue
‚‚ 
)
‚‚ 
{
„„ 	
try
‰‰ 
{
ÂÂ 
using
ÊÊ 
(
ÊÊ 
	TcpClient
ÊÊ  
client
ÊÊ! '
=
ÊÊ( )
new
ÊÊ* -
	TcpClient
ÊÊ. 7
(
ÊÊ7 8
$str
ÊÊ8 E
,
ÊÊE F
$num
ÊÊG K
)
ÊÊK L
)
ÊÊL M
{
ÁÁ 
using
ËË 
(
ËË 
	SslStream
ËË $
	sslStream
ËË% .
=
ËË/ 0
new
ËË1 4
	SslStream
ËË5 >
(
ËË> ?
client
ËË? E
.
ËËE F
	GetStream
ËËF O
(
ËËO P
)
ËËP Q
)
ËËQ R
)
ËËR S
{
ÈÈ 
	sslStream
ÎÎ !
.
ÎÎ! "
Write
ÎÎ" '
(
ÎÎ' (
Encoding
ÎÎ( 0
.
ÎÎ0 1
UTF8
ÎÎ1 5
.
ÎÎ5 6
GetBytes
ÎÎ6 >
(
ÎÎ> ?
data
ÎÎ? C
)
ÎÎC D
)
ÎÎD E
;
ÎÎE F
}
ÏÏ 
}
ÌÌ 
}
ÓÓ 
catch
ÔÔ 
(
ÔÔ 
IOException
ÔÔ 
exceptIO
ÔÔ '
)
ÔÔ' (
{
 
IO
ÒÒ 
.
ÒÒ 
Logger
ÒÒ 
.
ÒÒ 
Log
ÒÒ 
(
ÒÒ 
NLog
ÒÒ "
.
ÒÒ" #
LogLevel
ÒÒ# +
.
ÒÒ+ ,
Warn
ÒÒ, 0
,
ÒÒ0 1
$str
ÒÒ2 R
,
ÒÒR S
exceptIO
ÒÒT \
)
ÒÒ\ ]
;
ÒÒ] ^
}
ÚÚ 
}
ÛÛ 	
}
ÙÙ 
public
ˆˆ 

override
ˆˆ 
void
ˆˆ 
Good
ˆˆ 
(
ˆˆ 
)
ˆˆ 
{
˜˜ 
GoodG2B1
¯¯ 
(
¯¯ 
)
¯¯ 
;
¯¯ 
GoodG2B2
˘˘ 
(
˘˘ 
)
˘˘ 
;
˘˘ 
GoodB2G1
˙˙ 
(
˙˙ 
)
˙˙ 
;
˙˙ 
GoodB2G2
˚˚ 
(
˚˚ 
)
˚˚ 
;
˚˚ 
}
¸¸ 
}˛˛ 
}ˇˇ ’h
≠C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_06.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 7
+CWE319_Cleartext_Tx_Sensitive_Info__send_06 1
:2 3
AbstractTestCase4 D
{ 
private$$ 
const$$ 
int$$ 
PRIVATE_CONST_FIVE$$ (
=$$) *
$num$$+ ,
;$$, -
public&& 

override&& 
void&& 
Bad&& 
(&& 
)&& 
{'' 
string(( 
data(( 
;(( 
if)) 

()) 
PRIVATE_CONST_FIVE)) 
==))  
$num))  !
)))! "
{** 	
using++ 
(++ 
SecureString++ 
	securePwd++  )
=++* +
new++, /
SecureString++0 <
(++< =
)++= >
)++> ?
{,, 
for-- 
(-- 
int-- 
i-- 
=-- 
$num-- 
;-- 
i--  !
<--" #
$str--$ /
.--/ 0
Length--0 6
;--6 7
i--8 9
++--9 ;
)--; <
{.. 
	securePwd00 
.00 

AppendChar00 (
(00( )
$str00) 4
[004 5
i005 6
]006 7
)007 8
;008 9
}11 
data44 
=44 
	securePwd44  
.44  !
ToString44! )
(44) *
)44* +
;44+ ,
}55 
}66 	
else77 
{88 	
data;; 
=;; 
null;; 
;;; 
}<< 	
if== 

(== 
PRIVATE_CONST_FIVE== 
====  
$num==  !
)==! "
{>> 	
try?? 
{@@ 
usingAA 
(AA 
	TcpClientAA  
	tcpClientAA! *
=AA+ ,
newAA- 0
	TcpClientAA1 :
(AA: ;
$strAA; H
,AAH I
$numAAJ N
)AAN O
)AAO P
{BB 
usingCC 
(CC 
StreamWriterCC '
writerCC( .
=CC/ 0
newCC1 4
StreamWriterCC5 A
(CCA B
	tcpClientCCB K
.CCK L
	GetStreamCCL U
(CCU V
)CCV W
)CCW X
)CCX Y
{DD 
writerFF 
.FF 
	WriteLineFF (
(FF( )
dataFF) -
)FF- .
;FF. /
}GG 
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ 
exceptIOJJ '
)JJ' (
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL 
(LL 
NLogLL "
.LL" #
LogLevelLL# +
.LL+ ,
WarnLL, 0
,LL0 1
$strLL2 R
,LLR S
exceptIOLLT \
)LL\ ]
;LL] ^
}MM 
}NN 	
}OO 
privateSS 
voidSS 
GoodG2B1SS 
(SS 
)SS 
{TT 
stringUU 
dataUU 
;UU 
ifVV 

(VV 
PRIVATE_CONST_FIVEVV 
!=VV  
$numVV  !
)VV! "
{WW 	
dataZZ 
=ZZ 
nullZZ 
;ZZ 
}[[ 	
else\\ 
{]] 	
data__ 
=__ 
$str__  
;__  !
}`` 	
ifaa 

(aa 
PRIVATE_CONST_FIVEaa 
==aa  
$numaa  !
)aa! "
{bb 	
trycc 
{dd 
usingee 
(ee 
	TcpClientee  
	tcpClientee! *
=ee+ ,
newee- 0
	TcpClientee1 :
(ee: ;
$stree; H
,eeH I
$numeeJ N
)eeN O
)eeO P
{ff 
usinggg 
(gg 
StreamWritergg '
writergg( .
=gg/ 0
newgg1 4
StreamWritergg5 A
(ggA B
	tcpClientggB K
.ggK L
	GetStreamggL U
(ggU V
)ggV W
)ggW X
)ggX Y
{hh 
writerjj 
.jj 
	WriteLinejj (
(jj( )
datajj) -
)jj- .
;jj. /
}kk 
}ll 
}mm 
catchnn 
(nn 
IOExceptionnn 
exceptIOnn '
)nn' (
{oo 
IOpp 
.pp 
Loggerpp 
.pp 
Logpp 
(pp 
NLogpp "
.pp" #
LogLevelpp# +
.pp+ ,
Warnpp, 0
,pp0 1
$strpp2 R
,ppR S
exceptIOppT \
)pp\ ]
;pp] ^
}qq 
}rr 	
}ss 
privatevv 
voidvv 
GoodG2B2vv 
(vv 
)vv 
{ww 
stringxx 
dataxx 
;xx 
ifyy 

(yy 
PRIVATE_CONST_FIVEyy 
==yy  
$numyy  !
)yy! "
{zz 	
data|| 
=|| 
$str||  
;||  !
}}} 	
else~~ 
{ 	
data
ÇÇ 
=
ÇÇ 
null
ÇÇ 
;
ÇÇ 
}
ÉÉ 	
if
ÑÑ 

(
ÑÑ  
PRIVATE_CONST_FIVE
ÑÑ 
==
ÑÑ  
$num
ÑÑ  !
)
ÑÑ! "
{
ÖÖ 	
try
ÜÜ 
{
áá 
using
àà 
(
àà 
	TcpClient
àà  
	tcpClient
àà! *
=
àà+ ,
new
àà- 0
	TcpClient
àà1 :
(
àà: ;
$str
àà; H
,
ààH I
$num
ààJ N
)
ààN O
)
ààO P
{
ââ 
using
ää 
(
ää 
StreamWriter
ää '
writer
ää( .
=
ää/ 0
new
ää1 4
StreamWriter
ää5 A
(
ääA B
	tcpClient
ääB K
.
ääK L
	GetStream
ääL U
(
ääU V
)
ääV W
)
ääW X
)
ääX Y
{
ãã 
writer
çç 
.
çç 
	WriteLine
çç (
(
çç( )
data
çç) -
)
çç- .
;
çç. /
}
éé 
}
èè 
}
êê 
catch
ëë 
(
ëë 
IOException
ëë 
exceptIO
ëë '
)
ëë' (
{
íí 
IO
ìì 
.
ìì 
Logger
ìì 
.
ìì 
Log
ìì 
(
ìì 
NLog
ìì "
.
ìì" #
LogLevel
ìì# +
.
ìì+ ,
Warn
ìì, 0
,
ìì0 1
$str
ìì2 R
,
ììR S
exceptIO
ììT \
)
ìì\ ]
;
ìì] ^
}
îî 
}
ïï 	
}
ññ 
private
ôô 
void
ôô 
GoodB2G1
ôô 
(
ôô 
)
ôô 
{
öö 
string
õõ 
data
õõ 
;
õõ 
if
úú 

(
úú  
PRIVATE_CONST_FIVE
úú 
==
úú  
$num
úú  !
)
úú! "
{
ùù 	
using
ûû 
(
ûû 
SecureString
ûû 
	securePwd
ûû  )
=
ûû* +
new
ûû, /
SecureString
ûû0 <
(
ûû< =
)
ûû= >
)
ûû> ?
{
üü 
for
†† 
(
†† 
int
†† 
i
†† 
=
†† 
$num
†† 
;
†† 
i
††  !
<
††" #
$str
††$ /
.
††/ 0
Length
††0 6
;
††6 7
i
††8 9
++
††9 ;
)
††; <
{
°° 
	securePwd
££ 
.
££ 

AppendChar
££ (
(
££( )
$str
££) 4
[
££4 5
i
££5 6
]
££6 7
)
££7 8
;
££8 9
}
§§ 
data
ßß 
=
ßß 
	securePwd
ßß  
.
ßß  !
ToString
ßß! )
(
ßß) *
)
ßß* +
;
ßß+ ,
}
®® 
}
©© 	
else
™™ 
{
´´ 	
data
ÆÆ 
=
ÆÆ 
null
ÆÆ 
;
ÆÆ 
}
ØØ 	
if
∞∞ 

(
∞∞  
PRIVATE_CONST_FIVE
∞∞ 
!=
∞∞  
$num
∞∞  !
)
∞∞! "
{
±± 	
IO
≥≥ 
.
≥≥ 
	WriteLine
≥≥ 
(
≥≥ 
$str
≥≥ /
)
≥≥/ 0
;
≥≥0 1
}
¥¥ 	
else
µµ 
{
∂∂ 	
try
∑∑ 
{
∏∏ 
using
ππ 
(
ππ 
	TcpClient
ππ  
client
ππ! '
=
ππ( )
new
ππ* -
	TcpClient
ππ. 7
(
ππ7 8
$str
ππ8 E
,
ππE F
$num
ππG K
)
ππK L
)
ππL M
{
∫∫ 
using
ªª 
(
ªª 
	SslStream
ªª $
	sslStream
ªª% .
=
ªª/ 0
new
ªª1 4
	SslStream
ªª5 >
(
ªª> ?
client
ªª? E
.
ªªE F
	GetStream
ªªF O
(
ªªO P
)
ªªP Q
)
ªªQ R
)
ªªR S
{
ºº 
	sslStream
ææ !
.
ææ! "
Write
ææ" '
(
ææ' (
Encoding
ææ( 0
.
ææ0 1
UTF8
ææ1 5
.
ææ5 6
GetBytes
ææ6 >
(
ææ> ?
data
ææ? C
)
ææC D
)
ææD E
;
ææE F
}
øø 
}
¿¿ 
}
¡¡ 
catch
¬¬ 
(
¬¬ 
IOException
¬¬ 
exceptIO
¬¬ '
)
¬¬' (
{
√√ 
IO
ƒƒ 
.
ƒƒ 
Logger
ƒƒ 
.
ƒƒ 
Log
ƒƒ 
(
ƒƒ 
NLog
ƒƒ "
.
ƒƒ" #
LogLevel
ƒƒ# +
.
ƒƒ+ ,
Warn
ƒƒ, 0
,
ƒƒ0 1
$str
ƒƒ2 R
,
ƒƒR S
exceptIO
ƒƒT \
)
ƒƒ\ ]
;
ƒƒ] ^
}
≈≈ 
}
∆∆ 	
}
«« 
private
   
void
   
GoodB2G2
   
(
   
)
   
{
ÀÀ 
string
ÃÃ 
data
ÃÃ 
;
ÃÃ 
if
ÕÕ 

(
ÕÕ  
PRIVATE_CONST_FIVE
ÕÕ 
==
ÕÕ  
$num
ÕÕ  !
)
ÕÕ! "
{
ŒŒ 	
using
œœ 
(
œœ 
SecureString
œœ 
	securePwd
œœ  )
=
œœ* +
new
œœ, /
SecureString
œœ0 <
(
œœ< =
)
œœ= >
)
œœ> ?
{
–– 
for
—— 
(
—— 
int
—— 
i
—— 
=
—— 
$num
—— 
;
—— 
i
——  !
<
——" #
$str
——$ /
.
——/ 0
Length
——0 6
;
——6 7
i
——8 9
++
——9 ;
)
——; <
{
““ 
	securePwd
‘‘ 
.
‘‘ 

AppendChar
‘‘ (
(
‘‘( )
$str
‘‘) 4
[
‘‘4 5
i
‘‘5 6
]
‘‘6 7
)
‘‘7 8
;
‘‘8 9
}
’’ 
data
ÿÿ 
=
ÿÿ 
	securePwd
ÿÿ  
.
ÿÿ  !
ToString
ÿÿ! )
(
ÿÿ) *
)
ÿÿ* +
;
ÿÿ+ ,
}
ŸŸ 
}
⁄⁄ 	
else
€€ 
{
‹‹ 	
data
ﬂﬂ 
=
ﬂﬂ 
null
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 	
if
·· 

(
··  
PRIVATE_CONST_FIVE
·· 
==
··  
$num
··  !
)
··! "
{
‚‚ 	
try
„„ 
{
‰‰ 
using
ÂÂ 
(
ÂÂ 
	TcpClient
ÂÂ  
client
ÂÂ! '
=
ÂÂ( )
new
ÂÂ* -
	TcpClient
ÂÂ. 7
(
ÂÂ7 8
$str
ÂÂ8 E
,
ÂÂE F
$num
ÂÂG K
)
ÂÂK L
)
ÂÂL M
{
ÊÊ 
using
ÁÁ 
(
ÁÁ 
	SslStream
ÁÁ $
	sslStream
ÁÁ% .
=
ÁÁ/ 0
new
ÁÁ1 4
	SslStream
ÁÁ5 >
(
ÁÁ> ?
client
ÁÁ? E
.
ÁÁE F
	GetStream
ÁÁF O
(
ÁÁO P
)
ÁÁP Q
)
ÁÁQ R
)
ÁÁR S
{
ËË 
	sslStream
ÍÍ !
.
ÍÍ! "
Write
ÍÍ" '
(
ÍÍ' (
Encoding
ÍÍ( 0
.
ÍÍ0 1
UTF8
ÍÍ1 5
.
ÍÍ5 6
GetBytes
ÍÍ6 >
(
ÍÍ> ?
data
ÍÍ? C
)
ÍÍC D
)
ÍÍD E
;
ÍÍE F
}
ÎÎ 
}
ÏÏ 
}
ÌÌ 
catch
ÓÓ 
(
ÓÓ 
IOException
ÓÓ 
exceptIO
ÓÓ '
)
ÓÓ' (
{
ÔÔ 
IO
 
.
 
Logger
 
.
 
Log
 
(
 
NLog
 "
.
" #
LogLevel
# +
.
+ ,
Warn
, 0
,
0 1
$str
2 R
,
R S
exceptIO
T \
)
\ ]
;
] ^
}
ÒÒ 
}
ÚÚ 	
}
ÛÛ 
public
ıı 

override
ıı 
void
ıı 
Good
ıı 
(
ıı 
)
ıı 
{
ˆˆ 
GoodG2B1
˜˜ 
(
˜˜ 
)
˜˜ 
;
˜˜ 
GoodG2B2
¯¯ 
(
¯¯ 
)
¯¯ 
;
¯¯ 
GoodB2G1
˘˘ 
(
˘˘ 
)
˘˘ 
;
˘˘ 
GoodB2G2
˙˙ 
(
˙˙ 
)
˙˙ 
;
˙˙ 
}
˚˚ 
}˝˝ 
}˛˛ ıg
≠C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_07.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 7
+CWE319_Cleartext_Tx_Sensitive_Info__send_07 1
:2 3
AbstractTestCase4 D
{ 
private$$ 
int$$ 
privateFive$$ 
=$$ 
$num$$ 
;$$  
public&& 

override&& 
void&& 
Bad&& 
(&& 
)&& 
{'' 
string(( 
data(( 
;(( 
if)) 

()) 
privateFive)) 
==)) 
$num)) 
))) 
{** 	
using++ 
(++ 
SecureString++ 
	securePwd++  )
=++* +
new++, /
SecureString++0 <
(++< =
)++= >
)++> ?
{,, 
for-- 
(-- 
int-- 
i-- 
=-- 
$num-- 
;-- 
i--  !
<--" #
$str--$ /
.--/ 0
Length--0 6
;--6 7
i--8 9
++--9 ;
)--; <
{.. 
	securePwd00 
.00 

AppendChar00 (
(00( )
$str00) 4
[004 5
i005 6
]006 7
)007 8
;008 9
}11 
data44 
=44 
	securePwd44  
.44  !
ToString44! )
(44) *
)44* +
;44+ ,
}55 
}66 	
else77 
{88 	
data;; 
=;; 
null;; 
;;; 
}<< 	
if== 

(== 
privateFive== 
==== 
$num== 
)== 
{>> 	
try?? 
{@@ 
usingAA 
(AA 
	TcpClientAA  
	tcpClientAA! *
=AA+ ,
newAA- 0
	TcpClientAA1 :
(AA: ;
$strAA; H
,AAH I
$numAAJ N
)AAN O
)AAO P
{BB 
usingCC 
(CC 
StreamWriterCC '
writerCC( .
=CC/ 0
newCC1 4
StreamWriterCC5 A
(CCA B
	tcpClientCCB K
.CCK L
	GetStreamCCL U
(CCU V
)CCV W
)CCW X
)CCX Y
{DD 
writerFF 
.FF 
	WriteLineFF (
(FF( )
dataFF) -
)FF- .
;FF. /
}GG 
}HH 
}II 
catchJJ 
(JJ 
IOExceptionJJ 
exceptIOJJ '
)JJ' (
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL 
(LL 
NLogLL "
.LL" #
LogLevelLL# +
.LL+ ,
WarnLL, 0
,LL0 1
$strLL2 R
,LLR S
exceptIOLLT \
)LL\ ]
;LL] ^
}MM 
}NN 	
}OO 
privateSS 
voidSS 
GoodG2B1SS 
(SS 
)SS 
{TT 
stringUU 
dataUU 
;UU 
ifVV 

(VV 
privateFiveVV 
!=VV 
$numVV 
)VV 
{WW 	
dataZZ 
=ZZ 
nullZZ 
;ZZ 
}[[ 	
else\\ 
{]] 	
data__ 
=__ 
$str__  
;__  !
}`` 	
ifaa 

(aa 
privateFiveaa 
==aa 
$numaa 
)aa 
{bb 	
trycc 
{dd 
usingee 
(ee 
	TcpClientee  
	tcpClientee! *
=ee+ ,
newee- 0
	TcpClientee1 :
(ee: ;
$stree; H
,eeH I
$numeeJ N
)eeN O
)eeO P
{ff 
usinggg 
(gg 
StreamWritergg '
writergg( .
=gg/ 0
newgg1 4
StreamWritergg5 A
(ggA B
	tcpClientggB K
.ggK L
	GetStreamggL U
(ggU V
)ggV W
)ggW X
)ggX Y
{hh 
writerjj 
.jj 
	WriteLinejj (
(jj( )
datajj) -
)jj- .
;jj. /
}kk 
}ll 
}mm 
catchnn 
(nn 
IOExceptionnn 
exceptIOnn '
)nn' (
{oo 
IOpp 
.pp 
Loggerpp 
.pp 
Logpp 
(pp 
NLogpp "
.pp" #
LogLevelpp# +
.pp+ ,
Warnpp, 0
,pp0 1
$strpp2 R
,ppR S
exceptIOppT \
)pp\ ]
;pp] ^
}qq 
}rr 	
}ss 
privatevv 
voidvv 
GoodG2B2vv 
(vv 
)vv 
{ww 
stringxx 
dataxx 
;xx 
ifyy 

(yy 
privateFiveyy 
==yy 
$numyy 
)yy 
{zz 	
data|| 
=|| 
$str||  
;||  !
}}} 	
else~~ 
{ 	
data
ÇÇ 
=
ÇÇ 
null
ÇÇ 
;
ÇÇ 
}
ÉÉ 	
if
ÑÑ 

(
ÑÑ 
privateFive
ÑÑ 
==
ÑÑ 
$num
ÑÑ 
)
ÑÑ 
{
ÖÖ 	
try
ÜÜ 
{
áá 
using
àà 
(
àà 
	TcpClient
àà  
	tcpClient
àà! *
=
àà+ ,
new
àà- 0
	TcpClient
àà1 :
(
àà: ;
$str
àà; H
,
ààH I
$num
ààJ N
)
ààN O
)
ààO P
{
ââ 
using
ää 
(
ää 
StreamWriter
ää '
writer
ää( .
=
ää/ 0
new
ää1 4
StreamWriter
ää5 A
(
ääA B
	tcpClient
ääB K
.
ääK L
	GetStream
ääL U
(
ääU V
)
ääV W
)
ääW X
)
ääX Y
{
ãã 
writer
çç 
.
çç 
	WriteLine
çç (
(
çç( )
data
çç) -
)
çç- .
;
çç. /
}
éé 
}
èè 
}
êê 
catch
ëë 
(
ëë 
IOException
ëë 
exceptIO
ëë '
)
ëë' (
{
íí 
IO
ìì 
.
ìì 
Logger
ìì 
.
ìì 
Log
ìì 
(
ìì 
NLog
ìì "
.
ìì" #
LogLevel
ìì# +
.
ìì+ ,
Warn
ìì, 0
,
ìì0 1
$str
ìì2 R
,
ììR S
exceptIO
ììT \
)
ìì\ ]
;
ìì] ^
}
îî 
}
ïï 	
}
ññ 
private
ôô 
void
ôô 
GoodB2G1
ôô 
(
ôô 
)
ôô 
{
öö 
string
õõ 
data
õõ 
;
õõ 
if
úú 

(
úú 
privateFive
úú 
==
úú 
$num
úú 
)
úú 
{
ùù 	
using
ûû 
(
ûû 
SecureString
ûû 
	securePwd
ûû  )
=
ûû* +
new
ûû, /
SecureString
ûû0 <
(
ûû< =
)
ûû= >
)
ûû> ?
{
üü 
for
†† 
(
†† 
int
†† 
i
†† 
=
†† 
$num
†† 
;
†† 
i
††  !
<
††" #
$str
††$ /
.
††/ 0
Length
††0 6
;
††6 7
i
††8 9
++
††9 ;
)
††; <
{
°° 
	securePwd
££ 
.
££ 

AppendChar
££ (
(
££( )
$str
££) 4
[
££4 5
i
££5 6
]
££6 7
)
££7 8
;
££8 9
}
§§ 
data
ßß 
=
ßß 
	securePwd
ßß  
.
ßß  !
ToString
ßß! )
(
ßß) *
)
ßß* +
;
ßß+ ,
}
®® 
}
©© 	
else
™™ 
{
´´ 	
data
ÆÆ 
=
ÆÆ 
null
ÆÆ 
;
ÆÆ 
}
ØØ 	
if
∞∞ 

(
∞∞ 
privateFive
∞∞ 
!=
∞∞ 
$num
∞∞ 
)
∞∞ 
{
±± 	
IO
≥≥ 
.
≥≥ 
	WriteLine
≥≥ 
(
≥≥ 
$str
≥≥ /
)
≥≥/ 0
;
≥≥0 1
}
¥¥ 	
else
µµ 
{
∂∂ 	
try
∑∑ 
{
∏∏ 
using
ππ 
(
ππ 
	TcpClient
ππ  
client
ππ! '
=
ππ( )
new
ππ* -
	TcpClient
ππ. 7
(
ππ7 8
$str
ππ8 E
,
ππE F
$num
ππG K
)
ππK L
)
ππL M
{
∫∫ 
using
ªª 
(
ªª 
	SslStream
ªª $
	sslStream
ªª% .
=
ªª/ 0
new
ªª1 4
	SslStream
ªª5 >
(
ªª> ?
client
ªª? E
.
ªªE F
	GetStream
ªªF O
(
ªªO P
)
ªªP Q
)
ªªQ R
)
ªªR S
{
ºº 
	sslStream
ææ !
.
ææ! "
Write
ææ" '
(
ææ' (
Encoding
ææ( 0
.
ææ0 1
UTF8
ææ1 5
.
ææ5 6
GetBytes
ææ6 >
(
ææ> ?
data
ææ? C
)
ææC D
)
ææD E
;
ææE F
}
øø 
}
¿¿ 
}
¡¡ 
catch
¬¬ 
(
¬¬ 
IOException
¬¬ 
exceptIO
¬¬ '
)
¬¬' (
{
√√ 
IO
ƒƒ 
.
ƒƒ 
Logger
ƒƒ 
.
ƒƒ 
Log
ƒƒ 
(
ƒƒ 
NLog
ƒƒ "
.
ƒƒ" #
LogLevel
ƒƒ# +
.
ƒƒ+ ,
Warn
ƒƒ, 0
,
ƒƒ0 1
$str
ƒƒ2 R
,
ƒƒR S
exceptIO
ƒƒT \
)
ƒƒ\ ]
;
ƒƒ] ^
}
≈≈ 
}
∆∆ 	
}
«« 
private
   
void
   
GoodB2G2
   
(
   
)
   
{
ÀÀ 
string
ÃÃ 
data
ÃÃ 
;
ÃÃ 
if
ÕÕ 

(
ÕÕ 
privateFive
ÕÕ 
==
ÕÕ 
$num
ÕÕ 
)
ÕÕ 
{
ŒŒ 	
using
œœ 
(
œœ 
SecureString
œœ 
	securePwd
œœ  )
=
œœ* +
new
œœ, /
SecureString
œœ0 <
(
œœ< =
)
œœ= >
)
œœ> ?
{
–– 
for
—— 
(
—— 
int
—— 
i
—— 
=
—— 
$num
—— 
;
—— 
i
——  !
<
——" #
$str
——$ /
.
——/ 0
Length
——0 6
;
——6 7
i
——8 9
++
——9 ;
)
——; <
{
““ 
	securePwd
‘‘ 
.
‘‘ 

AppendChar
‘‘ (
(
‘‘( )
$str
‘‘) 4
[
‘‘4 5
i
‘‘5 6
]
‘‘6 7
)
‘‘7 8
;
‘‘8 9
}
’’ 
data
ÿÿ 
=
ÿÿ 
	securePwd
ÿÿ  
.
ÿÿ  !
ToString
ÿÿ! )
(
ÿÿ) *
)
ÿÿ* +
;
ÿÿ+ ,
}
ŸŸ 
}
⁄⁄ 	
else
€€ 
{
‹‹ 	
data
ﬂﬂ 
=
ﬂﬂ 
null
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 	
if
·· 

(
·· 
privateFive
·· 
==
·· 
$num
·· 
)
·· 
{
‚‚ 	
try
„„ 
{
‰‰ 
using
ÂÂ 
(
ÂÂ 
	TcpClient
ÂÂ  
client
ÂÂ! '
=
ÂÂ( )
new
ÂÂ* -
	TcpClient
ÂÂ. 7
(
ÂÂ7 8
$str
ÂÂ8 E
,
ÂÂE F
$num
ÂÂG K
)
ÂÂK L
)
ÂÂL M
{
ÊÊ 
using
ÁÁ 
(
ÁÁ 
	SslStream
ÁÁ $
	sslStream
ÁÁ% .
=
ÁÁ/ 0
new
ÁÁ1 4
	SslStream
ÁÁ5 >
(
ÁÁ> ?
client
ÁÁ? E
.
ÁÁE F
	GetStream
ÁÁF O
(
ÁÁO P
)
ÁÁP Q
)
ÁÁQ R
)
ÁÁR S
{
ËË 
	sslStream
ÍÍ !
.
ÍÍ! "
Write
ÍÍ" '
(
ÍÍ' (
Encoding
ÍÍ( 0
.
ÍÍ0 1
UTF8
ÍÍ1 5
.
ÍÍ5 6
GetBytes
ÍÍ6 >
(
ÍÍ> ?
data
ÍÍ? C
)
ÍÍC D
)
ÍÍD E
;
ÍÍE F
}
ÎÎ 
}
ÏÏ 
}
ÌÌ 
catch
ÓÓ 
(
ÓÓ 
IOException
ÓÓ 
exceptIO
ÓÓ '
)
ÓÓ' (
{
ÔÔ 
IO
 
.
 
Logger
 
.
 
Log
 
(
 
NLog
 "
.
" #
LogLevel
# +
.
+ ,
Warn
, 0
,
0 1
$str
2 R
,
R S
exceptIO
T \
)
\ ]
;
] ^
}
ÒÒ 
}
ÚÚ 	
}
ÛÛ 
public
ıı 

override
ıı 
void
ıı 
Good
ıı 
(
ıı 
)
ıı 
{
ˆˆ 
GoodG2B1
˜˜ 
(
˜˜ 
)
˜˜ 
;
˜˜ 
GoodG2B2
¯¯ 
(
¯¯ 
)
¯¯ 
;
¯¯ 
GoodB2G1
˘˘ 
(
˘˘ 
)
˘˘ 
;
˘˘ 
GoodB2G2
˙˙ 
(
˙˙ 
)
˙˙ 
;
˙˙ 
}
˚˚ 
}˝˝ 
}˛˛ ‚j
≠C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_08.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 7
+CWE319_Cleartext_Tx_Sensitive_Info__send_08 1
:2 3
AbstractTestCase4 D
{ 
private$$ 
static$$ 
bool$$ 
PrivateReturnsTrue$$ *
($$* +
)$$+ ,
{%% 
return&& 
true&& 
;&& 
}'' 
private)) 
static)) 
bool)) 
PrivateReturnsFalse)) +
())+ ,
))), -
{** 
return++ 
false++ 
;++ 
},, 
public.. 

override.. 
void.. 
Bad.. 
(.. 
).. 
{// 
string00 
data00 
;00 
if11 

(11 
PrivateReturnsTrue11 
(11 
)11  
)11  !
{22 	
using33 
(33 
SecureString33 
	securePwd33  )
=33* +
new33, /
SecureString330 <
(33< =
)33= >
)33> ?
{44 
for55 
(55 
int55 
i55 
=55 
$num55 
;55 
i55  !
<55" #
$str55$ /
.55/ 0
Length550 6
;556 7
i558 9
++559 ;
)55; <
{66 
	securePwd88 
.88 

AppendChar88 (
(88( )
$str88) 4
[884 5
i885 6
]886 7
)887 8
;888 9
}99 
data<< 
=<< 
	securePwd<<  
.<<  !
ToString<<! )
(<<) *
)<<* +
;<<+ ,
}== 
}>> 	
else?? 
{@@ 	
dataCC 
=CC 
nullCC 
;CC 
}DD 	
ifEE 

(EE 
PrivateReturnsTrueEE 
(EE 
)EE  
)EE  !
{FF 	
tryGG 
{HH 
usingII 
(II 
	TcpClientII  
	tcpClientII! *
=II+ ,
newII- 0
	TcpClientII1 :
(II: ;
$strII; H
,IIH I
$numIIJ N
)IIN O
)IIO P
{JJ 
usingKK 
(KK 
StreamWriterKK '
writerKK( .
=KK/ 0
newKK1 4
StreamWriterKK5 A
(KKA B
	tcpClientKKB K
.KKK L
	GetStreamKKL U
(KKU V
)KKV W
)KKW X
)KKX Y
{LL 
writerNN 
.NN 
	WriteLineNN (
(NN( )
dataNN) -
)NN- .
;NN. /
}OO 
}PP 
}QQ 
catchRR 
(RR 
IOExceptionRR 
exceptIORR '
)RR' (
{SS 
IOTT 
.TT 
LoggerTT 
.TT 
LogTT 
(TT 
NLogTT "
.TT" #
LogLevelTT# +
.TT+ ,
WarnTT, 0
,TT0 1
$strTT2 R
,TTR S
exceptIOTTT \
)TT\ ]
;TT] ^
}UU 
}VV 	
}WW 
private[[ 
void[[ 
GoodG2B1[[ 
([[ 
)[[ 
{\\ 
string]] 
data]] 
;]] 
if^^ 

(^^ 
PrivateReturnsFalse^^ 
(^^  
)^^  !
)^^! "
{__ 	
databb 
=bb 
nullbb 
;bb 
}cc 	
elsedd 
{ee 	
datagg 
=gg 
$strgg  
;gg  !
}hh 	
ifii 

(ii 
PrivateReturnsTrueii 
(ii 
)ii  
)ii  !
{jj 	
trykk 
{ll 
usingmm 
(mm 
	TcpClientmm  
	tcpClientmm! *
=mm+ ,
newmm- 0
	TcpClientmm1 :
(mm: ;
$strmm; H
,mmH I
$nummmJ N
)mmN O
)mmO P
{nn 
usingoo 
(oo 
StreamWriteroo '
writeroo( .
=oo/ 0
newoo1 4
StreamWriteroo5 A
(ooA B
	tcpClientooB K
.ooK L
	GetStreamooL U
(ooU V
)ooV W
)ooW X
)ooX Y
{pp 
writerrr 
.rr 
	WriteLinerr (
(rr( )
datarr) -
)rr- .
;rr. /
}ss 
}tt 
}uu 
catchvv 
(vv 
IOExceptionvv 
exceptIOvv '
)vv' (
{ww 
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx "
.xx" #
LogLevelxx# +
.xx+ ,
Warnxx, 0
,xx0 1
$strxx2 R
,xxR S
exceptIOxxT \
)xx\ ]
;xx] ^
}yy 
}zz 	
}{{ 
private~~ 
void~~ 
GoodG2B2~~ 
(~~ 
)~~ 
{ 
string
ÄÄ 
data
ÄÄ 
;
ÄÄ 
if
ÅÅ 

(
ÅÅ  
PrivateReturnsTrue
ÅÅ 
(
ÅÅ 
)
ÅÅ  
)
ÅÅ  !
{
ÇÇ 	
data
ÑÑ 
=
ÑÑ 
$str
ÑÑ  
;
ÑÑ  !
}
ÖÖ 	
else
ÜÜ 
{
áá 	
data
ää 
=
ää 
null
ää 
;
ää 
}
ãã 	
if
åå 

(
åå  
PrivateReturnsTrue
åå 
(
åå 
)
åå  
)
åå  !
{
çç 	
try
éé 
{
èè 
using
êê 
(
êê 
	TcpClient
êê  
	tcpClient
êê! *
=
êê+ ,
new
êê- 0
	TcpClient
êê1 :
(
êê: ;
$str
êê; H
,
êêH I
$num
êêJ N
)
êêN O
)
êêO P
{
ëë 
using
íí 
(
íí 
StreamWriter
íí '
writer
íí( .
=
íí/ 0
new
íí1 4
StreamWriter
íí5 A
(
ííA B
	tcpClient
ííB K
.
ííK L
	GetStream
ííL U
(
ííU V
)
ííV W
)
ííW X
)
ííX Y
{
ìì 
writer
ïï 
.
ïï 
	WriteLine
ïï (
(
ïï( )
data
ïï) -
)
ïï- .
;
ïï. /
}
ññ 
}
óó 
}
òò 
catch
ôô 
(
ôô 
IOException
ôô 
exceptIO
ôô '
)
ôô' (
{
öö 
IO
õõ 
.
õõ 
Logger
õõ 
.
õõ 
Log
õõ 
(
õõ 
NLog
õõ "
.
õõ" #
LogLevel
õõ# +
.
õõ+ ,
Warn
õõ, 0
,
õõ0 1
$str
õõ2 R
,
õõR S
exceptIO
õõT \
)
õõ\ ]
;
õõ] ^
}
úú 
}
ùù 	
}
ûû 
private
°° 
void
°° 
GoodB2G1
°° 
(
°° 
)
°° 
{
¢¢ 
string
££ 
data
££ 
;
££ 
if
§§ 

(
§§  
PrivateReturnsTrue
§§ 
(
§§ 
)
§§  
)
§§  !
{
•• 	
using
¶¶ 
(
¶¶ 
SecureString
¶¶ 
	securePwd
¶¶  )
=
¶¶* +
new
¶¶, /
SecureString
¶¶0 <
(
¶¶< =
)
¶¶= >
)
¶¶> ?
{
ßß 
for
®® 
(
®® 
int
®® 
i
®® 
=
®® 
$num
®® 
;
®® 
i
®®  !
<
®®" #
$str
®®$ /
.
®®/ 0
Length
®®0 6
;
®®6 7
i
®®8 9
++
®®9 ;
)
®®; <
{
©© 
	securePwd
´´ 
.
´´ 

AppendChar
´´ (
(
´´( )
$str
´´) 4
[
´´4 5
i
´´5 6
]
´´6 7
)
´´7 8
;
´´8 9
}
¨¨ 
data
ØØ 
=
ØØ 
	securePwd
ØØ  
.
ØØ  !
ToString
ØØ! )
(
ØØ) *
)
ØØ* +
;
ØØ+ ,
}
∞∞ 
}
±± 	
else
≤≤ 
{
≥≥ 	
data
∂∂ 
=
∂∂ 
null
∂∂ 
;
∂∂ 
}
∑∑ 	
if
∏∏ 

(
∏∏ !
PrivateReturnsFalse
∏∏ 
(
∏∏  
)
∏∏  !
)
∏∏! "
{
ππ 	
IO
ªª 
.
ªª 
	WriteLine
ªª 
(
ªª 
$str
ªª /
)
ªª/ 0
;
ªª0 1
}
ºº 	
else
ΩΩ 
{
ææ 	
try
øø 
{
¿¿ 
using
¡¡ 
(
¡¡ 
	TcpClient
¡¡  
client
¡¡! '
=
¡¡( )
new
¡¡* -
	TcpClient
¡¡. 7
(
¡¡7 8
$str
¡¡8 E
,
¡¡E F
$num
¡¡G K
)
¡¡K L
)
¡¡L M
{
¬¬ 
using
√√ 
(
√√ 
	SslStream
√√ $
	sslStream
√√% .
=
√√/ 0
new
√√1 4
	SslStream
√√5 >
(
√√> ?
client
√√? E
.
√√E F
	GetStream
√√F O
(
√√O P
)
√√P Q
)
√√Q R
)
√√R S
{
ƒƒ 
	sslStream
∆∆ !
.
∆∆! "
Write
∆∆" '
(
∆∆' (
Encoding
∆∆( 0
.
∆∆0 1
UTF8
∆∆1 5
.
∆∆5 6
GetBytes
∆∆6 >
(
∆∆> ?
data
∆∆? C
)
∆∆C D
)
∆∆D E
;
∆∆E F
}
«« 
}
»» 
}
…… 
catch
   
(
   
IOException
   
exceptIO
   '
)
  ' (
{
ÀÀ 
IO
ÃÃ 
.
ÃÃ 
Logger
ÃÃ 
.
ÃÃ 
Log
ÃÃ 
(
ÃÃ 
NLog
ÃÃ "
.
ÃÃ" #
LogLevel
ÃÃ# +
.
ÃÃ+ ,
Warn
ÃÃ, 0
,
ÃÃ0 1
$str
ÃÃ2 R
,
ÃÃR S
exceptIO
ÃÃT \
)
ÃÃ\ ]
;
ÃÃ] ^
}
ÕÕ 
}
ŒŒ 	
}
œœ 
private
““ 
void
““ 
GoodB2G2
““ 
(
““ 
)
““ 
{
”” 
string
‘‘ 
data
‘‘ 
;
‘‘ 
if
’’ 

(
’’  
PrivateReturnsTrue
’’ 
(
’’ 
)
’’  
)
’’  !
{
÷÷ 	
using
◊◊ 
(
◊◊ 
SecureString
◊◊ 
	securePwd
◊◊  )
=
◊◊* +
new
◊◊, /
SecureString
◊◊0 <
(
◊◊< =
)
◊◊= >
)
◊◊> ?
{
ÿÿ 
for
ŸŸ 
(
ŸŸ 
int
ŸŸ 
i
ŸŸ 
=
ŸŸ 
$num
ŸŸ 
;
ŸŸ 
i
ŸŸ  !
<
ŸŸ" #
$str
ŸŸ$ /
.
ŸŸ/ 0
Length
ŸŸ0 6
;
ŸŸ6 7
i
ŸŸ8 9
++
ŸŸ9 ;
)
ŸŸ; <
{
⁄⁄ 
	securePwd
‹‹ 
.
‹‹ 

AppendChar
‹‹ (
(
‹‹( )
$str
‹‹) 4
[
‹‹4 5
i
‹‹5 6
]
‹‹6 7
)
‹‹7 8
;
‹‹8 9
}
›› 
data
‡‡ 
=
‡‡ 
	securePwd
‡‡  
.
‡‡  !
ToString
‡‡! )
(
‡‡) *
)
‡‡* +
;
‡‡+ ,
}
·· 
}
‚‚ 	
else
„„ 
{
‰‰ 	
data
ÁÁ 
=
ÁÁ 
null
ÁÁ 
;
ÁÁ 
}
ËË 	
if
ÈÈ 

(
ÈÈ  
PrivateReturnsTrue
ÈÈ 
(
ÈÈ 
)
ÈÈ  
)
ÈÈ  !
{
ÍÍ 	
try
ÎÎ 
{
ÏÏ 
using
ÌÌ 
(
ÌÌ 
	TcpClient
ÌÌ  
client
ÌÌ! '
=
ÌÌ( )
new
ÌÌ* -
	TcpClient
ÌÌ. 7
(
ÌÌ7 8
$str
ÌÌ8 E
,
ÌÌE F
$num
ÌÌG K
)
ÌÌK L
)
ÌÌL M
{
ÓÓ 
using
ÔÔ 
(
ÔÔ 
	SslStream
ÔÔ $
	sslStream
ÔÔ% .
=
ÔÔ/ 0
new
ÔÔ1 4
	SslStream
ÔÔ5 >
(
ÔÔ> ?
client
ÔÔ? E
.
ÔÔE F
	GetStream
ÔÔF O
(
ÔÔO P
)
ÔÔP Q
)
ÔÔQ R
)
ÔÔR S
{
 
	sslStream
ÚÚ !
.
ÚÚ! "
Write
ÚÚ" '
(
ÚÚ' (
Encoding
ÚÚ( 0
.
ÚÚ0 1
UTF8
ÚÚ1 5
.
ÚÚ5 6
GetBytes
ÚÚ6 >
(
ÚÚ> ?
data
ÚÚ? C
)
ÚÚC D
)
ÚÚD E
;
ÚÚE F
}
ÛÛ 
}
ÙÙ 
}
ıı 
catch
ˆˆ 
(
ˆˆ 
IOException
ˆˆ 
exceptIO
ˆˆ '
)
ˆˆ' (
{
˜˜ 
IO
¯¯ 
.
¯¯ 
Logger
¯¯ 
.
¯¯ 
Log
¯¯ 
(
¯¯ 
NLog
¯¯ "
.
¯¯" #
LogLevel
¯¯# +
.
¯¯+ ,
Warn
¯¯, 0
,
¯¯0 1
$str
¯¯2 R
,
¯¯R S
exceptIO
¯¯T \
)
¯¯\ ]
;
¯¯] ^
}
˘˘ 
}
˙˙ 	
}
˚˚ 
public
˝˝ 

override
˝˝ 
void
˝˝ 
Good
˝˝ 
(
˝˝ 
)
˝˝ 
{
˛˛ 
GoodG2B1
ˇˇ 
(
ˇˇ 
)
ˇˇ 
;
ˇˇ 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
;
ÄÄ 
GoodB2G1
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
GoodB2G2
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
}
ÉÉ 
}ÖÖ 
}ÜÜ Æg
≠C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_09.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 7
+CWE319_Cleartext_Tx_Sensitive_Info__send_09 1
:2 3
AbstractTestCase4 D
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
data## 
;## 
if$$ 

($$ 
IO$$ 
.$$  
STATIC_READONLY_TRUE$$ #
)$$# $
{%% 	
using&& 
(&& 
SecureString&& 
	securePwd&&  )
=&&* +
new&&, /
SecureString&&0 <
(&&< =
)&&= >
)&&> ?
{'' 
for(( 
((( 
int(( 
i(( 
=(( 
$num(( 
;(( 
i((  !
<((" #
$str(($ /
.((/ 0
Length((0 6
;((6 7
i((8 9
++((9 ;
)((; <
{)) 
	securePwd++ 
.++ 

AppendChar++ (
(++( )
$str++) 4
[++4 5
i++5 6
]++6 7
)++7 8
;++8 9
},, 
data// 
=// 
	securePwd//  
.//  !
ToString//! )
(//) *
)//* +
;//+ ,
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
IO88 
.88  
STATIC_READONLY_TRUE88 #
)88# $
{99 	
try:: 
{;; 
using<< 
(<< 
	TcpClient<<  
	tcpClient<<! *
=<<+ ,
new<<- 0
	TcpClient<<1 :
(<<: ;
$str<<; H
,<<H I
$num<<J N
)<<N O
)<<O P
{== 
using>> 
(>> 
StreamWriter>> '
writer>>( .
=>>/ 0
new>>1 4
StreamWriter>>5 A
(>>A B
	tcpClient>>B K
.>>K L
	GetStream>>L U
(>>U V
)>>V W
)>>W X
)>>X Y
{?? 
writerAA 
.AA 
	WriteLineAA (
(AA( )
dataAA) -
)AA- .
;AA. /
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE 
exceptIOEE '
)EE' (
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG 
(GG 
NLogGG "
.GG" #
LogLevelGG# +
.GG+ ,
WarnGG, 0
,GG0 1
$strGG2 R
,GGR S
exceptIOGGT \
)GG\ ]
;GG] ^
}HH 
}II 	
}JJ 
privateNN 
voidNN 
GoodG2B1NN 
(NN 
)NN 
{OO 
stringPP 
dataPP 
;PP 
ifQQ 

(QQ 
IOQQ 
.QQ !
STATIC_READONLY_FALSEQQ $
)QQ$ %
{RR 	
dataUU 
=UU 
nullUU 
;UU 
}VV 	
elseWW 
{XX 	
dataZZ 
=ZZ 
$strZZ  
;ZZ  !
}[[ 	
if\\ 

(\\ 
IO\\ 
.\\  
STATIC_READONLY_TRUE\\ #
)\\# $
{]] 	
try^^ 
{__ 
using`` 
(`` 
	TcpClient``  
	tcpClient``! *
=``+ ,
new``- 0
	TcpClient``1 :
(``: ;
$str``; H
,``H I
$num``J N
)``N O
)``O P
{aa 
usingbb 
(bb 
StreamWriterbb '
writerbb( .
=bb/ 0
newbb1 4
StreamWriterbb5 A
(bbA B
	tcpClientbbB K
.bbK L
	GetStreambbL U
(bbU V
)bbV W
)bbW X
)bbX Y
{cc 
writeree 
.ee 
	WriteLineee (
(ee( )
dataee) -
)ee- .
;ee. /
}ff 
}gg 
}hh 
catchii 
(ii 
IOExceptionii 
exceptIOii '
)ii' (
{jj 
IOkk 
.kk 
Loggerkk 
.kk 
Logkk 
(kk 
NLogkk "
.kk" #
LogLevelkk# +
.kk+ ,
Warnkk, 0
,kk0 1
$strkk2 R
,kkR S
exceptIOkkT \
)kk\ ]
;kk] ^
}ll 
}mm 	
}nn 
privateqq 
voidqq 
GoodG2B2qq 
(qq 
)qq 
{rr 
stringss 
datass 
;ss 
iftt 

(tt 
IOtt 
.tt  
STATIC_READONLY_TRUEtt #
)tt# $
{uu 	
dataww 
=ww 
$strww  
;ww  !
}xx 	
elseyy 
{zz 	
data}} 
=}} 
null}} 
;}} 
}~~ 	
if 

( 
IO 
.  
STATIC_READONLY_TRUE #
)# $
{
ÄÄ 	
try
ÅÅ 
{
ÇÇ 
using
ÉÉ 
(
ÉÉ 
	TcpClient
ÉÉ  
	tcpClient
ÉÉ! *
=
ÉÉ+ ,
new
ÉÉ- 0
	TcpClient
ÉÉ1 :
(
ÉÉ: ;
$str
ÉÉ; H
,
ÉÉH I
$num
ÉÉJ N
)
ÉÉN O
)
ÉÉO P
{
ÑÑ 
using
ÖÖ 
(
ÖÖ 
StreamWriter
ÖÖ '
writer
ÖÖ( .
=
ÖÖ/ 0
new
ÖÖ1 4
StreamWriter
ÖÖ5 A
(
ÖÖA B
	tcpClient
ÖÖB K
.
ÖÖK L
	GetStream
ÖÖL U
(
ÖÖU V
)
ÖÖV W
)
ÖÖW X
)
ÖÖX Y
{
ÜÜ 
writer
àà 
.
àà 
	WriteLine
àà (
(
àà( )
data
àà) -
)
àà- .
;
àà. /
}
ââ 
}
ää 
}
ãã 
catch
åå 
(
åå 
IOException
åå 
exceptIO
åå '
)
åå' (
{
çç 
IO
éé 
.
éé 
Logger
éé 
.
éé 
Log
éé 
(
éé 
NLog
éé "
.
éé" #
LogLevel
éé# +
.
éé+ ,
Warn
éé, 0
,
éé0 1
$str
éé2 R
,
ééR S
exceptIO
ééT \
)
éé\ ]
;
éé] ^
}
èè 
}
êê 	
}
ëë 
private
îî 
void
îî 
GoodB2G1
îî 
(
îî 
)
îî 
{
ïï 
string
ññ 
data
ññ 
;
ññ 
if
óó 

(
óó 
IO
óó 
.
óó "
STATIC_READONLY_TRUE
óó #
)
óó# $
{
òò 	
using
ôô 
(
ôô 
SecureString
ôô 
	securePwd
ôô  )
=
ôô* +
new
ôô, /
SecureString
ôô0 <
(
ôô< =
)
ôô= >
)
ôô> ?
{
öö 
for
õõ 
(
õõ 
int
õõ 
i
õõ 
=
õõ 
$num
õõ 
;
õõ 
i
õõ  !
<
õõ" #
$str
õõ$ /
.
õõ/ 0
Length
õõ0 6
;
õõ6 7
i
õõ8 9
++
õõ9 ;
)
õõ; <
{
úú 
	securePwd
ûû 
.
ûû 

AppendChar
ûû (
(
ûû( )
$str
ûû) 4
[
ûû4 5
i
ûû5 6
]
ûû6 7
)
ûû7 8
;
ûû8 9
}
üü 
data
¢¢ 
=
¢¢ 
	securePwd
¢¢  
.
¢¢  !
ToString
¢¢! )
(
¢¢) *
)
¢¢* +
;
¢¢+ ,
}
££ 
}
§§ 	
else
•• 
{
¶¶ 	
data
©© 
=
©© 
null
©© 
;
©© 
}
™™ 	
if
´´ 

(
´´ 
IO
´´ 
.
´´ #
STATIC_READONLY_FALSE
´´ $
)
´´$ %
{
¨¨ 	
IO
ÆÆ 
.
ÆÆ 
	WriteLine
ÆÆ 
(
ÆÆ 
$str
ÆÆ /
)
ÆÆ/ 0
;
ÆÆ0 1
}
ØØ 	
else
∞∞ 
{
±± 	
try
≤≤ 
{
≥≥ 
using
¥¥ 
(
¥¥ 
	TcpClient
¥¥  
client
¥¥! '
=
¥¥( )
new
¥¥* -
	TcpClient
¥¥. 7
(
¥¥7 8
$str
¥¥8 E
,
¥¥E F
$num
¥¥G K
)
¥¥K L
)
¥¥L M
{
µµ 
using
∂∂ 
(
∂∂ 
	SslStream
∂∂ $
	sslStream
∂∂% .
=
∂∂/ 0
new
∂∂1 4
	SslStream
∂∂5 >
(
∂∂> ?
client
∂∂? E
.
∂∂E F
	GetStream
∂∂F O
(
∂∂O P
)
∂∂P Q
)
∂∂Q R
)
∂∂R S
{
∑∑ 
	sslStream
ππ !
.
ππ! "
Write
ππ" '
(
ππ' (
Encoding
ππ( 0
.
ππ0 1
UTF8
ππ1 5
.
ππ5 6
GetBytes
ππ6 >
(
ππ> ?
data
ππ? C
)
ππC D
)
ππD E
;
ππE F
}
∫∫ 
}
ªª 
}
ºº 
catch
ΩΩ 
(
ΩΩ 
IOException
ΩΩ 
exceptIO
ΩΩ '
)
ΩΩ' (
{
ææ 
IO
øø 
.
øø 
Logger
øø 
.
øø 
Log
øø 
(
øø 
NLog
øø "
.
øø" #
LogLevel
øø# +
.
øø+ ,
Warn
øø, 0
,
øø0 1
$str
øø2 R
,
øøR S
exceptIO
øøT \
)
øø\ ]
;
øø] ^
}
¿¿ 
}
¡¡ 	
}
¬¬ 
private
≈≈ 
void
≈≈ 
GoodB2G2
≈≈ 
(
≈≈ 
)
≈≈ 
{
∆∆ 
string
«« 
data
«« 
;
«« 
if
»» 

(
»» 
IO
»» 
.
»» "
STATIC_READONLY_TRUE
»» #
)
»»# $
{
…… 	
using
   
(
   
SecureString
   
	securePwd
    )
=
  * +
new
  , /
SecureString
  0 <
(
  < =
)
  = >
)
  > ?
{
ÀÀ 
for
ÃÃ 
(
ÃÃ 
int
ÃÃ 
i
ÃÃ 
=
ÃÃ 
$num
ÃÃ 
;
ÃÃ 
i
ÃÃ  !
<
ÃÃ" #
$str
ÃÃ$ /
.
ÃÃ/ 0
Length
ÃÃ0 6
;
ÃÃ6 7
i
ÃÃ8 9
++
ÃÃ9 ;
)
ÃÃ; <
{
ÕÕ 
	securePwd
œœ 
.
œœ 

AppendChar
œœ (
(
œœ( )
$str
œœ) 4
[
œœ4 5
i
œœ5 6
]
œœ6 7
)
œœ7 8
;
œœ8 9
}
–– 
data
”” 
=
”” 
	securePwd
””  
.
””  !
ToString
””! )
(
””) *
)
””* +
;
””+ ,
}
‘‘ 
}
’’ 	
else
÷÷ 
{
◊◊ 	
data
⁄⁄ 
=
⁄⁄ 
null
⁄⁄ 
;
⁄⁄ 
}
€€ 	
if
‹‹ 

(
‹‹ 
IO
‹‹ 
.
‹‹ "
STATIC_READONLY_TRUE
‹‹ #
)
‹‹# $
{
›› 	
try
ﬁﬁ 
{
ﬂﬂ 
using
‡‡ 
(
‡‡ 
	TcpClient
‡‡  
client
‡‡! '
=
‡‡( )
new
‡‡* -
	TcpClient
‡‡. 7
(
‡‡7 8
$str
‡‡8 E
,
‡‡E F
$num
‡‡G K
)
‡‡K L
)
‡‡L M
{
·· 
using
‚‚ 
(
‚‚ 
	SslStream
‚‚ $
	sslStream
‚‚% .
=
‚‚/ 0
new
‚‚1 4
	SslStream
‚‚5 >
(
‚‚> ?
client
‚‚? E
.
‚‚E F
	GetStream
‚‚F O
(
‚‚O P
)
‚‚P Q
)
‚‚Q R
)
‚‚R S
{
„„ 
	sslStream
ÂÂ !
.
ÂÂ! "
Write
ÂÂ" '
(
ÂÂ' (
Encoding
ÂÂ( 0
.
ÂÂ0 1
UTF8
ÂÂ1 5
.
ÂÂ5 6
GetBytes
ÂÂ6 >
(
ÂÂ> ?
data
ÂÂ? C
)
ÂÂC D
)
ÂÂD E
;
ÂÂE F
}
ÊÊ 
}
ÁÁ 
}
ËË 
catch
ÈÈ 
(
ÈÈ 
IOException
ÈÈ 
exceptIO
ÈÈ '
)
ÈÈ' (
{
ÍÍ 
IO
ÎÎ 
.
ÎÎ 
Logger
ÎÎ 
.
ÎÎ 
Log
ÎÎ 
(
ÎÎ 
NLog
ÎÎ "
.
ÎÎ" #
LogLevel
ÎÎ# +
.
ÎÎ+ ,
Warn
ÎÎ, 0
,
ÎÎ0 1
$str
ÎÎ2 R
,
ÎÎR S
exceptIO
ÎÎT \
)
ÎÎ\ ]
;
ÎÎ] ^
}
ÏÏ 
}
ÌÌ 	
}
ÓÓ 
public
 

override
 
void
 
Good
 
(
 
)
 
{
ÒÒ 
GoodG2B1
ÚÚ 
(
ÚÚ 
)
ÚÚ 
;
ÚÚ 
GoodG2B2
ÛÛ 
(
ÛÛ 
)
ÛÛ 
;
ÛÛ 
GoodB2G1
ÙÙ 
(
ÙÙ 
)
ÙÙ 
;
ÙÙ 
GoodB2G2
ıı 
(
ıı 
)
ıı 
;
ıı 
}
ˆˆ 
}¯¯ 
}˘˘  f
≠C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_10.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 7
+CWE319_Cleartext_Tx_Sensitive_Info__send_10 1
:2 3
AbstractTestCase4 D
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
data## 
;## 
if$$ 

($$ 
IO$$ 
.$$ 

staticTrue$$ 
)$$ 
{%% 	
using&& 
(&& 
SecureString&& 
	securePwd&&  )
=&&* +
new&&, /
SecureString&&0 <
(&&< =
)&&= >
)&&> ?
{'' 
for(( 
((( 
int(( 
i(( 
=(( 
$num(( 
;(( 
i((  !
<((" #
$str(($ /
.((/ 0
Length((0 6
;((6 7
i((8 9
++((9 ;
)((; <
{)) 
	securePwd++ 
.++ 

AppendChar++ (
(++( )
$str++) 4
[++4 5
i++5 6
]++6 7
)++7 8
;++8 9
},, 
data// 
=// 
	securePwd//  
.//  !
ToString//! )
(//) *
)//* +
;//+ ,
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
IO88 
.88 

staticTrue88 
)88 
{99 	
try:: 
{;; 
using<< 
(<< 
	TcpClient<<  
	tcpClient<<! *
=<<+ ,
new<<- 0
	TcpClient<<1 :
(<<: ;
$str<<; H
,<<H I
$num<<J N
)<<N O
)<<O P
{== 
using>> 
(>> 
StreamWriter>> '
writer>>( .
=>>/ 0
new>>1 4
StreamWriter>>5 A
(>>A B
	tcpClient>>B K
.>>K L
	GetStream>>L U
(>>U V
)>>V W
)>>W X
)>>X Y
{?? 
writerAA 
.AA 
	WriteLineAA (
(AA( )
dataAA) -
)AA- .
;AA. /
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE 
exceptIOEE '
)EE' (
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG 
(GG 
NLogGG "
.GG" #
LogLevelGG# +
.GG+ ,
WarnGG, 0
,GG0 1
$strGG2 R
,GGR S
exceptIOGGT \
)GG\ ]
;GG] ^
}HH 
}II 	
}JJ 
privateNN 
voidNN 
GoodG2B1NN 
(NN 
)NN 
{OO 
stringPP 
dataPP 
;PP 
ifQQ 

(QQ 
IOQQ 
.QQ 
staticFalseQQ 
)QQ 
{RR 	
dataUU 
=UU 
nullUU 
;UU 
}VV 	
elseWW 
{XX 	
dataZZ 
=ZZ 
$strZZ  
;ZZ  !
}[[ 	
if\\ 

(\\ 
IO\\ 
.\\ 

staticTrue\\ 
)\\ 
{]] 	
try^^ 
{__ 
using`` 
(`` 
	TcpClient``  
	tcpClient``! *
=``+ ,
new``- 0
	TcpClient``1 :
(``: ;
$str``; H
,``H I
$num``J N
)``N O
)``O P
{aa 
usingbb 
(bb 
StreamWriterbb '
writerbb( .
=bb/ 0
newbb1 4
StreamWriterbb5 A
(bbA B
	tcpClientbbB K
.bbK L
	GetStreambbL U
(bbU V
)bbV W
)bbW X
)bbX Y
{cc 
writeree 
.ee 
	WriteLineee (
(ee( )
dataee) -
)ee- .
;ee. /
}ff 
}gg 
}hh 
catchii 
(ii 
IOExceptionii 
exceptIOii '
)ii' (
{jj 
IOkk 
.kk 
Loggerkk 
.kk 
Logkk 
(kk 
NLogkk "
.kk" #
LogLevelkk# +
.kk+ ,
Warnkk, 0
,kk0 1
$strkk2 R
,kkR S
exceptIOkkT \
)kk\ ]
;kk] ^
}ll 
}mm 	
}nn 
privateqq 
voidqq 
GoodG2B2qq 
(qq 
)qq 
{rr 
stringss 
datass 
;ss 
iftt 

(tt 
IOtt 
.tt 

staticTruett 
)tt 
{uu 	
dataww 
=ww 
$strww  
;ww  !
}xx 	
elseyy 
{zz 	
data}} 
=}} 
null}} 
;}} 
}~~ 	
if 

( 
IO 
. 

staticTrue 
) 
{
ÄÄ 	
try
ÅÅ 
{
ÇÇ 
using
ÉÉ 
(
ÉÉ 
	TcpClient
ÉÉ  
	tcpClient
ÉÉ! *
=
ÉÉ+ ,
new
ÉÉ- 0
	TcpClient
ÉÉ1 :
(
ÉÉ: ;
$str
ÉÉ; H
,
ÉÉH I
$num
ÉÉJ N
)
ÉÉN O
)
ÉÉO P
{
ÑÑ 
using
ÖÖ 
(
ÖÖ 
StreamWriter
ÖÖ '
writer
ÖÖ( .
=
ÖÖ/ 0
new
ÖÖ1 4
StreamWriter
ÖÖ5 A
(
ÖÖA B
	tcpClient
ÖÖB K
.
ÖÖK L
	GetStream
ÖÖL U
(
ÖÖU V
)
ÖÖV W
)
ÖÖW X
)
ÖÖX Y
{
ÜÜ 
writer
àà 
.
àà 
	WriteLine
àà (
(
àà( )
data
àà) -
)
àà- .
;
àà. /
}
ââ 
}
ää 
}
ãã 
catch
åå 
(
åå 
IOException
åå 
exceptIO
åå '
)
åå' (
{
çç 
IO
éé 
.
éé 
Logger
éé 
.
éé 
Log
éé 
(
éé 
NLog
éé "
.
éé" #
LogLevel
éé# +
.
éé+ ,
Warn
éé, 0
,
éé0 1
$str
éé2 R
,
ééR S
exceptIO
ééT \
)
éé\ ]
;
éé] ^
}
èè 
}
êê 	
}
ëë 
private
îî 
void
îî 
GoodB2G1
îî 
(
îî 
)
îî 
{
ïï 
string
ññ 
data
ññ 
;
ññ 
if
óó 

(
óó 
IO
óó 
.
óó 

staticTrue
óó 
)
óó 
{
òò 	
using
ôô 
(
ôô 
SecureString
ôô 
	securePwd
ôô  )
=
ôô* +
new
ôô, /
SecureString
ôô0 <
(
ôô< =
)
ôô= >
)
ôô> ?
{
öö 
for
õõ 
(
õõ 
int
õõ 
i
õõ 
=
õõ 
$num
õõ 
;
õõ 
i
õõ  !
<
õõ" #
$str
õõ$ /
.
õõ/ 0
Length
õõ0 6
;
õõ6 7
i
õõ8 9
++
õõ9 ;
)
õõ; <
{
úú 
	securePwd
ûû 
.
ûû 

AppendChar
ûû (
(
ûû( )
$str
ûû) 4
[
ûû4 5
i
ûû5 6
]
ûû6 7
)
ûû7 8
;
ûû8 9
}
üü 
data
¢¢ 
=
¢¢ 
	securePwd
¢¢  
.
¢¢  !
ToString
¢¢! )
(
¢¢) *
)
¢¢* +
;
¢¢+ ,
}
££ 
}
§§ 	
else
•• 
{
¶¶ 	
data
©© 
=
©© 
null
©© 
;
©© 
}
™™ 	
if
´´ 

(
´´ 
IO
´´ 
.
´´ 
staticFalse
´´ 
)
´´ 
{
¨¨ 	
IO
ÆÆ 
.
ÆÆ 
	WriteLine
ÆÆ 
(
ÆÆ 
$str
ÆÆ /
)
ÆÆ/ 0
;
ÆÆ0 1
}
ØØ 	
else
∞∞ 
{
±± 	
try
≤≤ 
{
≥≥ 
using
¥¥ 
(
¥¥ 
	TcpClient
¥¥  
client
¥¥! '
=
¥¥( )
new
¥¥* -
	TcpClient
¥¥. 7
(
¥¥7 8
$str
¥¥8 E
,
¥¥E F
$num
¥¥G K
)
¥¥K L
)
¥¥L M
{
µµ 
using
∂∂ 
(
∂∂ 
	SslStream
∂∂ $
	sslStream
∂∂% .
=
∂∂/ 0
new
∂∂1 4
	SslStream
∂∂5 >
(
∂∂> ?
client
∂∂? E
.
∂∂E F
	GetStream
∂∂F O
(
∂∂O P
)
∂∂P Q
)
∂∂Q R
)
∂∂R S
{
∑∑ 
	sslStream
ππ !
.
ππ! "
Write
ππ" '
(
ππ' (
Encoding
ππ( 0
.
ππ0 1
UTF8
ππ1 5
.
ππ5 6
GetBytes
ππ6 >
(
ππ> ?
data
ππ? C
)
ππC D
)
ππD E
;
ππE F
}
∫∫ 
}
ªª 
}
ºº 
catch
ΩΩ 
(
ΩΩ 
IOException
ΩΩ 
exceptIO
ΩΩ '
)
ΩΩ' (
{
ææ 
IO
øø 
.
øø 
Logger
øø 
.
øø 
Log
øø 
(
øø 
NLog
øø "
.
øø" #
LogLevel
øø# +
.
øø+ ,
Warn
øø, 0
,
øø0 1
$str
øø2 R
,
øøR S
exceptIO
øøT \
)
øø\ ]
;
øø] ^
}
¿¿ 
}
¡¡ 	
}
¬¬ 
private
≈≈ 
void
≈≈ 
GoodB2G2
≈≈ 
(
≈≈ 
)
≈≈ 
{
∆∆ 
string
«« 
data
«« 
;
«« 
if
»» 

(
»» 
IO
»» 
.
»» 

staticTrue
»» 
)
»» 
{
…… 	
using
   
(
   
SecureString
   
	securePwd
    )
=
  * +
new
  , /
SecureString
  0 <
(
  < =
)
  = >
)
  > ?
{
ÀÀ 
for
ÃÃ 
(
ÃÃ 
int
ÃÃ 
i
ÃÃ 
=
ÃÃ 
$num
ÃÃ 
;
ÃÃ 
i
ÃÃ  !
<
ÃÃ" #
$str
ÃÃ$ /
.
ÃÃ/ 0
Length
ÃÃ0 6
;
ÃÃ6 7
i
ÃÃ8 9
++
ÃÃ9 ;
)
ÃÃ; <
{
ÕÕ 
	securePwd
œœ 
.
œœ 

AppendChar
œœ (
(
œœ( )
$str
œœ) 4
[
œœ4 5
i
œœ5 6
]
œœ6 7
)
œœ7 8
;
œœ8 9
}
–– 
data
”” 
=
”” 
	securePwd
””  
.
””  !
ToString
””! )
(
””) *
)
””* +
;
””+ ,
}
‘‘ 
}
’’ 	
else
÷÷ 
{
◊◊ 	
data
⁄⁄ 
=
⁄⁄ 
null
⁄⁄ 
;
⁄⁄ 
}
€€ 	
if
‹‹ 

(
‹‹ 
IO
‹‹ 
.
‹‹ 

staticTrue
‹‹ 
)
‹‹ 
{
›› 	
try
ﬁﬁ 
{
ﬂﬂ 
using
‡‡ 
(
‡‡ 
	TcpClient
‡‡  
client
‡‡! '
=
‡‡( )
new
‡‡* -
	TcpClient
‡‡. 7
(
‡‡7 8
$str
‡‡8 E
,
‡‡E F
$num
‡‡G K
)
‡‡K L
)
‡‡L M
{
·· 
using
‚‚ 
(
‚‚ 
	SslStream
‚‚ $
	sslStream
‚‚% .
=
‚‚/ 0
new
‚‚1 4
	SslStream
‚‚5 >
(
‚‚> ?
client
‚‚? E
.
‚‚E F
	GetStream
‚‚F O
(
‚‚O P
)
‚‚P Q
)
‚‚Q R
)
‚‚R S
{
„„ 
	sslStream
ÂÂ !
.
ÂÂ! "
Write
ÂÂ" '
(
ÂÂ' (
Encoding
ÂÂ( 0
.
ÂÂ0 1
UTF8
ÂÂ1 5
.
ÂÂ5 6
GetBytes
ÂÂ6 >
(
ÂÂ> ?
data
ÂÂ? C
)
ÂÂC D
)
ÂÂD E
;
ÂÂE F
}
ÊÊ 
}
ÁÁ 
}
ËË 
catch
ÈÈ 
(
ÈÈ 
IOException
ÈÈ 
exceptIO
ÈÈ '
)
ÈÈ' (
{
ÍÍ 
IO
ÎÎ 
.
ÎÎ 
Logger
ÎÎ 
.
ÎÎ 
Log
ÎÎ 
(
ÎÎ 
NLog
ÎÎ "
.
ÎÎ" #
LogLevel
ÎÎ# +
.
ÎÎ+ ,
Warn
ÎÎ, 0
,
ÎÎ0 1
$str
ÎÎ2 R
,
ÎÎR S
exceptIO
ÎÎT \
)
ÎÎ\ ]
;
ÎÎ] ^
}
ÏÏ 
}
ÌÌ 	
}
ÓÓ 
public
 

override
 
void
 
Good
 
(
 
)
 
{
ÒÒ 
GoodG2B1
ÚÚ 
(
ÚÚ 
)
ÚÚ 
;
ÚÚ 
GoodG2B2
ÛÛ 
(
ÛÛ 
)
ÛÛ 
;
ÛÛ 
GoodB2G1
ÙÙ 
(
ÙÙ 
)
ÙÙ 
;
ÙÙ 
GoodB2G2
ıı 
(
ıı 
)
ıı 
;
ıı 
}
ˆˆ 
}¯¯ 
}˘˘ Ãi
≠C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_11.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 7
+CWE319_Cleartext_Tx_Sensitive_Info__send_11 1
:2 3
AbstractTestCase4 D
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
data## 
;## 
if$$ 

($$ 
IO$$ 
.$$ 
StaticReturnsTrue$$  
($$  !
)$$! "
)$$" #
{%% 	
using&& 
(&& 
SecureString&& 
	securePwd&&  )
=&&* +
new&&, /
SecureString&&0 <
(&&< =
)&&= >
)&&> ?
{'' 
for(( 
((( 
int(( 
i(( 
=(( 
$num(( 
;(( 
i((  !
<((" #
$str(($ /
.((/ 0
Length((0 6
;((6 7
i((8 9
++((9 ;
)((; <
{)) 
	securePwd++ 
.++ 

AppendChar++ (
(++( )
$str++) 4
[++4 5
i++5 6
]++6 7
)++7 8
;++8 9
},, 
data// 
=// 
	securePwd//  
.//  !
ToString//! )
(//) *
)//* +
;//+ ,
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88
 
IO88 
.88 
StaticReturnsTrue88 
(88  
)88  !
)88! "
{99 	
try:: 
{;; 
using<< 
(<< 
	TcpClient<<  
	tcpClient<<! *
=<<+ ,
new<<- 0
	TcpClient<<1 :
(<<: ;
$str<<; H
,<<H I
$num<<J N
)<<N O
)<<O P
{== 
using>> 
(>> 
StreamWriter>> '
writer>>( .
=>>/ 0
new>>1 4
StreamWriter>>5 A
(>>A B
	tcpClient>>B K
.>>K L
	GetStream>>L U
(>>U V
)>>V W
)>>W X
)>>X Y
{?? 
writerAA 
.AA 
	WriteLineAA (
(AA( )
dataAA) -
)AA- .
;AA. /
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE 
exceptIOEE '
)EE' (
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG 
(GG 
NLogGG "
.GG" #
LogLevelGG# +
.GG+ ,
WarnGG, 0
,GG0 1
$strGG2 R
,GGR S
exceptIOGGT \
)GG\ ]
;GG] ^
}HH 
}II 	
}JJ 
privateNN 
voidNN 
GoodG2B1NN 
(NN 
)NN 
{OO 
stringPP 
dataPP 
;PP 
ifQQ 

(QQ 
IOQQ 
.QQ 
StaticReturnsFalseQQ !
(QQ! "
)QQ" #
)QQ# $
{RR 	
dataUU 
=UU 
nullUU 
;UU 
}VV 	
elseWW 
{XX 	
dataZZ 
=ZZ 
$strZZ  
;ZZ  !
}[[ 	
if\\ 

(\\ 
IO\\ 
.\\ 
StaticReturnsTrue\\  
(\\  !
)\\! "
)\\" #
{]] 	
try^^ 
{__ 
using`` 
(`` 
	TcpClient``  
	tcpClient``! *
=``+ ,
new``- 0
	TcpClient``1 :
(``: ;
$str``; H
,``H I
$num``J N
)``N O
)``O P
{aa 
usingbb 
(bb 
StreamWriterbb '
writerbb( .
=bb/ 0
newbb1 4
StreamWriterbb5 A
(bbA B
	tcpClientbbB K
.bbK L
	GetStreambbL U
(bbU V
)bbV W
)bbW X
)bbX Y
{cc 
writeree 
.ee 
	WriteLineee (
(ee( )
dataee) -
)ee- .
;ee. /
}ff 
}gg 
}hh 
catchii 
(ii 
IOExceptionii 
exceptIOii '
)ii' (
{jj 
IOkk 
.kk 
Loggerkk 
.kk 
Logkk 
(kk 
NLogkk "
.kk" #
LogLevelkk# +
.kk+ ,
Warnkk, 0
,kk0 1
$strkk2 R
,kkR S
exceptIOkkT \
)kk\ ]
;kk] ^
}ll 
}mm 	
}nn 
privateqq 
voidqq 
GoodG2B2qq 
(qq 
)qq 
{rr 
stringss 
datass 
;ss 
iftt 

(tt 
IOtt 
.tt 
StaticReturnsTruett  
(tt  !
)tt! "
)tt" #
{uu 	
dataww 
=ww 
$strww  
;ww  !
}xx 	
elseyy 
{zz 	
data}} 
=}} 
null}} 
;}} 
}~~ 	
if 

( 
IO 
. 
StaticReturnsTrue  
(  !
)! "
)" #
{
ÄÄ 	
try
ÅÅ 
{
ÇÇ 
using
ÉÉ 
(
ÉÉ 
	TcpClient
ÉÉ  
	tcpClient
ÉÉ! *
=
ÉÉ+ ,
new
ÉÉ- 0
	TcpClient
ÉÉ1 :
(
ÉÉ: ;
$str
ÉÉ; H
,
ÉÉH I
$num
ÉÉJ N
)
ÉÉN O
)
ÉÉO P
{
ÑÑ 
using
ÖÖ 
(
ÖÖ 
StreamWriter
ÖÖ '
writer
ÖÖ( .
=
ÖÖ/ 0
new
ÖÖ1 4
StreamWriter
ÖÖ5 A
(
ÖÖA B
	tcpClient
ÖÖB K
.
ÖÖK L
	GetStream
ÖÖL U
(
ÖÖU V
)
ÖÖV W
)
ÖÖW X
)
ÖÖX Y
{
ÜÜ 
writer
àà 
.
àà 
	WriteLine
àà (
(
àà( )
data
àà) -
)
àà- .
;
àà. /
}
ââ 
}
ää 
}
ãã 
catch
åå 
(
åå 
IOException
åå 
exceptIO
åå '
)
åå' (
{
çç 
IO
éé 
.
éé 
Logger
éé 
.
éé 
Log
éé 
(
éé 
NLog
éé "
.
éé" #
LogLevel
éé# +
.
éé+ ,
Warn
éé, 0
,
éé0 1
$str
éé2 R
,
ééR S
exceptIO
ééT \
)
éé\ ]
;
éé] ^
}
èè 
}
êê 	
}
ëë 
private
îî 
void
îî 
GoodB2G1
îî 
(
îî 
)
îî 
{
ïï 
string
ññ 
data
ññ 
;
ññ 
if
óó 

(
óó 
IO
óó 
.
óó 
StaticReturnsTrue
óó  
(
óó  !
)
óó! "
)
óó" #
{
òò 	
using
ôô 
(
ôô 
SecureString
ôô 
	securePwd
ôô  )
=
ôô* +
new
ôô, /
SecureString
ôô0 <
(
ôô< =
)
ôô= >
)
ôô> ?
{
öö 
for
õõ 
(
õõ 
int
õõ 
i
õõ 
=
õõ 
$num
õõ 
;
õõ 
i
õõ  !
<
õõ" #
$str
õõ$ /
.
õõ/ 0
Length
õõ0 6
;
õõ6 7
i
õõ8 9
++
õõ9 ;
)
õõ; <
{
úú 
	securePwd
ûû 
.
ûû 

AppendChar
ûû (
(
ûû( )
$str
ûû) 4
[
ûû4 5
i
ûû5 6
]
ûû6 7
)
ûû7 8
;
ûû8 9
}
üü 
data
¢¢ 
=
¢¢ 
	securePwd
¢¢  
.
¢¢  !
ToString
¢¢! )
(
¢¢) *
)
¢¢* +
;
¢¢+ ,
}
££ 
}
§§ 	
else
•• 
{
¶¶ 	
data
©© 
=
©© 
null
©© 
;
©© 
}
™™ 	
if
´´ 

(
´´ 
IO
´´ 
.
´´  
StaticReturnsFalse
´´ !
(
´´! "
)
´´" #
)
´´# $
{
¨¨ 	
IO
ÆÆ 
.
ÆÆ 
	WriteLine
ÆÆ 
(
ÆÆ 
$str
ÆÆ /
)
ÆÆ/ 0
;
ÆÆ0 1
}
ØØ 	
else
∞∞ 
{
±± 	
try
≤≤ 
{
≥≥ 
using
¥¥ 
(
¥¥ 
	TcpClient
¥¥  
client
¥¥! '
=
¥¥( )
new
¥¥* -
	TcpClient
¥¥. 7
(
¥¥7 8
$str
¥¥8 E
,
¥¥E F
$num
¥¥G K
)
¥¥K L
)
¥¥L M
{
µµ 
using
∂∂ 
(
∂∂ 
	SslStream
∂∂ $
	sslStream
∂∂% .
=
∂∂/ 0
new
∂∂1 4
	SslStream
∂∂5 >
(
∂∂> ?
client
∂∂? E
.
∂∂E F
	GetStream
∂∂F O
(
∂∂O P
)
∂∂P Q
)
∂∂Q R
)
∂∂R S
{
∑∑ 
	sslStream
ππ !
.
ππ! "
Write
ππ" '
(
ππ' (
Encoding
ππ( 0
.
ππ0 1
UTF8
ππ1 5
.
ππ5 6
GetBytes
ππ6 >
(
ππ> ?
data
ππ? C
)
ππC D
)
ππD E
;
ππE F
}
∫∫ 
}
ªª 
}
ºº 
catch
ΩΩ 
(
ΩΩ 
IOException
ΩΩ 
exceptIO
ΩΩ '
)
ΩΩ' (
{
ææ 
IO
øø 
.
øø 
Logger
øø 
.
øø 
Log
øø 
(
øø 
NLog
øø "
.
øø" #
LogLevel
øø# +
.
øø+ ,
Warn
øø, 0
,
øø0 1
$str
øø2 R
,
øøR S
exceptIO
øøT \
)
øø\ ]
;
øø] ^
}
¿¿ 
}
¡¡ 	
}
¬¬ 
private
≈≈ 
void
≈≈ 
GoodB2G2
≈≈ 
(
≈≈ 
)
≈≈ 
{
∆∆ 
string
«« 
data
«« 
;
«« 
if
»» 

(
»» 
IO
»» 
.
»» 
StaticReturnsTrue
»»  
(
»»  !
)
»»! "
)
»»" #
{
…… 	
using
   
(
   
SecureString
   
	securePwd
    )
=
  * +
new
  , /
SecureString
  0 <
(
  < =
)
  = >
)
  > ?
{
ÀÀ 
for
ÃÃ 
(
ÃÃ 
int
ÃÃ 
i
ÃÃ 
=
ÃÃ 
$num
ÃÃ 
;
ÃÃ 
i
ÃÃ  !
<
ÃÃ" #
$str
ÃÃ$ /
.
ÃÃ/ 0
Length
ÃÃ0 6
;
ÃÃ6 7
i
ÃÃ8 9
++
ÃÃ9 ;
)
ÃÃ; <
{
ÕÕ 
	securePwd
œœ 
.
œœ 

AppendChar
œœ (
(
œœ( )
$str
œœ) 4
[
œœ4 5
i
œœ5 6
]
œœ6 7
)
œœ7 8
;
œœ8 9
}
–– 
data
”” 
=
”” 
	securePwd
””  
.
””  !
ToString
””! )
(
””) *
)
””* +
;
””+ ,
}
‘‘ 
}
’’ 	
else
÷÷ 
{
◊◊ 	
data
⁄⁄ 
=
⁄⁄ 
null
⁄⁄ 
;
⁄⁄ 
}
€€ 	
if
‹‹ 

(
‹‹ 
IO
‹‹ 
.
‹‹ 
StaticReturnsTrue
‹‹  
(
‹‹  !
)
‹‹! "
)
‹‹" #
{
›› 	
try
ﬁﬁ 
{
ﬂﬂ 
using
‡‡ 
(
‡‡ 
	TcpClient
‡‡  
client
‡‡! '
=
‡‡( )
new
‡‡* -
	TcpClient
‡‡. 7
(
‡‡7 8
$str
‡‡8 E
,
‡‡E F
$num
‡‡G K
)
‡‡K L
)
‡‡L M
{
·· 
using
‚‚ 
(
‚‚ 
	SslStream
‚‚ $
	sslStream
‚‚% .
=
‚‚/ 0
new
‚‚1 4
	SslStream
‚‚5 >
(
‚‚> ?
client
‚‚? E
.
‚‚E F
	GetStream
‚‚F O
(
‚‚O P
)
‚‚P Q
)
‚‚Q R
)
‚‚R S
{
„„ 
	sslStream
ÂÂ !
.
ÂÂ! "
Write
ÂÂ" '
(
ÂÂ' (
Encoding
ÂÂ( 0
.
ÂÂ0 1
UTF8
ÂÂ1 5
.
ÂÂ5 6
GetBytes
ÂÂ6 >
(
ÂÂ> ?
data
ÂÂ? C
)
ÂÂC D
)
ÂÂD E
;
ÂÂE F
}
ÊÊ 
}
ÁÁ 
}
ËË 
catch
ÈÈ 
(
ÈÈ 
IOException
ÈÈ 
exceptIO
ÈÈ '
)
ÈÈ' (
{
ÍÍ 
IO
ÎÎ 
.
ÎÎ 
Logger
ÎÎ 
.
ÎÎ 
Log
ÎÎ 
(
ÎÎ 
NLog
ÎÎ "
.
ÎÎ" #
LogLevel
ÎÎ# +
.
ÎÎ+ ,
Warn
ÎÎ, 0
,
ÎÎ0 1
$str
ÎÎ2 R
,
ÎÎR S
exceptIO
ÎÎT \
)
ÎÎ\ ]
;
ÎÎ] ^
}
ÏÏ 
}
ÌÌ 	
}
ÓÓ 
public
 

override
 
void
 
Good
 
(
 
)
 
{
ÒÒ 
GoodG2B1
ÚÚ 
(
ÚÚ 
)
ÚÚ 
;
ÚÚ 
GoodG2B2
ÛÛ 
(
ÛÛ 
)
ÛÛ 
;
ÛÛ 
GoodB2G1
ÙÙ 
(
ÙÙ 
)
ÙÙ 
;
ÙÙ 
GoodB2G2
ıı 
(
ıı 
)
ıı 
;
ıı 
}
ˆˆ 
}¯¯ 
}˘˘ Íf
≠C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_12.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 7
+CWE319_Cleartext_Tx_Sensitive_Info__send_12 1
:2 3
AbstractTestCase4 D
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
data## 
;## 
if$$ 

($$
 
IO$$ 
.$$ $
StaticReturnsTrueOrFalse$$ &
($$& '
)$$' (
)$$( )
{%% 	
using&& 
(&& 
SecureString&& 
	securePwd&&  )
=&&* +
new&&, /
SecureString&&0 <
(&&< =
)&&= >
)&&> ?
{'' 
for(( 
((( 
int(( 
i(( 
=(( 
$num(( 
;(( 
i((  !
<((" #
$str(($ /
.((/ 0
Length((0 6
;((6 7
i((8 9
++((9 ;
)((; <
{)) 
	securePwd++ 
.++ 

AppendChar++ (
(++( )
$str++) 4
[++4 5
i++5 6
]++6 7
)++7 8
;++8 9
},, 
data// 
=// 
	securePwd//  
.//  !
ToString//! )
(//) *
)//* +
;//+ ,
}00 
}11 	
else22 
{33 	
data55 
=55 
$str55  
;55  !
}66 	
if77 

(77
 
IO77 
.77 $
StaticReturnsTrueOrFalse77 &
(77& '
)77' (
)77( )
{88 	
try99 
{:: 
using;; 
(;; 
	TcpClient;;  
	tcpClient;;! *
=;;+ ,
new;;- 0
	TcpClient;;1 :
(;;: ;
$str;;; H
,;;H I
$num;;J N
);;N O
);;O P
{<< 
using== 
(== 
StreamWriter== '
writer==( .
===/ 0
new==1 4
StreamWriter==5 A
(==A B
	tcpClient==B K
.==K L
	GetStream==L U
(==U V
)==V W
)==W X
)==X Y
{>> 
writer@@ 
.@@ 
	WriteLine@@ (
(@@( )
data@@) -
)@@- .
;@@. /
}AA 
}BB 
}CC 
catchDD 
(DD 
IOExceptionDD 
exceptIODD '
)DD' (
{EE 
IOFF 
.FF 
LoggerFF 
.FF 
LogFF 
(FF 
NLogFF "
.FF" #
LogLevelFF# +
.FF+ ,
WarnFF, 0
,FF0 1
$strFF2 R
,FFR S
exceptIOFFT \
)FF\ ]
;FF] ^
}GG 
}HH 	
elseII 
{JJ 	
tryKK 
{LL 
usingMM 
(MM 
	TcpClientMM  
clientMM! '
=MM( )
newMM* -
	TcpClientMM. 7
(MM7 8
$strMM8 E
,MME F
$numMMG K
)MMK L
)MML M
{NN 
usingOO 
(OO 
	SslStreamOO $
	sslStreamOO% .
=OO/ 0
newOO1 4
	SslStreamOO5 >
(OO> ?
clientOO? E
.OOE F
	GetStreamOOF O
(OOO P
)OOP Q
)OOQ R
)OOR S
{PP 
	sslStreamRR !
.RR! "
WriteRR" '
(RR' (
EncodingRR( 0
.RR0 1
UTF8RR1 5
.RR5 6
GetBytesRR6 >
(RR> ?
dataRR? C
)RRC D
)RRD E
;RRE F
}SS 
}TT 
}UU 
catchVV 
(VV 
IOExceptionVV 
exceptIOVV '
)VV' (
{WW 
IOXX 
.XX 
LoggerXX 
.XX 
LogXX 
(XX 
NLogXX "
.XX" #
LogLevelXX# +
.XX+ ,
WarnXX, 0
,XX0 1
$strXX2 R
,XXR S
exceptIOXXT \
)XX\ ]
;XX] ^
}YY 
}ZZ 	
}[[ 
private`` 
void`` 
GoodG2B`` 
(`` 
)`` 
{aa 
stringbb 
databb 
;bb 
ifcc 

(cc
 
IOcc 
.cc $
StaticReturnsTrueOrFalsecc &
(cc& '
)cc' (
)cc( )
{dd 	
dataff 
=ff 
$strff  
;ff  !
}gg 	
elsehh 
{ii 	
datakk 
=kk 
$strkk  
;kk  !
}ll 	
ifmm 

(mm
 
IOmm 
.mm $
StaticReturnsTrueOrFalsemm &
(mm& '
)mm' (
)mm( )
{nn 	
tryoo 
{pp 
usingqq 
(qq 
	TcpClientqq  
	tcpClientqq! *
=qq+ ,
newqq- 0
	TcpClientqq1 :
(qq: ;
$strqq; H
,qqH I
$numqqJ N
)qqN O
)qqO P
{rr 
usingss 
(ss 
StreamWriterss '
writerss( .
=ss/ 0
newss1 4
StreamWriterss5 A
(ssA B
	tcpClientssB K
.ssK L
	GetStreamssL U
(ssU V
)ssV W
)ssW X
)ssX Y
{tt 
writervv 
.vv 
	WriteLinevv (
(vv( )
datavv) -
)vv- .
;vv. /
}ww 
}xx 
}yy 
catchzz 
(zz 
IOExceptionzz 
exceptIOzz '
)zz' (
{{{ 
IO|| 
.|| 
Logger|| 
.|| 
Log|| 
(|| 
NLog|| "
.||" #
LogLevel||# +
.||+ ,
Warn||, 0
,||0 1
$str||2 R
,||R S
exceptIO||T \
)||\ ]
;||] ^
}}} 
}~~ 	
else 
{
ÄÄ 	
try
ÅÅ 
{
ÇÇ 
using
ÉÉ 
(
ÉÉ 
	TcpClient
ÉÉ  
	tcpClient
ÉÉ! *
=
ÉÉ+ ,
new
ÉÉ- 0
	TcpClient
ÉÉ1 :
(
ÉÉ: ;
$str
ÉÉ; H
,
ÉÉH I
$num
ÉÉJ N
)
ÉÉN O
)
ÉÉO P
{
ÑÑ 
using
ÖÖ 
(
ÖÖ 
StreamWriter
ÖÖ '
writer
ÖÖ( .
=
ÖÖ/ 0
new
ÖÖ1 4
StreamWriter
ÖÖ5 A
(
ÖÖA B
	tcpClient
ÖÖB K
.
ÖÖK L
	GetStream
ÖÖL U
(
ÖÖU V
)
ÖÖV W
)
ÖÖW X
)
ÖÖX Y
{
ÜÜ 
writer
àà 
.
àà 
	WriteLine
àà (
(
àà( )
data
àà) -
)
àà- .
;
àà. /
}
ââ 
}
ää 
}
ãã 
catch
åå 
(
åå 
IOException
åå 
exceptIO
åå '
)
åå' (
{
çç 
IO
éé 
.
éé 
Logger
éé 
.
éé 
Log
éé 
(
éé 
NLog
éé "
.
éé" #
LogLevel
éé# +
.
éé+ ,
Warn
éé, 0
,
éé0 1
$str
éé2 R
,
ééR S
exceptIO
ééT \
)
éé\ ]
;
éé] ^
}
èè 
}
êê 	
}
ëë 
private
ïï 
void
ïï 
GoodB2G
ïï 
(
ïï 
)
ïï 
{
ññ 
string
óó 
data
óó 
;
óó 
if
òò 

(
òò
 
IO
òò 
.
òò &
StaticReturnsTrueOrFalse
òò &
(
òò& '
)
òò' (
)
òò( )
{
ôô 	
using
öö 
(
öö 
SecureString
öö 
	securePwd
öö  )
=
öö* +
new
öö, /
SecureString
öö0 <
(
öö< =
)
öö= >
)
öö> ?
{
õõ 
for
úú 
(
úú 
int
úú 
i
úú 
=
úú 
$num
úú 
;
úú 
i
úú  !
<
úú" #
$str
úú$ /
.
úú/ 0
Length
úú0 6
;
úú6 7
i
úú8 9
++
úú9 ;
)
úú; <
{
ùù 
	securePwd
üü 
.
üü 

AppendChar
üü (
(
üü( )
$str
üü) 4
[
üü4 5
i
üü5 6
]
üü6 7
)
üü7 8
;
üü8 9
}
†† 
data
££ 
=
££ 
	securePwd
££  
.
££  !
ToString
££! )
(
££) *
)
££* +
;
££+ ,
}
§§ 
}
•• 	
else
¶¶ 
{
ßß 	
using
®® 
(
®® 
SecureString
®® 
	securePwd
®®  )
=
®®* +
new
®®, /
SecureString
®®0 <
(
®®< =
)
®®= >
)
®®> ?
{
©© 
for
™™ 
(
™™ 
int
™™ 
i
™™ 
=
™™ 
$num
™™ 
;
™™ 
i
™™  !
<
™™" #
$str
™™$ /
.
™™/ 0
Length
™™0 6
;
™™6 7
i
™™8 9
++
™™9 ;
)
™™; <
{
´´ 
	securePwd
≠≠ 
.
≠≠ 

AppendChar
≠≠ (
(
≠≠( )
$str
≠≠) 4
[
≠≠4 5
i
≠≠5 6
]
≠≠6 7
)
≠≠7 8
;
≠≠8 9
}
ÆÆ 
data
±± 
=
±± 
	securePwd
±±  
.
±±  !
ToString
±±! )
(
±±) *
)
±±* +
;
±±+ ,
}
≤≤ 
}
≥≥ 	
if
¥¥ 

(
¥¥
 
IO
¥¥ 
.
¥¥ &
StaticReturnsTrueOrFalse
¥¥ &
(
¥¥& '
)
¥¥' (
)
¥¥( )
{
µµ 	
try
∂∂ 
{
∑∑ 
using
∏∏ 
(
∏∏ 
	TcpClient
∏∏  
client
∏∏! '
=
∏∏( )
new
∏∏* -
	TcpClient
∏∏. 7
(
∏∏7 8
$str
∏∏8 E
,
∏∏E F
$num
∏∏G K
)
∏∏K L
)
∏∏L M
{
ππ 
using
∫∫ 
(
∫∫ 
	SslStream
∫∫ $
	sslStream
∫∫% .
=
∫∫/ 0
new
∫∫1 4
	SslStream
∫∫5 >
(
∫∫> ?
client
∫∫? E
.
∫∫E F
	GetStream
∫∫F O
(
∫∫O P
)
∫∫P Q
)
∫∫Q R
)
∫∫R S
{
ªª 
	sslStream
ΩΩ !
.
ΩΩ! "
Write
ΩΩ" '
(
ΩΩ' (
Encoding
ΩΩ( 0
.
ΩΩ0 1
UTF8
ΩΩ1 5
.
ΩΩ5 6
GetBytes
ΩΩ6 >
(
ΩΩ> ?
data
ΩΩ? C
)
ΩΩC D
)
ΩΩD E
;
ΩΩE F
}
ææ 
}
øø 
}
¿¿ 
catch
¡¡ 
(
¡¡ 
IOException
¡¡ 
exceptIO
¡¡ '
)
¡¡' (
{
¬¬ 
IO
√√ 
.
√√ 
Logger
√√ 
.
√√ 
Log
√√ 
(
√√ 
NLog
√√ "
.
√√" #
LogLevel
√√# +
.
√√+ ,
Warn
√√, 0
,
√√0 1
$str
√√2 R
,
√√R S
exceptIO
√√T \
)
√√\ ]
;
√√] ^
}
ƒƒ 
}
≈≈ 	
else
∆∆ 
{
«« 	
try
»» 
{
…… 
using
   
(
   
	TcpClient
    
client
  ! '
=
  ( )
new
  * -
	TcpClient
  . 7
(
  7 8
$str
  8 E
,
  E F
$num
  G K
)
  K L
)
  L M
{
ÀÀ 
using
ÃÃ 
(
ÃÃ 
	SslStream
ÃÃ $
	sslStream
ÃÃ% .
=
ÃÃ/ 0
new
ÃÃ1 4
	SslStream
ÃÃ5 >
(
ÃÃ> ?
client
ÃÃ? E
.
ÃÃE F
	GetStream
ÃÃF O
(
ÃÃO P
)
ÃÃP Q
)
ÃÃQ R
)
ÃÃR S
{
ÕÕ 
	sslStream
œœ !
.
œœ! "
Write
œœ" '
(
œœ' (
Encoding
œœ( 0
.
œœ0 1
UTF8
œœ1 5
.
œœ5 6
GetBytes
œœ6 >
(
œœ> ?
data
œœ? C
)
œœC D
)
œœD E
;
œœE F
}
–– 
}
—— 
}
““ 
catch
”” 
(
”” 
IOException
”” 
exceptIO
”” '
)
””' (
{
‘‘ 
IO
’’ 
.
’’ 
Logger
’’ 
.
’’ 
Log
’’ 
(
’’ 
NLog
’’ "
.
’’" #
LogLevel
’’# +
.
’’+ ,
Warn
’’, 0
,
’’0 1
$str
’’2 R
,
’’R S
exceptIO
’’T \
)
’’\ ]
;
’’] ^
}
÷÷ 
}
◊◊ 	
}
ÿÿ 
public
⁄⁄ 

override
⁄⁄ 
void
⁄⁄ 
Good
⁄⁄ 
(
⁄⁄ 
)
⁄⁄ 
{
‹‹ 
GoodG2B
›› 
(
›› 
)
›› 
;
›› 
GoodB2G
ﬁﬁ 
(
ﬁﬁ 
)
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 
}·· 
}‚‚ êj
≠C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_13.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 7
+CWE319_Cleartext_Tx_Sensitive_Info__send_13 1
:2 3
AbstractTestCase4 D
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
data## 
;## 
if$$ 

($$ 
IO$$ 
.$$  
STATIC_READONLY_FIVE$$ #
==$$# %
$num$$% &
)$$& '
{%% 	
using&& 
(&& 
SecureString&& 
	securePwd&&  )
=&&* +
new&&, /
SecureString&&0 <
(&&< =
)&&= >
)&&> ?
{'' 
for(( 
((( 
int(( 
i(( 
=(( 
$num(( 
;(( 
i((  !
<((" #
$str(($ /
.((/ 0
Length((0 6
;((6 7
i((8 9
++((9 ;
)((; <
{)) 
	securePwd++ 
.++ 

AppendChar++ (
(++( )
$str++) 4
[++4 5
i++5 6
]++6 7
)++7 8
;++8 9
},, 
data// 
=// 
	securePwd//  
.//  !
ToString//! )
(//) *
)//* +
;//+ ,
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
IO88 
.88  
STATIC_READONLY_FIVE88 #
==88# %
$num88% &
)88& '
{99 	
try:: 
{;; 
using<< 
(<< 
	TcpClient<<  
	tcpClient<<! *
=<<+ ,
new<<- 0
	TcpClient<<1 :
(<<: ;
$str<<; H
,<<H I
$num<<J N
)<<N O
)<<O P
{== 
using>> 
(>> 
StreamWriter>> '
writer>>( .
=>>/ 0
new>>1 4
StreamWriter>>5 A
(>>A B
	tcpClient>>B K
.>>K L
	GetStream>>L U
(>>U V
)>>V W
)>>W X
)>>X Y
{?? 
writerAA 
.AA 
	WriteLineAA (
(AA( )
dataAA) -
)AA- .
;AA. /
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE 
exceptIOEE '
)EE' (
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG 
(GG 
NLogGG "
.GG" #
LogLevelGG# +
.GG+ ,
WarnGG, 0
,GG0 1
$strGG2 R
,GGR S
exceptIOGGT \
)GG\ ]
;GG] ^
}HH 
}II 	
}JJ 
privateNN 
voidNN 
GoodG2B1NN 
(NN 
)NN 
{OO 
stringPP 
dataPP 
;PP 
ifQQ 

(QQ 
IOQQ 
.QQ  
STATIC_READONLY_FIVEQQ #
!=QQ# %
$numQQ% &
)QQ& '
{RR 	
dataUU 
=UU 
nullUU 
;UU 
}VV 	
elseWW 
{XX 	
dataZZ 
=ZZ 
$strZZ  
;ZZ  !
}[[ 	
if\\ 

(\\ 
IO\\ 
.\\  
STATIC_READONLY_FIVE\\ #
==\\# %
$num\\% &
)\\& '
{]] 	
try^^ 
{__ 
using`` 
(`` 
	TcpClient``  
	tcpClient``! *
=``+ ,
new``- 0
	TcpClient``1 :
(``: ;
$str``; H
,``H I
$num``J N
)``N O
)``O P
{aa 
usingbb 
(bb 
StreamWriterbb '
writerbb( .
=bb/ 0
newbb1 4
StreamWriterbb5 A
(bbA B
	tcpClientbbB K
.bbK L
	GetStreambbL U
(bbU V
)bbV W
)bbW X
)bbX Y
{cc 
writeree 
.ee 
	WriteLineee (
(ee( )
dataee) -
)ee- .
;ee. /
}ff 
}gg 
}hh 
catchii 
(ii 
IOExceptionii 
exceptIOii '
)ii' (
{jj 
IOkk 
.kk 
Loggerkk 
.kk 
Logkk 
(kk 
NLogkk "
.kk" #
LogLevelkk# +
.kk+ ,
Warnkk, 0
,kk0 1
$strkk2 R
,kkR S
exceptIOkkT \
)kk\ ]
;kk] ^
}ll 
}mm 	
}nn 
privateqq 
voidqq 
GoodG2B2qq 
(qq 
)qq 
{rr 
stringss 
datass 
;ss 
iftt 

(tt 
IOtt 
.tt  
STATIC_READONLY_FIVEtt #
==tt# %
$numtt% &
)tt& '
{uu 	
dataww 
=ww 
$strww  
;ww  !
}xx 	
elseyy 
{zz 	
data}} 
=}} 
null}} 
;}} 
}~~ 	
if 

( 
IO 
.  
STATIC_READONLY_FIVE #
==# %
$num% &
)& '
{
ÄÄ 	
try
ÅÅ 
{
ÇÇ 
using
ÉÉ 
(
ÉÉ 
	TcpClient
ÉÉ  
	tcpClient
ÉÉ! *
=
ÉÉ+ ,
new
ÉÉ- 0
	TcpClient
ÉÉ1 :
(
ÉÉ: ;
$str
ÉÉ; H
,
ÉÉH I
$num
ÉÉJ N
)
ÉÉN O
)
ÉÉO P
{
ÑÑ 
using
ÖÖ 
(
ÖÖ 
StreamWriter
ÖÖ '
writer
ÖÖ( .
=
ÖÖ/ 0
new
ÖÖ1 4
StreamWriter
ÖÖ5 A
(
ÖÖA B
	tcpClient
ÖÖB K
.
ÖÖK L
	GetStream
ÖÖL U
(
ÖÖU V
)
ÖÖV W
)
ÖÖW X
)
ÖÖX Y
{
ÜÜ 
writer
àà 
.
àà 
	WriteLine
àà (
(
àà( )
data
àà) -
)
àà- .
;
àà. /
}
ââ 
}
ää 
}
ãã 
catch
åå 
(
åå 
IOException
åå 
exceptIO
åå '
)
åå' (
{
çç 
IO
éé 
.
éé 
Logger
éé 
.
éé 
Log
éé 
(
éé 
NLog
éé "
.
éé" #
LogLevel
éé# +
.
éé+ ,
Warn
éé, 0
,
éé0 1
$str
éé2 R
,
ééR S
exceptIO
ééT \
)
éé\ ]
;
éé] ^
}
èè 
}
êê 	
}
ëë 
private
îî 
void
îî 
GoodB2G1
îî 
(
îî 
)
îî 
{
ïï 
string
ññ 
data
ññ 
;
ññ 
if
óó 

(
óó 
IO
óó 
.
óó "
STATIC_READONLY_FIVE
óó #
==
óó# %
$num
óó% &
)
óó& '
{
òò 	
using
ôô 
(
ôô 
SecureString
ôô 
	securePwd
ôô  )
=
ôô* +
new
ôô, /
SecureString
ôô0 <
(
ôô< =
)
ôô= >
)
ôô> ?
{
öö 
for
õõ 
(
õõ 
int
õõ 
i
õõ 
=
õõ 
$num
õõ 
;
õõ 
i
õõ  !
<
õõ" #
$str
õõ$ /
.
õõ/ 0
Length
õõ0 6
;
õõ6 7
i
õõ8 9
++
õõ9 ;
)
õõ; <
{
úú 
	securePwd
ûû 
.
ûû 

AppendChar
ûû (
(
ûû( )
$str
ûû) 4
[
ûû4 5
i
ûû5 6
]
ûû6 7
)
ûû7 8
;
ûû8 9
}
üü 
data
¢¢ 
=
¢¢ 
	securePwd
¢¢  
.
¢¢  !
ToString
¢¢! )
(
¢¢) *
)
¢¢* +
;
¢¢+ ,
}
££ 
}
§§ 	
else
•• 
{
¶¶ 	
data
©© 
=
©© 
null
©© 
;
©© 
}
™™ 	
if
´´ 

(
´´ 
IO
´´ 
.
´´ "
STATIC_READONLY_FIVE
´´ #
!=
´´# %
$num
´´% &
)
´´& '
{
¨¨ 	
IO
ÆÆ 
.
ÆÆ 
	WriteLine
ÆÆ 
(
ÆÆ 
$str
ÆÆ /
)
ÆÆ/ 0
;
ÆÆ0 1
}
ØØ 	
else
∞∞ 
{
±± 	
try
≤≤ 
{
≥≥ 
using
¥¥ 
(
¥¥ 
	TcpClient
¥¥  
client
¥¥! '
=
¥¥( )
new
¥¥* -
	TcpClient
¥¥. 7
(
¥¥7 8
$str
¥¥8 E
,
¥¥E F
$num
¥¥G K
)
¥¥K L
)
¥¥L M
{
µµ 
using
∂∂ 
(
∂∂ 
	SslStream
∂∂ $
	sslStream
∂∂% .
=
∂∂/ 0
new
∂∂1 4
	SslStream
∂∂5 >
(
∂∂> ?
client
∂∂? E
.
∂∂E F
	GetStream
∂∂F O
(
∂∂O P
)
∂∂P Q
)
∂∂Q R
)
∂∂R S
{
∑∑ 
	sslStream
ππ !
.
ππ! "
Write
ππ" '
(
ππ' (
Encoding
ππ( 0
.
ππ0 1
UTF8
ππ1 5
.
ππ5 6
GetBytes
ππ6 >
(
ππ> ?
data
ππ? C
)
ππC D
)
ππD E
;
ππE F
}
∫∫ 
}
ªª 
}
ºº 
catch
ΩΩ 
(
ΩΩ 
IOException
ΩΩ 
exceptIO
ΩΩ '
)
ΩΩ' (
{
ææ 
IO
øø 
.
øø 
Logger
øø 
.
øø 
Log
øø 
(
øø 
NLog
øø "
.
øø" #
LogLevel
øø# +
.
øø+ ,
Warn
øø, 0
,
øø0 1
$str
øø2 R
,
øøR S
exceptIO
øøT \
)
øø\ ]
;
øø] ^
}
¿¿ 
}
¡¡ 	
}
¬¬ 
private
≈≈ 
void
≈≈ 
GoodB2G2
≈≈ 
(
≈≈ 
)
≈≈ 
{
∆∆ 
string
«« 
data
«« 
;
«« 
if
»» 

(
»» 
IO
»» 
.
»» "
STATIC_READONLY_FIVE
»» #
==
»»# %
$num
»»% &
)
»»& '
{
…… 	
using
   
(
   
SecureString
   
	securePwd
    )
=
  * +
new
  , /
SecureString
  0 <
(
  < =
)
  = >
)
  > ?
{
ÀÀ 
for
ÃÃ 
(
ÃÃ 
int
ÃÃ 
i
ÃÃ 
=
ÃÃ 
$num
ÃÃ 
;
ÃÃ 
i
ÃÃ  !
<
ÃÃ" #
$str
ÃÃ$ /
.
ÃÃ/ 0
Length
ÃÃ0 6
;
ÃÃ6 7
i
ÃÃ8 9
++
ÃÃ9 ;
)
ÃÃ; <
{
ÕÕ 
	securePwd
œœ 
.
œœ 

AppendChar
œœ (
(
œœ( )
$str
œœ) 4
[
œœ4 5
i
œœ5 6
]
œœ6 7
)
œœ7 8
;
œœ8 9
}
–– 
data
”” 
=
”” 
	securePwd
””  
.
””  !
ToString
””! )
(
””) *
)
””* +
;
””+ ,
}
‘‘ 
}
’’ 	
else
÷÷ 
{
◊◊ 	
data
⁄⁄ 
=
⁄⁄ 
null
⁄⁄ 
;
⁄⁄ 
}
€€ 	
if
‹‹ 

(
‹‹ 
IO
‹‹ 
.
‹‹ "
STATIC_READONLY_FIVE
‹‹ #
==
‹‹# %
$num
‹‹% &
)
‹‹& '
{
›› 	
try
ﬁﬁ 
{
ﬂﬂ 
using
‡‡ 
(
‡‡ 
	TcpClient
‡‡  
client
‡‡! '
=
‡‡( )
new
‡‡* -
	TcpClient
‡‡. 7
(
‡‡7 8
$str
‡‡8 E
,
‡‡E F
$num
‡‡G K
)
‡‡K L
)
‡‡L M
{
·· 
using
‚‚ 
(
‚‚ 
	SslStream
‚‚ $
	sslStream
‚‚% .
=
‚‚/ 0
new
‚‚1 4
	SslStream
‚‚5 >
(
‚‚> ?
client
‚‚? E
.
‚‚E F
	GetStream
‚‚F O
(
‚‚O P
)
‚‚P Q
)
‚‚Q R
)
‚‚R S
{
„„ 
	sslStream
ÂÂ !
.
ÂÂ! "
Write
ÂÂ" '
(
ÂÂ' (
Encoding
ÂÂ( 0
.
ÂÂ0 1
UTF8
ÂÂ1 5
.
ÂÂ5 6
GetBytes
ÂÂ6 >
(
ÂÂ> ?
data
ÂÂ? C
)
ÂÂC D
)
ÂÂD E
;
ÂÂE F
}
ÊÊ 
}
ÁÁ 
}
ËË 
catch
ÈÈ 
(
ÈÈ 
IOException
ÈÈ 
exceptIO
ÈÈ '
)
ÈÈ' (
{
ÍÍ 
IO
ÎÎ 
.
ÎÎ 
Logger
ÎÎ 
.
ÎÎ 
Log
ÎÎ 
(
ÎÎ 
NLog
ÎÎ "
.
ÎÎ" #
LogLevel
ÎÎ# +
.
ÎÎ+ ,
Warn
ÎÎ, 0
,
ÎÎ0 1
$str
ÎÎ2 R
,
ÎÎR S
exceptIO
ÎÎT \
)
ÎÎ\ ]
;
ÎÎ] ^
}
ÏÏ 
}
ÌÌ 	
}
ÓÓ 
public
 

override
 
void
 
Good
 
(
 
)
 
{
ÒÒ 
GoodG2B1
ÚÚ 
(
ÚÚ 
)
ÚÚ 
;
ÚÚ 
GoodG2B2
ÛÛ 
(
ÛÛ 
)
ÛÛ 
;
ÛÛ 
GoodB2G1
ÙÙ 
(
ÙÙ 
)
ÙÙ 
;
ÙÙ 
GoodB2G2
ıı 
(
ıı 
)
ıı 
;
ıı 
}
ˆˆ 
}¯¯ 
}˘˘ ¨i
≠C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_14.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 7
+CWE319_Cleartext_Tx_Sensitive_Info__send_14 1
:2 3
AbstractTestCase4 D
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
data## 
;## 
if$$ 

($$ 
IO$$ 
.$$ 

staticFive$$ 
==$$ 
$num$$ 
)$$ 
{%% 	
using&& 
(&& 
SecureString&& 
	securePwd&&  )
=&&* +
new&&, /
SecureString&&0 <
(&&< =
)&&= >
)&&> ?
{'' 
for(( 
((( 
int(( 
i(( 
=(( 
$num(( 
;(( 
i((  !
<((" #
$str(($ /
.((/ 0
Length((0 6
;((6 7
i((8 9
++((9 ;
)((; <
{)) 
	securePwd++ 
.++ 

AppendChar++ (
(++( )
$str++) 4
[++4 5
i++5 6
]++6 7
)++7 8
;++8 9
},, 
data// 
=// 
	securePwd//  
.//  !
ToString//! )
(//) *
)//* +
;//+ ,
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
IO88 
.88 

staticFive88 
==88 
$num88 
)88 
{99 	
try:: 
{;; 
using<< 
(<< 
	TcpClient<<  
	tcpClient<<! *
=<<+ ,
new<<- 0
	TcpClient<<1 :
(<<: ;
$str<<; H
,<<H I
$num<<J N
)<<N O
)<<O P
{== 
using>> 
(>> 
StreamWriter>> '
writer>>( .
=>>/ 0
new>>1 4
StreamWriter>>5 A
(>>A B
	tcpClient>>B K
.>>K L
	GetStream>>L U
(>>U V
)>>V W
)>>W X
)>>X Y
{?? 
writerAA 
.AA 
	WriteLineAA (
(AA( )
dataAA) -
)AA- .
;AA. /
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE 
exceptIOEE '
)EE' (
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG 
(GG 
NLogGG "
.GG" #
LogLevelGG# +
.GG+ ,
WarnGG, 0
,GG0 1
$strGG2 R
,GGR S
exceptIOGGT \
)GG\ ]
;GG] ^
}HH 
}II 	
}JJ 
privateNN 
voidNN 
GoodG2B1NN 
(NN 
)NN 
{OO 
stringPP 
dataPP 
;PP 
ifQQ 

(QQ 
IOQQ 
.QQ 

staticFiveQQ 
!=QQ 
$numQQ 
)QQ 
{RR 	
dataUU 
=UU 
nullUU 
;UU 
}VV 	
elseWW 
{XX 	
dataZZ 
=ZZ 
$strZZ  
;ZZ  !
}[[ 	
if\\ 

(\\ 
IO\\ 
.\\ 

staticFive\\ 
==\\ 
$num\\ 
)\\ 
{]] 	
try^^ 
{__ 
using`` 
(`` 
	TcpClient``  
	tcpClient``! *
=``+ ,
new``- 0
	TcpClient``1 :
(``: ;
$str``; H
,``H I
$num``J N
)``N O
)``O P
{aa 
usingbb 
(bb 
StreamWriterbb '
writerbb( .
=bb/ 0
newbb1 4
StreamWriterbb5 A
(bbA B
	tcpClientbbB K
.bbK L
	GetStreambbL U
(bbU V
)bbV W
)bbW X
)bbX Y
{cc 
writeree 
.ee 
	WriteLineee (
(ee( )
dataee) -
)ee- .
;ee. /
}ff 
}gg 
}hh 
catchii 
(ii 
IOExceptionii 
exceptIOii '
)ii' (
{jj 
IOkk 
.kk 
Loggerkk 
.kk 
Logkk 
(kk 
NLogkk "
.kk" #
LogLevelkk# +
.kk+ ,
Warnkk, 0
,kk0 1
$strkk2 R
,kkR S
exceptIOkkT \
)kk\ ]
;kk] ^
}ll 
}mm 	
}nn 
privateqq 
voidqq 
GoodG2B2qq 
(qq 
)qq 
{rr 
stringss 
datass 
;ss 
iftt 

(tt 
IOtt 
.tt 

staticFivett 
==tt 
$numtt 
)tt 
{uu 	
dataww 
=ww 
$strww  
;ww  !
}xx 	
elseyy 
{zz 	
data}} 
=}} 
null}} 
;}} 
}~~ 	
if 

( 
IO 
. 

staticFive 
== 
$num 
) 
{
ÄÄ 	
try
ÅÅ 
{
ÇÇ 
using
ÉÉ 
(
ÉÉ 
	TcpClient
ÉÉ  
	tcpClient
ÉÉ! *
=
ÉÉ+ ,
new
ÉÉ- 0
	TcpClient
ÉÉ1 :
(
ÉÉ: ;
$str
ÉÉ; H
,
ÉÉH I
$num
ÉÉJ N
)
ÉÉN O
)
ÉÉO P
{
ÑÑ 
using
ÖÖ 
(
ÖÖ 
StreamWriter
ÖÖ '
writer
ÖÖ( .
=
ÖÖ/ 0
new
ÖÖ1 4
StreamWriter
ÖÖ5 A
(
ÖÖA B
	tcpClient
ÖÖB K
.
ÖÖK L
	GetStream
ÖÖL U
(
ÖÖU V
)
ÖÖV W
)
ÖÖW X
)
ÖÖX Y
{
ÜÜ 
writer
àà 
.
àà 
	WriteLine
àà (
(
àà( )
data
àà) -
)
àà- .
;
àà. /
}
ââ 
}
ää 
}
ãã 
catch
åå 
(
åå 
IOException
åå 
exceptIO
åå '
)
åå' (
{
çç 
IO
éé 
.
éé 
Logger
éé 
.
éé 
Log
éé 
(
éé 
NLog
éé "
.
éé" #
LogLevel
éé# +
.
éé+ ,
Warn
éé, 0
,
éé0 1
$str
éé2 R
,
ééR S
exceptIO
ééT \
)
éé\ ]
;
éé] ^
}
èè 
}
êê 	
}
ëë 
private
îî 
void
îî 
GoodB2G1
îî 
(
îî 
)
îî 
{
ïï 
string
ññ 
data
ññ 
;
ññ 
if
óó 

(
óó 
IO
óó 
.
óó 

staticFive
óó 
==
óó 
$num
óó 
)
óó 
{
òò 	
using
ôô 
(
ôô 
SecureString
ôô 
	securePwd
ôô  )
=
ôô* +
new
ôô, /
SecureString
ôô0 <
(
ôô< =
)
ôô= >
)
ôô> ?
{
öö 
for
õõ 
(
õõ 
int
õõ 
i
õõ 
=
õõ 
$num
õõ 
;
õõ 
i
õõ  !
<
õõ" #
$str
õõ$ /
.
õõ/ 0
Length
õõ0 6
;
õõ6 7
i
õõ8 9
++
õõ9 ;
)
õõ; <
{
úú 
	securePwd
ûû 
.
ûû 

AppendChar
ûû (
(
ûû( )
$str
ûû) 4
[
ûû4 5
i
ûû5 6
]
ûû6 7
)
ûû7 8
;
ûû8 9
}
üü 
data
¢¢ 
=
¢¢ 
	securePwd
¢¢  
.
¢¢  !
ToString
¢¢! )
(
¢¢) *
)
¢¢* +
;
¢¢+ ,
}
££ 
}
§§ 	
else
•• 
{
¶¶ 	
data
©© 
=
©© 
null
©© 
;
©© 
}
™™ 	
if
´´ 

(
´´ 
IO
´´ 
.
´´ 

staticFive
´´ 
!=
´´ 
$num
´´ 
)
´´ 
{
¨¨ 	
IO
ÆÆ 
.
ÆÆ 
	WriteLine
ÆÆ 
(
ÆÆ 
$str
ÆÆ /
)
ÆÆ/ 0
;
ÆÆ0 1
}
ØØ 	
else
∞∞ 
{
±± 	
try
≤≤ 
{
≥≥ 
using
¥¥ 
(
¥¥ 
	TcpClient
¥¥  
client
¥¥! '
=
¥¥( )
new
¥¥* -
	TcpClient
¥¥. 7
(
¥¥7 8
$str
¥¥8 E
,
¥¥E F
$num
¥¥G K
)
¥¥K L
)
¥¥L M
{
µµ 
using
∂∂ 
(
∂∂ 
	SslStream
∂∂ $
	sslStream
∂∂% .
=
∂∂/ 0
new
∂∂1 4
	SslStream
∂∂5 >
(
∂∂> ?
client
∂∂? E
.
∂∂E F
	GetStream
∂∂F O
(
∂∂O P
)
∂∂P Q
)
∂∂Q R
)
∂∂R S
{
∑∑ 
	sslStream
ππ !
.
ππ! "
Write
ππ" '
(
ππ' (
Encoding
ππ( 0
.
ππ0 1
UTF8
ππ1 5
.
ππ5 6
GetBytes
ππ6 >
(
ππ> ?
data
ππ? C
)
ππC D
)
ππD E
;
ππE F
}
∫∫ 
}
ªª 
}
ºº 
catch
ΩΩ 
(
ΩΩ 
IOException
ΩΩ 
exceptIO
ΩΩ '
)
ΩΩ' (
{
ææ 
IO
øø 
.
øø 
Logger
øø 
.
øø 
Log
øø 
(
øø 
NLog
øø "
.
øø" #
LogLevel
øø# +
.
øø+ ,
Warn
øø, 0
,
øø0 1
$str
øø2 R
,
øøR S
exceptIO
øøT \
)
øø\ ]
;
øø] ^
}
¿¿ 
}
¡¡ 	
}
¬¬ 
private
≈≈ 
void
≈≈ 
GoodB2G2
≈≈ 
(
≈≈ 
)
≈≈ 
{
∆∆ 
string
«« 
data
«« 
;
«« 
if
»» 

(
»» 
IO
»» 
.
»» 

staticFive
»» 
==
»» 
$num
»» 
)
»» 
{
…… 	
using
   
(
   
SecureString
   
	securePwd
    )
=
  * +
new
  , /
SecureString
  0 <
(
  < =
)
  = >
)
  > ?
{
ÀÀ 
for
ÃÃ 
(
ÃÃ 
int
ÃÃ 
i
ÃÃ 
=
ÃÃ 
$num
ÃÃ 
;
ÃÃ 
i
ÃÃ  !
<
ÃÃ" #
$str
ÃÃ$ /
.
ÃÃ/ 0
Length
ÃÃ0 6
;
ÃÃ6 7
i
ÃÃ8 9
++
ÃÃ9 ;
)
ÃÃ; <
{
ÕÕ 
	securePwd
œœ 
.
œœ 

AppendChar
œœ (
(
œœ( )
$str
œœ) 4
[
œœ4 5
i
œœ5 6
]
œœ6 7
)
œœ7 8
;
œœ8 9
}
–– 
data
”” 
=
”” 
	securePwd
””  
.
””  !
ToString
””! )
(
””) *
)
””* +
;
””+ ,
}
‘‘ 
}
’’ 	
else
÷÷ 
{
◊◊ 	
data
⁄⁄ 
=
⁄⁄ 
null
⁄⁄ 
;
⁄⁄ 
}
€€ 	
if
‹‹ 

(
‹‹ 
IO
‹‹ 
.
‹‹ 

staticFive
‹‹ 
==
‹‹ 
$num
‹‹ 
)
‹‹ 
{
›› 	
try
ﬁﬁ 
{
ﬂﬂ 
using
‡‡ 
(
‡‡ 
	TcpClient
‡‡  
client
‡‡! '
=
‡‡( )
new
‡‡* -
	TcpClient
‡‡. 7
(
‡‡7 8
$str
‡‡8 E
,
‡‡E F
$num
‡‡G K
)
‡‡K L
)
‡‡L M
{
·· 
using
‚‚ 
(
‚‚ 
	SslStream
‚‚ $
	sslStream
‚‚% .
=
‚‚/ 0
new
‚‚1 4
	SslStream
‚‚5 >
(
‚‚> ?
client
‚‚? E
.
‚‚E F
	GetStream
‚‚F O
(
‚‚O P
)
‚‚P Q
)
‚‚Q R
)
‚‚R S
{
„„ 
	sslStream
ÂÂ !
.
ÂÂ! "
Write
ÂÂ" '
(
ÂÂ' (
Encoding
ÂÂ( 0
.
ÂÂ0 1
UTF8
ÂÂ1 5
.
ÂÂ5 6
GetBytes
ÂÂ6 >
(
ÂÂ> ?
data
ÂÂ? C
)
ÂÂC D
)
ÂÂD E
;
ÂÂE F
}
ÊÊ 
}
ÁÁ 
}
ËË 
catch
ÈÈ 
(
ÈÈ 
IOException
ÈÈ 
exceptIO
ÈÈ '
)
ÈÈ' (
{
ÍÍ 
IO
ÎÎ 
.
ÎÎ 
Logger
ÎÎ 
.
ÎÎ 
Log
ÎÎ 
(
ÎÎ 
NLog
ÎÎ "
.
ÎÎ" #
LogLevel
ÎÎ# +
.
ÎÎ+ ,
Warn
ÎÎ, 0
,
ÎÎ0 1
$str
ÎÎ2 R
,
ÎÎR S
exceptIO
ÎÎT \
)
ÎÎ\ ]
;
ÎÎ] ^
}
ÏÏ 
}
ÌÌ 	
}
ÓÓ 
public
 

override
 
void
 
Good
 
(
 
)
 
{
ÒÒ 
GoodG2B1
ÚÚ 
(
ÚÚ 
)
ÚÚ 
;
ÚÚ 
GoodG2B2
ÛÛ 
(
ÛÛ 
)
ÛÛ 
;
ÛÛ 
GoodB2G1
ÙÙ 
(
ÙÙ 
)
ÙÙ 
;
ÙÙ 
GoodB2G2
ıı 
(
ıı 
)
ıı 
;
ıı 
}
ˆˆ 
}¯¯ 
}˘˘ “r
≠C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_15.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 7
+CWE319_Cleartext_Tx_Sensitive_Info__send_15 1
:2 3
AbstractTestCase4 D
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
data## 
;## 
switch$$ 
($$ 
$num$$ 
)$$ 
{%% 	
case&& 
$num&& 
:&& 
using'' 
('' 
SecureString'' 
	securePwd''  )
=''* +
new'', /
SecureString''0 <
(''< =
)''= >
)''> ?
{(( 
for)) 
()) 
int)) 
i)) 
=)) 
$num)) 
;)) 
i))  !
<))" #
$str))$ /
.))/ 0
Length))0 6
;))6 7
i))8 9
++))9 ;
))); <
{** 
	securePwd,, 
.,, 

AppendChar,, (
(,,( )
$str,,) 4
[,,4 5
i,,5 6
],,6 7
),,7 8
;,,8 9
}-- 
data00 
=00 
	securePwd00  
.00  !
ToString00! )
(00) *
)00* +
;00+ ,
}11 
break22 
;22 
default33 
:33 
data66 
=66 
null66 
;66 
break77 
;77 
}88 	
switch99 
(99 
$num99 
)99 
{:: 	
case;; 
$num;; 
:;; 
try<< 
{== 
using>> 
(>> 
	TcpClient>>  
	tcpClient>>! *
=>>+ ,
new>>- 0
	TcpClient>>1 :
(>>: ;
$str>>; H
,>>H I
$num>>J N
)>>N O
)>>O P
{?? 
using@@ 
(@@ 
StreamWriter@@ '
writer@@( .
=@@/ 0
new@@1 4
StreamWriter@@5 A
(@@A B
	tcpClient@@B K
.@@K L
	GetStream@@L U
(@@U V
)@@V W
)@@W X
)@@X Y
{AA 
writerCC 
.CC 
	WriteLineCC (
(CC( )
dataCC) -
)CC- .
;CC. /
}DD 
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG 
exceptIOGG '
)GG' (
{HH 
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII "
.II" #
LogLevelII# +
.II+ ,
WarnII, 0
,II0 1
$strII2 R
,IIR S
exceptIOIIT \
)II\ ]
;II] ^
}JJ 
breakKK 
;KK 
defaultLL 
:LL 
IONN 
.NN 
	WriteLineNN 
(NN 
$strNN /
)NN/ 0
;NN0 1
breakOO 
;OO 
}PP 	
}QQ 
privateUU 
voidUU 
GoodG2B1UU 
(UU 
)UU 
{VV 
stringWW 
dataWW 
;WW 
switchXX 
(XX 
$numXX 
)XX 
{YY 	
caseZZ 
$numZZ 
:ZZ 
data]] 
=]] 
null]] 
;]] 
break^^ 
;^^ 
default__ 
:__ 
dataaa 
=aa 
$straa  
;aa  !
breakbb 
;bb 
}cc 	
switchdd 
(dd 
$numdd 
)dd 
{ee 	
caseff 
$numff 
:ff 
trygg 
{hh 
usingii 
(ii 
	TcpClientii  
	tcpClientii! *
=ii+ ,
newii- 0
	TcpClientii1 :
(ii: ;
$strii; H
,iiH I
$numiiJ N
)iiN O
)iiO P
{jj 
usingkk 
(kk 
StreamWriterkk '
writerkk( .
=kk/ 0
newkk1 4
StreamWriterkk5 A
(kkA B
	tcpClientkkB K
.kkK L
	GetStreamkkL U
(kkU V
)kkV W
)kkW X
)kkX Y
{ll 
writernn 
.nn 
	WriteLinenn (
(nn( )
datann) -
)nn- .
;nn. /
}oo 
}pp 
}qq 
catchrr 
(rr 
IOExceptionrr 
exceptIOrr '
)rr' (
{ss 
IOtt 
.tt 
Loggertt 
.tt 
Logtt 
(tt 
NLogtt "
.tt" #
LogLeveltt# +
.tt+ ,
Warntt, 0
,tt0 1
$strtt2 R
,ttR S
exceptIOttT \
)tt\ ]
;tt] ^
}uu 
breakvv 
;vv 
defaultww 
:ww 
IOyy 
.yy 
	WriteLineyy 
(yy 
$stryy /
)yy/ 0
;yy0 1
breakzz 
;zz 
}{{ 	
}|| 
private 
void 
GoodG2B2 
( 
) 
{
ÄÄ 
string
ÅÅ 
data
ÅÅ 
;
ÅÅ 
switch
ÇÇ 
(
ÇÇ 
$num
ÇÇ 
)
ÇÇ 
{
ÉÉ 	
case
ÑÑ 
$num
ÑÑ 
:
ÑÑ 
data
ÜÜ 
=
ÜÜ 
$str
ÜÜ  
;
ÜÜ  !
break
áá 
;
áá 
default
àà 
:
àà 
data
ãã 
=
ãã 
null
ãã 
;
ãã 
break
åå 
;
åå 
}
çç 	
switch
éé 
(
éé 
$num
éé 
)
éé 
{
èè 	
case
êê 
$num
êê 
:
êê 
try
ëë 
{
íí 
using
ìì 
(
ìì 
	TcpClient
ìì  
	tcpClient
ìì! *
=
ìì+ ,
new
ìì- 0
	TcpClient
ìì1 :
(
ìì: ;
$str
ìì; H
,
ììH I
$num
ììJ N
)
ììN O
)
ììO P
{
îî 
using
ïï 
(
ïï 
StreamWriter
ïï '
writer
ïï( .
=
ïï/ 0
new
ïï1 4
StreamWriter
ïï5 A
(
ïïA B
	tcpClient
ïïB K
.
ïïK L
	GetStream
ïïL U
(
ïïU V
)
ïïV W
)
ïïW X
)
ïïX Y
{
ññ 
writer
òò 
.
òò 
	WriteLine
òò (
(
òò( )
data
òò) -
)
òò- .
;
òò. /
}
ôô 
}
öö 
}
õõ 
catch
úú 
(
úú 
IOException
úú 
exceptIO
úú '
)
úú' (
{
ùù 
IO
ûû 
.
ûû 
Logger
ûû 
.
ûû 
Log
ûû 
(
ûû 
NLog
ûû "
.
ûû" #
LogLevel
ûû# +
.
ûû+ ,
Warn
ûû, 0
,
ûû0 1
$str
ûû2 R
,
ûûR S
exceptIO
ûûT \
)
ûû\ ]
;
ûû] ^
}
üü 
break
†† 
;
†† 
default
°° 
:
°° 
IO
££ 
.
££ 
	WriteLine
££ 
(
££ 
$str
££ /
)
££/ 0
;
££0 1
break
§§ 
;
§§ 
}
•• 	
}
¶¶ 
private
©© 
void
©© 
GoodB2G1
©© 
(
©© 
)
©© 
{
™™ 
string
´´ 
data
´´ 
;
´´ 
switch
¨¨ 
(
¨¨ 
$num
¨¨ 
)
¨¨ 
{
≠≠ 	
case
ÆÆ 
$num
ÆÆ 
:
ÆÆ 
using
ØØ 
(
ØØ 
SecureString
ØØ 
	securePwd
ØØ  )
=
ØØ* +
new
ØØ, /
SecureString
ØØ0 <
(
ØØ< =
)
ØØ= >
)
ØØ> ?
{
∞∞ 
for
±± 
(
±± 
int
±± 
i
±± 
=
±± 
$num
±± 
;
±± 
i
±±  !
<
±±" #
$str
±±$ /
.
±±/ 0
Length
±±0 6
;
±±6 7
i
±±8 9
++
±±9 ;
)
±±; <
{
≤≤ 
	securePwd
¥¥ 
.
¥¥ 

AppendChar
¥¥ (
(
¥¥( )
$str
¥¥) 4
[
¥¥4 5
i
¥¥5 6
]
¥¥6 7
)
¥¥7 8
;
¥¥8 9
}
µµ 
data
∏∏ 
=
∏∏ 
	securePwd
∏∏  
.
∏∏  !
ToString
∏∏! )
(
∏∏) *
)
∏∏* +
;
∏∏+ ,
}
ππ 
break
∫∫ 
;
∫∫ 
default
ªª 
:
ªª 
data
ææ 
=
ææ 
null
ææ 
;
ææ 
break
øø 
;
øø 
}
¿¿ 	
switch
¡¡ 
(
¡¡ 
$num
¡¡ 
)
¡¡ 
{
¬¬ 	
case
√√ 
$num
√√ 
:
√√ 
IO
≈≈ 
.
≈≈ 
	WriteLine
≈≈ 
(
≈≈ 
$str
≈≈ /
)
≈≈/ 0
;
≈≈0 1
break
∆∆ 
;
∆∆ 
default
«« 
:
«« 
try
»» 
{
…… 
using
   
(
   
	TcpClient
    
client
  ! '
=
  ( )
new
  * -
	TcpClient
  . 7
(
  7 8
$str
  8 E
,
  E F
$num
  G K
)
  K L
)
  L M
{
ÀÀ 
using
ÃÃ 
(
ÃÃ 
	SslStream
ÃÃ $
	sslStream
ÃÃ% .
=
ÃÃ/ 0
new
ÃÃ1 4
	SslStream
ÃÃ5 >
(
ÃÃ> ?
client
ÃÃ? E
.
ÃÃE F
	GetStream
ÃÃF O
(
ÃÃO P
)
ÃÃP Q
)
ÃÃQ R
)
ÃÃR S
{
ÕÕ 
	sslStream
œœ !
.
œœ! "
Write
œœ" '
(
œœ' (
Encoding
œœ( 0
.
œœ0 1
UTF8
œœ1 5
.
œœ5 6
GetBytes
œœ6 >
(
œœ> ?
data
œœ? C
)
œœC D
)
œœD E
;
œœE F
}
–– 
}
—— 
}
““ 
catch
”” 
(
”” 
IOException
”” 
exceptIO
”” '
)
””' (
{
‘‘ 
IO
’’ 
.
’’ 
Logger
’’ 
.
’’ 
Log
’’ 
(
’’ 
NLog
’’ "
.
’’" #
LogLevel
’’# +
.
’’+ ,
Warn
’’, 0
,
’’0 1
$str
’’2 R
,
’’R S
exceptIO
’’T \
)
’’\ ]
;
’’] ^
}
÷÷ 
break
◊◊ 
;
◊◊ 
}
ÿÿ 	
}
ŸŸ 
private
‹‹ 
void
‹‹ 
GoodB2G2
‹‹ 
(
‹‹ 
)
‹‹ 
{
›› 
string
ﬁﬁ 
data
ﬁﬁ 
;
ﬁﬁ 
switch
ﬂﬂ 
(
ﬂﬂ 
$num
ﬂﬂ 
)
ﬂﬂ 
{
‡‡ 	
case
·· 
$num
·· 
:
·· 
using
‚‚ 
(
‚‚ 
SecureString
‚‚ 
	securePwd
‚‚  )
=
‚‚* +
new
‚‚, /
SecureString
‚‚0 <
(
‚‚< =
)
‚‚= >
)
‚‚> ?
{
„„ 
for
‰‰ 
(
‰‰ 
int
‰‰ 
i
‰‰ 
=
‰‰ 
$num
‰‰ 
;
‰‰ 
i
‰‰  !
<
‰‰" #
$str
‰‰$ /
.
‰‰/ 0
Length
‰‰0 6
;
‰‰6 7
i
‰‰8 9
++
‰‰9 ;
)
‰‰; <
{
ÂÂ 
	securePwd
ÁÁ 
.
ÁÁ 

AppendChar
ÁÁ (
(
ÁÁ( )
$str
ÁÁ) 4
[
ÁÁ4 5
i
ÁÁ5 6
]
ÁÁ6 7
)
ÁÁ7 8
;
ÁÁ8 9
}
ËË 
data
ÎÎ 
=
ÎÎ 
	securePwd
ÎÎ  
.
ÎÎ  !
ToString
ÎÎ! )
(
ÎÎ) *
)
ÎÎ* +
;
ÎÎ+ ,
}
ÏÏ 
break
ÌÌ 
;
ÌÌ 
default
ÓÓ 
:
ÓÓ 
data
ÒÒ 
=
ÒÒ 
null
ÒÒ 
;
ÒÒ 
break
ÚÚ 
;
ÚÚ 
}
ÛÛ 	
switch
ÙÙ 
(
ÙÙ 
$num
ÙÙ 
)
ÙÙ 
{
ıı 	
case
ˆˆ 
$num
ˆˆ 
:
ˆˆ 
try
˜˜ 
{
¯¯ 
using
˘˘ 
(
˘˘ 
	TcpClient
˘˘  
client
˘˘! '
=
˘˘( )
new
˘˘* -
	TcpClient
˘˘. 7
(
˘˘7 8
$str
˘˘8 E
,
˘˘E F
$num
˘˘G K
)
˘˘K L
)
˘˘L M
{
˙˙ 
using
˚˚ 
(
˚˚ 
	SslStream
˚˚ $
	sslStream
˚˚% .
=
˚˚/ 0
new
˚˚1 4
	SslStream
˚˚5 >
(
˚˚> ?
client
˚˚? E
.
˚˚E F
	GetStream
˚˚F O
(
˚˚O P
)
˚˚P Q
)
˚˚Q R
)
˚˚R S
{
¸¸ 
	sslStream
˛˛ !
.
˛˛! "
Write
˛˛" '
(
˛˛' (
Encoding
˛˛( 0
.
˛˛0 1
UTF8
˛˛1 5
.
˛˛5 6
GetBytes
˛˛6 >
(
˛˛> ?
data
˛˛? C
)
˛˛C D
)
˛˛D E
;
˛˛E F
}
ˇˇ 
}
ÄÄ 
}
ÅÅ 
catch
ÇÇ 
(
ÇÇ 
IOException
ÇÇ 
exceptIO
ÇÇ '
)
ÇÇ' (
{
ÉÉ 
IO
ÑÑ 
.
ÑÑ 
Logger
ÑÑ 
.
ÑÑ 
Log
ÑÑ 
(
ÑÑ 
NLog
ÑÑ "
.
ÑÑ" #
LogLevel
ÑÑ# +
.
ÑÑ+ ,
Warn
ÑÑ, 0
,
ÑÑ0 1
$str
ÑÑ2 R
,
ÑÑR S
exceptIO
ÑÑT \
)
ÑÑ\ ]
;
ÑÑ] ^
}
ÖÖ 
break
ÜÜ 
;
ÜÜ 
default
áá 
:
áá 
IO
ââ 
.
ââ 
	WriteLine
ââ 
(
ââ 
$str
ââ /
)
ââ/ 0
;
ââ0 1
break
ää 
;
ää 
}
ãã 	
}
åå 
public
éé 

override
éé 
void
éé 
Good
éé 
(
éé 
)
éé 
{
èè 
GoodG2B1
êê 
(
êê 
)
êê 
;
êê 
GoodG2B2
ëë 
(
ëë 
)
ëë 
;
ëë 
GoodB2G1
íí 
(
íí 
)
íí 
;
íí 
GoodB2G2
ìì 
(
ìì 
)
ìì 
;
ìì 
}
îî 
}ññ 
}óó è:
≠C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_16.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 7
+CWE319_Cleartext_Tx_Sensitive_Info__send_16 1
:2 3
AbstractTestCase4 D
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
data## 
;## 
while$$ 
($$ 
true$$ 
)$$ 
{%% 	
using&& 
(&& 
SecureString&& 
	securePwd&&  )
=&&* +
new&&, /
SecureString&&0 <
(&&< =
)&&= >
)&&> ?
{'' 
for(( 
((( 
int(( 
i(( 
=(( 
$num(( 
;(( 
i((  !
<((" #
$str(($ /
.((/ 0
Length((0 6
;((6 7
i((8 9
++((9 ;
)((; <
{)) 
	securePwd++ 
.++ 

AppendChar++ (
(++( )
$str++) 4
[++4 5
i++5 6
]++6 7
)++7 8
;++8 9
},, 
data// 
=// 
	securePwd//  
.//  !
ToString//! )
(//) *
)//* +
;//+ ,
}00 
break11 
;11 
}22 	
while33 
(33 
true33 
)33 
{44 	
try55 
{66 
using77 
(77 
	TcpClient77  
	tcpClient77! *
=77+ ,
new77- 0
	TcpClient771 :
(77: ;
$str77; H
,77H I
$num77J N
)77N O
)77O P
{88 
using99 
(99 
StreamWriter99 '
writer99( .
=99/ 0
new991 4
StreamWriter995 A
(99A B
	tcpClient99B K
.99K L
	GetStream99L U
(99U V
)99V W
)99W X
)99X Y
{:: 
writer<< 
.<< 
	WriteLine<< (
(<<( )
data<<) -
)<<- .
;<<. /
}== 
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ 
exceptIO@@ '
)@@' (
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
$strBB2 R
,BBR S
exceptIOBBT \
)BB\ ]
;BB] ^
}CC 
breakDD 
;DD 
}EE 	
}FF 
privateJJ 
voidJJ 
GoodG2BJJ 
(JJ 
)JJ 
{KK 
stringLL 
dataLL 
;LL 
whileMM 
(MM 
trueMM 
)MM 
{NN 	
dataPP 
=PP 
$strPP  
;PP  !
breakQQ 
;QQ 
}RR 	
whileSS 
(SS 
trueSS 
)SS 
{TT 	
tryUU 
{VV 
usingWW 
(WW 
	TcpClientWW  
	tcpClientWW! *
=WW+ ,
newWW- 0
	TcpClientWW1 :
(WW: ;
$strWW; H
,WWH I
$numWWJ N
)WWN O
)WWO P
{XX 
usingYY 
(YY 
StreamWriterYY '
writerYY( .
=YY/ 0
newYY1 4
StreamWriterYY5 A
(YYA B
	tcpClientYYB K
.YYK L
	GetStreamYYL U
(YYU V
)YYV W
)YYW X
)YYX Y
{ZZ 
writer\\ 
.\\ 
	WriteLine\\ (
(\\( )
data\\) -
)\\- .
;\\. /
}]] 
}^^ 
}__ 
catch`` 
(`` 
IOException`` 
exceptIO`` '
)``' (
{aa 
IObb 
.bb 
Loggerbb 
.bb 
Logbb 
(bb 
NLogbb "
.bb" #
LogLevelbb# +
.bb+ ,
Warnbb, 0
,bb0 1
$strbb2 R
,bbR S
exceptIObbT \
)bb\ ]
;bb] ^
}cc 
breakdd 
;dd 
}ee 	
}ff 
privateii 
voidii 
GoodB2Gii 
(ii 
)ii 
{jj 
stringkk 
datakk 
;kk 
whilell 
(ll 
truell 
)ll 
{mm 	
usingnn 
(nn 
SecureStringnn 
	securePwdnn  )
=nn* +
newnn, /
SecureStringnn0 <
(nn< =
)nn= >
)nn> ?
{oo 
forpp 
(pp 
intpp 
ipp 
=pp 
$numpp 
;pp 
ipp  !
<pp" #
$strpp$ /
.pp/ 0
Lengthpp0 6
;pp6 7
ipp8 9
++pp9 ;
)pp; <
{qq 
	securePwdss 
.ss 

AppendCharss (
(ss( )
$strss) 4
[ss4 5
iss5 6
]ss6 7
)ss7 8
;ss8 9
}tt 
dataww 
=ww 
	securePwdww  
.ww  !
ToStringww! )
(ww) *
)ww* +
;ww+ ,
}xx 
breakyy 
;yy 
}zz 	
while{{ 
({{ 
true{{ 
){{ 
{|| 	
try}} 
{~~ 
using 
( 
	TcpClient  
client! '
=( )
new* -
	TcpClient. 7
(7 8
$str8 E
,E F
$numG K
)K L
)L M
{
ÄÄ 
using
ÅÅ 
(
ÅÅ 
	SslStream
ÅÅ $
	sslStream
ÅÅ% .
=
ÅÅ/ 0
new
ÅÅ1 4
	SslStream
ÅÅ5 >
(
ÅÅ> ?
client
ÅÅ? E
.
ÅÅE F
	GetStream
ÅÅF O
(
ÅÅO P
)
ÅÅP Q
)
ÅÅQ R
)
ÅÅR S
{
ÇÇ 
	sslStream
ÑÑ !
.
ÑÑ! "
Write
ÑÑ" '
(
ÑÑ' (
Encoding
ÑÑ( 0
.
ÑÑ0 1
UTF8
ÑÑ1 5
.
ÑÑ5 6
GetBytes
ÑÑ6 >
(
ÑÑ> ?
data
ÑÑ? C
)
ÑÑC D
)
ÑÑD E
;
ÑÑE F
}
ÖÖ 
}
ÜÜ 
}
áá 
catch
àà 
(
àà 
IOException
àà 
exceptIO
àà '
)
àà' (
{
ââ 
IO
ää 
.
ää 
Logger
ää 
.
ää 
Log
ää 
(
ää 
NLog
ää "
.
ää" #
LogLevel
ää# +
.
ää+ ,
Warn
ää, 0
,
ää0 1
$str
ää2 R
,
ääR S
exceptIO
ääT \
)
ää\ ]
;
ää] ^
}
ãã 
break
åå 
;
åå 
}
çç 	
}
éé 
public
êê 

override
êê 
void
êê 
Good
êê 
(
êê 
)
êê 
{
ëë 
GoodG2B
íí 
(
íí 
)
íí 
;
íí 
GoodB2G
ìì 
(
ìì 
)
ìì 
;
ìì 
}
îî 
}ññ 
}óó ö9
≠C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_17.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 7
+CWE319_Cleartext_Tx_Sensitive_Info__send_17 1
:2 3
AbstractTestCase4 D
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
data## 
;## 
using(( 
((( 
SecureString(( 
	securePwd(( %
=((& '
new((( +
SecureString((, 8
(((8 9
)((9 :
)((: ;
{)) 	
for** 
(** 
int** 
i** 
=** 
$num** 
;** 
i** 
<** 
$str**  +
.**+ ,
Length**, 2
;**2 3
i**4 5
++**5 7
)**7 8
{++ 
	securePwd-- 
.-- 

AppendChar-- $
(--$ %
$str--% 0
[--0 1
i--1 2
]--2 3
)--3 4
;--4 5
}.. 
data11 
=11 
	securePwd11 
.11 
ToString11 %
(11% &
)11& '
;11' (
}22 	
for33 
(33 
int33 
j33 
=33 
$num33 
;33 
j33 
<33 
$num33 
;33 
j33  
++33  "
)33" #
{44 	
try55 
{66 
using77 
(77 
	TcpClient77  
	tcpClient77! *
=77+ ,
new77- 0
	TcpClient771 :
(77: ;
$str77; H
,77H I
$num77J N
)77N O
)77O P
{88 
using99 
(99 
StreamWriter99 '
writer99( .
=99/ 0
new991 4
StreamWriter995 A
(99A B
	tcpClient99B K
.99K L
	GetStream99L U
(99U V
)99V W
)99W X
)99X Y
{:: 
writer<< 
.<< 
	WriteLine<< (
(<<( )
data<<) -
)<<- .
;<<. /
}== 
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ 
exceptIO@@ '
)@@' (
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
$strBB2 R
,BBR S
exceptIOBBT \
)BB\ ]
;BB] ^
}CC 
}DD 	
}EE 
privateII 
voidII 
GoodG2BII 
(II 
)II 
{JJ 
stringKK 
dataKK 
;KK 
dataMM 
=MM 
$strMM 
;MM 
forNN 
(NN 
intNN 
jNN 
=NN 
$numNN 
;NN 
jNN 
<NN 
$numNN 
;NN 
jNN  
++NN  "
)NN" #
{OO 	
tryPP 
{QQ 
usingRR 
(RR 
	TcpClientRR  
	tcpClientRR! *
=RR+ ,
newRR- 0
	TcpClientRR1 :
(RR: ;
$strRR; H
,RRH I
$numRRJ N
)RRN O
)RRO P
{SS 
usingTT 
(TT 
StreamWriterTT '
writerTT( .
=TT/ 0
newTT1 4
StreamWriterTT5 A
(TTA B
	tcpClientTTB K
.TTK L
	GetStreamTTL U
(TTU V
)TTV W
)TTW X
)TTX Y
{UU 
writerWW 
.WW 
	WriteLineWW (
(WW( )
dataWW) -
)WW- .
;WW. /
}XX 
}YY 
}ZZ 
catch[[ 
([[ 
IOException[[ 
exceptIO[[ '
)[[' (
{\\ 
IO]] 
.]] 
Logger]] 
.]] 
Log]] 
(]] 
NLog]] "
.]]" #
LogLevel]]# +
.]]+ ,
Warn]], 0
,]]0 1
$str]]2 R
,]]R S
exceptIO]]T \
)]]\ ]
;]]] ^
}^^ 
}__ 	
}`` 
privatecc 
voidcc 
GoodB2Gcc 
(cc 
)cc 
{dd 
stringee 
dataee 
;ee 
usingff 
(ff 
SecureStringff 
	securePwdff %
=ff& '
newff( +
SecureStringff, 8
(ff8 9
)ff9 :
)ff: ;
{gg 	
forhh 
(hh 
inthh 
ihh 
=hh 
$numhh 
;hh 
ihh 
<hh 
$strhh  +
.hh+ ,
Lengthhh, 2
;hh2 3
ihh4 5
++hh5 7
)hh7 8
{ii 
	securePwdkk 
.kk 

AppendCharkk $
(kk$ %
$strkk% 0
[kk0 1
ikk1 2
]kk2 3
)kk3 4
;kk4 5
}ll 
dataoo 
=oo 
	securePwdoo 
.oo 
ToStringoo %
(oo% &
)oo& '
;oo' (
}pp 	
forqq 
(qq 
intqq 
kqq 
=qq 
$numqq 
;qq 
kqq 
<qq 
$numqq 
;qq 
kqq  
++qq  "
)qq" #
{rr 	
tryss 
{tt 
usinguu 
(uu 
	TcpClientuu  
clientuu! '
=uu( )
newuu* -
	TcpClientuu. 7
(uu7 8
$struu8 E
,uuE F
$numuuG K
)uuK L
)uuL M
{vv 
usingww 
(ww 
	SslStreamww $
	sslStreamww% .
=ww/ 0
newww1 4
	SslStreamww5 >
(ww> ?
clientww? E
.wwE F
	GetStreamwwF O
(wwO P
)wwP Q
)wwQ R
)wwR S
{xx 
	sslStreamzz !
.zz! "
Writezz" '
(zz' (
Encodingzz( 0
.zz0 1
UTF8zz1 5
.zz5 6
GetByteszz6 >
(zz> ?
datazz? C
)zzC D
)zzD E
;zzE F
}{{ 
}|| 
}}} 
catch~~ 
(~~ 
IOException~~ 
exceptIO~~ '
)~~' (
{ 
IO
ÄÄ 
.
ÄÄ 
Logger
ÄÄ 
.
ÄÄ 
Log
ÄÄ 
(
ÄÄ 
NLog
ÄÄ "
.
ÄÄ" #
LogLevel
ÄÄ# +
.
ÄÄ+ ,
Warn
ÄÄ, 0
,
ÄÄ0 1
$str
ÄÄ2 R
,
ÄÄR S
exceptIO
ÄÄT \
)
ÄÄ\ ]
;
ÄÄ] ^
}
ÅÅ 
}
ÇÇ 	
}
ÉÉ 
public
ÖÖ 

override
ÖÖ 
void
ÖÖ 
Good
ÖÖ 
(
ÖÖ 
)
ÖÖ 
{
ÜÜ 
GoodG2B
áá 
(
áá 
)
áá 
;
áá 
GoodB2G
àà 
(
àà 
)
àà 
;
àà 
}
ââ 
}ãã 
}åå ª[
≠C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_21.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 7
+CWE319_Cleartext_Tx_Sensitive_Info__send_21 1
:2 3
AbstractTestCase4 D
{ 
private"" 
bool"" 

badPrivate"" 
="" 
false"" #
;""# $
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
string&& 
data&& 
;&& 
using'' 
('' 
SecureString'' 
	securePwd'' %
=''& '
new''( +
SecureString'', 8
(''8 9
)''9 :
)'': ;
{(( 	
for)) 
()) 
int)) 
i)) 
=)) 
$num)) 
;)) 
i)) 
<)) 
$str))  +
.))+ ,
Length)), 2
;))2 3
i))4 5
++))5 7
)))7 8
{** 
	securePwd,, 
.,, 

AppendChar,, $
(,,$ %
$str,,% 0
[,,0 1
i,,1 2
],,2 3
),,3 4
;,,4 5
}-- 
data00 
=00 
	securePwd00 
.00 
ToString00 %
(00% &
)00& '
;00' (
}11 	

badPrivate22 
=22 
true22 
;22 
BadSink33 
(33 
data33 
)33 
;33 
}44 
private66 
void66 
BadSink66 
(66 
string66 
data66  $
)66% &
{77 
if88 

(88 

badPrivate88 
)88 
{99 	
try:: 
{;; 
using<< 
(<< 
	TcpClient<<  
	tcpClient<<! *
=<<+ ,
new<<- 0
	TcpClient<<1 :
(<<: ;
$str<<; H
,<<H I
$num<<J N
)<<N O
)<<O P
{== 
using>> 
(>> 
StreamWriter>> '
writer>>( .
=>>/ 0
new>>1 4
StreamWriter>>5 A
(>>A B
	tcpClient>>B K
.>>K L
	GetStream>>L U
(>>U V
)>>V W
)>>W X
)>>X Y
{?? 
writerAA 
.AA 
	WriteLineAA (
(AA( )
dataAA) -
)AA- .
;AA. /
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE 
exceptIOEE '
)EE' (
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG 
(GG 
NLogGG "
.GG" #
LogLevelGG# +
.GG+ ,
WarnGG, 0
,GG0 1
$strGG2 R
,GGR S
exceptIOGGT \
)GG\ ]
;GG] ^
}HH 
}II 	
}JJ 
privateMM 
boolMM 
goodB2G1PrivateMM  
=MM! "
falseMM# (
;MM( )
privateNN 
boolNN 
goodB2G2PrivateNN  
=NN! "
falseNN# (
;NN( )
privateOO 
boolOO 
goodG2BPrivateOO 
=OO  !
falseOO" '
;OO' (
publicQQ 

overrideQQ 
voidQQ 
GoodQQ 
(QQ 
)QQ 
{RR 
GoodB2G1SS 
(SS 
)SS 
;SS 
GoodB2G2TT 
(TT 
)TT 
;TT 
GoodG2BUU 
(UU 
)UU 
;UU 
}VV 
privateYY 
voidYY 
GoodB2G1YY 
(YY 
)YY 
{ZZ 
string[[ 
data[[ 
;[[ 
using\\ 
(\\ 
SecureString\\ 
	securePwd\\ %
=\\& '
new\\( +
SecureString\\, 8
(\\8 9
)\\9 :
)\\: ;
{]] 	
for^^ 
(^^ 
int^^ 
i^^ 
=^^ 
$num^^ 
;^^ 
i^^ 
<^^ 
$str^^  +
.^^+ ,
Length^^, 2
;^^2 3
i^^4 5
++^^5 7
)^^7 8
{__ 
	securePwdaa 
.aa 

AppendCharaa $
(aa$ %
$straa% 0
[aa0 1
iaa1 2
]aa2 3
)aa3 4
;aa4 5
}bb 
dataee 
=ee 
	securePwdee 
.ee 
ToStringee %
(ee% &
)ee& '
;ee' (
}ff 	
goodB2G1Privategg 
=gg 
falsegg 
;gg  
GoodB2G1Sinkhh 
(hh 
datahh 
)hh 
;hh 
}ii 
privatekk 
voidkk 
GoodB2G1Sinkkk 
(kk 
stringkk $
datakk% )
)kk* +
{ll 
ifmm 

(mm 
goodB2G1Privatemm 
)mm 
{nn 	
IOpp 
.pp 
	WriteLinepp 
(pp 
$strpp /
)pp/ 0
;pp0 1
}qq 	
elserr 
{ss 	
trytt 
{uu 
usingvv 
(vv 
	TcpClientvv  
clientvv! '
=vv( )
newvv* -
	TcpClientvv. 7
(vv7 8
$strvv8 E
,vvE F
$numvvG K
)vvK L
)vvL M
{ww 
usingxx 
(xx 
	SslStreamxx $
	sslStreamxx% .
=xx/ 0
newxx1 4
	SslStreamxx5 >
(xx> ?
clientxx? E
.xxE F
	GetStreamxxF O
(xxO P
)xxP Q
)xxQ R
)xxR S
{yy 
	sslStream{{ !
.{{! "
Write{{" '
({{' (
Encoding{{( 0
.{{0 1
UTF8{{1 5
.{{5 6
GetBytes{{6 >
({{> ?
data{{? C
){{C D
){{D E
;{{E F
}|| 
}}} 
}~~ 
catch 
( 
IOException 
exceptIO '
)' (
{
ÄÄ 
IO
ÅÅ 
.
ÅÅ 
Logger
ÅÅ 
.
ÅÅ 
Log
ÅÅ 
(
ÅÅ 
NLog
ÅÅ "
.
ÅÅ" #
LogLevel
ÅÅ# +
.
ÅÅ+ ,
Warn
ÅÅ, 0
,
ÅÅ0 1
$str
ÅÅ2 R
,
ÅÅR S
exceptIO
ÅÅT \
)
ÅÅ\ ]
;
ÅÅ] ^
}
ÇÇ 
}
ÉÉ 	
}
ÑÑ 
private
áá 
void
áá 
GoodB2G2
áá 
(
áá 
)
áá 
{
àà 
string
ââ 
data
ââ 
;
ââ 
using
ää 
(
ää 
SecureString
ää 
	securePwd
ää %
=
ää& '
new
ää( +
SecureString
ää, 8
(
ää8 9
)
ää9 :
)
ää: ;
{
ãã 	
for
åå 
(
åå 
int
åå 
i
åå 
=
åå 
$num
åå 
;
åå 
i
åå 
<
åå 
$str
åå  +
.
åå+ ,
Length
åå, 2
;
åå2 3
i
åå4 5
++
åå5 7
)
åå7 8
{
çç 
	securePwd
èè 
.
èè 

AppendChar
èè $
(
èè$ %
$str
èè% 0
[
èè0 1
i
èè1 2
]
èè2 3
)
èè3 4
;
èè4 5
}
êê 
data
ìì 
=
ìì 
	securePwd
ìì 
.
ìì 
ToString
ìì %
(
ìì% &
)
ìì& '
;
ìì' (
}
îî 	
goodB2G2Private
ïï 
=
ïï 
true
ïï 
;
ïï 
GoodB2G2Sink
ññ 
(
ññ 
data
ññ 
)
ññ 
;
ññ 
}
óó 
private
ôô 
void
ôô 
GoodB2G2Sink
ôô 
(
ôô 
string
ôô $
data
ôô% )
)
ôô* +
{
öö 
if
õõ 

(
õõ 
goodB2G2Private
õõ 
)
õõ 
{
úú 	
try
ùù 
{
ûû 
using
üü 
(
üü 
	TcpClient
üü  
client
üü! '
=
üü( )
new
üü* -
	TcpClient
üü. 7
(
üü7 8
$str
üü8 E
,
üüE F
$num
üüG K
)
üüK L
)
üüL M
{
†† 
using
°° 
(
°° 
	SslStream
°° $
	sslStream
°°% .
=
°°/ 0
new
°°1 4
	SslStream
°°5 >
(
°°> ?
client
°°? E
.
°°E F
	GetStream
°°F O
(
°°O P
)
°°P Q
)
°°Q R
)
°°R S
{
¢¢ 
	sslStream
§§ !
.
§§! "
Write
§§" '
(
§§' (
Encoding
§§( 0
.
§§0 1
UTF8
§§1 5
.
§§5 6
GetBytes
§§6 >
(
§§> ?
data
§§? C
)
§§C D
)
§§D E
;
§§E F
}
•• 
}
¶¶ 
}
ßß 
catch
®® 
(
®® 
IOException
®® 
exceptIO
®® '
)
®®' (
{
©© 
IO
™™ 
.
™™ 
Logger
™™ 
.
™™ 
Log
™™ 
(
™™ 
NLog
™™ "
.
™™" #
LogLevel
™™# +
.
™™+ ,
Warn
™™, 0
,
™™0 1
$str
™™2 R
,
™™R S
exceptIO
™™T \
)
™™\ ]
;
™™] ^
}
´´ 
}
¨¨ 	
}
≠≠ 
private
∞∞ 
void
∞∞ 
GoodG2B
∞∞ 
(
∞∞ 
)
∞∞ 
{
±± 
string
≤≤ 
data
≤≤ 
;
≤≤ 
data
¥¥ 
=
¥¥ 
$str
¥¥ 
;
¥¥ 
goodG2BPrivate
µµ 
=
µµ 
true
µµ 
;
µµ 
GoodG2BSink
∂∂ 
(
∂∂ 
data
∂∂ 
)
∂∂ 
;
∂∂ 
}
∑∑ 
private
ππ 
void
ππ 
GoodG2BSink
ππ 
(
ππ 
string
ππ #
data
ππ$ (
)
ππ) *
{
∫∫ 
if
ªª 

(
ªª 
goodG2BPrivate
ªª 
)
ªª 
{
ºº 	
try
ΩΩ 
{
ææ 
using
øø 
(
øø 
	TcpClient
øø  
	tcpClient
øø! *
=
øø+ ,
new
øø- 0
	TcpClient
øø1 :
(
øø: ;
$str
øø; H
,
øøH I
$num
øøJ N
)
øøN O
)
øøO P
{
¿¿ 
using
¡¡ 
(
¡¡ 
StreamWriter
¡¡ '
writer
¡¡( .
=
¡¡/ 0
new
¡¡1 4
StreamWriter
¡¡5 A
(
¡¡A B
	tcpClient
¡¡B K
.
¡¡K L
	GetStream
¡¡L U
(
¡¡U V
)
¡¡V W
)
¡¡W X
)
¡¡X Y
{
¬¬ 
writer
ƒƒ 
.
ƒƒ 
	WriteLine
ƒƒ (
(
ƒƒ( )
data
ƒƒ) -
)
ƒƒ- .
;
ƒƒ. /
}
≈≈ 
}
∆∆ 
}
«« 
catch
»» 
(
»» 
IOException
»» 
exceptIO
»» '
)
»»' (
{
…… 
IO
   
.
   
Logger
   
.
   
Log
   
(
   
NLog
   "
.
  " #
LogLevel
  # +
.
  + ,
Warn
  , 0
,
  0 1
$str
  2 R
,
  R S
exceptIO
  T \
)
  \ ]
;
  ] ^
}
ÀÀ 
}
ÃÃ 	
}
ÕÕ 
}œœ 
}–– ò,
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_22a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_22a 2
:3 4
AbstractTestCase5 E
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{   
string!! 
data!! 
=!! 
null!! 
;!! 
using"" 
("" 
SecureString"" 
	securePwd"" %
=""& '
new""( +
SecureString"", 8
(""8 9
)""9 :
)"": ;
{## 	
for$$ 
($$ 
int$$ 
i$$ 
=$$ 
$num$$ 
;$$ 
i$$ 
<$$ 
$str$$  +
.$$+ ,
Length$$, 2
;$$2 3
i$$4 5
++$$5 7
)$$7 8
{%% 
	securePwd'' 
.'' 

AppendChar'' $
(''$ %
$str''% 0
[''0 1
i''1 2
]''2 3
)''3 4
;''4 5
}(( 
data++ 
=++ 
	securePwd++ 
.++ 
ToString++ %
(++% &
)++& '
;++' (
},, 	
badPublicStatic-- 
=-- 
true-- 
;-- 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_22b.. 4
...4 5
BadSink..5 <
(..< =
data..= A
)..B C
;..C D
}// 
public22 

static22 
bool22  
goodB2G1PublicStatic22 +
=22, -
false22. 3
;223 4
public33 

static33 
bool33  
goodB2G2PublicStatic33 +
=33, -
false33. 3
;333 4
public44 

static44 
bool44 
goodG2BPublicStatic44 *
=44+ ,
false44- 2
;442 3
public66 

override66 
void66 
Good66 
(66 
)66 
{77 
GoodB2G188 
(88 
)88 
;88 
GoodB2G299 
(99 
)99 
;99 
GoodG2B:: 
(:: 
):: 
;:: 
};; 
private>> 
void>> 
GoodB2G1>> 
(>> 
)>> 
{?? 
string@@ 
data@@ 
=@@ 
null@@ 
;@@ 
usingAA 
(AA 
SecureStringAA 
	securePwdAA %
=AA& '
newAA( +
SecureStringAA, 8
(AA8 9
)AA9 :
)AA: ;
{BB 	
forCC 
(CC 
intCC 
iCC 
=CC 
$numCC 
;CC 
iCC 
<CC 
$strCC  +
.CC+ ,
LengthCC, 2
;CC2 3
iCC4 5
++CC5 7
)CC7 8
{DD 
	securePwdFF 
.FF 

AppendCharFF $
(FF$ %
$strFF% 0
[FF0 1
iFF1 2
]FF2 3
)FF3 4
;FF4 5
}GG 
dataJJ 
=JJ 
	securePwdJJ 
.JJ 
ToStringJJ %
(JJ% &
)JJ& '
;JJ' (
}KK 	 
goodB2G1PublicStaticLL 
=LL 
falseLL $
;LL$ %8
,CWE319_Cleartext_Tx_Sensitive_Info__send_22bMM 4
.MM4 5
GoodB2G1SinkMM5 A
(MMA B
dataMMB F
)MMG H
;MMH I
}NN 
privateQQ 
voidQQ 
GoodB2G2QQ 
(QQ 
)QQ 
{RR 
stringSS 
dataSS 
=SS 
nullSS 
;SS 
usingTT 
(TT 
SecureStringTT 
	securePwdTT %
=TT& '
newTT( +
SecureStringTT, 8
(TT8 9
)TT9 :
)TT: ;
{UU 	
forVV 
(VV 
intVV 
iVV 
=VV 
$numVV 
;VV 
iVV 
<VV 
$strVV  +
.VV+ ,
LengthVV, 2
;VV2 3
iVV4 5
++VV5 7
)VV7 8
{WW 
	securePwdYY 
.YY 

AppendCharYY $
(YY$ %
$strYY% 0
[YY0 1
iYY1 2
]YY2 3
)YY3 4
;YY4 5
}ZZ 
data]] 
=]] 
	securePwd]] 
.]] 
ToString]] %
(]]% &
)]]& '
;]]' (
}^^ 	 
goodB2G2PublicStatic__ 
=__ 
true__ #
;__# $8
,CWE319_Cleartext_Tx_Sensitive_Info__send_22b`` 4
.``4 5
GoodB2G2Sink``5 A
(``A B
data``B F
)``G H
;``H I
}aa 
privatedd 
voiddd 
GoodG2Bdd 
(dd 
)dd 
{ee 
stringff 
dataff 
=ff 
nullff 
;ff 
datahh 
=hh 
$strhh 
;hh 
goodG2BPublicStaticii 
=ii 
trueii "
;ii" #8
,CWE319_Cleartext_Tx_Sensitive_Info__send_22bjj 4
.jj4 5
GoodG2BSinkjj5 @
(jj@ A
datajjA E
)jjF G
;jjG H
}kk 
}mm 
}nn …8
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_22b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_22b 2
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
)+ ,
{   
if!! 

(!! 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_22a!! 8
.!!8 9
badPublicStatic!!9 H
)!!H I
{"" 	
try## 
{$$ 
using%% 
(%% 
	TcpClient%%  
	tcpClient%%! *
=%%+ ,
new%%- 0
	TcpClient%%1 :
(%%: ;
$str%%; H
,%%H I
$num%%J N
)%%N O
)%%O P
{&& 
using'' 
('' 
StreamWriter'' '
writer''( .
=''/ 0
new''1 4
StreamWriter''5 A
(''A B
	tcpClient''B K
.''K L
	GetStream''L U
(''U V
)''V W
)''W X
)''X Y
{(( 
writer** 
.** 
	WriteLine** (
(**( )
data**) -
)**- .
;**. /
}++ 
},, 
}-- 
catch.. 
(.. 
IOException.. 
exceptIO.. '
)..' (
{// 
IO00 
.00 
Logger00 
.00 
Log00 
(00 
NLog00 "
.00" #
LogLevel00# +
.00+ ,
Warn00, 0
,000 1
$str002 R
,00R S
exceptIO00T \
)00\ ]
;00] ^
}11 
}22 	
else33 
{44 	
data77 
=77 
null77 
;77 
}88 	
}99 
public>> 

static>> 
void>> 
GoodB2G1Sink>> #
(>># $
string>>$ *
data>>+ /
)>>0 1
{?? 
if@@ 

(@@ 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_22a@@ 8
.@@8 9 
goodB2G1PublicStatic@@9 M
)@@M N
{AA 	
dataDD 
=DD 
nullDD 
;DD 
}EE 	
elseFF 
{GG 	
tryHH 
{II 
usingJJ 
(JJ 
	TcpClientJJ  
clientJJ! '
=JJ( )
newJJ* -
	TcpClientJJ. 7
(JJ7 8
$strJJ8 E
,JJE F
$numJJG K
)JJK L
)JJL M
{KK 
usingLL 
(LL 
	SslStreamLL $
	sslStreamLL% .
=LL/ 0
newLL1 4
	SslStreamLL5 >
(LL> ?
clientLL? E
.LLE F
	GetStreamLLF O
(LLO P
)LLP Q
)LLQ R
)LLR S
{MM 
	sslStreamOO !
.OO! "
WriteOO" '
(OO' (
EncodingOO( 0
.OO0 1
UTF8OO1 5
.OO5 6
GetBytesOO6 >
(OO> ?
dataOO? C
)OOC D
)OOD E
;OOE F
}PP 
}QQ 
}RR 
catchSS 
(SS 
IOExceptionSS 
exceptIOSS '
)SS' (
{TT 
IOUU 
.UU 
LoggerUU 
.UU 
LogUU 
(UU 
NLogUU "
.UU" #
LogLevelUU# +
.UU+ ,
WarnUU, 0
,UU0 1
$strUU2 R
,UUR S
exceptIOUUT \
)UU\ ]
;UU] ^
}VV 
}WW 	
}XX 
public[[ 

static[[ 
void[[ 
GoodB2G2Sink[[ #
([[# $
string[[$ *
data[[+ /
)[[0 1
{\\ 
if]] 

(]] 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_22a]] 8
.]]8 9 
goodB2G2PublicStatic]]9 M
)]]M N
{^^ 	
try__ 
{`` 
usingaa 
(aa 
	TcpClientaa  
clientaa! '
=aa( )
newaa* -
	TcpClientaa. 7
(aa7 8
$straa8 E
,aaE F
$numaaG K
)aaK L
)aaL M
{bb 
usingcc 
(cc 
	SslStreamcc $
	sslStreamcc% .
=cc/ 0
newcc1 4
	SslStreamcc5 >
(cc> ?
clientcc? E
.ccE F
	GetStreamccF O
(ccO P
)ccP Q
)ccQ R
)ccR S
{dd 
	sslStreamff !
.ff! "
Writeff" '
(ff' (
Encodingff( 0
.ff0 1
UTF8ff1 5
.ff5 6
GetBytesff6 >
(ff> ?
dataff? C
)ffC D
)ffD E
;ffE F
}gg 
}hh 
}ii 
catchjj 
(jj 
IOExceptionjj 
exceptIOjj '
)jj' (
{kk 
IOll 
.ll 
Loggerll 
.ll 
Logll 
(ll 
NLogll "
.ll" #
LogLevelll# +
.ll+ ,
Warnll, 0
,ll0 1
$strll2 R
,llR S
exceptIOllT \
)ll\ ]
;ll] ^
}mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
nullss 
;ss 
}tt 	
}uu 
publicxx 

staticxx 
voidxx 
GoodG2BSinkxx "
(xx" #
stringxx# )
dataxx* .
)xx/ 0
{yy 
ifzz 

(zz 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_22azz 8
.zz8 9
goodG2BPublicStaticzz9 L
)zzL M
{{{ 	
try|| 
{}} 
using~~ 
(~~ 
	TcpClient~~  
	tcpClient~~! *
=~~+ ,
new~~- 0
	TcpClient~~1 :
(~~: ;
$str~~; H
,~~H I
$num~~J N
)~~N O
)~~O P
{ 
using
ÄÄ 
(
ÄÄ 
StreamWriter
ÄÄ '
writer
ÄÄ( .
=
ÄÄ/ 0
new
ÄÄ1 4
StreamWriter
ÄÄ5 A
(
ÄÄA B
	tcpClient
ÄÄB K
.
ÄÄK L
	GetStream
ÄÄL U
(
ÄÄU V
)
ÄÄV W
)
ÄÄW X
)
ÄÄX Y
{
ÅÅ 
writer
ÉÉ 
.
ÉÉ 
	WriteLine
ÉÉ (
(
ÉÉ( )
data
ÉÉ) -
)
ÉÉ- .
;
ÉÉ. /
}
ÑÑ 
}
ÖÖ 
}
ÜÜ 
catch
áá 
(
áá 
IOException
áá 
exceptIO
áá '
)
áá' (
{
àà 
IO
ââ 
.
ââ 
Logger
ââ 
.
ââ 
Log
ââ 
(
ââ 
NLog
ââ "
.
ââ" #
LogLevel
ââ# +
.
ââ+ ,
Warn
ââ, 0
,
ââ0 1
$str
ââ2 R
,
ââR S
exceptIO
ââT \
)
ââ\ ]
;
ââ] ^
}
ää 
}
ãã 	
else
åå 
{
çç 	
data
êê 
=
êê 
null
êê 
;
êê 
}
ëë 	
}
íí 
}îî 
}ïï ¿:
≠C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_31.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 7
+CWE319_Cleartext_Tx_Sensitive_Info__send_31 1
:2 3
AbstractTestCase4 D
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
dataCopy## 
;## 
{$$ 	
string%% 
data%% 
;%% 
using&& 
(&& 
SecureString&& 
	securePwd&&  )
=&&* +
new&&, /
SecureString&&0 <
(&&< =
)&&= >
)&&> ?
{'' 
for(( 
((( 
int(( 
i(( 
=(( 
$num(( 
;(( 
i((  !
<((" #
$str(($ /
.((/ 0
Length((0 6
;((6 7
i((8 9
++((9 ;
)((; <
{)) 
	securePwd++ 
.++ 

AppendChar++ (
(++( )
$str++) 4
[++4 5
i++5 6
]++6 7
)++7 8
;++8 9
},, 
data// 
=// 
	securePwd//  
.//  !
ToString//! )
(//) *
)//* +
;//+ ,
}00 
dataCopy11 
=11 
data11 
;11 
}22 	
{33 	
string44 
data44 
=44 
dataCopy44 "
;44" #
try55 
{66 
using77 
(77 
	TcpClient77  
	tcpClient77! *
=77+ ,
new77- 0
	TcpClient771 :
(77: ;
$str77; H
,77H I
$num77J N
)77N O
)77O P
{88 
using99 
(99 
StreamWriter99 '
writer99( .
=99/ 0
new991 4
StreamWriter995 A
(99A B
	tcpClient99B K
.99K L
	GetStream99L U
(99U V
)99V W
)99W X
)99X Y
{:: 
writer<< 
.<< 
	WriteLine<< (
(<<( )
data<<) -
)<<- .
;<<. /
}== 
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ 
exceptIO@@ '
)@@' (
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
$strBB2 R
,BBR S
exceptIOBBT \
)BB\ ]
;BB] ^
}CC 
}DD 	
}EE 
publicHH 

overrideHH 
voidHH 
GoodHH 
(HH 
)HH 
{II 
GoodG2BJJ 
(JJ 
)JJ 
;JJ 
GoodB2GKK 
(KK 
)KK 
;KK 
}LL 
privateOO 
voidOO 
GoodG2BOO 
(OO 
)OO 
{PP 
stringQQ 
dataCopyQQ 
;QQ 
{RR 	
stringSS 
dataSS 
;SS 
dataUU 
=UU 
$strUU  
;UU  !
dataCopyVV 
=VV 
dataVV 
;VV 
}WW 	
{XX 	
stringYY 
dataYY 
=YY 
dataCopyYY "
;YY" #
tryZZ 
{[[ 
using\\ 
(\\ 
	TcpClient\\  
	tcpClient\\! *
=\\+ ,
new\\- 0
	TcpClient\\1 :
(\\: ;
$str\\; H
,\\H I
$num\\J N
)\\N O
)\\O P
{]] 
using^^ 
(^^ 
StreamWriter^^ '
writer^^( .
=^^/ 0
new^^1 4
StreamWriter^^5 A
(^^A B
	tcpClient^^B K
.^^K L
	GetStream^^L U
(^^U V
)^^V W
)^^W X
)^^X Y
{__ 
writeraa 
.aa 
	WriteLineaa (
(aa( )
dataaa) -
)aa- .
;aa. /
}bb 
}cc 
}dd 
catchee 
(ee 
IOExceptionee 
exceptIOee '
)ee' (
{ff 
IOgg 
.gg 
Loggergg 
.gg 
Loggg 
(gg 
NLoggg "
.gg" #
LogLevelgg# +
.gg+ ,
Warngg, 0
,gg0 1
$strgg2 R
,ggR S
exceptIOggT \
)gg\ ]
;gg] ^
}hh 
}ii 	
}jj 
privatemm 
voidmm 
GoodB2Gmm 
(mm 
)mm 
{nn 
stringoo 
dataCopyoo 
;oo 
{pp 	
stringqq 
dataqq 
;qq 
usingrr 
(rr 
SecureStringrr 
	securePwdrr  )
=rr* +
newrr, /
SecureStringrr0 <
(rr< =
)rr= >
)rr> ?
{ss 
fortt 
(tt 
inttt 
itt 
=tt 
$numtt 
;tt 
itt  !
<tt" #
$strtt$ /
.tt/ 0
Lengthtt0 6
;tt6 7
itt8 9
++tt9 ;
)tt; <
{uu 
	securePwdww 
.ww 

AppendCharww (
(ww( )
$strww) 4
[ww4 5
iww5 6
]ww6 7
)ww7 8
;ww8 9
}xx 
data{{ 
={{ 
	securePwd{{  
.{{  !
ToString{{! )
({{) *
){{* +
;{{+ ,
}|| 
dataCopy}} 
=}} 
data}} 
;}} 
}~~ 	
{ 	
string
ÄÄ 
data
ÄÄ 
=
ÄÄ 
dataCopy
ÄÄ "
;
ÄÄ" #
try
ÅÅ 
{
ÇÇ 
using
ÉÉ 
(
ÉÉ 
	TcpClient
ÉÉ  
client
ÉÉ! '
=
ÉÉ( )
new
ÉÉ* -
	TcpClient
ÉÉ. 7
(
ÉÉ7 8
$str
ÉÉ8 E
,
ÉÉE F
$num
ÉÉG K
)
ÉÉK L
)
ÉÉL M
{
ÑÑ 
using
ÖÖ 
(
ÖÖ 
	SslStream
ÖÖ $
	sslStream
ÖÖ% .
=
ÖÖ/ 0
new
ÖÖ1 4
	SslStream
ÖÖ5 >
(
ÖÖ> ?
client
ÖÖ? E
.
ÖÖE F
	GetStream
ÖÖF O
(
ÖÖO P
)
ÖÖP Q
)
ÖÖQ R
)
ÖÖR S
{
ÜÜ 
	sslStream
àà !
.
àà! "
Write
àà" '
(
àà' (
Encoding
àà( 0
.
àà0 1
UTF8
àà1 5
.
àà5 6
GetBytes
àà6 >
(
àà> ?
data
àà? C
)
ààC D
)
ààD E
;
ààE F
}
ââ 
}
ää 
}
ãã 
catch
åå 
(
åå 
IOException
åå 
exceptIO
åå '
)
åå' (
{
çç 
IO
éé 
.
éé 
Logger
éé 
.
éé 
Log
éé 
(
éé 
NLog
éé "
.
éé" #
LogLevel
éé# +
.
éé+ ,
Warn
éé, 0
,
éé0 1
$str
éé2 R
,
ééR S
exceptIO
ééT \
)
éé\ ]
;
éé] ^
}
èè 
}
êê 	
}
ëë 
}ìì 
}îî É:
≠C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_41.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 7
+CWE319_Cleartext_Tx_Sensitive_Info__send_41 1
:2 3
AbstractTestCase4 D
{ 
private!! 
static!! 
void!! 
BadSink!! 
(!!  
string!!  &
data!!' +
)!!, -
{"" 
try## 
{$$ 	
using%% 
(%% 
	TcpClient%% 
	tcpClient%% &
=%%' (
new%%) ,
	TcpClient%%- 6
(%%6 7
$str%%7 D
,%%D E
$num%%F J
)%%J K
)%%K L
{&& 
using'' 
('' 
StreamWriter'' #
writer''$ *
=''+ ,
new''- 0
StreamWriter''1 =
(''= >
	tcpClient''> G
.''G H
	GetStream''H Q
(''Q R
)''R S
)''S T
)''T U
{(( 
writer** 
.** 
	WriteLine** $
(**$ %
data**% )
)**) *
;*** +
}++ 
},, 
}-- 	
catch.. 
(.. 
IOException.. 
exceptIO.. #
)..# $
{// 	
IO00 
.00 
Logger00 
.00 
Log00 
(00 
NLog00 
.00 
LogLevel00 '
.00' (
Warn00( ,
,00, -
$str00. N
,00N O
exceptIO00P X
)00X Y
;00Y Z
}11 	
}22 
public44 

override44 
void44 
Bad44 
(44 
)44 
{55 
string66 
data66 
;66 
using77 
(77 
SecureString77 
	securePwd77 %
=77& '
new77( +
SecureString77, 8
(778 9
)779 :
)77: ;
{88 	
for99 
(99 
int99 
i99 
=99 
$num99 
;99 
i99 
<99 
$str99  +
.99+ ,
Length99, 2
;992 3
i994 5
++995 7
)997 8
{:: 
	securePwd<< 
.<< 

AppendChar<< $
(<<$ %
$str<<% 0
[<<0 1
i<<1 2
]<<2 3
)<<3 4
;<<4 5
}== 
data@@ 
=@@ 
	securePwd@@ 
.@@ 
ToString@@ %
(@@% &
)@@& '
;@@' (
}AA 	
BadSinkBB 
(BB 
dataBB 
)BB 
;BB 
}CC 
publicFF 

overrideFF 
voidFF 
GoodFF 
(FF 
)FF 
{GG 
GoodG2BHH 
(HH 
)HH 
;HH 
GoodB2GII 
(II 
)II 
;II 
}JJ 
privateLL 
staticLL 
voidLL 
GoodG2BSinkLL #
(LL# $
stringLL$ *
dataLL+ /
)LL0 1
{MM 
tryNN 
{OO 	
usingPP 
(PP 
	TcpClientPP 
	tcpClientPP &
=PP' (
newPP) ,
	TcpClientPP- 6
(PP6 7
$strPP7 D
,PPD E
$numPPF J
)PPJ K
)PPK L
{QQ 
usingRR 
(RR 
StreamWriterRR #
writerRR$ *
=RR+ ,
newRR- 0
StreamWriterRR1 =
(RR= >
	tcpClientRR> G
.RRG H
	GetStreamRRH Q
(RRQ R
)RRR S
)RRS T
)RRT U
{SS 
writerUU 
.UU 
	WriteLineUU $
(UU$ %
dataUU% )
)UU) *
;UU* +
}VV 
}WW 
}XX 	
catchYY 
(YY 
IOExceptionYY 
exceptIOYY #
)YY# $
{ZZ 	
IO[[ 
.[[ 
Logger[[ 
.[[ 
Log[[ 
([[ 
NLog[[ 
.[[ 
LogLevel[[ '
.[[' (
Warn[[( ,
,[[, -
$str[[. N
,[[N O
exceptIO[[P X
)[[X Y
;[[Y Z
}\\ 	
}]] 
private`` 
static`` 
void`` 
GoodG2B`` 
(``  
)``  !
{aa 
stringbb 
databb 
;bb 
datadd 
=dd 
$strdd 
;dd 
GoodG2BSinkee 
(ee 
dataee 
)ee 
;ee 
}ff 
privatehh 
statichh 
voidhh 
GoodB2GSinkhh #
(hh# $
stringhh$ *
datahh+ /
)hh0 1
{ii 
tryjj 
{kk 	
usingll 
(ll 
	TcpClientll 
clientll #
=ll$ %
newll& )
	TcpClientll* 3
(ll3 4
$strll4 A
,llA B
$numllC G
)llG H
)llH I
{mm 
usingnn 
(nn 
	SslStreamnn  
	sslStreamnn! *
=nn+ ,
newnn- 0
	SslStreamnn1 :
(nn: ;
clientnn; A
.nnA B
	GetStreamnnB K
(nnK L
)nnL M
)nnM N
)nnN O
{oo 
	sslStreamqq 
.qq 
Writeqq #
(qq# $
Encodingqq$ ,
.qq, -
UTF8qq- 1
.qq1 2
GetBytesqq2 :
(qq: ;
dataqq; ?
)qq? @
)qq@ A
;qqA B
}rr 
}ss 
}tt 	
catchuu 
(uu 
IOExceptionuu 
exceptIOuu #
)uu# $
{vv 	
IOww 
.ww 
Loggerww 
.ww 
Logww 
(ww 
NLogww 
.ww 
LogLevelww '
.ww' (
Warnww( ,
,ww, -
$strww. N
,wwN O
exceptIOwwP X
)wwX Y
;wwY Z
}xx 	
}yy 
private|| 
static|| 
void|| 
GoodB2G|| 
(||  
)||  !
{}} 
string~~ 
data~~ 
;~~ 
using 
( 
SecureString 
	securePwd %
=& '
new( +
SecureString, 8
(8 9
)9 :
): ;
{
ÄÄ 	
for
ÅÅ 
(
ÅÅ 
int
ÅÅ 
i
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
i
ÅÅ 
<
ÅÅ 
$str
ÅÅ  +
.
ÅÅ+ ,
Length
ÅÅ, 2
;
ÅÅ2 3
i
ÅÅ4 5
++
ÅÅ5 7
)
ÅÅ7 8
{
ÇÇ 
	securePwd
ÑÑ 
.
ÑÑ 

AppendChar
ÑÑ $
(
ÑÑ$ %
$str
ÑÑ% 0
[
ÑÑ0 1
i
ÑÑ1 2
]
ÑÑ2 3
)
ÑÑ3 4
;
ÑÑ4 5
}
ÖÖ 
data
àà 
=
àà 
	securePwd
àà 
.
àà 
ToString
àà %
(
àà% &
)
àà& '
;
àà' (
}
ââ 	
GoodB2GSink
ää 
(
ää 
data
ää 
)
ää 
;
ää 
}
ãã 
}çç 
}éé «;
≠C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_42.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 7
+CWE319_Cleartext_Tx_Sensitive_Info__send_42 1
:2 3
AbstractTestCase4 D
{ 
private!! 
static!! 
string!! 
	BadSource!! #
(!!# $
)!!$ %
{"" 
string## 
data## 
;## 
using$$ 
($$ 
SecureString$$ 
	securePwd$$ %
=$$& '
new$$( +
SecureString$$, 8
($$8 9
)$$9 :
)$$: ;
{%% 	
for&& 
(&& 
int&& 
i&& 
=&& 
$num&& 
;&& 
i&& 
<&& 
$str&&  +
.&&+ ,
Length&&, 2
;&&2 3
i&&4 5
++&&5 7
)&&7 8
{'' 
	securePwd)) 
.)) 

AppendChar)) $
())$ %
$str))% 0
[))0 1
i))1 2
]))2 3
)))3 4
;))4 5
}** 
data-- 
=-- 
	securePwd-- 
.-- 
ToString-- %
(--% &
)--& '
;--' (
}.. 	
return// 
data// 
;// 
}00 
public22 

override22 
void22 
Bad22 
(22 
)22 
{33 
string44 
data44 
=44 
	BadSource44 
(44  
)44  !
;44! "
try55 
{66 	
using77 
(77 
	TcpClient77 
	tcpClient77 &
=77' (
new77) ,
	TcpClient77- 6
(776 7
$str777 D
,77D E
$num77F J
)77J K
)77K L
{88 
using99 
(99 
StreamWriter99 #
writer99$ *
=99+ ,
new99- 0
StreamWriter991 =
(99= >
	tcpClient99> G
.99G H
	GetStream99H Q
(99Q R
)99R S
)99S T
)99T U
{:: 
writer<< 
.<< 
	WriteLine<< $
(<<$ %
data<<% )
)<<) *
;<<* +
}== 
}>> 
}?? 	
catch@@ 
(@@ 
IOException@@ 
exceptIO@@ #
)@@# $
{AA 	
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB 
.BB 
LogLevelBB '
.BB' (
WarnBB( ,
,BB, -
$strBB. N
,BBN O
exceptIOBBP X
)BBX Y
;BBY Z
}CC 	
}DD 
privateHH 
staticHH 
stringHH 
GoodG2BSourceHH '
(HH' (
)HH( )
{II 
stringJJ 
dataJJ 
;JJ 
dataLL 
=LL 
$strLL 
;LL 
returnMM 
dataMM 
;MM 
}NN 
privatePP 
staticPP 
voidPP 
GoodG2BPP 
(PP  
)PP  !
{QQ 
stringRR 
dataRR 
=RR 
GoodG2BSourceRR #
(RR# $
)RR$ %
;RR% &
trySS 
{TT 	
usingUU 
(UU 
	TcpClientUU 
	tcpClientUU &
=UU' (
newUU) ,
	TcpClientUU- 6
(UU6 7
$strUU7 D
,UUD E
$numUUF J
)UUJ K
)UUK L
{VV 
usingWW 
(WW 
StreamWriterWW #
writerWW$ *
=WW+ ,
newWW- 0
StreamWriterWW1 =
(WW= >
	tcpClientWW> G
.WWG H
	GetStreamWWH Q
(WWQ R
)WWR S
)WWS T
)WWT U
{XX 
writerZZ 
.ZZ 
	WriteLineZZ $
(ZZ$ %
dataZZ% )
)ZZ) *
;ZZ* +
}[[ 
}\\ 
}]] 	
catch^^ 
(^^ 
IOException^^ 
exceptIO^^ #
)^^# $
{__ 	
IO`` 
.`` 
Logger`` 
.`` 
Log`` 
(`` 
NLog`` 
.`` 
LogLevel`` '
.``' (
Warn``( ,
,``, -
$str``. N
,``N O
exceptIO``P X
)``X Y
;``Y Z
}aa 	
}bb 
privateee 
staticee 
stringee 
GoodB2GSourceee '
(ee' (
)ee( )
{ff 
stringgg 
datagg 
;gg 
usinghh 
(hh 
SecureStringhh 
	securePwdhh %
=hh& '
newhh( +
SecureStringhh, 8
(hh8 9
)hh9 :
)hh: ;
{ii 	
forjj 
(jj 
intjj 
ijj 
=jj 
$numjj 
;jj 
ijj 
<jj 
$strjj  +
.jj+ ,
Lengthjj, 2
;jj2 3
ijj4 5
++jj5 7
)jj7 8
{kk 
	securePwdmm 
.mm 

AppendCharmm $
(mm$ %
$strmm% 0
[mm0 1
imm1 2
]mm2 3
)mm3 4
;mm4 5
}nn 
dataqq 
=qq 
	securePwdqq 
.qq 
ToStringqq %
(qq% &
)qq& '
;qq' (
}rr 	
returnss 
datass 
;ss 
}tt 
privatevv 
staticvv 
voidvv 
GoodB2Gvv 
(vv  
)vv  !
{ww 
stringxx 
dataxx 
=xx 
GoodB2GSourcexx #
(xx# $
)xx$ %
;xx% &
tryyy 
{zz 	
using{{ 
({{ 
	TcpClient{{ 
client{{ #
={{$ %
new{{& )
	TcpClient{{* 3
({{3 4
$str{{4 A
,{{A B
$num{{C G
){{G H
){{H I
{|| 
using}} 
(}} 
	SslStream}}  
	sslStream}}! *
=}}+ ,
new}}- 0
	SslStream}}1 :
(}}: ;
client}}; A
.}}A B
	GetStream}}B K
(}}K L
)}}L M
)}}M N
)}}N O
{~~ 
	sslStream
ÄÄ 
.
ÄÄ 
Write
ÄÄ #
(
ÄÄ# $
Encoding
ÄÄ$ ,
.
ÄÄ, -
UTF8
ÄÄ- 1
.
ÄÄ1 2
GetBytes
ÄÄ2 :
(
ÄÄ: ;
data
ÄÄ; ?
)
ÄÄ? @
)
ÄÄ@ A
;
ÄÄA B
}
ÅÅ 
}
ÇÇ 
}
ÉÉ 	
catch
ÑÑ 
(
ÑÑ 
IOException
ÑÑ 
exceptIO
ÑÑ #
)
ÑÑ# $
{
ÖÖ 	
IO
ÜÜ 
.
ÜÜ 
Logger
ÜÜ 
.
ÜÜ 
Log
ÜÜ 
(
ÜÜ 
NLog
ÜÜ 
.
ÜÜ 
LogLevel
ÜÜ '
.
ÜÜ' (
Warn
ÜÜ( ,
,
ÜÜ, -
$str
ÜÜ. N
,
ÜÜN O
exceptIO
ÜÜP X
)
ÜÜX Y
;
ÜÜY Z
}
áá 	
}
àà 
public
ää 

override
ää 
void
ää 
Good
ää 
(
ää 
)
ää 
{
ãã 
GoodG2B
åå 
(
åå 
)
åå 
;
åå 
GoodB2G
çç 
(
çç 
)
çç 
;
çç 
}
éé 
}êê 
}ëë ¢>
≠C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_45.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 7
+CWE319_Cleartext_Tx_Sensitive_Info__send_45 1
:2 3
AbstractTestCase4 D
{ 
private!! 
string!! 
dataBad!! 
;!! 
private"" 
string"" 
dataGoodG2B"" 
;"" 
private## 
string## 
dataGoodB2G## 
;## 
private%% 
void%% 
BadSink%% 
(%% 
)%% 
{&& 
string'' 
data'' 
='' 
dataBad'' 
;'' 
try(( 
{)) 	
using** 
(** 
	TcpClient** 
	tcpClient** &
=**' (
new**) ,
	TcpClient**- 6
(**6 7
$str**7 D
,**D E
$num**F J
)**J K
)**K L
{++ 
using,, 
(,, 
StreamWriter,, #
writer,,$ *
=,,+ ,
new,,- 0
StreamWriter,,1 =
(,,= >
	tcpClient,,> G
.,,G H
	GetStream,,H Q
(,,Q R
),,R S
),,S T
),,T U
{-- 
writer// 
.// 
	WriteLine// $
(//$ %
data//% )
)//) *
;//* +
}00 
}11 
}22 	
catch33 
(33 
IOException33 
exceptIO33 #
)33# $
{44 	
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 
.55 
LogLevel55 '
.55' (
Warn55( ,
,55, -
$str55. N
,55N O
exceptIO55P X
)55X Y
;55Y Z
}66 	
}77 
public99 

override99 
void99 
Bad99 
(99 
)99 
{:: 
string;; 
data;; 
;;; 
using<< 
(<< 
SecureString<< 
	securePwd<< %
=<<& '
new<<( +
SecureString<<, 8
(<<8 9
)<<9 :
)<<: ;
{== 	
for>> 
(>> 
int>> 
i>> 
=>> 
$num>> 
;>> 
i>> 
<>> 
$str>>  +
.>>+ ,
Length>>, 2
;>>2 3
i>>4 5
++>>5 7
)>>7 8
{?? 
	securePwdAA 
.AA 

AppendCharAA $
(AA$ %
$strAA% 0
[AA0 1
iAA1 2
]AA2 3
)AA3 4
;AA4 5
}BB 
dataEE 
=EE 
	securePwdEE 
.EE 
ToStringEE %
(EE% &
)EE& '
;EE' (
}FF 	
dataBadGG 
=GG 
dataGG 
;GG 
BadSinkHH 
(HH 
)HH 
;HH 
}II 
publicLL 

overrideLL 
voidLL 
GoodLL 
(LL 
)LL 
{MM 
GoodG2BNN 
(NN 
)NN 
;NN 
GoodB2GOO 
(OO 
)OO 
;OO 
}PP 
privateRR 
voidRR 
GoodG2BSinkRR 
(RR 
)RR 
{SS 
stringTT 
dataTT 
=TT 
dataGoodG2BTT !
;TT! "
tryUU 
{VV 	
usingWW 
(WW 
	TcpClientWW 
	tcpClientWW &
=WW' (
newWW) ,
	TcpClientWW- 6
(WW6 7
$strWW7 D
,WWD E
$numWWF J
)WWJ K
)WWK L
{XX 
usingYY 
(YY 
StreamWriterYY #
writerYY$ *
=YY+ ,
newYY- 0
StreamWriterYY1 =
(YY= >
	tcpClientYY> G
.YYG H
	GetStreamYYH Q
(YYQ R
)YYR S
)YYS T
)YYT U
{ZZ 
writer\\ 
.\\ 
	WriteLine\\ $
(\\$ %
data\\% )
)\\) *
;\\* +
}]] 
}^^ 
}__ 	
catch`` 
(`` 
IOException`` 
exceptIO`` #
)``# $
{aa 	
IObb 
.bb 
Loggerbb 
.bb 
Logbb 
(bb 
NLogbb 
.bb 
LogLevelbb '
.bb' (
Warnbb( ,
,bb, -
$strbb. N
,bbN O
exceptIObbP X
)bbX Y
;bbY Z
}cc 	
}dd 
privategg 
voidgg 
GoodG2Bgg 
(gg 
)gg 
{hh 
stringii 
dataii 
;ii 
datakk 
=kk 
$strkk 
;kk 
dataGoodG2Bll 
=ll 
datall 
;ll 
GoodG2BSinkmm 
(mm 
)mm 
;mm 
}nn 
privatepp 
voidpp 
GoodB2GSinkpp 
(pp 
)pp 
{qq 
stringrr 
datarr 
=rr 
dataGoodB2Grr !
;rr! "
tryss 
{tt 	
usinguu 
(uu 
	TcpClientuu 
clientuu #
=uu$ %
newuu& )
	TcpClientuu* 3
(uu3 4
$struu4 A
,uuA B
$numuuC G
)uuG H
)uuH I
{vv 
usingww 
(ww 
	SslStreamww  
	sslStreamww! *
=ww+ ,
newww- 0
	SslStreamww1 :
(ww: ;
clientww; A
.wwA B
	GetStreamwwB K
(wwK L
)wwL M
)wwM N
)wwN O
{xx 
	sslStreamzz 
.zz 
Writezz #
(zz# $
Encodingzz$ ,
.zz, -
UTF8zz- 1
.zz1 2
GetByteszz2 :
(zz: ;
datazz; ?
)zz? @
)zz@ A
;zzA B
}{{ 
}|| 
}}} 	
catch~~ 
(~~ 
IOException~~ 
exceptIO~~ #
)~~# $
{ 	
IO
ÄÄ 
.
ÄÄ 
Logger
ÄÄ 
.
ÄÄ 
Log
ÄÄ 
(
ÄÄ 
NLog
ÄÄ 
.
ÄÄ 
LogLevel
ÄÄ '
.
ÄÄ' (
Warn
ÄÄ( ,
,
ÄÄ, -
$str
ÄÄ. N
,
ÄÄN O
exceptIO
ÄÄP X
)
ÄÄX Y
;
ÄÄY Z
}
ÅÅ 	
}
ÇÇ 
private
ÖÖ 
void
ÖÖ 
GoodB2G
ÖÖ 
(
ÖÖ 
)
ÖÖ 
{
ÜÜ 
string
áá 
data
áá 
;
áá 
using
àà 
(
àà 
SecureString
àà 
	securePwd
àà %
=
àà& '
new
àà( +
SecureString
àà, 8
(
àà8 9
)
àà9 :
)
àà: ;
{
ââ 	
for
ää 
(
ää 
int
ää 
i
ää 
=
ää 
$num
ää 
;
ää 
i
ää 
<
ää 
$str
ää  +
.
ää+ ,
Length
ää, 2
;
ää2 3
i
ää4 5
++
ää5 7
)
ää7 8
{
ãã 
	securePwd
çç 
.
çç 

AppendChar
çç $
(
çç$ %
$str
çç% 0
[
çç0 1
i
çç1 2
]
çç2 3
)
çç3 4
;
çç4 5
}
éé 
data
ëë 
=
ëë 
	securePwd
ëë 
.
ëë 
ToString
ëë %
(
ëë% &
)
ëë& '
;
ëë' (
}
íí 	
dataGoodB2G
ìì 
=
ìì 
data
ìì 
;
ìì 
GoodB2GSink
îî 
(
îî 
)
îî 
;
îî 
}
ïï 
}óó 
}òò „
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_51a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_51a 2
:3 4
AbstractTestCase5 E
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string 
data 
; 
using 
( 
SecureString 
	securePwd %
=& '
new( +
SecureString, 8
(8 9
)9 :
): ;
{   	
for!! 
(!! 
int!! 
i!! 
=!! 
$num!! 
;!! 
i!! 
<!! 
$str!!  +
.!!+ ,
Length!!, 2
;!!2 3
i!!4 5
++!!5 7
)!!7 8
{"" 
	securePwd$$ 
.$$ 

AppendChar$$ $
($$$ %
$str$$% 0
[$$0 1
i$$1 2
]$$2 3
)$$3 4
;$$4 5
}%% 
data(( 
=(( 
	securePwd(( 
.(( 
ToString(( %
(((% &
)((& '
;((' (
})) 	8
,CWE319_Cleartext_Tx_Sensitive_Info__send_51b** 4
.**4 5
BadSink**5 <
(**< =
data**= A
)**C D
;**D E
}++ 
public.. 

override.. 
void.. 
Good.. 
(.. 
).. 
{// 
GoodG2B00 
(00 
)00 
;00 
GoodB2G11 
(11 
)11 
;11 
}22 
private55 
void55 
GoodG2B55 
(55 
)55 
{66 
string77 
data77 
;77 
data99 
=99 
$str99 
;99 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_51b:: 4
.::4 5
GoodG2BSink::5 @
(::@ A
data::A E
)::G H
;::H I
};; 
private>> 
void>> 
GoodB2G>> 
(>> 
)>> 
{?? 
string@@ 
data@@ 
;@@ 
usingAA 
(AA 
SecureStringAA 
	securePwdAA %
=AA& '
newAA( +
SecureStringAA, 8
(AA8 9
)AA9 :
)AA: ;
{BB 	
forCC 
(CC 
intCC 
iCC 
=CC 
$numCC 
;CC 
iCC 
<CC 
$strCC  +
.CC+ ,
LengthCC, 2
;CC2 3
iCC4 5
++CC5 7
)CC7 8
{DD 
	securePwdFF 
.FF 

AppendCharFF $
(FF$ %
$strFF% 0
[FF0 1
iFF1 2
]FF2 3
)FF3 4
;FF4 5
}GG 
dataJJ 
=JJ 
	securePwdJJ 
.JJ 
ToStringJJ %
(JJ% &
)JJ& '
;JJ' (
}KK 	8
,CWE319_Cleartext_Tx_Sensitive_Info__send_51bLL 4
.LL4 5
GoodB2GSinkLL5 @
(LL@ A
dataLLA E
)LLG H
;LLH I
}MM 
}OO 
}PP ë#
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_51b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_51b 2
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
)+ ,
{   
try!! 
{"" 	
using## 
(## 
	TcpClient## 
	tcpClient## &
=##' (
new##) ,
	TcpClient##- 6
(##6 7
$str##7 D
,##D E
$num##F J
)##J K
)##K L
{$$ 
using%% 
(%% 
StreamWriter%% #
writer%%$ *
=%%+ ,
new%%- 0
StreamWriter%%1 =
(%%= >
	tcpClient%%> G
.%%G H
	GetStream%%H Q
(%%Q R
)%%R S
)%%S T
)%%T U
{&& 
writer(( 
.(( 
	WriteLine(( $
((($ %
data((% )
)(() *
;((* +
})) 
}** 
}++ 	
catch,, 
(,, 
IOException,, 
exceptIO,, #
),,# $
{-- 	
IO.. 
... 
Logger.. 
... 
Log.. 
(.. 
NLog.. 
... 
LogLevel.. '
...' (
Warn..( ,
,.., -
$str... N
,..N O
exceptIO..P X
)..X Y
;..Y Z
}// 	
}00 
public55 

static55 
void55 
GoodG2BSink55 "
(55" #
string55# )
data55* .
)55/ 0
{66 
try77 
{88 	
using99 
(99 
	TcpClient99 
	tcpClient99 &
=99' (
new99) ,
	TcpClient99- 6
(996 7
$str997 D
,99D E
$num99F J
)99J K
)99K L
{:: 
using;; 
(;; 
StreamWriter;; #
writer;;$ *
=;;+ ,
new;;- 0
StreamWriter;;1 =
(;;= >
	tcpClient;;> G
.;;G H
	GetStream;;H Q
(;;Q R
);;R S
);;S T
);;T U
{<< 
writer>> 
.>> 
	WriteLine>> $
(>>$ %
data>>% )
)>>) *
;>>* +
}?? 
}@@ 
}AA 	
catchBB 
(BB 
IOExceptionBB 
exceptIOBB #
)BB# $
{CC 	
IODD 
.DD 
LoggerDD 
.DD 
LogDD 
(DD 
NLogDD 
.DD 
LogLevelDD '
.DD' (
WarnDD( ,
,DD, -
$strDD. N
,DDN O
exceptIODDP X
)DDX Y
;DDY Z
}EE 	
}FF 
publicII 

staticII 
voidII 
GoodB2GSinkII "
(II" #
stringII# )
dataII* .
)II/ 0
{JJ 
tryKK 
{LL 	
usingMM 
(MM 
	TcpClientMM 
clientMM #
=MM$ %
newMM& )
	TcpClientMM* 3
(MM3 4
$strMM4 A
,MMA B
$numMMC G
)MMG H
)MMH I
{NN 
usingOO 
(OO 
	SslStreamOO  
	sslStreamOO! *
=OO+ ,
newOO- 0
	SslStreamOO1 :
(OO: ;
clientOO; A
.OOA B
	GetStreamOOB K
(OOK L
)OOL M
)OOM N
)OON O
{PP 
	sslStreamRR 
.RR 
WriteRR #
(RR# $
EncodingRR$ ,
.RR, -
UTF8RR- 1
.RR1 2
GetBytesRR2 :
(RR: ;
dataRR; ?
)RR? @
)RR@ A
;RRA B
}SS 
}TT 
}UU 	
catchVV 
(VV 
IOExceptionVV 
exceptIOVV #
)VV# $
{WW 	
IOXX 
.XX 
LoggerXX 
.XX 
LogXX 
(XX 
NLogXX 
.XX 
LogLevelXX '
.XX' (
WarnXX( ,
,XX, -
$strXX. N
,XXN O
exceptIOXXP X
)XXX Y
;XXY Z
}YY 	
}ZZ 
}\\ 
}]] „
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_52a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_52a 2
:3 4
AbstractTestCase5 E
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string 
data 
; 
using 
( 
SecureString 
	securePwd %
=& '
new( +
SecureString, 8
(8 9
)9 :
): ;
{   	
for!! 
(!! 
int!! 
i!! 
=!! 
$num!! 
;!! 
i!! 
<!! 
$str!!  +
.!!+ ,
Length!!, 2
;!!2 3
i!!4 5
++!!5 7
)!!7 8
{"" 
	securePwd$$ 
.$$ 

AppendChar$$ $
($$$ %
$str$$% 0
[$$0 1
i$$1 2
]$$2 3
)$$3 4
;$$4 5
}%% 
data(( 
=(( 
	securePwd(( 
.(( 
ToString(( %
(((% &
)((& '
;((' (
})) 	8
,CWE319_Cleartext_Tx_Sensitive_Info__send_52b** 4
.**4 5
BadSink**5 <
(**< =
data**= A
)**B C
;**C D
}++ 
public.. 

override.. 
void.. 
Good.. 
(.. 
).. 
{// 
GoodG2B00 
(00 
)00 
;00 
GoodB2G11 
(11 
)11 
;11 
}22 
private55 
void55 
GoodG2B55 
(55 
)55 
{66 
string77 
data77 
;77 
data99 
=99 
$str99 
;99 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_52b:: 4
.::4 5
GoodG2BSink::5 @
(::@ A
data::A E
)::F G
;::G H
};; 
private>> 
void>> 
GoodB2G>> 
(>> 
)>> 
{?? 
string@@ 
data@@ 
;@@ 
usingAA 
(AA 
SecureStringAA 
	securePwdAA %
=AA& '
newAA( +
SecureStringAA, 8
(AA8 9
)AA9 :
)AA: ;
{BB 	
forCC 
(CC 
intCC 
iCC 
=CC 
$numCC 
;CC 
iCC 
<CC 
$strCC  +
.CC+ ,
LengthCC, 2
;CC2 3
iCC4 5
++CC5 7
)CC7 8
{DD 
	securePwdFF 
.FF 

AppendCharFF $
(FF$ %
$strFF% 0
[FF0 1
iFF1 2
]FF2 3
)FF3 4
;FF4 5
}GG 
dataJJ 
=JJ 
	securePwdJJ 
.JJ 
ToStringJJ %
(JJ% &
)JJ& '
;JJ' (
}KK 	8
,CWE319_Cleartext_Tx_Sensitive_Info__send_52bLL 4
.LL4 5
GoodB2GSinkLL5 @
(LL@ A
dataLLA E
)LLF G
;LLG H
}MM 
}OO 
}PP ï
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_52b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_52b 2
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
)+ ,
{   8
,CWE319_Cleartext_Tx_Sensitive_Info__send_52c!! 4
.!!4 5
BadSink!!5 <
(!!< =
data!!= A
)!!B C
;!!C D
}"" 
public'' 

static'' 
void'' 
GoodG2BSink'' "
(''" #
string''# )
data''* .
)''/ 0
{(( 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_52c)) 4
.))4 5
GoodG2BSink))5 @
())@ A
data))A E
)))F G
;))G H
}** 
public-- 

static-- 
void-- 
GoodB2GSink-- "
(--" #
string--# )
data--* .
)--/ 0
{.. 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_52c// 4
.//4 5
GoodB2GSink//5 @
(//@ A
data//A E
)//F G
;//G H
}00 
}22 
}33 ë#
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_52c.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_52c 2
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
)+ ,
{   
try!! 
{"" 	
using## 
(## 
	TcpClient## 
	tcpClient## &
=##' (
new##) ,
	TcpClient##- 6
(##6 7
$str##7 D
,##D E
$num##F J
)##J K
)##K L
{$$ 
using%% 
(%% 
StreamWriter%% #
writer%%$ *
=%%+ ,
new%%- 0
StreamWriter%%1 =
(%%= >
	tcpClient%%> G
.%%G H
	GetStream%%H Q
(%%Q R
)%%R S
)%%S T
)%%T U
{&& 
writer(( 
.(( 
	WriteLine(( $
((($ %
data((% )
)(() *
;((* +
})) 
}** 
}++ 	
catch,, 
(,, 
IOException,, 
exceptIO,, #
),,# $
{-- 	
IO.. 
... 
Logger.. 
... 
Log.. 
(.. 
NLog.. 
... 
LogLevel.. '
...' (
Warn..( ,
,.., -
$str... N
,..N O
exceptIO..P X
)..X Y
;..Y Z
}// 	
}00 
public55 

static55 
void55 
GoodG2BSink55 "
(55" #
string55# )
data55* .
)55/ 0
{66 
try77 
{88 	
using99 
(99 
	TcpClient99 
	tcpClient99 &
=99' (
new99) ,
	TcpClient99- 6
(996 7
$str997 D
,99D E
$num99F J
)99J K
)99K L
{:: 
using;; 
(;; 
StreamWriter;; #
writer;;$ *
=;;+ ,
new;;- 0
StreamWriter;;1 =
(;;= >
	tcpClient;;> G
.;;G H
	GetStream;;H Q
(;;Q R
);;R S
);;S T
);;T U
{<< 
writer>> 
.>> 
	WriteLine>> $
(>>$ %
data>>% )
)>>) *
;>>* +
}?? 
}@@ 
}AA 	
catchBB 
(BB 
IOExceptionBB 
exceptIOBB #
)BB# $
{CC 	
IODD 
.DD 
LoggerDD 
.DD 
LogDD 
(DD 
NLogDD 
.DD 
LogLevelDD '
.DD' (
WarnDD( ,
,DD, -
$strDD. N
,DDN O
exceptIODDP X
)DDX Y
;DDY Z
}EE 	
}FF 
publicII 

staticII 
voidII 
GoodB2GSinkII "
(II" #
stringII# )
dataII* .
)II/ 0
{JJ 
tryKK 
{LL 	
usingMM 
(MM 
	TcpClientMM 
clientMM #
=MM$ %
newMM& )
	TcpClientMM* 3
(MM3 4
$strMM4 A
,MMA B
$numMMC G
)MMG H
)MMH I
{NN 
usingOO 
(OO 
	SslStreamOO  
	sslStreamOO! *
=OO+ ,
newOO- 0
	SslStreamOO1 :
(OO: ;
clientOO; A
.OOA B
	GetStreamOOB K
(OOK L
)OOL M
)OOM N
)OON O
{PP 
	sslStreamRR 
.RR 
WriteRR #
(RR# $
EncodingRR$ ,
.RR, -
UTF8RR- 1
.RR1 2
GetBytesRR2 :
(RR: ;
dataRR; ?
)RR? @
)RR@ A
;RRA B
}SS 
}TT 
}UU 	
catchVV 
(VV 
IOExceptionVV 
exceptIOVV #
)VV# $
{WW 	
IOXX 
.XX 
LoggerXX 
.XX 
LogXX 
(XX 
NLogXX 
.XX 
LogLevelXX '
.XX' (
WarnXX( ,
,XX, -
$strXX. N
,XXN O
exceptIOXXP X
)XXX Y
;XXY Z
}YY 	
}ZZ 
}\\ 
}]] „
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_53a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_53a 2
:3 4
AbstractTestCase5 E
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string 
data 
; 
using 
( 
SecureString 
	securePwd %
=& '
new( +
SecureString, 8
(8 9
)9 :
): ;
{   	
for!! 
(!! 
int!! 
i!! 
=!! 
$num!! 
;!! 
i!! 
<!! 
$str!!  +
.!!+ ,
Length!!, 2
;!!2 3
i!!4 5
++!!5 7
)!!7 8
{"" 
	securePwd$$ 
.$$ 

AppendChar$$ $
($$$ %
$str$$% 0
[$$0 1
i$$1 2
]$$2 3
)$$3 4
;$$4 5
}%% 
data(( 
=(( 
	securePwd(( 
.(( 
ToString(( %
(((% &
)((& '
;((' (
})) 	8
,CWE319_Cleartext_Tx_Sensitive_Info__send_53b** 4
.**4 5
BadSink**5 <
(**< =
data**= A
)**B C
;**C D
}++ 
public.. 

override.. 
void.. 
Good.. 
(.. 
).. 
{// 
GoodG2B00 
(00 
)00 
;00 
GoodB2G11 
(11 
)11 
;11 
}22 
private55 
void55 
GoodG2B55 
(55 
)55 
{66 
string77 
data77 
;77 
data99 
=99 
$str99 
;99 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_53b:: 4
.::4 5
GoodG2BSink::5 @
(::@ A
data::A E
)::F G
;::G H
};; 
private>> 
void>> 
GoodB2G>> 
(>> 
)>> 
{?? 
string@@ 
data@@ 
;@@ 
usingAA 
(AA 
SecureStringAA 
	securePwdAA %
=AA& '
newAA( +
SecureStringAA, 8
(AA8 9
)AA9 :
)AA: ;
{BB 	
forCC 
(CC 
intCC 
iCC 
=CC 
$numCC 
;CC 
iCC 
<CC 
$strCC  +
.CC+ ,
LengthCC, 2
;CC2 3
iCC4 5
++CC5 7
)CC7 8
{DD 
	securePwdFF 
.FF 

AppendCharFF $
(FF$ %
$strFF% 0
[FF0 1
iFF1 2
]FF2 3
)FF3 4
;FF4 5
}GG 
dataJJ 
=JJ 
	securePwdJJ 
.JJ 
ToStringJJ %
(JJ% &
)JJ& '
;JJ' (
}KK 	8
,CWE319_Cleartext_Tx_Sensitive_Info__send_53bLL 4
.LL4 5
GoodB2GSinkLL5 @
(LL@ A
dataLLA E
)LLF G
;LLG H
}MM 
}OO 
}PP ï
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_53b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_53b 2
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
)+ ,
{   8
,CWE319_Cleartext_Tx_Sensitive_Info__send_53c!! 4
.!!4 5
BadSink!!5 <
(!!< =
data!!= A
)!!B C
;!!C D
}"" 
public'' 

static'' 
void'' 
GoodG2BSink'' "
(''" #
string''# )
data''* .
)''/ 0
{(( 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_53c)) 4
.))4 5
GoodG2BSink))5 @
())@ A
data))A E
)))F G
;))G H
}** 
public-- 

static-- 
void-- 
GoodB2GSink-- "
(--" #
string--# )
data--* .
)--/ 0
{.. 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_53c// 4
.//4 5
GoodB2GSink//5 @
(//@ A
data//A E
)//F G
;//G H
}00 
}22 
}33 ï
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_53c.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_53c 2
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
)+ ,
{   8
,CWE319_Cleartext_Tx_Sensitive_Info__send_53d!! 4
.!!4 5
BadSink!!5 <
(!!< =
data!!= A
)!!B C
;!!C D
}"" 
public'' 

static'' 
void'' 
GoodG2BSink'' "
(''" #
string''# )
data''* .
)''/ 0
{(( 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_53d)) 4
.))4 5
GoodG2BSink))5 @
())@ A
data))A E
)))F G
;))G H
}** 
public-- 

static-- 
void-- 
GoodB2GSink-- "
(--" #
string--# )
data--* .
)--/ 0
{.. 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_53d// 4
.//4 5
GoodB2GSink//5 @
(//@ A
data//A E
)//F G
;//G H
}00 
}22 
}33 ë#
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_53d.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_53d 2
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
)+ ,
{   
try!! 
{"" 	
using## 
(## 
	TcpClient## 
	tcpClient## &
=##' (
new##) ,
	TcpClient##- 6
(##6 7
$str##7 D
,##D E
$num##F J
)##J K
)##K L
{$$ 
using%% 
(%% 
StreamWriter%% #
writer%%$ *
=%%+ ,
new%%- 0
StreamWriter%%1 =
(%%= >
	tcpClient%%> G
.%%G H
	GetStream%%H Q
(%%Q R
)%%R S
)%%S T
)%%T U
{&& 
writer(( 
.(( 
	WriteLine(( $
((($ %
data((% )
)(() *
;((* +
})) 
}** 
}++ 	
catch,, 
(,, 
IOException,, 
exceptIO,, #
),,# $
{-- 	
IO.. 
... 
Logger.. 
... 
Log.. 
(.. 
NLog.. 
... 
LogLevel.. '
...' (
Warn..( ,
,.., -
$str... N
,..N O
exceptIO..P X
)..X Y
;..Y Z
}// 	
}00 
public55 

static55 
void55 
GoodG2BSink55 "
(55" #
string55# )
data55* .
)55/ 0
{66 
try77 
{88 	
using99 
(99 
	TcpClient99 
	tcpClient99 &
=99' (
new99) ,
	TcpClient99- 6
(996 7
$str997 D
,99D E
$num99F J
)99J K
)99K L
{:: 
using;; 
(;; 
StreamWriter;; #
writer;;$ *
=;;+ ,
new;;- 0
StreamWriter;;1 =
(;;= >
	tcpClient;;> G
.;;G H
	GetStream;;H Q
(;;Q R
);;R S
);;S T
);;T U
{<< 
writer>> 
.>> 
	WriteLine>> $
(>>$ %
data>>% )
)>>) *
;>>* +
}?? 
}@@ 
}AA 	
catchBB 
(BB 
IOExceptionBB 
exceptIOBB #
)BB# $
{CC 	
IODD 
.DD 
LoggerDD 
.DD 
LogDD 
(DD 
NLogDD 
.DD 
LogLevelDD '
.DD' (
WarnDD( ,
,DD, -
$strDD. N
,DDN O
exceptIODDP X
)DDX Y
;DDY Z
}EE 	
}FF 
publicII 

staticII 
voidII 
GoodB2GSinkII "
(II" #
stringII# )
dataII* .
)II/ 0
{JJ 
tryKK 
{LL 	
usingMM 
(MM 
	TcpClientMM 
clientMM #
=MM$ %
newMM& )
	TcpClientMM* 3
(MM3 4
$strMM4 A
,MMA B
$numMMC G
)MMG H
)MMH I
{NN 
usingOO 
(OO 
	SslStreamOO  
	sslStreamOO! *
=OO+ ,
newOO- 0
	SslStreamOO1 :
(OO: ;
clientOO; A
.OOA B
	GetStreamOOB K
(OOK L
)OOL M
)OOM N
)OON O
{PP 
	sslStreamRR 
.RR 
WriteRR #
(RR# $
EncodingRR$ ,
.RR, -
UTF8RR- 1
.RR1 2
GetBytesRR2 :
(RR: ;
dataRR; ?
)RR? @
)RR@ A
;RRA B
}SS 
}TT 
}UU 	
catchVV 
(VV 
IOExceptionVV 
exceptIOVV #
)VV# $
{WW 	
IOXX 
.XX 
LoggerXX 
.XX 
LogXX 
(XX 
NLogXX 
.XX 
LogLevelXX '
.XX' (
WarnXX( ,
,XX, -
$strXX. N
,XXN O
exceptIOXXP X
)XXX Y
;XXY Z
}YY 	
}ZZ 
}\\ 
}]] „
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_54a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_54a 2
:3 4
AbstractTestCase5 E
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string 
data 
; 
using 
( 
SecureString 
	securePwd %
=& '
new( +
SecureString, 8
(8 9
)9 :
): ;
{   	
for!! 
(!! 
int!! 
i!! 
=!! 
$num!! 
;!! 
i!! 
<!! 
$str!!  +
.!!+ ,
Length!!, 2
;!!2 3
i!!4 5
++!!5 7
)!!7 8
{"" 
	securePwd$$ 
.$$ 

AppendChar$$ $
($$$ %
$str$$% 0
[$$0 1
i$$1 2
]$$2 3
)$$3 4
;$$4 5
}%% 
data(( 
=(( 
	securePwd(( 
.(( 
ToString(( %
(((% &
)((& '
;((' (
})) 	8
,CWE319_Cleartext_Tx_Sensitive_Info__send_54b** 4
.**4 5
BadSink**5 <
(**< =
data**= A
)**B C
;**C D
}++ 
public.. 

override.. 
void.. 
Good.. 
(.. 
).. 
{// 
GoodG2B00 
(00 
)00 
;00 
GoodB2G11 
(11 
)11 
;11 
}22 
private55 
void55 
GoodG2B55 
(55 
)55 
{66 
string77 
data77 
;77 
data99 
=99 
$str99 
;99 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_54b:: 4
.::4 5
GoodG2BSink::5 @
(::@ A
data::A E
)::F G
;::G H
};; 
private>> 
void>> 
GoodB2G>> 
(>> 
)>> 
{?? 
string@@ 
data@@ 
;@@ 
usingAA 
(AA 
SecureStringAA 
	securePwdAA %
=AA& '
newAA( +
SecureStringAA, 8
(AA8 9
)AA9 :
)AA: ;
{BB 	
forCC 
(CC 
intCC 
iCC 
=CC 
$numCC 
;CC 
iCC 
<CC 
$strCC  +
.CC+ ,
LengthCC, 2
;CC2 3
iCC4 5
++CC5 7
)CC7 8
{DD 
	securePwdFF 
.FF 

AppendCharFF $
(FF$ %
$strFF% 0
[FF0 1
iFF1 2
]FF2 3
)FF3 4
;FF4 5
}GG 
dataJJ 
=JJ 
	securePwdJJ 
.JJ 
ToStringJJ %
(JJ% &
)JJ& '
;JJ' (
}KK 	8
,CWE319_Cleartext_Tx_Sensitive_Info__send_54bLL 4
.LL4 5
GoodB2GSinkLL5 @
(LL@ A
dataLLA E
)LLF G
;LLG H
}MM 
}OO 
}PP ï
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_54b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_54b 2
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
)+ ,
{   8
,CWE319_Cleartext_Tx_Sensitive_Info__send_54c!! 4
.!!4 5
BadSink!!5 <
(!!< =
data!!= A
)!!B C
;!!C D
}"" 
public'' 

static'' 
void'' 
GoodG2BSink'' "
(''" #
string''# )
data''* .
)''/ 0
{(( 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_54c)) 4
.))4 5
GoodG2BSink))5 @
())@ A
data))A E
)))F G
;))G H
}** 
public-- 

static-- 
void-- 
GoodB2GSink-- "
(--" #
string--# )
data--* .
)--/ 0
{.. 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_54c// 4
.//4 5
GoodB2GSink//5 @
(//@ A
data//A E
)//F G
;//G H
}00 
}22 
}33 ï
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_54c.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_54c 2
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
)+ ,
{   8
,CWE319_Cleartext_Tx_Sensitive_Info__send_54d!! 4
.!!4 5
BadSink!!5 <
(!!< =
data!!= A
)!!B C
;!!C D
}"" 
public'' 

static'' 
void'' 
GoodG2BSink'' "
(''" #
string''# )
data''* .
)''/ 0
{(( 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_54d)) 4
.))4 5
GoodG2BSink))5 @
())@ A
data))A E
)))F G
;))G H
}** 
public-- 

static-- 
void-- 
GoodB2GSink-- "
(--" #
string--# )
data--* .
)--/ 0
{.. 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_54d// 4
.//4 5
GoodB2GSink//5 @
(//@ A
data//A E
)//F G
;//G H
}00 
}22 
}33 ï
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_54d.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_54d 2
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
)+ ,
{   8
,CWE319_Cleartext_Tx_Sensitive_Info__send_54e!! 4
.!!4 5
BadSink!!5 <
(!!< =
data!!= A
)!!B C
;!!C D
}"" 
public'' 

static'' 
void'' 
GoodG2BSink'' "
(''" #
string''# )
data''* .
)''/ 0
{(( 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_54e)) 4
.))4 5
GoodG2BSink))5 @
())@ A
data))A E
)))F G
;))G H
}** 
public-- 

static-- 
void-- 
GoodB2GSink-- "
(--" #
string--# )
data--* .
)--/ 0
{.. 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_54e// 4
.//4 5
GoodB2GSink//5 @
(//@ A
data//A E
)//F G
;//G H
}00 
}22 
}33 ë#
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_54e.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_54e 2
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
)+ ,
{   
try!! 
{"" 	
using## 
(## 
	TcpClient## 
	tcpClient## &
=##' (
new##) ,
	TcpClient##- 6
(##6 7
$str##7 D
,##D E
$num##F J
)##J K
)##K L
{$$ 
using%% 
(%% 
StreamWriter%% #
writer%%$ *
=%%+ ,
new%%- 0
StreamWriter%%1 =
(%%= >
	tcpClient%%> G
.%%G H
	GetStream%%H Q
(%%Q R
)%%R S
)%%S T
)%%T U
{&& 
writer(( 
.(( 
	WriteLine(( $
((($ %
data((% )
)(() *
;((* +
})) 
}** 
}++ 	
catch,, 
(,, 
IOException,, 
exceptIO,, #
),,# $
{-- 	
IO.. 
... 
Logger.. 
... 
Log.. 
(.. 
NLog.. 
... 
LogLevel.. '
...' (
Warn..( ,
,.., -
$str... N
,..N O
exceptIO..P X
)..X Y
;..Y Z
}// 	
}00 
public55 

static55 
void55 
GoodG2BSink55 "
(55" #
string55# )
data55* .
)55/ 0
{66 
try77 
{88 	
using99 
(99 
	TcpClient99 
	tcpClient99 &
=99' (
new99) ,
	TcpClient99- 6
(996 7
$str997 D
,99D E
$num99F J
)99J K
)99K L
{:: 
using;; 
(;; 
StreamWriter;; #
writer;;$ *
=;;+ ,
new;;- 0
StreamWriter;;1 =
(;;= >
	tcpClient;;> G
.;;G H
	GetStream;;H Q
(;;Q R
);;R S
);;S T
);;T U
{<< 
writer>> 
.>> 
	WriteLine>> $
(>>$ %
data>>% )
)>>) *
;>>* +
}?? 
}@@ 
}AA 	
catchBB 
(BB 
IOExceptionBB 
exceptIOBB #
)BB# $
{CC 	
IODD 
.DD 
LoggerDD 
.DD 
LogDD 
(DD 
NLogDD 
.DD 
LogLevelDD '
.DD' (
WarnDD( ,
,DD, -
$strDD. N
,DDN O
exceptIODDP X
)DDX Y
;DDY Z
}EE 	
}FF 
publicII 

staticII 
voidII 
GoodB2GSinkII "
(II" #
stringII# )
dataII* .
)II/ 0
{JJ 
tryKK 
{LL 	
usingMM 
(MM 
	TcpClientMM 
clientMM #
=MM$ %
newMM& )
	TcpClientMM* 3
(MM3 4
$strMM4 A
,MMA B
$numMMC G
)MMG H
)MMH I
{NN 
usingOO 
(OO 
	SslStreamOO  
	sslStreamOO! *
=OO+ ,
newOO- 0
	SslStreamOO1 :
(OO: ;
clientOO; A
.OOA B
	GetStreamOOB K
(OOK L
)OOL M
)OOM N
)OON O
{PP 
	sslStreamRR 
.RR 
WriteRR #
(RR# $
EncodingRR$ ,
.RR, -
UTF8RR- 1
.RR1 2
GetBytesRR2 :
(RR: ;
dataRR; ?
)RR? @
)RR@ A
;RRA B
}SS 
}TT 
}UU 	
catchVV 
(VV 
IOExceptionVV 
exceptIOVV #
)VV# $
{WW 	
IOXX 
.XX 
LoggerXX 
.XX 
LogXX 
(XX 
NLogXX 
.XX 
LogLevelXX '
.XX' (
WarnXX( ,
,XX, -
$strXX. N
,XXN O
exceptIOXXP X
)XXX Y
;XXY Z
}YY 	
}ZZ 
}\\ 
}]] †)
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_61a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_61a 2
:3 4
AbstractTestCase5 E
{ 
public 

override 
void 
Bad 
( 
) 
{   
string!! 
data!! 
=!! 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_61b!! B
.!!B C
	BadSource!!C L
(!!L M
)!!M N
;!!N O
try"" 
{## 	
using$$ 
($$ 
	TcpClient$$ 
	tcpClient$$ &
=$$' (
new$$) ,
	TcpClient$$- 6
($$6 7
$str$$7 D
,$$D E
$num$$F J
)$$J K
)$$K L
{%% 
using&& 
(&& 
StreamWriter&& #
writer&&$ *
=&&+ ,
new&&- 0
StreamWriter&&1 =
(&&= >
	tcpClient&&> G
.&&G H
	GetStream&&H Q
(&&Q R
)&&R S
)&&S T
)&&T U
{'' 
writer)) 
.)) 
	WriteLine)) $
())$ %
data))% )
)))) *
;))* +
}** 
}++ 
},, 	
catch-- 
(-- 
IOException-- 
exceptIO-- #
)--# $
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. N
,//N O
exceptIO//P X
)//X Y
;//Y Z
}00 	
}11 
public44 

override44 
void44 
Good44 
(44 
)44 
{55 
GoodG2B66 
(66 
)66 
;66 
GoodB2G77 
(77 
)77 
;77 
}88 
private;; 
static;; 
void;; 
GoodG2B;; 
(;;  
);;  !
{<< 
string== 
data== 
=== 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_61b== B
.==B C
GoodG2BSource==C P
(==P Q
)==Q R
;==R S
try>> 
{?? 	
using@@ 
(@@ 
	TcpClient@@ 
	tcpClient@@ &
=@@' (
new@@) ,
	TcpClient@@- 6
(@@6 7
$str@@7 D
,@@D E
$num@@F J
)@@J K
)@@K L
{AA 
usingBB 
(BB 
StreamWriterBB #
writerBB$ *
=BB+ ,
newBB- 0
StreamWriterBB1 =
(BB= >
	tcpClientBB> G
.BBG H
	GetStreamBBH Q
(BBQ R
)BBR S
)BBS T
)BBT U
{CC 
writerEE 
.EE 
	WriteLineEE $
(EE$ %
dataEE% )
)EE) *
;EE* +
}FF 
}GG 
}HH 	
catchII 
(II 
IOExceptionII 
exceptIOII #
)II# $
{JJ 	
IOKK 
.KK 
LoggerKK 
.KK 
LogKK 
(KK 
NLogKK 
.KK 
LogLevelKK '
.KK' (
WarnKK( ,
,KK, -
$strKK. N
,KKN O
exceptIOKKP X
)KKX Y
;KKY Z
}LL 	
}MM 
privatePP 
staticPP 
voidPP 
GoodB2GPP 
(PP  
)PP  !
{QQ 
stringRR 
dataRR 
=RR 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_61bRR B
.RRB C
GoodB2GSourceRRC P
(RRP Q
)RRQ R
;RRR S
trySS 
{TT 	
usingUU 
(UU 
	TcpClientUU 
clientUU #
=UU$ %
newUU& )
	TcpClientUU* 3
(UU3 4
$strUU4 A
,UUA B
$numUUC G
)UUG H
)UUH I
{VV 
usingWW 
(WW 
	SslStreamWW  
	sslStreamWW! *
=WW+ ,
newWW- 0
	SslStreamWW1 :
(WW: ;
clientWW; A
.WWA B
	GetStreamWWB K
(WWK L
)WWL M
)WWM N
)WWN O
{XX 
	sslStreamZZ 
.ZZ 
WriteZZ #
(ZZ# $
EncodingZZ$ ,
.ZZ, -
UTF8ZZ- 1
.ZZ1 2
GetBytesZZ2 :
(ZZ: ;
dataZZ; ?
)ZZ? @
)ZZ@ A
;ZZA B
}[[ 
}\\ 
}]] 	
catch^^ 
(^^ 
IOException^^ 
exceptIO^^ #
)^^# $
{__ 	
IO`` 
.`` 
Logger`` 
.`` 
Log`` 
(`` 
NLog`` 
.`` 
LogLevel`` '
.``' (
Warn``( ,
,``, -
$str``. N
,``N O
exceptIO``P X
)``X Y
;``Y Z
}aa 	
}bb 
}dd 
}ee §
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_61b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_61b 2
{ 
public 

static 
string 
	BadSource "
(" #
)# $
{ 
string 
data 
; 
using 
( 
SecureString 
	securePwd %
=& '
new( +
SecureString, 8
(8 9
)9 :
): ;
{   	
for!! 
(!! 
int!! 
i!! 
=!! 
$num!! 
;!! 
i!! 
<!! 
$str!!  +
.!!+ ,
Length!!, 2
;!!2 3
i!!4 5
++!!5 7
)!!7 8
{"" 
	securePwd$$ 
.$$ 

AppendChar$$ $
($$$ %
$str$$% 0
[$$0 1
i$$1 2
]$$2 3
)$$3 4
;$$4 5
}%% 
data(( 
=(( 
	securePwd(( 
.(( 
ToString(( %
(((% &
)((& '
;((' (
})) 	
return** 
data** 
;** 
}++ 
public00 

static00 
string00 
GoodG2BSource00 &
(00& '
)00' (
{11 
string22 
data22 
;22 
data44 
=44 
$str44 
;44 
return55 
data55 
;55 
}66 
public99 

static99 
string99 
GoodB2GSource99 &
(99& '
)99' (
{:: 
string;; 
data;; 
;;; 
using<< 
(<< 
SecureString<< 
	securePwd<< %
=<<& '
new<<( +
SecureString<<, 8
(<<8 9
)<<9 :
)<<: ;
{== 	
for>> 
(>> 
int>> 
i>> 
=>> 
$num>> 
;>> 
i>> 
<>> 
$str>>  +
.>>+ ,
Length>>, 2
;>>2 3
i>>4 5
++>>5 7
)>>7 8
{?? 
	securePwdAA 
.AA 

AppendCharAA $
(AA$ %
$strAA% 0
[AA0 1
iAA1 2
]AA2 3
)AA3 4
;AA4 5
}BB 
dataEE 
=EE 
	securePwdEE 
.EE 
ToStringEE %
(EE% &
)EE& '
;EE' (
}FF 	
returnGG 
dataGG 
;GG 
}HH 
}JJ 
}KK ≥"
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_66a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_66a 2
:3 4
AbstractTestCase5 E
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string 
data 
; 
using 
( 
SecureString 
	securePwd %
=& '
new( +
SecureString, 8
(8 9
)9 :
): ;
{   	
for!! 
(!! 
int!! 
i!! 
=!! 
$num!! 
;!! 
i!! 
<!! 
$str!!  +
.!!+ ,
Length!!, 2
;!!2 3
i!!4 5
++!!5 7
)!!7 8
{"" 
	securePwd$$ 
.$$ 

AppendChar$$ $
($$$ %
$str$$% 0
[$$0 1
i$$1 2
]$$2 3
)$$3 4
;$$4 5
}%% 
data(( 
=(( 
	securePwd(( 
.(( 
ToString(( %
(((% &
)((& '
;((' (
})) 	
string** 
[** 
]** 
	dataArray** 
=** 
new**  
string**! '
[**' (
$num**( )
]**) *
;*** +
	dataArray++ 
[++ 
$num++ 
]++ 
=++ 
data++ 
;++ 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_66b,, 4
.,,4 5
BadSink,,5 <
(,,< =
	dataArray,,= F
),,H I
;,,I J
}-- 
public00 

override00 
void00 
Good00 
(00 
)00 
{11 
GoodG2B22 
(22 
)22 
;22 
GoodB2G33 
(33 
)33 
;33 
}44 
private77 
static77 
void77 
GoodG2B77 
(77  
)77  !
{88 
string99 
data99 
;99 
data;; 
=;; 
$str;; 
;;; 
string<< 
[<< 
]<< 
	dataArray<< 
=<< 
new<<  
string<<! '
[<<' (
$num<<( )
]<<) *
;<<* +
	dataArray== 
[== 
$num== 
]== 
=== 
data== 
;== 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_66b>> 4
.>>4 5
GoodG2BSink>>5 @
(>>@ A
	dataArray>>A J
)>>L M
;>>M N
}?? 
privateBB 
staticBB 
voidBB 
GoodB2GBB 
(BB  
)BB  !
{CC 
stringDD 
dataDD 
;DD 
usingEE 
(EE 
SecureStringEE 
	securePwdEE %
=EE& '
newEE( +
SecureStringEE, 8
(EE8 9
)EE9 :
)EE: ;
{FF 	
forGG 
(GG 
intGG 
iGG 
=GG 
$numGG 
;GG 
iGG 
<GG 
$strGG  +
.GG+ ,
LengthGG, 2
;GG2 3
iGG4 5
++GG5 7
)GG7 8
{HH 
	securePwdJJ 
.JJ 

AppendCharJJ $
(JJ$ %
$strJJ% 0
[JJ0 1
iJJ1 2
]JJ2 3
)JJ3 4
;JJ4 5
}KK 
dataNN 
=NN 
	securePwdNN 
.NN 
ToStringNN %
(NN% &
)NN& '
;NN' (
}OO 	
stringPP 
[PP 
]PP 
	dataArrayPP 
=PP 
newPP  
stringPP! '
[PP' (
$numPP( )
]PP) *
;PP* +
	dataArrayQQ 
[QQ 
$numQQ 
]QQ 
=QQ 
dataQQ 
;QQ 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_66bRR 4
.RR4 5
GoodB2GSinkRR5 @
(RR@ A
	dataArrayRRA J
)RRL M
;RRM N
}SS 
}UU 
}VV õ'
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_66b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_66b 2
{ 
public 

static 
void 
BadSink 
( 
string %
[% &
]& '
	dataArray( 1
)2 3
{   
string!! 
data!! 
=!! 
	dataArray!! 
[!!  
$num!!  !
]!!! "
;!!" #
try"" 
{## 	
using$$ 
($$ 
	TcpClient$$ 
	tcpClient$$ &
=$$' (
new$$) ,
	TcpClient$$- 6
($$6 7
$str$$7 D
,$$D E
$num$$F J
)$$J K
)$$K L
{%% 
using&& 
(&& 
StreamWriter&& #
writer&&$ *
=&&+ ,
new&&- 0
StreamWriter&&1 =
(&&= >
	tcpClient&&> G
.&&G H
	GetStream&&H Q
(&&Q R
)&&R S
)&&S T
)&&T U
{'' 
writer)) 
.)) 
	WriteLine)) $
())$ %
data))% )
)))) *
;))* +
}** 
}++ 
},, 	
catch-- 
(-- 
IOException-- 
exceptIO-- #
)--# $
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. N
,//N O
exceptIO//P X
)//X Y
;//Y Z
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
string66# )
[66) *
]66* +
	dataArray66, 5
)666 7
{77 
string88 
data88 
=88 
	dataArray88 
[88  
$num88  !
]88! "
;88" #
try99 
{:: 	
using;; 
(;; 
	TcpClient;; 
	tcpClient;; &
=;;' (
new;;) ,
	TcpClient;;- 6
(;;6 7
$str;;7 D
,;;D E
$num;;F J
);;J K
);;K L
{<< 
using== 
(== 
StreamWriter== #
writer==$ *
===+ ,
new==- 0
StreamWriter==1 =
(=== >
	tcpClient==> G
.==G H
	GetStream==H Q
(==Q R
)==R S
)==S T
)==T U
{>> 
writer@@ 
.@@ 
	WriteLine@@ $
(@@$ %
data@@% )
)@@) *
;@@* +
}AA 
}BB 
}CC 	
catchDD 
(DD 
IOExceptionDD 
exceptIODD #
)DD# $
{EE 	
IOFF 
.FF 
LoggerFF 
.FF 
LogFF 
(FF 
NLogFF 
.FF 
LogLevelFF '
.FF' (
WarnFF( ,
,FF, -
$strFF. N
,FFN O
exceptIOFFP X
)FFX Y
;FFY Z
}GG 	
}HH 
publicKK 

staticKK 
voidKK 
GoodB2GSinkKK "
(KK" #
stringKK# )
[KK) *
]KK* +
	dataArrayKK, 5
)KK6 7
{LL 
stringMM 
dataMM 
=MM 
	dataArrayMM 
[MM  
$numMM  !
]MM! "
;MM" #
tryNN 
{OO 	
usingPP 
(PP 
	TcpClientPP 
clientPP #
=PP$ %
newPP& )
	TcpClientPP* 3
(PP3 4
$strPP4 A
,PPA B
$numPPC G
)PPG H
)PPH I
{QQ 
usingRR 
(RR 
	SslStreamRR  
	sslStreamRR! *
=RR+ ,
newRR- 0
	SslStreamRR1 :
(RR: ;
clientRR; A
.RRA B
	GetStreamRRB K
(RRK L
)RRL M
)RRM N
)RRN O
{SS 
	sslStreamUU 
.UU 
WriteUU #
(UU# $
EncodingUU$ ,
.UU, -
UTF8UU- 1
.UU1 2
GetBytesUU2 :
(UU: ;
dataUU; ?
)UU? @
)UU@ A
;UUA B
}VV 
}WW 
}XX 	
catchYY 
(YY 
IOExceptionYY 
exceptIOYY #
)YY# $
{ZZ 	
IO[[ 
.[[ 
Logger[[ 
.[[ 
Log[[ 
([[ 
NLog[[ 
.[[ 
LogLevel[[ '
.[[' (
Warn[[( ,
,[[, -
$str[[. N
,[[N O
exceptIO[[P X
)[[X Y
;[[Y Z
}\\ 	
}]] 
}__ 
}`` Ò"
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_67a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_67a 2
:3 4
AbstractTestCase5 E
{ 
public 

class 
	Container 
{ 
public 
string 
containerOne "
;" #
} 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
string## 
data## 
;## 
using$$ 
($$ 
SecureString$$ 
	securePwd$$ %
=$$& '
new$$( +
SecureString$$, 8
($$8 9
)$$9 :
)$$: ;
{%% 	
for&& 
(&& 
int&& 
i&& 
=&& 
$num&& 
;&& 
i&& 
<&& 
$str&&  +
.&&+ ,
Length&&, 2
;&&2 3
i&&4 5
++&&5 7
)&&7 8
{'' 
	securePwd)) 
.)) 

AppendChar)) $
())$ %
$str))% 0
[))0 1
i))1 2
]))2 3
)))3 4
;))4 5
}** 
data-- 
=-- 
	securePwd-- 
.-- 
ToString-- %
(--% &
)--& '
;--' (
}.. 	
	Container// 
dataContainer// 
=//  !
new//" %
	Container//& /
(/// 0
)//0 1
;//1 2
dataContainer00 
.00 
containerOne00 "
=00# $
data00% )
;00) *8
,CWE319_Cleartext_Tx_Sensitive_Info__send_67b11 4
.114 5
BadSink115 <
(11< =
dataContainer11= J
)11L M
;11M N
}22 
public55 

override55 
void55 
Good55 
(55 
)55 
{66 
GoodG2B77 
(77 
)77 
;77 
GoodB2G88 
(88 
)88 
;88 
}99 
private<< 
static<< 
void<< 
GoodG2B<< 
(<<  
)<<  !
{== 
string>> 
data>> 
;>> 
data@@ 
=@@ 
$str@@ 
;@@ 
	ContainerAA 
dataContainerAA 
=AA  !
newAA" %
	ContainerAA& /
(AA/ 0
)AA0 1
;AA1 2
dataContainerBB 
.BB 
containerOneBB "
=BB# $
dataBB% )
;BB) *8
,CWE319_Cleartext_Tx_Sensitive_Info__send_67bCC 4
.CC4 5
GoodG2BSinkCC5 @
(CC@ A
dataContainerCCA N
)CCP Q
;CCQ R
}DD 
privateGG 
staticGG 
voidGG 
GoodB2GGG 
(GG  
)GG  !
{HH 
stringII 
dataII 
;II 
usingJJ 
(JJ 
SecureStringJJ 
	securePwdJJ %
=JJ& '
newJJ( +
SecureStringJJ, 8
(JJ8 9
)JJ9 :
)JJ: ;
{KK 	
forLL 
(LL 
intLL 
iLL 
=LL 
$numLL 
;LL 
iLL 
<LL 
$strLL  +
.LL+ ,
LengthLL, 2
;LL2 3
iLL4 5
++LL5 7
)LL7 8
{MM 
	securePwdOO 
.OO 

AppendCharOO $
(OO$ %
$strOO% 0
[OO0 1
iOO1 2
]OO2 3
)OO3 4
;OO4 5
}PP 
dataSS 
=SS 
	securePwdSS 
.SS 
ToStringSS %
(SS% &
)SS& '
;SS' (
}TT 	
	ContainerUU 
dataContainerUU 
=UU  !
newUU" %
	ContainerUU& /
(UU/ 0
)UU0 1
;UU1 2
dataContainerVV 
.VV 
containerOneVV "
=VV# $
dataVV% )
;VV) *8
,CWE319_Cleartext_Tx_Sensitive_Info__send_67bWW 4
.WW4 5
GoodB2GSinkWW5 @
(WW@ A
dataContainerWWA N
)WWP Q
;WWQ R
}XX 
}ZZ 
}[[ ®(
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_67b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_67b 2
{ 
public 

static 
void 
BadSink 
( 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_67a K
.K L
	ContainerL U
dataContainerV c
)d e
{   
string!! 
data!! 
=!! 
dataContainer!! #
.!!# $
containerOne!!$ 0
;!!0 1
try"" 
{## 	
using$$ 
($$ 
	TcpClient$$ 
	tcpClient$$ &
=$$' (
new$$) ,
	TcpClient$$- 6
($$6 7
$str$$7 D
,$$D E
$num$$F J
)$$J K
)$$K L
{%% 
using&& 
(&& 
StreamWriter&& #
writer&&$ *
=&&+ ,
new&&- 0
StreamWriter&&1 =
(&&= >
	tcpClient&&> G
.&&G H
	GetStream&&H Q
(&&Q R
)&&R S
)&&S T
)&&T U
{'' 
writer)) 
.)) 
	WriteLine)) $
())$ %
data))% )
)))) *
;))* +
}** 
}++ 
},, 	
catch-- 
(-- 
IOException-- 
exceptIO-- #
)--# $
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. N
,//N O
exceptIO//P X
)//X Y
;//Y Z
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #8
,CWE319_Cleartext_Tx_Sensitive_Info__send_67a66# O
.66O P
	Container66P Y
dataContainer66Z g
)66h i
{77 
string88 
data88 
=88 
dataContainer88 #
.88# $
containerOne88$ 0
;880 1
try99 
{:: 	
using;; 
(;; 
	TcpClient;; 
	tcpClient;; &
=;;' (
new;;) ,
	TcpClient;;- 6
(;;6 7
$str;;7 D
,;;D E
$num;;F J
);;J K
);;K L
{<< 
using== 
(== 
StreamWriter== #
writer==$ *
===+ ,
new==- 0
StreamWriter==1 =
(=== >
	tcpClient==> G
.==G H
	GetStream==H Q
(==Q R
)==R S
)==S T
)==T U
{>> 
writer@@ 
.@@ 
	WriteLine@@ $
(@@$ %
data@@% )
)@@) *
;@@* +
}AA 
}BB 
}CC 	
catchDD 
(DD 
IOExceptionDD 
exceptIODD #
)DD# $
{EE 	
IOFF 
.FF 
LoggerFF 
.FF 
LogFF 
(FF 
NLogFF 
.FF 
LogLevelFF '
.FF' (
WarnFF( ,
,FF, -
$strFF. N
,FFN O
exceptIOFFP X
)FFX Y
;FFY Z
}GG 	
}HH 
publicKK 

staticKK 
voidKK 
GoodB2GSinkKK "
(KK" #8
,CWE319_Cleartext_Tx_Sensitive_Info__send_67aKK# O
.KKO P
	ContainerKKP Y
dataContainerKKZ g
)KKh i
{LL 
stringMM 
dataMM 
=MM 
dataContainerMM #
.MM# $
containerOneMM$ 0
;MM0 1
tryNN 
{OO 	
usingPP 
(PP 
	TcpClientPP 
clientPP #
=PP$ %
newPP& )
	TcpClientPP* 3
(PP3 4
$strPP4 A
,PPA B
$numPPC G
)PPG H
)PPH I
{QQ 
usingRR 
(RR 
	SslStreamRR  
	sslStreamRR! *
=RR+ ,
newRR- 0
	SslStreamRR1 :
(RR: ;
clientRR; A
.RRA B
	GetStreamRRB K
(RRK L
)RRL M
)RRM N
)RRN O
{SS 
	sslStreamUU 
.UU 
WriteUU #
(UU# $
EncodingUU$ ,
.UU, -
UTF8UU- 1
.UU1 2
GetBytesUU2 :
(UU: ;
dataUU; ?
)UU? @
)UU@ A
;UUA B
}VV 
}WW 
}XX 	
catchYY 
(YY 
IOExceptionYY 
exceptIOYY #
)YY# $
{ZZ 	
IO[[ 
.[[ 
Logger[[ 
.[[ 
Log[[ 
([[ 
NLog[[ 
.[[ 
LogLevel[[ '
.[[' (
Warn[[( ,
,[[, -
$str[[. N
,[[N O
exceptIO[[P X
)[[X Y
;[[Y Z
}\\ 	
}]] 
}__ 
}`` ì
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_68a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_68a 2
:3 4
AbstractTestCase5 E
{ 
public 

static 
string 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
using   
(   
SecureString   
	securePwd   %
=  & '
new  ( +
SecureString  , 8
(  8 9
)  9 :
)  : ;
{!! 	
for"" 
("" 
int"" 
i"" 
="" 
$num"" 
;"" 
i"" 
<"" 
$str""  +
.""+ ,
Length"", 2
;""2 3
i""4 5
++""5 7
)""7 8
{## 
	securePwd%% 
.%% 

AppendChar%% $
(%%$ %
$str%%% 0
[%%0 1
i%%1 2
]%%2 3
)%%3 4
;%%4 5
}&& 
data)) 
=)) 
	securePwd)) 
.)) 
ToString)) %
())% &
)))& '
;))' (
}** 	8
,CWE319_Cleartext_Tx_Sensitive_Info__send_68b++ 4
.++4 5
BadSink++5 <
(++< =
)++= >
;++> ?
},, 
public// 

override// 
void// 
Good// 
(// 
)// 
{00 
GoodG2B11 
(11 
)11 
;11 
GoodB2G22 
(22 
)22 
;22 
}33 
private66 
static66 
void66 
GoodG2B66 
(66  
)66  !
{77 
data99 
=99 
$str99 
;99 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_68b:: 4
.::4 5
GoodG2BSink::5 @
(::@ A
)::A B
;::B C
};; 
private>> 
static>> 
void>> 
GoodB2G>> 
(>>  
)>>  !
{?? 
using@@ 
(@@ 
SecureString@@ 
	securePwd@@ %
=@@& '
new@@( +
SecureString@@, 8
(@@8 9
)@@9 :
)@@: ;
{AA 	
forBB 
(BB 
intBB 
iBB 
=BB 
$numBB 
;BB 
iBB 
<BB 
$strBB  +
.BB+ ,
LengthBB, 2
;BB2 3
iBB4 5
++BB5 7
)BB7 8
{CC 
	securePwdEE 
.EE 

AppendCharEE $
(EE$ %
$strEE% 0
[EE0 1
iEE1 2
]EE2 3
)EE3 4
;EE4 5
}FF 
dataII 
=II 
	securePwdII 
.II 
ToStringII %
(II% &
)II& '
;II' (
}JJ 	8
,CWE319_Cleartext_Tx_Sensitive_Info__send_68bKK 4
.KK4 5
GoodB2GSinkKK5 @
(KK@ A
)KKA B
;KKB C
}LL 
}NN 
}OO ¸%
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_68b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_68b 2
{ 
public 

static 
void 
BadSink 
( 
)  
{   
string!! 
data!! 
=!! 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_68a!! B
.!!B C
data!!C G
;!!G H
try"" 
{## 	
using$$ 
($$ 
	TcpClient$$ 
	tcpClient$$ &
=$$' (
new$$) ,
	TcpClient$$- 6
($$6 7
$str$$7 D
,$$D E
$num$$F J
)$$J K
)$$K L
{%% 
using&& 
(&& 
StreamWriter&& #
writer&&$ *
=&&+ ,
new&&- 0
StreamWriter&&1 =
(&&= >
	tcpClient&&> G
.&&G H
	GetStream&&H Q
(&&Q R
)&&R S
)&&S T
)&&T U
{'' 
writer)) 
.)) 
	WriteLine)) $
())$ %
data))% )
)))) *
;))* +
}** 
}++ 
},, 	
catch-- 
(-- 
IOException-- 
exceptIO-- #
)--# $
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. N
,//N O
exceptIO//P X
)//X Y
;//Y Z
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
)66# $
{77 
string88 
data88 
=88 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_68a88 B
.88B C
data88C G
;88G H
try99 
{:: 	
using;; 
(;; 
	TcpClient;; 
	tcpClient;; &
=;;' (
new;;) ,
	TcpClient;;- 6
(;;6 7
$str;;7 D
,;;D E
$num;;F J
);;J K
);;K L
{<< 
using== 
(== 
StreamWriter== #
writer==$ *
===+ ,
new==- 0
StreamWriter==1 =
(=== >
	tcpClient==> G
.==G H
	GetStream==H Q
(==Q R
)==R S
)==S T
)==T U
{>> 
writer@@ 
.@@ 
	WriteLine@@ $
(@@$ %
data@@% )
)@@) *
;@@* +
}AA 
}BB 
}CC 	
catchDD 
(DD 
IOExceptionDD 
exceptIODD #
)DD# $
{EE 	
IOFF 
.FF 
LoggerFF 
.FF 
LogFF 
(FF 
NLogFF 
.FF 
LogLevelFF '
.FF' (
WarnFF( ,
,FF, -
$strFF. N
,FFN O
exceptIOFFP X
)FFX Y
;FFY Z
}GG 	
}HH 
publicKK 

staticKK 
voidKK 
GoodB2GSinkKK "
(KK" #
)KK# $
{LL 
stringMM 
dataMM 
=MM 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_68aMM B
.MMB C
dataMMC G
;MMG H
tryNN 
{OO 	
usingPP 
(PP 
	TcpClientPP 
clientPP #
=PP$ %
newPP& )
	TcpClientPP* 3
(PP3 4
$strPP4 A
,PPA B
$numPPC G
)PPG H
)PPH I
{QQ 
usingRR 
(RR 
	SslStreamRR  
	sslStreamRR! *
=RR+ ,
newRR- 0
	SslStreamRR1 :
(RR: ;
clientRR; A
.RRA B
	GetStreamRRB K
(RRK L
)RRL M
)RRM N
)RRN O
{SS 
	sslStreamUU 
.UU 
WriteUU #
(UU# $
EncodingUU$ ,
.UU, -
UTF8UU- 1
.UU1 2
GetBytesUU2 :
(UU: ;
dataUU; ?
)UU? @
)UU@ A
;UUA B
}VV 
}WW 
}XX 	
catchYY 
(YY 
IOExceptionYY 
exceptIOYY #
)YY# $
{ZZ 	
IO[[ 
.[[ 
Logger[[ 
.[[ 
Log[[ 
([[ 
NLog[[ 
.[[ 
LogLevel[[ '
.[[' (
Warn[[( ,
,[[, -
$str[[. N
,[[N O
exceptIO[[P X
)[[X Y
;[[Y Z
}\\ 	
}]] 
}__ 
}`` °
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_71a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_71a 2
:3 4
AbstractTestCase5 E
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string 
data 
; 
using 
( 
SecureString 
	securePwd %
=& '
new( +
SecureString, 8
(8 9
)9 :
): ;
{   	
for!! 
(!! 
int!! 
i!! 
=!! 
$num!! 
;!! 
i!! 
<!! 
$str!!  +
.!!+ ,
Length!!, 2
;!!2 3
i!!4 5
++!!5 7
)!!7 8
{"" 
	securePwd$$ 
.$$ 

AppendChar$$ $
($$$ %
$str$$% 0
[$$0 1
i$$1 2
]$$2 3
)$$3 4
;$$4 5
}%% 
data(( 
=(( 
	securePwd(( 
.(( 
ToString(( %
(((% &
)((& '
;((' (
})) 	8
,CWE319_Cleartext_Tx_Sensitive_Info__send_71b** 4
.**4 5
BadSink**5 <
(**< =
(**= >
Object**> D
)**D E
data**E I
)**K L
;**L M
}++ 
public.. 

override.. 
void.. 
Good.. 
(.. 
).. 
{// 
GoodG2B00 
(00 
)00 
;00 
GoodB2G11 
(11 
)11 
;11 
}22 
private55 
static55 
void55 
GoodG2B55 
(55  
)55  !
{66 
string77 
data77 
;77 
data99 
=99 
$str99 
;99 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_71b:: 4
.::4 5
GoodG2BSink::5 @
(::@ A
(::A B
Object::B H
)::H I
data::I M
)::O P
;::P Q
};; 
private>> 
static>> 
void>> 
GoodB2G>> 
(>>  
)>>  !
{?? 
string@@ 
data@@ 
;@@ 
usingAA 
(AA 
SecureStringAA 
	securePwdAA %
=AA& '
newAA( +
SecureStringAA, 8
(AA8 9
)AA9 :
)AA: ;
{BB 	
forCC 
(CC 
intCC 
iCC 
=CC 
$numCC 
;CC 
iCC 
<CC 
$strCC  +
.CC+ ,
LengthCC, 2
;CC2 3
iCC4 5
++CC5 7
)CC7 8
{DD 
	securePwdFF 
.FF 

AppendCharFF $
(FF$ %
$strFF% 0
[FF0 1
iFF1 2
]FF2 3
)FF3 4
;FF4 5
}GG 
dataJJ 
=JJ 
	securePwdJJ 
.JJ 
ToStringJJ %
(JJ% &
)JJ& '
;JJ' (
}KK 	8
,CWE319_Cleartext_Tx_Sensitive_Info__send_71bLL 4
.LL4 5
GoodB2GSinkLL5 @
(LL@ A
(LLA B
ObjectLLB H
)LLH I
dataLLI M
)LLO P
;LLP Q
}MM 
}OO 
}PP Õ&
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_71b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_71b 2
{ 
public   

static   
void   
BadSink   
(   
Object   %

dataObject  & 0
)  1 2
{!! 
string"" 
data"" 
="" 
("" 
string"" 
)"" 

dataObject"" (
;""( )
try## 
{$$ 	
using%% 
(%% 
	TcpClient%% 
	tcpClient%% &
=%%' (
new%%) ,
	TcpClient%%- 6
(%%6 7
$str%%7 D
,%%D E
$num%%F J
)%%J K
)%%K L
{&& 
using'' 
('' 
StreamWriter'' #
writer''$ *
=''+ ,
new''- 0
StreamWriter''1 =
(''= >
	tcpClient''> G
.''G H
	GetStream''H Q
(''Q R
)''R S
)''S T
)''T U
{(( 
writer** 
.** 
	WriteLine** $
(**$ %
data**% )
)**) *
;*** +
}++ 
},, 
}-- 	
catch.. 
(.. 
IOException.. 
exceptIO.. #
)..# $
{// 	
IO00 
.00 
Logger00 
.00 
Log00 
(00 
NLog00 
.00 
LogLevel00 '
.00' (
Warn00( ,
,00, -
$str00. N
,00N O
exceptIO00P X
)00X Y
;00Y Z
}11 	
}22 
public77 

static77 
void77 
GoodG2BSink77 "
(77" #
Object77# )

dataObject77* 4
)775 6
{88 
string99 
data99 
=99 
(99 
string99 
)99 

dataObject99 (
;99( )
try:: 
{;; 	
using<< 
(<< 
	TcpClient<< 
	tcpClient<< &
=<<' (
new<<) ,
	TcpClient<<- 6
(<<6 7
$str<<7 D
,<<D E
$num<<F J
)<<J K
)<<K L
{== 
using>> 
(>> 
StreamWriter>> #
writer>>$ *
=>>+ ,
new>>- 0
StreamWriter>>1 =
(>>= >
	tcpClient>>> G
.>>G H
	GetStream>>H Q
(>>Q R
)>>R S
)>>S T
)>>T U
{?? 
writerAA 
.AA 
	WriteLineAA $
(AA$ %
dataAA% )
)AA) *
;AA* +
}BB 
}CC 
}DD 	
catchEE 
(EE 
IOExceptionEE 
exceptIOEE #
)EE# $
{FF 	
IOGG 
.GG 
LoggerGG 
.GG 
LogGG 
(GG 
NLogGG 
.GG 
LogLevelGG '
.GG' (
WarnGG( ,
,GG, -
$strGG. N
,GGN O
exceptIOGGP X
)GGX Y
;GGY Z
}HH 	
}II 
publicLL 

staticLL 
voidLL 
GoodB2GSinkLL "
(LL" #
ObjectLL# )

dataObjectLL* 4
)LL5 6
{MM 
stringNN 
dataNN 
=NN 
(NN 
stringNN 
)NN 

dataObjectNN (
;NN( )
tryOO 
{PP 	
usingQQ 
(QQ 
	TcpClientQQ 
clientQQ #
=QQ$ %
newQQ& )
	TcpClientQQ* 3
(QQ3 4
$strQQ4 A
,QQA B
$numQQC G
)QQG H
)QQH I
{RR 
usingSS 
(SS 
	SslStreamSS  
	sslStreamSS! *
=SS+ ,
newSS- 0
	SslStreamSS1 :
(SS: ;
clientSS; A
.SSA B
	GetStreamSSB K
(SSK L
)SSL M
)SSM N
)SSN O
{TT 
	sslStreamVV 
.VV 
WriteVV #
(VV# $
EncodingVV$ ,
.VV, -
UTF8VV- 1
.VV1 2
GetBytesVV2 :
(VV: ;
dataVV; ?
)VV? @
)VV@ A
;VVA B
}WW 
}XX 
}YY 	
catchZZ 
(ZZ 
IOExceptionZZ 
exceptIOZZ #
)ZZ# $
{[[ 	
IO\\ 
.\\ 
Logger\\ 
.\\ 
Log\\ 
(\\ 
NLog\\ 
.\\ 
LogLevel\\ '
.\\' (
Warn\\( ,
,\\, -
$str\\. N
,\\N O
exceptIO\\P X
)\\X Y
;\\Y Z
}]] 	
}^^ 
}`` 
}aa ë*
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_72a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_72a 2
:3 4
AbstractTestCase5 E
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string 
data 
; 
using   
(   
SecureString   
	securePwd   %
=  & '
new  ( +
SecureString  , 8
(  8 9
)  9 :
)  : ;
{!! 	
for"" 
("" 
int"" 
i"" 
="" 
$num"" 
;"" 
i"" 
<"" 
$str""  +
.""+ ,
Length"", 2
;""2 3
i""4 5
++""5 7
)""7 8
{## 
	securePwd%% 
.%% 

AppendChar%% $
(%%$ %
$str%%% 0
[%%0 1
i%%1 2
]%%2 3
)%%3 4
;%%4 5
}&& 
data)) 
=)) 
	securePwd)) 
.)) 
ToString)) %
())% &
)))& '
;))' (
}** 	
	Hashtable++ 
dataHashtable++ 
=++  !
new++" %
	Hashtable++& /
(++/ 0
$num++0 1
)++1 2
;++2 3
dataHashtable,, 
.,, 
Add,, 
(,, 
$num,, 
,,, 
data,, !
),,! "
;,," #
dataHashtable-- 
.-- 
Add-- 
(-- 
$num-- 
,-- 
data-- !
)--! "
;--" #
dataHashtable.. 
... 
Add.. 
(.. 
$num.. 
,.. 
data.. !
)..! "
;.." #8
,CWE319_Cleartext_Tx_Sensitive_Info__send_72b// 4
.//4 5
BadSink//5 <
(//< =
dataHashtable//= J
)//L M
;//M N
}00 
public33 

override33 
void33 
Good33 
(33 
)33 
{44 
GoodG2B55 
(55 
)55 
;55 
GoodB2G66 
(66 
)66 
;66 
}77 
private:: 
static:: 
void:: 
GoodG2B:: 
(::  
)::  !
{;; 
string<< 
data<< 
;<< 
data>> 
=>> 
$str>> 
;>> 
	Hashtable?? 
dataHashtable?? 
=??  !
new??" %
	Hashtable??& /
(??/ 0
$num??0 1
)??1 2
;??2 3
dataHashtable@@ 
.@@ 
Add@@ 
(@@ 
$num@@ 
,@@ 
data@@ !
)@@! "
;@@" #
dataHashtableAA 
.AA 
AddAA 
(AA 
$numAA 
,AA 
dataAA !
)AA! "
;AA" #
dataHashtableBB 
.BB 
AddBB 
(BB 
$numBB 
,BB 
dataBB !
)BB! "
;BB" #8
,CWE319_Cleartext_Tx_Sensitive_Info__send_72bCC 4
.CC4 5
GoodG2BSinkCC5 @
(CC@ A
dataHashtableCCA N
)CCP Q
;CCQ R
}DD 
privateGG 
staticGG 
voidGG 
GoodB2GGG 
(GG  
)GG  !
{HH 
stringII 
dataII 
;II 
usingJJ 
(JJ 
SecureStringJJ 
	securePwdJJ %
=JJ& '
newJJ( +
SecureStringJJ, 8
(JJ8 9
)JJ9 :
)JJ: ;
{KK 	
forLL 
(LL 
intLL 
iLL 
=LL 
$numLL 
;LL 
iLL 
<LL 
$strLL  +
.LL+ ,
LengthLL, 2
;LL2 3
iLL4 5
++LL5 7
)LL7 8
{MM 
	securePwdOO 
.OO 

AppendCharOO $
(OO$ %
$strOO% 0
[OO0 1
iOO1 2
]OO2 3
)OO3 4
;OO4 5
}PP 
dataSS 
=SS 
	securePwdSS 
.SS 
ToStringSS %
(SS% &
)SS& '
;SS' (
}TT 	
	HashtableUU 
dataHashtableUU 
=UU  !
newUU" %
	HashtableUU& /
(UU/ 0
$numUU0 1
)UU1 2
;UU2 3
dataHashtableVV 
.VV 
AddVV 
(VV 
$numVV 
,VV 
dataVV !
)VV! "
;VV" #
dataHashtableWW 
.WW 
AddWW 
(WW 
$numWW 
,WW 
dataWW !
)WW! "
;WW" #
dataHashtableXX 
.XX 
AddXX 
(XX 
$numXX 
,XX 
dataXX !
)XX! "
;XX" #8
,CWE319_Cleartext_Tx_Sensitive_Info__send_72bYY 4
.YY4 5
GoodB2GSinkYY5 @
(YY@ A
dataHashtableYYA N
)YYP Q
;YYQ R
}ZZ 
}\\ 
}]] ¯'
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_72b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_72b 2
{ 
public   

static   
void   
BadSink   
(   
	Hashtable   (
dataHashtable  ) 6
)  7 8
{!! 
string"" 
data"" 
="" 
("" 
string"" 
)"" 
dataHashtable"" ,
["", -
$num""- .
]"". /
;""/ 0
try## 
{$$ 	
using%% 
(%% 
	TcpClient%% 
	tcpClient%% &
=%%' (
new%%) ,
	TcpClient%%- 6
(%%6 7
$str%%7 D
,%%D E
$num%%F J
)%%J K
)%%K L
{&& 
using'' 
('' 
StreamWriter'' #
writer''$ *
=''+ ,
new''- 0
StreamWriter''1 =
(''= >
	tcpClient''> G
.''G H
	GetStream''H Q
(''Q R
)''R S
)''S T
)''T U
{(( 
writer** 
.** 
	WriteLine** $
(**$ %
data**% )
)**) *
;*** +
}++ 
},, 
}-- 	
catch.. 
(.. 
IOException.. 
exceptIO.. #
)..# $
{// 	
IO00 
.00 
Logger00 
.00 
Log00 
(00 
NLog00 
.00 
LogLevel00 '
.00' (
Warn00( ,
,00, -
$str00. N
,00N O
exceptIO00P X
)00X Y
;00Y Z
}11 	
}22 
public77 

static77 
void77 
GoodG2BSink77 "
(77" #
	Hashtable77# ,
dataHashtable77- :
)77; <
{88 
string99 
data99 
=99 
(99 
string99 
)99 
dataHashtable99 ,
[99, -
$num99- .
]99. /
;99/ 0
try:: 
{;; 	
using<< 
(<< 
	TcpClient<< 
	tcpClient<< &
=<<' (
new<<) ,
	TcpClient<<- 6
(<<6 7
$str<<7 D
,<<D E
$num<<F J
)<<J K
)<<K L
{== 
using>> 
(>> 
StreamWriter>> #
writer>>$ *
=>>+ ,
new>>- 0
StreamWriter>>1 =
(>>= >
	tcpClient>>> G
.>>G H
	GetStream>>H Q
(>>Q R
)>>R S
)>>S T
)>>T U
{?? 
writerAA 
.AA 
	WriteLineAA $
(AA$ %
dataAA% )
)AA) *
;AA* +
}BB 
}CC 
}DD 	
catchEE 
(EE 
IOExceptionEE 
exceptIOEE #
)EE# $
{FF 	
IOGG 
.GG 
LoggerGG 
.GG 
LogGG 
(GG 
NLogGG 
.GG 
LogLevelGG '
.GG' (
WarnGG( ,
,GG, -
$strGG. N
,GGN O
exceptIOGGP X
)GGX Y
;GGY Z
}HH 	
}II 
publicLL 

staticLL 
voidLL 
GoodB2GSinkLL "
(LL" #
	HashtableLL# ,
dataHashtableLL- :
)LL; <
{MM 
stringNN 
dataNN 
=NN 
(NN 
stringNN 
)NN 
dataHashtableNN ,
[NN, -
$numNN- .
]NN. /
;NN/ 0
tryOO 
{PP 	
usingQQ 
(QQ 
	TcpClientQQ 
clientQQ #
=QQ$ %
newQQ& )
	TcpClientQQ* 3
(QQ3 4
$strQQ4 A
,QQA B
$numQQC G
)QQG H
)QQH I
{RR 
usingSS 
(SS 
	SslStreamSS  
	sslStreamSS! *
=SS+ ,
newSS- 0
	SslStreamSS1 :
(SS: ;
clientSS; A
.SSA B
	GetStreamSSB K
(SSK L
)SSL M
)SSM N
)SSN O
{TT 
	sslStreamVV 
.VV 
WriteVV #
(VV# $
EncodingVV$ ,
.VV, -
UTF8VV- 1
.VV1 2
GetBytesVV2 :
(VV: ;
dataVV; ?
)VV? @
)VV@ A
;VVA B
}WW 
}XX 
}YY 	
catchZZ 
(ZZ 
IOExceptionZZ 
exceptIOZZ #
)ZZ# $
{[[ 	
IO\\ 
.\\ 
Logger\\ 
.\\ 
Log\\ 
(\\ 
NLog\\ 
.\\ 
LogLevel\\ '
.\\' (
Warn\\( ,
,\\, -
$str\\. N
,\\N O
exceptIO\\P X
)\\X Y
;\\Y Z
}]] 	
}^^ 
}`` 
}aa ó*
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_73a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_73a 2
:3 4
AbstractTestCase5 E
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string 
data 
; 
using   
(   
SecureString   
	securePwd   %
=  & '
new  ( +
SecureString  , 8
(  8 9
)  9 :
)  : ;
{!! 	
for"" 
("" 
int"" 
i"" 
="" 
$num"" 
;"" 
i"" 
<"" 
$str""  +
.""+ ,
Length"", 2
;""2 3
i""4 5
++""5 7
)""7 8
{## 
	securePwd%% 
.%% 

AppendChar%% $
(%%$ %
$str%%% 0
[%%0 1
i%%1 2
]%%2 3
)%%3 4
;%%4 5
}&& 
data)) 
=)) 
	securePwd)) 
.)) 
ToString)) %
())% &
)))& '
;))' (
}** 	

LinkedList++ 
<++ 
string++ 
>++ 
dataLinkedList++ )
=++* +
new++, /

LinkedList++0 :
<++: ;
string++; A
>++A B
(++B C
)++C D
;++D E
dataLinkedList,, 
.,, 
AddLast,, 
(,, 
data,, #
),,# $
;,,$ %
dataLinkedList-- 
.-- 
AddLast-- 
(-- 
data-- #
)--# $
;--$ %
dataLinkedList.. 
... 
AddLast.. 
(.. 
data.. #
)..# $
;..$ %8
,CWE319_Cleartext_Tx_Sensitive_Info__send_73b// 4
.//4 5
BadSink//5 <
(//< =
dataLinkedList//= K
)//M N
;//N O
}00 
public33 

override33 
void33 
Good33 
(33 
)33 
{44 
GoodG2B55 
(55 
)55 
;55 
GoodB2G66 
(66 
)66 
;66 
}77 
private:: 
static:: 
void:: 
GoodG2B:: 
(::  
)::  !
{;; 
string<< 
data<< 
;<< 
data>> 
=>> 
$str>> 
;>> 

LinkedList?? 
<?? 
string?? 
>?? 
dataLinkedList?? )
=??* +
new??, /

LinkedList??0 :
<??: ;
string??; A
>??A B
(??B C
)??C D
;??D E
dataLinkedList@@ 
.@@ 
AddLast@@ 
(@@ 
data@@ #
)@@# $
;@@$ %
dataLinkedListAA 
.AA 
AddLastAA 
(AA 
dataAA #
)AA# $
;AA$ %
dataLinkedListBB 
.BB 
AddLastBB 
(BB 
dataBB #
)BB# $
;BB$ %8
,CWE319_Cleartext_Tx_Sensitive_Info__send_73bCC 4
.CC4 5
GoodG2BSinkCC5 @
(CC@ A
dataLinkedListCCA O
)CCQ R
;CCR S
}DD 
privateGG 
staticGG 
voidGG 
GoodB2GGG 
(GG  
)GG  !
{HH 
stringII 
dataII 
;II 
usingJJ 
(JJ 
SecureStringJJ 
	securePwdJJ %
=JJ& '
newJJ( +
SecureStringJJ, 8
(JJ8 9
)JJ9 :
)JJ: ;
{KK 	
forLL 
(LL 
intLL 
iLL 
=LL 
$numLL 
;LL 
iLL 
<LL 
$strLL  +
.LL+ ,
LengthLL, 2
;LL2 3
iLL4 5
++LL5 7
)LL7 8
{MM 
	securePwdOO 
.OO 

AppendCharOO $
(OO$ %
$strOO% 0
[OO0 1
iOO1 2
]OO2 3
)OO3 4
;OO4 5
}PP 
dataSS 
=SS 
	securePwdSS 
.SS 
ToStringSS %
(SS% &
)SS& '
;SS' (
}TT 	

LinkedListUU 
<UU 
stringUU 
>UU 
dataLinkedListUU )
=UU* +
newUU, /

LinkedListUU0 :
<UU: ;
stringUU; A
>UUA B
(UUB C
)UUC D
;UUD E
dataLinkedListVV 
.VV 
AddLastVV 
(VV 
dataVV #
)VV# $
;VV$ %
dataLinkedListWW 
.WW 
AddLastWW 
(WW 
dataWW #
)WW# $
;WW$ %
dataLinkedListXX 
.XX 
AddLastXX 
(XX 
dataXX #
)XX# $
;XX$ %8
,CWE319_Cleartext_Tx_Sensitive_Info__send_73bYY 4
.YY4 5
GoodB2GSinkYY5 @
(YY@ A
dataLinkedListYYA O
)YYQ R
;YYR S
}ZZ 
}\\ 
}]] ∫(
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_73b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_73b 2
{ 
public   

static   
void   
BadSink   
(   

LinkedList   )
<  ) *
string  * 0
>  0 1
dataLinkedList  2 @
)  A B
{!! 
string"" 
data"" 
="" 
dataLinkedList"" $
.""$ %
Last""% )
."") *
Value""* /
;""/ 0
try## 
{$$ 	
using%% 
(%% 
	TcpClient%% 
	tcpClient%% &
=%%' (
new%%) ,
	TcpClient%%- 6
(%%6 7
$str%%7 D
,%%D E
$num%%F J
)%%J K
)%%K L
{&& 
using'' 
('' 
StreamWriter'' #
writer''$ *
=''+ ,
new''- 0
StreamWriter''1 =
(''= >
	tcpClient''> G
.''G H
	GetStream''H Q
(''Q R
)''R S
)''S T
)''T U
{(( 
writer** 
.** 
	WriteLine** $
(**$ %
data**% )
)**) *
;*** +
}++ 
},, 
}-- 	
catch.. 
(.. 
IOException.. 
exceptIO.. #
)..# $
{// 	
IO00 
.00 
Logger00 
.00 
Log00 
(00 
NLog00 
.00 
LogLevel00 '
.00' (
Warn00( ,
,00, -
$str00. N
,00N O
exceptIO00P X
)00X Y
;00Y Z
}11 	
}22 
public77 

static77 
void77 
GoodG2BSink77 "
(77" #

LinkedList77# -
<77- .
string77. 4
>774 5
dataLinkedList776 D
)77E F
{88 
string99 
data99 
=99 
dataLinkedList99 $
.99$ %
Last99% )
.99) *
Value99* /
;99/ 0
try:: 
{;; 	
using<< 
(<< 
	TcpClient<< 
	tcpClient<< &
=<<' (
new<<) ,
	TcpClient<<- 6
(<<6 7
$str<<7 D
,<<D E
$num<<F J
)<<J K
)<<K L
{== 
using>> 
(>> 
StreamWriter>> #
writer>>$ *
=>>+ ,
new>>- 0
StreamWriter>>1 =
(>>= >
	tcpClient>>> G
.>>G H
	GetStream>>H Q
(>>Q R
)>>R S
)>>S T
)>>T U
{?? 
writerAA 
.AA 
	WriteLineAA $
(AA$ %
dataAA% )
)AA) *
;AA* +
}BB 
}CC 
}DD 	
catchEE 
(EE 
IOExceptionEE 
exceptIOEE #
)EE# $
{FF 	
IOGG 
.GG 
LoggerGG 
.GG 
LogGG 
(GG 
NLogGG 
.GG 
LogLevelGG '
.GG' (
WarnGG( ,
,GG, -
$strGG. N
,GGN O
exceptIOGGP X
)GGX Y
;GGY Z
}HH 	
}II 
publicLL 

staticLL 
voidLL 
GoodB2GSinkLL "
(LL" #

LinkedListLL# -
<LL- .
stringLL. 4
>LL4 5
dataLinkedListLL6 D
)LLE F
{MM 
stringNN 
dataNN 
=NN 
dataLinkedListNN $
.NN$ %
LastNN% )
.NN) *
ValueNN* /
;NN/ 0
tryOO 
{PP 	
usingQQ 
(QQ 
	TcpClientQQ 
clientQQ #
=QQ$ %
newQQ& )
	TcpClientQQ* 3
(QQ3 4
$strQQ4 A
,QQA B
$numQQC G
)QQG H
)QQH I
{RR 
usingSS 
(SS 
	SslStreamSS  
	sslStreamSS! *
=SS+ ,
newSS- 0
	SslStreamSS1 :
(SS: ;
clientSS; A
.SSA B
	GetStreamSSB K
(SSK L
)SSL M
)SSM N
)SSN O
{TT 
	sslStreamVV 
.VV 
WriteVV #
(VV# $
EncodingVV$ ,
.VV, -
UTF8VV- 1
.VV1 2
GetBytesVV2 :
(VV: ;
dataVV; ?
)VV? @
)VV@ A
;VVA B
}WW 
}XX 
}YY 	
catchZZ 
(ZZ 
IOExceptionZZ 
exceptIOZZ #
)ZZ# $
{[[ 	
IO\\ 
.\\ 
Logger\\ 
.\\ 
Log\\ 
(\\ 
NLog\\ 
.\\ 
LogLevel\\ '
.\\' (
Warn\\( ,
,\\, -
$str\\. N
,\\N O
exceptIO\\P X
)\\X Y
;\\Y Z
}]] 	
}^^ 
}`` 
}aa ‹-
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_74a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_74a 2
:3 4
AbstractTestCase5 E
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string 
data 
; 
using   
(   
SecureString   
	securePwd   %
=  & '
new  ( +
SecureString  , 8
(  8 9
)  9 :
)  : ;
{!! 	
for"" 
("" 
int"" 
i"" 
="" 
$num"" 
;"" 
i"" 
<"" 
$str""  +
.""+ ,
Length"", 2
;""2 3
i""4 5
++""5 7
)""7 8
{## 
	securePwd%% 
.%% 

AppendChar%% $
(%%$ %
$str%%% 0
[%%0 1
i%%1 2
]%%2 3
)%%3 4
;%%4 5
}&& 
data)) 
=)) 
	securePwd)) 
.)) 
ToString)) %
())% &
)))& '
;))' (
}** 	

Dictionary++ 
<++ 
int++ 
,++ 
string++ 
>++ 
dataDictionary++ -
=++. /
new++0 3

Dictionary++4 >
<++> ?
int++? B
,++B C
string++C I
>++I J
(++J K
)++K L
;++L M
dataDictionary,, 
.,, 
Add,, 
(,, 
$num,, 
,,, 
data,, "
),," #
;,,# $
dataDictionary-- 
.-- 
Add-- 
(-- 
$num-- 
,-- 
data-- "
)--" #
;--# $
dataDictionary.. 
... 
Add.. 
(.. 
$num.. 
,.. 
data.. "
).." #
;..# $8
,CWE319_Cleartext_Tx_Sensitive_Info__send_74b// 4
.//4 5
BadSink//5 <
(//< =
dataDictionary//= K
)//M N
;//N O
}00 
public33 

override33 
void33 
Good33 
(33 
)33 
{44 
GoodG2B55 
(55 
)55 
;55 
GoodB2G66 
(66 
)66 
;66 
}77 
private:: 
static:: 
void:: 
GoodG2B:: 
(::  
)::  !
{;; 
string<< 
data<< 
;<< 
data>> 
=>> 
$str>> 
;>> 

Dictionary?? 
<?? 
int?? 
,?? 
string?? 
>?? 
dataDictionary?? -
=??. /
new??0 3

Dictionary??4 >
<??> ?
int??? B
,??B C
string??C I
>??I J
(??J K
)??K L
;??L M
dataDictionary@@ 
.@@ 
Add@@ 
(@@ 
$num@@ 
,@@ 
data@@ "
)@@" #
;@@# $
dataDictionaryAA 
.AA 
AddAA 
(AA 
$numAA 
,AA 
dataAA "
)AA" #
;AA# $
dataDictionaryBB 
.BB 
AddBB 
(BB 
$numBB 
,BB 
dataBB "
)BB" #
;BB# $8
,CWE319_Cleartext_Tx_Sensitive_Info__send_74bCC 4
.CC4 5
GoodG2BSinkCC5 @
(CC@ A
dataDictionaryCCA O
)CCQ R
;CCR S
}DD 
privateGG 
staticGG 
voidGG 
GoodB2GGG 
(GG  
)GG  !
{HH 
stringII 
dataII 
;II 
usingJJ 
(JJ 
SecureStringJJ 
	securePwdJJ %
=JJ& '
newJJ( +
SecureStringJJ, 8
(JJ8 9
)JJ9 :
)JJ: ;
{KK 	
forLL 
(LL 
intLL 
iLL 
=LL 
$numLL 
;LL 
iLL 
<LL 
$strLL  +
.LL+ ,
LengthLL, 2
;LL2 3
iLL4 5
++LL5 7
)LL7 8
{MM 
	securePwdOO 
.OO 

AppendCharOO $
(OO$ %
$strOO% 0
[OO0 1
iOO1 2
]OO2 3
)OO3 4
;OO4 5
}PP 
dataSS 
=SS 
	securePwdSS 
.SS 
ToStringSS %
(SS% &
)SS& '
;SS' (
}TT 	

DictionaryUU 
<UU 
intUU 
,UU 
stringUU 
>UU 
dataDictionaryUU -
=UU. /
newUU0 3

DictionaryUU4 >
<UU> ?
intUU? B
,UUB C
stringUUC I
>UUI J
(UUJ K
)UUK L
;UUL M
dataDictionaryVV 
.VV 
AddVV 
(VV 
$numVV 
,VV 
dataVV "
)VV" #
;VV# $
dataDictionaryWW 
.WW 
AddWW 
(WW 
$numWW 
,WW 
dataWW "
)WW" #
;WW# $
dataDictionaryXX 
.XX 
AddXX 
(XX 
$numXX 
,XX 
dataXX "
)XX" #
;XX# $8
,CWE319_Cleartext_Tx_Sensitive_Info__send_74bYY 4
.YY4 5
GoodB2GSinkYY5 @
(YY@ A
dataDictionaryYYA O
)YYQ R
;YYR S
}ZZ 
}\\ 
}]] ·(
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_74b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_74b 2
{ 
public   

static   
void   
BadSink   
(   

Dictionary   )
<  ) *
int  * -
,  - .
string  . 4
>  4 5
dataDictionary  6 D
)  E F
{!! 
string"" 
data"" 
="" 
dataDictionary"" $
[""$ %
$num""% &
]""& '
;""' (
try## 
{$$ 	
using%% 
(%% 
	TcpClient%% 
	tcpClient%% &
=%%' (
new%%) ,
	TcpClient%%- 6
(%%6 7
$str%%7 D
,%%D E
$num%%F J
)%%J K
)%%K L
{&& 
using'' 
('' 
StreamWriter'' #
writer''$ *
=''+ ,
new''- 0
StreamWriter''1 =
(''= >
	tcpClient''> G
.''G H
	GetStream''H Q
(''Q R
)''R S
)''S T
)''T U
{(( 
writer** 
.** 
	WriteLine** $
(**$ %
data**% )
)**) *
;*** +
}++ 
},, 
}-- 	
catch.. 
(.. 
IOException.. 
exceptIO.. #
)..# $
{// 	
IO00 
.00 
Logger00 
.00 
Log00 
(00 
NLog00 
.00 
LogLevel00 '
.00' (
Warn00( ,
,00, -
$str00. N
,00N O
exceptIO00P X
)00X Y
;00Y Z
}11 	
}22 
public77 

static77 
void77 
GoodG2BSink77 #
(77# $

Dictionary77$ .
<77. /
int77/ 2
,772 3
string773 9
>779 :
dataDictionary77; I
)77J K
{88 
string99 
data99 
=99 
dataDictionary99 $
[99$ %
$num99% &
]99& '
;99' (
try:: 
{;; 	
using<< 
(<< 
	TcpClient<< 
	tcpClient<< &
=<<' (
new<<) ,
	TcpClient<<- 6
(<<6 7
$str<<7 D
,<<D E
$num<<F J
)<<J K
)<<K L
{== 
using>> 
(>> 
StreamWriter>> #
writer>>$ *
=>>+ ,
new>>- 0
StreamWriter>>1 =
(>>= >
	tcpClient>>> G
.>>G H
	GetStream>>H Q
(>>Q R
)>>R S
)>>S T
)>>T U
{?? 
writerAA 
.AA 
	WriteLineAA $
(AA$ %
dataAA% )
)AA) *
;AA* +
}BB 
}CC 
}DD 	
catchEE 
(EE 
IOExceptionEE 
exceptIOEE #
)EE# $
{FF 	
IOGG 
.GG 
LoggerGG 
.GG 
LogGG 
(GG 
NLogGG 
.GG 
LogLevelGG '
.GG' (
WarnGG( ,
,GG, -
$strGG. N
,GGN O
exceptIOGGP X
)GGX Y
;GGY Z
}HH 	
}II 
publicLL 

staticLL 
voidLL 
GoodB2GSinkLL "
(LL" #

DictionaryLL# -
<LL- .
intLL. 1
,LL1 2
stringLL2 8
>LL8 9
dataDictionaryLL: H
)LLI J
{MM 
stringNN 
dataNN 
=NN 
dataDictionaryNN $
[NN$ %
$numNN% &
]NN& '
;NN' (
tryOO 
{PP 	
usingQQ 
(QQ 
	TcpClientQQ 
clientQQ #
=QQ$ %
newQQ& )
	TcpClientQQ* 3
(QQ3 4
$strQQ4 A
,QQA B
$numQQC G
)QQG H
)QQH I
{RR 
usingSS 
(SS 
	SslStreamSS  
	sslStreamSS! *
=SS+ ,
newSS- 0
	SslStreamSS1 :
(SS: ;
clientSS; A
.SSA B
	GetStreamSSB K
(SSK L
)SSL M
)SSM N
)SSN O
{TT 
	sslStreamVV 
.VV 
WriteVV #
(VV# $
EncodingVV$ ,
.VV, -
UTF8VV- 1
.VV1 2
GetBytesVV2 :
(VV: ;
dataVV; ?
)VV? @
)VV@ A
;VVA B
}WW 
}XX 
}YY 	
catchZZ 
(ZZ 
IOExceptionZZ 
exceptIOZZ #
)ZZ# $
{[[ 	
IO\\ 
.\\ 
Logger\\ 
.\\ 
Log\\ 
(\\ 
NLog\\ 
.\\ 
LogLevel\\ '
.\\' (
Warn\\( ,
,\\, -
$str\\. N
,\\N O
exceptIO\\P X
)\\X Y
;\\Y Z
}]] 	
}^^ 
}`` 
}aa Ù>
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_75a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_75a 2
:3 4
AbstractTestCase5 E
{ 
public 

override 
void 
Bad 
( 
) 
{   
string!! 
data!! 
;!! 
using"" 
("" 
SecureString"" 
	securePwd"" %
=""& '
new""( +
SecureString"", 8
(""8 9
)""9 :
)"": ;
{## 	
for$$ 
($$ 
int$$ 
i$$ 
=$$ 
$num$$ 
;$$ 
i$$ 
<$$ 
$str$$  +
.$$+ ,
Length$$, 2
;$$2 3
i$$4 5
++$$5 7
)$$7 8
{%% 
	securePwd'' 
.'' 

AppendChar'' $
(''$ %
$str''% 0
[''0 1
i''1 2
]''2 3
)''3 4
;''4 5
}(( 
data++ 
=++ 
	securePwd++ 
.++ 
ToString++ %
(++% &
)++& '
;++' (
},, 	
byte.. 
[.. 
].. 
dataSerialized.. 
=.. 
null..  $
;..$ %
try// 
{00 	
BinaryFormatter11 
bf11 
=11  
new11! $
BinaryFormatter11% 4
(114 5
)115 6
;116 7
using22 
(22 
var22 
ms22 
=22 
new22 
MemoryStream22  ,
(22, -
)22- .
)22. /
{33 
bf44 
.44 
	Serialize44 
(44 
ms44 
,44  
data44! %
)44% &
;44& '
dataSerialized55 
=55  
ms55! #
.55# $
ToArray55$ +
(55+ ,
)55, -
;55- .
}66 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_75b77 8
.778 9
BadSink779 @
(77@ A
dataSerialized77A O
)77Q R
;77R S
}88 	
catch99 
(99 "
SerializationException99 %
exceptSerialize99& 5
)995 6
{:: 	
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; 
.;; 
LogLevel;; '
.;;' (
Warn;;( ,
,;;, -
$str;;. X
,;;X Y
exceptSerialize;;Z i
);;i j
;;;j k
}<< 	
}== 
public@@ 

override@@ 
void@@ 
Good@@ 
(@@ 
)@@ 
{AA 
GoodG2BBB 
(BB 
)BB 
;BB 
GoodB2GCC 
(CC 
)CC 
;CC 
}DD 
privateGG 
staticGG 
voidGG 
GoodG2BGG 
(GG  
)GG  !
{HH 
stringII 
dataII 
;II 
usingJJ 
(JJ 
SecureStringJJ 
	securePwdJJ %
=JJ& '
newJJ( +
SecureStringJJ, 8
(JJ8 9
)JJ9 :
)JJ: ;
{KK 	
forLL 
(LL 
intLL 
iLL 
=LL 
$numLL 
;LL 
iLL 
<LL 
$strLL  +
.LL+ ,
LengthLL, 2
;LL2 3
iLL4 5
++LL5 7
)LL7 8
{MM 
	securePwdOO 
.OO 

AppendCharOO $
(OO$ %
$strOO% 0
[OO0 1
iOO1 2
]OO2 3
)OO3 4
;OO4 5
}PP 
dataSS 
=SS 
	securePwdSS 
.SS 
ToStringSS %
(SS% &
)SS& '
;SS' (
}TT 	
byteVV 
[VV 
]VV 
dataSerializedVV 
=VV 
nullVV  $
;VV$ %
tryWW 
{XX 	
BinaryFormatterYY 
bfYY 
=YY  
newYY! $
BinaryFormatterYY% 4
(YY4 5
)YY5 6
;YY6 7
usingZZ 
(ZZ 
varZZ 
msZZ 
=ZZ 
newZZ 
MemoryStreamZZ  ,
(ZZ, -
)ZZ- .
)ZZ. /
{[[ 
bf\\ 
.\\ 
	Serialize\\ 
(\\ 
ms\\ 
,\\  
data\\! %
)\\% &
;\\& '
dataSerialized]] 
=]]  
ms]]! #
.]]# $
ToArray]]$ +
(]]+ ,
)]], -
;]]- .
}^^ 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_75b__ 8
.__8 9
GoodG2BSink__9 D
(__D E
dataSerialized__E S
)__U V
;__V W
}`` 	
catchaa 
(aa "
SerializationExceptionaa %
exceptSerializeaa& 5
)aa5 6
{bb 	
IOcc 
.cc 
Loggercc 
.cc 
Logcc 
(cc 
NLogcc 
.cc 
LogLevelcc '
.cc' (
Warncc( ,
,cc, -
$strcc. X
,ccX Y
exceptSerializeccZ i
)cci j
;ccj k
}dd 	
}ee 
privatehh 
statichh 
voidhh 
GoodB2Ghh 
(hh  
)hh  !
{ii 
stringjj 
datajj 
;jj 
usingkk 
(kk 
SecureStringkk 
	securePwdkk %
=kk& '
newkk( +
SecureStringkk, 8
(kk8 9
)kk9 :
)kk: ;
{ll 	
formm 
(mm 
intmm 
imm 
=mm 
$nummm 
;mm 
imm 
<mm 
$strmm  +
.mm+ ,
Lengthmm, 2
;mm2 3
imm4 5
++mm5 7
)mm7 8
{nn 
	securePwdpp 
.pp 

AppendCharpp $
(pp$ %
$strpp% 0
[pp0 1
ipp1 2
]pp2 3
)pp3 4
;pp4 5
}qq 
datatt 
=tt 
	securePwdtt 
.tt 
ToStringtt %
(tt% &
)tt& '
;tt' (
}uu 	
byteww 
[ww 
]ww 
dataSerializedww 
=ww 
nullww  $
;ww$ %
tryxx 
{yy 	
BinaryFormatterzz 
bfzz 
=zz  
newzz! $
BinaryFormatterzz% 4
(zz4 5
)zz5 6
;zz6 7
using{{ 
({{ 
var{{ 
ms{{ 
={{ 
new{{ 
MemoryStream{{  ,
({{, -
){{- .
){{. /
{|| 
bf}} 
.}} 
	Serialize}} 
(}} 
ms}} 
,}}  
data}}! %
)}}% &
;}}& '
dataSerialized~~ 
=~~  
ms~~! #
.~~# $
ToArray~~$ +
(~~+ ,
)~~, -
;~~- .
} :
,CWE319_Cleartext_Tx_Sensitive_Info__send_75b
ÄÄ 8
.
ÄÄ8 9
GoodB2GSink
ÄÄ9 D
(
ÄÄD E
dataSerialized
ÄÄE S
)
ÄÄU V
;
ÄÄV W
}
ÅÅ 	
catch
ÇÇ 
(
ÇÇ $
SerializationException
ÇÇ %
exceptSerialize
ÇÇ& 5
)
ÇÇ5 6
{
ÉÉ 	
IO
ÑÑ 
.
ÑÑ 
Logger
ÑÑ 
.
ÑÑ 
Log
ÑÑ 
(
ÑÑ 
NLog
ÑÑ 
.
ÑÑ 
LogLevel
ÑÑ '
.
ÑÑ' (
Warn
ÑÑ( ,
,
ÑÑ, -
$str
ÑÑ. X
,
ÑÑX Y
exceptSerialize
ÑÑZ i
)
ÑÑi j
;
ÑÑj k
}
ÖÖ 	
}
ÜÜ 
}àà 
}ââ ‚H
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_75b.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_75b 2
{ 
public!! 

static!! 
void!! 
BadSink!! 
(!! 
byte!! #
[!!# $
]!!$ %
dataSerialized!!& 4
)!!5 6
{"" 
try## 
{$$ 	
string%% 
data%% 
;%% 
var&& 
binForm&& 
=&& 
new&& 
BinaryFormatter&& -
(&&- .
)&&. /
;&&/ 0
using'' 
('' 
var'' 
	memStream''  
=''! "
new''# &
MemoryStream''' 3
(''3 4
)''4 5
)''5 6
{(( 
	memStream)) 
.)) 
Write)) 
())  
dataSerialized))  .
,)). /
$num))0 1
,))1 2
dataSerialized))3 A
.))A B
Length))B H
)))H I
;))I J
	memStream** 
.** 
Seek** 
(** 
$num**  
,**  !

SeekOrigin**" ,
.**, -
Begin**- 2
)**2 3
;**3 4
data++ 
=++ 
(++ 
string++ 
)++ 
binForm++ &
.++& '
Deserialize++' 2
(++2 3
	memStream++3 <
)++< =
;++= >
},, 
try-- 
{.. 
using// 
(// 
	TcpClient//  
	tcpClient//! *
=//+ ,
new//- 0
	TcpClient//1 :
(//: ;
$str//; H
,//H I
$num//J N
)//N O
)//O P
{00 
using11 
(11 
StreamWriter11 '
writer11( .
=11/ 0
new111 4
StreamWriter115 A
(11A B
	tcpClient11B K
.11K L
	GetStream11L U
(11U V
)11V W
)11W X
)11X Y
{22 
writer44 
.44 
	WriteLine44 (
(44( )
data44) -
)44- .
;44. /
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
$str::2 R
,::R S
exceptIO::T \
)::\ ]
;::] ^
};; 
}<< 	
catch== 
(== "
SerializationException== %
exceptSerialize==& 5
)==5 6
{>> 	
IO?? 
.?? 
Logger?? 
.?? 
Log?? 
(?? 
NLog?? 
.?? 
LogLevel?? '
.??' (
Warn??( ,
,??, -
$str??. Y
,??Y Z
exceptSerialize??[ j
)??j k
;??k l
}@@ 	
}AA 
publicFF 

staticFF 
voidFF 
GoodG2BSinkFF "
(FF" #
byteFF# '
[FF' (
]FF( )
dataSerializedFF* 8
)FF9 :
{GG 
tryHH 
{II 	
stringJJ 
dataJJ 
;JJ 
varKK 
binFormKK 
=KK 
newKK 
BinaryFormatterKK -
(KK- .
)KK. /
;KK/ 0
usingLL 
(LL 
varLL 
	memStreamLL  
=LL! "
newLL# &
MemoryStreamLL' 3
(LL3 4
)LL4 5
)LL5 6
{MM 
	memStreamNN 
.NN 
WriteNN 
(NN  
dataSerializedNN  .
,NN. /
$numNN0 1
,NN1 2
dataSerializedNN3 A
.NNA B
LengthNNB H
)NNH I
;NNI J
	memStreamOO 
.OO 
SeekOO 
(OO 
$numOO  
,OO  !

SeekOriginOO" ,
.OO, -
BeginOO- 2
)OO2 3
;OO3 4
dataPP 
=PP 
(PP 
stringPP 
)PP 
binFormPP &
.PP& '
DeserializePP' 2
(PP2 3
	memStreamPP3 <
)PP< =
;PP= >
}QQ 
tryRR 
{SS 
usingTT 
(TT 
	TcpClientTT  
	tcpClientTT! *
=TT+ ,
newTT- 0
	TcpClientTT1 :
(TT: ;
$strTT; H
,TTH I
$numTTJ N
)TTN O
)TTO P
{UU 
usingVV 
(VV 
StreamWriterVV '
writerVV( .
=VV/ 0
newVV1 4
StreamWriterVV5 A
(VVA B
	tcpClientVVB K
.VVK L
	GetStreamVVL U
(VVU V
)VVV W
)VVW X
)VVX Y
{WW 
writerYY 
.YY 
	WriteLineYY (
(YY( )
dataYY) -
)YY- .
;YY. /
}ZZ 
}[[ 
}\\ 
catch]] 
(]] 
IOException]] 
exceptIO]] '
)]]' (
{^^ 
IO__ 
.__ 
Logger__ 
.__ 
Log__ 
(__ 
NLog__ "
.__" #
LogLevel__# +
.__+ ,
Warn__, 0
,__0 1
$str__2 R
,__R S
exceptIO__T \
)__\ ]
;__] ^
}`` 
}aa 	
catchbb 
(bb "
SerializationExceptionbb %
exceptSerializebb& 5
)bb5 6
{cc 	
IOdd 
.dd 
Loggerdd 
.dd 
Logdd 
(dd 
NLogdd 
.dd 
LogLeveldd '
.dd' (
Warndd( ,
,dd, -
$strdd. Y
,ddY Z
exceptSerializedd[ j
)ddj k
;ddk l
}ee 	
}ff 
publicii 

staticii 
voidii 
GoodB2GSinkii "
(ii" #
byteii# '
[ii' (
]ii( )
dataSerializedii* 8
)ii9 :
{jj 
trykk 
{ll 	
stringmm 
datamm 
;mm 
varnn 
binFormnn 
=nn 
newnn 
BinaryFormatternn -
(nn- .
)nn. /
;nn/ 0
usingoo 
(oo 
varoo 
	memStreamoo  
=oo! "
newoo# &
MemoryStreamoo' 3
(oo3 4
)oo4 5
)oo5 6
{pp 
	memStreamqq 
.qq 
Writeqq 
(qq  
dataSerializedqq  .
,qq. /
$numqq0 1
,qq1 2
dataSerializedqq3 A
.qqA B
LengthqqB H
)qqH I
;qqI J
	memStreamrr 
.rr 
Seekrr 
(rr 
$numrr  
,rr  !

SeekOriginrr" ,
.rr, -
Beginrr- 2
)rr2 3
;rr3 4
datass 
=ss 
(ss 
stringss 
)ss 
binFormss &
.ss& '
Deserializess' 2
(ss2 3
	memStreamss3 <
)ss< =
;ss= >
}tt 
tryuu 
{vv 
usingww 
(ww 
	TcpClientww  
clientww! '
=ww( )
newww* -
	TcpClientww. 7
(ww7 8
$strww8 E
,wwE F
$numwwG K
)wwK L
)wwL M
{xx 
usingyy 
(yy 
	SslStreamyy $
	sslStreamyy% .
=yy/ 0
newyy1 4
	SslStreamyy5 >
(yy> ?
clientyy? E
.yyE F
	GetStreamyyF O
(yyO P
)yyP Q
)yyQ R
)yyR S
{zz 
	sslStream|| !
.||! "
Write||" '
(||' (
Encoding||( 0
.||0 1
UTF8||1 5
.||5 6
GetBytes||6 >
(||> ?
data||? C
)||C D
)||D E
;||E F
}}} 
}~~ 
} 
catch
ÄÄ 
(
ÄÄ 
IOException
ÄÄ 
exceptIO
ÄÄ '
)
ÄÄ' (
{
ÅÅ 
IO
ÇÇ 
.
ÇÇ 
Logger
ÇÇ 
.
ÇÇ 
Log
ÇÇ 
(
ÇÇ 
NLog
ÇÇ "
.
ÇÇ" #
LogLevel
ÇÇ# +
.
ÇÇ+ ,
Warn
ÇÇ, 0
,
ÇÇ0 1
$str
ÇÇ2 R
,
ÇÇR S
exceptIO
ÇÇT \
)
ÇÇ\ ]
;
ÇÇ] ^
}
ÉÉ 
}
ÑÑ 	
catch
ÖÖ 
(
ÖÖ $
SerializationException
ÖÖ %
exceptSerialize
ÖÖ& 5
)
ÖÖ5 6
{
ÜÜ 	
IO
áá 
.
áá 
Logger
áá 
.
áá 
Log
áá 
(
áá 
NLog
áá 
.
áá 
LogLevel
áá '
.
áá' (
Warn
áá( ,
,
áá, -
$str
áá. Y
,
ááY Z
exceptSerialize
áá[ j
)
ááj k
;
áák l
}
àà 	
}
ââ 
}ãã 
}åå ú
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_81a.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class 8
,CWE319_Cleartext_Tx_Sensitive_Info__send_81a 2
:3 4
AbstractTestCase5 E
{ 
public 

override 
void 
Bad 
( 
) 
{ 
string 
data 
; 
using 
( 
SecureString 
	securePwd %
=& '
new( +
SecureString, 8
(8 9
)9 :
): ;
{   	
for!! 
(!! 
int!! 
i!! 
=!! 
$num!! 
;!! 
i!! 
<!! 
$str!!  +
.!!+ ,
Length!!, 2
;!!2 3
i!!4 5
++!!5 7
)!!7 8
{"" 
	securePwd$$ 
.$$ 

AppendChar$$ $
($$$ %
$str$$% 0
[$$0 1
i$$1 2
]$$2 3
)$$3 4
;$$4 5
}%% 
data(( 
=(( 
	securePwd(( 
.(( 
ToString(( %
(((% &
)((& '
;((' (
})) 	<
0CWE319_Cleartext_Tx_Sensitive_Info__send_81_base** 8

baseObject**9 C
=**D E
new**F I;
/CWE319_Cleartext_Tx_Sensitive_Info__send_81_bad**J y
(**y z
)**z {
;**{ |

baseObject++ 
.++ 
Action++ 
(++ 
data++ 
)++  
;++  !
},, 
public// 

override// 
void// 
Good// 
(// 
)// 
{00 
GoodG2B11 
(11 
)11 
;11 
GoodB2G22 
(22 
)22 
;22 
}33 
private66 
void66 
GoodG2B66 
(66 
)66 
{77 
string88 
data88 
;88 
data:: 
=:: 
$str:: 
;:: <
0CWE319_Cleartext_Tx_Sensitive_Info__send_81_base;; 8

baseObject;;9 C
=;;D E
new;;F I?
3CWE319_Cleartext_Tx_Sensitive_Info__send_81_goodG2B;;J }
(;;} ~
);;~ 
;	;; Ä

baseObject<< 
.<< 
Action<< 
(<< 
data<< 
)<<  
;<<  !
}== 
private@@ 
void@@ 
GoodB2G@@ 
(@@ 
)@@ 
{AA 
stringBB 
dataBB 
;BB 
usingCC 
(CC 
SecureStringCC 
	securePwdCC %
=CC& '
newCC( +
SecureStringCC, 8
(CC8 9
)CC9 :
)CC: ;
{DD 	
forEE 
(EE 
intEE 
iEE 
=EE 
$numEE 
;EE 
iEE 
<EE 
$strEE  +
.EE+ ,
LengthEE, 2
;EE2 3
iEE4 5
++EE5 7
)EE7 8
{FF 
	securePwdHH 
.HH 

AppendCharHH $
(HH$ %
$strHH% 0
[HH0 1
iHH1 2
]HH2 3
)HH3 4
;HH4 5
}II 
dataLL 
=LL 
	securePwdLL 
.LL 
ToStringLL %
(LL% &
)LL& '
;LL' (
}MM 	<
0CWE319_Cleartext_Tx_Sensitive_Info__send_81_baseNN 8

baseObjectNN9 C
=NND E
newNNF I?
3CWE319_Cleartext_Tx_Sensitive_Info__send_81_goodB2GNNJ }
(NN} ~
)NN~ 
;	NN Ä

baseObjectOO 
.OO 
ActionOO 
(OO 
dataOO 
)OO  
;OO  !
}PP 
}RR 
}SS ô
±C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_81_bad.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class ;
/CWE319_Cleartext_Tx_Sensitive_Info__send_81_bad 5
:6 7<
0CWE319_Cleartext_Tx_Sensitive_Info__send_81_base8 h
{ 
public 

override 
void 
Action 
(  
string  &
data' +
), -
{   
try!! 
{"" 	
using## 
(## 
	TcpClient## 
	tcpClient## &
=##' (
new##) ,
	TcpClient##- 6
(##6 7
$str##7 D
,##D E
$num##F J
)##J K
)##K L
{$$ 
using%% 
(%% 
StreamWriter%% #
writer%%$ *
=%%+ ,
new%%- 0
StreamWriter%%1 =
(%%= >
	tcpClient%%> G
.%%G H
	GetStream%%H Q
(%%Q R
)%%R S
)%%S T
)%%T U
{&& 
writer(( 
.(( 
	WriteLine(( $
((($ %
data((% )
)(() *
;((* +
})) 
}** 
}++ 	
catch,, 
(,, 
IOException,, 
exceptIO,, #
),,# $
{-- 	
IO.. 
... 
Logger.. 
... 
Log.. 
(.. 
NLog.. 
... 
LogLevel.. '
...' (
Warn..( ,
,.., -
$str... N
,..N O
exceptIO..P X
)..X Y
;..Y Z
}// 	
}00 
}11 
}22 ‹
≤C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_81_base.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
abstract 
class	 <
0CWE319_Cleartext_Tx_Sensitive_Info__send_81_base ?
{ 
public 

abstract 
void 
Action 
(  
string  &
data' +
), -
;- .
} 
}   ë
µC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_81_goodB2G.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class ?
3CWE319_Cleartext_Tx_Sensitive_Info__send_81_goodB2G 9
:: ;<
0CWE319_Cleartext_Tx_Sensitive_Info__send_81_base< l
{ 
public   

override   
void   
Action   
(    
string    &
data  ' +
)  , -
{!! 
try"" 
{## 	
using$$ 
($$ 
	TcpClient$$ 
client$$ #
=$$$ %
new$$& )
	TcpClient$$* 3
($$3 4
$str$$4 A
,$$A B
$num$$C G
)$$G H
)$$H I
{%% 
using&& 
(&& 
	SslStream&&  
	sslStream&&! *
=&&+ ,
new&&- 0
	SslStream&&1 :
(&&: ;
client&&; A
.&&A B
	GetStream&&B K
(&&K L
)&&L M
)&&M N
)&&N O
{'' 
	sslStream)) 
.)) 
Write)) #
())# $
Encoding))$ ,
.)), -
UTF8))- 1
.))1 2
GetBytes))2 :
()): ;
data)); ?
)))? @
)))@ A
;))A B
}** 
}++ 
},, 	
catch-- 
(-- 
IOException-- 
exceptIO-- #
)--# $
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. N
,//N O
exceptIO//P X
)//X Y
;//Y Z
}00 	
}11 
}22 
}33 °
µC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\CWE319_Cleartext_Tx_Sensitive_Info__send_81_goodG2B.cs
	namespace 	
	testcases
 
. .
"CWE319_Cleartext_Tx_Sensitive_Info 6
{ 
class ?
3CWE319_Cleartext_Tx_Sensitive_Info__send_81_goodG2B 9
:: ;<
0CWE319_Cleartext_Tx_Sensitive_Info__send_81_base< l
{ 
public   

override   
void   
Action   
(    
string    &
data  ' +
)  , -
{!! 
try"" 
{## 	
using$$ 
($$ 
	TcpClient$$ 
	tcpClient$$ &
=$$' (
new$$) ,
	TcpClient$$- 6
($$6 7
$str$$7 D
,$$D E
$num$$F J
)$$J K
)$$K L
{%% 
using&& 
(&& 
StreamWriter&& #
writer&&$ *
=&&+ ,
new&&- 0
StreamWriter&&1 =
(&&= >
	tcpClient&&> G
.&&G H
	GetStream&&H Q
(&&Q R
)&&R S
)&&S T
)&&T U
{'' 
writer)) 
.)) 
	WriteLine)) $
())$ %
data))% )
)))) *
;))* +
}** 
}++ 
},, 	
catch-- 
(-- 
IOException-- 
exceptIO-- #
)--# $
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. N
,//N O
exceptIO//P X
)//X Y
;//Y Z
}00 	
}11 
}22 
}33 ∂‚
âC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\Program.cs
	namespace		 	
	testcases		
 
.		 .
"CWE319_Cleartext_Tx_Sensitive_Info		 6
{

 
class 
Program 
{ 
static 
void	 
Main 
( 
string 
[ 
] 
args  
)  !
{" #
if 
( 
args 

.
 
Any 
( 
) 
) 
{ 
if 
( 
args 
[ 
$num 
] 
. 
Equals 
( 
$str 
, 
StringComparison ,
., -
OrdinalIgnoreCase- >
)> ?
||@ B
args 
[ 
$num 
] 
. 
Equals !
(! "
$str" *
,* +
StringComparison, <
.< =
OrdinalIgnoreCase= N
)N O
)O P
{Q R
Console 
. 
	WriteLine 
( 
$str R
+S T
$str b
)b c
;c d
System 
. 
Environment 
. 
Exit 
( 
$num 
) 
;  
} 
foreach"" 
("" 
string"" 
	className"" 
in""  
args""! %
)""% &
{""' (
try$$ 
{$$	 

Type** 

myClass** 
=** 
Type** 
.** 
GetType** !
(**! "
	className**" +
)**+ ,
;**, -
object++ 
myObject++ 
=++ 
	Activator++ !
.++! "
CreateInstance++" 0
(++0 1
myClass++1 8
)++8 9
;++9 :
myClass,, 
.,, 
InvokeMember,, 
(,, 
$str,, $
,,,$ %
BindingFlags-- 
.-- 
InvokeMethod--  
|--! "
BindingFlags--# /
.--/ 0
Instance--0 8
|--9 :
BindingFlags--; G
.--G H
Public--H N
,--N O
null.. 
,.. 
myObject// 
,// 
new00 

object00 
[00 
]00 
{00 
	className00 
}00  !
)00! "
;00" #
}22 
catch22 
(22 
	Exception22 
ex22 
)22 
{22 
Console44 
.44 
	WriteLine44 
(44 
$str44 7
+448 9
	className44: C
)44C D
;44D E
Console55 
.55 
	WriteLine55 
(55 
ex55 
.55 

StackTrace55 %
)55% &
;55& '
}77 
Console99 
.99 
	WriteLine99 
(99 
$str99 
)99 
;99 
};; 
}== 
else== 	
{==
 
RunTestCWE1CC 
(CC 
)CC 
;CC 
RunTestCWE2DD 
(DD 
)DD 
;DD 
RunTestCWE3EE 
(EE 
)EE 
;EE 
RunTestCWE4FF 
(FF 
)FF 
;FF 
RunTestCWE5GG 
(GG 
)GG 
;GG 
RunTestCWE6HH 
(HH 
)HH 
;HH 
RunTestCWE7II 
(II 
)II 
;II 
RunTestCWE8JJ 
(JJ 
)JJ 
;JJ 
RunTestCWE9KK 
(KK 
)KK 
;KK 
}LL 
}MM 
privateOO 
staticOO	 
voidOO 
RunTestCWE1OO  
(OO  !
)OO! "
{OO# $
}SS 
privateUU 
staticUU	 
voidUU 
RunTestCWE2UU  
(UU  !
)UU! "
{UU# $
}YY 
private[[ 
static[[	 
void[[ 
RunTestCWE3[[  
([[  !
)[[! "
{[[# $
(]] 
new]] L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_01]] H
(]]H I
)]]I J
)]]J K
.]]K L
RunTest]]L S
(]]S T
$str	]]T ñ
)
]]ñ ó
;
]]ó ò
(^^ 
new^^ L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_02^^ H
(^^H I
)^^I J
)^^J K
.^^K L
RunTest^^L S
(^^S T
$str	^^T ñ
)
^^ñ ó
;
^^ó ò
(__ 
new__ L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_03__ H
(__H I
)__I J
)__J K
.__K L
RunTest__L S
(__S T
$str	__T ñ
)
__ñ ó
;
__ó ò
(`` 
new`` L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_04`` H
(``H I
)``I J
)``J K
.``K L
RunTest``L S
(``S T
$str	``T ñ
)
``ñ ó
;
``ó ò
(aa 
newaa L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_05aa H
(aaH I
)aaI J
)aaJ K
.aaK L
RunTestaaL S
(aaS T
$str	aaT ñ
)
aañ ó
;
aaó ò
(bb 
newbb L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_06bb H
(bbH I
)bbI J
)bbJ K
.bbK L
RunTestbbL S
(bbS T
$str	bbT ñ
)
bbñ ó
;
bbó ò
(cc 
newcc L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_07cc H
(ccH I
)ccI J
)ccJ K
.ccK L
RunTestccL S
(ccS T
$str	ccT ñ
)
ccñ ó
;
ccó ò
(dd 
newdd L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_08dd H
(ddH I
)ddI J
)ddJ K
.ddK L
RunTestddL S
(ddS T
$str	ddT ñ
)
ddñ ó
;
ddó ò
(ee 
newee L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_09ee H
(eeH I
)eeI J
)eeJ K
.eeK L
RunTesteeL S
(eeS T
$str	eeT ñ
)
eeñ ó
;
eeó ò
(ff 
newff L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_10ff H
(ffH I
)ffI J
)ffJ K
.ffK L
RunTestffL S
(ffS T
$str	ffT ñ
)
ffñ ó
;
ffó ò
(gg 
newgg L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_11gg H
(ggH I
)ggI J
)ggJ K
.ggK L
RunTestggL S
(ggS T
$str	ggT ñ
)
ggñ ó
;
ggó ò
(hh 
newhh L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_12hh H
(hhH I
)hhI J
)hhJ K
.hhK L
RunTesthhL S
(hhS T
$str	hhT ñ
)
hhñ ó
;
hhó ò
(ii 
newii L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_13ii H
(iiH I
)iiI J
)iiJ K
.iiK L
RunTestiiL S
(iiS T
$str	iiT ñ
)
iiñ ó
;
iió ò
(jj 
newjj L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_14jj H
(jjH I
)jjI J
)jjJ K
.jjK L
RunTestjjL S
(jjS T
$str	jjT ñ
)
jjñ ó
;
jjó ò
(kk 
newkk L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_15kk H
(kkH I
)kkI J
)kkJ K
.kkK L
RunTestkkL S
(kkS T
$str	kkT ñ
)
kkñ ó
;
kkó ò
(ll 
newll L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_16ll H
(llH I
)llI J
)llJ K
.llK L
RunTestllL S
(llS T
$str	llT ñ
)
llñ ó
;
lló ò
(mm 
newmm L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_17mm H
(mmH I
)mmI J
)mmJ K
.mmK L
RunTestmmL S
(mmS T
$str	mmT ñ
)
mmñ ó
;
mmó ò
(nn 
newnn L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_21nn H
(nnH I
)nnI J
)nnJ K
.nnK L
RunTestnnL S
(nnS T
$str	nnT ñ
)
nnñ ó
;
nnó ò
(oo 
newoo M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_22aoo I
(ooI J
)ooJ K
)ooK L
.ooL M
RunTestooM T
(ooT U
$str	ooU ò
)
ooò ô
;
ooô ö
(pp 
newpp L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_31pp H
(ppH I
)ppI J
)ppJ K
.ppK L
RunTestppL S
(ppS T
$str	ppT ñ
)
ppñ ó
;
ppó ò
(qq 
newqq L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_41qq H
(qqH I
)qqI J
)qqJ K
.qqK L
RunTestqqL S
(qqS T
$str	qqT ñ
)
qqñ ó
;
qqó ò
(rr 
newrr L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_42rr H
(rrH I
)rrI J
)rrJ K
.rrK L
RunTestrrL S
(rrS T
$str	rrT ñ
)
rrñ ó
;
rró ò
(ss 
newss L
@CWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_45ss H
(ssH I
)ssI J
)ssJ K
.ssK L
RunTestssL S
(ssS T
$str	ssT ñ
)
ssñ ó
;
ssó ò
(tt 
newtt M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_51att I
(ttI J
)ttJ K
)ttK L
.ttL M
RunTestttM T
(ttT U
$str	ttU ò
)
ttò ô
;
ttô ö
(uu 
newuu M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_52auu I
(uuI J
)uuJ K
)uuK L
.uuL M
RunTestuuM T
(uuT U
$str	uuU ò
)
uuò ô
;
uuô ö
(vv 
newvv M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_53avv I
(vvI J
)vvJ K
)vvK L
.vvL M
RunTestvvM T
(vvT U
$str	vvU ò
)
vvò ô
;
vvô ö
(ww 
newww M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_54aww I
(wwI J
)wwJ K
)wwK L
.wwL M
RunTestwwM T
(wwT U
$str	wwU ò
)
wwò ô
;
wwô ö
(xx 
newxx M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_61axx I
(xxI J
)xxJ K
)xxK L
.xxL M
RunTestxxM T
(xxT U
$str	xxU ò
)
xxò ô
;
xxô ö
(yy 
newyy M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_66ayy I
(yyI J
)yyJ K
)yyK L
.yyL M
RunTestyyM T
(yyT U
$str	yyU ò
)
yyò ô
;
yyô ö
(zz 
newzz M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_67azz I
(zzI J
)zzJ K
)zzK L
.zzL M
RunTestzzM T
(zzT U
$str	zzU ò
)
zzò ô
;
zzô ö
({{ 
new{{ M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_68a{{ I
({{I J
){{J K
){{K L
.{{L M
RunTest{{M T
({{T U
$str	{{U ò
)
{{ò ô
;
{{ô ö
(|| 
new|| M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_71a|| I
(||I J
)||J K
)||K L
.||L M
RunTest||M T
(||T U
$str	||U ò
)
||ò ô
;
||ô ö
(}} 
new}} M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_72a}} I
(}}I J
)}}J K
)}}K L
.}}L M
RunTest}}M T
(}}T U
$str	}}U ò
)
}}ò ô
;
}}ô ö
(~~ 
new~~ M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_73a~~ I
(~~I J
)~~J K
)~~K L
.~~L M
RunTest~~M T
(~~T U
$str	~~U ò
)
~~ò ô
;
~~ô ö
( 
new M
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_74a I
(I J
)J K
)K L
.L M
RunTestM T
(T U
$str	U ò
)
ò ô
;
ô ö
(
ÄÄ 
new
ÄÄ O
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_75a
ÄÄ I
(
ÄÄI J
)
ÄÄJ K
)
ÄÄK L
.
ÄÄL M
RunTest
ÄÄM T
(
ÄÄT U
$strÄÄU ò
)ÄÄò ô
;ÄÄô ö
(
ÅÅ 
new
ÅÅ O
ACWE319_Cleartext_Tx_Sensitive_Info__connect_tcp_SqlConnection_81a
ÅÅ I
(
ÅÅI J
)
ÅÅJ K
)
ÅÅK L
.
ÅÅL M
RunTest
ÅÅM T
(
ÅÅT U
$strÅÅU ò
)ÅÅò ô
;ÅÅô ö
(
ÇÇ 
new
ÇÇ M
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_01
ÇÇ G
(
ÇÇG H
)
ÇÇH I
)
ÇÇI J
.
ÇÇJ K
RunTest
ÇÇK R
(
ÇÇR S
$strÇÇS î
)ÇÇî ï
;ÇÇï ñ
(
ÉÉ 
new
ÉÉ M
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_02
ÉÉ G
(
ÉÉG H
)
ÉÉH I
)
ÉÉI J
.
ÉÉJ K
RunTest
ÉÉK R
(
ÉÉR S
$strÉÉS î
)ÉÉî ï
;ÉÉï ñ
(
ÑÑ 
new
ÑÑ M
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_03
ÑÑ G
(
ÑÑG H
)
ÑÑH I
)
ÑÑI J
.
ÑÑJ K
RunTest
ÑÑK R
(
ÑÑR S
$strÑÑS î
)ÑÑî ï
;ÑÑï ñ
(
ÖÖ 
new
ÖÖ M
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_04
ÖÖ G
(
ÖÖG H
)
ÖÖH I
)
ÖÖI J
.
ÖÖJ K
RunTest
ÖÖK R
(
ÖÖR S
$strÖÖS î
)ÖÖî ï
;ÖÖï ñ
(
ÜÜ 
new
ÜÜ M
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_05
ÜÜ G
(
ÜÜG H
)
ÜÜH I
)
ÜÜI J
.
ÜÜJ K
RunTest
ÜÜK R
(
ÜÜR S
$strÜÜS î
)ÜÜî ï
;ÜÜï ñ
(
áá 
new
áá M
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_06
áá G
(
ááG H
)
ááH I
)
ááI J
.
ááJ K
RunTest
ááK R
(
ááR S
$strááS î
)ááî ï
;ááï ñ
(
àà 
new
àà M
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_07
àà G
(
ààG H
)
ààH I
)
ààI J
.
ààJ K
RunTest
ààK R
(
ààR S
$strààS î
)ààî ï
;ààï ñ
(
ââ 
new
ââ M
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_08
ââ G
(
ââG H
)
ââH I
)
ââI J
.
ââJ K
RunTest
ââK R
(
ââR S
$strââS î
)ââî ï
;ââï ñ
(
ää 
new
ää M
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_09
ää G
(
ääG H
)
ääH I
)
ääI J
.
ääJ K
RunTest
ääK R
(
ääR S
$strääS î
)ääî ï
;ääï ñ
(
ãã 
new
ãã M
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_10
ãã G
(
ããG H
)
ããH I
)
ããI J
.
ããJ K
RunTest
ããK R
(
ããR S
$strããS î
)ããî ï
;ããï ñ
(
åå 
new
åå M
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_11
åå G
(
ååG H
)
ååH I
)
ååI J
.
ååJ K
RunTest
ååK R
(
ååR S
$strååS î
)ååî ï
;ååï ñ
(
çç 
new
çç M
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_12
çç G
(
ççG H
)
ççH I
)
ççI J
.
ççJ K
RunTest
ççK R
(
ççR S
$strççS î
)ççî ï
;ççï ñ
(
éé 
new
éé M
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_13
éé G
(
ééG H
)
ééH I
)
ééI J
.
ééJ K
RunTest
ééK R
(
ééR S
$strééS î
)ééî ï
;ééï ñ
(
èè 
new
èè M
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_14
èè G
(
èèG H
)
èèH I
)
èèI J
.
èèJ K
RunTest
èèK R
(
èèR S
$strèèS î
)èèî ï
;èèï ñ
(
êê 
new
êê M
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_15
êê G
(
êêG H
)
êêH I
)
êêI J
.
êêJ K
RunTest
êêK R
(
êêR S
$strêêS î
)êêî ï
;êêï ñ
(
ëë 
new
ëë M
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_16
ëë G
(
ëëG H
)
ëëH I
)
ëëI J
.
ëëJ K
RunTest
ëëK R
(
ëëR S
$strëëS î
)ëëî ï
;ëëï ñ
(
íí 
new
íí M
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_17
íí G
(
ííG H
)
ííH I
)
ííI J
.
ííJ K
RunTest
ííK R
(
ííR S
$strííS î
)ííî ï
;ííï ñ
(
ìì 
new
ìì M
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_21
ìì G
(
ììG H
)
ììH I
)
ììI J
.
ììJ K
RunTest
ììK R
(
ììR S
$strììS î
)ììî ï
;ììï ñ
(
îî 
new
îî N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_22a
îî H
(
îîH I
)
îîI J
)
îîJ K
.
îîK L
RunTest
îîL S
(
îîS T
$strîîT ñ
)îîñ ó
;îîó ò
(
ïï 
new
ïï M
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_31
ïï G
(
ïïG H
)
ïïH I
)
ïïI J
.
ïïJ K
RunTest
ïïK R
(
ïïR S
$strïïS î
)ïïî ï
;ïïï ñ
(
ññ 
new
ññ M
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_41
ññ G
(
ññG H
)
ññH I
)
ññI J
.
ññJ K
RunTest
ññK R
(
ññR S
$strññS î
)ññî ï
;ññï ñ
(
óó 
new
óó M
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_42
óó G
(
óóG H
)
óóH I
)
óóI J
.
óóJ K
RunTest
óóK R
(
óóR S
$stróóS î
)óóî ï
;óóï ñ
(
òò 
new
òò M
?CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_45
òò G
(
òòG H
)
òòH I
)
òòI J
.
òòJ K
RunTest
òòK R
(
òòR S
$stròòS î
)òòî ï
;òòï ñ
(
ôô 
new
ôô N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_51a
ôô H
(
ôôH I
)
ôôI J
)
ôôJ K
.
ôôK L
RunTest
ôôL S
(
ôôS T
$strôôT ñ
)ôôñ ó
;ôôó ò
(
öö 
new
öö N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_52a
öö H
(
ööH I
)
ööI J
)
ööJ K
.
ööK L
RunTest
ööL S
(
ööS T
$strööT ñ
)ööñ ó
;ööó ò
(
õõ 
new
õõ N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_53a
õõ H
(
õõH I
)
õõI J
)
õõJ K
.
õõK L
RunTest
õõL S
(
õõS T
$strõõT ñ
)õõñ ó
;õõó ò
(
úú 
new
úú N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_54a
úú H
(
úúH I
)
úúI J
)
úúJ K
.
úúK L
RunTest
úúL S
(
úúS T
$strúúT ñ
)úúñ ó
;úúó ò
(
ùù 
new
ùù N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_61a
ùù H
(
ùùH I
)
ùùI J
)
ùùJ K
.
ùùK L
RunTest
ùùL S
(
ùùS T
$strùùT ñ
)ùùñ ó
;ùùó ò
(
ûû 
new
ûû N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_66a
ûû H
(
ûûH I
)
ûûI J
)
ûûJ K
.
ûûK L
RunTest
ûûL S
(
ûûS T
$strûûT ñ
)ûûñ ó
;ûûó ò
(
üü 
new
üü N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_67a
üü H
(
üüH I
)
üüI J
)
üüJ K
.
üüK L
RunTest
üüL S
(
üüS T
$strüüT ñ
)üüñ ó
;üüó ò
(
†† 
new
†† N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_68a
†† H
(
††H I
)
††I J
)
††J K
.
††K L
RunTest
††L S
(
††S T
$str††T ñ
)††ñ ó
;††ó ò
(
°° 
new
°° N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_71a
°° H
(
°°H I
)
°°I J
)
°°J K
.
°°K L
RunTest
°°L S
(
°°S T
$str°°T ñ
)°°ñ ó
;°°ó ò
(
¢¢ 
new
¢¢ N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_72a
¢¢ H
(
¢¢H I
)
¢¢I J
)
¢¢J K
.
¢¢K L
RunTest
¢¢L S
(
¢¢S T
$str¢¢T ñ
)¢¢ñ ó
;¢¢ó ò
(
££ 
new
££ N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_73a
££ H
(
££H I
)
££I J
)
££J K
.
££K L
RunTest
££L S
(
££S T
$str££T ñ
)££ñ ó
;££ó ò
(
§§ 
new
§§ N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_74a
§§ H
(
§§H I
)
§§I J
)
§§J K
.
§§K L
RunTest
§§L S
(
§§S T
$str§§T ñ
)§§ñ ó
;§§ó ò
(
•• 
new
•• N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_75a
•• H
(
••H I
)
••I J
)
••J K
.
••K L
RunTest
••L S
(
••S T
$str••T ñ
)••ñ ó
;••ó ò
(
¶¶ 
new
¶¶ N
@CWE319_Cleartext_Tx_Sensitive_Info__listen_tcp_SqlConnection_81a
¶¶ H
(
¶¶H I
)
¶¶I J
)
¶¶J K
.
¶¶K L
RunTest
¶¶L S
(
¶¶S T
$str¶¶T ñ
)¶¶ñ ó
;¶¶ó ò
(
ßß 
new
ßß L
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_01
ßß F
(
ßßF G
)
ßßG H
)
ßßH I
.
ßßI J
RunTest
ßßJ Q
(
ßßQ R
$strßßR í
)ßßí ì
;ßßì î
(
®® 
new
®® L
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_02
®® F
(
®®F G
)
®®G H
)
®®H I
.
®®I J
RunTest
®®J Q
(
®®Q R
$str®®R í
)®®í ì
;®®ì î
(
©© 
new
©© L
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_03
©© F
(
©©F G
)
©©G H
)
©©H I
.
©©I J
RunTest
©©J Q
(
©©Q R
$str©©R í
)©©í ì
;©©ì î
(
™™ 
new
™™ L
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_04
™™ F
(
™™F G
)
™™G H
)
™™H I
.
™™I J
RunTest
™™J Q
(
™™Q R
$str™™R í
)™™í ì
;™™ì î
(
´´ 
new
´´ L
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_05
´´ F
(
´´F G
)
´´G H
)
´´H I
.
´´I J
RunTest
´´J Q
(
´´Q R
$str´´R í
)´´í ì
;´´ì î
(
¨¨ 
new
¨¨ L
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_06
¨¨ F
(
¨¨F G
)
¨¨G H
)
¨¨H I
.
¨¨I J
RunTest
¨¨J Q
(
¨¨Q R
$str¨¨R í
)¨¨í ì
;¨¨ì î
(
≠≠ 
new
≠≠ L
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_07
≠≠ F
(
≠≠F G
)
≠≠G H
)
≠≠H I
.
≠≠I J
RunTest
≠≠J Q
(
≠≠Q R
$str≠≠R í
)≠≠í ì
;≠≠ì î
(
ÆÆ 
new
ÆÆ L
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_08
ÆÆ F
(
ÆÆF G
)
ÆÆG H
)
ÆÆH I
.
ÆÆI J
RunTest
ÆÆJ Q
(
ÆÆQ R
$strÆÆR í
)ÆÆí ì
;ÆÆì î
(
ØØ 
new
ØØ L
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_09
ØØ F
(
ØØF G
)
ØØG H
)
ØØH I
.
ØØI J
RunTest
ØØJ Q
(
ØØQ R
$strØØR í
)ØØí ì
;ØØì î
(
∞∞ 
new
∞∞ L
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_10
∞∞ F
(
∞∞F G
)
∞∞G H
)
∞∞H I
.
∞∞I J
RunTest
∞∞J Q
(
∞∞Q R
$str∞∞R í
)∞∞í ì
;∞∞ì î
(
±± 
new
±± L
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_11
±± F
(
±±F G
)
±±G H
)
±±H I
.
±±I J
RunTest
±±J Q
(
±±Q R
$str±±R í
)±±í ì
;±±ì î
(
≤≤ 
new
≤≤ L
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_12
≤≤ F
(
≤≤F G
)
≤≤G H
)
≤≤H I
.
≤≤I J
RunTest
≤≤J Q
(
≤≤Q R
$str≤≤R í
)≤≤í ì
;≤≤ì î
(
≥≥ 
new
≥≥ L
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_13
≥≥ F
(
≥≥F G
)
≥≥G H
)
≥≥H I
.
≥≥I J
RunTest
≥≥J Q
(
≥≥Q R
$str≥≥R í
)≥≥í ì
;≥≥ì î
(
¥¥ 
new
¥¥ L
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_14
¥¥ F
(
¥¥F G
)
¥¥G H
)
¥¥H I
.
¥¥I J
RunTest
¥¥J Q
(
¥¥Q R
$str¥¥R í
)¥¥í ì
;¥¥ì î
(
µµ 
new
µµ L
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_15
µµ F
(
µµF G
)
µµG H
)
µµH I
.
µµI J
RunTest
µµJ Q
(
µµQ R
$strµµR í
)µµí ì
;µµì î
(
∂∂ 
new
∂∂ L
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_16
∂∂ F
(
∂∂F G
)
∂∂G H
)
∂∂H I
.
∂∂I J
RunTest
∂∂J Q
(
∂∂Q R
$str∂∂R í
)∂∂í ì
;∂∂ì î
(
∑∑ 
new
∑∑ L
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_17
∑∑ F
(
∑∑F G
)
∑∑G H
)
∑∑H I
.
∑∑I J
RunTest
∑∑J Q
(
∑∑Q R
$str∑∑R í
)∑∑í ì
;∑∑ì î
(
∏∏ 
new
∏∏ L
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_21
∏∏ F
(
∏∏F G
)
∏∏G H
)
∏∏H I
.
∏∏I J
RunTest
∏∏J Q
(
∏∏Q R
$str∏∏R í
)∏∏í ì
;∏∏ì î
(
ππ 
new
ππ M
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_22a
ππ G
(
ππG H
)
ππH I
)
ππI J
.
ππJ K
RunTest
ππK R
(
ππR S
$strππS î
)ππî ï
;ππï ñ
(
∫∫ 
new
∫∫ L
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_31
∫∫ F
(
∫∫F G
)
∫∫G H
)
∫∫H I
.
∫∫I J
RunTest
∫∫J Q
(
∫∫Q R
$str∫∫R í
)∫∫í ì
;∫∫ì î
(
ªª 
new
ªª L
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_41
ªª F
(
ªªF G
)
ªªG H
)
ªªH I
.
ªªI J
RunTest
ªªJ Q
(
ªªQ R
$strªªR í
)ªªí ì
;ªªì î
(
ºº 
new
ºº L
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_42
ºº F
(
ººF G
)
ººG H
)
ººH I
.
ººI J
RunTest
ººJ Q
(
ººQ R
$strººR í
)ººí ì
;ººì î
(
ΩΩ 
new
ΩΩ L
>CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_45
ΩΩ F
(
ΩΩF G
)
ΩΩG H
)
ΩΩH I
.
ΩΩI J
RunTest
ΩΩJ Q
(
ΩΩQ R
$strΩΩR í
)ΩΩí ì
;ΩΩì î
(
ææ 
new
ææ M
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_51a
ææ G
(
ææG H
)
ææH I
)
ææI J
.
ææJ K
RunTest
ææK R
(
ææR S
$strææS î
)ææî ï
;ææï ñ
(
øø 
new
øø M
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_52a
øø G
(
øøG H
)
øøH I
)
øøI J
.
øøJ K
RunTest
øøK R
(
øøR S
$strøøS î
)øøî ï
;øøï ñ
(
¿¿ 
new
¿¿ M
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_53a
¿¿ G
(
¿¿G H
)
¿¿H I
)
¿¿I J
.
¿¿J K
RunTest
¿¿K R
(
¿¿R S
$str¿¿S î
)¿¿î ï
;¿¿ï ñ
(
¡¡ 
new
¡¡ M
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_54a
¡¡ G
(
¡¡G H
)
¡¡H I
)
¡¡I J
.
¡¡J K
RunTest
¡¡K R
(
¡¡R S
$str¡¡S î
)¡¡î ï
;¡¡ï ñ
(
¬¬ 
new
¬¬ M
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_61a
¬¬ G
(
¬¬G H
)
¬¬H I
)
¬¬I J
.
¬¬J K
RunTest
¬¬K R
(
¬¬R S
$str¬¬S î
)¬¬î ï
;¬¬ï ñ
(
√√ 
new
√√ M
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_66a
√√ G
(
√√G H
)
√√H I
)
√√I J
.
√√J K
RunTest
√√K R
(
√√R S
$str√√S î
)√√î ï
;√√ï ñ
(
ƒƒ 
new
ƒƒ M
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_67a
ƒƒ G
(
ƒƒG H
)
ƒƒH I
)
ƒƒI J
.
ƒƒJ K
RunTest
ƒƒK R
(
ƒƒR S
$strƒƒS î
)ƒƒî ï
;ƒƒï ñ
(
≈≈ 
new
≈≈ M
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_68a
≈≈ G
(
≈≈G H
)
≈≈H I
)
≈≈I J
.
≈≈J K
RunTest
≈≈K R
(
≈≈R S
$str≈≈S î
)≈≈î ï
;≈≈ï ñ
(
∆∆ 
new
∆∆ M
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_71a
∆∆ G
(
∆∆G H
)
∆∆H I
)
∆∆I J
.
∆∆J K
RunTest
∆∆K R
(
∆∆R S
$str∆∆S î
)∆∆î ï
;∆∆ï ñ
(
«« 
new
«« M
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_72a
«« G
(
««G H
)
««H I
)
««I J
.
««J K
RunTest
««K R
(
««R S
$str««S î
)««î ï
;««ï ñ
(
»» 
new
»» M
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_73a
»» G
(
»»G H
)
»»H I
)
»»I J
.
»»J K
RunTest
»»K R
(
»»R S
$str»»S î
)»»î ï
;»»ï ñ
(
…… 
new
…… M
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_74a
…… G
(
……G H
)
……H I
)
……I J
.
……J K
RunTest
……K R
(
……R S
$str……S î
)……î ï
;……ï ñ
(
   
new
   M
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_75a
   G
(
  G H
)
  H I
)
  I J
.
  J K
RunTest
  K R
(
  R S
$str  S î
)  î ï
;  ï ñ
(
ÀÀ 
new
ÀÀ M
?CWE319_Cleartext_Tx_Sensitive_Info__NetClient_SqlConnection_81a
ÀÀ G
(
ÀÀG H
)
ÀÀH I
)
ÀÀI J
.
ÀÀJ K
RunTest
ÀÀK R
(
ÀÀR S
$strÀÀS î
)ÀÀî ï
;ÀÀï ñ
(
ÃÃ 
new
ÃÃ 9
+CWE319_Cleartext_Tx_Sensitive_Info__send_01
ÃÃ 3
(
ÃÃ3 4
)
ÃÃ4 5
)
ÃÃ5 6
.
ÃÃ6 7
RunTest
ÃÃ7 >
(
ÃÃ> ?
$str
ÃÃ? l
)
ÃÃl m
;
ÃÃm n
(
ÕÕ 
new
ÕÕ 9
+CWE319_Cleartext_Tx_Sensitive_Info__send_02
ÕÕ 3
(
ÕÕ3 4
)
ÕÕ4 5
)
ÕÕ5 6
.
ÕÕ6 7
RunTest
ÕÕ7 >
(
ÕÕ> ?
$str
ÕÕ? l
)
ÕÕl m
;
ÕÕm n
(
ŒŒ 
new
ŒŒ 9
+CWE319_Cleartext_Tx_Sensitive_Info__send_03
ŒŒ 3
(
ŒŒ3 4
)
ŒŒ4 5
)
ŒŒ5 6
.
ŒŒ6 7
RunTest
ŒŒ7 >
(
ŒŒ> ?
$str
ŒŒ? l
)
ŒŒl m
;
ŒŒm n
(
œœ 
new
œœ 9
+CWE319_Cleartext_Tx_Sensitive_Info__send_04
œœ 3
(
œœ3 4
)
œœ4 5
)
œœ5 6
.
œœ6 7
RunTest
œœ7 >
(
œœ> ?
$str
œœ? l
)
œœl m
;
œœm n
(
–– 
new
–– 9
+CWE319_Cleartext_Tx_Sensitive_Info__send_05
–– 3
(
––3 4
)
––4 5
)
––5 6
.
––6 7
RunTest
––7 >
(
––> ?
$str
––? l
)
––l m
;
––m n
(
—— 
new
—— 9
+CWE319_Cleartext_Tx_Sensitive_Info__send_06
—— 3
(
——3 4
)
——4 5
)
——5 6
.
——6 7
RunTest
——7 >
(
——> ?
$str
——? l
)
——l m
;
——m n
(
““ 
new
““ 9
+CWE319_Cleartext_Tx_Sensitive_Info__send_07
““ 3
(
““3 4
)
““4 5
)
““5 6
.
““6 7
RunTest
““7 >
(
““> ?
$str
““? l
)
““l m
;
““m n
(
”” 
new
”” 9
+CWE319_Cleartext_Tx_Sensitive_Info__send_08
”” 3
(
””3 4
)
””4 5
)
””5 6
.
””6 7
RunTest
””7 >
(
””> ?
$str
””? l
)
””l m
;
””m n
(
‘‘ 
new
‘‘ 9
+CWE319_Cleartext_Tx_Sensitive_Info__send_09
‘‘ 3
(
‘‘3 4
)
‘‘4 5
)
‘‘5 6
.
‘‘6 7
RunTest
‘‘7 >
(
‘‘> ?
$str
‘‘? l
)
‘‘l m
;
‘‘m n
(
’’ 
new
’’ 9
+CWE319_Cleartext_Tx_Sensitive_Info__send_10
’’ 3
(
’’3 4
)
’’4 5
)
’’5 6
.
’’6 7
RunTest
’’7 >
(
’’> ?
$str
’’? l
)
’’l m
;
’’m n
(
÷÷ 
new
÷÷ 9
+CWE319_Cleartext_Tx_Sensitive_Info__send_11
÷÷ 3
(
÷÷3 4
)
÷÷4 5
)
÷÷5 6
.
÷÷6 7
RunTest
÷÷7 >
(
÷÷> ?
$str
÷÷? l
)
÷÷l m
;
÷÷m n
(
◊◊ 
new
◊◊ 9
+CWE319_Cleartext_Tx_Sensitive_Info__send_12
◊◊ 3
(
◊◊3 4
)
◊◊4 5
)
◊◊5 6
.
◊◊6 7
RunTest
◊◊7 >
(
◊◊> ?
$str
◊◊? l
)
◊◊l m
;
◊◊m n
(
ÿÿ 
new
ÿÿ 9
+CWE319_Cleartext_Tx_Sensitive_Info__send_13
ÿÿ 3
(
ÿÿ3 4
)
ÿÿ4 5
)
ÿÿ5 6
.
ÿÿ6 7
RunTest
ÿÿ7 >
(
ÿÿ> ?
$str
ÿÿ? l
)
ÿÿl m
;
ÿÿm n
(
ŸŸ 
new
ŸŸ 9
+CWE319_Cleartext_Tx_Sensitive_Info__send_14
ŸŸ 3
(
ŸŸ3 4
)
ŸŸ4 5
)
ŸŸ5 6
.
ŸŸ6 7
RunTest
ŸŸ7 >
(
ŸŸ> ?
$str
ŸŸ? l
)
ŸŸl m
;
ŸŸm n
(
⁄⁄ 
new
⁄⁄ 9
+CWE319_Cleartext_Tx_Sensitive_Info__send_15
⁄⁄ 3
(
⁄⁄3 4
)
⁄⁄4 5
)
⁄⁄5 6
.
⁄⁄6 7
RunTest
⁄⁄7 >
(
⁄⁄> ?
$str
⁄⁄? l
)
⁄⁄l m
;
⁄⁄m n
(
€€ 
new
€€ 9
+CWE319_Cleartext_Tx_Sensitive_Info__send_16
€€ 3
(
€€3 4
)
€€4 5
)
€€5 6
.
€€6 7
RunTest
€€7 >
(
€€> ?
$str
€€? l
)
€€l m
;
€€m n
(
‹‹ 
new
‹‹ 9
+CWE319_Cleartext_Tx_Sensitive_Info__send_17
‹‹ 3
(
‹‹3 4
)
‹‹4 5
)
‹‹5 6
.
‹‹6 7
RunTest
‹‹7 >
(
‹‹> ?
$str
‹‹? l
)
‹‹l m
;
‹‹m n
(
›› 
new
›› 9
+CWE319_Cleartext_Tx_Sensitive_Info__send_21
›› 3
(
››3 4
)
››4 5
)
››5 6
.
››6 7
RunTest
››7 >
(
››> ?
$str
››? l
)
››l m
;
››m n
(
ﬁﬁ 
new
ﬁﬁ :
,CWE319_Cleartext_Tx_Sensitive_Info__send_22a
ﬁﬁ 4
(
ﬁﬁ4 5
)
ﬁﬁ5 6
)
ﬁﬁ6 7
.
ﬁﬁ7 8
RunTest
ﬁﬁ8 ?
(
ﬁﬁ? @
$str
ﬁﬁ@ n
)
ﬁﬁn o
;
ﬁﬁo p
(
ﬂﬂ 
new
ﬂﬂ 9
+CWE319_Cleartext_Tx_Sensitive_Info__send_31
ﬂﬂ 3
(
ﬂﬂ3 4
)
ﬂﬂ4 5
)
ﬂﬂ5 6
.
ﬂﬂ6 7
RunTest
ﬂﬂ7 >
(
ﬂﬂ> ?
$str
ﬂﬂ? l
)
ﬂﬂl m
;
ﬂﬂm n
(
‡‡ 
new
‡‡ 9
+CWE319_Cleartext_Tx_Sensitive_Info__send_41
‡‡ 3
(
‡‡3 4
)
‡‡4 5
)
‡‡5 6
.
‡‡6 7
RunTest
‡‡7 >
(
‡‡> ?
$str
‡‡? l
)
‡‡l m
;
‡‡m n
(
·· 
new
·· 9
+CWE319_Cleartext_Tx_Sensitive_Info__send_42
·· 3
(
··3 4
)
··4 5
)
··5 6
.
··6 7
RunTest
··7 >
(
··> ?
$str
··? l
)
··l m
;
··m n
(
‚‚ 
new
‚‚ 9
+CWE319_Cleartext_Tx_Sensitive_Info__send_45
‚‚ 3
(
‚‚3 4
)
‚‚4 5
)
‚‚5 6
.
‚‚6 7
RunTest
‚‚7 >
(
‚‚> ?
$str
‚‚? l
)
‚‚l m
;
‚‚m n
(
„„ 
new
„„ :
,CWE319_Cleartext_Tx_Sensitive_Info__send_51a
„„ 4
(
„„4 5
)
„„5 6
)
„„6 7
.
„„7 8
RunTest
„„8 ?
(
„„? @
$str
„„@ n
)
„„n o
;
„„o p
(
‰‰ 
new
‰‰ :
,CWE319_Cleartext_Tx_Sensitive_Info__send_52a
‰‰ 4
(
‰‰4 5
)
‰‰5 6
)
‰‰6 7
.
‰‰7 8
RunTest
‰‰8 ?
(
‰‰? @
$str
‰‰@ n
)
‰‰n o
;
‰‰o p
(
ÂÂ 
new
ÂÂ :
,CWE319_Cleartext_Tx_Sensitive_Info__send_53a
ÂÂ 4
(
ÂÂ4 5
)
ÂÂ5 6
)
ÂÂ6 7
.
ÂÂ7 8
RunTest
ÂÂ8 ?
(
ÂÂ? @
$str
ÂÂ@ n
)
ÂÂn o
;
ÂÂo p
(
ÊÊ 
new
ÊÊ :
,CWE319_Cleartext_Tx_Sensitive_Info__send_54a
ÊÊ 4
(
ÊÊ4 5
)
ÊÊ5 6
)
ÊÊ6 7
.
ÊÊ7 8
RunTest
ÊÊ8 ?
(
ÊÊ? @
$str
ÊÊ@ n
)
ÊÊn o
;
ÊÊo p
(
ÁÁ 
new
ÁÁ :
,CWE319_Cleartext_Tx_Sensitive_Info__send_61a
ÁÁ 4
(
ÁÁ4 5
)
ÁÁ5 6
)
ÁÁ6 7
.
ÁÁ7 8
RunTest
ÁÁ8 ?
(
ÁÁ? @
$str
ÁÁ@ n
)
ÁÁn o
;
ÁÁo p
(
ËË 
new
ËË :
,CWE319_Cleartext_Tx_Sensitive_Info__send_66a
ËË 4
(
ËË4 5
)
ËË5 6
)
ËË6 7
.
ËË7 8
RunTest
ËË8 ?
(
ËË? @
$str
ËË@ n
)
ËËn o
;
ËËo p
(
ÈÈ 
new
ÈÈ :
,CWE319_Cleartext_Tx_Sensitive_Info__send_67a
ÈÈ 4
(
ÈÈ4 5
)
ÈÈ5 6
)
ÈÈ6 7
.
ÈÈ7 8
RunTest
ÈÈ8 ?
(
ÈÈ? @
$str
ÈÈ@ n
)
ÈÈn o
;
ÈÈo p
(
ÍÍ 
new
ÍÍ :
,CWE319_Cleartext_Tx_Sensitive_Info__send_68a
ÍÍ 4
(
ÍÍ4 5
)
ÍÍ5 6
)
ÍÍ6 7
.
ÍÍ7 8
RunTest
ÍÍ8 ?
(
ÍÍ? @
$str
ÍÍ@ n
)
ÍÍn o
;
ÍÍo p
(
ÎÎ 
new
ÎÎ :
,CWE319_Cleartext_Tx_Sensitive_Info__send_71a
ÎÎ 4
(
ÎÎ4 5
)
ÎÎ5 6
)
ÎÎ6 7
.
ÎÎ7 8
RunTest
ÎÎ8 ?
(
ÎÎ? @
$str
ÎÎ@ n
)
ÎÎn o
;
ÎÎo p
(
ÏÏ 
new
ÏÏ :
,CWE319_Cleartext_Tx_Sensitive_Info__send_72a
ÏÏ 4
(
ÏÏ4 5
)
ÏÏ5 6
)
ÏÏ6 7
.
ÏÏ7 8
RunTest
ÏÏ8 ?
(
ÏÏ? @
$str
ÏÏ@ n
)
ÏÏn o
;
ÏÏo p
(
ÌÌ 
new
ÌÌ :
,CWE319_Cleartext_Tx_Sensitive_Info__send_73a
ÌÌ 4
(
ÌÌ4 5
)
ÌÌ5 6
)
ÌÌ6 7
.
ÌÌ7 8
RunTest
ÌÌ8 ?
(
ÌÌ? @
$str
ÌÌ@ n
)
ÌÌn o
;
ÌÌo p
(
ÓÓ 
new
ÓÓ :
,CWE319_Cleartext_Tx_Sensitive_Info__send_74a
ÓÓ 4
(
ÓÓ4 5
)
ÓÓ5 6
)
ÓÓ6 7
.
ÓÓ7 8
RunTest
ÓÓ8 ?
(
ÓÓ? @
$str
ÓÓ@ n
)
ÓÓn o
;
ÓÓo p
(
ÔÔ 
new
ÔÔ :
,CWE319_Cleartext_Tx_Sensitive_Info__send_75a
ÔÔ 4
(
ÔÔ4 5
)
ÔÔ5 6
)
ÔÔ6 7
.
ÔÔ7 8
RunTest
ÔÔ8 ?
(
ÔÔ? @
$str
ÔÔ@ n
)
ÔÔn o
;
ÔÔo p
(
 
new
 :
,CWE319_Cleartext_Tx_Sensitive_Info__send_81a
 4
(
4 5
)
5 6
)
6 7
.
7 8
RunTest
8 ?
(
? @
$str
@ n
)
n o
;
o p
}
ÚÚ 
private
ÙÙ 
static
ÙÙ	 
void
ÙÙ 
RunTestCWE4
ÙÙ  
(
ÙÙ  !
)
ÙÙ! "
{
ÙÙ# $
}
¯¯ 
private
˙˙ 
static
˙˙	 
void
˙˙ 
RunTestCWE5
˙˙  
(
˙˙  !
)
˙˙! "
{
˙˙# $
}
˛˛ 
private
ÄÄ 
static
ÄÄ	 
void
ÄÄ 
RunTestCWE6
ÄÄ  
(
ÄÄ  !
)
ÄÄ! "
{
ÄÄ# $
}
ÑÑ 
private
ÜÜ 
static
ÜÜ	 
void
ÜÜ 
RunTestCWE7
ÜÜ  
(
ÜÜ  !
)
ÜÜ! "
{
ÜÜ# $
}
ää 
private
åå 
static
åå	 
void
åå 
RunTestCWE8
åå  
(
åå  !
)
åå! "
{
åå# $
}
êê 
private
íí 
static
íí	 
void
íí 
RunTestCWE9
íí  
(
íí  !
)
íí! "
{
íí# $
}
ññ 
}óó 
}òò ≈
ôC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE319_Cleartext_Tx_Sensitive_Info\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str =
)= >
]> ?
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str ?
)? @
]@ A
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *