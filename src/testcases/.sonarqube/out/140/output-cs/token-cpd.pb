Á
¸C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE440_Expected_Behavior_Violation\CWE440_Expected_Behavior_Violation__basic_Exception_01.cs
	namespace 	
	testcases
 
. .
"CWE440_Expected_Behavior_Violation 6
{ 
class B
6CWE440_Expected_Behavior_Violation__basic_Exception_01 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
IO 

.
 
	WriteLine 
( 
$str /
)/ 0
;0 1
string 
	userInput 
= 
Console "
." #
ReadLine# +
(+ ,
), -
;- .
string 
x 
= 
string 
. 
Format  
(  !
$str! +
,+ ,
	userInput- 6
)6 7
;7 8
} 
public!! 

override!! 
void!! 
Good!! 
(!! 
)!! 
{"" 
Good1## 
(## 
)## 
;## 
}$$ 
private&& 
void&& 
Good1&& 
(&& 
)&& 
{'' 
IO(( 

.((
 
	WriteLine(( 
((( 
$str(( /
)((/ 0
;((0 1
string)) 
	userInput)) 
=)) 
Console)) "
.))" #
ReadLine))# +
())+ ,
))), -
;))- .
try++ 
{,, 	
int-- 
.-- 
Parse-- 
(-- 
	userInput-- 
)--  
;--  !
string.. 
x.. 
=.. 
string.. 
... 
Format.. $
(..$ %
$str..% /
,../ 0
	userInput..1 :
)..: ;
;..; <
}// 	
catch00 
(00 
FormatException00 
formatException00 .
)00. /
{11 	
IO22 
.22 
Logger22 
.22 
Log22 
(22 
NLog22 
.22 
LogLevel22 '
.22' (
Warn22( ,
,22, -
$str22. F
,22F G
formatException22H W
)22W X
;22X Y
}33 	
}44 
}66 
}77 ï 
¸C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE440_Expected_Behavior_Violation\CWE440_Expected_Behavior_Violation__basic_Exception_02.cs
	namespace 	
	testcases
 
. .
"CWE440_Expected_Behavior_Violation 6
{ 
class B
6CWE440_Expected_Behavior_Violation__basic_Exception_02 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
true 
) 
{ 	
IO 
. 
	WriteLine 
( 
$str 3
)3 4
;4 5
string 
	userInput 
= 
Console &
.& '
ReadLine' /
(/ 0
)0 1
;1 2
string 
x 
= 
string 
. 
Format $
($ %
$str% /
,/ 0
	userInput1 :
): ;
;; <
}   	
}!! 
private%% 
void%% 
Good1%% 
(%% 
)%% 
{&& 
if'' 

('' 
false'' 
)'' 
{(( 	
IO** 
.** 
	WriteLine** 
(** 
$str** /
)**/ 0
;**0 1
}++ 	
else,, 
{-- 	
IO.. 
... 
	WriteLine.. 
(.. 
$str.. 3
)..3 4
;..4 5
string// 
	userInput// 
=// 
Console// &
.//& '
ReadLine//' /
(/// 0
)//0 1
;//1 2
try11 
{22 
int33 
.33 
Parse33 
(33 
	userInput33 #
)33# $
;33$ %
string44 
x44 
=44 
string44 !
.44! "
Format44" (
(44( )
$str44) 3
,443 4
	userInput445 >
)44> ?
;44? @
}55 
catch66 
(66 
FormatException66 "
formatException66# 2
)662 3
{77 
IO88 
.88 
Logger88 
.88 
Log88 
(88 
NLog88 "
.88" #
LogLevel88# +
.88+ ,
Warn88, 0
,880 1
$str882 J
,88J K
formatException88L [
)88[ \
;88\ ]
}99 
}:: 	
};; 
private>> 
void>> 
Good2>> 
(>> 
)>> 
{?? 
if@@ 

(@@ 
true@@ 
)@@ 
{AA 	
IOBB 
.BB 
	WriteLineBB 
(BB 
$strBB 3
)BB3 4
;BB4 5
stringCC 
	userInputCC 
=CC 
ConsoleCC &
.CC& '
ReadLineCC' /
(CC/ 0
)CC0 1
;CC1 2
tryEE 
{FF 
intGG 
.GG 
ParseGG 
(GG 
	userInputGG #
)GG# $
;GG$ %
stringHH 
xHH 
=HH 
stringHH !
.HH! "
FormatHH" (
(HH( )
$strHH) 3
,HH3 4
	userInputHH5 >
)HH> ?
;HH? @
}II 
catchJJ 
(JJ 
FormatExceptionJJ "
formatExceptionJJ# 2
)JJ2 3
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL 
(LL 
NLogLL "
.LL" #
LogLevelLL# +
.LL+ ,
WarnLL, 0
,LL0 1
$strLL2 J
,LLJ K
formatExceptionLLL [
)LL[ \
;LL\ ]
}MM 
}NN 	
}OO 
publicQQ 

overrideQQ 
voidQQ 
GoodQQ 
(QQ 
)QQ 
{RR 
Good1SS 
(SS 
)SS 
;SS 
Good2TT 
(TT 
)TT 
;TT 
}UU 
}WW 
}XX Ô!
¸C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE440_Expected_Behavior_Violation\CWE440_Expected_Behavior_Violation__basic_Exception_03.cs
	namespace 	
	testcases
 
. .
"CWE440_Expected_Behavior_Violation 6
{ 
class B
6CWE440_Expected_Behavior_Violation__basic_Exception_03 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
$num 
== 
$num 
) 
{ 	
IO 
. 
	WriteLine 
( 
$str 3
)3 4
;4 5
string 
	userInput 
= 
Console &
.& '
ReadLine' /
(/ 0
)0 1
;1 2
string 
x 
= 
string 
. 
Format $
($ %
$str% /
,/ 0
	userInput1 :
): ;
;; <
}   	
}!! 
private%% 
void%% 
Good1%% 
(%% 
)%% 
{&& 
if'' 

('' 
$num'' 
!='' 
$num'' 
)'' 
{(( 	
IO** 
.** 
	WriteLine** 
(** 
$str** /
)**/ 0
;**0 1
}++ 	
else,, 
{-- 	
IO.. 
... 
	WriteLine.. 
(.. 
$str.. 3
)..3 4
;..4 5
string// 
	userInput// 
=// 
Console// &
.//& '
ReadLine//' /
(/// 0
)//0 1
;//1 2
try11 
{22 
int33 
.33 
Parse33 
(33 
	userInput33 #
)33# $
;33$ %
string44 
x44 
=44 
string44 !
.44! "
Format44" (
(44( )
$str44) 3
,443 4
	userInput445 >
)44> ?
;44? @
}55 
catch66 
(66 
FormatException66 "
formatException66# 2
)662 3
{77 
IO88 
.88 
Logger88 
.88 
Log88 
(88 
NLog88 "
.88" #
LogLevel88# +
.88+ ,
Warn88, 0
,880 1
$str882 J
,88J K
formatException88L [
)88[ \
;88\ ]
}99 
}:: 	
};; 
private>> 
void>> 
Good2>> 
(>> 
)>> 
{?? 
if@@ 

(@@ 
$num@@ 
==@@ 
$num@@ 
)@@ 
{AA 	
IOBB 
.BB 
	WriteLineBB 
(BB 
$strBB 3
)BB3 4
;BB4 5
stringCC 
	userInputCC 
=CC 
ConsoleCC &
.CC& '
ReadLineCC' /
(CC/ 0
)CC0 1
;CC1 2
tryEE 
{FF 
intGG 
.GG 
ParseGG 
(GG 
	userInputGG #
)GG# $
;GG$ %
stringHH 
xHH 
=HH 
stringHH !
.HH! "
FormatHH" (
(HH( )
$strHH) 3
,HH3 4
	userInputHH5 >
)HH> ?
;HH? @
}II 
catchJJ 
(JJ 
FormatExceptionJJ "
formatExceptionJJ# 2
)JJ2 3
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL 
(LL 
NLogLL "
.LL" #
LogLevelLL# +
.LL+ ,
WarnLL, 0
,LL0 1
$strLL2 J
,LLJ K
formatExceptionLLL [
)LL[ \
;LL\ ]
}MM 
}NN 	
}OO 
publicQQ 

overrideQQ 
voidQQ 
GoodQQ 
(QQ 
)QQ 
{RR 
Good1SS 
(SS 
)SS 
;SS 
Good2TT 
(TT 
)TT 
;TT 
}UU 
}WW 
}XX ¯#
¸C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE440_Expected_Behavior_Violation\CWE440_Expected_Behavior_Violation__basic_Exception_04.cs
	namespace 	
	testcases
 
. .
"CWE440_Expected_Behavior_Violation 6
{ 
class B
6CWE440_Expected_Behavior_Violation__basic_Exception_04 <
:= >
AbstractTestCase? O
{ 
private 
const 
bool 
PRIVATE_CONST_TRUE )
=* +
true, 0
;0 1
private 
const 
bool 
PRIVATE_CONST_FALSE *
=+ ,
false- 2
;2 3
public 

override 
void 
Bad 
( 
) 
{ 
if   

(   
PRIVATE_CONST_TRUE   
)   
{!! 	
IO"" 
."" 
	WriteLine"" 
("" 
$str"" 3
)""3 4
;""4 5
string## 
	userInput## 
=## 
Console## &
.##& '
ReadLine##' /
(##/ 0
)##0 1
;##1 2
string%% 
x%% 
=%% 
string%% 
.%% 
Format%% $
(%%$ %
$str%%% /
,%%/ 0
	userInput%%1 :
)%%: ;
;%%; <
}&& 	
}'' 
private++ 
void++ 
Good1++ 
(++ 
)++ 
{,, 
if-- 

(-- 
PRIVATE_CONST_FALSE-- 
)--  
{.. 	
IO00 
.00 
	WriteLine00 
(00 
$str00 /
)00/ 0
;000 1
}11 	
else22 
{33 	
IO44 
.44 
	WriteLine44 
(44 
$str44 3
)443 4
;444 5
string55 
	userInput55 
=55 
Console55 &
.55& '
ReadLine55' /
(55/ 0
)550 1
;551 2
try77 
{88 
int99 
.99 
Parse99 
(99 
	userInput99 #
)99# $
;99$ %
string:: 
x:: 
=:: 
string:: !
.::! "
Format::" (
(::( )
$str::) 3
,::3 4
	userInput::5 >
)::> ?
;::? @
};; 
catch<< 
(<< 
FormatException<< "
formatException<<# 2
)<<2 3
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
$str>>2 J
,>>J K
formatException>>L [
)>>[ \
;>>\ ]
}?? 
}@@ 	
}AA 
privateDD 
voidDD 
Good2DD 
(DD 
)DD 
{EE 
ifFF 

(FF 
PRIVATE_CONST_TRUEFF 
)FF 
{GG 	
IOHH 
.HH 
	WriteLineHH 
(HH 
$strHH 3
)HH3 4
;HH4 5
stringII 
	userInputII 
=II 
ConsoleII &
.II& '
ReadLineII' /
(II/ 0
)II0 1
;II1 2
tryKK 
{LL 
intMM 
.MM 
ParseMM 
(MM 
	userInputMM #
)MM# $
;MM$ %
stringNN 
xNN 
=NN 
stringNN !
.NN! "
FormatNN" (
(NN( )
$strNN) 3
,NN3 4
	userInputNN5 >
)NN> ?
;NN? @
}OO 
catchPP 
(PP 
FormatExceptionPP "
formatExceptionPP# 2
)PP2 3
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR 
(RR 
NLogRR "
.RR" #
LogLevelRR# +
.RR+ ,
WarnRR, 0
,RR0 1
$strRR2 J
,RRJ K
formatExceptionRRL [
)RR[ \
;RR\ ]
}SS 
}TT 	
}UU 
publicWW 

overrideWW 
voidWW 
GoodWW 
(WW 
)WW 
{XX 
Good1YY 
(YY 
)YY 
;YY 
Good2ZZ 
(ZZ 
)ZZ 
;ZZ 
}[[ 
}]] 
}^^ æ"
¸C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE440_Expected_Behavior_Violation\CWE440_Expected_Behavior_Violation__basic_Exception_05.cs
	namespace 	
	testcases
 
. .
"CWE440_Expected_Behavior_Violation 6
{ 
class B
6CWE440_Expected_Behavior_Violation__basic_Exception_05 <
:= >
AbstractTestCase? O
{ 
private 
bool 
privateTrue 
= 
true #
;# $
private 
bool 
privateFalse 
= 
false  %
;% &
public 

override 
void 
Bad 
( 
) 
{ 
if   

(   
privateTrue   
)   
{!! 	
IO"" 
."" 
	WriteLine"" 
("" 
$str"" 3
)""3 4
;""4 5
string## 
	userInput## 
=## 
Console## &
.##& '
ReadLine##' /
(##/ 0
)##0 1
;##1 2
string%% 
x%% 
=%% 
string%% 
.%% 
Format%% $
(%%$ %
$str%%% /
,%%/ 0
	userInput%%1 :
)%%: ;
;%%; <
}&& 	
}'' 
private++ 
void++ 
Good1++ 
(++ 
)++ 
{,, 
if-- 

(-- 
privateFalse-- 
)-- 
{.. 	
IO00 
.00 
	WriteLine00 
(00 
$str00 /
)00/ 0
;000 1
}11 	
else22 
{33 	
IO44 
.44 
	WriteLine44 
(44 
$str44 3
)443 4
;444 5
string55 
	userInput55 
=55 
Console55 &
.55& '
ReadLine55' /
(55/ 0
)550 1
;551 2
try77 
{88 
int99 
.99 
Parse99 
(99 
	userInput99 #
)99# $
;99$ %
string:: 
x:: 
=:: 
string:: !
.::! "
Format::" (
(::( )
$str::) 3
,::3 4
	userInput::5 >
)::> ?
;::? @
};; 
catch<< 
(<< 
FormatException<< "
formatException<<# 2
)<<2 3
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
$str>>2 J
,>>J K
formatException>>L [
)>>[ \
;>>\ ]
}?? 
}@@ 	
}AA 
privateDD 
voidDD 
Good2DD 
(DD 
)DD 
{EE 
ifFF 

(FF 
privateTrueFF 
)FF 
{GG 	
IOHH 
.HH 
	WriteLineHH 
(HH 
$strHH 3
)HH3 4
;HH4 5
stringII 
	userInputII 
=II 
ConsoleII &
.II& '
ReadLineII' /
(II/ 0
)II0 1
;II1 2
tryKK 
{LL 
intMM 
.MM 
ParseMM 
(MM 
	userInputMM #
)MM# $
;MM$ %
stringNN 
xNN 
=NN 
stringNN !
.NN! "
FormatNN" (
(NN( )
$strNN) 3
,NN3 4
	userInputNN5 >
)NN> ?
;NN? @
}OO 
catchPP 
(PP 
FormatExceptionPP "
formatExceptionPP# 2
)PP2 3
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR 
(RR 
NLogRR "
.RR" #
LogLevelRR# +
.RR+ ,
WarnRR, 0
,RR0 1
$strRR2 J
,RRJ K
formatExceptionRRL [
)RR[ \
;RR\ ]
}SS 
}TT 	
}UU 
publicWW 

overrideWW 
voidWW 
GoodWW 
(WW 
)WW 
{XX 
Good1YY 
(YY 
)YY 
;YY 
Good2ZZ 
(ZZ 
)ZZ 
;ZZ 
}[[ 
}]] 
}^^ #
¸C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE440_Expected_Behavior_Violation\CWE440_Expected_Behavior_Violation__basic_Exception_06.cs
	namespace 	
	testcases
 
. .
"CWE440_Expected_Behavior_Violation 6
{ 
class B
6CWE440_Expected_Behavior_Violation__basic_Exception_06 <
:= >
AbstractTestCase? O
{ 
private 
const 
int 
PRIVATE_CONST_FIVE (
=) *
$num+ ,
;, -
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
PRIVATE_CONST_FIVE 
== !
$num" #
)# $
{   	
IO!! 
.!! 
	WriteLine!! 
(!! 
$str!! 3
)!!3 4
;!!4 5
string"" 
	userInput"" 
="" 
Console"" &
.""& '
ReadLine""' /
(""/ 0
)""0 1
;""1 2
string$$ 
x$$ 
=$$ 
string$$ 
.$$ 
Format$$ $
($$$ %
$str$$% /
,$$/ 0
	userInput$$1 :
)$$: ;
;$$; <
}%% 	
}&& 
private** 
void** 
Good1** 
(** 
)** 
{++ 
if,, 

(,, 
PRIVATE_CONST_FIVE,, 
!=,, !
$num,," #
),,# $
{-- 	
IO// 
.// 
	WriteLine// 
(// 
$str// /
)/// 0
;//0 1
}00 	
else11 
{22 	
IO33 
.33 
	WriteLine33 
(33 
$str33 3
)333 4
;334 5
string44 
	userInput44 
=44 
Console44 &
.44& '
ReadLine44' /
(44/ 0
)440 1
;441 2
try66 
{77 
int88 
.88 
Parse88 
(88 
	userInput88 #
)88# $
;88$ %
string99 
x99 
=99 
string99 !
.99! "
Format99" (
(99( )
$str99) 3
,993 4
	userInput995 >
)99> ?
;99? @
}:: 
catch;; 
(;; 
FormatException;; "
formatException;;# 2
);;2 3
{<< 
IO== 
.== 
Logger== 
.== 
Log== 
(== 
NLog== "
.==" #
LogLevel==# +
.==+ ,
Warn==, 0
,==0 1
$str==2 J
,==J K
formatException==L [
)==[ \
;==\ ]
}>> 
}?? 	
}@@ 
privateCC 
voidCC 
Good2CC 
(CC 
)CC 
{DD 
ifEE 

(EE 
PRIVATE_CONST_FIVEEE 
==EE !
$numEE" #
)EE# $
{FF 	
IOGG 
.GG 
	WriteLineGG 
(GG 
$strGG 3
)GG3 4
;GG4 5
stringHH 
	userInputHH 
=HH 
ConsoleHH &
.HH& '
ReadLineHH' /
(HH/ 0
)HH0 1
;HH1 2
tryJJ 
{KK 
intLL 
.LL 
ParseLL 
(LL 
	userInputLL #
)LL# $
;LL$ %
stringMM 
xMM 
=MM 
stringMM !
.MM! "
FormatMM" (
(MM( )
$strMM) 3
,MM3 4
	userInputMM5 >
)MM> ?
;MM? @
}NN 
catchOO 
(OO 
FormatExceptionOO "
formatExceptionOO# 2
)OO2 3
{PP 
IOQQ 
.QQ 
LoggerQQ 
.QQ 
LogQQ 
(QQ 
NLogQQ "
.QQ" #
LogLevelQQ# +
.QQ+ ,
WarnQQ, 0
,QQ0 1
$strQQ2 J
,QQJ K
formatExceptionQQL [
)QQ[ \
;QQ\ ]
}RR 
}SS 	
}TT 
publicVV 

overrideVV 
voidVV 
GoodVV 
(VV 
)VV 
{WW 
Good1XX 
(XX 
)XX 
;XX 
Good2YY 
(YY 
)YY 
;YY 
}ZZ 
}\\ 
}]] Ø"
¸C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE440_Expected_Behavior_Violation\CWE440_Expected_Behavior_Violation__basic_Exception_07.cs
	namespace 	
	testcases
 
. .
"CWE440_Expected_Behavior_Violation 6
{ 
class B
6CWE440_Expected_Behavior_Violation__basic_Exception_07 <
:= >
AbstractTestCase? O
{ 
private 
int 
privateFive 
= 
$num 
;  
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
privateFive 
== 
$num 
) 
{   	
IO!! 
.!! 
	WriteLine!! 
(!! 
$str!! 3
)!!3 4
;!!4 5
string"" 
	userInput"" 
="" 
Console"" &
.""& '
ReadLine""' /
(""/ 0
)""0 1
;""1 2
string$$ 
x$$ 
=$$ 
string$$ 
.$$ 
Format$$ $
($$$ %
$str$$% /
,$$/ 0
	userInput$$1 :
)$$: ;
;$$; <
}%% 	
}&& 
private** 
void** 
Good1** 
(** 
)** 
{++ 
if,, 

(,, 
privateFive,, 
!=,, 
$num,, 
),, 
{-- 	
IO// 
.// 
	WriteLine// 
(// 
$str// /
)/// 0
;//0 1
}00 	
else11 
{22 	
IO33 
.33 
	WriteLine33 
(33 
$str33 3
)333 4
;334 5
string44 
	userInput44 
=44 
Console44 &
.44& '
ReadLine44' /
(44/ 0
)440 1
;441 2
try66 
{77 
int88 
.88 
Parse88 
(88 
	userInput88 #
)88# $
;88$ %
string99 
x99 
=99 
string99 !
.99! "
Format99" (
(99( )
$str99) 3
,993 4
	userInput995 >
)99> ?
;99? @
}:: 
catch;; 
(;; 
FormatException;; "
formatException;;# 2
);;2 3
{<< 
IO== 
.== 
Logger== 
.== 
Log== 
(== 
NLog== "
.==" #
LogLevel==# +
.==+ ,
Warn==, 0
,==0 1
$str==2 J
,==J K
formatException==L [
)==[ \
;==\ ]
}>> 
}?? 	
}@@ 
privateCC 
voidCC 
Good2CC 
(CC 
)CC 
{DD 
ifEE 

(EE 
privateFiveEE 
==EE 
$numEE 
)EE 
{FF 	
IOGG 
.GG 
	WriteLineGG 
(GG 
$strGG 3
)GG3 4
;GG4 5
stringHH 
	userInputHH 
=HH 
ConsoleHH &
.HH& '
ReadLineHH' /
(HH/ 0
)HH0 1
;HH1 2
tryJJ 
{KK 
intLL 
.LL 
ParseLL 
(LL 
	userInputLL #
)LL# $
;LL$ %
stringMM 
xMM 
=MM 
stringMM !
.MM! "
FormatMM" (
(MM( )
$strMM) 3
,MM3 4
	userInputMM5 >
)MM> ?
;MM? @
}NN 
catchOO 
(OO 
FormatExceptionOO "
formatExceptionOO# 2
)OO2 3
{PP 
IOQQ 
.QQ 
LoggerQQ 
.QQ 
LogQQ 
(QQ 
NLogQQ "
.QQ" #
LogLevelQQ# +
.QQ+ ,
WarnQQ, 0
,QQ0 1
$strQQ2 J
,QQJ K
formatExceptionQQL [
)QQ[ \
;QQ\ ]
}RR 
}SS 	
}TT 
publicVV 

overrideVV 
voidVV 
GoodVV 
(VV 
)VV 
{WW 
Good1XX 
(XX 
)XX 
;XX 
Good2YY 
(YY 
)YY 
;YY 
}ZZ 
}\\ 
}]] %
¸C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE440_Expected_Behavior_Violation\CWE440_Expected_Behavior_Violation__basic_Exception_08.cs
	namespace 	
	testcases
 
. .
"CWE440_Expected_Behavior_Violation 6
{ 
class B
6CWE440_Expected_Behavior_Violation__basic_Exception_08 <
:= >
AbstractTestCase? O
{ 
private 
static 
bool 
PrivateReturnsTrue *
(* +
)+ ,
{ 
return 
true 
; 
} 
private   
static   
bool   
PrivateReturnsFalse   +
(  + ,
)  , -
{!! 
return"" 
false"" 
;"" 
}## 
public%% 

override%% 
void%% 
Bad%% 
(%% 
)%% 
{&& 
if'' 

('' 
PrivateReturnsTrue'' 
('' 
)''  
)''  !
{(( 	
IO)) 
.)) 
	WriteLine)) 
()) 
$str)) 3
)))3 4
;))4 5
string** 
	userInput** 
=** 
Console** &
.**& '
ReadLine**' /
(**/ 0
)**0 1
;**1 2
string,, 
x,, 
=,, 
string,, 
.,, 
Format,, $
(,,$ %
$str,,% /
,,,/ 0
	userInput,,1 :
),,: ;
;,,; <
}-- 	
}.. 
private22 
void22 
Good122 
(22 
)22 
{33 
if44 

(44 
PrivateReturnsFalse44 
(44  
)44  !
)44! "
{55 	
IO77 
.77 
	WriteLine77 
(77 
$str77 /
)77/ 0
;770 1
}88 	
else99 
{:: 	
IO;; 
.;; 
	WriteLine;; 
(;; 
$str;; 3
);;3 4
;;;4 5
string<< 
	userInput<< 
=<< 
Console<< &
.<<& '
ReadLine<<' /
(<</ 0
)<<0 1
;<<1 2
try>> 
{?? 
int@@ 
.@@ 
Parse@@ 
(@@ 
	userInput@@ #
)@@# $
;@@$ %
stringAA 
xAA 
=AA 
stringAA !
.AA! "
FormatAA" (
(AA( )
$strAA) 3
,AA3 4
	userInputAA5 >
)AA> ?
;AA? @
}BB 
catchCC 
(CC 
FormatExceptionCC "
formatExceptionCC# 2
)CC2 3
{DD 
IOEE 
.EE 
LoggerEE 
.EE 
LogEE 
(EE 
NLogEE "
.EE" #
LogLevelEE# +
.EE+ ,
WarnEE, 0
,EE0 1
$strEE2 J
,EEJ K
formatExceptionEEL [
)EE[ \
;EE\ ]
}FF 
}GG 	
}HH 
privateKK 
voidKK 
Good2KK 
(KK 
)KK 
{LL 
ifMM 

(MM 
PrivateReturnsTrueMM 
(MM 
)MM  
)MM  !
{NN 	
IOOO 
.OO 
	WriteLineOO 
(OO 
$strOO 3
)OO3 4
;OO4 5
stringPP 
	userInputPP 
=PP 
ConsolePP &
.PP& '
ReadLinePP' /
(PP/ 0
)PP0 1
;PP1 2
tryRR 
{SS 
intTT 
.TT 
ParseTT 
(TT 
	userInputTT #
)TT# $
;TT$ %
stringUU 
xUU 
=UU 
stringUU !
.UU! "
FormatUU" (
(UU( )
$strUU) 3
,UU3 4
	userInputUU5 >
)UU> ?
;UU? @
}VV 
catchWW 
(WW 
FormatExceptionWW "
formatExceptionWW# 2
)WW2 3
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY 
(YY 
NLogYY "
.YY" #
LogLevelYY# +
.YY+ ,
WarnYY, 0
,YY0 1
$strYY2 J
,YYJ K
formatExceptionYYL [
)YY[ \
;YY\ ]
}ZZ 
}[[ 	
}\\ 
public^^ 

override^^ 
void^^ 
Good^^ 
(^^ 
)^^ 
{__ 
Good1`` 
(`` 
)`` 
;`` 
Good2aa 
(aa 
)aa 
;aa 
}bb 
}dd 
}ee ü!
¸C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE440_Expected_Behavior_Violation\CWE440_Expected_Behavior_Violation__basic_Exception_09.cs
	namespace 	
	testcases
 
. .
"CWE440_Expected_Behavior_Violation 6
{ 
class B
6CWE440_Expected_Behavior_Violation__basic_Exception_09 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
IO 
.  
STATIC_READONLY_TRUE #
)# $
{ 	
IO 
. 
	WriteLine 
( 
$str 3
)3 4
;4 5
string 
	userInput 
= 
Console &
.& '
ReadLine' /
(/ 0
)0 1
;1 2
string 
x 
= 
string 
. 
Format $
($ %
$str% /
,/ 0
	userInput1 :
): ;
;; <
}   	
}!! 
private%% 
void%% 
Good1%% 
(%% 
)%% 
{&& 
if'' 

('' 
IO'' 
.'' !
STATIC_READONLY_FALSE'' $
)''$ %
{(( 	
IO** 
.** 
	WriteLine** 
(** 
$str** /
)**/ 0
;**0 1
}++ 	
else,, 
{-- 	
IO.. 
... 
	WriteLine.. 
(.. 
$str.. 3
)..3 4
;..4 5
string// 
	userInput// 
=// 
Console// &
.//& '
ReadLine//' /
(/// 0
)//0 1
;//1 2
try11 
{22 
int33 
.33 
Parse33 
(33 
	userInput33 #
)33# $
;33$ %
string44 
x44 
=44 
string44 !
.44! "
Format44" (
(44( )
$str44) 3
,443 4
	userInput445 >
)44> ?
;44? @
}55 
catch66 
(66 
FormatException66 "
formatException66# 2
)662 3
{77 
IO88 
.88 
Logger88 
.88 
Log88 
(88 
NLog88 "
.88" #
LogLevel88# +
.88+ ,
Warn88, 0
,880 1
$str882 J
,88J K
formatException88L [
)88[ \
;88\ ]
}99 
}:: 	
};; 
private>> 
void>> 
Good2>> 
(>> 
)>> 
{?? 
if@@ 

(@@ 
IO@@ 
.@@  
STATIC_READONLY_TRUE@@ #
)@@# $
{AA 	
IOBB 
.BB 
	WriteLineBB 
(BB 
$strBB 3
)BB3 4
;BB4 5
stringCC 
	userInputCC 
=CC 
ConsoleCC &
.CC& '
ReadLineCC' /
(CC/ 0
)CC0 1
;CC1 2
tryEE 
{FF 
intGG 
.GG 
ParseGG 
(GG 
	userInputGG #
)GG# $
;GG$ %
stringHH 
xHH 
=HH 
stringHH !
.HH! "
FormatHH" (
(HH( )
$strHH) 3
,HH3 4
	userInputHH5 >
)HH> ?
;HH? @
}II 
catchJJ 
(JJ 
FormatExceptionJJ "
formatExceptionJJ# 2
)JJ2 3
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL 
(LL 
NLogLL "
.LL" #
LogLevelLL# +
.LL+ ,
WarnLL, 0
,LL0 1
$strLL2 J
,LLJ K
formatExceptionLLL [
)LL[ \
;LL\ ]
}MM 
}NN 	
}OO 
publicQQ 

overrideQQ 
voidQQ 
GoodQQ 
(QQ 
)QQ 
{RR 
Good1SS 
(SS 
)SS 
;SS 
Good2TT 
(TT 
)TT 
;TT 
}UU 
}WW 
}XX Þ!
¸C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE440_Expected_Behavior_Violation\CWE440_Expected_Behavior_Violation__basic_Exception_10.cs
	namespace 	
	testcases
 
. .
"CWE440_Expected_Behavior_Violation 6
{ 
class B
6CWE440_Expected_Behavior_Violation__basic_Exception_10 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
IO 
. 

staticTrue 
) 
{ 	
IO 
. 
	WriteLine 
( 
$str 3
)3 4
;4 5
string 
	userInput 
= 
Console &
.& '
ReadLine' /
(/ 0
)0 1
;1 2
string 
x 
= 
string 
. 
Format $
($ %
$str% /
,/ 0
	userInput1 :
): ;
;; <
}   	
}!! 
private%% 
void%% 
Good1%% 
(%% 
)%% 
{&& 
if'' 

('' 
IO'' 
.'' 
staticFalse'' 
)'' 
{(( 	
IO** 
.** 
	WriteLine** 
(** 
$str** /
)**/ 0
;**0 1
}++ 	
else,, 
{-- 	
IO.. 
... 
	WriteLine.. 
(.. 
$str.. 3
)..3 4
;..4 5
string// 
	userInput// 
=// 
Console// &
.//& '
ReadLine//' /
(/// 0
)//0 1
;//1 2
try11 
{22 
int33 
.33 
Parse33 
(33 
	userInput33 #
)33# $
;33$ %
string44 
x44 
=44 
string44 !
.44! "
Format44" (
(44( )
$str44) 3
,443 4
	userInput445 >
)44> ?
;44? @
}55 
catch66 
(66 
FormatException66 "
formatException66# 2
)662 3
{77 
IO88 
.88 
Logger88 
.88 
Log88 
(88 
NLog88 "
.88" #
LogLevel88# +
.88+ ,
Warn88, 0
,880 1
$str882 J
,88J K
formatException88L [
)88[ \
;88\ ]
}99 
}:: 	
};; 
private>> 
void>> 
Good2>> 
(>> 
)>> 
{?? 
if@@ 

(@@ 
IO@@ 
.@@ 

staticTrue@@ 
)@@ 
{AA 	
IOBB 
.BB 
	WriteLineBB 
(BB 
$strBB 3
)BB3 4
;BB4 5
stringCC 
	userInputCC 
=CC 
ConsoleCC &
.CC& '
ReadLineCC' /
(CC/ 0
)CC0 1
;CC1 2
tryEE 
{FF 
intGG 
.GG 
ParseGG 
(GG 
	userInputGG #
)GG# $
;GG$ %
stringHH 
xHH 
=HH 
stringHH !
.HH! "
FormatHH" (
(HH( )
$strHH) 3
,HH3 4
	userInputHH5 >
)HH> ?
;HH? @
}II 
catchJJ 
(JJ 
FormatExceptionJJ "
formatExceptionJJ# 2
)JJ2 3
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL 
(LL 
NLogLL "
.LL" #
LogLevelLL# +
.LL+ ,
WarnLL, 0
,LL0 1
$strLL2 J
,LLJ K
formatExceptionLLL [
)LL[ \
;LL\ ]
}MM 
}NN 	
}OO 
publicQQ 

overrideQQ 
voidQQ 
GoodQQ 
(QQ 
)QQ 
{RR 
Good1SS 
(SS 
)SS 
;SS 
Good2TT 
(TT 
)TT 
;TT 
}UU 
}WW 
}XX Í"
¸C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE440_Expected_Behavior_Violation\CWE440_Expected_Behavior_Violation__basic_Exception_11.cs
	namespace 	
	testcases
 
. .
"CWE440_Expected_Behavior_Violation 6
{ 
class B
6CWE440_Expected_Behavior_Violation__basic_Exception_11 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
IO 
. 
StaticReturnsTrue  
(  !
)! "
)" #
{ 	
IO 
. 
	WriteLine 
( 
$str 3
)3 4
;4 5
string 
	userInput 
= 
Console &
.& '
ReadLine' /
(/ 0
)0 1
;1 2
string 
x 
= 
string 
. 
Format $
($ %
$str% /
,/ 0
	userInput1 :
): ;
;; <
}   	
}!! 
private%% 
void%% 
Good1%% 
(%% 
)%% 
{&& 
if'' 

('' 
IO'' 
.'' 
StaticReturnsFalse'' !
(''! "
)''" #
)''# $
{(( 	
IO** 
.** 
	WriteLine** 
(** 
$str** /
)**/ 0
;**0 1
}++ 	
else,, 
{-- 	
IO.. 
... 
	WriteLine.. 
(.. 
$str.. 3
)..3 4
;..4 5
string// 
	userInput// 
=// 
Console// &
.//& '
ReadLine//' /
(/// 0
)//0 1
;//1 2
try11 
{22 
int33 
.33 
Parse33 
(33 
	userInput33 #
)33# $
;33$ %
string44 
x44 
=44 
string44 !
.44! "
Format44" (
(44( )
$str44) 3
,443 4
	userInput445 >
)44> ?
;44? @
}55 
catch66 
(66 
FormatException66 "
formatException66# 2
)662 3
{77 
IO88 
.88 
Logger88 
.88 
Log88 
(88 
NLog88 "
.88" #
LogLevel88# +
.88+ ,
Warn88, 0
,880 1
$str882 J
,88J K
formatException88L [
)88[ \
;88\ ]
}99 
}:: 	
};; 
private>> 
void>> 
Good2>> 
(>> 
)>> 
{?? 
if@@ 

(@@ 
IO@@ 
.@@ 
StaticReturnsTrue@@  
(@@  !
)@@! "
)@@" #
{AA 	
IOBB 
.BB 
	WriteLineBB 
(BB 
$strBB 3
)BB3 4
;BB4 5
stringCC 
	userInputCC 
=CC 
ConsoleCC &
.CC& '
ReadLineCC' /
(CC/ 0
)CC0 1
;CC1 2
tryEE 
{FF 
intGG 
.GG 
ParseGG 
(GG 
	userInputGG #
)GG# $
;GG$ %
stringHH 
xHH 
=HH 
stringHH !
.HH! "
FormatHH" (
(HH( )
$strHH) 3
,HH3 4
	userInputHH5 >
)HH> ?
;HH? @
}II 
catchJJ 
(JJ 
FormatExceptionJJ "
formatExceptionJJ# 2
)JJ2 3
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL 
(LL 
NLogLL "
.LL" #
LogLevelLL# +
.LL+ ,
WarnLL, 0
,LL0 1
$strLL2 J
,LLJ K
formatExceptionLLL [
)LL[ \
;LL\ ]
}MM 
}NN 	
}OO 
publicQQ 

overrideQQ 
voidQQ 
GoodQQ 
(QQ 
)QQ 
{RR 
Good1SS 
(SS 
)SS 
;SS 
Good2TT 
(TT 
)TT 
;TT 
}UU 
}WW 
}XX ï'
¸C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE440_Expected_Behavior_Violation\CWE440_Expected_Behavior_Violation__basic_Exception_12.cs
	namespace 	
	testcases
 
. .
"CWE440_Expected_Behavior_Violation 6
{ 
class B
6CWE440_Expected_Behavior_Violation__basic_Exception_12 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
IO 
. $
StaticReturnsTrueOrFalse '
(' (
)( )
)) *
{ 	
IO 
. 
	WriteLine 
( 
$str 3
)3 4
;4 5
string 
	userInput 
= 
Console &
.& '
ReadLine' /
(/ 0
)0 1
;1 2
string 
x 
= 
string 
. 
Format $
($ %
$str% /
,/ 0
	userInput1 :
): ;
;; <
}   	
else!! 
{"" 	
IO## 
.## 
	WriteLine## 
(## 
$str## 3
)##3 4
;##4 5
string$$ 
	userInput$$ 
=$$ 
Console$$ &
.$$& '
ReadLine$$' /
($$/ 0
)$$0 1
;$$1 2
try&& 
{'' 
int(( 
.(( 
Parse(( 
((( 
	userInput(( #
)((# $
;(($ %
string)) 
x)) 
=)) 
string)) !
.))! "
Format))" (
())( )
$str))) 3
,))3 4
	userInput))5 >
)))> ?
;))? @
}** 
catch++ 
(++ 
FormatException++ "
formatException++# 2
)++2 3
{,, 
IO-- 
.-- 
Logger-- 
.-- 
Log-- 
(-- 
NLog-- "
.--" #
LogLevel--# +
.--+ ,
Warn--, 0
,--0 1
$str--2 J
,--J K
formatException--L [
)--[ \
;--\ ]
}.. 
}// 	
}00 
private44 
void44 
Good144 
(44 
)44 
{55 
if66 

(66 
IO66 
.66 $
StaticReturnsTrueOrFalse66 '
(66' (
)66( )
)66) *
{77 	
IO88 
.88 
	WriteLine88 
(88 
$str88 3
)883 4
;884 5
string99 
	userInput99 
=99 
Console99 &
.99& '
ReadLine99' /
(99/ 0
)990 1
;991 2
try;; 
{<< 
int== 
.== 
Parse== 
(== 
	userInput== #
)==# $
;==$ %
string>> 
x>> 
=>> 
string>> !
.>>! "
Format>>" (
(>>( )
$str>>) 3
,>>3 4
	userInput>>5 >
)>>> ?
;>>? @
}?? 
catch@@ 
(@@ 
FormatException@@ "
formatException@@# 2
)@@2 3
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
$strBB2 J
,BBJ K
formatExceptionBBL [
)BB[ \
;BB\ ]
}CC 
}DD 	
elseEE 
{FF 	
IOGG 
.GG 
	WriteLineGG 
(GG 
$strGG 3
)GG3 4
;GG4 5
stringHH 
	userInputHH 
=HH 
ConsoleHH &
.HH& '
ReadLineHH' /
(HH/ 0
)HH0 1
;HH1 2
tryJJ 
{KK 
intLL 
.LL 
ParseLL 
(LL 
	userInputLL #
)LL# $
;LL$ %
stringMM 
xMM 
=MM 
stringMM !
.MM! "
FormatMM" (
(MM( )
$strMM) 3
,MM3 4
	userInputMM5 >
)MM> ?
;MM? @
}NN 
catchOO 
(OO 
FormatExceptionOO "
formatExceptionOO# 2
)OO2 3
{PP 
IOQQ 
.QQ 
LoggerQQ 
.QQ 
LogQQ 
(QQ 
NLogQQ "
.QQ" #
LogLevelQQ# +
.QQ+ ,
WarnQQ, 0
,QQ0 1
$strQQ2 J
,QQJ K
formatExceptionQQL [
)QQ[ \
;QQ\ ]
}RR 
}SS 	
}TT 
publicVV 

overrideVV 
voidVV 
GoodVV 
(VV 
)VV 
{WW 
Good1XX 
(XX 
)XX 
;XX 
}YY 
}[[ 
}\\ á"
¸C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE440_Expected_Behavior_Violation\CWE440_Expected_Behavior_Violation__basic_Exception_13.cs
	namespace 	
	testcases
 
. .
"CWE440_Expected_Behavior_Violation 6
{ 
class B
6CWE440_Expected_Behavior_Violation__basic_Exception_13 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
IO 
.  
STATIC_READONLY_FIVE #
==$ &
$num' (
)( )
{ 	
IO 
. 
	WriteLine 
( 
$str 3
)3 4
;4 5
string 
	userInput 
= 
Console &
.& '
ReadLine' /
(/ 0
)0 1
;1 2
string 
x 
= 
string 
. 
Format $
($ %
$str% /
,/ 0
	userInput1 :
): ;
;; <
}   	
}!! 
private%% 
void%% 
Good1%% 
(%% 
)%% 
{&& 
if'' 

('' 
IO'' 
.''  
STATIC_READONLY_FIVE'' #
!=''$ &
$num''' (
)''( )
{(( 	
IO** 
.** 
	WriteLine** 
(** 
$str** /
)**/ 0
;**0 1
}++ 	
else,, 
{-- 	
IO.. 
... 
	WriteLine.. 
(.. 
$str.. 3
)..3 4
;..4 5
string// 
	userInput// 
=// 
Console// &
.//& '
ReadLine//' /
(/// 0
)//0 1
;//1 2
try11 
{22 
int33 
.33 
Parse33 
(33 
	userInput33 #
)33# $
;33$ %
string44 
x44 
=44 
string44 !
.44! "
Format44" (
(44( )
$str44) 3
,443 4
	userInput445 >
)44> ?
;44? @
}55 
catch66 
(66 
FormatException66 "
formatException66# 2
)662 3
{77 
IO88 
.88 
Logger88 
.88 
Log88 
(88 
NLog88 "
.88" #
LogLevel88# +
.88+ ,
Warn88, 0
,880 1
$str882 J
,88J K
formatException88L [
)88[ \
;88\ ]
}99 
}:: 	
};; 
private>> 
void>> 
Good2>> 
(>> 
)>> 
{?? 
if@@ 

(@@ 
IO@@ 
.@@  
STATIC_READONLY_FIVE@@ #
==@@$ &
$num@@' (
)@@( )
{AA 	
IOBB 
.BB 
	WriteLineBB 
(BB 
$strBB 3
)BB3 4
;BB4 5
stringCC 
	userInputCC 
=CC 
ConsoleCC &
.CC& '
ReadLineCC' /
(CC/ 0
)CC0 1
;CC1 2
tryEE 
{FF 
intGG 
.GG 
ParseGG 
(GG 
	userInputGG #
)GG# $
;GG$ %
stringHH 
xHH 
=HH 
stringHH !
.HH! "
FormatHH" (
(HH( )
$strHH) 3
,HH3 4
	userInputHH5 >
)HH> ?
;HH? @
}II 
catchJJ 
(JJ 
FormatExceptionJJ "
formatExceptionJJ# 2
)JJ2 3
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL 
(LL 
NLogLL "
.LL" #
LogLevelLL# +
.LL+ ,
WarnLL, 0
,LL0 1
$strLL2 J
,LLJ K
formatExceptionLLL [
)LL[ \
;LL\ ]
}MM 
}NN 	
}OO 
publicQQ 

overrideQQ 
voidQQ 
GoodQQ 
(QQ 
)QQ 
{RR 
Good1SS 
(SS 
)SS 
;SS 
Good2TT 
(TT 
)TT 
;TT 
}UU 
}WW 
}XX Ã"
¸C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE440_Expected_Behavior_Violation\CWE440_Expected_Behavior_Violation__basic_Exception_14.cs
	namespace 	
	testcases
 
. .
"CWE440_Expected_Behavior_Violation 6
{ 
class B
6CWE440_Expected_Behavior_Violation__basic_Exception_14 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
IO 
. 

staticFive 
== 
$num 
) 
{ 	
IO 
. 
	WriteLine 
( 
$str 3
)3 4
;4 5
string 
	userInput 
= 
Console &
.& '
ReadLine' /
(/ 0
)0 1
;1 2
string 
x 
= 
string 
. 
Format $
($ %
$str% /
,/ 0
	userInput1 :
): ;
;; <
}   	
}!! 
private%% 
void%% 
Good1%% 
(%% 
)%% 
{&& 
if'' 

('' 
IO'' 
.'' 

staticFive'' 
!='' 
$num'' 
)'' 
{(( 	
IO** 
.** 
	WriteLine** 
(** 
$str** /
)**/ 0
;**0 1
}++ 	
else,, 
{-- 	
IO.. 
... 
	WriteLine.. 
(.. 
$str.. 3
)..3 4
;..4 5
string// 
	userInput// 
=// 
Console// &
.//& '
ReadLine//' /
(/// 0
)//0 1
;//1 2
try11 
{22 
int33 
.33 
Parse33 
(33 
	userInput33 #
)33# $
;33$ %
string44 
x44 
=44 
string44 !
.44! "
Format44" (
(44( )
$str44) 3
,443 4
	userInput445 >
)44> ?
;44? @
}55 
catch66 
(66 
FormatException66 "
formatException66# 2
)662 3
{77 
IO88 
.88 
Logger88 
.88 
Log88 
(88 
NLog88 "
.88" #
LogLevel88# +
.88+ ,
Warn88, 0
,880 1
$str882 J
,88J K
formatException88L [
)88[ \
;88\ ]
}99 
}:: 	
};; 
private>> 
void>> 
Good2>> 
(>> 
)>> 
{?? 
if@@ 

(@@ 
IO@@ 
.@@ 

staticFive@@ 
==@@ 
$num@@ 
)@@ 
{AA 	
IOBB 
.BB 
	WriteLineBB 
(BB 
$strBB 3
)BB3 4
;BB4 5
stringCC 
	userInputCC 
=CC 
ConsoleCC &
.CC& '
ReadLineCC' /
(CC/ 0
)CC0 1
;CC1 2
tryEE 
{FF 
intGG 
.GG 
ParseGG 
(GG 
	userInputGG #
)GG# $
;GG$ %
stringHH 
xHH 
=HH 
stringHH !
.HH! "
FormatHH" (
(HH( )
$strHH) 3
,HH3 4
	userInputHH5 >
)HH> ?
;HH? @
}II 
catchJJ 
(JJ 
FormatExceptionJJ "
formatExceptionJJ# 2
)JJ2 3
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL 
(LL 
NLogLL "
.LL" #
LogLevelLL# +
.LL+ ,
WarnLL, 0
,LL0 1
$strLL2 J
,LLJ K
formatExceptionLLL [
)LL[ \
;LL\ ]
}MM 
}NN 	
}OO 
publicQQ 

overrideQQ 
voidQQ 
GoodQQ 
(QQ 
)QQ 
{RR 
Good1SS 
(SS 
)SS 
;SS 
Good2TT 
(TT 
)TT 
;TT 
}UU 
}WW 
}XX &
¸C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE440_Expected_Behavior_Violation\CWE440_Expected_Behavior_Violation__basic_Exception_15.cs
	namespace 	
	testcases
 
. .
"CWE440_Expected_Behavior_Violation 6
{ 
class B
6CWE440_Expected_Behavior_Violation__basic_Exception_15 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
switch 
( 
$num 
) 
{ 	
case 
$num 
: 
IO 
. 
	WriteLine 
( 
$str 3
)3 4
;4 5
string 
	userInput 
= 
Console &
.& '
ReadLine' /
(/ 0
)0 1
;1 2
string   
x   
=   
string   
.   
Format   $
(  $ %
$str  % /
,  / 0
	userInput  1 :
)  : ;
;  ; <
break!! 
;!! 
default"" 
:"" 
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
$str$$ /
)$$/ 0
;$$0 1
break%% 
;%% 
}&& 	
}'' 
private++ 
void++ 
Good1++ 
(++ 
)++ 
{,, 
switch-- 
(-- 
$num-- 
)-- 
{.. 	
case// 
$num// 
:// 
IO11 
.11 
	WriteLine11 
(11 
$str11 /
)11/ 0
;110 1
break22 
;22 
default33 
:33 
IO44 
.44 
	WriteLine44 
(44 
$str44 3
)443 4
;444 5
string55 
	userInput55 
=55 
Console55 &
.55& '
ReadLine55' /
(55/ 0
)550 1
;551 2
try77 
{88 
int99 
.99 
Parse99 
(99 
	userInput99 #
)99# $
;99$ %
string:: 
x:: 
=:: 
string:: !
.::! "
Format::" (
(::( )
$str::) 3
,::3 4
	userInput::5 >
)::> ?
;::? @
};; 
catch<< 
(<< 
FormatException<< "
formatException<<# 2
)<<2 3
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
$str>>2 J
,>>J K
formatException>>L [
)>>[ \
;>>\ ]
}?? 
break@@ 
;@@ 
}AA 	
}BB 
privateEE 
voidEE 
Good2EE 
(EE 
)EE 
{FF 
switchGG 
(GG 
$numGG 
)GG 
{HH 	
caseII 
$numII 
:II 
IOJJ 
.JJ 
	WriteLineJJ 
(JJ 
$strJJ 3
)JJ3 4
;JJ4 5
stringKK 
	userInputKK 
=KK 
ConsoleKK &
.KK& '
ReadLineKK' /
(KK/ 0
)KK0 1
;KK1 2
tryMM 
{NN 
intOO 
.OO 
ParseOO 
(OO 
	userInputOO #
)OO# $
;OO$ %
stringPP 
xPP 
=PP 
stringPP !
.PP! "
FormatPP" (
(PP( )
$strPP) 3
,PP3 4
	userInputPP5 >
)PP> ?
;PP? @
}QQ 
catchRR 
(RR 
FormatExceptionRR "
formatExceptionRR# 2
)RR2 3
{SS 
IOTT 
.TT 
LoggerTT 
.TT 
LogTT 
(TT 
NLogTT "
.TT" #
LogLevelTT# +
.TT+ ,
WarnTT, 0
,TT0 1
$strTT2 J
,TTJ K
formatExceptionTTL [
)TT[ \
;TT\ ]
}UU 
breakVV 
;VV 
defaultWW 
:WW 
IOYY 
.YY 
	WriteLineYY 
(YY 
$strYY /
)YY/ 0
;YY0 1
breakZZ 
;ZZ 
}[[ 	
}\\ 
public^^ 

override^^ 
void^^ 
Good^^ 
(^^ 
)^^ 
{__ 
Good1`` 
(`` 
)`` 
;`` 
Good2aa 
(aa 
)aa 
;aa 
}bb 
}dd 
}ee Ç
¸C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE440_Expected_Behavior_Violation\CWE440_Expected_Behavior_Violation__basic_Exception_16.cs
	namespace 	
	testcases
 
. .
"CWE440_Expected_Behavior_Violation 6
{ 
class B
6CWE440_Expected_Behavior_Violation__basic_Exception_16 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
while 
( 
true 
) 
{ 	
IO 
. 
	WriteLine 
( 
$str 3
)3 4
;4 5
string 
	userInput 
= 
Console &
.& '
ReadLine' /
(/ 0
)0 1
;1 2
string 
x 
= 
string 
. 
Format $
($ %
$str% /
,/ 0
	userInput1 :
): ;
;; <
break   
;   
}!! 	
}"" 
private&& 
void&& 
Good1&& 
(&& 
)&& 
{'' 
while(( 
((( 
true(( 
)(( 
{)) 	
IO** 
.** 
	WriteLine** 
(** 
$str** 3
)**3 4
;**4 5
string++ 
	userInput++ 
=++ 
Console++ &
.++& '
ReadLine++' /
(++/ 0
)++0 1
;++1 2
try-- 
{.. 
int// 
.// 
Parse// 
(// 
	userInput// #
)//# $
;//$ %
string00 
x00 
=00 
string00 !
.00! "
Format00" (
(00( )
$str00) 3
,003 4
	userInput005 >
)00> ?
;00? @
}11 
catch22 
(22 
FormatException22 "
formatException22# 2
)222 3
{33 
IO44 
.44 
Logger44 
.44 
Log44 
(44 
NLog44 "
.44" #
LogLevel44# +
.44+ ,
Warn44, 0
,440 1
$str442 J
,44J K
formatException44L [
)44[ \
;44\ ]
}55 
break66 
;66 
}77 	
}88 
public:: 

override:: 
void:: 
Good:: 
(:: 
):: 
{;; 
Good1<< 
(<< 
)<< 
;<< 
}== 
}?? 
}@@ ·
¸C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE440_Expected_Behavior_Violation\CWE440_Expected_Behavior_Violation__basic_Exception_17.cs
	namespace 	
	testcases
 
. .
"CWE440_Expected_Behavior_Violation 6
{ 
class B
6CWE440_Expected_Behavior_Violation__basic_Exception_17 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
for 
( 
int 
j 
= 
$num 
; 
j 
< 
$num 
; 
j 
++ !
)! "
{ 	
IO 
. 
	WriteLine 
( 
$str 3
)3 4
;4 5
string 
	userInput 
= 
Console &
.& '
ReadLine' /
(/ 0
)0 1
;1 2
string 
x 
= 
string 
. 
Format $
($ %
$str% /
,/ 0
	userInput1 :
): ;
;; <
}   	
}!! 
private%% 
void%% 
Good1%% 
(%% 
)%% 
{&& 
for'' 
('' 
int'' 
k'' 
='' 
$num'' 
;'' 
k'' 
<'' 
$num'' 
;'' 
k'' 
++'' !
)''! "
{(( 	
IO)) 
.)) 
	WriteLine)) 
()) 
$str)) 3
)))3 4
;))4 5
string** 
	userInput** 
=** 
Console** &
.**& '
ReadLine**' /
(**/ 0
)**0 1
;**1 2
try,, 
{-- 
int.. 
... 
Parse.. 
(.. 
	userInput.. #
)..# $
;..$ %
string// 
x// 
=// 
string// !
.//! "
Format//" (
(//( )
$str//) 3
,//3 4
	userInput//5 >
)//> ?
;//? @
}00 
catch11 
(11 
FormatException11 "
formatException11# 2
)112 3
{22 
IO33 
.33 
Logger33 
.33 
Log33 
(33 
NLog33 "
.33" #
LogLevel33# +
.33+ ,
Warn33, 0
,330 1
$str332 J
,33J K
formatException33L [
)33[ \
;33\ ]
}44 
}55 	
}66 
public88 

override88 
void88 
Good88 
(88 
)88 
{99 
Good1:: 
(:: 
):: 
;:: 
};; 
}== 
}>> °J
C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE440_Expected_Behavior_Violation\Program.cs
	namespace		 	
	testcases		
 
.		 .
"CWE440_Expected_Behavior_Violation		 6
{

 
class 
Program 
{ 
static 
void	 
Main 
( 
string 
[ 
] 
args  
)  !
{" #
if 
( 
args 

.
 
Any 
( 
) 
) 
{ 
if 
( 
args 
[ 
$num 
] 
. 
Equals 
( 
$str 
, 
StringComparison ,
., -
OrdinalIgnoreCase- >
)> ?
||@ B
args 
[ 
$num 
] 
. 
Equals !
(! "
$str" *
,* +
StringComparison, <
.< =
OrdinalIgnoreCase= N
)N O
)O P
{Q R
Console 
. 
	WriteLine 
( 
$str R
+S T
$str b
)b c
;c d
System 
. 
Environment 
. 
Exit 
( 
$num 
) 
;  
} 
foreach"" 
("" 
string"" 
	className"" 
in""  
args""! %
)""% &
{""' (
try$$ 
{$$	 

Type** 

myClass** 
=** 
Type** 
.** 
GetType** !
(**! "
	className**" +
)**+ ,
;**, -
object++ 
myObject++ 
=++ 
	Activator++ !
.++! "
CreateInstance++" 0
(++0 1
myClass++1 8
)++8 9
;++9 :
myClass,, 
.,, 
InvokeMember,, 
(,, 
$str,, $
,,,$ %
BindingFlags-- 
.-- 
InvokeMethod--  
|--! "
BindingFlags--# /
.--/ 0
Instance--0 8
|--9 :
BindingFlags--; G
.--G H
Public--H N
,--N O
null.. 
,.. 
myObject// 
,// 
new00 

object00 
[00 
]00 
{00 
	className00 
}00  !
)00! "
;00" #
}22 
catch22 
(22 
	Exception22 
ex22 
)22 
{22 
Console44 
.44 
	WriteLine44 
(44 
$str44 7
+448 9
	className44: C
)44C D
;44D E
Console55 
.55 
	WriteLine55 
(55 
ex55 
.55 

StackTrace55 %
)55% &
;55& '
}77 
Console99 
.99 
	WriteLine99 
(99 
$str99 
)99 
;99 
};; 
}== 
else== 	
{==
 
RunTestCWE1CC 
(CC 
)CC 
;CC 
RunTestCWE2DD 
(DD 
)DD 
;DD 
RunTestCWE3EE 
(EE 
)EE 
;EE 
RunTestCWE4FF 
(FF 
)FF 
;FF 
RunTestCWE5GG 
(GG 
)GG 
;GG 
RunTestCWE6HH 
(HH 
)HH 
;HH 
RunTestCWE7II 
(II 
)II 
;II 
RunTestCWE8JJ 
(JJ 
)JJ 
;JJ 
RunTestCWE9KK 
(KK 
)KK 
;KK 
}LL 
}MM 
privateOO 
staticOO	 
voidOO 
RunTestCWE1OO  
(OO  !
)OO! "
{OO# $
}SS 
privateUU 
staticUU	 
voidUU 
RunTestCWE2UU  
(UU  !
)UU! "
{UU# $
}YY 
private[[ 
static[[	 
void[[ 
RunTestCWE3[[  
([[  !
)[[! "
{[[# $
}__ 
privateaa 
staticaa	 
voidaa 
RunTestCWE4aa  
(aa  !
)aa! "
{aa# $
(cc 
newcc B
6CWE440_Expected_Behavior_Violation__basic_Exception_01cc >
(cc> ?
)cc? @
)cc@ A
.ccA B
RunTestccB I
(ccI J
$str	ccJ 
)
cc 
;
cc 
(dd 
newdd B
6CWE440_Expected_Behavior_Violation__basic_Exception_02dd >
(dd> ?
)dd? @
)dd@ A
.ddA B
RunTestddB I
(ddI J
$str	ddJ 
)
dd 
;
dd 
(ee 
newee B
6CWE440_Expected_Behavior_Violation__basic_Exception_03ee >
(ee> ?
)ee? @
)ee@ A
.eeA B
RunTesteeB I
(eeI J
$str	eeJ 
)
ee 
;
ee 
(ff 
newff B
6CWE440_Expected_Behavior_Violation__basic_Exception_04ff >
(ff> ?
)ff? @
)ff@ A
.ffA B
RunTestffB I
(ffI J
$str	ffJ 
)
ff 
;
ff 
(gg 
newgg B
6CWE440_Expected_Behavior_Violation__basic_Exception_05gg >
(gg> ?
)gg? @
)gg@ A
.ggA B
RunTestggB I
(ggI J
$str	ggJ 
)
gg 
;
gg 
(hh 
newhh B
6CWE440_Expected_Behavior_Violation__basic_Exception_06hh >
(hh> ?
)hh? @
)hh@ A
.hhA B
RunTesthhB I
(hhI J
$str	hhJ 
)
hh 
;
hh 
(ii 
newii B
6CWE440_Expected_Behavior_Violation__basic_Exception_07ii >
(ii> ?
)ii? @
)ii@ A
.iiA B
RunTestiiB I
(iiI J
$str	iiJ 
)
ii 
;
ii 
(jj 
newjj B
6CWE440_Expected_Behavior_Violation__basic_Exception_08jj >
(jj> ?
)jj? @
)jj@ A
.jjA B
RunTestjjB I
(jjI J
$str	jjJ 
)
jj 
;
jj 
(kk 
newkk B
6CWE440_Expected_Behavior_Violation__basic_Exception_09kk >
(kk> ?
)kk? @
)kk@ A
.kkA B
RunTestkkB I
(kkI J
$str	kkJ 
)
kk 
;
kk 
(ll 
newll B
6CWE440_Expected_Behavior_Violation__basic_Exception_10ll >
(ll> ?
)ll? @
)ll@ A
.llA B
RunTestllB I
(llI J
$str	llJ 
)
ll 
;
ll 
(mm 
newmm B
6CWE440_Expected_Behavior_Violation__basic_Exception_11mm >
(mm> ?
)mm? @
)mm@ A
.mmA B
RunTestmmB I
(mmI J
$str	mmJ 
)
mm 
;
mm 
(nn 
newnn B
6CWE440_Expected_Behavior_Violation__basic_Exception_12nn >
(nn> ?
)nn? @
)nn@ A
.nnA B
RunTestnnB I
(nnI J
$str	nnJ 
)
nn 
;
nn 
(oo 
newoo B
6CWE440_Expected_Behavior_Violation__basic_Exception_13oo >
(oo> ?
)oo? @
)oo@ A
.ooA B
RunTestooB I
(ooI J
$str	ooJ 
)
oo 
;
oo 
(pp 
newpp B
6CWE440_Expected_Behavior_Violation__basic_Exception_14pp >
(pp> ?
)pp? @
)pp@ A
.ppA B
RunTestppB I
(ppI J
$str	ppJ 
)
pp 
;
pp 
(qq 
newqq B
6CWE440_Expected_Behavior_Violation__basic_Exception_15qq >
(qq> ?
)qq? @
)qq@ A
.qqA B
RunTestqqB I
(qqI J
$str	qqJ 
)
qq 
;
qq 
(rr 
newrr B
6CWE440_Expected_Behavior_Violation__basic_Exception_16rr >
(rr> ?
)rr? @
)rr@ A
.rrA B
RunTestrrB I
(rrI J
$str	rrJ 
)
rr 
;
rr 
(ss 
newss B
6CWE440_Expected_Behavior_Violation__basic_Exception_17ss >
(ss> ?
)ss? @
)ss@ A
.ssA B
RunTestssB I
(ssI J
$str	ssJ 
)
ss 
;
ss 
}uu 
privateww 
staticww	 
voidww 
RunTestCWE5ww  
(ww  !
)ww! "
{ww# $
}{{ 
private}} 
static}}	 
void}} 
RunTestCWE6}}  
(}}  !
)}}! "
{}}# $
}
 
private
 
static
	 
void
 
RunTestCWE7
  
(
  !
)
! "
{
# $
}
 
private
 
static
	 
void
 
RunTestCWE8
  
(
  !
)
! "
{
# $
}
 
private
 
static
	 
void
 
RunTestCWE9
  
(
  !
)
! "
{
# $
}
 
} 
} Å
C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE440_Expected_Behavior_Violation\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str =
)= >
]> ?
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str ?
)? @
]@ A
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *